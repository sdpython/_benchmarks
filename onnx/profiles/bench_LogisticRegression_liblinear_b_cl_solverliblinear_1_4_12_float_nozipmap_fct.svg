<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>add (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(240,152,50)"/><text x="13.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 1.00%)</title><rect x="10" y="868" width="11" height="15" fill="rgb(226,2,32)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 1.00%)</title><rect x="10" y="884" width="11" height="15" fill="rgb(236,206,5)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 1.00%)</title><rect x="10" y="900" width="11" height="15" fill="rgb(205,223,22)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(246,104,20)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(208,135,35)"/><text x="18.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(236,115,37)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="15" y="964" width="6" height="15" fill="rgb(245,134,47)"/><text x="18.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="15" y="980" width="6" height="15" fill="rgb(222,225,8)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.50%)</title><rect x="15" y="996" width="6" height="15" fill="rgb(250,152,37)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.50%)</title><rect x="15" y="1012" width="6" height="15" fill="rgb(231,169,1)"/><text x="18.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.50%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(208,184,7)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.50%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(211,150,22)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="21" y="868" width="6" height="15" fill="rgb(240,92,37)"/><text x="24.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="21" y="884" width="6" height="15" fill="rgb(222,18,35)"/><text x="24.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="21" y="900" width="6" height="15" fill="rgb(249,202,24)"/><text x="24.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="21" y="916" width="6" height="15" fill="rgb(221,50,45)"/><text x="24.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.50%)</title><rect x="21" y="932" width="6" height="15" fill="rgb(217,98,26)"/><text x="24.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.50%)</title><rect x="21" y="948" width="6" height="15" fill="rgb(244,11,27)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.50%)</title><rect x="21" y="964" width="6" height="15" fill="rgb(253,137,7)"/><text x="24.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 2.00%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(211,108,27)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(205,223,10)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(238,217,37)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(250,35,35)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(240,46,32)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(219,141,11)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 2.00%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(223,122,0)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(234,212,30)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(232,141,27)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(219,110,9)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(254,183,45)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(219,66,20)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 2.00%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(242,129,38)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(248,34,36)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(211,21,12)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(250,221,23)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(250,78,53)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(223,101,54)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 2.00%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(205,123,3)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(213,94,26)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(212,179,40)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="628" width="23" height="15" fill="rgb(239,79,53)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="644" width="23" height="15" fill="rgb(241,179,53)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="660" width="23" height="15" fill="rgb(246,187,38)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="676" width="23" height="15" fill="rgb(223,210,49)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="10" y="692" width="23" height="15" fill="rgb(236,173,52)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="708" width="23" height="15" fill="rgb(250,87,24)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 2.00%)</title><rect x="10" y="724" width="23" height="15" fill="rgb(252,107,24)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="740" width="23" height="15" fill="rgb(226,153,54)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="756" width="23" height="15" fill="rgb(219,81,37)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="772" width="23" height="15" fill="rgb(246,93,26)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="10" y="788" width="23" height="15" fill="rgb(240,85,15)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="10" y="804" width="23" height="15" fill="rgb(248,154,30)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 2.00%)</title><rect x="10" y="820" width="23" height="15" fill="rgb(229,184,1)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="836" width="6" height="15" fill="rgb(248,103,9)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="852" width="6" height="15" fill="rgb(218,57,34)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="868" width="6" height="15" fill="rgb(239,77,36)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="884" width="6" height="15" fill="rgb(233,14,6)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="900" width="6" height="15" fill="rgb(229,176,45)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.50%)</title><rect x="27" y="916" width="6" height="15" fill="rgb(248,131,6)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="932" width="6" height="15" fill="rgb(220,78,31)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="948" width="6" height="15" fill="rgb(239,203,26)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="964" width="6" height="15" fill="rgb(226,10,1)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="980" width="6" height="15" fill="rgb(214,217,5)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="996" width="6" height="15" fill="rgb(218,213,4)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.50%)</title><rect x="27" y="1012" width="6" height="15" fill="rgb(237,14,20)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1028" width="6" height="15" fill="rgb(207,59,26)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1044" width="6" height="15" fill="rgb(206,177,35)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1060" width="6" height="15" fill="rgb(225,36,13)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1076" width="6" height="15" fill="rgb(225,78,4)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1092" width="6" height="15" fill="rgb(216,19,13)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.50%)</title><rect x="27" y="1108" width="6" height="15" fill="rgb(250,205,16)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1124" width="6" height="15" fill="rgb(237,123,6)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1140" width="6" height="15" fill="rgb(213,226,9)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1156" width="6" height="15" fill="rgb(221,162,48)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1172" width="6" height="15" fill="rgb(233,54,15)"/><text x="30.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1188" width="6" height="15" fill="rgb(224,227,12)"/><text x="30.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1204" width="6" height="15" fill="rgb(221,70,37)"/><text x="30.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1220" width="6" height="15" fill="rgb(238,194,12)"/><text x="30.00" y="1230.50"></text></g><g><title>&lt;module&gt; (email/header.py) (1 samples, 0.50%)</title><rect x="27" y="1236" width="6" height="15" fill="rgb(213,103,19)"/><text x="30.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1252" width="6" height="15" fill="rgb(234,11,27)"/><text x="30.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1268" width="6" height="15" fill="rgb(216,181,18)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1284" width="6" height="15" fill="rgb(230,174,24)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1300" width="6" height="15" fill="rgb(229,181,16)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1316" width="6" height="15" fill="rgb(226,7,23)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1332" width="6" height="15" fill="rgb(222,110,38)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1348" width="6" height="15" fill="rgb(221,108,16)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (email/charset.py) (1 samples, 0.50%)</title><rect x="27" y="1364" width="6" height="15" fill="rgb(212,56,49)"/><text x="30.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1380" width="6" height="15" fill="rgb(238,0,15)"/><text x="30.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1396" width="6" height="15" fill="rgb(254,213,4)"/><text x="30.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1412" width="6" height="15" fill="rgb(254,208,7)"/><text x="30.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1428" width="6" height="15" fill="rgb(217,47,24)"/><text x="30.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1444" width="6" height="15" fill="rgb(222,61,22)"/><text x="30.00" y="1454.50"></text></g><g><title>&lt;module&gt; (email/encoders.py) (1 samples, 0.50%)</title><rect x="27" y="1460" width="6" height="15" fill="rgb(254,13,25)"/><text x="30.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1476" width="6" height="15" fill="rgb(234,101,50)"/><text x="30.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1492" width="6" height="15" fill="rgb(238,139,28)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="27" y="1508" width="6" height="15" fill="rgb(248,165,43)"/><text x="30.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1524" width="6" height="15" fill="rgb(215,136,31)"/><text x="30.00" y="1534.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1540" width="6" height="15" fill="rgb(231,221,47)"/><text x="30.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1556" width="6" height="15" fill="rgb(206,193,5)"/><text x="30.00" y="1566.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="27" y="1572" width="6" height="15" fill="rgb(233,136,51)"/><text x="30.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="916" width="6" height="15" fill="rgb(225,9,52)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="932" width="6" height="15" fill="rgb(238,20,40)"/><text x="36.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="948" width="6" height="15" fill="rgb(233,4,13)"/><text x="36.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="33" y="964" width="6" height="15" fill="rgb(223,15,19)"/><text x="36.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="980" width="6" height="15" fill="rgb(223,81,0)"/><text x="36.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.50%)</title><rect x="33" y="996" width="6" height="15" fill="rgb(243,223,32)"/><text x="36.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1012" width="6" height="15" fill="rgb(228,121,48)"/><text x="36.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1028" width="6" height="15" fill="rgb(208,21,54)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1044" width="6" height="15" fill="rgb(245,170,51)"/><text x="36.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1060" width="6" height="15" fill="rgb(244,81,36)"/><text x="36.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1076" width="6" height="15" fill="rgb(215,5,42)"/><text x="36.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="33" y="1092" width="6" height="15" fill="rgb(249,58,47)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1108" width="6" height="15" fill="rgb(213,228,20)"/><text x="36.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.50%)</title><rect x="33" y="1124" width="6" height="15" fill="rgb(254,39,42)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1140" width="6" height="15" fill="rgb(223,216,21)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1156" width="6" height="15" fill="rgb(250,108,11)"/><text x="36.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1172" width="6" height="15" fill="rgb(250,198,14)"/><text x="36.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="33" y="1188" width="6" height="15" fill="rgb(252,163,25)"/><text x="36.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1204" width="6" height="15" fill="rgb(205,208,7)"/><text x="36.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.50%)</title><rect x="33" y="1220" width="6" height="15" fill="rgb(233,81,40)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1236" width="6" height="15" fill="rgb(232,108,8)"/><text x="36.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1252" width="6" height="15" fill="rgb(235,133,42)"/><text x="36.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1268" width="6" height="15" fill="rgb(233,36,1)"/><text x="36.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="33" y="1284" width="6" height="15" fill="rgb(236,6,42)"/><text x="36.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1300" width="6" height="15" fill="rgb(211,110,25)"/><text x="36.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/slsqp.py) (1 samples, 0.50%)</title><rect x="33" y="1316" width="6" height="15" fill="rgb(207,213,21)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1332" width="6" height="15" fill="rgb(216,84,3)"/><text x="36.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1348" width="6" height="15" fill="rgb(210,190,37)"/><text x="36.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1364" width="6" height="15" fill="rgb(225,51,53)"/><text x="36.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1380" width="6" height="15" fill="rgb(232,121,38)"/><text x="36.00" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="33" y="1396" width="6" height="15" fill="rgb(207,224,33)"/><text x="36.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="33" y="1412" width="6" height="15" fill="rgb(211,12,5)"/><text x="36.00" y="1422.50"></text></g><g><title>0x7f5e24686baa (?) (1 samples, 0.50%)</title><rect x="33" y="1428" width="6" height="15" fill="rgb(244,176,39)"/><text x="36.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="500" width="12" height="15" fill="rgb(236,225,24)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="516" width="12" height="15" fill="rgb(229,69,2)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="532" width="12" height="15" fill="rgb(254,166,32)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="33" y="548" width="12" height="15" fill="rgb(247,80,26)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="564" width="12" height="15" fill="rgb(221,178,40)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 1.00%)</title><rect x="33" y="580" width="12" height="15" fill="rgb(248,43,48)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="596" width="12" height="15" fill="rgb(210,100,3)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="612" width="12" height="15" fill="rgb(212,26,8)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="628" width="12" height="15" fill="rgb(227,134,11)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="33" y="644" width="12" height="15" fill="rgb(244,41,35)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="660" width="12" height="15" fill="rgb(234,222,47)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 1.00%)</title><rect x="33" y="676" width="12" height="15" fill="rgb(215,33,0)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="692" width="12" height="15" fill="rgb(253,109,39)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="708" width="12" height="15" fill="rgb(254,206,50)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="724" width="12" height="15" fill="rgb(232,113,40)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="33" y="740" width="12" height="15" fill="rgb(217,187,29)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="756" width="12" height="15" fill="rgb(252,36,32)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 1.00%)</title><rect x="33" y="772" width="12" height="15" fill="rgb(218,63,25)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="788" width="12" height="15" fill="rgb(229,48,52)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="804" width="12" height="15" fill="rgb(243,127,27)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="820" width="12" height="15" fill="rgb(253,47,8)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="836" width="12" height="15" fill="rgb(220,116,36)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="852" width="12" height="15" fill="rgb(227,73,28)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="33" y="868" width="12" height="15" fill="rgb(246,114,38)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="33" y="884" width="12" height="15" fill="rgb(251,165,11)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 1.00%)</title><rect x="33" y="900" width="12" height="15" fill="rgb(206,56,38)"/><text x="36.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="916" width="6" height="15" fill="rgb(218,79,13)"/><text x="42.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="932" width="6" height="15" fill="rgb(227,56,22)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="948" width="6" height="15" fill="rgb(217,71,44)"/><text x="42.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="964" width="6" height="15" fill="rgb(210,16,23)"/><text x="42.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="980" width="6" height="15" fill="rgb(254,124,23)"/><text x="42.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="39" y="996" width="6" height="15" fill="rgb(250,195,48)"/><text x="42.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="39" y="1012" width="6" height="15" fill="rgb(216,146,2)"/><text x="42.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.50%)</title><rect x="39" y="1028" width="6" height="15" fill="rgb(209,21,49)"/><text x="42.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.50%)</title><rect x="39" y="1044" width="6" height="15" fill="rgb(237,218,22)"/><text x="42.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.50%)</title><rect x="39" y="1060" width="6" height="15" fill="rgb(232,126,31)"/><text x="42.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="10" y="196" width="41" height="15" fill="rgb(253,15,34)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="10" y="212" width="41" height="15" fill="rgb(209,113,46)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="10" y="228" width="41" height="15" fill="rgb(220,156,3)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="10" y="244" width="41" height="15" fill="rgb(244,28,20)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.50%)</title><rect x="10" y="260" width="41" height="15" fill="rgb(241,123,2)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="10" y="276" width="41" height="15" fill="rgb(234,122,31)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 1.50%)</title><rect x="33" y="292" width="18" height="15" fill="rgb(224,176,1)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="308" width="18" height="15" fill="rgb(220,11,38)"/><text x="36.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="324" width="18" height="15" fill="rgb(242,155,17)"/><text x="36.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="340" width="18" height="15" fill="rgb(222,95,45)"/><text x="36.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.50%)</title><rect x="33" y="356" width="18" height="15" fill="rgb(242,38,26)"/><text x="36.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="372" width="18" height="15" fill="rgb(224,144,12)"/><text x="36.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 1.50%)</title><rect x="33" y="388" width="18" height="15" fill="rgb(227,178,1)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="404" width="18" height="15" fill="rgb(235,64,48)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="420" width="18" height="15" fill="rgb(227,128,11)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="436" width="18" height="15" fill="rgb(205,185,15)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.50%)</title><rect x="33" y="452" width="18" height="15" fill="rgb(212,12,5)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="33" y="468" width="18" height="15" fill="rgb(232,105,1)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 1.50%)</title><rect x="33" y="484" width="18" height="15" fill="rgb(205,133,4)"/><text x="36.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="500" width="6" height="15" fill="rgb(205,80,4)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="516" width="6" height="15" fill="rgb(231,25,12)"/><text x="48.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="532" width="6" height="15" fill="rgb(205,103,13)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="548" width="6" height="15" fill="rgb(227,98,23)"/><text x="48.00" y="558.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="564" width="6" height="15" fill="rgb(216,117,28)"/><text x="48.00" y="574.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(253,229,40)"/><text x="48.00" y="590.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(216,128,35)"/><text x="48.00" y="606.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(240,143,9)"/><text x="48.00" y="622.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(233,72,39)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1124" width="6" height="15" fill="rgb(207,226,44)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1140" width="6" height="15" fill="rgb(224,26,25)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1156" width="6" height="15" fill="rgb(250,82,22)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="51" y="1172" width="6" height="15" fill="rgb(212,8,52)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1188" width="6" height="15" fill="rgb(224,122,50)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.50%)</title><rect x="51" y="1204" width="6" height="15" fill="rgb(234,23,12)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1220" width="6" height="15" fill="rgb(241,48,31)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1236" width="6" height="15" fill="rgb(205,40,26)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1252" width="6" height="15" fill="rgb(209,44,53)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="51" y="1268" width="6" height="15" fill="rgb(235,224,33)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="51" y="1284" width="6" height="15" fill="rgb(227,51,19)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.50%)</title><rect x="51" y="1300" width="6" height="15" fill="rgb(208,24,46)"/><text x="54.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.50%)</title><rect x="51" y="1316" width="6" height="15" fill="rgb(240,51,49)"/><text x="54.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.50%)</title><rect x="51" y="1332" width="6" height="15" fill="rgb(220,170,38)"/><text x="54.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.50%)</title><rect x="51" y="1348" width="6" height="15" fill="rgb(242,154,11)"/><text x="54.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.50%)</title><rect x="51" y="1364" width="6" height="15" fill="rgb(225,70,13)"/><text x="54.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.50%)</title><rect x="51" y="1380" width="6" height="15" fill="rgb(217,93,54)"/><text x="54.00" y="1390.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.50%)</title><rect x="51" y="1396" width="6" height="15" fill="rgb(240,229,49)"/><text x="54.00" y="1406.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 1.00%)</title><rect x="57" y="1588" width="12" height="15" fill="rgb(206,130,42)"/><text x="60.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.50%)</title><rect x="63" y="1604" width="6" height="15" fill="rgb(215,109,26)"/><text x="66.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.50%)</title><rect x="63" y="1620" width="6" height="15" fill="rgb(213,229,42)"/><text x="66.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.50%)</title><rect x="63" y="1636" width="6" height="15" fill="rgb(245,112,53)"/><text x="66.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.50%)</title><rect x="63" y="1652" width="6" height="15" fill="rgb(205,19,22)"/><text x="66.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.50%)</title><rect x="63" y="1668" width="6" height="15" fill="rgb(211,213,19)"/><text x="66.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="484" width="23" height="15" fill="rgb(216,99,34)"/><text x="54.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="500" width="23" height="15" fill="rgb(234,16,10)"/><text x="54.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="516" width="23" height="15" fill="rgb(228,198,49)"/><text x="54.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="532" width="23" height="15" fill="rgb(223,50,20)"/><text x="54.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="548" width="23" height="15" fill="rgb(228,162,19)"/><text x="54.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="564" width="23" height="15" fill="rgb(249,213,14)"/><text x="54.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 2.00%)</title><rect x="51" y="580" width="23" height="15" fill="rgb(226,215,2)"/><text x="54.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="596" width="23" height="15" fill="rgb(238,97,7)"/><text x="54.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="612" width="23" height="15" fill="rgb(217,162,11)"/><text x="54.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="628" width="23" height="15" fill="rgb(218,73,18)"/><text x="54.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="644" width="23" height="15" fill="rgb(240,152,17)"/><text x="54.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="660" width="23" height="15" fill="rgb(242,89,2)"/><text x="54.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 2.00%)</title><rect x="51" y="676" width="23" height="15" fill="rgb(251,6,24)"/><text x="54.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="692" width="23" height="15" fill="rgb(248,71,40)"/><text x="54.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="708" width="23" height="15" fill="rgb(253,141,18)"/><text x="54.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="724" width="23" height="15" fill="rgb(211,82,52)"/><text x="54.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="740" width="23" height="15" fill="rgb(244,165,31)"/><text x="54.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="756" width="23" height="15" fill="rgb(254,175,39)"/><text x="54.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 2.00%)</title><rect x="51" y="772" width="23" height="15" fill="rgb(210,49,49)"/><text x="54.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="788" width="23" height="15" fill="rgb(205,202,2)"/><text x="54.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="804" width="23" height="15" fill="rgb(223,21,16)"/><text x="54.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="820" width="23" height="15" fill="rgb(227,10,45)"/><text x="54.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="836" width="23" height="15" fill="rgb(243,62,17)"/><text x="54.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="852" width="23" height="15" fill="rgb(218,81,30)"/><text x="54.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 2.00%)</title><rect x="51" y="868" width="23" height="15" fill="rgb(208,109,20)"/><text x="54.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="884" width="23" height="15" fill="rgb(236,148,44)"/><text x="54.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="900" width="23" height="15" fill="rgb(207,127,37)"/><text x="54.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="916" width="23" height="15" fill="rgb(219,102,37)"/><text x="54.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="932" width="23" height="15" fill="rgb(240,54,6)"/><text x="54.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="948" width="23" height="15" fill="rgb(210,52,50)"/><text x="54.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="964" width="23" height="15" fill="rgb(240,201,31)"/><text x="54.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="980" width="23" height="15" fill="rgb(216,206,18)"/><text x="54.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="996" width="23" height="15" fill="rgb(213,92,18)"/><text x="54.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 2.00%)</title><rect x="51" y="1012" width="23" height="15" fill="rgb(228,129,10)"/><text x="54.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="1028" width="23" height="15" fill="rgb(233,184,53)"/><text x="54.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="1044" width="23" height="15" fill="rgb(239,189,17)"/><text x="54.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="1060" width="23" height="15" fill="rgb(224,37,45)"/><text x="54.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.00%)</title><rect x="51" y="1076" width="23" height="15" fill="rgb(240,103,28)"/><text x="54.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.00%)</title><rect x="51" y="1092" width="23" height="15" fill="rgb(206,134,21)"/><text x="54.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 2.00%)</title><rect x="51" y="1108" width="23" height="15" fill="rgb(248,159,20)"/><text x="54.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1124" width="17" height="15" fill="rgb(212,98,10)"/><text x="60.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1140" width="17" height="15" fill="rgb(249,45,51)"/><text x="60.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1156" width="17" height="15" fill="rgb(210,206,12)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1172" width="17" height="15" fill="rgb(234,203,27)"/><text x="60.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1188" width="17" height="15" fill="rgb(252,14,48)"/><text x="60.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.50%)</title><rect x="57" y="1204" width="17" height="15" fill="rgb(233,101,45)"/><text x="60.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1220" width="17" height="15" fill="rgb(217,47,15)"/><text x="60.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.50%)</title><rect x="57" y="1236" width="17" height="15" fill="rgb(225,199,10)"/><text x="60.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1252" width="17" height="15" fill="rgb(248,62,48)"/><text x="60.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1268" width="17" height="15" fill="rgb(235,207,13)"/><text x="60.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1284" width="17" height="15" fill="rgb(207,140,1)"/><text x="60.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1300" width="17" height="15" fill="rgb(243,61,30)"/><text x="60.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1316" width="17" height="15" fill="rgb(224,121,54)"/><text x="60.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.50%)</title><rect x="57" y="1332" width="17" height="15" fill="rgb(234,205,47)"/><text x="60.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1348" width="17" height="15" fill="rgb(207,21,47)"/><text x="60.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.50%)</title><rect x="57" y="1364" width="17" height="15" fill="rgb(214,124,30)"/><text x="60.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1380" width="17" height="15" fill="rgb(218,52,35)"/><text x="60.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1396" width="17" height="15" fill="rgb(233,24,40)"/><text x="60.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1412" width="17" height="15" fill="rgb(215,23,46)"/><text x="60.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.50%)</title><rect x="57" y="1428" width="17" height="15" fill="rgb(240,6,23)"/><text x="60.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.50%)</title><rect x="57" y="1444" width="17" height="15" fill="rgb(220,213,32)"/><text x="60.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.50%)</title><rect x="57" y="1460" width="17" height="15" fill="rgb(249,32,41)"/><text x="60.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.50%)</title><rect x="57" y="1476" width="17" height="15" fill="rgb(222,213,4)"/><text x="60.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.50%)</title><rect x="57" y="1492" width="17" height="15" fill="rgb(247,195,2)"/><text x="60.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 1.50%)</title><rect x="57" y="1508" width="17" height="15" fill="rgb(236,95,39)"/><text x="60.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 1.50%)</title><rect x="57" y="1524" width="17" height="15" fill="rgb(205,128,22)"/><text x="60.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.50%)</title><rect x="57" y="1540" width="17" height="15" fill="rgb(235,146,35)"/><text x="60.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.50%)</title><rect x="57" y="1556" width="17" height="15" fill="rgb(231,167,47)"/><text x="60.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.50%)</title><rect x="57" y="1572" width="17" height="15" fill="rgb(246,121,3)"/><text x="60.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.50%)</title><rect x="69" y="1588" width="5" height="15" fill="rgb(232,72,40)"/><text x="72.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.50%)</title><rect x="69" y="1604" width="5" height="15" fill="rgb(206,175,54)"/><text x="72.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/__init__.py) (1 samples, 0.50%)</title><rect x="74" y="724" width="6" height="15" fill="rgb(223,27,47)"/><text x="77.00" y="734.50"></text></g><g><title>compile (re.py) (1 samples, 0.50%)</title><rect x="74" y="740" width="6" height="15" fill="rgb(251,26,7)"/><text x="77.00" y="750.50"></text></g><g><title>_compile (re.py) (1 samples, 0.50%)</title><rect x="74" y="756" width="6" height="15" fill="rgb(243,188,14)"/><text x="77.00" y="766.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.50%)</title><rect x="74" y="772" width="6" height="15" fill="rgb(207,53,24)"/><text x="77.00" y="782.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.50%)</title><rect x="74" y="788" width="6" height="15" fill="rgb(248,68,17)"/><text x="77.00" y="798.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.50%)</title><rect x="74" y="804" width="6" height="15" fill="rgb(215,156,8)"/><text x="77.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 3.00%)</title><rect x="51" y="340" width="35" height="15" fill="rgb(210,18,18)"/><text x="54.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="356" width="35" height="15" fill="rgb(226,11,24)"/><text x="54.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="372" width="35" height="15" fill="rgb(230,4,48)"/><text x="54.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="388" width="35" height="15" fill="rgb(220,78,24)"/><text x="54.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.00%)</title><rect x="51" y="404" width="35" height="15" fill="rgb(209,129,32)"/><text x="54.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="420" width="35" height="15" fill="rgb(221,173,50)"/><text x="54.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 3.00%)</title><rect x="51" y="436" width="35" height="15" fill="rgb(240,189,6)"/><text x="54.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="452" width="35" height="15" fill="rgb(245,94,41)"/><text x="54.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.00%)</title><rect x="51" y="468" width="35" height="15" fill="rgb(221,119,1)"/><text x="54.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="484" width="12" height="15" fill="rgb(254,159,10)"/><text x="77.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="74" y="500" width="12" height="15" fill="rgb(239,38,42)"/><text x="77.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="516" width="12" height="15" fill="rgb(218,148,34)"/><text x="77.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.00%)</title><rect x="74" y="532" width="12" height="15" fill="rgb(245,96,21)"/><text x="77.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="548" width="12" height="15" fill="rgb(206,222,51)"/><text x="77.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="564" width="12" height="15" fill="rgb(253,11,30)"/><text x="77.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="580" width="12" height="15" fill="rgb(240,64,22)"/><text x="77.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="74" y="596" width="12" height="15" fill="rgb(240,201,2)"/><text x="77.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="612" width="12" height="15" fill="rgb(211,194,51)"/><text x="77.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 1.00%)</title><rect x="74" y="628" width="12" height="15" fill="rgb(206,55,54)"/><text x="77.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="644" width="12" height="15" fill="rgb(217,152,30)"/><text x="77.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="660" width="12" height="15" fill="rgb(207,94,24)"/><text x="77.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="676" width="12" height="15" fill="rgb(211,86,28)"/><text x="77.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.00%)</title><rect x="74" y="692" width="12" height="15" fill="rgb(207,174,49)"/><text x="77.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.00%)</title><rect x="74" y="708" width="12" height="15" fill="rgb(233,143,49)"/><text x="77.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.50%)</title><rect x="80" y="724" width="6" height="15" fill="rgb(244,166,43)"/><text x="83.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="740" width="6" height="15" fill="rgb(240,38,0)"/><text x="83.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="756" width="6" height="15" fill="rgb(240,199,4)"/><text x="83.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="772" width="6" height="15" fill="rgb(252,75,10)"/><text x="83.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="788" width="6" height="15" fill="rgb(207,14,34)"/><text x="83.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="804" width="6" height="15" fill="rgb(210,213,18)"/><text x="83.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.50%)</title><rect x="80" y="820" width="6" height="15" fill="rgb(239,50,31)"/><text x="83.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="836" width="6" height="15" fill="rgb(207,8,13)"/><text x="83.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="852" width="6" height="15" fill="rgb(234,14,52)"/><text x="83.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="868" width="6" height="15" fill="rgb(210,121,20)"/><text x="83.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="884" width="6" height="15" fill="rgb(248,56,27)"/><text x="83.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="900" width="6" height="15" fill="rgb(236,192,3)"/><text x="83.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.50%)</title><rect x="80" y="916" width="6" height="15" fill="rgb(215,72,42)"/><text x="83.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="932" width="6" height="15" fill="rgb(223,66,36)"/><text x="83.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="948" width="6" height="15" fill="rgb(207,29,21)"/><text x="83.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="964" width="6" height="15" fill="rgb(215,69,15)"/><text x="83.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="980" width="6" height="15" fill="rgb(220,52,29)"/><text x="83.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="996" width="6" height="15" fill="rgb(238,38,8)"/><text x="83.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.50%)</title><rect x="80" y="1012" width="6" height="15" fill="rgb(207,192,22)"/><text x="83.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1028" width="6" height="15" fill="rgb(237,135,22)"/><text x="83.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1044" width="6" height="15" fill="rgb(252,207,12)"/><text x="83.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1060" width="6" height="15" fill="rgb(210,171,43)"/><text x="83.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1076" width="6" height="15" fill="rgb(213,121,44)"/><text x="83.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1092" width="6" height="15" fill="rgb(247,39,24)"/><text x="83.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.50%)</title><rect x="80" y="1108" width="6" height="15" fill="rgb(238,31,45)"/><text x="83.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1124" width="6" height="15" fill="rgb(231,145,16)"/><text x="83.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1140" width="6" height="15" fill="rgb(249,65,44)"/><text x="83.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1156" width="6" height="15" fill="rgb(213,157,28)"/><text x="83.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1172" width="6" height="15" fill="rgb(227,147,29)"/><text x="83.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1188" width="6" height="15" fill="rgb(212,107,45)"/><text x="83.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.50%)</title><rect x="80" y="1204" width="6" height="15" fill="rgb(218,49,10)"/><text x="83.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1220" width="6" height="15" fill="rgb(243,12,18)"/><text x="83.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1236" width="6" height="15" fill="rgb(241,97,52)"/><text x="83.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1252" width="6" height="15" fill="rgb(215,215,27)"/><text x="83.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1268" width="6" height="15" fill="rgb(247,181,28)"/><text x="83.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1284" width="6" height="15" fill="rgb(225,175,13)"/><text x="83.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.50%)</title><rect x="80" y="1300" width="6" height="15" fill="rgb(238,166,49)"/><text x="83.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1316" width="6" height="15" fill="rgb(238,226,30)"/><text x="83.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1332" width="6" height="15" fill="rgb(250,124,6)"/><text x="83.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1348" width="6" height="15" fill="rgb(210,195,11)"/><text x="83.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1364" width="6" height="15" fill="rgb(231,151,18)"/><text x="83.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1380" width="6" height="15" fill="rgb(245,77,25)"/><text x="83.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.50%)</title><rect x="80" y="1396" width="6" height="15" fill="rgb(211,151,26)"/><text x="83.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1412" width="6" height="15" fill="rgb(236,81,18)"/><text x="83.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1428" width="6" height="15" fill="rgb(235,182,0)"/><text x="83.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1444" width="6" height="15" fill="rgb(211,31,29)"/><text x="83.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1460" width="6" height="15" fill="rgb(210,30,40)"/><text x="83.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1476" width="6" height="15" fill="rgb(243,30,6)"/><text x="83.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.50%)</title><rect x="80" y="1492" width="6" height="15" fill="rgb(241,111,53)"/><text x="83.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1508" width="6" height="15" fill="rgb(239,48,35)"/><text x="83.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1524" width="6" height="15" fill="rgb(241,227,7)"/><text x="83.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1540" width="6" height="15" fill="rgb(210,200,11)"/><text x="83.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1556" width="6" height="15" fill="rgb(206,163,1)"/><text x="83.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1572" width="6" height="15" fill="rgb(213,202,45)"/><text x="83.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.50%)</title><rect x="80" y="1588" width="6" height="15" fill="rgb(228,76,24)"/><text x="83.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1604" width="6" height="15" fill="rgb(242,165,33)"/><text x="83.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1620" width="6" height="15" fill="rgb(231,12,14)"/><text x="83.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1636" width="6" height="15" fill="rgb(214,21,49)"/><text x="83.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1652" width="6" height="15" fill="rgb(243,223,21)"/><text x="83.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1668" width="6" height="15" fill="rgb(223,82,50)"/><text x="83.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.50%)</title><rect x="80" y="1684" width="6" height="15" fill="rgb(233,150,0)"/><text x="83.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1700" width="6" height="15" fill="rgb(249,180,32)"/><text x="83.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1716" width="6" height="15" fill="rgb(249,12,22)"/><text x="83.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1732" width="6" height="15" fill="rgb(251,100,39)"/><text x="83.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="80" y="1748" width="6" height="15" fill="rgb(222,51,53)"/><text x="83.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="80" y="1764" width="6" height="15" fill="rgb(238,41,20)"/><text x="83.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.50%)</title><rect x="80" y="1780" width="6" height="15" fill="rgb(226,170,6)"/><text x="83.00" y="1790.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.50%)</title><rect x="80" y="1796" width="6" height="15" fill="rgb(241,224,9)"/><text x="83.00" y="1806.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.50%)</title><rect x="80" y="1812" width="6" height="15" fill="rgb(247,76,50)"/><text x="83.00" y="1822.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.50%)</title><rect x="80" y="1828" width="6" height="15" fill="rgb(235,73,27)"/><text x="83.00" y="1838.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.50%)</title><rect x="80" y="1844" width="6" height="15" fill="rgb(254,144,46)"/><text x="83.00" y="1854.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.50%)</title><rect x="80" y="1860" width="6" height="15" fill="rgb(209,124,29)"/><text x="83.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 3.50%)</title><rect x="51" y="244" width="41" height="15" fill="rgb(243,26,53)"/><text x="54.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="51" y="260" width="41" height="15" fill="rgb(210,81,3)"/><text x="54.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="51" y="276" width="41" height="15" fill="rgb(233,56,13)"/><text x="54.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="51" y="292" width="41" height="15" fill="rgb(219,117,48)"/><text x="54.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.50%)</title><rect x="51" y="308" width="41" height="15" fill="rgb(212,126,43)"/><text x="54.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.50%)</title><rect x="51" y="324" width="41" height="15" fill="rgb(249,70,38)"/><text x="54.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.50%)</title><rect x="86" y="340" width="6" height="15" fill="rgb(227,132,39)"/><text x="89.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="356" width="6" height="15" fill="rgb(219,226,26)"/><text x="89.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="372" width="6" height="15" fill="rgb(209,224,18)"/><text x="89.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="388" width="6" height="15" fill="rgb(239,76,26)"/><text x="89.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="404" width="6" height="15" fill="rgb(212,121,25)"/><text x="89.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="420" width="6" height="15" fill="rgb(238,38,11)"/><text x="89.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="436" width="6" height="15" fill="rgb(228,227,28)"/><text x="89.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="452" width="6" height="15" fill="rgb(234,105,35)"/><text x="89.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="468" width="6" height="15" fill="rgb(222,195,48)"/><text x="89.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.50%)</title><rect x="86" y="484" width="6" height="15" fill="rgb(217,81,11)"/><text x="89.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="500" width="6" height="15" fill="rgb(238,17,26)"/><text x="89.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="516" width="6" height="15" fill="rgb(243,153,51)"/><text x="89.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="532" width="6" height="15" fill="rgb(217,86,34)"/><text x="89.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="548" width="6" height="15" fill="rgb(218,18,21)"/><text x="89.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="564" width="6" height="15" fill="rgb(215,194,28)"/><text x="89.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.50%)</title><rect x="86" y="580" width="6" height="15" fill="rgb(216,179,48)"/><text x="89.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="596" width="6" height="15" fill="rgb(217,102,30)"/><text x="89.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="612" width="6" height="15" fill="rgb(240,172,18)"/><text x="89.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="628" width="6" height="15" fill="rgb(238,228,37)"/><text x="89.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="644" width="6" height="15" fill="rgb(219,1,20)"/><text x="89.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="660" width="6" height="15" fill="rgb(248,106,1)"/><text x="89.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.50%)</title><rect x="86" y="676" width="6" height="15" fill="rgb(227,101,10)"/><text x="89.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="692" width="6" height="15" fill="rgb(233,4,10)"/><text x="89.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="708" width="6" height="15" fill="rgb(210,88,27)"/><text x="89.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="724" width="6" height="15" fill="rgb(237,68,5)"/><text x="89.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="740" width="6" height="15" fill="rgb(235,62,36)"/><text x="89.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="756" width="6" height="15" fill="rgb(249,204,22)"/><text x="89.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.50%)</title><rect x="86" y="772" width="6" height="15" fill="rgb(220,162,26)"/><text x="89.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="788" width="6" height="15" fill="rgb(240,69,46)"/><text x="89.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="804" width="6" height="15" fill="rgb(245,43,53)"/><text x="89.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="820" width="6" height="15" fill="rgb(220,144,18)"/><text x="89.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="836" width="6" height="15" fill="rgb(211,61,23)"/><text x="89.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="852" width="6" height="15" fill="rgb(244,152,43)"/><text x="89.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="868" width="6" height="15" fill="rgb(234,17,35)"/><text x="89.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="884" width="6" height="15" fill="rgb(229,166,29)"/><text x="89.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.50%)</title><rect x="86" y="900" width="6" height="15" fill="rgb(217,144,1)"/><text x="89.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="916" width="6" height="15" fill="rgb(243,136,52)"/><text x="89.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="932" width="6" height="15" fill="rgb(247,157,0)"/><text x="89.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="948" width="6" height="15" fill="rgb(214,22,1)"/><text x="89.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="964" width="6" height="15" fill="rgb(207,161,51)"/><text x="89.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="980" width="6" height="15" fill="rgb(224,189,48)"/><text x="89.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.50%)</title><rect x="86" y="996" width="6" height="15" fill="rgb(231,82,10)"/><text x="89.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1012" width="6" height="15" fill="rgb(248,122,26)"/><text x="89.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1028" width="6" height="15" fill="rgb(216,4,42)"/><text x="89.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1044" width="6" height="15" fill="rgb(218,139,25)"/><text x="89.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="1060" width="6" height="15" fill="rgb(225,54,24)"/><text x="89.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1076" width="6" height="15" fill="rgb(232,39,26)"/><text x="89.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.50%)</title><rect x="86" y="1092" width="6" height="15" fill="rgb(245,46,8)"/><text x="89.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1108" width="6" height="15" fill="rgb(223,121,1)"/><text x="89.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1124" width="6" height="15" fill="rgb(243,202,22)"/><text x="89.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1140" width="6" height="15" fill="rgb(212,15,30)"/><text x="89.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="1156" width="6" height="15" fill="rgb(211,166,1)"/><text x="89.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1172" width="6" height="15" fill="rgb(223,8,45)"/><text x="89.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py) (1 samples, 0.50%)</title><rect x="86" y="1188" width="6" height="15" fill="rgb(242,122,4)"/><text x="89.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1204" width="6" height="15" fill="rgb(254,13,8)"/><text x="89.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1220" width="6" height="15" fill="rgb(209,60,54)"/><text x="89.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="86" y="1236" width="6" height="15" fill="rgb(225,219,17)"/><text x="89.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="1252" width="6" height="15" fill="rgb(223,143,48)"/><text x="89.00" y="1262.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="1268" width="6" height="15" fill="rgb(213,125,26)"/><text x="89.00" y="1278.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="86" y="1284" width="6" height="15" fill="rgb(244,147,25)"/><text x="89.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="68" width="88" height="15" fill="rgb(234,175,19)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="84" width="88" height="15" fill="rgb(207,166,41)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="100" width="88" height="15" fill="rgb(210,88,27)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 7.50%)</title><rect x="10" y="116" width="88" height="15" fill="rgb(224,29,54)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="132" width="88" height="15" fill="rgb(228,227,22)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (15 samples, 7.50%)</title><rect x="10" y="148" width="88" height="15" fill="rgb(253,148,51)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="164" width="88" height="15" fill="rgb(251,62,47)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 7.50%)</title><rect x="10" y="180" width="88" height="15" fill="rgb(245,176,13)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.00%)</title><rect x="51" y="196" width="47" height="15" fill="rgb(227,195,14)"/><text x="54.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.00%)</title><rect x="51" y="212" width="47" height="15" fill="rgb(249,74,20)"/><text x="54.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.00%)</title><rect x="51" y="228" width="47" height="15" fill="rgb(208,161,48)"/><text x="54.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.50%)</title><rect x="92" y="244" width="6" height="15" fill="rgb(244,185,42)"/><text x="95.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="260" width="6" height="15" fill="rgb(246,48,1)"/><text x="95.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="276" width="6" height="15" fill="rgb(233,98,38)"/><text x="95.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="292" width="6" height="15" fill="rgb(244,149,5)"/><text x="95.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="308" width="6" height="15" fill="rgb(221,93,23)"/><text x="95.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="324" width="6" height="15" fill="rgb(243,132,13)"/><text x="95.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="92" y="340" width="6" height="15" fill="rgb(240,40,42)"/><text x="95.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="356" width="6" height="15" fill="rgb(209,119,32)"/><text x="95.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.50%)</title><rect x="92" y="372" width="6" height="15" fill="rgb(215,192,3)"/><text x="95.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="388" width="6" height="15" fill="rgb(229,14,31)"/><text x="95.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="404" width="6" height="15" fill="rgb(208,227,35)"/><text x="95.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="420" width="6" height="15" fill="rgb(241,52,25)"/><text x="95.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="436" width="6" height="15" fill="rgb(217,56,15)"/><text x="95.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="452" width="6" height="15" fill="rgb(231,207,6)"/><text x="95.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="92" y="468" width="6" height="15" fill="rgb(211,44,29)"/><text x="95.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="484" width="6" height="15" fill="rgb(216,192,41)"/><text x="95.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.50%)</title><rect x="92" y="500" width="6" height="15" fill="rgb(253,126,34)"/><text x="95.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="516" width="6" height="15" fill="rgb(241,43,49)"/><text x="95.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="532" width="6" height="15" fill="rgb(205,71,38)"/><text x="95.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="548" width="6" height="15" fill="rgb(248,120,16)"/><text x="95.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="564" width="6" height="15" fill="rgb(216,193,33)"/><text x="95.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="580" width="6" height="15" fill="rgb(241,110,17)"/><text x="95.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.50%)</title><rect x="92" y="596" width="6" height="15" fill="rgb(210,88,41)"/><text x="95.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="92" y="612" width="6" height="15" fill="rgb(237,209,26)"/><text x="95.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py) (1 samples, 0.50%)</title><rect x="92" y="628" width="6" height="15" fill="rgb(231,116,8)"/><text x="95.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.50%)</title><rect x="92" y="644" width="6" height="15" fill="rgb(254,92,27)"/><text x="95.00" y="654.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.00%)</title><rect x="122" y="180" width="11" height="15" fill="rgb(251,202,29)"/><text x="125.00" y="190.50"></text></g><g><title>0x7f5e05f4bff9 (?) (1 samples, 0.50%)</title><rect x="169" y="212" width="6" height="15" fill="rgb(253,76,46)"/><text x="172.00" y="222.50"></text></g><g><title>0x7f5e05f46ef6 (?) (1 samples, 0.50%)</title><rect x="169" y="228" width="6" height="15" fill="rgb(225,36,54)"/><text x="172.00" y="238.50"></text></g><g><title>0x7f5e05f3b962 (?) (1 samples, 0.50%)</title><rect x="169" y="244" width="6" height="15" fill="rgb(237,179,28)"/><text x="172.00" y="254.50"></text></g><g><title>0x7f5e05f6f7a7 (?) (1 samples, 0.50%)</title><rect x="169" y="260" width="6" height="15" fill="rgb(220,195,49)"/><text x="172.00" y="270.50"></text></g><g><title>0x7f5e05f6f379 (?) (1 samples, 0.50%)</title><rect x="169" y="276" width="6" height="15" fill="rgb(211,221,3)"/><text x="172.00" y="286.50"></text></g><g><title>0x7f5e063cd8b8 (?) (1 samples, 0.50%)</title><rect x="169" y="292" width="6" height="15" fill="rgb(214,25,6)"/><text x="172.00" y="302.50"></text></g><g><title>0x7f5e063cbc7f (?) (1 samples, 0.50%)</title><rect x="169" y="308" width="6" height="15" fill="rgb(236,150,33)"/><text x="172.00" y="318.50"></text></g><g><title>0x7f5e063dffd3 (?) (1 samples, 0.50%)</title><rect x="169" y="324" width="6" height="15" fill="rgb(229,56,40)"/><text x="172.00" y="334.50"></text></g><g><title>0x7f5e06380b16 (?) (1 samples, 0.50%)</title><rect x="169" y="340" width="6" height="15" fill="rgb(224,229,26)"/><text x="172.00" y="350.50"></text></g><g><title>0x7f5e062cba81 (?) (1 samples, 0.50%)</title><rect x="169" y="356" width="6" height="15" fill="rgb(208,221,5)"/><text x="172.00" y="366.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="181" y="260" width="6" height="15" fill="rgb(236,27,50)"/><text x="184.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="181" y="276" width="6" height="15" fill="rgb(230,218,50)"/><text x="184.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.50%)</title><rect x="175" y="212" width="17" height="15" fill="rgb(219,143,13)"/><text x="178.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.00%)</title><rect x="181" y="228" width="11" height="15" fill="rgb(233,110,51)"/><text x="184.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.00%)</title><rect x="181" y="244" width="11" height="15" fill="rgb(221,197,24)"/><text x="184.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="187" y="260" width="5" height="15" fill="rgb(228,200,22)"/><text x="190.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.50%)</title><rect x="192" y="260" width="6" height="15" fill="rgb(249,165,29)"/><text x="195.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="198" y="292" width="6" height="15" fill="rgb(249,182,23)"/><text x="201.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.50%)</title><rect x="204" y="308" width="6" height="15" fill="rgb(219,32,36)"/><text x="207.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.50%)</title><rect x="204" y="324" width="6" height="15" fill="rgb(246,106,33)"/><text x="207.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.00%)</title><rect x="204" y="292" width="12" height="15" fill="rgb(206,129,17)"/><text x="207.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="210" y="308" width="6" height="15" fill="rgb(248,13,13)"/><text x="213.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.50%)</title><rect x="210" y="324" width="6" height="15" fill="rgb(230,184,12)"/><text x="213.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.50%)</title><rect x="210" y="340" width="6" height="15" fill="rgb(246,197,43)"/><text x="213.00" y="350.50"></text></g><g><title>0x7f5e45edcc48 (libc-2.29.so) (1 samples, 0.50%)</title><rect x="210" y="356" width="6" height="15" fill="rgb(238,169,15)"/><text x="213.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="216" y="292" width="6" height="15" fill="rgb(237,176,40)"/><text x="219.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="222" y="340" width="6" height="15" fill="rgb(236,106,19)"/><text x="225.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="222" y="356" width="6" height="15" fill="rgb(224,94,8)"/><text x="225.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="222" y="372" width="6" height="15" fill="rgb(222,175,14)"/><text x="225.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="222" y="388" width="6" height="15" fill="rgb(248,87,40)"/><text x="225.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="228" y="340" width="6" height="15" fill="rgb(206,142,4)"/><text x="231.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="228" y="356" width="6" height="15" fill="rgb(252,131,38)"/><text x="231.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="228" y="372" width="6" height="15" fill="rgb(219,72,6)"/><text x="231.00" y="382.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="228" y="388" width="6" height="15" fill="rgb(230,176,3)"/><text x="231.00" y="398.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="340" width="6" height="15" fill="rgb(222,4,28)"/><text x="237.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="356" width="6" height="15" fill="rgb(215,127,26)"/><text x="237.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="372" width="6" height="15" fill="rgb(252,224,31)"/><text x="237.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="388" width="6" height="15" fill="rgb(243,206,24)"/><text x="237.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="404" width="6" height="15" fill="rgb(254,150,27)"/><text x="237.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="420" width="6" height="15" fill="rgb(251,202,16)"/><text x="237.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="436" width="6" height="15" fill="rgb(234,49,15)"/><text x="237.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="234" y="452" width="6" height="15" fill="rgb(229,149,13)"/><text x="237.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.00%)</title><rect x="198" y="260" width="48" height="15" fill="rgb(211,172,10)"/><text x="201.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.00%)</title><rect x="198" y="276" width="48" height="15" fill="rgb(211,28,53)"/><text x="201.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.00%)</title><rect x="222" y="292" width="24" height="15" fill="rgb(249,75,9)"/><text x="225.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.00%)</title><rect x="222" y="308" width="24" height="15" fill="rgb(212,222,34)"/><text x="225.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.00%)</title><rect x="222" y="324" width="24" height="15" fill="rgb(205,75,6)"/><text x="225.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="340" width="6" height="15" fill="rgb(210,124,20)"/><text x="243.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="356" width="6" height="15" fill="rgb(215,64,40)"/><text x="243.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="372" width="6" height="15" fill="rgb(253,15,14)"/><text x="243.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="388" width="6" height="15" fill="rgb(253,26,3)"/><text x="243.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="404" width="6" height="15" fill="rgb(227,156,37)"/><text x="243.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="420" width="6" height="15" fill="rgb(213,145,13)"/><text x="243.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="436" width="6" height="15" fill="rgb(235,119,25)"/><text x="243.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="452" width="6" height="15" fill="rgb(242,62,47)"/><text x="243.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="468" width="6" height="15" fill="rgb(233,56,41)"/><text x="243.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="484" width="6" height="15" fill="rgb(206,205,14)"/><text x="243.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="500" width="6" height="15" fill="rgb(232,82,11)"/><text x="243.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="240" y="516" width="6" height="15" fill="rgb(226,69,48)"/><text x="243.00" y="526.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.50%)</title><rect x="240" y="532" width="6" height="15" fill="rgb(232,60,50)"/><text x="243.00" y="542.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.00%)</title><rect x="246" y="260" width="11" height="15" fill="rgb(239,174,3)"/><text x="249.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 6.50%)</title><rect x="192" y="244" width="77" height="15" fill="rgb(219,161,30)"/><text x="195.00" y="254.50">onnxrunt..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.00%)</title><rect x="257" y="260" width="12" height="15" fill="rgb(211,36,12)"/><text x="260.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.50%)</title><rect x="263" y="276" width="6" height="15" fill="rgb(218,147,17)"/><text x="266.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.50%)</title><rect x="263" y="292" width="6" height="15" fill="rgb(233,208,1)"/><text x="266.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.50%)</title><rect x="263" y="308" width="6" height="15" fill="rgb(239,181,43)"/><text x="266.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.50%)</title><rect x="263" y="324" width="6" height="15" fill="rgb(241,111,23)"/><text x="266.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (29 samples, 14.50%)</title><rect x="104" y="132" width="171" height="15" fill="rgb(213,210,39)"/><text x="107.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (28 samples, 14.00%)</title><rect x="110" y="148" width="165" height="15" fill="rgb(207,105,29)"/><text x="113.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (28 samples, 14.00%)</title><rect x="110" y="164" width="165" height="15" fill="rgb(229,72,33)"/><text x="113.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (24 samples, 12.00%)</title><rect x="133" y="180" width="142" height="15" fill="rgb(225,28,17)"/><text x="136.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (onnxruntime/capi/session.py) (24 samples, 12.00%)</title><rect x="133" y="196" width="142" height="15" fill="rgb(225,125,22)"/><text x="136.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 7.00%)</title><rect x="192" y="212" width="83" height="15" fill="rgb(252,227,28)"/><text x="195.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 7.00%)</title><rect x="192" y="228" width="83" height="15" fill="rgb(244,69,37)"/><text x="195.00" y="238.50">void pybi..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.50%)</title><rect x="269" y="244" width="6" height="15" fill="rgb(242,132,10)"/><text x="272.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (31 samples, 15.50%)</title><rect x="98" y="68" width="183" height="15" fill="rgb(240,219,53)"/><text x="101.00" y="78.50">profile_ort (bench_Logi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (31 samples, 15.50%)</title><rect x="98" y="84" width="183" height="15" fill="rgb(249,149,3)"/><text x="101.00" y="94.50">setup_profile (bench_Lo..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (31 samples, 15.50%)</title><rect x="98" y="100" width="183" height="15" fill="rgb(245,27,48)"/><text x="101.00" y="110.50">profile (bench_Logistic..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 15.00%)</title><rect x="104" y="116" width="177" height="15" fill="rgb(217,96,17)"/><text x="107.00" y="126.50">time_predict (mlprodict..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.50%)</title><rect x="275" y="132" width="6" height="15" fill="rgb(251,179,23)"/><text x="278.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.50%)</title><rect x="281" y="116" width="6" height="15" fill="rgb(221,40,20)"/><text x="284.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.50%)</title><rect x="281" y="132" width="6" height="15" fill="rgb(245,223,49)"/><text x="284.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.50%)</title><rect x="281" y="148" width="6" height="15" fill="rgb(208,117,16)"/><text x="284.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.50%)</title><rect x="328" y="180" width="18" height="15" fill="rgb(208,36,24)"/><text x="331.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.50%)</title><rect x="405" y="212" width="6" height="15" fill="rgb(210,93,29)"/><text x="408.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.50%)</title><rect x="405" y="228" width="6" height="15" fill="rgb(212,28,22)"/><text x="408.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.50%)</title><rect x="405" y="244" width="6" height="15" fill="rgb(217,70,8)"/><text x="408.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.50%)</title><rect x="405" y="260" width="6" height="15" fill="rgb(206,124,32)"/><text x="408.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 1.50%)</title><rect x="411" y="244" width="17" height="15" fill="rgb(220,15,15)"/><text x="414.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.50%)</title><rect x="411" y="260" width="17" height="15" fill="rgb(229,139,3)"/><text x="414.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 1.50%)</title><rect x="411" y="276" width="17" height="15" fill="rgb(254,178,51)"/><text x="414.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.50%)</title><rect x="411" y="292" width="17" height="15" fill="rgb(244,95,23)"/><text x="414.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.50%)</title><rect x="423" y="308" width="5" height="15" fill="rgb(216,49,25)"/><text x="426.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.50%)</title><rect x="423" y="324" width="5" height="15" fill="rgb(251,74,29)"/><text x="426.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (3 samples, 1.50%)</title><rect x="428" y="244" width="18" height="15" fill="rgb(225,65,2)"/><text x="431.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (2 samples, 1.00%)</title><rect x="434" y="260" width="12" height="15" fill="rgb(238,222,8)"/><text x="437.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 1.00%)</title><rect x="434" y="276" width="12" height="15" fill="rgb(213,183,10)"/><text x="437.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (2 samples, 1.00%)</title><rect x="434" y="292" width="12" height="15" fill="rgb(218,138,46)"/><text x="437.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 1.00%)</title><rect x="434" y="308" width="12" height="15" fill="rgb(239,182,4)"/><text x="437.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 1.00%)</title><rect x="434" y="324" width="12" height="15" fill="rgb(241,172,26)"/><text x="437.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.50%)</title><rect x="440" y="340" width="6" height="15" fill="rgb(252,199,24)"/><text x="443.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.50%)</title><rect x="440" y="356" width="6" height="15" fill="rgb(244,8,21)"/><text x="443.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.50%)</title><rect x="440" y="372" width="6" height="15" fill="rgb(236,174,34)"/><text x="443.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.50%)</title><rect x="440" y="388" width="6" height="15" fill="rgb(252,176,37)"/><text x="443.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.50%)</title><rect x="440" y="404" width="6" height="15" fill="rgb(231,179,10)"/><text x="443.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.50%)</title><rect x="440" y="420" width="6" height="15" fill="rgb(221,164,25)"/><text x="443.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 1.00%)</title><rect x="446" y="260" width="12" height="15" fill="rgb(208,15,51)"/><text x="449.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 1.00%)</title><rect x="446" y="276" width="12" height="15" fill="rgb(211,114,20)"/><text x="449.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.50%)</title><rect x="452" y="292" width="6" height="15" fill="rgb(208,103,26)"/><text x="455.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.50%)</title><rect x="452" y="308" width="6" height="15" fill="rgb(220,176,13)"/><text x="455.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.50%)</title><rect x="458" y="324" width="6" height="15" fill="rgb(245,11,9)"/><text x="461.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.50%)</title><rect x="458" y="340" width="6" height="15" fill="rgb(239,129,33)"/><text x="461.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 1.00%)</title><rect x="458" y="292" width="12" height="15" fill="rgb(244,136,51)"/><text x="461.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 1.00%)</title><rect x="458" y="308" width="12" height="15" fill="rgb(211,161,1)"/><text x="461.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.50%)</title><rect x="464" y="324" width="6" height="15" fill="rgb(208,189,5)"/><text x="467.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.50%)</title><rect x="464" y="340" width="6" height="15" fill="rgb(251,165,10)"/><text x="467.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.50%)</title><rect x="464" y="356" width="6" height="15" fill="rgb(245,128,7)"/><text x="467.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.50%)</title><rect x="464" y="372" width="6" height="15" fill="rgb(240,213,2)"/><text x="467.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.50%)</title><rect x="476" y="324" width="6" height="15" fill="rgb(220,138,45)"/><text x="479.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.50%)</title><rect x="470" y="292" width="17" height="15" fill="rgb(228,29,4)"/><text x="473.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.50%)</title><rect x="470" y="308" width="17" height="15" fill="rgb(226,87,47)"/><text x="473.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.50%)</title><rect x="482" y="324" width="5" height="15" fill="rgb(243,52,26)"/><text x="485.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (14 samples, 7.00%)</title><rect x="411" y="228" width="82" height="15" fill="rgb(217,105,45)"/><text x="414.00" y="238.50">_run (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 4.00%)</title><rect x="446" y="244" width="47" height="15" fill="rgb(243,15,9)"/><text x="449.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 3.00%)</title><rect x="458" y="260" width="35" height="15" fill="rgb(222,153,21)"/><text x="461.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 3.00%)</title><rect x="458" y="276" width="35" height="15" fill="rgb(230,124,11)"/><text x="461.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.50%)</title><rect x="487" y="292" width="6" height="15" fill="rgb(239,201,2)"/><text x="490.00" y="302.50"></text></g><g><title>0x7f5e311c333d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.50%)</title><rect x="487" y="308" width="6" height="15" fill="rgb(224,173,47)"/><text x="490.00" y="318.50"></text></g><g><title>0x7f5e311e5214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.50%)</title><rect x="487" y="324" width="6" height="15" fill="rgb(217,169,8)"/><text x="490.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.50%)</title><rect x="487" y="340" width="6" height="15" fill="rgb(246,47,22)"/><text x="490.00" y="350.50"></text></g><g><title>0x7f5e4605aea6 (libm-2.29.so) (1 samples, 0.50%)</title><rect x="487" y="356" width="6" height="15" fill="rgb(220,200,44)"/><text x="490.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 1.00%)</title><rect x="523" y="324" width="12" height="15" fill="rgb(231,0,27)"/><text x="526.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 1.00%)</title><rect x="523" y="340" width="12" height="15" fill="rgb(209,24,26)"/><text x="526.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 1.00%)</title><rect x="523" y="356" width="12" height="15" fill="rgb(242,186,3)"/><text x="526.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 1.00%)</title><rect x="523" y="372" width="12" height="15" fill="rgb(232,125,17)"/><text x="526.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 1.00%)</title><rect x="523" y="388" width="12" height="15" fill="rgb(252,194,54)"/><text x="526.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.50%)</title><rect x="541" y="372" width="5" height="15" fill="rgb(215,40,5)"/><text x="544.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.50%)</title><rect x="541" y="388" width="5" height="15" fill="rgb(253,23,13)"/><text x="544.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.50%)</title><rect x="541" y="404" width="5" height="15" fill="rgb(239,34,26)"/><text x="544.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.50%)</title><rect x="546" y="372" width="6" height="15" fill="rgb(251,170,6)"/><text x="549.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.50%)</title><rect x="546" y="388" width="6" height="15" fill="rgb(248,73,2)"/><text x="549.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.50%)</title><rect x="546" y="404" width="6" height="15" fill="rgb(227,188,28)"/><text x="549.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.50%)</title><rect x="546" y="420" width="6" height="15" fill="rgb(228,5,20)"/><text x="549.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.50%)</title><rect x="546" y="436" width="6" height="15" fill="rgb(241,136,31)"/><text x="549.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.50%)</title><rect x="546" y="452" width="6" height="15" fill="rgb(228,185,10)"/><text x="549.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.50%)</title><rect x="546" y="468" width="6" height="15" fill="rgb(214,61,21)"/><text x="549.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.50%)</title><rect x="552" y="372" width="6" height="15" fill="rgb(223,228,33)"/><text x="555.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.50%)</title><rect x="552" y="388" width="6" height="15" fill="rgb(236,15,24)"/><text x="555.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.50%)</title><rect x="552" y="404" width="6" height="15" fill="rgb(228,126,21)"/><text x="555.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.50%)</title><rect x="552" y="420" width="6" height="15" fill="rgb(235,92,37)"/><text x="555.00" y="430.50"></text></g><g><title>array_sum (methods.c) (10 samples, 5.00%)</title><rect x="505" y="260" width="59" height="15" fill="rgb(253,56,20)"/><text x="508.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 4.50%)</title><rect x="511" y="276" width="53" height="15" fill="rgb(253,95,35)"/><text x="514.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 4.00%)</title><rect x="517" y="292" width="47" height="15" fill="rgb(239,23,47)"/><text x="520.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 3.50%)</title><rect x="523" y="308" width="41" height="15" fill="rgb(212,144,33)"/><text x="526.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 2.50%)</title><rect x="535" y="324" width="29" height="15" fill="rgb(238,92,19)"/><text x="538.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 2.00%)</title><rect x="541" y="340" width="23" height="15" fill="rgb(245,167,32)"/><text x="544.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 2.00%)</title><rect x="541" y="356" width="23" height="15" fill="rgb(246,227,20)"/><text x="544.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.50%)</title><rect x="558" y="372" width="6" height="15" fill="rgb(250,69,2)"/><text x="561.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.50%)</title><rect x="564" y="340" width="6" height="15" fill="rgb(215,172,42)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.50%)</title><rect x="564" y="356" width="6" height="15" fill="rgb(217,195,9)"/><text x="567.00" y="366.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.50%)</title><rect x="570" y="340" width="6" height="15" fill="rgb(252,176,42)"/><text x="573.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.50%)</title><rect x="564" y="324" width="18" height="15" fill="rgb(225,5,48)"/><text x="567.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.50%)</title><rect x="576" y="340" width="6" height="15" fill="rgb(245,110,48)"/><text x="579.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.50%)</title><rect x="576" y="356" width="6" height="15" fill="rgb(209,1,43)"/><text x="579.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.50%)</title><rect x="576" y="372" width="6" height="15" fill="rgb(254,108,2)"/><text x="579.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.50%)</title><rect x="576" y="388" width="6" height="15" fill="rgb(228,55,15)"/><text x="579.00" y="398.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (52 samples, 26.00%)</title><rect x="281" y="68" width="307" height="15" fill="rgb(228,96,23)"/><text x="284.00" y="78.50">profile_pyrt (bench_LogisticRegression_li..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (52 samples, 26.00%)</title><rect x="281" y="84" width="307" height="15" fill="rgb(253,82,1)"/><text x="284.00" y="94.50">setup_profile (bench_LogisticRegression_l..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (52 samples, 26.00%)</title><rect x="281" y="100" width="307" height="15" fill="rgb(209,79,1)"/><text x="284.00" y="110.50">profile (bench_LogisticRegression_libline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (51 samples, 25.50%)</title><rect x="287" y="116" width="301" height="15" fill="rgb(246,142,39)"/><text x="290.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (49 samples, 24.50%)</title><rect x="299" y="132" width="289" height="15" fill="rgb(239,74,42)"/><text x="302.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (48 samples, 24.00%)</title><rect x="305" y="148" width="283" height="15" fill="rgb(210,209,42)"/><text x="308.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 24.00%)</title><rect x="305" y="164" width="283" height="15" fill="rgb(217,198,8)"/><text x="308.00" y="174.50">_run_sequence_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (41 samples, 20.50%)</title><rect x="346" y="180" width="242" height="15" fill="rgb(227,123,39)"/><text x="349.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (32 samples, 16.00%)</title><rect x="399" y="196" width="189" height="15" fill="rgb(254,53,5)"/><text x="402.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 15.00%)</title><rect x="411" y="212" width="177" height="15" fill="rgb(208,151,9)"/><text x="414.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (16 samples, 8.00%)</title><rect x="493" y="228" width="95" height="15" fill="rgb(246,114,54)"/><text x="496.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (16 samples, 8.00%)</title><rect x="493" y="244" width="95" height="15" fill="rgb(220,34,9)"/><text x="496.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 2.00%)</title><rect x="564" y="260" width="24" height="15" fill="rgb(249,53,36)"/><text x="567.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 2.00%)</title><rect x="564" y="276" width="24" height="15" fill="rgb(249,30,34)"/><text x="567.00" y="286.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 2.00%)</title><rect x="564" y="292" width="24" height="15" fill="rgb(247,107,31)"/><text x="567.00" y="302.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 2.00%)</title><rect x="564" y="308" width="24" height="15" fill="rgb(240,141,49)"/><text x="567.00" y="318.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.50%)</title><rect x="582" y="324" width="6" height="15" fill="rgb(213,141,47)"/><text x="585.00" y="334.50"></text></g><g><title>0x7f5e45fb9151 (libc-2.29.so) (1 samples, 0.50%)</title><rect x="617" y="164" width="6" height="15" fill="rgb(251,27,14)"/><text x="620.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.50%)</title><rect x="647" y="180" width="6" height="15" fill="rgb(225,5,4)"/><text x="650.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.50%)</title><rect x="653" y="180" width="6" height="15" fill="rgb(216,141,33)"/><text x="656.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.50%)</title><rect x="653" y="196" width="6" height="15" fill="rgb(213,110,37)"/><text x="656.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.50%)</title><rect x="653" y="212" width="6" height="15" fill="rgb(234,95,17)"/><text x="656.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.50%)</title><rect x="653" y="228" width="6" height="15" fill="rgb(249,19,28)"/><text x="656.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.50%)</title><rect x="653" y="244" width="6" height="15" fill="rgb(241,223,3)"/><text x="656.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.50%)</title><rect x="659" y="244" width="17" height="15" fill="rgb(206,4,7)"/><text x="662.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.50%)</title><rect x="659" y="260" width="17" height="15" fill="rgb(252,205,17)"/><text x="662.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 1.50%)</title><rect x="659" y="276" width="17" height="15" fill="rgb(215,121,2)"/><text x="662.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 1.50%)</title><rect x="659" y="292" width="17" height="15" fill="rgb(253,156,37)"/><text x="662.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 1.50%)</title><rect x="659" y="308" width="17" height="15" fill="rgb(235,17,21)"/><text x="662.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.50%)</title><rect x="682" y="308" width="6" height="15" fill="rgb(214,177,1)"/><text x="685.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 1.00%)</title><rect x="682" y="292" width="12" height="15" fill="rgb(205,30,30)"/><text x="685.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.50%)</title><rect x="688" y="308" width="6" height="15" fill="rgb(252,46,28)"/><text x="691.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.50%)</title><rect x="688" y="324" width="6" height="15" fill="rgb(217,209,53)"/><text x="691.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.50%)</title><rect x="694" y="356" width="6" height="15" fill="rgb(206,92,3)"/><text x="697.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.50%)</title><rect x="694" y="372" width="6" height="15" fill="rgb(242,4,42)"/><text x="697.00" y="382.50"></text></g><g><title>array_sum (methods.c) (8 samples, 4.00%)</title><rect x="659" y="180" width="47" height="15" fill="rgb(238,167,32)"/><text x="662.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 4.00%)</title><rect x="659" y="196" width="47" height="15" fill="rgb(216,164,37)"/><text x="662.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 4.00%)</title><rect x="659" y="212" width="47" height="15" fill="rgb(209,71,30)"/><text x="662.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 4.00%)</title><rect x="659" y="228" width="47" height="15" fill="rgb(232,45,49)"/><text x="662.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 2.50%)</title><rect x="676" y="244" width="30" height="15" fill="rgb(220,162,17)"/><text x="679.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 2.00%)</title><rect x="682" y="260" width="24" height="15" fill="rgb(223,188,46)"/><text x="685.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 2.00%)</title><rect x="682" y="276" width="24" height="15" fill="rgb(241,184,36)"/><text x="685.00" y="286.50">P..</text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 1.00%)</title><rect x="694" y="292" width="12" height="15" fill="rgb(240,72,36)"/><text x="697.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 1.00%)</title><rect x="694" y="308" width="12" height="15" fill="rgb(241,65,53)"/><text x="697.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 1.00%)</title><rect x="694" y="324" width="12" height="15" fill="rgb(214,79,31)"/><text x="697.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.00%)</title><rect x="694" y="340" width="12" height="15" fill="rgb(233,178,20)"/><text x="697.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.50%)</title><rect x="700" y="356" width="6" height="15" fill="rgb(224,130,35)"/><text x="703.00" y="366.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 1.00%)</title><rect x="712" y="196" width="11" height="15" fill="rgb(211,198,52)"/><text x="715.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.50%)</title><rect x="718" y="212" width="5" height="15" fill="rgb(253,152,18)"/><text x="721.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.50%)</title><rect x="718" y="228" width="5" height="15" fill="rgb(222,19,40)"/><text x="721.00" y="238.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.50%)</title><rect x="718" y="244" width="5" height="15" fill="rgb(245,186,22)"/><text x="721.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.50%)</title><rect x="729" y="276" width="6" height="15" fill="rgb(213,49,50)"/><text x="732.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.50%)</title><rect x="729" y="292" width="6" height="15" fill="rgb(207,40,27)"/><text x="732.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.50%)</title><rect x="729" y="308" width="6" height="15" fill="rgb(205,116,36)"/><text x="732.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.50%)</title><rect x="729" y="324" width="6" height="15" fill="rgb(207,16,45)"/><text x="732.00" y="334.50"></text></g><g><title>array_add (number.c) (3 samples, 1.50%)</title><rect x="723" y="196" width="18" height="15" fill="rgb(210,156,7)"/><text x="726.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 1.00%)</title><rect x="729" y="212" width="12" height="15" fill="rgb(240,212,51)"/><text x="732.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 1.00%)</title><rect x="729" y="228" width="12" height="15" fill="rgb(229,203,40)"/><text x="732.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 1.00%)</title><rect x="729" y="244" width="12" height="15" fill="rgb(219,30,39)"/><text x="732.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 1.00%)</title><rect x="729" y="260" width="12" height="15" fill="rgb(244,33,20)"/><text x="732.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.50%)</title><rect x="735" y="276" width="6" height="15" fill="rgb(236,76,47)"/><text x="738.00" y="286.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.50%)</title><rect x="741" y="196" width="6" height="15" fill="rgb(237,76,47)"/><text x="744.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.50%)</title><rect x="824" y="212" width="6" height="15" fill="rgb(214,76,33)"/><text x="827.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.50%)</title><rect x="830" y="212" width="6" height="15" fill="rgb(251,117,54)"/><text x="833.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.50%)</title><rect x="847" y="228" width="6" height="15" fill="rgb(220,206,41)"/><text x="850.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 2.00%)</title><rect x="836" y="212" width="23" height="15" fill="rgb(237,84,26)"/><text x="839.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.50%)</title><rect x="853" y="228" width="6" height="15" fill="rgb(235,203,16)"/><text x="856.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 1.00%)</title><rect x="859" y="212" width="12" height="15" fill="rgb(220,35,37)"/><text x="862.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.50%)</title><rect x="877" y="228" width="6" height="15" fill="rgb(239,146,4)"/><text x="880.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.50%)</title><rect x="871" y="212" width="18" height="15" fill="rgb(224,41,1)"/><text x="874.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.50%)</title><rect x="883" y="228" width="6" height="15" fill="rgb(207,118,0)"/><text x="886.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 1.00%)</title><rect x="889" y="212" width="11" height="15" fill="rgb(242,181,33)"/><text x="892.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 1.00%)</title><rect x="889" y="228" width="11" height="15" fill="rgb(206,66,52)"/><text x="892.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 14.00%)</title><rect x="747" y="196" width="165" height="15" fill="rgb(249,136,28)"/><text x="750.00" y="206.50">check_array (sklearn/..</text></g><g><title>simplefilter (warnings.py) (2 samples, 1.00%)</title><rect x="900" y="212" width="12" height="15" fill="rgb(252,131,11)"/><text x="903.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 1.00%)</title><rect x="900" y="228" width="12" height="15" fill="rgb(242,34,3)"/><text x="903.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.00%)</title><rect x="942" y="228" width="12" height="15" fill="rgb(221,39,31)"/><text x="945.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 4.50%)</title><rect x="912" y="196" width="53" height="15" fill="rgb(242,12,2)"/><text x="915.00" y="206.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 4.00%)</title><rect x="918" y="212" width="47" height="15" fill="rgb(222,126,50)"/><text x="921.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.00%)</title><rect x="954" y="228" width="11" height="15" fill="rgb(235,119,10)"/><text x="957.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.50%)</title><rect x="977" y="228" width="6" height="15" fill="rgb(237,59,4)"/><text x="980.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.50%)</title><rect x="977" y="244" width="6" height="15" fill="rgb(227,200,18)"/><text x="980.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.50%)</title><rect x="977" y="260" width="6" height="15" fill="rgb(243,193,21)"/><text x="980.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 1.00%)</title><rect x="983" y="260" width="12" height="15" fill="rgb(217,173,25)"/><text x="986.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (2 samples, 1.00%)</title><rect x="983" y="276" width="12" height="15" fill="rgb(254,41,43)"/><text x="986.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 1.00%)</title><rect x="983" y="292" width="12" height="15" fill="rgb(242,155,9)"/><text x="986.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.50%)</title><rect x="1001" y="324" width="6" height="15" fill="rgb(226,77,18)"/><text x="1004.00" y="334.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.50%)</title><rect x="1007" y="324" width="6" height="15" fill="rgb(208,66,3)"/><text x="1010.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 2.00%)</title><rect x="995" y="276" width="23" height="15" fill="rgb(243,67,41)"/><text x="998.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 2.00%)</title><rect x="995" y="292" width="23" height="15" fill="rgb(253,153,30)"/><text x="998.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 2.00%)</title><rect x="995" y="308" width="23" height="15" fill="rgb(228,221,26)"/><text x="998.00" y="318.50">r..</text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.50%)</title><rect x="1013" y="324" width="5" height="15" fill="rgb(220,47,37)"/><text x="1016.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.50%)</title><rect x="1013" y="340" width="5" height="15" fill="rgb(228,108,51)"/><text x="1016.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 2.50%)</title><rect x="995" y="260" width="29" height="15" fill="rgb(217,214,43)"/><text x="998.00" y="270.50">Np..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.50%)</title><rect x="1018" y="276" width="6" height="15" fill="rgb(254,62,25)"/><text x="1021.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.50%)</title><rect x="1024" y="260" width="6" height="15" fill="rgb(246,35,19)"/><text x="1027.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.50%)</title><rect x="1024" y="276" width="6" height="15" fill="rgb(228,229,52)"/><text x="1027.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.50%)</title><rect x="1024" y="292" width="6" height="15" fill="rgb(227,67,21)"/><text x="1027.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.50%)</title><rect x="1024" y="308" width="6" height="15" fill="rgb(236,200,7)"/><text x="1027.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.50%)</title><rect x="1030" y="260" width="6" height="15" fill="rgb(236,140,6)"/><text x="1033.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.50%)</title><rect x="1036" y="276" width="6" height="15" fill="rgb(241,175,47)"/><text x="1039.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.50%)</title><rect x="1036" y="292" width="6" height="15" fill="rgb(207,102,42)"/><text x="1039.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.50%)</title><rect x="1036" y="308" width="6" height="15" fill="rgb(245,7,40)"/><text x="1039.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 1.00%)</title><rect x="1036" y="260" width="12" height="15" fill="rgb(207,69,6)"/><text x="1039.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.50%)</title><rect x="1042" y="276" width="6" height="15" fill="rgb(229,36,11)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.50%)</title><rect x="1042" y="292" width="6" height="15" fill="rgb(249,148,39)"/><text x="1045.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.50%)</title><rect x="1042" y="308" width="6" height="15" fill="rgb(236,183,23)"/><text x="1045.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.50%)</title><rect x="1042" y="324" width="6" height="15" fill="rgb(219,129,12)"/><text x="1045.00" y="334.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.50%)</title><rect x="1048" y="260" width="6" height="15" fill="rgb(254,56,6)"/><text x="1051.00" y="270.50"></text></g><g><title>0x7f5e45efbdb3 (libc-2.29.so) (1 samples, 0.50%)</title><rect x="1048" y="276" width="6" height="15" fill="rgb(246,16,36)"/><text x="1051.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.50%)</title><rect x="1054" y="260" width="6" height="15" fill="rgb(243,223,8)"/><text x="1057.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (61 samples, 30.50%)</title><rect x="706" y="180" width="360" height="15" fill="rgb(232,221,43)"/><text x="709.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (17 samples, 8.50%)</title><rect x="965" y="196" width="101" height="15" fill="rgb(211,142,50)"/><text x="968.00" y="206.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 7.50%)</title><rect x="977" y="212" width="89" height="15" fill="rgb(216,149,33)"/><text x="980.00" y="222.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 7.00%)</title><rect x="983" y="228" width="83" height="15" fill="rgb(244,141,1)"/><text x="986.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 7.00%)</title><rect x="983" y="244" width="83" height="15" fill="rgb(205,132,28)"/><text x="986.00" y="254.50">PyUFunc_G..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.50%)</title><rect x="1060" y="260" width="6" height="15" fill="rgb(253,126,9)"/><text x="1063.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.50%)</title><rect x="1066" y="196" width="6" height="15" fill="rgb(223,73,16)"/><text x="1069.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.50%)</title><rect x="1077" y="212" width="6" height="15" fill="rgb(222,65,29)"/><text x="1080.00" y="222.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.50%)</title><rect x="1089" y="292" width="6" height="15" fill="rgb(206,189,17)"/><text x="1092.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 1.00%)</title><rect x="1089" y="228" width="12" height="15" fill="rgb(205,76,0)"/><text x="1092.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 1.00%)</title><rect x="1089" y="244" width="12" height="15" fill="rgb(237,49,22)"/><text x="1092.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 1.00%)</title><rect x="1089" y="260" width="12" height="15" fill="rgb(218,204,16)"/><text x="1092.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 1.00%)</title><rect x="1089" y="276" width="12" height="15" fill="rgb(211,101,12)"/><text x="1092.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.50%)</title><rect x="1095" y="292" width="6" height="15" fill="rgb(225,139,35)"/><text x="1098.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.50%)</title><rect x="1101" y="244" width="6" height="15" fill="rgb(233,198,41)"/><text x="1104.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 2.50%)</title><rect x="1083" y="212" width="30" height="15" fill="rgb(243,54,34)"/><text x="1086.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 1.00%)</title><rect x="1101" y="228" width="12" height="15" fill="rgb(235,61,3)"/><text x="1104.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.50%)</title><rect x="1107" y="244" width="6" height="15" fill="rgb(216,34,3)"/><text x="1110.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.50%)</title><rect x="1107" y="260" width="6" height="15" fill="rgb(247,15,35)"/><text x="1110.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.50%)</title><rect x="1113" y="212" width="6" height="15" fill="rgb(227,152,47)"/><text x="1116.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.50%)</title><rect x="1113" y="228" width="6" height="15" fill="rgb(229,188,26)"/><text x="1116.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.50%)</title><rect x="1113" y="244" width="6" height="15" fill="rgb(235,197,31)"/><text x="1116.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (85 samples, 42.50%)</title><rect x="623" y="164" width="502" height="15" fill="rgb(228,151,49)"/><text x="626.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 5.00%)</title><rect x="1066" y="180" width="59" height="15" fill="rgb(240,48,8)"/><text x="1069.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 4.50%)</title><rect x="1072" y="196" width="53" height="15" fill="rgb(223,137,16)"/><text x="1075.00" y="206.50">PyUFu..</text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.50%)</title><rect x="1119" y="212" width="6" height="15" fill="rgb(222,98,12)"/><text x="1122.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.50%)</title><rect x="1172" y="196" width="6" height="15" fill="rgb(239,131,43)"/><text x="1175.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 3.00%)</title><rect x="1148" y="180" width="36" height="15" fill="rgb(244,134,16)"/><text x="1151.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.50%)</title><rect x="1178" y="196" width="6" height="15" fill="rgb(216,219,45)"/><text x="1181.00" y="206.50"></text></g><g><title>all (200 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,19,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (200 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(240,197,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (102 samples, 51.00%)</title><rect x="588" y="68" width="602" height="15" fill="rgb(220,187,40)"/><text x="591.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_n..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (102 samples, 51.00%)</title><rect x="588" y="84" width="602" height="15" fill="rgb(228,113,13)"/><text x="591.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py) (102 samples, 51.00%)</title><rect x="588" y="100" width="602" height="15" fill="rgb(246,13,43)"/><text x="591.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozip..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (101 samples, 50.50%)</title><rect x="594" y="116" width="596" height="15" fill="rgb(225,186,19)"/><text x="597.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (101 samples, 50.50%)</title><rect x="594" y="132" width="596" height="15" fill="rgb(218,122,21)"/><text x="597.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (101 samples, 50.50%)</title><rect x="594" y="148" width="596" height="15" fill="rgb(230,30,8)"/><text x="597.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 5.50%)</title><rect x="1125" y="164" width="65" height="15" fill="rgb(225,2,31)"/><text x="1128.00" y="174.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.50%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(251,28,53)"/><text x="1187.00" y="190.50"></text></g></g></svg>