<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1622" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1605.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1605.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.11%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(228,112,13)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(214,74,25)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:69) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(237,115,34)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:191) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(222,82,40)"/><text x="13.00" y="222.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:523) (1 samples, 0.11%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(225,173,16)"/><text x="14.00" y="174.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(248,64,24)"/><text x="14.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:31) (3 samples, 0.34%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(224,99,33)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:11) (3 samples, 0.34%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(246,48,22)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (3 samples, 0.34%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(230,222,24)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.34%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(205,94,7)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.34%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(246,143,18)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.34%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(233,176,36)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.34%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(240,120,2)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:545) (1 samples, 0.11%)</title><rect x="12" y="164" width="1" height="15" fill="rgb(220,220,15)"/><text x="15.00" y="174.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="12" y="180" width="1" height="15" fill="rgb(215,93,38)"/><text x="15.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="12" y="196" width="1" height="15" fill="rgb(212,94,8)"/><text x="15.00" y="206.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.11%)</title><rect x="12" y="212" width="1" height="15" fill="rgb(241,12,21)"/><text x="15.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(224,160,19)"/><text x="15.00" y="238.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(249,7,24)"/><text x="15.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.11%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(211,102,45)"/><text x="15.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(233,133,15)"/><text x="15.00" y="286.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.11%)</title><rect x="12" y="292" width="1" height="15" fill="rgb(212,124,15)"/><text x="15.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="12" y="308" width="1" height="15" fill="rgb(246,53,35)"/><text x="15.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="12" y="324" width="1" height="15" fill="rgb(236,202,32)"/><text x="15.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="12" y="340" width="1" height="15" fill="rgb(227,171,12)"/><text x="15.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.11%)</title><rect x="12" y="356" width="1" height="15" fill="rgb(245,147,40)"/><text x="15.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.11%)</title><rect x="12" y="372" width="1" height="15" fill="rgb(230,226,26)"/><text x="15.00" y="382.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.11%)</title><rect x="13" y="148" width="2" height="15" fill="rgb(248,135,15)"/><text x="16.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.11%)</title><rect x="13" y="164" width="2" height="15" fill="rgb(219,101,32)"/><text x="16.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(208,226,31)"/><text x="16.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(229,76,0)"/><text x="16.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(209,151,42)"/><text x="16.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(210,223,21)"/><text x="16.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="16" y="228" width="1" height="15" fill="rgb(235,179,17)"/><text x="19.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.45%)</title><rect x="16" y="212" width="5" height="15" fill="rgb(222,228,35)"/><text x="19.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.34%)</title><rect x="17" y="228" width="4" height="15" fill="rgb(213,63,5)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.34%)</title><rect x="17" y="244" width="4" height="15" fill="rgb(242,49,18)"/><text x="20.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.11%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(228,43,26)"/><text x="24.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="23" y="276" width="1" height="15" fill="rgb(225,158,45)"/><text x="26.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.22%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(208,207,25)"/><text x="26.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.22%)</title><rect x="23" y="260" width="2" height="15" fill="rgb(226,200,27)"/><text x="26.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="24" y="276" width="1" height="15" fill="rgb(217,126,7)"/><text x="27.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.11%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(227,43,54)"/><text x="28.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.22%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(234,166,27)"/><text x="30.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(205,192,26)"/><text x="30.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(232,34,17)"/><text x="31.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(241,35,36)"/><text x="32.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.11%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(235,173,26)"/><text x="32.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (8 samples, 0.90%)</title><rect x="21" y="228" width="11" height="15" fill="rgb(235,17,32)"/><text x="24.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(221,5,51)"/><text x="34.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (9 samples, 1.01%)</title><rect x="21" y="212" width="12" height="15" fill="rgb(247,201,13)"/><text x="24.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.11%)</title><rect x="32" y="228" width="1" height="15" fill="rgb(219,44,1)"/><text x="35.00" y="238.50"></text></g><g><title>0x7fcb1b4affa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(250,27,2)"/><text x="36.00" y="254.50"></text></g><g><title>0x7fcb1b4bf405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="260" width="2" height="15" fill="rgb(209,26,29)"/><text x="36.00" y="270.50"></text></g><g><title>0x7fcb1b4be2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(211,132,54)"/><text x="36.00" y="286.50"></text></g><g><title>0x7fcb1b4a2e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="292" width="2" height="15" fill="rgb(234,172,4)"/><text x="36.00" y="302.50"></text></g><g><title>0x7fcb1b4962bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="308" width="2" height="15" fill="rgb(210,35,37)"/><text x="36.00" y="318.50"></text></g><g><title>0x7fcb1b495df8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="324" width="2" height="15" fill="rgb(235,14,49)"/><text x="36.00" y="334.50"></text></g><g><title>0x7fcb1b4b005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(212,186,51)"/><text x="38.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.22%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(239,220,8)"/><text x="38.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.11%)</title><rect x="36" y="276" width="1" height="15" fill="rgb(246,134,20)"/><text x="39.00" y="286.50"></text></g><g><title>0x7fcb1b4b014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="37" y="244" width="2" height="15" fill="rgb(221,22,29)"/><text x="40.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="37" y="260" width="2" height="15" fill="rgb(235,182,44)"/><text x="40.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="37" y="276" width="2" height="15" fill="rgb(236,75,33)"/><text x="40.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="37" y="292" width="2" height="15" fill="rgb(227,201,13)"/><text x="40.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (5 samples, 0.56%)</title><rect x="33" y="212" width="7" height="15" fill="rgb(235,85,0)"/><text x="36.00" y="222.50"></text></g><g><title>0x7fcb1b4b0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="33" y="228" width="7" height="15" fill="rgb(215,170,33)"/><text x="36.00" y="238.50"></text></g><g><title>0x7fcb1b4b051c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="39" y="244" width="1" height="15" fill="rgb(214,106,35)"/><text x="42.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="40" y="228" width="1" height="15" fill="rgb(230,61,20)"/><text x="43.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.11%)</title><rect x="40" y="244" width="1" height="15" fill="rgb(244,67,31)"/><text x="43.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="44" y="292" width="1" height="15" fill="rgb(211,114,41)"/><text x="47.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="45" y="324" width="2" height="15" fill="rgb(230,205,6)"/><text x="48.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="45" y="340" width="2" height="15" fill="rgb(211,74,11)"/><text x="48.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="45" y="356" width="2" height="15" fill="rgb(224,190,11)"/><text x="48.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.11%)</title><rect x="45" y="372" width="2" height="15" fill="rgb(207,84,1)"/><text x="48.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="47" y="340" width="1" height="15" fill="rgb(237,220,47)"/><text x="50.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="48" y="356" width="1" height="15" fill="rgb(222,87,35)"/><text x="51.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="52" y="372" width="1" height="15" fill="rgb(214,148,45)"/><text x="55.00" y="382.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="53" y="372" width="2" height="15" fill="rgb(212,135,54)"/><text x="56.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.56%)</title><rect x="49" y="356" width="7" height="15" fill="rgb(224,167,17)"/><text x="52.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="55" y="372" width="1" height="15" fill="rgb(225,131,48)"/><text x="58.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 1.46%)</title><rect x="40" y="212" width="17" height="15" fill="rgb(254,39,5)"/><text x="43.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 1.35%)</title><rect x="41" y="228" width="16" height="15" fill="rgb(253,117,14)"/><text x="44.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 1.35%)</title><rect x="41" y="244" width="16" height="15" fill="rgb(211,30,10)"/><text x="44.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.12%)</title><rect x="44" y="260" width="13" height="15" fill="rgb(245,14,12)"/><text x="47.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.12%)</title><rect x="44" y="276" width="13" height="15" fill="rgb(229,94,12)"/><text x="47.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.01%)</title><rect x="45" y="292" width="12" height="15" fill="rgb(213,40,33)"/><text x="48.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.01%)</title><rect x="45" y="308" width="12" height="15" fill="rgb(238,177,54)"/><text x="48.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.90%)</title><rect x="47" y="324" width="10" height="15" fill="rgb(229,200,2)"/><text x="50.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.79%)</title><rect x="48" y="340" width="9" height="15" fill="rgb(210,14,40)"/><text x="51.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(218,140,38)"/><text x="59.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.11%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(209,43,52)"/><text x="60.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.11%)</title><rect x="57" y="228" width="2" height="15" fill="rgb(219,61,16)"/><text x="60.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="59" y="276" width="1" height="15" fill="rgb(205,8,40)"/><text x="62.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="59" y="292" width="1" height="15" fill="rgb(239,143,15)"/><text x="62.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.11%)</title><rect x="59" y="308" width="1" height="15" fill="rgb(253,156,27)"/><text x="62.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.11%)</title><rect x="60" y="308" width="1" height="15" fill="rgb(250,31,26)"/><text x="63.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="61" y="324" width="2" height="15" fill="rgb(237,191,33)"/><text x="64.00" y="334.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (37 samples, 4.16%)</title><rect x="16" y="196" width="49" height="15" fill="rgb(245,35,52)"/><text x="19.00" y="206.50">_sam..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (5 samples, 0.56%)</title><rect x="59" y="212" width="6" height="15" fill="rgb(253,105,13)"/><text x="62.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="59" y="228" width="6" height="15" fill="rgb(254,109,42)"/><text x="62.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.56%)</title><rect x="59" y="244" width="6" height="15" fill="rgb(237,184,30)"/><text x="62.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.56%)</title><rect x="59" y="260" width="6" height="15" fill="rgb(236,182,44)"/><text x="62.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.45%)</title><rect x="60" y="276" width="5" height="15" fill="rgb(245,14,21)"/><text x="63.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.45%)</title><rect x="60" y="292" width="5" height="15" fill="rgb(227,28,32)"/><text x="63.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(221,77,37)"/><text x="64.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="63" y="324" width="2" height="15" fill="rgb(240,113,7)"/><text x="66.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.22%)</title><rect x="63" y="340" width="2" height="15" fill="rgb(238,26,24)"/><text x="66.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="68" y="308" width="1" height="15" fill="rgb(221,91,54)"/><text x="71.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="69" y="324" width="2" height="15" fill="rgb(250,35,33)"/><text x="72.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="69" y="340" width="2" height="15" fill="rgb(230,21,48)"/><text x="72.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="71" y="340" width="1" height="15" fill="rgb(228,76,29)"/><text x="74.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="71" y="356" width="1" height="15" fill="rgb(246,119,53)"/><text x="74.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="71" y="372" width="1" height="15" fill="rgb(251,120,28)"/><text x="74.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="71" y="388" width="1" height="15" fill="rgb(216,2,7)"/><text x="74.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="71" y="404" width="1" height="15" fill="rgb(220,101,36)"/><text x="74.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="71" y="420" width="1" height="15" fill="rgb(221,42,24)"/><text x="74.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.34%)</title><rect x="69" y="308" width="4" height="15" fill="rgb(224,46,43)"/><text x="72.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="71" y="324" width="2" height="15" fill="rgb(214,195,21)"/><text x="74.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="72" y="340" width="1" height="15" fill="rgb(243,14,11)"/><text x="75.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.11%)</title><rect x="72" y="356" width="1" height="15" fill="rgb(230,5,51)"/><text x="75.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="73" y="324" width="2" height="15" fill="rgb(214,176,54)"/><text x="76.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.11%)</title><rect x="73" y="340" width="2" height="15" fill="rgb(217,117,47)"/><text x="76.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.11%)</title><rect x="76" y="356" width="1" height="15" fill="rgb(210,122,35)"/><text x="79.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.34%)</title><rect x="75" y="324" width="4" height="15" fill="rgb(216,100,19)"/><text x="78.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="76" y="340" width="3" height="15" fill="rgb(237,38,47)"/><text x="79.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="77" y="356" width="2" height="15" fill="rgb(242,66,46)"/><text x="80.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="77" y="372" width="2" height="15" fill="rgb(244,99,43)"/><text x="80.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="77" y="388" width="2" height="15" fill="rgb(243,180,32)"/><text x="80.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="77" y="404" width="2" height="15" fill="rgb(237,55,47)"/><text x="80.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="77" y="420" width="2" height="15" fill="rgb(235,26,23)"/><text x="80.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.11%)</title><rect x="77" y="436" width="2" height="15" fill="rgb(215,20,16)"/><text x="80.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1053) (1 samples, 0.11%)</title><rect x="79" y="372" width="1" height="15" fill="rgb(241,31,2)"/><text x="82.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="79" y="356" width="2" height="15" fill="rgb(209,37,28)"/><text x="82.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="80" y="372" width="1" height="15" fill="rgb(253,186,42)"/><text x="83.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="80" y="388" width="1" height="15" fill="rgb(205,168,5)"/><text x="83.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="80" y="404" width="1" height="15" fill="rgb(233,138,3)"/><text x="83.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.79%)</title><rect x="73" y="308" width="10" height="15" fill="rgb(254,180,4)"/><text x="76.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="79" y="324" width="4" height="15" fill="rgb(231,9,8)"/><text x="82.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="79" y="340" width="4" height="15" fill="rgb(216,32,3)"/><text x="82.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="81" y="356" width="2" height="15" fill="rgb(207,117,48)"/><text x="84.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="81" y="372" width="2" height="15" fill="rgb(234,173,41)"/><text x="84.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="81" y="388" width="2" height="15" fill="rgb(221,98,37)"/><text x="84.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:687) (1 samples, 0.11%)</title><rect x="81" y="404" width="2" height="15" fill="rgb(235,49,43)"/><text x="84.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (14 samples, 1.57%)</title><rect x="65" y="196" width="19" height="15" fill="rgb(249,3,0)"/><text x="68.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (12 samples, 1.35%)</title><rect x="68" y="212" width="16" height="15" fill="rgb(236,153,18)"/><text x="71.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.35%)</title><rect x="68" y="228" width="16" height="15" fill="rgb(254,133,5)"/><text x="71.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (12 samples, 1.35%)</title><rect x="68" y="244" width="16" height="15" fill="rgb(239,96,34)"/><text x="71.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 1.35%)</title><rect x="68" y="260" width="16" height="15" fill="rgb(246,186,2)"/><text x="71.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (12 samples, 1.35%)</title><rect x="68" y="276" width="16" height="15" fill="rgb(243,158,40)"/><text x="71.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 1.35%)</title><rect x="68" y="292" width="16" height="15" fill="rgb(235,82,44)"/><text x="71.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (1 samples, 0.11%)</title><rect x="83" y="308" width="1" height="15" fill="rgb(238,118,18)"/><text x="86.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.11%)</title><rect x="83" y="324" width="1" height="15" fill="rgb(206,213,39)"/><text x="86.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="83" y="340" width="1" height="15" fill="rgb(251,140,5)"/><text x="86.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="83" y="356" width="1" height="15" fill="rgb(236,151,49)"/><text x="86.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.11%)</title><rect x="83" y="372" width="1" height="15" fill="rgb(222,115,24)"/><text x="86.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="83" y="388" width="1" height="15" fill="rgb(227,109,38)"/><text x="86.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="83" y="404" width="1" height="15" fill="rgb(244,150,40)"/><text x="86.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.11%)</title><rect x="83" y="420" width="1" height="15" fill="rgb(233,202,14)"/><text x="86.00" y="430.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:272) (1 samples, 0.11%)</title><rect x="83" y="436" width="1" height="15" fill="rgb(223,34,39)"/><text x="86.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.11%)</title><rect x="84" y="244" width="1" height="15" fill="rgb(244,208,10)"/><text x="87.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="84" y="260" width="1" height="15" fill="rgb(231,126,8)"/><text x="87.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="84" y="276" width="1" height="15" fill="rgb(226,105,15)"/><text x="87.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="84" y="292" width="1" height="15" fill="rgb(215,80,41)"/><text x="87.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="84" y="308" width="1" height="15" fill="rgb(213,202,19)"/><text x="87.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="84" y="324" width="1" height="15" fill="rgb(236,43,12)"/><text x="87.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="84" y="340" width="1" height="15" fill="rgb(225,192,29)"/><text x="87.00" y="350.50"></text></g><g><title>0x7fcb41a6e6df (libc-2.29.so) (1 samples, 0.11%)</title><rect x="84" y="356" width="1" height="15" fill="rgb(233,114,42)"/><text x="87.00" y="366.50"></text></g><g><title>0x7fcb41c3edd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="86" y="292" width="2" height="15" fill="rgb(245,8,31)"/><text x="89.00" y="302.50"></text></g><g><title>0x7fcb41c3edee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="88" y="292" width="2" height="15" fill="rgb(235,182,26)"/><text x="91.00" y="302.50"></text></g><g><title>0x7fcb41c3ee4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="90" y="292" width="2" height="15" fill="rgb(251,65,2)"/><text x="93.00" y="302.50"></text></g><g><title>0x7fcb41c3ee6e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="92" y="292" width="1" height="15" fill="rgb(221,149,38)"/><text x="95.00" y="302.50"></text></g><g><title>0x7fcb41c3eeb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="93" y="292" width="1" height="15" fill="rgb(215,176,4)"/><text x="96.00" y="302.50"></text></g><g><title>0x7fcb41c3eed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="94" y="292" width="2" height="15" fill="rgb(232,163,14)"/><text x="97.00" y="302.50"></text></g><g><title>0x7fcb41c3eeee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="96" y="292" width="1" height="15" fill="rgb(244,10,49)"/><text x="99.00" y="302.50"></text></g><g><title>0x7fcb41c3eef6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="97" y="292" width="3" height="15" fill="rgb(229,70,9)"/><text x="100.00" y="302.50"></text></g><g><title>0x7fcb41c3ef43 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="100" y="292" width="1" height="15" fill="rgb(238,211,23)"/><text x="103.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (14 samples, 1.57%)</title><rect x="84" y="196" width="18" height="15" fill="rgb(230,128,48)"/><text x="87.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 1.57%)</title><rect x="84" y="212" width="18" height="15" fill="rgb(231,10,42)"/><text x="87.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 1.57%)</title><rect x="84" y="228" width="18" height="15" fill="rgb(216,42,12)"/><text x="87.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (13 samples, 1.46%)</title><rect x="85" y="244" width="17" height="15" fill="rgb(246,149,1)"/><text x="88.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 1.46%)</title><rect x="85" y="260" width="17" height="15" fill="rgb(206,157,54)"/><text x="88.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (13 samples, 1.46%)</title><rect x="85" y="276" width="17" height="15" fill="rgb(211,191,24)"/><text x="88.00" y="286.50"></text></g><g><title>0x7fcb41c3efe3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="101" y="292" width="1" height="15" fill="rgb(237,151,36)"/><text x="104.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="102" y="244" width="2" height="15" fill="rgb(212,6,8)"/><text x="105.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="102" y="260" width="2" height="15" fill="rgb(217,82,38)"/><text x="105.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="102" y="276" width="2" height="15" fill="rgb(236,126,30)"/><text x="105.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.11%)</title><rect x="102" y="292" width="2" height="15" fill="rgb(216,181,38)"/><text x="105.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="102" y="228" width="3" height="15" fill="rgb(206,130,4)"/><text x="105.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3272) (1 samples, 0.11%)</title><rect x="104" y="244" width="1" height="15" fill="rgb(243,129,46)"/><text x="107.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.34%)</title><rect x="102" y="212" width="4" height="15" fill="rgb(205,20,26)"/><text x="105.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="105" y="228" width="1" height="15" fill="rgb(215,16,21)"/><text x="108.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="105" y="244" width="1" height="15" fill="rgb(231,161,40)"/><text x="108.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="106" y="212" width="2" height="15" fill="rgb(230,227,28)"/><text x="109.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.11%)</title><rect x="106" y="228" width="2" height="15" fill="rgb(248,13,10)"/><text x="109.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.11%)</title><rect x="106" y="244" width="2" height="15" fill="rgb(237,50,10)"/><text x="109.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.11%)</title><rect x="106" y="260" width="2" height="15" fill="rgb(206,153,25)"/><text x="109.00" y="270.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:234) (1 samples, 0.11%)</title><rect x="106" y="276" width="2" height="15" fill="rgb(241,85,18)"/><text x="109.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (2 samples, 0.22%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(211,198,36)"/><text x="111.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.34%)</title><rect x="108" y="212" width="4" height="15" fill="rgb(231,229,16)"/><text x="111.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="108" y="228" width="4" height="15" fill="rgb(205,96,3)"/><text x="111.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="108" y="244" width="4" height="15" fill="rgb(221,103,29)"/><text x="111.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="108" y="260" width="4" height="15" fill="rgb(224,148,23)"/><text x="111.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.34%)</title><rect x="108" y="276" width="4" height="15" fill="rgb(230,76,17)"/><text x="111.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.34%)</title><rect x="108" y="292" width="4" height="15" fill="rgb(233,60,30)"/><text x="111.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="108" y="308" width="4" height="15" fill="rgb(207,41,21)"/><text x="111.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.34%)</title><rect x="108" y="324" width="4" height="15" fill="rgb(221,210,23)"/><text x="111.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(236,155,54)"/><text x="113.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="113" y="276" width="1" height="15" fill="rgb(222,129,41)"/><text x="116.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="114" y="324" width="2" height="15" fill="rgb(236,210,35)"/><text x="117.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="116" y="340" width="1" height="15" fill="rgb(223,212,19)"/><text x="119.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (77 samples, 8.66%)</title><rect x="16" y="180" width="102" height="15" fill="rgb(218,124,50)"/><text x="19.00" y="190.50">&lt;genexpr&gt; (s..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (12 samples, 1.35%)</title><rect x="102" y="196" width="16" height="15" fill="rgb(217,211,19)"/><text x="105.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.56%)</title><rect x="112" y="212" width="6" height="15" fill="rgb(223,131,42)"/><text x="115.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.56%)</title><rect x="112" y="228" width="6" height="15" fill="rgb(212,183,50)"/><text x="115.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 0.45%)</title><rect x="113" y="244" width="5" height="15" fill="rgb(225,209,11)"/><text x="116.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.45%)</title><rect x="113" y="260" width="5" height="15" fill="rgb(222,105,13)"/><text x="116.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.34%)</title><rect x="114" y="276" width="4" height="15" fill="rgb(246,175,39)"/><text x="117.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.34%)</title><rect x="114" y="292" width="4" height="15" fill="rgb(244,141,36)"/><text x="117.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.34%)</title><rect x="114" y="308" width="4" height="15" fill="rgb(242,82,5)"/><text x="117.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.22%)</title><rect x="116" y="324" width="2" height="15" fill="rgb(228,4,34)"/><text x="119.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="117" y="340" width="1" height="15" fill="rgb(206,226,22)"/><text x="120.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="117" y="356" width="1" height="15" fill="rgb(249,94,38)"/><text x="120.00" y="366.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (79 samples, 8.89%)</title><rect x="15" y="148" width="105" height="15" fill="rgb(226,52,47)"/><text x="18.00" y="158.50">predict_prob..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (79 samples, 8.89%)</title><rect x="15" y="164" width="105" height="15" fill="rgb(253,197,6)"/><text x="18.00" y="174.50">decision_fun..</text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="118" y="180" width="2" height="15" fill="rgb(252,194,25)"/><text x="121.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="118" y="196" width="2" height="15" fill="rgb(242,92,23)"/><text x="121.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="118" y="212" width="2" height="15" fill="rgb(230,145,47)"/><text x="121.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="118" y="228" width="2" height="15" fill="rgb(254,166,14)"/><text x="121.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="118" y="244" width="2" height="15" fill="rgb(251,25,22)"/><text x="121.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="118" y="260" width="2" height="15" fill="rgb(233,226,16)"/><text x="121.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="118" y="276" width="2" height="15" fill="rgb(250,177,42)"/><text x="121.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="118" y="292" width="2" height="15" fill="rgb(236,208,15)"/><text x="121.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="118" y="308" width="2" height="15" fill="rgb(225,8,46)"/><text x="121.00" y="318.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.11%)</title><rect x="120" y="180" width="1" height="15" fill="rgb(234,223,32)"/><text x="123.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="120" y="196" width="1" height="15" fill="rgb(246,215,8)"/><text x="123.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="120" y="212" width="1" height="15" fill="rgb(254,164,20)"/><text x="123.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.11%)</title><rect x="120" y="228" width="1" height="15" fill="rgb(225,108,42)"/><text x="123.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="120" y="244" width="1" height="15" fill="rgb(224,71,44)"/><text x="123.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="120" y="260" width="1" height="15" fill="rgb(210,220,48)"/><text x="123.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="120" y="276" width="1" height="15" fill="rgb(221,74,27)"/><text x="123.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="120" y="292" width="1" height="15" fill="rgb(225,30,50)"/><text x="123.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.11%)</title><rect x="120" y="308" width="1" height="15" fill="rgb(206,58,20)"/><text x="123.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.11%)</title><rect x="120" y="324" width="1" height="15" fill="rgb(241,143,30)"/><text x="123.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="120" y="340" width="1" height="15" fill="rgb(212,28,4)"/><text x="123.00" y="350.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (82 samples, 9.22%)</title><rect x="13" y="100" width="109" height="15" fill="rgb(245,56,51)"/><text x="16.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (82 samples, 9.22%)</title><rect x="13" y="116" width="109" height="15" fill="rgb(237,99,49)"/><text x="16.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (82 samples, 9.22%)</title><rect x="13" y="132" width="109" height="15" fill="rgb(245,203,8)"/><text x="16.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (2 samples, 0.22%)</title><rect x="120" y="148" width="2" height="15" fill="rgb(247,147,28)"/><text x="123.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.22%)</title><rect x="120" y="164" width="2" height="15" fill="rgb(234,72,53)"/><text x="123.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.11%)</title><rect x="121" y="180" width="1" height="15" fill="rgb(250,170,8)"/><text x="124.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="121" y="196" width="1" height="15" fill="rgb(230,59,9)"/><text x="124.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="121" y="212" width="1" height="15" fill="rgb(240,1,8)"/><text x="124.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="121" y="228" width="1" height="15" fill="rgb(250,67,49)"/><text x="124.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="121" y="244" width="1" height="15" fill="rgb(230,125,40)"/><text x="124.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="121" y="260" width="1" height="15" fill="rgb(223,177,39)"/><text x="124.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="121" y="276" width="1" height="15" fill="rgb(215,96,1)"/><text x="124.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="121" y="292" width="1" height="15" fill="rgb(231,81,1)"/><text x="124.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="121" y="308" width="1" height="15" fill="rgb(224,39,7)"/><text x="124.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.11%)</title><rect x="122" y="148" width="2" height="15" fill="rgb(253,102,0)"/><text x="125.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.11%)</title><rect x="122" y="164" width="2" height="15" fill="rgb(234,62,20)"/><text x="125.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="122" y="180" width="2" height="15" fill="rgb(218,15,53)"/><text x="125.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.11%)</title><rect x="122" y="196" width="2" height="15" fill="rgb(231,205,22)"/><text x="125.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.11%)</title><rect x="122" y="212" width="2" height="15" fill="rgb(217,227,46)"/><text x="125.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.22%)</title><rect x="126" y="228" width="3" height="15" fill="rgb(239,65,10)"/><text x="129.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="128" y="244" width="1" height="15" fill="rgb(246,59,11)"/><text x="131.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="130" y="260" width="3" height="15" fill="rgb(226,121,37)"/><text x="133.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 0.79%)</title><rect x="125" y="212" width="9" height="15" fill="rgb(243,177,17)"/><text x="128.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.45%)</title><rect x="129" y="228" width="5" height="15" fill="rgb(213,223,26)"/><text x="132.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.45%)</title><rect x="129" y="244" width="5" height="15" fill="rgb(234,108,48)"/><text x="132.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="133" y="260" width="1" height="15" fill="rgb(248,43,34)"/><text x="136.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.11%)</title><rect x="136" y="244" width="1" height="15" fill="rgb(220,168,45)"/><text x="139.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.11%)</title><rect x="137" y="244" width="1" height="15" fill="rgb(209,98,47)"/><text x="140.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.11%)</title><rect x="138" y="244" width="2" height="15" fill="rgb(246,81,7)"/><text x="141.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.22%)</title><rect x="140" y="244" width="2" height="15" fill="rgb(218,8,16)"/><text x="143.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.11%)</title><rect x="142" y="244" width="2" height="15" fill="rgb(210,85,23)"/><text x="145.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.22%)</title><rect x="144" y="244" width="2" height="15" fill="rgb(245,64,35)"/><text x="147.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(211,213,31)"/><text x="149.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="148" y="276" width="1" height="15" fill="rgb(249,26,7)"/><text x="151.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="149" y="276" width="1" height="15" fill="rgb(242,9,21)"/><text x="152.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.45%)</title><rect x="146" y="244" width="6" height="15" fill="rgb(214,52,37)"/><text x="149.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.34%)</title><rect x="148" y="260" width="4" height="15" fill="rgb(215,174,29)"/><text x="151.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.11%)</title><rect x="150" y="276" width="2" height="15" fill="rgb(244,114,37)"/><text x="153.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="152" y="260" width="1" height="15" fill="rgb(208,146,39)"/><text x="155.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.22%)</title><rect x="152" y="244" width="2" height="15" fill="rgb(216,142,24)"/><text x="155.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.11%)</title><rect x="153" y="260" width="1" height="15" fill="rgb(211,11,47)"/><text x="156.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.11%)</title><rect x="153" y="276" width="1" height="15" fill="rgb(206,62,49)"/><text x="156.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.11%)</title><rect x="153" y="292" width="1" height="15" fill="rgb(220,106,47)"/><text x="156.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.11%)</title><rect x="153" y="308" width="1" height="15" fill="rgb(236,16,13)"/><text x="156.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.11%)</title><rect x="153" y="324" width="1" height="15" fill="rgb(244,83,19)"/><text x="156.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="154" y="244" width="2" height="15" fill="rgb(223,162,14)"/><text x="157.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="154" y="260" width="2" height="15" fill="rgb(210,42,21)"/><text x="157.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="154" y="276" width="2" height="15" fill="rgb(239,97,49)"/><text x="157.00" y="286.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.11%)</title><rect x="158" y="260" width="1" height="15" fill="rgb(246,136,14)"/><text x="161.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.45%)</title><rect x="156" y="244" width="5" height="15" fill="rgb(253,161,24)"/><text x="159.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.11%)</title><rect x="159" y="260" width="2" height="15" fill="rgb(214,173,46)"/><text x="162.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="161" y="244" width="1" height="15" fill="rgb(254,76,51)"/><text x="164.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.11%)</title><rect x="161" y="260" width="1" height="15" fill="rgb(214,26,26)"/><text x="164.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 0.67%)</title><rect x="162" y="244" width="8" height="15" fill="rgb(225,214,4)"/><text x="165.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 0.67%)</title><rect x="162" y="260" width="8" height="15" fill="rgb(226,212,35)"/><text x="165.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.45%)</title><rect x="165" y="276" width="5" height="15" fill="rgb(233,74,9)"/><text x="168.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.22%)</title><rect x="170" y="260" width="3" height="15" fill="rgb(245,52,23)"/><text x="173.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (29 samples, 3.26%)</title><rect x="136" y="228" width="38" height="15" fill="rgb(235,58,33)"/><text x="139.00" y="238.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.34%)</title><rect x="170" y="244" width="4" height="15" fill="rgb(213,165,29)"/><text x="173.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="173" y="260" width="1" height="15" fill="rgb(224,93,27)"/><text x="176.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="173" y="276" width="1" height="15" fill="rgb(207,156,45)"/><text x="176.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (31 samples, 3.49%)</title><rect x="134" y="212" width="41" height="15" fill="rgb(234,141,39)"/><text x="137.00" y="222.50">pre..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.11%)</title><rect x="174" y="228" width="1" height="15" fill="rgb(221,100,50)"/><text x="177.00" y="238.50"></text></g><g><title>0x7fcb1b4aff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="175" y="244" width="2" height="15" fill="rgb(220,20,50)"/><text x="178.00" y="254.50"></text></g><g><title>0x7fcb1b49fd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="175" y="260" width="2" height="15" fill="rgb(240,127,20)"/><text x="178.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="175" y="276" width="2" height="15" fill="rgb(241,145,27)"/><text x="178.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="175" y="292" width="2" height="15" fill="rgb(226,11,40)"/><text x="178.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.11%)</title><rect x="175" y="308" width="2" height="15" fill="rgb(218,6,14)"/><text x="178.00" y="318.50"></text></g><g><title>0x7fcb1b4be2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="177" y="276" width="1" height="15" fill="rgb(242,146,45)"/><text x="180.00" y="286.50"></text></g><g><title>0x7fcb1b4a2d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="177" y="292" width="1" height="15" fill="rgb(247,195,47)"/><text x="180.00" y="302.50"></text></g><g><title>0x7fcb1b4a2666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="177" y="308" width="1" height="15" fill="rgb(211,182,12)"/><text x="180.00" y="318.50"></text></g><g><title>0x7fcb1b4982fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="177" y="324" width="1" height="15" fill="rgb(254,79,45)"/><text x="180.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="177" y="340" width="1" height="15" fill="rgb(238,167,15)"/><text x="180.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="177" y="356" width="1" height="15" fill="rgb(217,56,23)"/><text x="180.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.11%)</title><rect x="177" y="372" width="1" height="15" fill="rgb(222,165,23)"/><text x="180.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="177" y="388" width="1" height="15" fill="rgb(237,204,39)"/><text x="180.00" y="398.50"></text></g><g><title>0x7fcb1b4be456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="178" y="276" width="1" height="15" fill="rgb(215,75,8)"/><text x="181.00" y="286.50"></text></g><g><title>0x7fcb1b4be511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="179" y="276" width="3" height="15" fill="rgb(210,208,51)"/><text x="182.00" y="286.50"></text></g><g><title>0x7fcb41b4a130 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="181" y="292" width="1" height="15" fill="rgb(227,218,30)"/><text x="184.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:427) (1 samples, 0.11%)</title><rect x="182" y="324" width="1" height="15" fill="rgb(224,33,40)"/><text x="185.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (2 samples, 0.22%)</title><rect x="182" y="308" width="3" height="15" fill="rgb(252,80,6)"/><text x="185.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.11%)</title><rect x="183" y="324" width="2" height="15" fill="rgb(229,138,14)"/><text x="186.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="185" y="308" width="1" height="15" fill="rgb(206,117,10)"/><text x="188.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="185" y="324" width="1" height="15" fill="rgb(236,97,53)"/><text x="188.00" y="334.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 0.45%)</title><rect x="182" y="292" width="5" height="15" fill="rgb(247,129,34)"/><text x="185.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="186" y="308" width="1" height="15" fill="rgb(238,44,48)"/><text x="189.00" y="318.50"></text></g><g><title>0x7fcb1b4be592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="182" y="276" width="7" height="15" fill="rgb(223,86,20)"/><text x="185.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:2003) (1 samples, 0.11%)</title><rect x="187" y="292" width="2" height="15" fill="rgb(231,137,24)"/><text x="190.00" y="302.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.11%)</title><rect x="187" y="308" width="2" height="15" fill="rgb(253,3,21)"/><text x="190.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.11%)</title><rect x="187" y="324" width="2" height="15" fill="rgb(242,175,10)"/><text x="190.00" y="334.50"></text></g><g><title>0x7fcb1b4be6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="189" y="276" width="1" height="15" fill="rgb(247,44,20)"/><text x="192.00" y="286.50"></text></g><g><title>0x7fcb1b4be6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="190" y="276" width="1" height="15" fill="rgb(254,174,16)"/><text x="193.00" y="286.50"></text></g><g><title>0x7fcb1b4affa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.35%)</title><rect x="177" y="244" width="16" height="15" fill="rgb(209,81,18)"/><text x="180.00" y="254.50"></text></g><g><title>0x7fcb1b4bf405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.35%)</title><rect x="177" y="260" width="16" height="15" fill="rgb(214,117,24)"/><text x="180.00" y="270.50"></text></g><g><title>0x7fcb1b4be6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="191" y="276" width="2" height="15" fill="rgb(242,218,45)"/><text x="194.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="193" y="260" width="1" height="15" fill="rgb(206,201,29)"/><text x="196.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="193" y="276" width="1" height="15" fill="rgb(240,7,34)"/><text x="196.00" y="286.50"></text></g><g><title>0x7fcb41b4ad21 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="193" y="292" width="1" height="15" fill="rgb(239,94,17)"/><text x="196.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.11%)</title><rect x="194" y="292" width="1" height="15" fill="rgb(221,95,21)"/><text x="197.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 1.80%)</title><rect x="175" y="212" width="22" height="15" fill="rgb(209,185,16)"/><text x="178.00" y="222.50">p..</text></g><g><title>0x7fcb1b4b0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.80%)</title><rect x="175" y="228" width="22" height="15" fill="rgb(226,54,36)"/><text x="178.00" y="238.50">0..</text></g><g><title>0x7fcb1b4b005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="193" y="244" width="4" height="15" fill="rgb(229,203,36)"/><text x="196.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.22%)</title><rect x="194" y="260" width="3" height="15" fill="rgb(219,76,12)"/><text x="197.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="194" y="276" width="3" height="15" fill="rgb(232,137,3)"/><text x="197.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.11%)</title><rect x="195" y="292" width="2" height="15" fill="rgb(210,117,21)"/><text x="198.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.11%)</title><rect x="197" y="212" width="1" height="15" fill="rgb(205,69,31)"/><text x="200.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="197" y="228" width="1" height="15" fill="rgb(208,119,52)"/><text x="200.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.11%)</title><rect x="197" y="244" width="1" height="15" fill="rgb(239,55,38)"/><text x="200.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="198" y="276" width="3" height="15" fill="rgb(229,87,13)"/><text x="201.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="198" y="292" width="3" height="15" fill="rgb(229,152,33)"/><text x="201.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="198" y="308" width="3" height="15" fill="rgb(206,109,29)"/><text x="201.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="198" y="324" width="3" height="15" fill="rgb(247,132,22)"/><text x="201.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="198" y="340" width="3" height="15" fill="rgb(216,207,19)"/><text x="201.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.22%)</title><rect x="198" y="356" width="3" height="15" fill="rgb(254,60,54)"/><text x="201.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="199" y="372" width="2" height="15" fill="rgb(228,23,19)"/><text x="202.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="201" y="292" width="1" height="15" fill="rgb(236,36,11)"/><text x="204.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4588) (1 samples, 0.11%)</title><rect x="202" y="292" width="1" height="15" fill="rgb(231,66,3)"/><text x="205.00" y="302.50"></text></g><g><title>check_and_adjust_axis (common.h:180) (1 samples, 0.11%)</title><rect x="202" y="308" width="1" height="15" fill="rgb(244,159,37)"/><text x="205.00" y="318.50"></text></g><g><title>check_and_adjust_axis_msg (common.h:143) (1 samples, 0.11%)</title><rect x="202" y="324" width="1" height="15" fill="rgb(222,65,44)"/><text x="205.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="203" y="308" width="2" height="15" fill="rgb(211,155,26)"/><text x="206.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="203" y="324" width="2" height="15" fill="rgb(239,137,14)"/><text x="206.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="203" y="340" width="2" height="15" fill="rgb(208,52,24)"/><text x="206.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.11%)</title><rect x="203" y="356" width="2" height="15" fill="rgb(251,148,3)"/><text x="206.00" y="366.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1775) (1 samples, 0.11%)</title><rect x="203" y="372" width="2" height="15" fill="rgb(243,185,38)"/><text x="206.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.11%)</title><rect x="205" y="340" width="1" height="15" fill="rgb(246,122,19)"/><text x="208.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="205" y="324" width="2" height="15" fill="rgb(240,3,30)"/><text x="208.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="206" y="340" width="1" height="15" fill="rgb(247,174,2)"/><text x="209.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="206" y="356" width="1" height="15" fill="rgb(209,174,20)"/><text x="209.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="206" y="372" width="1" height="15" fill="rgb(226,20,42)"/><text x="209.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="206" y="388" width="1" height="15" fill="rgb(211,44,4)"/><text x="209.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="207" y="340" width="2" height="15" fill="rgb(244,225,8)"/><text x="210.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="209" y="340" width="1" height="15" fill="rgb(210,100,33)"/><text x="212.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="211" y="372" width="2" height="15" fill="rgb(206,47,34)"/><text x="214.00" y="382.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.45%)</title><rect x="213" y="372" width="5" height="15" fill="rgb(222,209,49)"/><text x="216.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.67%)</title><rect x="211" y="356" width="8" height="15" fill="rgb(226,225,41)"/><text x="214.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="218" y="372" width="1" height="15" fill="rgb(245,106,26)"/><text x="221.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.22%)</title><rect x="219" y="356" width="3" height="15" fill="rgb(237,49,14)"/><text x="222.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.22%)</title><rect x="222" y="356" width="3" height="15" fill="rgb(230,116,13)"/><text x="225.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.22%)</title><rect x="225" y="356" width="2" height="15" fill="rgb(244,142,0)"/><text x="228.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="227" y="356" width="2" height="15" fill="rgb(248,120,16)"/><text x="230.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="229" y="356" width="1" height="15" fill="rgb(245,210,20)"/><text x="232.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 1.80%)</title><rect x="210" y="340" width="21" height="15" fill="rgb(213,8,14)"/><text x="213.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="230" y="356" width="1" height="15" fill="rgb(251,207,14)"/><text x="233.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (19 samples, 2.14%)</title><rect x="207" y="324" width="25" height="15" fill="rgb(219,163,53)"/><text x="210.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.11%)</title><rect x="231" y="340" width="1" height="15" fill="rgb(228,96,12)"/><text x="234.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="231" y="356" width="1" height="15" fill="rgb(232,142,53)"/><text x="234.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="232" y="324" width="2" height="15" fill="rgb(243,131,41)"/><text x="235.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="232" y="340" width="2" height="15" fill="rgb(239,3,36)"/><text x="235.00" y="350.50"></text></g><g><title>0x7fcb41a6c9a8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="232" y="356" width="2" height="15" fill="rgb(239,212,17)"/><text x="235.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (28 samples, 3.15%)</title><rect x="198" y="212" width="37" height="15" fill="rgb(232,185,14)"/><text x="201.00" y="222.50">pre..</text></g><g><title>array_sum (methods.c:2215) (28 samples, 3.15%)</title><rect x="198" y="228" width="37" height="15" fill="rgb(249,198,45)"/><text x="201.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 3.15%)</title><rect x="198" y="244" width="37" height="15" fill="rgb(211,10,43)"/><text x="201.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (28 samples, 3.15%)</title><rect x="198" y="260" width="37" height="15" fill="rgb(219,58,36)"/><text x="201.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (26 samples, 2.92%)</title><rect x="201" y="276" width="34" height="15" fill="rgb(223,11,45)"/><text x="204.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (24 samples, 2.70%)</title><rect x="203" y="292" width="32" height="15" fill="rgb(228,81,46)"/><text x="206.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (23 samples, 2.59%)</title><rect x="205" y="308" width="30" height="15" fill="rgb(239,140,48)"/><text x="208.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.11%)</title><rect x="234" y="324" width="1" height="15" fill="rgb(245,34,10)"/><text x="237.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.11%)</title><rect x="234" y="340" width="1" height="15" fill="rgb(219,25,6)"/><text x="237.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.11%)</title><rect x="236" y="228" width="2" height="15" fill="rgb(207,208,26)"/><text x="239.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.11%)</title><rect x="236" y="244" width="2" height="15" fill="rgb(224,104,6)"/><text x="239.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2065) (1 samples, 0.11%)</title><rect x="236" y="260" width="2" height="15" fill="rgb(234,201,12)"/><text x="239.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.11%)</title><rect x="238" y="244" width="1" height="15" fill="rgb(229,165,4)"/><text x="241.00" y="254.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.11%)</title><rect x="238" y="260" width="1" height="15" fill="rgb(211,18,32)"/><text x="241.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.11%)</title><rect x="238" y="276" width="1" height="15" fill="rgb(234,126,41)"/><text x="241.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (2 samples, 0.22%)</title><rect x="238" y="228" width="2" height="15" fill="rgb(249,209,33)"/><text x="241.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:147) (1 samples, 0.11%)</title><rect x="239" y="244" width="1" height="15" fill="rgb(242,20,35)"/><text x="242.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.11%)</title><rect x="239" y="260" width="1" height="15" fill="rgb(208,104,50)"/><text x="242.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.56%)</title><rect x="235" y="212" width="7" height="15" fill="rgb(217,218,33)"/><text x="238.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.11%)</title><rect x="240" y="228" width="2" height="15" fill="rgb(233,81,31)"/><text x="243.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="240" y="244" width="2" height="15" fill="rgb(236,119,36)"/><text x="243.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.11%)</title><rect x="240" y="260" width="2" height="15" fill="rgb(252,61,2)"/><text x="243.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="243" y="292" width="1" height="15" fill="rgb(254,105,20)"/><text x="246.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="243" y="276" width="3" height="15" fill="rgb(205,161,18)"/><text x="246.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="244" y="292" width="2" height="15" fill="rgb(239,126,47)"/><text x="247.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.11%)</title><rect x="244" y="308" width="2" height="15" fill="rgb(206,208,49)"/><text x="247.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.11%)</title><rect x="246" y="308" width="1" height="15" fill="rgb(206,106,1)"/><text x="249.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.11%)</title><rect x="247" y="340" width="1" height="15" fill="rgb(246,61,39)"/><text x="250.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="247" y="308" width="3" height="15" fill="rgb(212,70,47)"/><text x="250.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="247" y="324" width="3" height="15" fill="rgb(218,3,53)"/><text x="250.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="248" y="340" width="2" height="15" fill="rgb(213,17,54)"/><text x="251.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.45%)</title><rect x="246" y="276" width="5" height="15" fill="rgb(214,79,14)"/><text x="249.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.45%)</title><rect x="246" y="292" width="5" height="15" fill="rgb(226,220,2)"/><text x="249.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.11%)</title><rect x="250" y="308" width="1" height="15" fill="rgb(252,73,4)"/><text x="253.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.45%)</title><rect x="251" y="276" width="5" height="15" fill="rgb(209,143,28)"/><text x="254.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.45%)</title><rect x="251" y="292" width="5" height="15" fill="rgb(220,1,32)"/><text x="254.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.45%)</title><rect x="251" y="308" width="5" height="15" fill="rgb(216,165,7)"/><text x="254.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.45%)</title><rect x="251" y="324" width="5" height="15" fill="rgb(245,171,32)"/><text x="254.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.45%)</title><rect x="251" y="340" width="5" height="15" fill="rgb(229,71,31)"/><text x="254.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (100 samples, 11.25%)</title><rect x="125" y="196" width="133" height="15" fill="rgb(224,86,38)"/><text x="128.00" y="206.50">_samme_proba (sk..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (12 samples, 1.35%)</title><rect x="242" y="212" width="16" height="15" fill="rgb(252,96,5)"/><text x="245.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.24%)</title><rect x="243" y="228" width="15" height="15" fill="rgb(225,177,23)"/><text x="246.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.24%)</title><rect x="243" y="244" width="15" height="15" fill="rgb(231,201,11)"/><text x="246.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.24%)</title><rect x="243" y="260" width="15" height="15" fill="rgb(224,89,32)"/><text x="246.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="256" y="276" width="2" height="15" fill="rgb(241,206,34)"/><text x="259.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(226,193,39)"/><text x="259.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="256" y="308" width="2" height="15" fill="rgb(235,60,33)"/><text x="259.00" y="318.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="262" y="212" width="1" height="15" fill="rgb(215,67,34)"/><text x="265.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="263" y="212" width="1" height="15" fill="rgb(245,222,48)"/><text x="266.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.11%)</title><rect x="263" y="228" width="1" height="15" fill="rgb(233,202,38)"/><text x="266.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.11%)</title><rect x="266" y="228" width="1" height="15" fill="rgb(221,159,38)"/><text x="269.00" y="238.50"></text></g><g><title>0x7fcb40c8f3c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="266" y="244" width="1" height="15" fill="rgb(252,207,25)"/><text x="269.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.22%)</title><rect x="267" y="228" width="3" height="15" fill="rgb(206,49,51)"/><text x="270.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.22%)</title><rect x="267" y="244" width="3" height="15" fill="rgb(232,157,3)"/><text x="270.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.22%)</title><rect x="267" y="260" width="3" height="15" fill="rgb(248,26,46)"/><text x="270.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="267" y="276" width="3" height="15" fill="rgb(206,13,6)"/><text x="270.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.22%)</title><rect x="267" y="292" width="3" height="15" fill="rgb(221,59,28)"/><text x="270.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="268" y="308" width="2" height="15" fill="rgb(217,31,18)"/><text x="271.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.11%)</title><rect x="274" y="324" width="1" height="15" fill="rgb(211,129,51)"/><text x="277.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.22%)</title><rect x="274" y="308" width="2" height="15" fill="rgb(227,137,11)"/><text x="277.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.11%)</title><rect x="275" y="324" width="1" height="15" fill="rgb(241,42,1)"/><text x="278.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.34%)</title><rect x="276" y="324" width="4" height="15" fill="rgb(210,113,2)"/><text x="279.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.22%)</title><rect x="278" y="340" width="2" height="15" fill="rgb(247,115,51)"/><text x="281.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="280" y="324" width="2" height="15" fill="rgb(229,2,15)"/><text x="283.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="280" y="340" width="2" height="15" fill="rgb(225,123,14)"/><text x="283.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="280" y="356" width="2" height="15" fill="rgb(216,4,19)"/><text x="283.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="282" y="340" width="1" height="15" fill="rgb(229,66,10)"/><text x="285.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="282" y="356" width="1" height="15" fill="rgb(225,41,49)"/><text x="285.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="282" y="372" width="1" height="15" fill="rgb(221,42,36)"/><text x="285.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.11%)</title><rect x="282" y="388" width="1" height="15" fill="rgb(241,74,46)"/><text x="285.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.11%)</title><rect x="283" y="372" width="1" height="15" fill="rgb(210,18,26)"/><text x="286.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="283" y="340" width="3" height="15" fill="rgb(236,97,40)"/><text x="286.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="283" y="356" width="3" height="15" fill="rgb(221,78,25)"/><text x="286.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="284" y="372" width="2" height="15" fill="rgb(221,27,14)"/><text x="287.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.11%)</title><rect x="284" y="388" width="2" height="15" fill="rgb(215,166,11)"/><text x="287.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:320) (1 samples, 0.11%)</title><rect x="284" y="404" width="2" height="15" fill="rgb(253,194,47)"/><text x="287.00" y="414.50"></text></g><g><title>scalar_value (scalarapi.c:47) (1 samples, 0.11%)</title><rect x="284" y="420" width="2" height="15" fill="rgb(248,55,40)"/><text x="287.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (8 samples, 0.90%)</title><rect x="276" y="308" width="11" height="15" fill="rgb(249,21,1)"/><text x="279.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.45%)</title><rect x="282" y="324" width="5" height="15" fill="rgb(254,120,6)"/><text x="285.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="286" y="340" width="1" height="15" fill="rgb(251,176,51)"/><text x="289.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="286" y="356" width="1" height="15" fill="rgb(237,44,39)"/><text x="289.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="286" y="372" width="1" height="15" fill="rgb(217,16,2)"/><text x="289.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.34%)</title><rect x="287" y="324" width="4" height="15" fill="rgb(236,15,5)"/><text x="290.00" y="334.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="291" y="372" width="1" height="15" fill="rgb(206,228,12)"/><text x="294.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="291" y="324" width="3" height="15" fill="rgb(211,164,34)"/><text x="294.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="291" y="340" width="3" height="15" fill="rgb(212,141,31)"/><text x="294.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="291" y="356" width="3" height="15" fill="rgb(216,138,19)"/><text x="294.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="292" y="372" width="2" height="15" fill="rgb(247,53,29)"/><text x="295.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="292" y="388" width="2" height="15" fill="rgb(214,183,51)"/><text x="295.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="292" y="404" width="2" height="15" fill="rgb(224,195,4)"/><text x="295.00" y="414.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:618) (1 samples, 0.11%)</title><rect x="292" y="420" width="2" height="15" fill="rgb(221,65,33)"/><text x="295.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.11%)</title><rect x="294" y="404" width="1" height="15" fill="rgb(205,75,43)"/><text x="297.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.11%)</title><rect x="294" y="420" width="1" height="15" fill="rgb(242,25,2)"/><text x="297.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="294" y="356" width="2" height="15" fill="rgb(213,43,4)"/><text x="297.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.22%)</title><rect x="294" y="372" width="2" height="15" fill="rgb(242,109,17)"/><text x="297.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.22%)</title><rect x="294" y="388" width="2" height="15" fill="rgb(243,218,34)"/><text x="297.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="295" y="404" width="1" height="15" fill="rgb(251,226,41)"/><text x="298.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 0.90%)</title><rect x="287" y="308" width="11" height="15" fill="rgb(211,168,27)"/><text x="290.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="294" y="324" width="4" height="15" fill="rgb(249,64,50)"/><text x="297.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="294" y="340" width="4" height="15" fill="rgb(238,189,31)"/><text x="297.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="296" y="356" width="2" height="15" fill="rgb(206,56,1)"/><text x="299.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.11%)</title><rect x="296" y="372" width="2" height="15" fill="rgb(205,141,3)"/><text x="299.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="302" y="356" width="1" height="15" fill="rgb(230,39,27)"/><text x="305.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="302" y="372" width="1" height="15" fill="rgb(235,95,21)"/><text x="305.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.11%)</title><rect x="302" y="388" width="1" height="15" fill="rgb(251,217,39)"/><text x="305.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="303" y="356" width="1" height="15" fill="rgb(236,147,52)"/><text x="306.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:516) (1 samples, 0.11%)</title><rect x="303" y="372" width="1" height="15" fill="rgb(239,23,28)"/><text x="306.00" y="382.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (1 samples, 0.11%)</title><rect x="304" y="404" width="1" height="15" fill="rgb(237,143,23)"/><text x="307.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1869) (1 samples, 0.11%)</title><rect x="305" y="404" width="2" height="15" fill="rgb(209,24,27)"/><text x="308.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (4 samples, 0.45%)</title><rect x="307" y="404" width="5" height="15" fill="rgb(215,178,48)"/><text x="310.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (42 samples, 4.72%)</title><rect x="258" y="196" width="55" height="15" fill="rgb(235,7,44)"/><text x="261.00" y="206.50">_samm..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (37 samples, 4.16%)</title><rect x="264" y="212" width="49" height="15" fill="rgb(221,39,6)"/><text x="267.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (33 samples, 3.71%)</title><rect x="270" y="228" width="43" height="15" fill="rgb(230,191,7)"/><text x="273.00" y="238.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (33 samples, 3.71%)</title><rect x="270" y="244" width="43" height="15" fill="rgb(228,189,41)"/><text x="273.00" y="254.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 3.60%)</title><rect x="271" y="260" width="42" height="15" fill="rgb(211,57,43)"/><text x="274.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (32 samples, 3.60%)</title><rect x="271" y="276" width="42" height="15" fill="rgb(229,175,7)"/><text x="274.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 3.60%)</title><rect x="271" y="292" width="42" height="15" fill="rgb(252,56,43)"/><text x="274.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (12 samples, 1.35%)</title><rect x="298" y="308" width="15" height="15" fill="rgb(246,89,5)"/><text x="301.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.12%)</title><rect x="300" y="324" width="13" height="15" fill="rgb(238,163,12)"/><text x="303.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="302" y="340" width="11" height="15" fill="rgb(222,28,2)"/><text x="305.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.79%)</title><rect x="304" y="356" width="9" height="15" fill="rgb(228,228,23)"/><text x="307.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (7 samples, 0.79%)</title><rect x="304" y="372" width="9" height="15" fill="rgb(223,117,28)"/><text x="307.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (7 samples, 0.79%)</title><rect x="304" y="388" width="9" height="15" fill="rgb(242,15,0)"/><text x="307.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1872) (1 samples, 0.11%)</title><rect x="312" y="404" width="1" height="15" fill="rgb(242,50,15)"/><text x="315.00" y="414.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.11%)</title><rect x="315" y="244" width="1" height="15" fill="rgb(240,44,13)"/><text x="318.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="315" y="228" width="2" height="15" fill="rgb(237,53,28)"/><text x="318.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="316" y="244" width="1" height="15" fill="rgb(252,31,5)"/><text x="319.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.11%)</title><rect x="316" y="260" width="1" height="15" fill="rgb(249,30,1)"/><text x="319.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.11%)</title><rect x="316" y="276" width="1" height="15" fill="rgb(254,198,10)"/><text x="319.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.11%)</title><rect x="316" y="292" width="1" height="15" fill="rgb(239,109,45)"/><text x="319.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.11%)</title><rect x="316" y="308" width="1" height="15" fill="rgb(215,25,37)"/><text x="319.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.11%)</title><rect x="316" y="324" width="1" height="15" fill="rgb(231,190,37)"/><text x="319.00" y="334.50"></text></g><g><title>0x7fcb41c3ee01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="292" width="1" height="15" fill="rgb(224,160,14)"/><text x="322.00" y="302.50"></text></g><g><title>0x7fcb41c3ee25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="320" y="292" width="1" height="15" fill="rgb(236,162,5)"/><text x="323.00" y="302.50"></text></g><g><title>0x7fcb41c3ee4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="292" width="2" height="15" fill="rgb(209,26,17)"/><text x="324.00" y="302.50"></text></g><g><title>0x7fcb41c3eece (libm-2.29.so) (1 samples, 0.11%)</title><rect x="323" y="292" width="1" height="15" fill="rgb(252,0,30)"/><text x="326.00" y="302.50"></text></g><g><title>0x7fcb41c3eed2 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="324" y="292" width="3" height="15" fill="rgb(253,99,27)"/><text x="327.00" y="302.50"></text></g><g><title>0x7fcb41c3eeda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="327" y="292" width="1" height="15" fill="rgb(207,188,22)"/><text x="330.00" y="302.50"></text></g><g><title>0x7fcb41c3eee6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="328" y="292" width="1" height="15" fill="rgb(246,3,13)"/><text x="331.00" y="302.50"></text></g><g><title>0x7fcb41c3eeee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="329" y="292" width="3" height="15" fill="rgb(227,215,9)"/><text x="332.00" y="302.50"></text></g><g><title>0x7fcb41c3eefa (libm-2.29.so) (3 samples, 0.34%)</title><rect x="332" y="292" width="4" height="15" fill="rgb(251,149,8)"/><text x="335.00" y="302.50"></text></g><g><title>0x7fcb41c3ef43 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="336" y="292" width="1" height="15" fill="rgb(226,17,5)"/><text x="339.00" y="302.50"></text></g><g><title>0x7fcb41c3efe3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="292" width="2" height="15" fill="rgb(212,191,36)"/><text x="340.00" y="302.50"></text></g><g><title>0x7fcb41c3f003 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="339" y="292" width="1" height="15" fill="rgb(210,3,10)"/><text x="342.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 2.02%)</title><rect x="317" y="228" width="24" height="15" fill="rgb(254,216,10)"/><text x="320.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (18 samples, 2.02%)</title><rect x="317" y="244" width="24" height="15" fill="rgb(209,100,0)"/><text x="320.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (18 samples, 2.02%)</title><rect x="317" y="260" width="24" height="15" fill="rgb(249,149,48)"/><text x="320.00" y="270.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (18 samples, 2.02%)</title><rect x="317" y="276" width="24" height="15" fill="rgb(207,111,0)"/><text x="320.00" y="286.50">P..</text></g><g><title>0x7fcb41c3f013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="340" y="292" width="1" height="15" fill="rgb(253,92,1)"/><text x="343.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (22 samples, 2.47%)</title><rect x="313" y="196" width="30" height="15" fill="rgb(210,143,2)"/><text x="316.00" y="206.50">_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 2.36%)</title><rect x="315" y="212" width="28" height="15" fill="rgb(249,12,10)"/><text x="318.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.11%)</title><rect x="341" y="228" width="2" height="15" fill="rgb(222,165,34)"/><text x="344.00" y="238.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.11%)</title><rect x="347" y="308" width="1" height="15" fill="rgb(214,61,17)"/><text x="350.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="347" y="244" width="2" height="15" fill="rgb(238,52,7)"/><text x="350.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.22%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(245,99,3)"/><text x="350.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (2 samples, 0.22%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(251,204,19)"/><text x="350.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (2 samples, 0.22%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(240,132,42)"/><text x="350.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="348" y="308" width="1" height="15" fill="rgb(233,115,35)"/><text x="351.00" y="318.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.11%)</title><rect x="348" y="324" width="1" height="15" fill="rgb(224,97,49)"/><text x="351.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="349" y="244" width="2" height="15" fill="rgb(247,183,18)"/><text x="352.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="349" y="260" width="2" height="15" fill="rgb(223,30,40)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="351" y="244" width="1" height="15" fill="rgb(213,9,6)"/><text x="354.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.11%)</title><rect x="351" y="260" width="1" height="15" fill="rgb(238,78,0)"/><text x="354.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.11%)</title><rect x="351" y="276" width="1" height="15" fill="rgb(250,76,25)"/><text x="354.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="352" y="244" width="1" height="15" fill="rgb(234,144,14)"/><text x="355.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.11%)</title><rect x="352" y="260" width="1" height="15" fill="rgb(225,120,41)"/><text x="355.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.11%)</title><rect x="352" y="276" width="1" height="15" fill="rgb(248,222,39)"/><text x="355.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.11%)</title><rect x="352" y="292" width="1" height="15" fill="rgb(225,81,26)"/><text x="355.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="352" y="308" width="1" height="15" fill="rgb(233,38,40)"/><text x="355.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.11%)</title><rect x="352" y="324" width="1" height="15" fill="rgb(237,83,47)"/><text x="355.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="352" y="340" width="1" height="15" fill="rgb(207,52,7)"/><text x="355.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.11%)</title><rect x="352" y="356" width="1" height="15" fill="rgb(242,109,50)"/><text x="355.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1723) (1 samples, 0.11%)</title><rect x="353" y="260" width="2" height="15" fill="rgb(215,222,2)"/><text x="356.00" y="270.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1458) (1 samples, 0.11%)</title><rect x="353" y="276" width="2" height="15" fill="rgb(214,31,6)"/><text x="356.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.79%)</title><rect x="347" y="228" width="9" height="15" fill="rgb(238,50,23)"/><text x="350.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="353" y="244" width="3" height="15" fill="rgb(226,52,15)"/><text x="356.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="355" y="260" width="1" height="15" fill="rgb(233,116,22)"/><text x="358.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="355" y="276" width="1" height="15" fill="rgb(224,146,20)"/><text x="358.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="355" y="292" width="1" height="15" fill="rgb(237,54,2)"/><text x="358.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="355" y="308" width="1" height="15" fill="rgb(225,19,46)"/><text x="358.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="356" y="228" width="1" height="15" fill="rgb(216,103,17)"/><text x="359.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="356" y="244" width="1" height="15" fill="rgb(225,214,42)"/><text x="359.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="356" y="260" width="1" height="15" fill="rgb(208,54,11)"/><text x="359.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="356" y="276" width="1" height="15" fill="rgb(223,87,11)"/><text x="359.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (10 samples, 1.12%)</title><rect x="345" y="212" width="14" height="15" fill="rgb(217,32,45)"/><text x="348.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="357" y="228" width="2" height="15" fill="rgb(223,223,18)"/><text x="360.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.11%)</title><rect x="357" y="244" width="2" height="15" fill="rgb(231,43,3)"/><text x="360.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1714) (1 samples, 0.11%)</title><rect x="359" y="212" width="1" height="15" fill="rgb(245,99,18)"/><text x="362.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="360" y="276" width="1" height="15" fill="rgb(254,60,15)"/><text x="363.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="360" y="292" width="1" height="15" fill="rgb(244,11,9)"/><text x="363.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.11%)</title><rect x="360" y="308" width="1" height="15" fill="rgb(242,164,30)"/><text x="363.00" y="318.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.11%)</title><rect x="360" y="324" width="1" height="15" fill="rgb(209,25,12)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(248,173,21)"/><text x="364.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(231,85,26)"/><text x="364.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(212,68,18)"/><text x="364.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="361" y="308" width="3" height="15" fill="rgb(223,212,47)"/><text x="364.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="363" y="324" width="1" height="15" fill="rgb(241,7,5)"/><text x="366.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.45%)</title><rect x="360" y="212" width="5" height="15" fill="rgb(234,190,40)"/><text x="363.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="360" y="228" width="5" height="15" fill="rgb(213,137,19)"/><text x="363.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="360" y="244" width="5" height="15" fill="rgb(213,20,15)"/><text x="363.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.45%)</title><rect x="360" y="260" width="5" height="15" fill="rgb(213,99,41)"/><text x="363.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="364" y="276" width="1" height="15" fill="rgb(248,131,33)"/><text x="367.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="364" y="292" width="1" height="15" fill="rgb(253,50,51)"/><text x="367.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="364" y="308" width="1" height="15" fill="rgb(210,171,29)"/><text x="367.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:600) (1 samples, 0.11%)</title><rect x="364" y="324" width="1" height="15" fill="rgb(222,102,44)"/><text x="367.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="367" y="260" width="1" height="15" fill="rgb(236,144,31)"/><text x="370.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="367" y="276" width="1" height="15" fill="rgb(253,175,50)"/><text x="370.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="367" y="292" width="1" height="15" fill="rgb(208,224,7)"/><text x="370.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="367" y="308" width="1" height="15" fill="rgb(254,57,24)"/><text x="370.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="367" y="324" width="1" height="15" fill="rgb(242,129,27)"/><text x="370.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.11%)</title><rect x="367" y="340" width="1" height="15" fill="rgb(242,86,2)"/><text x="370.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="368" y="276" width="1" height="15" fill="rgb(219,94,12)"/><text x="371.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.11%)</title><rect x="368" y="292" width="1" height="15" fill="rgb(252,203,13)"/><text x="371.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.11%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(224,78,22)"/><text x="372.00" y="302.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.11%)</title><rect x="369" y="308" width="2" height="15" fill="rgb(229,65,44)"/><text x="372.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="371" y="308" width="1" height="15" fill="rgb(232,184,16)"/><text x="374.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="371" y="324" width="1" height="15" fill="rgb(208,66,17)"/><text x="374.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="371" y="340" width="1" height="15" fill="rgb(235,84,11)"/><text x="374.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:53) (1 samples, 0.11%)</title><rect x="371" y="356" width="1" height="15" fill="rgb(253,53,44)"/><text x="374.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.11%)</title><rect x="371" y="372" width="1" height="15" fill="rgb(245,0,37)"/><text x="374.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="372" y="324" width="1" height="15" fill="rgb(224,112,40)"/><text x="375.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="372" y="308" width="3" height="15" fill="rgb(237,172,36)"/><text x="375.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="373" y="324" width="2" height="15" fill="rgb(217,9,50)"/><text x="376.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.11%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(220,156,46)"/><text x="376.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.11%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(210,176,17)"/><text x="376.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.11%)</title><rect x="373" y="372" width="2" height="15" fill="rgb(224,135,26)"/><text x="376.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="375" y="324" width="1" height="15" fill="rgb(240,74,31)"/><text x="378.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (2 samples, 0.22%)</title><rect x="376" y="324" width="2" height="15" fill="rgb(242,82,14)"/><text x="379.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="378" y="340" width="3" height="15" fill="rgb(252,88,46)"/><text x="381.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="380" y="356" width="1" height="15" fill="rgb(209,11,6)"/><text x="383.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="381" y="340" width="1" height="15" fill="rgb(223,75,21)"/><text x="384.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (31 samples, 3.49%)</title><rect x="343" y="196" width="41" height="15" fill="rgb(213,19,45)"/><text x="346.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 1.57%)</title><rect x="365" y="212" width="19" height="15" fill="rgb(210,170,51)"/><text x="368.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.57%)</title><rect x="365" y="228" width="19" height="15" fill="rgb(239,6,18)"/><text x="368.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 1.57%)</title><rect x="365" y="244" width="19" height="15" fill="rgb(211,11,14)"/><text x="368.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.35%)</title><rect x="368" y="260" width="16" height="15" fill="rgb(251,142,28)"/><text x="371.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.24%)</title><rect x="369" y="276" width="15" height="15" fill="rgb(232,182,4)"/><text x="372.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.12%)</title><rect x="371" y="292" width="13" height="15" fill="rgb(244,23,48)"/><text x="374.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 0.79%)</title><rect x="375" y="308" width="9" height="15" fill="rgb(224,131,17)"/><text x="378.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.45%)</title><rect x="378" y="324" width="6" height="15" fill="rgb(230,90,14)"/><text x="381.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="382" y="340" width="2" height="15" fill="rgb(213,37,9)"/><text x="385.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:479) (1 samples, 0.11%)</title><rect x="384" y="196" width="1" height="15" fill="rgb(241,109,5)"/><text x="387.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (197 samples, 22.16%)</title><rect x="125" y="180" width="261" height="15" fill="rgb(246,180,36)"/><text x="128.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weigh..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="385" y="196" width="1" height="15" fill="rgb(239,38,28)"/><text x="388.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="385" y="212" width="1" height="15" fill="rgb(237,212,53)"/><text x="388.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="385" y="228" width="1" height="15" fill="rgb(244,34,1)"/><text x="388.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="385" y="244" width="1" height="15" fill="rgb(239,0,21)"/><text x="388.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="385" y="260" width="1" height="15" fill="rgb(207,77,51)"/><text x="388.00" y="270.50"></text></g><g><title>0x7fcb41a6cf71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="276" width="1" height="15" fill="rgb(228,210,26)"/><text x="388.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="386" y="212" width="2" height="15" fill="rgb(250,150,49)"/><text x="389.00" y="222.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.11%)</title><rect x="386" y="228" width="2" height="15" fill="rgb(216,112,19)"/><text x="389.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="388" y="212" width="1" height="15" fill="rgb(225,17,19)"/><text x="391.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.11%)</title><rect x="388" y="228" width="1" height="15" fill="rgb(214,18,30)"/><text x="391.00" y="238.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.11%)</title><rect x="389" y="292" width="1" height="15" fill="rgb(225,23,42)"/><text x="392.00" y="302.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (203 samples, 22.83%)</title><rect x="124" y="148" width="269" height="15" fill="rgb(236,113,31)"/><text x="127.00" y="158.50">predict_proba (sklearn/ensemble/_we..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (203 samples, 22.83%)</title><rect x="124" y="164" width="269" height="15" fill="rgb(234,224,51)"/><text x="127.00" y="174.50">decision_function (sklearn/ensemble..</text></g><g><title>array_add (number.c:330) (5 samples, 0.56%)</title><rect x="386" y="180" width="7" height="15" fill="rgb(207,48,1)"/><text x="389.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="386" y="196" width="7" height="15" fill="rgb(235,217,41)"/><text x="389.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="389" y="212" width="4" height="15" fill="rgb(209,148,15)"/><text x="392.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.34%)</title><rect x="389" y="228" width="4" height="15" fill="rgb(238,83,5)"/><text x="392.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.34%)</title><rect x="389" y="244" width="4" height="15" fill="rgb(218,5,33)"/><text x="392.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.34%)</title><rect x="389" y="260" width="4" height="15" fill="rgb(207,164,43)"/><text x="392.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.34%)</title><rect x="389" y="276" width="4" height="15" fill="rgb(208,143,38)"/><text x="392.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="390" y="292" width="3" height="15" fill="rgb(243,78,43)"/><text x="393.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.22%)</title><rect x="390" y="308" width="3" height="15" fill="rgb(236,17,47)"/><text x="393.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:38) (287 samples, 32.28%)</title><rect x="13" y="52" width="381" height="15" fill="rgb(212,104,53)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_100..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:37) (287 samples, 32.28%)</title><rect x="13" y="68" width="381" height="15" fill="rgb(222,150,43)"/><text x="16.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (287 samples, 32.28%)</title><rect x="13" y="84" width="381" height="15" fill="rgb(234,17,8)"/><text x="16.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (205 samples, 23.06%)</title><rect x="122" y="100" width="272" height="15" fill="rgb(237,185,8)"/><text x="125.00" y="110.50">profile (bench_AdaBoostClassifier_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (205 samples, 23.06%)</title><rect x="122" y="116" width="272" height="15" fill="rgb(249,66,40)"/><text x="125.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (205 samples, 23.06%)</title><rect x="122" y="132" width="272" height="15" fill="rgb(246,87,11)"/><text x="125.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.11%)</title><rect x="393" y="148" width="1" height="15" fill="rgb(211,53,37)"/><text x="396.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.11%)</title><rect x="393" y="164" width="1" height="15" fill="rgb(206,177,27)"/><text x="396.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.11%)</title><rect x="393" y="180" width="1" height="15" fill="rgb(220,152,9)"/><text x="396.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="393" y="196" width="1" height="15" fill="rgb(250,60,34)"/><text x="396.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="393" y="212" width="1" height="15" fill="rgb(224,200,52)"/><text x="396.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.11%)</title><rect x="393" y="228" width="1" height="15" fill="rgb(246,121,22)"/><text x="396.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="393" y="244" width="1" height="15" fill="rgb(209,51,12)"/><text x="396.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="393" y="260" width="1" height="15" fill="rgb(243,113,23)"/><text x="396.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="393" y="276" width="1" height="15" fill="rgb(253,176,29)"/><text x="396.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="393" y="292" width="1" height="15" fill="rgb(214,25,12)"/><text x="396.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.11%)</title><rect x="393" y="308" width="1" height="15" fill="rgb(247,9,31)"/><text x="396.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.11%)</title><rect x="393" y="324" width="1" height="15" fill="rgb(251,73,39)"/><text x="396.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="393" y="340" width="1" height="15" fill="rgb(222,23,44)"/><text x="396.00" y="350.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.11%)</title><rect x="394" y="244" width="2" height="15" fill="rgb(247,125,52)"/><text x="397.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="394" y="260" width="2" height="15" fill="rgb(243,157,20)"/><text x="397.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="394" y="276" width="2" height="15" fill="rgb(250,220,49)"/><text x="397.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="394" y="292" width="2" height="15" fill="rgb(210,179,42)"/><text x="397.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(234,75,53)"/><text x="397.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="394" y="324" width="2" height="15" fill="rgb(229,3,18)"/><text x="397.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="394" y="340" width="2" height="15" fill="rgb(206,48,0)"/><text x="397.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="394" y="356" width="2" height="15" fill="rgb(226,168,41)"/><text x="397.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.11%)</title><rect x="394" y="372" width="2" height="15" fill="rgb(232,225,18)"/><text x="397.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(242,208,39)"/><text x="397.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="394" y="404" width="2" height="15" fill="rgb(215,123,38)"/><text x="397.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="394" y="420" width="2" height="15" fill="rgb(227,26,31)"/><text x="397.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="394" y="436" width="2" height="15" fill="rgb(247,160,19)"/><text x="397.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="394" y="452" width="2" height="15" fill="rgb(207,152,48)"/><text x="397.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="394" y="468" width="2" height="15" fill="rgb(241,52,27)"/><text x="397.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="394" y="484" width="2" height="15" fill="rgb(217,99,23)"/><text x="397.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py:6731) (1 samples, 0.11%)</title><rect x="394" y="500" width="2" height="15" fill="rgb(243,22,33)"/><text x="397.00" y="510.50"></text></g><g><title>add_newdoc_for_scalar_type (numpy/core/_add_newdocs.py:6720) (1 samples, 0.11%)</title><rect x="394" y="516" width="2" height="15" fill="rgb(246,158,8)"/><text x="397.00" y="526.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py:463) (1 samples, 0.11%)</title><rect x="394" y="532" width="2" height="15" fill="rgb(230,179,26)"/><text x="397.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="394" y="548" width="2" height="15" fill="rgb(213,49,27)"/><text x="397.00" y="558.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:1) (2 samples, 0.22%)</title><rect x="394" y="148" width="3" height="15" fill="rgb(209,5,4)"/><text x="397.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="394" y="164" width="3" height="15" fill="rgb(212,48,50)"/><text x="397.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="394" y="180" width="3" height="15" fill="rgb(242,23,3)"/><text x="397.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="394" y="196" width="3" height="15" fill="rgb(205,164,7)"/><text x="397.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="394" y="212" width="3" height="15" fill="rgb(235,188,3)"/><text x="397.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="394" y="228" width="3" height="15" fill="rgb(237,112,39)"/><text x="397.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.11%)</title><rect x="396" y="244" width="1" height="15" fill="rgb(236,138,17)"/><text x="399.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="396" y="260" width="1" height="15" fill="rgb(229,90,3)"/><text x="399.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="276" width="1" height="15" fill="rgb(234,47,31)"/><text x="399.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="292" width="1" height="15" fill="rgb(247,19,44)"/><text x="399.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="308" width="1" height="15" fill="rgb(252,47,40)"/><text x="399.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="324" width="1" height="15" fill="rgb(221,173,45)"/><text x="399.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="396" y="340" width="1" height="15" fill="rgb(224,203,54)"/><text x="399.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="356" width="1" height="15" fill="rgb(226,155,29)"/><text x="399.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.11%)</title><rect x="396" y="372" width="1" height="15" fill="rgb(218,21,40)"/><text x="399.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="396" y="388" width="1" height="15" fill="rgb(251,127,52)"/><text x="399.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="404" width="1" height="15" fill="rgb(214,72,1)"/><text x="399.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="420" width="1" height="15" fill="rgb(213,63,10)"/><text x="399.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="436" width="1" height="15" fill="rgb(229,66,38)"/><text x="399.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="452" width="1" height="15" fill="rgb(205,91,51)"/><text x="399.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="396" y="468" width="1" height="15" fill="rgb(218,196,48)"/><text x="399.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="484" width="1" height="15" fill="rgb(247,197,13)"/><text x="399.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.11%)</title><rect x="396" y="500" width="1" height="15" fill="rgb(218,113,16)"/><text x="399.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="516" width="1" height="15" fill="rgb(226,37,19)"/><text x="399.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="532" width="1" height="15" fill="rgb(253,202,37)"/><text x="399.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="548" width="1" height="15" fill="rgb(211,11,11)"/><text x="399.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="396" y="564" width="1" height="15" fill="rgb(229,193,28)"/><text x="399.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="580" width="1" height="15" fill="rgb(238,0,21)"/><text x="399.00" y="590.50"></text></g><g><title>0x7fcb34333585 (?) (1 samples, 0.11%)</title><rect x="396" y="596" width="1" height="15" fill="rgb(251,56,0)"/><text x="399.00" y="606.50"></text></g><g><title>0x7fcb34339075 (?) (1 samples, 0.11%)</title><rect x="396" y="612" width="1" height="15" fill="rgb(219,1,43)"/><text x="399.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="628" width="1" height="15" fill="rgb(208,65,8)"/><text x="399.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="644" width="1" height="15" fill="rgb(252,7,8)"/><text x="399.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="660" width="1" height="15" fill="rgb(235,165,49)"/><text x="399.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="396" y="676" width="1" height="15" fill="rgb(212,52,7)"/><text x="399.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="692" width="1" height="15" fill="rgb(253,228,3)"/><text x="399.00" y="702.50"></text></g><g><title>0x7fcb33c70543 (?) (1 samples, 0.11%)</title><rect x="396" y="708" width="1" height="15" fill="rgb(212,205,31)"/><text x="399.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="724" width="1" height="15" fill="rgb(242,151,39)"/><text x="399.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="740" width="1" height="15" fill="rgb(224,140,4)"/><text x="399.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="756" width="1" height="15" fill="rgb(240,175,52)"/><text x="399.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="396" y="772" width="1" height="15" fill="rgb(217,219,30)"/><text x="399.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="788" width="1" height="15" fill="rgb(220,218,8)"/><text x="399.00" y="798.50"></text></g><g><title>0x7fcb33a45b9c (?) (1 samples, 0.11%)</title><rect x="396" y="804" width="1" height="15" fill="rgb(212,167,12)"/><text x="399.00" y="814.50"></text></g><g><title>0x7fcb33a49885 (?) (1 samples, 0.11%)</title><rect x="396" y="820" width="1" height="15" fill="rgb(250,8,53)"/><text x="399.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="836" width="1" height="15" fill="rgb(247,105,34)"/><text x="399.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="852" width="1" height="15" fill="rgb(212,154,17)"/><text x="399.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="868" width="1" height="15" fill="rgb(205,116,28)"/><text x="399.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="396" y="884" width="1" height="15" fill="rgb(230,168,37)"/><text x="399.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="900" width="1" height="15" fill="rgb(217,148,40)"/><text x="399.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.11%)</title><rect x="396" y="916" width="1" height="15" fill="rgb(249,160,7)"/><text x="399.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="932" width="1" height="15" fill="rgb(245,62,51)"/><text x="399.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="948" width="1" height="15" fill="rgb(208,24,34)"/><text x="399.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="964" width="1" height="15" fill="rgb(243,109,9)"/><text x="399.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="396" y="980" width="1" height="15" fill="rgb(232,224,14)"/><text x="399.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="996" width="1" height="15" fill="rgb(213,102,8)"/><text x="399.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py:15) (1 samples, 0.11%)</title><rect x="396" y="1012" width="1" height="15" fill="rgb(231,77,4)"/><text x="399.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="396" y="1028" width="1" height="15" fill="rgb(209,84,9)"/><text x="399.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="396" y="1044" width="1" height="15" fill="rgb(251,172,8)"/><text x="399.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="396" y="1060" width="1" height="15" fill="rgb(254,217,32)"/><text x="399.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="396" y="1076" width="1" height="15" fill="rgb(227,105,52)"/><text x="399.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="396" y="1092" width="1" height="15" fill="rgb(232,130,30)"/><text x="399.00" y="1102.50"></text></g><g><title>&lt;module&gt; (hashlib.py:244) (1 samples, 0.11%)</title><rect x="396" y="1108" width="1" height="15" fill="rgb(246,175,42)"/><text x="399.00" y="1118.50"></text></g><g><title>__get_openssl_constructor (hashlib.py:128) (1 samples, 0.11%)</title><rect x="396" y="1124" width="1" height="15" fill="rgb(253,178,33)"/><text x="399.00" y="1134.50"></text></g><g><title>__get_builtin_constructor (hashlib.py:99) (1 samples, 0.11%)</title><rect x="396" y="1140" width="1" height="15" fill="rgb(247,33,1)"/><text x="399.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.11%)</title><rect x="396" y="1156" width="1" height="15" fill="rgb(246,227,47)"/><text x="399.00" y="1166.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.11%)</title><rect x="396" y="1172" width="1" height="15" fill="rgb(242,42,34)"/><text x="399.00" y="1182.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:88) (1 samples, 0.11%)</title><rect x="396" y="1188" width="1" height="15" fill="rgb(216,102,22)"/><text x="399.00" y="1198.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.22%)</title><rect x="397" y="852" width="3" height="15" fill="rgb(229,177,44)"/><text x="400.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.22%)</title><rect x="397" y="868" width="3" height="15" fill="rgb(250,134,33)"/><text x="400.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.22%)</title><rect x="397" y="884" width="3" height="15" fill="rgb(232,84,47)"/><text x="400.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.22%)</title><rect x="397" y="900" width="3" height="15" fill="rgb(224,39,31)"/><text x="400.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.22%)</title><rect x="397" y="916" width="3" height="15" fill="rgb(219,185,17)"/><text x="400.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.22%)</title><rect x="397" y="932" width="3" height="15" fill="rgb(253,7,21)"/><text x="400.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.22%)</title><rect x="397" y="948" width="3" height="15" fill="rgb(245,67,37)"/><text x="400.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.22%)</title><rect x="397" y="964" width="3" height="15" fill="rgb(223,34,40)"/><text x="400.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.11%)</title><rect x="398" y="980" width="2" height="15" fill="rgb(239,22,15)"/><text x="401.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.11%)</title><rect x="398" y="996" width="2" height="15" fill="rgb(241,4,45)"/><text x="401.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.11%)</title><rect x="398" y="1012" width="2" height="15" fill="rgb(230,5,12)"/><text x="401.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="398" y="1028" width="2" height="15" fill="rgb(210,6,11)"/><text x="401.00" y="1038.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="400" y="884" width="1" height="15" fill="rgb(235,27,18)"/><text x="403.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="400" y="900" width="1" height="15" fill="rgb(206,178,41)"/><text x="403.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.11%)</title><rect x="400" y="916" width="1" height="15" fill="rgb(243,91,52)"/><text x="403.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.11%)</title><rect x="400" y="932" width="1" height="15" fill="rgb(208,14,29)"/><text x="403.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.11%)</title><rect x="400" y="948" width="1" height="15" fill="rgb(254,74,38)"/><text x="403.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.11%)</title><rect x="400" y="964" width="1" height="15" fill="rgb(243,205,4)"/><text x="403.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.11%)</title><rect x="400" y="980" width="1" height="15" fill="rgb(221,26,35)"/><text x="403.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.11%)</title><rect x="400" y="996" width="1" height="15" fill="rgb(236,182,5)"/><text x="403.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="400" y="1012" width="1" height="15" fill="rgb(212,49,18)"/><text x="403.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="400" y="1028" width="1" height="15" fill="rgb(216,18,32)"/><text x="403.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.22%)</title><rect x="400" y="852" width="2" height="15" fill="rgb(213,115,20)"/><text x="403.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.22%)</title><rect x="400" y="868" width="2" height="15" fill="rgb(231,105,51)"/><text x="403.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.11%)</title><rect x="401" y="884" width="1" height="15" fill="rgb(237,90,38)"/><text x="404.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.11%)</title><rect x="401" y="900" width="1" height="15" fill="rgb(235,183,24)"/><text x="404.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.11%)</title><rect x="401" y="916" width="1" height="15" fill="rgb(226,65,54)"/><text x="404.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="401" y="932" width="1" height="15" fill="rgb(229,224,33)"/><text x="404.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="401" y="948" width="1" height="15" fill="rgb(240,144,53)"/><text x="404.00" y="958.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:2057) (1 samples, 0.11%)</title><rect x="402" y="916" width="2" height="15" fill="rgb(241,50,12)"/><text x="405.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2074) (1 samples, 0.11%)</title><rect x="402" y="932" width="2" height="15" fill="rgb(245,228,21)"/><text x="405.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.22%)</title><rect x="402" y="884" width="3" height="15" fill="rgb(219,114,35)"/><text x="405.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.22%)</title><rect x="402" y="900" width="3" height="15" fill="rgb(205,57,41)"/><text x="405.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="404" y="916" width="1" height="15" fill="rgb(230,188,5)"/><text x="407.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="404" y="932" width="1" height="15" fill="rgb(232,83,26)"/><text x="407.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.11%)</title><rect x="404" y="948" width="1" height="15" fill="rgb(206,116,30)"/><text x="407.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.11%)</title><rect x="404" y="964" width="1" height="15" fill="rgb(210,140,38)"/><text x="407.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.11%)</title><rect x="404" y="980" width="1" height="15" fill="rgb(217,84,54)"/><text x="407.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:121) (1 samples, 0.11%)</title><rect x="404" y="996" width="1" height="15" fill="rgb(231,171,30)"/><text x="407.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (7 samples, 0.79%)</title><rect x="397" y="148" width="9" height="15" fill="rgb(207,143,21)"/><text x="400.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="164" width="9" height="15" fill="rgb(212,80,39)"/><text x="400.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.79%)</title><rect x="397" y="180" width="9" height="15" fill="rgb(232,211,53)"/><text x="400.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="196" width="9" height="15" fill="rgb(242,24,11)"/><text x="400.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="212" width="9" height="15" fill="rgb(206,48,17)"/><text x="400.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="228" width="9" height="15" fill="rgb(254,212,29)"/><text x="400.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="244" width="9" height="15" fill="rgb(238,48,36)"/><text x="400.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="260" width="9" height="15" fill="rgb(250,115,36)"/><text x="400.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="276" width="9" height="15" fill="rgb(251,212,17)"/><text x="400.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 0.79%)</title><rect x="397" y="292" width="9" height="15" fill="rgb(238,181,36)"/><text x="400.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="308" width="9" height="15" fill="rgb(252,15,51)"/><text x="400.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="324" width="9" height="15" fill="rgb(226,227,16)"/><text x="400.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="340" width="9" height="15" fill="rgb(207,111,23)"/><text x="400.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="356" width="9" height="15" fill="rgb(209,54,37)"/><text x="400.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="372" width="9" height="15" fill="rgb(246,208,32)"/><text x="400.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 0.79%)</title><rect x="397" y="388" width="9" height="15" fill="rgb(214,63,16)"/><text x="400.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="404" width="9" height="15" fill="rgb(231,220,28)"/><text x="400.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="420" width="9" height="15" fill="rgb(236,90,5)"/><text x="400.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="436" width="9" height="15" fill="rgb(236,39,54)"/><text x="400.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="452" width="9" height="15" fill="rgb(248,12,49)"/><text x="400.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="468" width="9" height="15" fill="rgb(219,57,43)"/><text x="400.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 0.79%)</title><rect x="397" y="484" width="9" height="15" fill="rgb(246,11,7)"/><text x="400.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="500" width="9" height="15" fill="rgb(239,105,29)"/><text x="400.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="516" width="9" height="15" fill="rgb(222,79,25)"/><text x="400.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="532" width="9" height="15" fill="rgb(250,17,30)"/><text x="400.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="548" width="9" height="15" fill="rgb(210,13,29)"/><text x="400.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="564" width="9" height="15" fill="rgb(251,16,16)"/><text x="400.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 0.79%)</title><rect x="397" y="580" width="9" height="15" fill="rgb(245,89,32)"/><text x="400.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="596" width="9" height="15" fill="rgb(225,106,20)"/><text x="400.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.79%)</title><rect x="397" y="612" width="9" height="15" fill="rgb(232,160,22)"/><text x="400.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="628" width="9" height="15" fill="rgb(236,113,25)"/><text x="400.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="644" width="9" height="15" fill="rgb(252,65,33)"/><text x="400.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="660" width="9" height="15" fill="rgb(220,206,23)"/><text x="400.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="676" width="9" height="15" fill="rgb(254,143,11)"/><text x="400.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="692" width="9" height="15" fill="rgb(229,184,30)"/><text x="400.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="708" width="9" height="15" fill="rgb(222,156,54)"/><text x="400.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 0.79%)</title><rect x="397" y="724" width="9" height="15" fill="rgb(220,47,21)"/><text x="400.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.79%)</title><rect x="397" y="740" width="9" height="15" fill="rgb(212,1,5)"/><text x="400.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.79%)</title><rect x="397" y="756" width="9" height="15" fill="rgb(253,83,36)"/><text x="400.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.79%)</title><rect x="397" y="772" width="9" height="15" fill="rgb(207,216,33)"/><text x="400.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.79%)</title><rect x="397" y="788" width="9" height="15" fill="rgb(254,116,54)"/><text x="400.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.79%)</title><rect x="397" y="804" width="9" height="15" fill="rgb(207,216,30)"/><text x="400.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 0.79%)</title><rect x="397" y="820" width="9" height="15" fill="rgb(247,205,27)"/><text x="400.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 0.79%)</title><rect x="397" y="836" width="9" height="15" fill="rgb(248,100,52)"/><text x="400.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.34%)</title><rect x="402" y="852" width="4" height="15" fill="rgb(247,90,53)"/><text x="405.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.34%)</title><rect x="402" y="868" width="4" height="15" fill="rgb(238,56,32)"/><text x="405.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.11%)</title><rect x="405" y="884" width="1" height="15" fill="rgb(231,25,23)"/><text x="408.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.11%)</title><rect x="405" y="900" width="1" height="15" fill="rgb(234,1,25)"/><text x="408.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.11%)</title><rect x="405" y="916" width="1" height="15" fill="rgb(247,178,32)"/><text x="408.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.11%)</title><rect x="405" y="932" width="1" height="15" fill="rgb(206,83,37)"/><text x="408.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.11%)</title><rect x="405" y="948" width="1" height="15" fill="rgb(239,44,5)"/><text x="408.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.11%)</title><rect x="405" y="964" width="1" height="15" fill="rgb(211,62,17)"/><text x="408.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (1 samples, 0.11%)</title><rect x="406" y="148" width="2" height="15" fill="rgb(233,74,16)"/><text x="409.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="164" width="2" height="15" fill="rgb(229,152,52)"/><text x="409.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="406" y="180" width="2" height="15" fill="rgb(233,120,50)"/><text x="409.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="196" width="2" height="15" fill="rgb(248,20,6)"/><text x="409.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="212" width="2" height="15" fill="rgb(222,79,16)"/><text x="409.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="228" width="2" height="15" fill="rgb(236,35,44)"/><text x="409.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="244" width="2" height="15" fill="rgb(226,157,29)"/><text x="409.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="260" width="2" height="15" fill="rgb(229,214,43)"/><text x="409.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="276" width="2" height="15" fill="rgb(221,180,23)"/><text x="409.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.11%)</title><rect x="406" y="292" width="2" height="15" fill="rgb(254,221,33)"/><text x="409.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="308" width="2" height="15" fill="rgb(250,20,30)"/><text x="409.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="324" width="2" height="15" fill="rgb(218,18,48)"/><text x="409.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="340" width="2" height="15" fill="rgb(247,52,49)"/><text x="409.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="356" width="2" height="15" fill="rgb(210,65,20)"/><text x="409.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="372" width="2" height="15" fill="rgb(226,119,20)"/><text x="409.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.11%)</title><rect x="406" y="388" width="2" height="15" fill="rgb(240,33,53)"/><text x="409.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="404" width="2" height="15" fill="rgb(220,48,49)"/><text x="409.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="420" width="2" height="15" fill="rgb(240,62,1)"/><text x="409.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="436" width="2" height="15" fill="rgb(215,204,45)"/><text x="409.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="452" width="2" height="15" fill="rgb(210,163,51)"/><text x="409.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="468" width="2" height="15" fill="rgb(238,9,37)"/><text x="409.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.11%)</title><rect x="406" y="484" width="2" height="15" fill="rgb(221,170,53)"/><text x="409.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="500" width="2" height="15" fill="rgb(226,161,44)"/><text x="409.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="516" width="2" height="15" fill="rgb(246,7,44)"/><text x="409.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="532" width="2" height="15" fill="rgb(229,207,49)"/><text x="409.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="548" width="2" height="15" fill="rgb(213,166,17)"/><text x="409.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="564" width="2" height="15" fill="rgb(252,4,26)"/><text x="409.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.11%)</title><rect x="406" y="580" width="2" height="15" fill="rgb(247,34,54)"/><text x="409.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="596" width="2" height="15" fill="rgb(210,17,50)"/><text x="409.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="612" width="2" height="15" fill="rgb(233,191,2)"/><text x="409.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="628" width="2" height="15" fill="rgb(233,5,34)"/><text x="409.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="644" width="2" height="15" fill="rgb(222,198,12)"/><text x="409.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="660" width="2" height="15" fill="rgb(253,21,28)"/><text x="409.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.11%)</title><rect x="406" y="676" width="2" height="15" fill="rgb(248,67,21)"/><text x="409.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="692" width="2" height="15" fill="rgb(236,115,44)"/><text x="409.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="708" width="2" height="15" fill="rgb(233,59,13)"/><text x="409.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="724" width="2" height="15" fill="rgb(254,207,34)"/><text x="409.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="740" width="2" height="15" fill="rgb(223,74,33)"/><text x="409.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="756" width="2" height="15" fill="rgb(240,30,0)"/><text x="409.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.11%)</title><rect x="406" y="772" width="2" height="15" fill="rgb(231,18,49)"/><text x="409.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="788" width="2" height="15" fill="rgb(205,210,7)"/><text x="409.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="804" width="2" height="15" fill="rgb(251,214,12)"/><text x="409.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="820" width="2" height="15" fill="rgb(220,16,49)"/><text x="409.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="836" width="2" height="15" fill="rgb(219,5,2)"/><text x="409.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="852" width="2" height="15" fill="rgb(238,39,37)"/><text x="409.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.11%)</title><rect x="406" y="868" width="2" height="15" fill="rgb(232,219,24)"/><text x="409.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="884" width="2" height="15" fill="rgb(245,57,34)"/><text x="409.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="900" width="2" height="15" fill="rgb(219,90,0)"/><text x="409.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="916" width="2" height="15" fill="rgb(232,155,45)"/><text x="409.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="406" y="932" width="2" height="15" fill="rgb(246,131,44)"/><text x="409.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="948" width="2" height="15" fill="rgb(207,120,26)"/><text x="409.00" y="958.50"></text></g><g><title>0x7fcb2cd38f0b (?) (1 samples, 0.11%)</title><rect x="406" y="964" width="2" height="15" fill="rgb(214,13,51)"/><text x="409.00" y="974.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.11%)</title><rect x="408" y="484" width="1" height="15" fill="rgb(236,180,41)"/><text x="411.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="500" width="1" height="15" fill="rgb(221,191,32)"/><text x="411.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="516" width="1" height="15" fill="rgb(227,2,36)"/><text x="411.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="532" width="1" height="15" fill="rgb(254,74,16)"/><text x="411.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="548" width="1" height="15" fill="rgb(227,175,20)"/><text x="411.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="564" width="1" height="15" fill="rgb(218,12,7)"/><text x="411.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.11%)</title><rect x="408" y="580" width="1" height="15" fill="rgb(233,197,48)"/><text x="411.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="596" width="1" height="15" fill="rgb(229,151,34)"/><text x="411.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="612" width="1" height="15" fill="rgb(246,30,38)"/><text x="411.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="628" width="1" height="15" fill="rgb(252,175,45)"/><text x="411.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="644" width="1" height="15" fill="rgb(243,18,11)"/><text x="411.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="660" width="1" height="15" fill="rgb(213,56,29)"/><text x="411.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.11%)</title><rect x="408" y="676" width="1" height="15" fill="rgb(234,3,17)"/><text x="411.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="692" width="1" height="15" fill="rgb(222,73,53)"/><text x="411.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="708" width="1" height="15" fill="rgb(205,210,44)"/><text x="411.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="724" width="1" height="15" fill="rgb(240,29,18)"/><text x="411.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="740" width="1" height="15" fill="rgb(209,129,50)"/><text x="411.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="756" width="1" height="15" fill="rgb(229,19,7)"/><text x="411.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.11%)</title><rect x="408" y="772" width="1" height="15" fill="rgb(253,185,48)"/><text x="411.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="788" width="1" height="15" fill="rgb(231,202,0)"/><text x="411.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="804" width="1" height="15" fill="rgb(249,223,7)"/><text x="411.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="820" width="1" height="15" fill="rgb(244,72,7)"/><text x="411.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="836" width="1" height="15" fill="rgb(229,138,22)"/><text x="411.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="852" width="1" height="15" fill="rgb(253,108,21)"/><text x="411.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.11%)</title><rect x="408" y="868" width="1" height="15" fill="rgb(235,57,41)"/><text x="411.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="884" width="1" height="15" fill="rgb(210,26,37)"/><text x="411.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="900" width="1" height="15" fill="rgb(227,122,19)"/><text x="411.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="916" width="1" height="15" fill="rgb(254,200,26)"/><text x="411.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="932" width="1" height="15" fill="rgb(215,222,11)"/><text x="411.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="948" width="1" height="15" fill="rgb(219,120,35)"/><text x="411.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.11%)</title><rect x="408" y="964" width="1" height="15" fill="rgb(253,180,46)"/><text x="411.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="980" width="1" height="15" fill="rgb(251,72,45)"/><text x="411.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="996" width="1" height="15" fill="rgb(207,189,39)"/><text x="411.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="1012" width="1" height="15" fill="rgb(248,198,11)"/><text x="411.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="1028" width="1" height="15" fill="rgb(235,135,28)"/><text x="411.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="1044" width="1" height="15" fill="rgb(223,180,31)"/><text x="411.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (1 samples, 0.11%)</title><rect x="408" y="1060" width="1" height="15" fill="rgb(222,55,16)"/><text x="411.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="1076" width="1" height="15" fill="rgb(218,227,14)"/><text x="411.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="1092" width="1" height="15" fill="rgb(235,227,29)"/><text x="411.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="1108" width="1" height="15" fill="rgb(231,161,31)"/><text x="411.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="1124" width="1" height="15" fill="rgb(249,10,50)"/><text x="411.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="1140" width="1" height="15" fill="rgb(238,165,2)"/><text x="411.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py:30) (1 samples, 0.11%)</title><rect x="408" y="1156" width="1" height="15" fill="rgb(232,142,46)"/><text x="411.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="1172" width="1" height="15" fill="rgb(247,166,52)"/><text x="411.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="1188" width="1" height="15" fill="rgb(239,183,26)"/><text x="411.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="1204" width="1" height="15" fill="rgb(217,98,39)"/><text x="411.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="408" y="1220" width="1" height="15" fill="rgb(227,23,32)"/><text x="411.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="408" y="1236" width="1" height="15" fill="rgb(227,107,2)"/><text x="411.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py:28) (1 samples, 0.11%)</title><rect x="408" y="1252" width="1" height="15" fill="rgb(229,204,43)"/><text x="411.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="408" y="1268" width="1" height="15" fill="rgb(250,119,10)"/><text x="411.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="408" y="1284" width="1" height="15" fill="rgb(242,107,14)"/><text x="411.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="408" y="1300" width="1" height="15" fill="rgb(207,1,15)"/><text x="411.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="408" y="1316" width="1" height="15" fill="rgb(218,11,42)"/><text x="411.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="408" y="1332" width="1" height="15" fill="rgb(224,127,37)"/><text x="411.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="408" y="1348" width="1" height="15" fill="rgb(208,228,9)"/><text x="411.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.22%)</title><rect x="408" y="244" width="2" height="15" fill="rgb(206,226,20)"/><text x="411.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="408" y="260" width="2" height="15" fill="rgb(226,30,14)"/><text x="411.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="408" y="276" width="2" height="15" fill="rgb(233,14,51)"/><text x="411.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="408" y="292" width="2" height="15" fill="rgb(218,93,51)"/><text x="411.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="408" y="308" width="2" height="15" fill="rgb(237,71,39)"/><text x="411.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="408" y="324" width="2" height="15" fill="rgb(230,6,22)"/><text x="411.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.22%)</title><rect x="408" y="340" width="2" height="15" fill="rgb(214,95,49)"/><text x="411.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="408" y="356" width="2" height="15" fill="rgb(234,1,54)"/><text x="411.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="408" y="372" width="2" height="15" fill="rgb(222,46,17)"/><text x="411.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="408" y="388" width="2" height="15" fill="rgb(249,10,17)"/><text x="411.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="408" y="404" width="2" height="15" fill="rgb(250,45,22)"/><text x="411.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="408" y="420" width="2" height="15" fill="rgb(227,95,27)"/><text x="411.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="408" y="436" width="2" height="15" fill="rgb(225,130,48)"/><text x="411.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="408" y="452" width="2" height="15" fill="rgb(224,149,44)"/><text x="411.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="408" y="468" width="2" height="15" fill="rgb(231,45,36)"/><text x="411.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.11%)</title><rect x="409" y="484" width="1" height="15" fill="rgb(232,65,35)"/><text x="412.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="500" width="1" height="15" fill="rgb(250,80,15)"/><text x="412.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="516" width="1" height="15" fill="rgb(235,184,24)"/><text x="412.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="532" width="1" height="15" fill="rgb(220,185,32)"/><text x="412.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="548" width="1" height="15" fill="rgb(219,43,44)"/><text x="412.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="564" width="1" height="15" fill="rgb(249,18,30)"/><text x="412.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.11%)</title><rect x="409" y="580" width="1" height="15" fill="rgb(239,127,2)"/><text x="412.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="596" width="1" height="15" fill="rgb(209,183,30)"/><text x="412.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="409" y="612" width="1" height="15" fill="rgb(252,224,29)"/><text x="412.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="628" width="1" height="15" fill="rgb(217,68,17)"/><text x="412.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="644" width="1" height="15" fill="rgb(211,189,24)"/><text x="412.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="660" width="1" height="15" fill="rgb(211,221,12)"/><text x="412.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="676" width="1" height="15" fill="rgb(249,45,33)"/><text x="412.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="692" width="1" height="15" fill="rgb(228,178,41)"/><text x="412.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="708" width="1" height="15" fill="rgb(213,49,14)"/><text x="412.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.11%)</title><rect x="409" y="724" width="1" height="15" fill="rgb(233,165,41)"/><text x="412.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="740" width="1" height="15" fill="rgb(216,31,38)"/><text x="412.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="756" width="1" height="15" fill="rgb(224,115,1)"/><text x="412.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="772" width="1" height="15" fill="rgb(223,203,19)"/><text x="412.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="788" width="1" height="15" fill="rgb(239,55,5)"/><text x="412.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="804" width="1" height="15" fill="rgb(235,209,46)"/><text x="412.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.11%)</title><rect x="409" y="820" width="1" height="15" fill="rgb(205,159,19)"/><text x="412.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="836" width="1" height="15" fill="rgb(241,213,1)"/><text x="412.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="852" width="1" height="15" fill="rgb(222,80,32)"/><text x="412.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="868" width="1" height="15" fill="rgb(231,194,6)"/><text x="412.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="884" width="1" height="15" fill="rgb(245,191,36)"/><text x="412.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="900" width="1" height="15" fill="rgb(226,3,17)"/><text x="412.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.11%)</title><rect x="409" y="916" width="1" height="15" fill="rgb(242,150,48)"/><text x="412.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="932" width="1" height="15" fill="rgb(252,138,8)"/><text x="412.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="409" y="948" width="1" height="15" fill="rgb(236,134,1)"/><text x="412.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="964" width="1" height="15" fill="rgb(244,73,45)"/><text x="412.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="980" width="1" height="15" fill="rgb(235,10,27)"/><text x="412.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="996" width="1" height="15" fill="rgb(228,89,40)"/><text x="412.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="1012" width="1" height="15" fill="rgb(214,34,44)"/><text x="412.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="1028" width="1" height="15" fill="rgb(223,119,47)"/><text x="412.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="1044" width="1" height="15" fill="rgb(229,80,3)"/><text x="412.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.11%)</title><rect x="409" y="1060" width="1" height="15" fill="rgb(232,142,39)"/><text x="412.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="1076" width="1" height="15" fill="rgb(214,182,6)"/><text x="412.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="1092" width="1" height="15" fill="rgb(224,30,2)"/><text x="412.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="409" y="1108" width="1" height="15" fill="rgb(235,113,25)"/><text x="412.00" y="1118.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.11%)</title><rect x="409" y="1124" width="1" height="15" fill="rgb(251,211,30)"/><text x="412.00" y="1134.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:563) (1 samples, 0.11%)</title><rect x="409" y="1140" width="1" height="15" fill="rgb(216,8,28)"/><text x="412.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.11%)</title><rect x="410" y="724" width="2" height="15" fill="rgb(214,169,28)"/><text x="413.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="740" width="2" height="15" fill="rgb(235,111,1)"/><text x="413.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="756" width="2" height="15" fill="rgb(242,50,28)"/><text x="413.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="772" width="2" height="15" fill="rgb(234,79,2)"/><text x="413.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="788" width="2" height="15" fill="rgb(236,43,49)"/><text x="413.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="804" width="2" height="15" fill="rgb(237,82,29)"/><text x="413.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.11%)</title><rect x="410" y="820" width="2" height="15" fill="rgb(253,155,0)"/><text x="413.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="836" width="2" height="15" fill="rgb(236,126,13)"/><text x="413.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="852" width="2" height="15" fill="rgb(223,147,6)"/><text x="413.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="868" width="2" height="15" fill="rgb(230,180,35)"/><text x="413.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="884" width="2" height="15" fill="rgb(219,49,1)"/><text x="413.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="900" width="2" height="15" fill="rgb(209,131,52)"/><text x="413.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.11%)</title><rect x="410" y="916" width="2" height="15" fill="rgb(234,118,5)"/><text x="413.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="932" width="2" height="15" fill="rgb(245,196,18)"/><text x="413.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="948" width="2" height="15" fill="rgb(252,208,32)"/><text x="413.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="964" width="2" height="15" fill="rgb(210,175,52)"/><text x="413.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="980" width="2" height="15" fill="rgb(207,153,35)"/><text x="413.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="996" width="2" height="15" fill="rgb(234,169,35)"/><text x="413.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.11%)</title><rect x="410" y="1012" width="2" height="15" fill="rgb(224,159,43)"/><text x="413.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="1028" width="2" height="15" fill="rgb(212,210,39)"/><text x="413.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="1044" width="2" height="15" fill="rgb(230,170,52)"/><text x="413.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="1060" width="2" height="15" fill="rgb(233,26,22)"/><text x="413.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="1076" width="2" height="15" fill="rgb(237,142,1)"/><text x="413.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1092" width="2" height="15" fill="rgb(236,15,32)"/><text x="413.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4895) (1 samples, 0.11%)</title><rect x="410" y="1108" width="2" height="15" fill="rgb(232,219,54)"/><text x="413.00" y="1118.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.11%)</title><rect x="410" y="1124" width="2" height="15" fill="rgb(214,150,27)"/><text x="413.00" y="1134.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:745) (1 samples, 0.11%)</title><rect x="410" y="1140" width="2" height="15" fill="rgb(239,26,52)"/><text x="413.00" y="1150.50"></text></g><g><title>_flex_method_SERIES (pandas/core/ops/__init__.py:1335) (1 samples, 0.11%)</title><rect x="410" y="1156" width="2" height="15" fill="rgb(238,180,5)"/><text x="413.00" y="1166.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.11%)</title><rect x="410" y="1172" width="2" height="15" fill="rgb(208,38,49)"/><text x="413.00" y="1182.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.11%)</title><rect x="410" y="1188" width="2" height="15" fill="rgb(212,51,16)"/><text x="413.00" y="1198.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="410" y="1204" width="2" height="15" fill="rgb(225,66,24)"/><text x="413.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.22%)</title><rect x="410" y="436" width="3" height="15" fill="rgb(219,186,35)"/><text x="413.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="410" y="452" width="3" height="15" fill="rgb(229,119,7)"/><text x="413.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="410" y="468" width="3" height="15" fill="rgb(225,16,22)"/><text x="413.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="410" y="484" width="3" height="15" fill="rgb(232,74,26)"/><text x="413.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="410" y="500" width="3" height="15" fill="rgb(226,123,46)"/><text x="413.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="410" y="516" width="3" height="15" fill="rgb(236,87,23)"/><text x="413.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.22%)</title><rect x="410" y="532" width="3" height="15" fill="rgb(207,201,45)"/><text x="413.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="410" y="548" width="3" height="15" fill="rgb(233,191,36)"/><text x="413.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="410" y="564" width="3" height="15" fill="rgb(225,208,12)"/><text x="413.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="410" y="580" width="3" height="15" fill="rgb(209,85,47)"/><text x="413.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="410" y="596" width="3" height="15" fill="rgb(205,193,36)"/><text x="413.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="410" y="612" width="3" height="15" fill="rgb(247,209,53)"/><text x="413.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.22%)</title><rect x="410" y="628" width="3" height="15" fill="rgb(213,181,21)"/><text x="413.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="410" y="644" width="3" height="15" fill="rgb(247,68,16)"/><text x="413.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="410" y="660" width="3" height="15" fill="rgb(232,211,43)"/><text x="413.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="410" y="676" width="3" height="15" fill="rgb(250,0,36)"/><text x="413.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="410" y="692" width="3" height="15" fill="rgb(221,194,47)"/><text x="413.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="410" y="708" width="3" height="15" fill="rgb(215,117,47)"/><text x="413.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.11%)</title><rect x="412" y="724" width="1" height="15" fill="rgb(222,152,52)"/><text x="415.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="740" width="1" height="15" fill="rgb(248,20,0)"/><text x="415.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="412" y="756" width="1" height="15" fill="rgb(248,120,52)"/><text x="415.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="772" width="1" height="15" fill="rgb(208,49,14)"/><text x="415.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="788" width="1" height="15" fill="rgb(243,78,32)"/><text x="415.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="412" y="804" width="1" height="15" fill="rgb(252,199,28)"/><text x="415.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="412" y="820" width="1" height="15" fill="rgb(235,131,39)"/><text x="415.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="412" y="836" width="1" height="15" fill="rgb(205,102,27)"/><text x="415.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="852" width="1" height="15" fill="rgb(228,199,0)"/><text x="415.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (1 samples, 0.11%)</title><rect x="412" y="868" width="1" height="15" fill="rgb(237,92,3)"/><text x="415.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="884" width="1" height="15" fill="rgb(208,204,30)"/><text x="415.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="412" y="900" width="1" height="15" fill="rgb(243,57,30)"/><text x="415.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="412" y="916" width="1" height="15" fill="rgb(229,40,54)"/><text x="415.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="412" y="932" width="1" height="15" fill="rgb(207,123,42)"/><text x="415.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="948" width="1" height="15" fill="rgb(237,184,7)"/><text x="415.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py:7) (1 samples, 0.11%)</title><rect x="412" y="964" width="1" height="15" fill="rgb(233,205,42)"/><text x="415.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="980" width="1" height="15" fill="rgb(218,123,42)"/><text x="415.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="412" y="996" width="1" height="15" fill="rgb(252,115,45)"/><text x="415.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="412" y="1012" width="1" height="15" fill="rgb(245,208,24)"/><text x="415.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="412" y="1028" width="1" height="15" fill="rgb(234,53,28)"/><text x="415.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="1044" width="1" height="15" fill="rgb(213,9,21)"/><text x="415.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py:11) (1 samples, 0.11%)</title><rect x="412" y="1060" width="1" height="15" fill="rgb(227,53,14)"/><text x="415.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="1076" width="1" height="15" fill="rgb(215,75,26)"/><text x="415.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="412" y="1092" width="1" height="15" fill="rgb(217,60,16)"/><text x="415.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="412" y="1108" width="1" height="15" fill="rgb(236,70,46)"/><text x="415.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="412" y="1124" width="1" height="15" fill="rgb(251,184,41)"/><text x="415.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="1140" width="1" height="15" fill="rgb(238,14,54)"/><text x="415.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py:9) (1 samples, 0.11%)</title><rect x="412" y="1156" width="1" height="15" fill="rgb(242,58,37)"/><text x="415.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="412" y="1172" width="1" height="15" fill="rgb(220,56,18)"/><text x="415.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="412" y="1188" width="1" height="15" fill="rgb(236,21,6)"/><text x="415.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="412" y="1204" width="1" height="15" fill="rgb(212,37,0)"/><text x="415.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="412" y="1220" width="1" height="15" fill="rgb(210,6,50)"/><text x="415.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="412" y="1236" width="1" height="15" fill="rgb(212,15,13)"/><text x="415.00" y="1246.50"></text></g><g><title>0x7fcb13aa08b7 (pandas/_libs/interval.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="412" y="1252" width="1" height="15" fill="rgb(231,73,12)"/><text x="415.00" y="1262.50"></text></g><g><title>0x7fcb13a99772 (pandas/_libs/interval.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="412" y="1268" width="1" height="15" fill="rgb(217,123,44)"/><text x="415.00" y="1278.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:4) (15 samples, 1.69%)</title><rect x="394" y="52" width="20" height="15" fill="rgb(239,210,1)"/><text x="397.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.69%)</title><rect x="394" y="68" width="20" height="15" fill="rgb(236,136,5)"/><text x="397.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.69%)</title><rect x="394" y="84" width="20" height="15" fill="rgb(220,11,44)"/><text x="397.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.69%)</title><rect x="394" y="100" width="20" height="15" fill="rgb(250,188,23)"/><text x="397.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.69%)</title><rect x="394" y="116" width="20" height="15" fill="rgb(252,55,37)"/><text x="397.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.69%)</title><rect x="394" y="132" width="20" height="15" fill="rgb(233,103,35)"/><text x="397.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (5 samples, 0.56%)</title><rect x="408" y="148" width="6" height="15" fill="rgb(211,8,42)"/><text x="411.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="408" y="164" width="6" height="15" fill="rgb(232,61,14)"/><text x="411.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="408" y="180" width="6" height="15" fill="rgb(211,172,12)"/><text x="411.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="408" y="196" width="6" height="15" fill="rgb(215,224,21)"/><text x="411.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="408" y="212" width="6" height="15" fill="rgb(240,53,30)"/><text x="411.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="408" y="228" width="6" height="15" fill="rgb(213,102,26)"/><text x="411.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.34%)</title><rect x="410" y="244" width="4" height="15" fill="rgb(215,178,29)"/><text x="413.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="410" y="260" width="4" height="15" fill="rgb(224,223,2)"/><text x="413.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="410" y="276" width="4" height="15" fill="rgb(243,106,18)"/><text x="413.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="410" y="292" width="4" height="15" fill="rgb(211,198,0)"/><text x="413.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="410" y="308" width="4" height="15" fill="rgb(242,184,40)"/><text x="413.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="410" y="324" width="4" height="15" fill="rgb(238,1,40)"/><text x="413.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.34%)</title><rect x="410" y="340" width="4" height="15" fill="rgb(236,74,24)"/><text x="413.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="410" y="356" width="4" height="15" fill="rgb(214,158,25)"/><text x="413.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="410" y="372" width="4" height="15" fill="rgb(229,184,16)"/><text x="413.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="410" y="388" width="4" height="15" fill="rgb(214,40,25)"/><text x="413.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="410" y="404" width="4" height="15" fill="rgb(233,215,46)"/><text x="413.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="410" y="420" width="4" height="15" fill="rgb(226,26,7)"/><text x="413.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.11%)</title><rect x="413" y="436" width="1" height="15" fill="rgb(223,189,50)"/><text x="416.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="452" width="1" height="15" fill="rgb(247,195,24)"/><text x="416.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="413" y="468" width="1" height="15" fill="rgb(217,58,36)"/><text x="416.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="484" width="1" height="15" fill="rgb(205,149,39)"/><text x="416.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="500" width="1" height="15" fill="rgb(243,34,40)"/><text x="416.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="516" width="1" height="15" fill="rgb(234,172,29)"/><text x="416.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="532" width="1" height="15" fill="rgb(214,224,35)"/><text x="416.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="548" width="1" height="15" fill="rgb(229,50,2)"/><text x="416.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="564" width="1" height="15" fill="rgb(237,29,20)"/><text x="416.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.11%)</title><rect x="413" y="580" width="1" height="15" fill="rgb(233,92,28)"/><text x="416.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="596" width="1" height="15" fill="rgb(222,120,22)"/><text x="416.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="612" width="1" height="15" fill="rgb(227,181,19)"/><text x="416.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="628" width="1" height="15" fill="rgb(250,102,27)"/><text x="416.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="644" width="1" height="15" fill="rgb(218,40,36)"/><text x="416.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="660" width="1" height="15" fill="rgb(244,103,6)"/><text x="416.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.11%)</title><rect x="413" y="676" width="1" height="15" fill="rgb(230,155,4)"/><text x="416.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="692" width="1" height="15" fill="rgb(232,116,5)"/><text x="416.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="708" width="1" height="15" fill="rgb(215,128,9)"/><text x="416.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="724" width="1" height="15" fill="rgb(233,157,31)"/><text x="416.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="740" width="1" height="15" fill="rgb(223,102,1)"/><text x="416.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="756" width="1" height="15" fill="rgb(216,213,30)"/><text x="416.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.11%)</title><rect x="413" y="772" width="1" height="15" fill="rgb(207,13,36)"/><text x="416.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="788" width="1" height="15" fill="rgb(230,120,40)"/><text x="416.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="804" width="1" height="15" fill="rgb(221,151,47)"/><text x="416.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="820" width="1" height="15" fill="rgb(248,91,8)"/><text x="416.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="836" width="1" height="15" fill="rgb(254,150,45)"/><text x="416.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="852" width="1" height="15" fill="rgb(239,80,48)"/><text x="416.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.11%)</title><rect x="413" y="868" width="1" height="15" fill="rgb(218,53,5)"/><text x="416.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="884" width="1" height="15" fill="rgb(213,51,2)"/><text x="416.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="413" y="900" width="1" height="15" fill="rgb(235,195,48)"/><text x="416.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="916" width="1" height="15" fill="rgb(217,199,28)"/><text x="416.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="932" width="1" height="15" fill="rgb(210,118,24)"/><text x="416.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="948" width="1" height="15" fill="rgb(220,11,12)"/><text x="416.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="964" width="1" height="15" fill="rgb(223,161,53)"/><text x="416.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="980" width="1" height="15" fill="rgb(252,131,50)"/><text x="416.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="996" width="1" height="15" fill="rgb(239,15,21)"/><text x="416.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.11%)</title><rect x="413" y="1012" width="1" height="15" fill="rgb(250,207,52)"/><text x="416.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="1028" width="1" height="15" fill="rgb(212,112,54)"/><text x="416.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="1044" width="1" height="15" fill="rgb(227,131,28)"/><text x="416.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="1060" width="1" height="15" fill="rgb(250,202,36)"/><text x="416.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="1076" width="1" height="15" fill="rgb(222,137,33)"/><text x="416.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1092" width="1" height="15" fill="rgb(214,16,35)"/><text x="416.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.11%)</title><rect x="413" y="1108" width="1" height="15" fill="rgb(231,227,16)"/><text x="416.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="413" y="1124" width="1" height="15" fill="rgb(250,137,11)"/><text x="416.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1140" width="1" height="15" fill="rgb(235,125,11)"/><text x="416.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="1156" width="1" height="15" fill="rgb(246,79,34)"/><text x="416.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="1172" width="1" height="15" fill="rgb(248,83,18)"/><text x="416.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="1188" width="1" height="15" fill="rgb(243,177,46)"/><text x="416.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="1204" width="1" height="15" fill="rgb(245,120,10)"/><text x="416.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1220" width="1" height="15" fill="rgb(236,25,23)"/><text x="416.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.11%)</title><rect x="413" y="1236" width="1" height="15" fill="rgb(242,51,41)"/><text x="416.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="413" y="1252" width="1" height="15" fill="rgb(248,38,4)"/><text x="416.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1268" width="1" height="15" fill="rgb(215,20,48)"/><text x="416.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="1284" width="1" height="15" fill="rgb(225,123,28)"/><text x="416.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="1300" width="1" height="15" fill="rgb(206,64,40)"/><text x="416.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="1316" width="1" height="15" fill="rgb(246,160,41)"/><text x="416.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="1332" width="1" height="15" fill="rgb(223,115,23)"/><text x="416.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1348" width="1" height="15" fill="rgb(205,210,31)"/><text x="416.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.11%)</title><rect x="413" y="1364" width="1" height="15" fill="rgb(249,225,17)"/><text x="416.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="413" y="1380" width="1" height="15" fill="rgb(219,138,30)"/><text x="416.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="413" y="1396" width="1" height="15" fill="rgb(223,64,27)"/><text x="416.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="413" y="1412" width="1" height="15" fill="rgb(219,218,48)"/><text x="416.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="413" y="1428" width="1" height="15" fill="rgb(239,89,19)"/><text x="416.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="413" y="1444" width="1" height="15" fill="rgb(252,55,0)"/><text x="416.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.11%)</title><rect x="413" y="1460" width="1" height="15" fill="rgb(246,120,52)"/><text x="416.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.11%)</title><rect x="413" y="1476" width="1" height="15" fill="rgb(249,150,18)"/><text x="416.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.11%)</title><rect x="413" y="1492" width="1" height="15" fill="rgb(234,89,40)"/><text x="416.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.11%)</title><rect x="413" y="1508" width="1" height="15" fill="rgb(250,99,23)"/><text x="416.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.11%)</title><rect x="413" y="1524" width="1" height="15" fill="rgb(213,195,52)"/><text x="416.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.11%)</title><rect x="413" y="1540" width="1" height="15" fill="rgb(209,163,42)"/><text x="416.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="413" y="1556" width="1" height="15" fill="rgb(205,70,7)"/><text x="416.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:133) (1 samples, 0.11%)</title><rect x="413" y="1572" width="1" height="15" fill="rgb(232,206,16)"/><text x="416.00" y="1582.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="414" y="116" width="2" height="15" fill="rgb(206,69,37)"/><text x="417.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="414" y="132" width="2" height="15" fill="rgb(241,199,27)"/><text x="417.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="414" y="148" width="2" height="15" fill="rgb(227,67,18)"/><text x="417.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="414" y="164" width="2" height="15" fill="rgb(248,98,30)"/><text x="417.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="414" y="180" width="2" height="15" fill="rgb(221,72,24)"/><text x="417.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="414" y="196" width="2" height="15" fill="rgb(233,225,18)"/><text x="417.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:87) (1 samples, 0.11%)</title><rect x="414" y="212" width="2" height="15" fill="rgb(221,103,38)"/><text x="417.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py:711) (1 samples, 0.11%)</title><rect x="414" y="228" width="2" height="15" fill="rgb(254,63,29)"/><text x="417.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.11%)</title><rect x="414" y="244" width="2" height="15" fill="rgb(228,54,38)"/><text x="417.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.11%)</title><rect x="414" y="260" width="2" height="15" fill="rgb(240,142,19)"/><text x="417.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.11%)</title><rect x="414" y="276" width="2" height="15" fill="rgb(208,65,15)"/><text x="417.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.11%)</title><rect x="414" y="292" width="2" height="15" fill="rgb(210,169,17)"/><text x="417.00" y="302.50"></text></g><g><title>extract (traceback.py:359) (1 samples, 0.11%)</title><rect x="414" y="308" width="2" height="15" fill="rgb(234,136,40)"/><text x="417.00" y="318.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.11%)</title><rect x="416" y="196" width="1" height="15" fill="rgb(250,6,43)"/><text x="419.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="416" y="212" width="1" height="15" fill="rgb(229,12,5)"/><text x="419.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="416" y="228" width="1" height="15" fill="rgb(251,183,46)"/><text x="419.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="416" y="244" width="1" height="15" fill="rgb(217,119,52)"/><text x="419.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="416" y="260" width="1" height="15" fill="rgb(211,57,16)"/><text x="419.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="416" y="276" width="1" height="15" fill="rgb(227,189,1)"/><text x="419.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.11%)</title><rect x="416" y="292" width="1" height="15" fill="rgb(249,148,52)"/><text x="419.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="416" y="308" width="1" height="15" fill="rgb(239,165,11)"/><text x="419.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="416" y="324" width="1" height="15" fill="rgb(238,161,43)"/><text x="419.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="416" y="340" width="1" height="15" fill="rgb(244,174,2)"/><text x="419.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="416" y="356" width="1" height="15" fill="rgb(219,26,16)"/><text x="419.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="416" y="372" width="1" height="15" fill="rgb(215,40,24)"/><text x="419.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.11%)</title><rect x="416" y="388" width="1" height="15" fill="rgb(236,122,36)"/><text x="419.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.11%)</title><rect x="416" y="404" width="1" height="15" fill="rgb(232,100,19)"/><text x="419.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.11%)</title><rect x="416" y="420" width="1" height="15" fill="rgb(206,209,41)"/><text x="419.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.11%)</title><rect x="416" y="436" width="1" height="15" fill="rgb(237,190,30)"/><text x="419.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="416" y="452" width="1" height="15" fill="rgb(230,82,40)"/><text x="419.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.11%)</title><rect x="416" y="468" width="1" height="15" fill="rgb(244,203,42)"/><text x="419.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.11%)</title><rect x="416" y="484" width="1" height="15" fill="rgb(230,225,19)"/><text x="419.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py:204) (1 samples, 0.11%)</title><rect x="416" y="500" width="1" height="15" fill="rgb(227,189,40)"/><text x="419.00" y="510.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.11%)</title><rect x="416" y="516" width="1" height="15" fill="rgb(206,71,50)"/><text x="419.00" y="526.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:28) (3 samples, 0.34%)</title><rect x="414" y="84" width="4" height="15" fill="rgb(232,174,54)"/><text x="417.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.34%)</title><rect x="414" y="100" width="4" height="15" fill="rgb(225,197,38)"/><text x="417.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.22%)</title><rect x="416" y="116" width="2" height="15" fill="rgb(241,133,28)"/><text x="419.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.22%)</title><rect x="416" y="132" width="2" height="15" fill="rgb(213,7,28)"/><text x="419.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.22%)</title><rect x="416" y="148" width="2" height="15" fill="rgb(250,107,10)"/><text x="419.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.22%)</title><rect x="416" y="164" width="2" height="15" fill="rgb(254,227,19)"/><text x="419.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.22%)</title><rect x="416" y="180" width="2" height="15" fill="rgb(239,16,41)"/><text x="419.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:29) (1 samples, 0.11%)</title><rect x="417" y="196" width="1" height="15" fill="rgb(226,151,43)"/><text x="420.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py:76) (1 samples, 0.11%)</title><rect x="417" y="212" width="1" height="15" fill="rgb(227,18,42)"/><text x="420.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:91) (1 samples, 0.11%)</title><rect x="417" y="228" width="1" height="15" fill="rgb(246,147,45)"/><text x="420.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:24) (1 samples, 0.11%)</title><rect x="417" y="244" width="1" height="15" fill="rgb(245,86,32)"/><text x="420.00" y="254.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/_op.py:375) (1 samples, 0.11%)</title><rect x="417" y="260" width="1" height="15" fill="rgb(254,175,30)"/><text x="420.00" y="270.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/_op.py:262) (1 samples, 0.11%)</title><rect x="417" y="276" width="1" height="15" fill="rgb(254,41,17)"/><text x="420.00" y="286.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/_op.py:79) (1 samples, 0.11%)</title><rect x="417" y="292" width="1" height="15" fill="rgb(209,71,29)"/><text x="420.00" y="302.50"></text></g><g><title>0x7fcb41b4adc8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="417" y="308" width="1" height="15" fill="rgb(235,21,53)"/><text x="420.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (2 samples, 0.22%)</title><rect x="420" y="180" width="2" height="15" fill="rgb(236,147,52)"/><text x="423.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="422" y="180" width="2" height="15" fill="rgb(218,69,4)"/><text x="425.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.11%)</title><rect x="428" y="212" width="1" height="15" fill="rgb(218,191,51)"/><text x="431.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.11%)</title><rect x="428" y="228" width="1" height="15" fill="rgb(241,213,1)"/><text x="431.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.11%)</title><rect x="428" y="244" width="1" height="15" fill="rgb(246,156,6)"/><text x="431.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.11%)</title><rect x="428" y="260" width="1" height="15" fill="rgb(217,11,14)"/><text x="431.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="429" y="212" width="1" height="15" fill="rgb(254,34,32)"/><text x="432.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="429" y="228" width="1" height="15" fill="rgb(241,116,36)"/><text x="432.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.11%)</title><rect x="429" y="244" width="1" height="15" fill="rgb(216,54,24)"/><text x="432.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="429" y="260" width="1" height="15" fill="rgb(235,144,15)"/><text x="432.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.11%)</title><rect x="429" y="276" width="1" height="15" fill="rgb(228,182,26)"/><text x="432.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.11%)</title><rect x="429" y="292" width="1" height="15" fill="rgb(251,19,36)"/><text x="432.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.11%)</title><rect x="429" y="308" width="1" height="15" fill="rgb(223,30,17)"/><text x="432.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (1 samples, 0.11%)</title><rect x="429" y="324" width="1" height="15" fill="rgb(246,136,2)"/><text x="432.00" y="334.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.11%)</title><rect x="430" y="228" width="2" height="15" fill="rgb(211,72,21)"/><text x="433.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.11%)</title><rect x="430" y="244" width="2" height="15" fill="rgb(212,22,31)"/><text x="433.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.11%)</title><rect x="430" y="260" width="2" height="15" fill="rgb(237,73,3)"/><text x="433.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.45%)</title><rect x="428" y="196" width="5" height="15" fill="rgb(232,71,12)"/><text x="431.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.22%)</title><rect x="430" y="212" width="3" height="15" fill="rgb(236,118,12)"/><text x="433.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="432" y="228" width="1" height="15" fill="rgb(210,46,32)"/><text x="435.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="432" y="244" width="1" height="15" fill="rgb(229,13,7)"/><text x="435.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="432" y="260" width="1" height="15" fill="rgb(207,205,27)"/><text x="435.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.11%)</title><rect x="432" y="276" width="1" height="15" fill="rgb(245,73,16)"/><text x="435.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.11%)</title><rect x="432" y="292" width="1" height="15" fill="rgb(254,216,38)"/><text x="435.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.11%)</title><rect x="436" y="228" width="1" height="15" fill="rgb(236,3,31)"/><text x="439.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="436" y="244" width="1" height="15" fill="rgb(233,61,5)"/><text x="439.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="436" y="260" width="1" height="15" fill="rgb(240,89,24)"/><text x="439.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="436" y="276" width="1" height="15" fill="rgb(230,155,31)"/><text x="439.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="436" y="292" width="1" height="15" fill="rgb(248,197,15)"/><text x="439.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.11%)</title><rect x="436" y="308" width="1" height="15" fill="rgb(246,43,20)"/><text x="439.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="436" y="324" width="1" height="15" fill="rgb(242,227,51)"/><text x="439.00" y="334.50"></text></g><g><title>0x7fcb41bebe62 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="436" y="340" width="1" height="15" fill="rgb(207,209,51)"/><text x="439.00" y="350.50"></text></g><g><title>0x7fcb41bee9bd (libm-2.29.so) (2 samples, 0.22%)</title><rect x="437" y="324" width="3" height="15" fill="rgb(211,103,44)"/><text x="440.00" y="334.50"></text></g><g><title>0x7fcb41bee9cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="440" y="324" width="1" height="15" fill="rgb(235,191,16)"/><text x="443.00" y="334.50"></text></g><g><title>0x7fcb41bee9d4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="441" y="324" width="1" height="15" fill="rgb(220,25,31)"/><text x="444.00" y="334.50"></text></g><g><title>0x7fcb41beea15 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="442" y="324" width="3" height="15" fill="rgb(229,0,17)"/><text x="445.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (7 samples, 0.79%)</title><rect x="437" y="308" width="9" height="15" fill="rgb(218,69,1)"/><text x="440.00" y="318.50"></text></g><g><title>0x7fcb41beea21 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="445" y="324" width="1" height="15" fill="rgb(225,163,36)"/><text x="448.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.01%)</title><rect x="437" y="228" width="12" height="15" fill="rgb(240,221,25)"/><text x="440.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="437" y="244" width="12" height="15" fill="rgb(249,108,41)"/><text x="440.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="437" y="260" width="12" height="15" fill="rgb(223,22,34)"/><text x="440.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 1.01%)</title><rect x="437" y="276" width="12" height="15" fill="rgb(227,16,2)"/><text x="440.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 1.01%)</title><rect x="437" y="292" width="12" height="15" fill="rgb(205,162,35)"/><text x="440.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (2 samples, 0.22%)</title><rect x="446" y="308" width="3" height="15" fill="rgb(237,66,52)"/><text x="449.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (2 samples, 0.22%)</title><rect x="446" y="324" width="3" height="15" fill="rgb(206,154,48)"/><text x="449.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="452" y="292" width="1" height="15" fill="rgb(228,73,25)"/><text x="455.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.11%)</title><rect x="452" y="308" width="1" height="15" fill="rgb(223,215,30)"/><text x="455.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.11%)</title><rect x="454" y="324" width="1" height="15" fill="rgb(220,220,35)"/><text x="457.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(243,219,34)"/><text x="458.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(231,186,21)"/><text x="458.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(214,148,43)"/><text x="458.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="455" y="404" width="2" height="15" fill="rgb(215,41,36)"/><text x="458.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.11%)</title><rect x="455" y="420" width="2" height="15" fill="rgb(239,188,15)"/><text x="458.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.11%)</title><rect x="455" y="436" width="2" height="15" fill="rgb(222,129,36)"/><text x="458.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="457" y="356" width="1" height="15" fill="rgb(246,2,25)"/><text x="460.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="457" y="372" width="1" height="15" fill="rgb(222,204,14)"/><text x="460.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.11%)</title><rect x="457" y="388" width="1" height="15" fill="rgb(244,223,28)"/><text x="460.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2605) (1 samples, 0.11%)</title><rect x="457" y="404" width="1" height="15" fill="rgb(227,1,41)"/><text x="460.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="458" y="372" width="1" height="15" fill="rgb(215,90,42)"/><text x="461.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="459" y="372" width="2" height="15" fill="rgb(215,131,13)"/><text x="462.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.22%)</title><rect x="461" y="388" width="2" height="15" fill="rgb(232,210,7)"/><text x="464.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="463" y="388" width="3" height="15" fill="rgb(248,165,42)"/><text x="466.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="466" y="388" width="1" height="15" fill="rgb(249,79,19)"/><text x="469.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="466" y="404" width="1" height="15" fill="rgb(207,98,39)"/><text x="469.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="467" y="388" width="2" height="15" fill="rgb(225,143,18)"/><text x="470.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (28 samples, 3.15%)</title><rect x="433" y="196" width="37" height="15" fill="rgb(252,164,14)"/><text x="436.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 3.04%)</title><rect x="434" y="212" width="36" height="15" fill="rgb(239,226,32)"/><text x="437.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (16 samples, 1.80%)</title><rect x="449" y="228" width="21" height="15" fill="rgb(244,71,34)"/><text x="452.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (15 samples, 1.69%)</title><rect x="450" y="244" width="20" height="15" fill="rgb(212,44,46)"/><text x="453.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 1.57%)</title><rect x="452" y="260" width="18" height="15" fill="rgb(249,199,2)"/><text x="455.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (14 samples, 1.57%)</title><rect x="452" y="276" width="18" height="15" fill="rgb(250,206,51)"/><text x="455.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (13 samples, 1.46%)</title><rect x="453" y="292" width="17" height="15" fill="rgb(246,210,16)"/><text x="456.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.35%)</title><rect x="454" y="308" width="16" height="15" fill="rgb(238,198,6)"/><text x="457.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.24%)</title><rect x="455" y="324" width="15" height="15" fill="rgb(248,51,13)"/><text x="458.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.24%)</title><rect x="455" y="340" width="15" height="15" fill="rgb(252,68,53)"/><text x="458.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 1.01%)</title><rect x="458" y="356" width="12" height="15" fill="rgb(225,171,33)"/><text x="461.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.79%)</title><rect x="461" y="372" width="9" height="15" fill="rgb(215,61,53)"/><text x="464.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="469" y="388" width="1" height="15" fill="rgb(247,194,52)"/><text x="472.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.11%)</title><rect x="470" y="196" width="1" height="15" fill="rgb(226,212,12)"/><text x="473.00" y="206.50"></text></g><g><title>0x7fcb025ca422 (?) (1 samples, 0.11%)</title><rect x="471" y="244" width="2" height="15" fill="rgb(243,22,19)"/><text x="474.00" y="254.50"></text></g><g><title>0x7fcb025d089e (?) (1 samples, 0.11%)</title><rect x="471" y="260" width="2" height="15" fill="rgb(217,7,34)"/><text x="474.00" y="270.50"></text></g><g><title>0x7fcb025d074f (?) (1 samples, 0.11%)</title><rect x="471" y="276" width="2" height="15" fill="rgb(218,125,35)"/><text x="474.00" y="286.50"></text></g><g><title>0x7fcb025d6a3a (?) (1 samples, 0.11%)</title><rect x="471" y="292" width="2" height="15" fill="rgb(217,29,4)"/><text x="474.00" y="302.50"></text></g><g><title>0x7fcb0ba28cfa (?) (1 samples, 0.11%)</title><rect x="471" y="308" width="2" height="15" fill="rgb(234,163,44)"/><text x="474.00" y="318.50"></text></g><g><title>0x7fcb0ba31daa (?) (1 samples, 0.11%)</title><rect x="471" y="324" width="2" height="15" fill="rgb(231,205,15)"/><text x="474.00" y="334.50"></text></g><g><title>0x7fcb0ba33cf0 (?) (1 samples, 0.11%)</title><rect x="471" y="340" width="2" height="15" fill="rgb(227,155,20)"/><text x="474.00" y="350.50"></text></g><g><title>0x7fcb0ba33ea0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="473" y="468" width="2" height="15" fill="rgb(242,102,28)"/><text x="476.00" y="478.50"></text></g><g><title>0x7fcb0ba33ea9 (libgomp.so.1.0.0) (7 samples, 0.79%)</title><rect x="475" y="468" width="10" height="15" fill="rgb(246,144,38)"/><text x="478.00" y="478.50"></text></g><g><title>0x7fcb0ba33eab (libgomp.so.1.0.0) (12 samples, 1.35%)</title><rect x="485" y="468" width="16" height="15" fill="rgb(236,160,33)"/><text x="488.00" y="478.50"></text></g><g><title>0x7fcb0ba32ab9 (libgomp.so.1.0.0) (24 samples, 2.70%)</title><rect x="473" y="452" width="32" height="15" fill="rgb(225,90,17)"/><text x="476.00" y="462.50">0x..</text></g><g><title>0x7fcb0ba33ead (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="501" y="468" width="4" height="15" fill="rgb(225,59,45)"/><text x="504.00" y="478.50"></text></g><g><title>0x7fcb0ba33cf9 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="505" y="484" width="2" height="15" fill="rgb(236,153,2)"/><text x="508.00" y="494.50"></text></g><g><title>0x7fcb0ba33cfb (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="507" y="484" width="8" height="15" fill="rgb(216,129,19)"/><text x="510.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (34 samples, 3.82%)</title><rect x="471" y="196" width="46" height="15" fill="rgb(218,216,2)"/><text x="474.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 3.82%)</title><rect x="471" y="212" width="46" height="15" fill="rgb(235,190,42)"/><text x="474.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (34 samples, 3.82%)</title><rect x="471" y="228" width="46" height="15" fill="rgb(219,171,30)"/><text x="474.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 3.71%)</title><rect x="473" y="244" width="44" height="15" fill="rgb(243,154,34)"/><text x="476.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 3.71%)</title><rect x="473" y="260" width="44" height="15" fill="rgb(237,8,18)"/><text x="476.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 3.71%)</title><rect x="473" y="276" width="44" height="15" fill="rgb(210,205,24)"/><text x="476.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 3.71%)</title><rect x="473" y="292" width="44" height="15" fill="rgb(241,30,11)"/><text x="476.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 3.71%)</title><rect x="473" y="308" width="44" height="15" fill="rgb(252,228,20)"/><text x="476.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 3.71%)</title><rect x="473" y="324" width="44" height="15" fill="rgb(221,146,35)"/><text x="476.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 3.71%)</title><rect x="473" y="340" width="44" height="15" fill="rgb(210,114,52)"/><text x="476.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 3.71%)</title><rect x="473" y="356" width="44" height="15" fill="rgb(235,215,26)"/><text x="476.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 3.71%)</title><rect x="473" y="372" width="44" height="15" fill="rgb(254,130,53)"/><text x="476.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 3.71%)</title><rect x="473" y="388" width="44" height="15" fill="rgb(228,139,3)"/><text x="476.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 3.71%)</title><rect x="473" y="404" width="44" height="15" fill="rgb(240,16,30)"/><text x="476.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (33 samples, 3.71%)</title><rect x="473" y="420" width="44" height="15" fill="rgb(223,158,35)"/><text x="476.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (33 samples, 3.71%)</title><rect x="473" y="436" width="44" height="15" fill="rgb(231,50,19)"/><text x="476.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="505" y="452" width="12" height="15" fill="rgb(222,174,12)"/><text x="508.00" y="462.50"></text></g><g><title>0x7fcb0ba31daa (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="505" y="468" width="12" height="15" fill="rgb(206,130,51)"/><text x="508.00" y="478.50"></text></g><g><title>0x7fcb0ba33cfd (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="515" y="484" width="2" height="15" fill="rgb(236,58,5)"/><text x="518.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.11%)</title><rect x="517" y="196" width="1" height="15" fill="rgb(208,1,30)"/><text x="520.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py:17) (1 samples, 0.11%)</title><rect x="517" y="212" width="1" height="15" fill="rgb(228,139,32)"/><text x="520.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="517" y="228" width="1" height="15" fill="rgb(242,28,32)"/><text x="520.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="517" y="244" width="1" height="15" fill="rgb(243,166,8)"/><text x="520.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="517" y="260" width="1" height="15" fill="rgb(212,62,7)"/><text x="520.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="517" y="276" width="1" height="15" fill="rgb(223,100,36)"/><text x="520.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="517" y="292" width="1" height="15" fill="rgb(226,106,54)"/><text x="520.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="517" y="308" width="1" height="15" fill="rgb(229,164,44)"/><text x="520.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.11%)</title><rect x="517" y="324" width="1" height="15" fill="rgb(252,89,19)"/><text x="520.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="517" y="340" width="1" height="15" fill="rgb(206,16,42)"/><text x="520.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="517" y="356" width="1" height="15" fill="rgb(224,70,16)"/><text x="520.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.11%)</title><rect x="517" y="372" width="1" height="15" fill="rgb(221,86,15)"/><text x="520.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="517" y="388" width="1" height="15" fill="rgb(253,99,31)"/><text x="520.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="517" y="404" width="1" height="15" fill="rgb(236,171,30)"/><text x="520.00" y="414.50"></text></g><g><title>0x7fcb41a6e573 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="517" y="420" width="1" height="15" fill="rgb(210,63,20)"/><text x="520.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="521" y="212" width="1" height="15" fill="rgb(229,5,1)"/><text x="524.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.11%)</title><rect x="521" y="228" width="1" height="15" fill="rgb(237,32,24)"/><text x="524.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.11%)</title><rect x="522" y="228" width="1" height="15" fill="rgb(229,159,12)"/><text x="525.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="522" y="244" width="1" height="15" fill="rgb(219,49,45)"/><text x="525.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="522" y="260" width="1" height="15" fill="rgb(215,67,23)"/><text x="525.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="522" y="276" width="1" height="15" fill="rgb(214,45,41)"/><text x="525.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="522" y="292" width="1" height="15" fill="rgb(245,90,43)"/><text x="525.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="522" y="308" width="1" height="15" fill="rgb(253,70,34)"/><text x="525.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.11%)</title><rect x="522" y="324" width="1" height="15" fill="rgb(249,21,19)"/><text x="525.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.11%)</title><rect x="525" y="260" width="1" height="15" fill="rgb(249,149,5)"/><text x="528.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.11%)</title><rect x="525" y="276" width="1" height="15" fill="rgb(254,17,3)"/><text x="528.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.11%)</title><rect x="525" y="292" width="1" height="15" fill="rgb(250,68,17)"/><text x="528.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="526" y="340" width="1" height="15" fill="rgb(229,105,37)"/><text x="529.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(206,15,5)"/><text x="529.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(240,157,36)"/><text x="529.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(240,73,20)"/><text x="529.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="527" y="340" width="1" height="15" fill="rgb(237,189,4)"/><text x="530.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="527" y="356" width="1" height="15" fill="rgb(212,176,28)"/><text x="530.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.56%)</title><rect x="523" y="228" width="7" height="15" fill="rgb(254,143,31)"/><text x="526.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="525" y="244" width="5" height="15" fill="rgb(219,175,42)"/><text x="528.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="526" y="260" width="4" height="15" fill="rgb(244,24,51)"/><text x="529.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="526" y="276" width="4" height="15" fill="rgb(239,173,36)"/><text x="529.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="528" y="292" width="2" height="15" fill="rgb(212,58,18)"/><text x="531.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="528" y="308" width="2" height="15" fill="rgb(249,33,34)"/><text x="531.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="528" y="324" width="2" height="15" fill="rgb(246,173,34)"/><text x="531.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="528" y="340" width="2" height="15" fill="rgb(250,7,3)"/><text x="531.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.11%)</title><rect x="528" y="356" width="2" height="15" fill="rgb(241,14,46)"/><text x="531.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.11%)</title><rect x="530" y="228" width="1" height="15" fill="rgb(218,21,11)"/><text x="533.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.11%)</title><rect x="530" y="244" width="1" height="15" fill="rgb(235,21,6)"/><text x="533.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="530" y="260" width="1" height="15" fill="rgb(242,223,23)"/><text x="533.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="530" y="276" width="1" height="15" fill="rgb(234,28,45)"/><text x="533.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="530" y="292" width="1" height="15" fill="rgb(220,94,52)"/><text x="533.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="530" y="308" width="1" height="15" fill="rgb(217,114,27)"/><text x="533.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="530" y="324" width="1" height="15" fill="rgb(219,126,32)"/><text x="533.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="530" y="340" width="1" height="15" fill="rgb(253,146,14)"/><text x="533.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="530" y="356" width="1" height="15" fill="rgb(248,65,10)"/><text x="533.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (11 samples, 1.24%)</title><rect x="518" y="196" width="14" height="15" fill="rgb(238,8,39)"/><text x="521.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 0.90%)</title><rect x="522" y="212" width="10" height="15" fill="rgb(254,100,13)"/><text x="525.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:19) (1 samples, 0.11%)</title><rect x="531" y="228" width="1" height="15" fill="rgb(214,148,31)"/><text x="534.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.22%)</title><rect x="536" y="324" width="3" height="15" fill="rgb(239,74,18)"/><text x="539.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.22%)</title><rect x="536" y="340" width="3" height="15" fill="rgb(232,55,13)"/><text x="539.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="539" y="404" width="1" height="15" fill="rgb(219,31,38)"/><text x="542.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="539" y="420" width="1" height="15" fill="rgb(228,153,42)"/><text x="542.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="539" y="436" width="1" height="15" fill="rgb(217,120,49)"/><text x="542.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (2 samples, 0.22%)</title><rect x="539" y="324" width="3" height="15" fill="rgb(217,186,19)"/><text x="542.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="539" y="340" width="3" height="15" fill="rgb(247,6,25)"/><text x="542.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="539" y="356" width="3" height="15" fill="rgb(216,192,38)"/><text x="542.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="539" y="372" width="3" height="15" fill="rgb(219,118,26)"/><text x="542.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="539" y="388" width="3" height="15" fill="rgb(221,131,22)"/><text x="542.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="540" y="404" width="2" height="15" fill="rgb(246,109,6)"/><text x="543.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="543" y="420" width="1" height="15" fill="rgb(224,221,18)"/><text x="546.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.11%)</title><rect x="543" y="436" width="1" height="15" fill="rgb(232,84,44)"/><text x="546.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="543" y="404" width="3" height="15" fill="rgb(218,149,10)"/><text x="546.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.11%)</title><rect x="544" y="420" width="2" height="15" fill="rgb(207,108,33)"/><text x="547.00" y="430.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1355) (1 samples, 0.11%)</title><rect x="544" y="436" width="2" height="15" fill="rgb(252,207,2)"/><text x="547.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="546" y="404" width="1" height="15" fill="rgb(222,99,31)"/><text x="549.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="546" y="420" width="1" height="15" fill="rgb(239,117,32)"/><text x="549.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="546" y="436" width="1" height="15" fill="rgb(211,61,10)"/><text x="549.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.11%)</title><rect x="546" y="452" width="1" height="15" fill="rgb(214,217,1)"/><text x="549.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="546" y="468" width="1" height="15" fill="rgb(207,128,29)"/><text x="549.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="547" y="420" width="1" height="15" fill="rgb(232,150,39)"/><text x="550.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.67%)</title><rect x="547" y="404" width="8" height="15" fill="rgb(206,95,1)"/><text x="550.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (5 samples, 0.56%)</title><rect x="548" y="420" width="7" height="15" fill="rgb(241,72,28)"/><text x="551.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (17 samples, 1.91%)</title><rect x="534" y="212" width="22" height="15" fill="rgb(206,217,8)"/><text x="537.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 1.91%)</title><rect x="534" y="228" width="22" height="15" fill="rgb(219,91,43)"/><text x="537.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 1.91%)</title><rect x="534" y="244" width="22" height="15" fill="rgb(227,37,13)"/><text x="537.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (17 samples, 1.91%)</title><rect x="534" y="260" width="22" height="15" fill="rgb(221,41,5)"/><text x="537.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (15 samples, 1.69%)</title><rect x="536" y="276" width="20" height="15" fill="rgb(230,30,36)"/><text x="539.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (15 samples, 1.69%)</title><rect x="536" y="292" width="20" height="15" fill="rgb(206,125,14)"/><text x="539.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 1.69%)</title><rect x="536" y="308" width="20" height="15" fill="rgb(225,226,7)"/><text x="539.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (11 samples, 1.24%)</title><rect x="542" y="324" width="14" height="15" fill="rgb(242,63,41)"/><text x="545.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.12%)</title><rect x="543" y="340" width="13" height="15" fill="rgb(215,91,50)"/><text x="546.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.12%)</title><rect x="543" y="356" width="13" height="15" fill="rgb(240,195,22)"/><text x="546.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="543" y="372" width="13" height="15" fill="rgb(215,82,4)"/><text x="546.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.12%)</title><rect x="543" y="388" width="13" height="15" fill="rgb(226,171,17)"/><text x="546.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="555" y="404" width="1" height="15" fill="rgb(215,181,46)"/><text x="558.00" y="414.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="555" y="420" width="1" height="15" fill="rgb(214,45,27)"/><text x="558.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (101 samples, 11.36%)</title><rect x="424" y="180" width="134" height="15" fill="rgb(211,79,27)"/><text x="427.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (19 samples, 2.14%)</title><rect x="532" y="196" width="26" height="15" fill="rgb(234,120,30)"/><text x="535.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.11%)</title><rect x="556" y="212" width="2" height="15" fill="rgb(244,179,18)"/><text x="559.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.11%)</title><rect x="558" y="180" width="1" height="15" fill="rgb(246,204,32)"/><text x="561.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.22%)</title><rect x="559" y="180" width="3" height="15" fill="rgb(232,63,11)"/><text x="562.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (109 samples, 12.26%)</title><rect x="418" y="164" width="145" height="15" fill="rgb(224,18,43)"/><text x="421.00" y="174.50">_run_sequence_runt..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.11%)</title><rect x="562" y="180" width="1" height="15" fill="rgb(226,101,23)"/><text x="565.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (110 samples, 12.37%)</title><rect x="418" y="100" width="146" height="15" fill="rgb(249,137,7)"/><text x="421.00" y="110.50">profile (bench_Ada..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 12.37%)</title><rect x="418" y="116" width="146" height="15" fill="rgb(218,125,18)"/><text x="421.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (110 samples, 12.37%)</title><rect x="418" y="132" width="146" height="15" fill="rgb(238,37,6)"/><text x="421.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (110 samples, 12.37%)</title><rect x="418" y="148" width="146" height="15" fill="rgb(224,182,3)"/><text x="421.00" y="158.50">run (mlprodict/onn..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="563" y="164" width="1" height="15" fill="rgb(209,9,31)"/><text x="566.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="563" y="180" width="1" height="15" fill="rgb(231,104,49)"/><text x="566.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="563" y="196" width="1" height="15" fill="rgb(222,204,35)"/><text x="566.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="563" y="212" width="1" height="15" fill="rgb(252,228,32)"/><text x="566.00" y="222.50"></text></g><g><title>0x7fcb41a6ceb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="563" y="228" width="1" height="15" fill="rgb(252,223,50)"/><text x="566.00" y="238.50"></text></g><g><title>0x7fcb41a6bbc6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="563" y="244" width="1" height="15" fill="rgb(244,133,38)"/><text x="566.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.11%)</title><rect x="574" y="180" width="1" height="15" fill="rgb(231,145,39)"/><text x="577.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 0.67%)</title><rect x="575" y="180" width="8" height="15" fill="rgb(235,88,17)"/><text x="578.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.22%)</title><rect x="580" y="196" width="3" height="15" fill="rgb(249,63,38)"/><text x="583.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="584" y="228" width="2" height="15" fill="rgb(226,22,54)"/><text x="587.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.11%)</title><rect x="584" y="244" width="2" height="15" fill="rgb(230,186,14)"/><text x="587.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="584" y="260" width="2" height="15" fill="rgb(218,1,26)"/><text x="587.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="584" y="276" width="2" height="15" fill="rgb(232,93,36)"/><text x="587.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.11%)</title><rect x="584" y="292" width="2" height="15" fill="rgb(233,118,27)"/><text x="587.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.11%)</title><rect x="586" y="228" width="1" height="15" fill="rgb(230,32,13)"/><text x="589.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.11%)</title><rect x="586" y="244" width="1" height="15" fill="rgb(228,211,20)"/><text x="589.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.11%)</title><rect x="586" y="260" width="1" height="15" fill="rgb(215,171,29)"/><text x="589.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:252) (1 samples, 0.11%)</title><rect x="586" y="276" width="1" height="15" fill="rgb(208,178,32)"/><text x="589.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.34%)</title><rect x="584" y="212" width="4" height="15" fill="rgb(227,138,44)"/><text x="587.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.11%)</title><rect x="587" y="228" width="1" height="15" fill="rgb(252,83,39)"/><text x="590.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.11%)</title><rect x="587" y="244" width="1" height="15" fill="rgb(231,129,44)"/><text x="590.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.22%)</title><rect x="588" y="212" width="3" height="15" fill="rgb(214,103,20)"/><text x="591.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="590" y="228" width="1" height="15" fill="rgb(216,209,18)"/><text x="593.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="590" y="244" width="1" height="15" fill="rgb(224,72,48)"/><text x="593.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="590" y="260" width="1" height="15" fill="rgb(227,193,2)"/><text x="593.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="590" y="276" width="1" height="15" fill="rgb(227,77,37)"/><text x="593.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="590" y="292" width="1" height="15" fill="rgb(237,193,16)"/><text x="593.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.11%)</title><rect x="590" y="308" width="1" height="15" fill="rgb(243,121,49)"/><text x="593.00" y="318.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.11%)</title><rect x="590" y="324" width="1" height="15" fill="rgb(230,163,30)"/><text x="593.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 0.67%)</title><rect x="584" y="196" width="8" height="15" fill="rgb(251,124,19)"/><text x="587.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.11%)</title><rect x="591" y="212" width="1" height="15" fill="rgb(232,182,22)"/><text x="594.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="591" y="228" width="1" height="15" fill="rgb(249,85,23)"/><text x="594.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="591" y="244" width="1" height="15" fill="rgb(220,49,51)"/><text x="594.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="591" y="260" width="1" height="15" fill="rgb(221,15,21)"/><text x="594.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="591" y="276" width="1" height="15" fill="rgb(244,71,16)"/><text x="594.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="591" y="292" width="1" height="15" fill="rgb(213,94,18)"/><text x="594.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="591" y="308" width="1" height="15" fill="rgb(218,4,36)"/><text x="594.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="591" y="324" width="1" height="15" fill="rgb(237,48,26)"/><text x="594.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="591" y="340" width="1" height="15" fill="rgb(243,31,33)"/><text x="594.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="591" y="356" width="1" height="15" fill="rgb(231,115,27)"/><text x="594.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.22%)</title><rect x="594" y="228" width="2" height="15" fill="rgb(223,140,25)"/><text x="597.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="594" y="244" width="2" height="15" fill="rgb(235,74,4)"/><text x="597.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="594" y="260" width="2" height="15" fill="rgb(242,69,7)"/><text x="597.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.22%)</title><rect x="594" y="276" width="2" height="15" fill="rgb(216,38,21)"/><text x="597.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.22%)</title><rect x="594" y="292" width="2" height="15" fill="rgb(212,110,13)"/><text x="597.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (2 samples, 0.22%)</title><rect x="594" y="308" width="2" height="15" fill="rgb(229,200,30)"/><text x="597.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (2 samples, 0.22%)</title><rect x="594" y="324" width="2" height="15" fill="rgb(205,80,2)"/><text x="597.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.11%)</title><rect x="599" y="292" width="1" height="15" fill="rgb(235,65,39)"/><text x="602.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="599" y="308" width="1" height="15" fill="rgb(213,131,14)"/><text x="602.00" y="318.50"></text></g><g><title>0x7fcb41bee979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="600" y="324" width="1" height="15" fill="rgb(211,157,27)"/><text x="603.00" y="334.50"></text></g><g><title>0x7fcb41bee997 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="601" y="324" width="3" height="15" fill="rgb(224,7,49)"/><text x="604.00" y="334.50"></text></g><g><title>0x7fcb41bee9a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="604" y="324" width="1" height="15" fill="rgb(210,47,46)"/><text x="607.00" y="334.50"></text></g><g><title>0x7fcb41bee9bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="605" y="324" width="2" height="15" fill="rgb(244,142,48)"/><text x="608.00" y="334.50"></text></g><g><title>0x7fcb41bee9f8 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(250,106,50)"/><text x="610.00" y="334.50"></text></g><g><title>0x7fcb41beea04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="609" y="324" width="2" height="15" fill="rgb(205,45,49)"/><text x="612.00" y="334.50"></text></g><g><title>0x7fcb41beea15 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="611" y="324" width="1" height="15" fill="rgb(236,9,27)"/><text x="614.00" y="334.50"></text></g><g><title>0x7fcb41beea1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="612" y="324" width="1" height="15" fill="rgb(224,32,11)"/><text x="615.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (13 samples, 1.46%)</title><rect x="600" y="308" width="17" height="15" fill="rgb(247,180,39)"/><text x="603.00" y="318.50"></text></g><g><title>0x7fcb41beea21 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="613" y="324" width="4" height="15" fill="rgb(219,21,21)"/><text x="616.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 1.57%)</title><rect x="600" y="292" width="19" height="15" fill="rgb(220,12,28)"/><text x="603.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.11%)</title><rect x="617" y="308" width="2" height="15" fill="rgb(246,83,24)"/><text x="620.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="617" y="324" width="2" height="15" fill="rgb(227,2,39)"/><text x="620.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (19 samples, 2.14%)</title><rect x="596" y="228" width="25" height="15" fill="rgb(243,150,7)"/><text x="599.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 1.91%)</title><rect x="599" y="244" width="22" height="15" fill="rgb(234,143,22)"/><text x="602.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 1.91%)</title><rect x="599" y="260" width="22" height="15" fill="rgb(234,9,46)"/><text x="602.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 1.91%)</title><rect x="599" y="276" width="22" height="15" fill="rgb(238,160,44)"/><text x="602.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.22%)</title><rect x="619" y="292" width="2" height="15" fill="rgb(232,80,7)"/><text x="622.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.22%)</title><rect x="619" y="308" width="2" height="15" fill="rgb(223,34,28)"/><text x="622.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="623" y="292" width="1" height="15" fill="rgb(228,59,6)"/><text x="626.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="624" y="340" width="1" height="15" fill="rgb(210,143,0)"/><text x="627.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="624" y="356" width="1" height="15" fill="rgb(216,207,29)"/><text x="627.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="624" y="308" width="3" height="15" fill="rgb(221,116,6)"/><text x="627.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="624" y="324" width="3" height="15" fill="rgb(218,41,17)"/><text x="627.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="625" y="340" width="2" height="15" fill="rgb(217,81,26)"/><text x="628.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="625" y="356" width="2" height="15" fill="rgb(242,205,2)"/><text x="628.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="625" y="372" width="2" height="15" fill="rgb(243,196,0)"/><text x="628.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="625" y="388" width="2" height="15" fill="rgb(236,52,17)"/><text x="628.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.11%)</title><rect x="627" y="324" width="1" height="15" fill="rgb(226,104,54)"/><text x="630.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:444) (1 samples, 0.11%)</title><rect x="628" y="356" width="1" height="15" fill="rgb(231,61,12)"/><text x="631.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="629" y="356" width="2" height="15" fill="rgb(226,72,51)"/><text x="632.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="629" y="372" width="2" height="15" fill="rgb(233,62,25)"/><text x="632.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.11%)</title><rect x="629" y="388" width="2" height="15" fill="rgb(231,225,50)"/><text x="632.00" y="398.50"></text></g><g><title>0x7fcb40c8f1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="629" y="404" width="2" height="15" fill="rgb(253,207,7)"/><text x="632.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="631" y="356" width="1" height="15" fill="rgb(206,17,1)"/><text x="634.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.11%)</title><rect x="631" y="372" width="1" height="15" fill="rgb(243,192,43)"/><text x="634.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.11%)</title><rect x="631" y="388" width="1" height="15" fill="rgb(215,100,13)"/><text x="634.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="632" y="372" width="1" height="15" fill="rgb(205,142,45)"/><text x="635.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.22%)</title><rect x="633" y="388" width="3" height="15" fill="rgb(217,129,10)"/><text x="636.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="636" y="388" width="3" height="15" fill="rgb(246,94,38)"/><text x="639.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (4 samples, 0.45%)</title><rect x="640" y="404" width="5" height="15" fill="rgb(208,42,25)"/><text x="643.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (6 samples, 0.67%)</title><rect x="639" y="388" width="8" height="15" fill="rgb(215,152,21)"/><text x="642.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="645" y="404" width="2" height="15" fill="rgb(215,175,38)"/><text x="648.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="647" y="388" width="1" height="15" fill="rgb(252,96,20)"/><text x="650.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.22%)</title><rect x="648" y="388" width="3" height="15" fill="rgb(246,172,35)"/><text x="651.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="651" y="388" width="1" height="15" fill="rgb(235,110,48)"/><text x="654.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (46 samples, 5.17%)</title><rect x="592" y="196" width="61" height="15" fill="rgb(231,36,27)"/><text x="595.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 5.06%)</title><rect x="594" y="212" width="59" height="15" fill="rgb(230,175,49)"/><text x="597.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (24 samples, 2.70%)</title><rect x="621" y="228" width="32" height="15" fill="rgb(205,193,50)"/><text x="624.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (23 samples, 2.59%)</title><rect x="623" y="244" width="30" height="15" fill="rgb(234,92,49)"/><text x="626.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.59%)</title><rect x="623" y="260" width="30" height="15" fill="rgb(247,71,23)"/><text x="626.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (23 samples, 2.59%)</title><rect x="623" y="276" width="30" height="15" fill="rgb(254,1,10)"/><text x="626.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (22 samples, 2.47%)</title><rect x="624" y="292" width="29" height="15" fill="rgb(233,194,13)"/><text x="627.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (20 samples, 2.25%)</title><rect x="627" y="308" width="26" height="15" fill="rgb(228,187,1)"/><text x="630.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (19 samples, 2.14%)</title><rect x="628" y="324" width="25" height="15" fill="rgb(224,14,39)"/><text x="631.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 2.14%)</title><rect x="628" y="340" width="25" height="15" fill="rgb(218,84,42)"/><text x="631.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 1.80%)</title><rect x="632" y="356" width="21" height="15" fill="rgb(227,148,12)"/><text x="635.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 1.69%)</title><rect x="633" y="372" width="20" height="15" fill="rgb(237,11,11)"/><text x="636.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="652" y="388" width="1" height="15" fill="rgb(208,223,24)"/><text x="655.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.11%)</title><rect x="653" y="196" width="2" height="15" fill="rgb(216,221,29)"/><text x="656.00" y="206.50"></text></g><g><title>0x7fcb0ba33ea0 (libgomp.so.1.0.0) (4 samples, 0.45%)</title><rect x="655" y="468" width="5" height="15" fill="rgb(238,107,10)"/><text x="658.00" y="478.50"></text></g><g><title>0x7fcb0ba33ea9 (libgomp.so.1.0.0) (12 samples, 1.35%)</title><rect x="660" y="468" width="16" height="15" fill="rgb(226,216,24)"/><text x="663.00" y="478.50"></text></g><g><title>0x7fcb0ba33eab (libgomp.so.1.0.0) (17 samples, 1.91%)</title><rect x="676" y="468" width="22" height="15" fill="rgb(210,182,9)"/><text x="679.00" y="478.50">0..</text></g><g><title>0x7fcb0ba32ab9 (libgomp.so.1.0.0) (43 samples, 4.84%)</title><rect x="655" y="452" width="57" height="15" fill="rgb(211,56,41)"/><text x="658.00" y="462.50">0x7fcb..</text></g><g><title>0x7fcb0ba33ead (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="698" y="468" width="14" height="15" fill="rgb(249,21,43)"/><text x="701.00" y="478.50"></text></g><g><title>0x7fcb0ba33cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="712" y="484" width="1" height="15" fill="rgb(220,17,44)"/><text x="715.00" y="494.50"></text></g><g><title>0x7fcb0ba33cf9 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="713" y="484" width="3" height="15" fill="rgb(229,139,33)"/><text x="716.00" y="494.50"></text></g><g><title>0x7fcb0ba33cfb (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="716" y="484" width="8" height="15" fill="rgb(207,67,49)"/><text x="719.00" y="494.50"></text></g><g><title>0x7fcb0ba31daa (libgomp.so.1.0.0) (14 samples, 1.57%)</title><rect x="712" y="468" width="18" height="15" fill="rgb(238,70,19)"/><text x="715.00" y="478.50"></text></g><g><title>0x7fcb0ba33cfd (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="724" y="484" width="6" height="15" fill="rgb(251,77,54)"/><text x="727.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:423) (1 samples, 0.11%)</title><rect x="730" y="468" width="2" height="15" fill="rgb(237,100,37)"/><text x="733.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:280) (1 samples, 0.11%)</title><rect x="730" y="484" width="2" height="15" fill="rgb(236,185,51)"/><text x="733.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.11%)</title><rect x="730" y="500" width="2" height="15" fill="rgb(212,209,10)"/><text x="733.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.11%)</title><rect x="730" y="516" width="2" height="15" fill="rgb(206,161,11)"/><text x="733.00" y="526.50"></text></g><g><title>0x7fcb025b3fd0 (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="730" y="532" width="2" height="15" fill="rgb(223,125,49)"/><text x="733.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (1 samples, 0.11%)</title><rect x="732" y="468" width="1" height="15" fill="rgb(211,225,25)"/><text x="735.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.11%)</title><rect x="732" y="484" width="1" height="15" fill="rgb(239,31,13)"/><text x="735.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (60 samples, 6.75%)</title><rect x="655" y="228" width="79" height="15" fill="rgb(227,167,5)"/><text x="658.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (60 samples, 6.75%)</title><rect x="655" y="244" width="79" height="15" fill="rgb(246,76,13)"/><text x="658.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (60 samples, 6.75%)</title><rect x="655" y="260" width="79" height="15" fill="rgb(215,9,47)"/><text x="658.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (60 samples, 6.75%)</title><rect x="655" y="276" width="79" height="15" fill="rgb(243,109,50)"/><text x="658.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (60 samples, 6.75%)</title><rect x="655" y="292" width="79" height="15" fill="rgb(250,158,42)"/><text x="658.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (60 samples, 6.75%)</title><rect x="655" y="308" width="79" height="15" fill="rgb(207,107,26)"/><text x="658.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (60 samples, 6.75%)</title><rect x="655" y="324" width="79" height="15" fill="rgb(228,63,19)"/><text x="658.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (60 samples, 6.75%)</title><rect x="655" y="340" width="79" height="15" fill="rgb(244,19,39)"/><text x="658.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (60 samples, 6.75%)</title><rect x="655" y="356" width="79" height="15" fill="rgb(219,147,26)"/><text x="658.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (60 samples, 6.75%)</title><rect x="655" y="372" width="79" height="15" fill="rgb(249,212,27)"/><text x="658.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (60 samples, 6.75%)</title><rect x="655" y="388" width="79" height="15" fill="rgb(215,208,28)"/><text x="658.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (60 samples, 6.75%)</title><rect x="655" y="404" width="79" height="15" fill="rgb(214,0,8)"/><text x="658.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (60 samples, 6.75%)</title><rect x="655" y="420" width="79" height="15" fill="rgb(206,199,13)"/><text x="658.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (60 samples, 6.75%)</title><rect x="655" y="436" width="79" height="15" fill="rgb(237,42,0)"/><text x="658.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (17 samples, 1.91%)</title><rect x="712" y="452" width="22" height="15" fill="rgb(211,121,50)"/><text x="715.00" y="462.50">G..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:435) (1 samples, 0.11%)</title><rect x="733" y="468" width="1" height="15" fill="rgb(208,154,31)"/><text x="736.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (61 samples, 6.86%)</title><rect x="655" y="196" width="81" height="15" fill="rgb(225,72,39)"/><text x="658.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (61 samples, 6.86%)</title><rect x="655" y="212" width="81" height="15" fill="rgb(243,126,4)"/><text x="658.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:61) (1 samples, 0.11%)</title><rect x="734" y="228" width="2" height="15" fill="rgb(241,46,50)"/><text x="737.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="736" y="212" width="1" height="15" fill="rgb(244,155,49)"/><text x="739.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (4 samples, 0.45%)</title><rect x="737" y="228" width="5" height="15" fill="rgb(254,203,34)"/><text x="740.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="742" y="244" width="2" height="15" fill="rgb(210,100,28)"/><text x="745.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="742" y="260" width="2" height="15" fill="rgb(209,129,11)"/><text x="745.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="742" y="276" width="2" height="15" fill="rgb(230,69,44)"/><text x="745.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.11%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(206,19,22)"/><text x="745.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.11%)</title><rect x="744" y="292" width="1" height="15" fill="rgb(226,57,15)"/><text x="747.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="744" y="260" width="2" height="15" fill="rgb(207,192,19)"/><text x="747.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (2 samples, 0.22%)</title><rect x="744" y="276" width="2" height="15" fill="rgb(240,125,49)"/><text x="747.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.11%)</title><rect x="745" y="292" width="1" height="15" fill="rgb(232,148,48)"/><text x="748.00" y="302.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.11%)</title><rect x="745" y="308" width="1" height="15" fill="rgb(242,23,17)"/><text x="748.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="746" y="292" width="1" height="15" fill="rgb(226,2,22)"/><text x="749.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="746" y="308" width="1" height="15" fill="rgb(248,50,14)"/><text x="749.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="747" y="292" width="2" height="15" fill="rgb(245,183,15)"/><text x="750.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:766) (1 samples, 0.11%)</title><rect x="747" y="308" width="2" height="15" fill="rgb(210,39,11)"/><text x="750.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="747" y="324" width="2" height="15" fill="rgb(218,44,3)"/><text x="750.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="744" y="244" width="6" height="15" fill="rgb(248,59,28)"/><text x="747.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="746" y="260" width="4" height="15" fill="rgb(207,37,37)"/><text x="749.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="746" y="276" width="4" height="15" fill="rgb(241,56,16)"/><text x="749.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="749" y="292" width="1" height="15" fill="rgb(225,28,44)"/><text x="752.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:685) (1 samples, 0.11%)</title><rect x="749" y="308" width="1" height="15" fill="rgb(251,98,33)"/><text x="752.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.11%)</title><rect x="750" y="244" width="1" height="15" fill="rgb(208,169,35)"/><text x="753.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2029) (1 samples, 0.11%)</title><rect x="750" y="260" width="1" height="15" fill="rgb(228,50,28)"/><text x="753.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 0.90%)</title><rect x="742" y="228" width="11" height="15" fill="rgb(236,138,43)"/><text x="745.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4763) (1 samples, 0.11%)</title><rect x="751" y="244" width="2" height="15" fill="rgb(250,47,24)"/><text x="754.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1559) (1 samples, 0.11%)</title><rect x="753" y="292" width="1" height="15" fill="rgb(233,39,46)"/><text x="756.00" y="302.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.11%)</title><rect x="753" y="308" width="1" height="15" fill="rgb(253,88,44)"/><text x="756.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="754" y="340" width="1" height="15" fill="rgb(250,72,24)"/><text x="757.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="755" y="356" width="2" height="15" fill="rgb(221,212,3)"/><text x="758.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="757" y="356" width="1" height="15" fill="rgb(251,34,10)"/><text x="760.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.56%)</title><rect x="755" y="340" width="7" height="15" fill="rgb(206,1,50)"/><text x="758.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (3 samples, 0.34%)</title><rect x="758" y="356" width="4" height="15" fill="rgb(219,193,19)"/><text x="761.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.79%)</title><rect x="754" y="292" width="9" height="15" fill="rgb(228,229,5)"/><text x="757.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.79%)</title><rect x="754" y="308" width="9" height="15" fill="rgb(215,63,22)"/><text x="757.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 0.79%)</title><rect x="754" y="324" width="9" height="15" fill="rgb(233,167,7)"/><text x="757.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:983) (1 samples, 0.11%)</title><rect x="762" y="340" width="1" height="15" fill="rgb(238,171,5)"/><text x="765.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (10 samples, 1.12%)</title><rect x="753" y="228" width="13" height="15" fill="rgb(237,148,39)"/><text x="756.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.12%)</title><rect x="753" y="244" width="13" height="15" fill="rgb(207,176,41)"/><text x="756.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="753" y="260" width="13" height="15" fill="rgb(214,146,18)"/><text x="756.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.12%)</title><rect x="753" y="276" width="13" height="15" fill="rgb(222,86,39)"/><text x="756.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="763" y="292" width="3" height="15" fill="rgb(215,127,6)"/><text x="766.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="763" y="308" width="3" height="15" fill="rgb(220,176,0)"/><text x="766.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="763" y="324" width="3" height="15" fill="rgb(253,30,15)"/><text x="766.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (2 samples, 0.22%)</title><rect x="763" y="340" width="3" height="15" fill="rgb(253,207,28)"/><text x="766.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.22%)</title><rect x="763" y="356" width="3" height="15" fill="rgb(234,81,41)"/><text x="766.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (24 samples, 2.70%)</title><rect x="736" y="196" width="31" height="15" fill="rgb(254,88,2)"/><text x="739.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 2.59%)</title><rect x="737" y="212" width="30" height="15" fill="rgb(254,151,12)"/><text x="740.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.11%)</title><rect x="766" y="228" width="1" height="15" fill="rgb(211,70,16)"/><text x="769.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.11%)</title><rect x="766" y="244" width="1" height="15" fill="rgb(231,59,40)"/><text x="769.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="766" y="260" width="1" height="15" fill="rgb(225,147,53)"/><text x="769.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="766" y="276" width="1" height="15" fill="rgb(209,178,4)"/><text x="769.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="766" y="292" width="1" height="15" fill="rgb(248,58,15)"/><text x="769.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="766" y="308" width="1" height="15" fill="rgb(208,4,24)"/><text x="769.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="766" y="324" width="1" height="15" fill="rgb(228,76,31)"/><text x="769.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="766" y="340" width="1" height="15" fill="rgb(231,177,1)"/><text x="769.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="766" y="356" width="1" height="15" fill="rgb(218,138,15)"/><text x="769.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="766" y="372" width="1" height="15" fill="rgb(220,162,31)"/><text x="769.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.11%)</title><rect x="767" y="196" width="2" height="15" fill="rgb(215,153,5)"/><text x="770.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.11%)</title><rect x="770" y="212" width="1" height="15" fill="rgb(228,32,25)"/><text x="773.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="771" y="228" width="2" height="15" fill="rgb(214,193,27)"/><text x="774.00" y="238.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.11%)</title><rect x="774" y="340" width="1" height="15" fill="rgb(233,99,22)"/><text x="777.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.22%)</title><rect x="774" y="324" width="3" height="15" fill="rgb(231,53,26)"/><text x="777.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.11%)</title><rect x="775" y="340" width="2" height="15" fill="rgb(237,189,51)"/><text x="778.00" y="350.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2065) (1 samples, 0.11%)</title><rect x="775" y="356" width="2" height="15" fill="rgb(248,64,0)"/><text x="778.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="777" y="340" width="1" height="15" fill="rgb(228,128,40)"/><text x="780.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.45%)</title><rect x="777" y="324" width="5" height="15" fill="rgb(229,23,26)"/><text x="780.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.34%)</title><rect x="778" y="340" width="4" height="15" fill="rgb(215,175,51)"/><text x="781.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="779" y="356" width="3" height="15" fill="rgb(210,38,29)"/><text x="782.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (2 samples, 0.22%)</title><rect x="779" y="372" width="3" height="15" fill="rgb(207,174,26)"/><text x="782.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="782" y="356" width="1" height="15" fill="rgb(216,105,44)"/><text x="785.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.22%)</title><rect x="782" y="340" width="3" height="15" fill="rgb(214,205,21)"/><text x="785.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.11%)</title><rect x="783" y="356" width="2" height="15" fill="rgb(219,172,6)"/><text x="786.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="785" y="388" width="1" height="15" fill="rgb(208,194,50)"/><text x="788.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 0.67%)</title><rect x="785" y="340" width="8" height="15" fill="rgb(234,82,36)"/><text x="788.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 0.67%)</title><rect x="785" y="356" width="8" height="15" fill="rgb(229,167,29)"/><text x="788.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.67%)</title><rect x="785" y="372" width="8" height="15" fill="rgb(218,125,13)"/><text x="788.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.56%)</title><rect x="786" y="388" width="7" height="15" fill="rgb(233,138,2)"/><text x="789.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.34%)</title><rect x="789" y="404" width="4" height="15" fill="rgb(222,164,17)"/><text x="792.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.22%)</title><rect x="790" y="420" width="3" height="15" fill="rgb(206,73,26)"/><text x="793.00" y="430.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:319) (1 samples, 0.11%)</title><rect x="791" y="436" width="2" height="15" fill="rgb(209,125,42)"/><text x="794.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="793" y="356" width="1" height="15" fill="rgb(241,100,38)"/><text x="796.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="793" y="372" width="1" height="15" fill="rgb(254,142,20)"/><text x="796.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="793" y="388" width="1" height="15" fill="rgb(247,31,0)"/><text x="796.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.11%)</title><rect x="793" y="404" width="1" height="15" fill="rgb(251,130,35)"/><text x="796.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:864) (1 samples, 0.11%)</title><rect x="794" y="420" width="1" height="15" fill="rgb(225,77,28)"/><text x="797.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="794" y="356" width="3" height="15" fill="rgb(254,44,48)"/><text x="797.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="794" y="372" width="3" height="15" fill="rgb(219,124,53)"/><text x="797.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.22%)</title><rect x="794" y="388" width="3" height="15" fill="rgb(221,167,53)"/><text x="797.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (2 samples, 0.22%)</title><rect x="794" y="404" width="3" height="15" fill="rgb(216,100,32)"/><text x="797.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.11%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(215,94,12)"/><text x="798.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.11%)</title><rect x="795" y="436" width="2" height="15" fill="rgb(245,195,34)"/><text x="798.00" y="446.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.11%)</title><rect x="795" y="452" width="2" height="15" fill="rgb(213,19,46)"/><text x="798.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (12 samples, 1.35%)</title><rect x="782" y="324" width="16" height="15" fill="rgb(251,195,21)"/><text x="785.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.45%)</title><rect x="793" y="340" width="5" height="15" fill="rgb(249,115,27)"/><text x="796.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4763) (1 samples, 0.11%)</title><rect x="797" y="356" width="1" height="15" fill="rgb(226,194,25)"/><text x="800.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="798" y="420" width="1" height="15" fill="rgb(242,38,46)"/><text x="801.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="798" y="436" width="1" height="15" fill="rgb(250,227,48)"/><text x="801.00" y="446.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="799" y="468" width="2" height="15" fill="rgb(211,103,53)"/><text x="802.00" y="478.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.11%)</title><rect x="801" y="468" width="1" height="15" fill="rgb(221,27,49)"/><text x="804.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.45%)</title><rect x="798" y="404" width="5" height="15" fill="rgb(251,203,43)"/><text x="801.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.34%)</title><rect x="799" y="420" width="4" height="15" fill="rgb(213,139,48)"/><text x="802.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="799" y="436" width="4" height="15" fill="rgb(238,20,49)"/><text x="802.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.34%)</title><rect x="799" y="452" width="4" height="15" fill="rgb(220,160,35)"/><text x="802.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.11%)</title><rect x="802" y="468" width="1" height="15" fill="rgb(219,59,31)"/><text x="805.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="803" y="420" width="2" height="15" fill="rgb(210,169,28)"/><text x="806.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (170 samples, 19.12%)</title><rect x="583" y="180" width="226" height="15" fill="rgb(232,55,47)"/><text x="586.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (30 samples, 3.37%)</title><rect x="769" y="196" width="40" height="15" fill="rgb(207,94,47)"/><text x="772.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (28 samples, 3.15%)</title><rect x="771" y="212" width="38" height="15" fill="rgb(210,7,22)"/><text x="774.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (27 samples, 3.04%)</title><rect x="773" y="228" width="36" height="15" fill="rgb(232,226,40)"/><text x="776.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (27 samples, 3.04%)</title><rect x="773" y="244" width="36" height="15" fill="rgb(220,181,13)"/><text x="776.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (26 samples, 2.92%)</title><rect x="774" y="260" width="35" height="15" fill="rgb(253,145,30)"/><text x="777.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (26 samples, 2.92%)</title><rect x="774" y="276" width="35" height="15" fill="rgb(216,171,42)"/><text x="777.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (26 samples, 2.92%)</title><rect x="774" y="292" width="35" height="15" fill="rgb(251,178,46)"/><text x="777.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 2.92%)</title><rect x="774" y="308" width="35" height="15" fill="rgb(232,44,8)"/><text x="777.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (8 samples, 0.90%)</title><rect x="798" y="324" width="11" height="15" fill="rgb(248,137,23)"/><text x="801.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 0.90%)</title><rect x="798" y="340" width="11" height="15" fill="rgb(254,5,17)"/><text x="801.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.90%)</title><rect x="798" y="356" width="11" height="15" fill="rgb(246,94,44)"/><text x="801.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.90%)</title><rect x="798" y="372" width="11" height="15" fill="rgb(230,208,50)"/><text x="801.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.90%)</title><rect x="798" y="388" width="11" height="15" fill="rgb(216,175,2)"/><text x="801.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.45%)</title><rect x="803" y="404" width="6" height="15" fill="rgb(213,40,3)"/><text x="806.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.34%)</title><rect x="805" y="420" width="4" height="15" fill="rgb(220,119,8)"/><text x="808.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 0.67%)</title><rect x="809" y="180" width="8" height="15" fill="rgb(241,192,54)"/><text x="812.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (193 samples, 21.71%)</title><rect x="564" y="164" width="257" height="15" fill="rgb(213,43,36)"/><text x="567.00" y="174.50">_run_sequence_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.34%)</title><rect x="817" y="180" width="4" height="15" fill="rgb(223,218,24)"/><text x="820.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:45) (307 samples, 34.53%)</title><rect x="414" y="52" width="408" height="15" fill="rgb(221,77,39)"/><text x="417.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:44) (307 samples, 34.53%)</title><rect x="414" y="68" width="408" height="15" fill="rgb(222,14,4)"/><text x="417.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_100..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (304 samples, 34.20%)</title><rect x="418" y="84" width="404" height="15" fill="rgb(224,170,8)"/><text x="421.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (194 samples, 21.82%)</title><rect x="564" y="100" width="258" height="15" fill="rgb(235,94,39)"/><text x="567.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (194 samples, 21.82%)</title><rect x="564" y="116" width="258" height="15" fill="rgb(243,39,0)"/><text x="567.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (194 samples, 21.82%)</title><rect x="564" y="132" width="258" height="15" fill="rgb(243,146,39)"/><text x="567.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (194 samples, 21.82%)</title><rect x="564" y="148" width="258" height="15" fill="rgb(233,175,29)"/><text x="567.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="821" y="164" width="1" height="15" fill="rgb(212,109,35)"/><text x="824.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="821" y="180" width="1" height="15" fill="rgb(230,128,42)"/><text x="824.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="821" y="196" width="1" height="15" fill="rgb(236,196,17)"/><text x="824.00" y="206.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.11%)</title><rect x="822" y="164" width="1" height="15" fill="rgb(227,10,29)"/><text x="825.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:274) (1 samples, 0.11%)</title><rect x="822" y="180" width="1" height="15" fill="rgb(206,62,1)"/><text x="825.00" y="190.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference_node.py:28) (1 samples, 0.11%)</title><rect x="822" y="196" width="1" height="15" fill="rgb(235,19,30)"/><text x="825.00" y="206.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference_node.py:48) (1 samples, 0.11%)</title><rect x="822" y="212" width="1" height="15" fill="rgb(246,21,51)"/><text x="825.00" y="222.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.11%)</title><rect x="823" y="164" width="1" height="15" fill="rgb(239,43,17)"/><text x="826.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="823" y="180" width="1" height="15" fill="rgb(208,48,27)"/><text x="826.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="823" y="196" width="1" height="15" fill="rgb(253,146,54)"/><text x="826.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="823" y="212" width="1" height="15" fill="rgb(246,72,40)"/><text x="826.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="823" y="228" width="1" height="15" fill="rgb(240,163,38)"/><text x="826.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="823" y="244" width="1" height="15" fill="rgb(235,125,7)"/><text x="826.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.11%)</title><rect x="823" y="260" width="1" height="15" fill="rgb(253,99,15)"/><text x="826.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="823" y="276" width="1" height="15" fill="rgb(208,47,41)"/><text x="826.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="823" y="292" width="1" height="15" fill="rgb(219,155,31)"/><text x="826.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="823" y="308" width="1" height="15" fill="rgb(213,41,26)"/><text x="826.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="823" y="324" width="1" height="15" fill="rgb(249,5,26)"/><text x="826.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="823" y="340" width="1" height="15" fill="rgb(230,45,30)"/><text x="826.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.11%)</title><rect x="823" y="356" width="1" height="15" fill="rgb(241,156,4)"/><text x="826.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="823" y="372" width="1" height="15" fill="rgb(225,222,1)"/><text x="826.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="823" y="388" width="1" height="15" fill="rgb(248,34,35)"/><text x="826.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="823" y="404" width="1" height="15" fill="rgb(235,58,39)"/><text x="826.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="823" y="420" width="1" height="15" fill="rgb(223,78,52)"/><text x="826.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="823" y="436" width="1" height="15" fill="rgb(247,29,48)"/><text x="826.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.11%)</title><rect x="823" y="452" width="1" height="15" fill="rgb(208,23,39)"/><text x="826.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="823" y="468" width="1" height="15" fill="rgb(218,79,1)"/><text x="826.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="823" y="484" width="1" height="15" fill="rgb(244,112,50)"/><text x="826.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="823" y="500" width="1" height="15" fill="rgb(225,158,6)"/><text x="826.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.11%)</title><rect x="823" y="516" width="1" height="15" fill="rgb(216,91,8)"/><text x="826.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.11%)</title><rect x="823" y="532" width="1" height="15" fill="rgb(252,33,0)"/><text x="826.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="823" y="548" width="1" height="15" fill="rgb(237,171,32)"/><text x="826.00" y="558.50"></text></g><g><title>0x7fcb01732af0 (?) (1 samples, 0.11%)</title><rect x="823" y="564" width="1" height="15" fill="rgb(248,129,43)"/><text x="826.00" y="574.50"></text></g><g><title>0x7fcb017451d2 (?) (1 samples, 0.11%)</title><rect x="823" y="580" width="1" height="15" fill="rgb(216,168,40)"/><text x="826.00" y="590.50"></text></g><g><title>0x7fcb017447b8 (?) (1 samples, 0.11%)</title><rect x="823" y="596" width="1" height="15" fill="rgb(246,137,17)"/><text x="826.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="823" y="612" width="1" height="15" fill="rgb(235,224,51)"/><text x="826.00" y="622.50"></text></g><g><title>0x7fcb017429cb (?) (1 samples, 0.11%)</title><rect x="823" y="628" width="1" height="15" fill="rgb(211,214,7)"/><text x="826.00" y="638.50"></text></g><g><title>0x7fcb01741de7 (?) (1 samples, 0.11%)</title><rect x="823" y="644" width="1" height="15" fill="rgb(240,167,36)"/><text x="826.00" y="654.50"></text></g><g><title>0x7fcb01d1bc4b (?) (1 samples, 0.11%)</title><rect x="823" y="660" width="1" height="15" fill="rgb(251,44,10)"/><text x="826.00" y="670.50"></text></g><g><title>0x7fcb01ce8f5e (?) (1 samples, 0.11%)</title><rect x="823" y="676" width="1" height="15" fill="rgb(241,55,5)"/><text x="826.00" y="686.50"></text></g><g><title>0x7fcb01ce88c7 (?) (1 samples, 0.11%)</title><rect x="823" y="692" width="1" height="15" fill="rgb(208,223,50)"/><text x="826.00" y="702.50"></text></g><g><title>0x7fcb0176dff5 (?) (1 samples, 0.11%)</title><rect x="823" y="708" width="1" height="15" fill="rgb(252,58,30)"/><text x="826.00" y="718.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="823" y="724" width="1" height="15" fill="rgb(246,110,8)"/><text x="826.00" y="734.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="823" y="740" width="1" height="15" fill="rgb(228,32,6)"/><text x="826.00" y="750.50"></text></g><g><title>0x7fcb41a6e2c1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="823" y="756" width="1" height="15" fill="rgb(206,125,43)"/><text x="826.00" y="766.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:28) (3 samples, 0.34%)</title><rect x="822" y="84" width="4" height="15" fill="rgb(216,195,20)"/><text x="825.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.34%)</title><rect x="822" y="100" width="4" height="15" fill="rgb(214,107,40)"/><text x="825.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (3 samples, 0.34%)</title><rect x="822" y="116" width="4" height="15" fill="rgb(213,203,27)"/><text x="825.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (3 samples, 0.34%)</title><rect x="822" y="132" width="4" height="15" fill="rgb(211,105,44)"/><text x="825.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (3 samples, 0.34%)</title><rect x="822" y="148" width="4" height="15" fill="rgb(227,208,48)"/><text x="825.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.11%)</title><rect x="824" y="164" width="2" height="15" fill="rgb(239,213,44)"/><text x="827.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:37) (1 samples, 0.11%)</title><rect x="824" y="180" width="2" height="15" fill="rgb(253,212,51)"/><text x="827.00" y="190.50"></text></g><g><title>0x7fcb2fdbd25a (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="196" width="2" height="15" fill="rgb(250,44,7)"/><text x="827.00" y="206.50"></text></g><g><title>google::protobuf::Message::ByteSizeLong (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="212" width="2" height="15" fill="rgb(250,32,29)"/><text x="827.00" y="222.50"></text></g><g><title>google::protobuf::internal::WireFormat::ByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(206,202,13)"/><text x="827.00" y="238.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(234,55,12)"/><text x="827.00" y="254.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldDataOnlyByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(242,44,28)"/><text x="827.00" y="270.50"></text></g><g><title>google::protobuf::Message::ByteSizeLong (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="276" width="2" height="15" fill="rgb(233,174,15)"/><text x="827.00" y="286.50"></text></g><g><title>google::protobuf::internal::WireFormat::ByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="292" width="2" height="15" fill="rgb(228,1,32)"/><text x="827.00" y="302.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="308" width="2" height="15" fill="rgb(222,117,19)"/><text x="827.00" y="318.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldDataOnlyByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="324" width="2" height="15" fill="rgb(222,58,19)"/><text x="827.00" y="334.50"></text></g><g><title>google::protobuf::Message::ByteSizeLong (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="340" width="2" height="15" fill="rgb(245,101,10)"/><text x="827.00" y="350.50"></text></g><g><title>google::protobuf::internal::WireFormat::ByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="356" width="2" height="15" fill="rgb(214,135,31)"/><text x="827.00" y="366.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="372" width="2" height="15" fill="rgb(247,138,0)"/><text x="827.00" y="382.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldDataOnlyByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="388" width="2" height="15" fill="rgb(209,48,49)"/><text x="827.00" y="398.50"></text></g><g><title>google::protobuf::Message::ByteSizeLong (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="404" width="2" height="15" fill="rgb(216,132,43)"/><text x="827.00" y="414.50"></text></g><g><title>google::protobuf::internal::WireFormat::ByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="420" width="2" height="15" fill="rgb(248,120,8)"/><text x="827.00" y="430.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="436" width="2" height="15" fill="rgb(221,178,38)"/><text x="827.00" y="446.50"></text></g><g><title>google::protobuf::internal::WireFormat::FieldDataOnlyByteSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="452" width="2" height="15" fill="rgb(212,111,39)"/><text x="827.00" y="462.50"></text></g><g><title>google::protobuf::Reflection::GetEnum (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="468" width="2" height="15" fill="rgb(207,159,4)"/><text x="827.00" y="478.50"></text></g><g><title>google::protobuf::Reflection::GetEnumValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="484" width="2" height="15" fill="rgb(232,172,12)"/><text x="827.00" y="494.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;int&gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="824" y="500" width="2" height="15" fill="rgb(230,115,4)"/><text x="827.00" y="510.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="826" y="340" width="8" height="15" fill="rgb(217,127,21)"/><text x="829.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="834" y="340" width="2" height="15" fill="rgb(210,46,34)"/><text x="837.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="834" y="356" width="2" height="15" fill="rgb(226,212,54)"/><text x="837.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="834" y="372" width="2" height="15" fill="rgb(247,166,12)"/><text x="837.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="835" y="388" width="1" height="15" fill="rgb(250,49,8)"/><text x="838.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="836" y="340" width="2" height="15" fill="rgb(250,182,31)"/><text x="839.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="836" y="356" width="2" height="15" fill="rgb(235,189,12)"/><text x="839.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="838" y="340" width="5" height="15" fill="rgb(221,115,36)"/><text x="841.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="843" y="340" width="9" height="15" fill="rgb(217,184,41)"/><text x="846.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="843" y="356" width="9" height="15" fill="rgb(226,39,48)"/><text x="846.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="843" y="372" width="9" height="15" fill="rgb(223,222,45)"/><text x="846.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="847" y="388" width="5" height="15" fill="rgb(253,88,54)"/><text x="850.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="356" width="1" height="15" fill="rgb(220,113,28)"/><text x="873.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="372" width="1" height="15" fill="rgb(225,125,1)"/><text x="873.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="388" width="1" height="15" fill="rgb(241,9,26)"/><text x="873.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="404" width="1" height="15" fill="rgb(209,48,47)"/><text x="873.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="420" width="1" height="15" fill="rgb(224,60,20)"/><text x="873.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="436" width="1" height="15" fill="rgb(254,80,50)"/><text x="873.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="452" width="1" height="15" fill="rgb(231,75,39)"/><text x="873.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="468" width="1" height="15" fill="rgb(243,88,19)"/><text x="873.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="484" width="1" height="15" fill="rgb(225,95,27)"/><text x="873.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="870" y="500" width="1" height="15" fill="rgb(225,157,32)"/><text x="873.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="870" y="516" width="1" height="15" fill="rgb(230,25,43)"/><text x="873.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="870" y="532" width="1" height="15" fill="rgb(225,113,34)"/><text x="873.00" y="542.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="871" y="356" width="1" height="15" fill="rgb(227,33,24)"/><text x="874.00" y="366.50"></text></g><g><title>0x7fcb016f1930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="908" y="388" width="1" height="15" fill="rgb(243,44,15)"/><text x="911.00" y="398.50"></text></g><g><title>0x7fcb31538d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="909" y="404" width="2" height="15" fill="rgb(216,229,21)"/><text x="912.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.79%)</title><rect x="909" y="388" width="10" height="15" fill="rgb(244,70,8)"/><text x="912.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.67%)</title><rect x="911" y="404" width="8" height="15" fill="rgb(215,175,49)"/><text x="914.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 4.39%)</title><rect x="872" y="356" width="52" height="15" fill="rgb(229,8,25)"/><text x="875.00" y="366.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.36%)</title><rect x="896" y="372" width="28" height="15" fill="rgb(228,158,10)"/><text x="899.00" y="382.50">s..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.45%)</title><rect x="919" y="388" width="5" height="15" fill="rgb(225,183,26)"/><text x="922.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="924" y="356" width="1" height="15" fill="rgb(224,136,49)"/><text x="927.00" y="366.50"></text></g><g><title>0x7fcb41a8cd97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="924" y="372" width="1" height="15" fill="rgb(240,215,23)"/><text x="927.00" y="382.50"></text></g><g><title>0x7fcb41a6c965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="927" y="372" width="1" height="15" fill="rgb(238,190,31)"/><text x="930.00" y="382.50"></text></g><g><title>0x7fcb41a6ca55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="928" y="372" width="1" height="15" fill="rgb(224,105,28)"/><text x="931.00" y="382.50"></text></g><g><title>0x7fcb41a6cbd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="929" y="372" width="2" height="15" fill="rgb(219,17,19)"/><text x="932.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.34%)</title><rect x="931" y="372" width="4" height="15" fill="rgb(253,210,21)"/><text x="934.00" y="382.50"></text></g><g><title>0x7fcb41a6c90a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="936" y="388" width="1" height="15" fill="rgb(243,194,32)"/><text x="939.00" y="398.50"></text></g><g><title>0x7fcb41a6c90e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="937" y="388" width="2" height="15" fill="rgb(248,139,15)"/><text x="940.00" y="398.50"></text></g><g><title>0x7fcb41a6cbd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="939" y="388" width="1" height="15" fill="rgb(249,7,26)"/><text x="942.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.35%)</title><rect x="925" y="356" width="16" height="15" fill="rgb(249,65,26)"/><text x="928.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="935" y="372" width="6" height="15" fill="rgb(253,6,43)"/><text x="938.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="940" y="388" width="1" height="15" fill="rgb(215,166,27)"/><text x="943.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (92 samples, 10.35%)</title><rect x="826" y="100" width="122" height="15" fill="rgb(240,34,36)"/><text x="829.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (92 samples, 10.35%)</title><rect x="826" y="116" width="122" height="15" fill="rgb(219,212,18)"/><text x="829.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (92 samples, 10.35%)</title><rect x="826" y="132" width="122" height="15" fill="rgb(207,51,34)"/><text x="829.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (92 samples, 10.35%)</title><rect x="826" y="148" width="122" height="15" fill="rgb(205,55,15)"/><text x="829.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (92 samples, 10.35%)</title><rect x="826" y="164" width="122" height="15" fill="rgb(223,192,13)"/><text x="829.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (92 samples, 10.35%)</title><rect x="826" y="180" width="122" height="15" fill="rgb(228,60,49)"/><text x="829.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (92 samples, 10.35%)</title><rect x="826" y="196" width="122" height="15" fill="rgb(231,193,20)"/><text x="829.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="212" width="122" height="15" fill="rgb(253,55,47)"/><text x="829.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="228" width="122" height="15" fill="rgb(244,37,15)"/><text x="829.00" y="238.50">void pybind11::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="244" width="122" height="15" fill="rgb(248,161,39)"/><text x="829.00" y="254.50">onnxruntime::py..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="260" width="122" height="15" fill="rgb(211,217,10)"/><text x="829.00" y="270.50">onnxruntime::In..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="276" width="122" height="15" fill="rgb(233,210,24)"/><text x="829.00" y="286.50">onnxruntime::In..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="292" width="122" height="15" fill="rgb(227,149,48)"/><text x="829.00" y="302.50">onnxruntime::ut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="308" width="122" height="15" fill="rgb(246,210,41)"/><text x="829.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 10.35%)</title><rect x="826" y="324" width="122" height="15" fill="rgb(243,220,0)"/><text x="829.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (72 samples, 8.10%)</title><rect x="852" y="340" width="96" height="15" fill="rgb(221,162,12)"/><text x="855.00" y="350.50">onnxruntime..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="941" y="356" width="7" height="15" fill="rgb(250,176,5)"/><text x="944.00" y="366.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.11%)</title><rect x="949" y="196" width="2" height="15" fill="rgb(236,93,4)"/><text x="952.00" y="206.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="952" y="340" width="7" height="15" fill="rgb(219,92,14)"/><text x="955.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="959" y="340" width="17" height="15" fill="rgb(213,97,44)"/><text x="962.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="959" y="356" width="17" height="15" fill="rgb(254,103,47)"/><text x="962.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="959" y="372" width="17" height="15" fill="rgb(214,211,12)"/><text x="962.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="969" y="388" width="7" height="15" fill="rgb(211,100,3)"/><text x="972.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="976" y="340" width="1" height="15" fill="rgb(212,226,53)"/><text x="979.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="976" y="356" width="1" height="15" fill="rgb(249,8,5)"/><text x="979.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="977" y="340" width="3" height="15" fill="rgb(240,79,2)"/><text x="980.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.12%)</title><rect x="980" y="372" width="13" height="15" fill="rgb(243,160,27)"/><text x="983.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="988" y="388" width="5" height="15" fill="rgb(252,101,49)"/><text x="991.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.24%)</title><rect x="980" y="340" width="14" height="15" fill="rgb(254,2,38)"/><text x="983.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.24%)</title><rect x="980" y="356" width="14" height="15" fill="rgb(225,131,1)"/><text x="983.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="993" y="372" width="1" height="15" fill="rgb(245,129,19)"/><text x="996.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="993" y="388" width="1" height="15" fill="rgb(219,188,11)"/><text x="996.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="993" y="404" width="1" height="15" fill="rgb(239,166,25)"/><text x="996.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="993" y="420" width="1" height="15" fill="rgb(237,101,34)"/><text x="996.00" y="430.50"></text></g><g><title>0x7fcb41a6ca33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="994" y="372" width="2" height="15" fill="rgb(242,70,3)"/><text x="997.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="340" width="3" height="15" fill="rgb(252,149,31)"/><text x="997.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="994" y="356" width="3" height="15" fill="rgb(251,136,47)"/><text x="997.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="996" y="372" width="1" height="15" fill="rgb(205,125,3)"/><text x="999.00" y="382.50"></text></g><g><title>0x7fcb016f29d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1036" y="356" width="1" height="15" fill="rgb(237,166,11)"/><text x="1039.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1037" y="356" width="3" height="15" fill="rgb(236,134,3)"/><text x="1040.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1037" y="372" width="3" height="15" fill="rgb(247,69,20)"/><text x="1040.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1037" y="388" width="3" height="15" fill="rgb(213,103,53)"/><text x="1040.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1040" y="356" width="1" height="15" fill="rgb(253,170,11)"/><text x="1043.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (18 samples, 2.02%)</title><rect x="1095" y="388" width="24" height="15" fill="rgb(221,152,49)"/><text x="1098.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (17 samples, 1.91%)</title><rect x="1097" y="404" width="22" height="15" fill="rgb(239,21,31)"/><text x="1100.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 7.87%)</title><rect x="1041" y="356" width="93" height="15" fill="rgb(243,146,41)"/><text x="1044.00" y="366.50">onnxruntime..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 4.50%)</title><rect x="1081" y="372" width="53" height="15" fill="rgb(233,149,31)"/><text x="1084.00" y="382.50">std::..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (11 samples, 1.24%)</title><rect x="1119" y="388" width="15" height="15" fill="rgb(244,97,15)"/><text x="1122.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="1134" y="356" width="9" height="15" fill="rgb(234,176,50)"/><text x="1137.00" y="366.50"></text></g><g><title>0x7fcb41a8cd97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="372" width="1" height="15" fill="rgb(227,17,42)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7fcb315397a0 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1144" y="372" width="3" height="15" fill="rgb(243,225,33)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7fcb41a6c90e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(237,29,20)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7fcb41a6c92f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1148" y="372" width="2" height="15" fill="rgb(229,140,38)"/><text x="1151.00" y="382.50"></text></g><g><title>0x7fcb41a6c965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1150" y="372" width="1" height="15" fill="rgb(227,141,31)"/><text x="1153.00" y="382.50"></text></g><g><title>0x7fcb41a6c975 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="372" width="1" height="15" fill="rgb(254,203,31)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7fcb41a6ca53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1152" y="372" width="2" height="15" fill="rgb(240,2,23)"/><text x="1155.00" y="382.50"></text></g><g><title>0x7fcb41a6cbc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1154" y="372" width="1" height="15" fill="rgb(212,224,45)"/><text x="1157.00" y="382.50"></text></g><g><title>0x7fcb41a6cbd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1155" y="372" width="1" height="15" fill="rgb(250,86,33)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7fcb41a6cbe8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1156" y="372" width="2" height="15" fill="rgb(216,35,0)"/><text x="1159.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1158" y="372" width="2" height="15" fill="rgb(231,196,7)"/><text x="1161.00" y="382.50"></text></g><g><title>0x7fcb41a6c906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="1" height="15" fill="rgb(233,68,39)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7fcb41a6c92f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="388" width="1" height="15" fill="rgb(219,192,41)"/><text x="1170.00" y="398.50"></text></g><g><title>0x7fcb41a6c957 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(247,110,25)"/><text x="1171.00" y="398.50"></text></g><g><title>0x7fcb41a6c965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(254,222,29)"/><text x="1173.00" y="398.50"></text></g><g><title>0x7fcb41a6ca4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1171" y="388" width="1" height="15" fill="rgb(254,182,14)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7fcb41a6cbd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1172" y="388" width="2" height="15" fill="rgb(223,121,5)"/><text x="1175.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.70%)</title><rect x="1143" y="356" width="32" height="15" fill="rgb(232,49,15)"/><text x="1146.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.24%)</title><rect x="1160" y="372" width="15" height="15" fill="rgb(241,179,24)"/><text x="1163.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(242,140,42)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 15.86%)</title><rect x="997" y="340" width="187" height="15" fill="rgb(205,194,22)"/><text x="1000.00" y="350.50">onnxruntime::ml::TreeEns..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (7 samples, 0.79%)</title><rect x="1175" y="356" width="9" height="15" fill="rgb(208,169,36)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 20.02%)</title><rect x="951" y="260" width="236" height="15" fill="rgb(251,117,18)"/><text x="954.00" y="270.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 20.02%)</title><rect x="951" y="276" width="236" height="15" fill="rgb(232,148,46)"/><text x="954.00" y="286.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 20.02%)</title><rect x="951" y="292" width="236" height="15" fill="rgb(250,50,23)"/><text x="954.00" y="302.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 20.02%)</title><rect x="951" y="308" width="236" height="15" fill="rgb(215,2,6)"/><text x="954.00" y="318.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 20.02%)</title><rect x="951" y="324" width="236" height="15" fill="rgb(208,24,42)"/><text x="954.00" y="334.50">onnxruntime::SequentialExecutor..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1184" y="340" width="3" height="15" fill="rgb(235,117,27)"/><text x="1187.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1186" y="356" width="1" height="15" fill="rgb(250,0,19)"/><text x="1189.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1186" y="372" width="1" height="15" fill="rgb(231,8,14)"/><text x="1189.00" y="382.50"></text></g><g><title>0x7fcb41a6e2f8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1186" y="388" width="1" height="15" fill="rgb(251,89,51)"/><text x="1189.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(244,198,25)"/><text x="1190.00" y="270.50"></text></g><g><title>all (889 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(215,198,35)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:52) (277 samples, 31.16%)</title><rect x="822" y="52" width="368" height="15" fill="rgb(235,215,18)"/><text x="825.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:51) (277 samples, 31.16%)</title><rect x="822" y="68" width="368" height="15" fill="rgb(251,1,50)"/><text x="825.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (274 samples, 30.82%)</title><rect x="826" y="84" width="364" height="15" fill="rgb(245,152,42)"/><text x="829.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (182 samples, 20.47%)</title><rect x="948" y="100" width="242" height="15" fill="rgb(206,202,27)"/><text x="951.00" y="110.50">profile (bench_AdaBoostClassifie..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 20.36%)</title><rect x="949" y="116" width="241" height="15" fill="rgb(223,180,45)"/><text x="952.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (181 samples, 20.36%)</title><rect x="949" y="132" width="241" height="15" fill="rgb(243,107,23)"/><text x="952.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (181 samples, 20.36%)</title><rect x="949" y="148" width="241" height="15" fill="rgb(247,222,4)"/><text x="952.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (181 samples, 20.36%)</title><rect x="949" y="164" width="241" height="15" fill="rgb(216,72,50)"/><text x="952.00" y="174.50">_run_whole_runtime (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (181 samples, 20.36%)</title><rect x="949" y="180" width="241" height="15" fill="rgb(235,81,23)"/><text x="952.00" y="190.50">run (mlprodict/onnxrt/ops_whole/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (180 samples, 20.25%)</title><rect x="951" y="196" width="239" height="15" fill="rgb(241,28,23)"/><text x="954.00" y="206.50">run (onnxruntime/capi/session.p..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (180 samples, 20.25%)</title><rect x="951" y="212" width="239" height="15" fill="rgb(215,101,29)"/><text x="954.00" y="222.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (180 samples, 20.25%)</title><rect x="951" y="228" width="239" height="15" fill="rgb(209,182,17)"/><text x="954.00" y="238.50">void pybind11::cpp_function::in..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (180 samples, 20.25%)</title><rect x="951" y="244" width="239" height="15" fill="rgb(250,88,21)"/><text x="954.00" y="254.50">onnxruntime::python::addObjectM..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(248,53,36)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(233,117,17)"/><text x="1191.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(237,206,22)"/><text x="1191.00" y="302.50"></text></g><g><title>0x7fcb41a6c961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(209,91,38)"/><text x="1191.00" y="318.50"></text></g></g></svg>