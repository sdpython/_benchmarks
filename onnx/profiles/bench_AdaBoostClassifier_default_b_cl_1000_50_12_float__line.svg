<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.11%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(235,156,3)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(237,157,52)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:72) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(251,198,43)"/><text x="13.00" y="206.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.11%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(211,122,33)"/><text x="14.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.11%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(245,39,21)"/><text x="14.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.11%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(218,176,48)"/><text x="14.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.11%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(236,146,2)"/><text x="14.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.11%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(250,65,8)"/><text x="14.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.11%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(226,144,10)"/><text x="14.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.11%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(254,99,27)"/><text x="14.00" y="302.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.11%)</title><rect x="11" y="308" width="1" height="15" fill="rgb(253,104,34)"/><text x="14.00" y="318.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.11%)</title><rect x="11" y="324" width="1" height="15" fill="rgb(212,214,10)"/><text x="14.00" y="334.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.11%)</title><rect x="11" y="340" width="1" height="15" fill="rgb(211,29,24)"/><text x="14.00" y="350.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17413) (1 samples, 0.11%)</title><rect x="11" y="356" width="1" height="15" fill="rgb(217,205,50)"/><text x="14.00" y="366.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (bit_generator.c:18200) (1 samples, 0.11%)</title><rect x="11" y="372" width="1" height="15" fill="rgb(229,48,11)"/><text x="14.00" y="382.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:31) (3 samples, 0.33%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(218,121,43)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:11) (3 samples, 0.33%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(222,129,25)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (3 samples, 0.33%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(222,204,0)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.33%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(208,22,40)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.33%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(211,145,8)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.33%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(229,123,51)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.33%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(252,177,24)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.22%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(224,31,29)"/><text x="14.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.22%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(246,0,8)"/><text x="14.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:150) (1 samples, 0.11%)</title><rect x="12" y="196" width="1" height="15" fill="rgb(233,96,19)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="12" y="212" width="1" height="15" fill="rgb(242,171,42)"/><text x="15.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.11%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(207,45,45)"/><text x="15.00" y="238.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:951) (1 samples, 0.11%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(210,77,49)"/><text x="16.00" y="190.50"></text></g><g><title>topological_operator_iterator (skl2onnx/common/_topology.py:561) (1 samples, 0.11%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(234,205,41)"/><text x="16.00" y="206.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:28) (2 samples, 0.22%)</title><rect x="13" y="84" width="3" height="15" fill="rgb(231,104,28)"/><text x="16.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="13" y="100" width="3" height="15" fill="rgb(220,12,44)"/><text x="16.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.22%)</title><rect x="13" y="116" width="3" height="15" fill="rgb(250,183,23)"/><text x="16.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.22%)</title><rect x="13" y="132" width="3" height="15" fill="rgb(253,22,23)"/><text x="16.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.22%)</title><rect x="13" y="148" width="3" height="15" fill="rgb(233,139,4)"/><text x="16.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.22%)</title><rect x="13" y="164" width="3" height="15" fill="rgb(218,146,7)"/><text x="16.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="15" y="180" width="1" height="15" fill="rgb(218,11,0)"/><text x="18.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="15" y="196" width="1" height="15" fill="rgb(219,172,6)"/><text x="18.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:87) (1 samples, 0.11%)</title><rect x="15" y="212" width="1" height="15" fill="rgb(219,227,30)"/><text x="18.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py:711) (1 samples, 0.11%)</title><rect x="15" y="228" width="1" height="15" fill="rgb(229,129,33)"/><text x="18.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.11%)</title><rect x="15" y="244" width="1" height="15" fill="rgb(226,112,54)"/><text x="18.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.11%)</title><rect x="15" y="260" width="1" height="15" fill="rgb(245,217,30)"/><text x="18.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.11%)</title><rect x="15" y="276" width="1" height="15" fill="rgb(243,208,36)"/><text x="18.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.11%)</title><rect x="15" y="292" width="1" height="15" fill="rgb(250,63,52)"/><text x="18.00" y="302.50"></text></g><g><title>extract (traceback.py:350) (1 samples, 0.11%)</title><rect x="15" y="308" width="1" height="15" fill="rgb(228,195,1)"/><text x="18.00" y="318.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.11%)</title><rect x="16" y="164" width="1" height="15" fill="rgb(227,185,44)"/><text x="19.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.11%)</title><rect x="16" y="180" width="1" height="15" fill="rgb(214,125,12)"/><text x="19.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="16" y="196" width="1" height="15" fill="rgb(219,226,35)"/><text x="19.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.11%)</title><rect x="16" y="212" width="1" height="15" fill="rgb(234,168,15)"/><text x="19.00" y="222.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.33%)</title><rect x="17" y="212" width="4" height="15" fill="rgb(240,136,1)"/><text x="20.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.33%)</title><rect x="17" y="228" width="4" height="15" fill="rgb(207,3,21)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.33%)</title><rect x="17" y="244" width="4" height="15" fill="rgb(249,91,37)"/><text x="20.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="20" y="260" width="1" height="15" fill="rgb(238,7,49)"/><text x="23.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.11%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(248,117,34)"/><text x="25.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(250,148,11)"/><text x="27.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="25" y="244" width="1" height="15" fill="rgb(225,86,43)"/><text x="28.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="25" y="260" width="1" height="15" fill="rgb(205,172,16)"/><text x="28.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="25" y="276" width="1" height="15" fill="rgb(207,199,40)"/><text x="28.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="26" y="244" width="1" height="15" fill="rgb(237,133,19)"/><text x="29.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="26" y="260" width="1" height="15" fill="rgb(233,150,43)"/><text x="29.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(240,50,42)"/><text x="30.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.11%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(244,203,27)"/><text x="30.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.33%)</title><rect x="29" y="244" width="4" height="15" fill="rgb(224,122,53)"/><text x="32.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.33%)</title><rect x="29" y="260" width="4" height="15" fill="rgb(209,122,33)"/><text x="32.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.11%)</title><rect x="31" y="276" width="2" height="15" fill="rgb(233,20,47)"/><text x="34.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="33" y="244" width="1" height="15" fill="rgb(219,125,23)"/><text x="36.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="33" y="260" width="1" height="15" fill="rgb(234,116,37)"/><text x="36.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (11 samples, 1.20%)</title><rect x="21" y="212" width="14" height="15" fill="rgb(254,55,52)"/><text x="24.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 1.20%)</title><rect x="21" y="228" width="14" height="15" fill="rgb(242,70,52)"/><text x="24.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.11%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(242,192,33)"/><text x="37.00" y="254.50"></text></g><g><title>0x7f66e8be8f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(205,113,19)"/><text x="38.00" y="254.50"></text></g><g><title>0x7f66e8bf8405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="260" width="2" height="15" fill="rgb(219,229,42)"/><text x="39.00" y="270.50"></text></g><g><title>0x7f66e8bf72df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="276" width="2" height="15" fill="rgb(209,181,27)"/><text x="39.00" y="286.50"></text></g><g><title>0x7f66e8bdbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="292" width="2" height="15" fill="rgb(253,43,26)"/><text x="39.00" y="302.50"></text></g><g><title>0x7f66e8bdb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="308" width="2" height="15" fill="rgb(223,56,4)"/><text x="39.00" y="318.50"></text></g><g><title>0x7f66e8bd12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="324" width="2" height="15" fill="rgb(253,179,27)"/><text x="39.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="36" y="340" width="2" height="15" fill="rgb(232,121,36)"/><text x="39.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.11%)</title><rect x="36" y="356" width="2" height="15" fill="rgb(240,197,23)"/><text x="39.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.11%)</title><rect x="36" y="372" width="2" height="15" fill="rgb(223,171,46)"/><text x="39.00" y="382.50"></text></g><g><title>0x7f66e8be8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="36" y="244" width="3" height="15" fill="rgb(222,125,11)"/><text x="39.00" y="254.50"></text></g><g><title>0x7f66e8bf8540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="38" y="260" width="1" height="15" fill="rgb(213,117,7)"/><text x="41.00" y="270.50"></text></g><g><title>0x7f66e8bcd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="38" y="276" width="1" height="15" fill="rgb(251,126,42)"/><text x="41.00" y="286.50"></text></g><g><title>0x7f66e8bcc530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="38" y="292" width="1" height="15" fill="rgb(218,154,31)"/><text x="41.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="38" y="308" width="1" height="15" fill="rgb(207,43,14)"/><text x="41.00" y="318.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.11%)</title><rect x="39" y="292" width="1" height="15" fill="rgb(205,127,14)"/><text x="42.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (6 samples, 0.65%)</title><rect x="35" y="212" width="8" height="15" fill="rgb(214,207,43)"/><text x="38.00" y="222.50"></text></g><g><title>0x7f66e8be9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.65%)</title><rect x="35" y="228" width="8" height="15" fill="rgb(230,128,53)"/><text x="38.00" y="238.50"></text></g><g><title>0x7f66e8be905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="39" y="244" width="4" height="15" fill="rgb(242,225,5)"/><text x="42.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.33%)</title><rect x="39" y="260" width="4" height="15" fill="rgb(251,45,24)"/><text x="42.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.33%)</title><rect x="39" y="276" width="4" height="15" fill="rgb(238,160,53)"/><text x="42.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.22%)</title><rect x="40" y="292" width="3" height="15" fill="rgb(229,73,40)"/><text x="43.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.11%)</title><rect x="43" y="212" width="1" height="15" fill="rgb(209,25,26)"/><text x="46.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="47" y="276" width="1" height="15" fill="rgb(239,229,26)"/><text x="50.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="47" y="292" width="1" height="15" fill="rgb(237,60,6)"/><text x="50.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="47" y="308" width="1" height="15" fill="rgb(243,93,9)"/><text x="50.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="47" y="324" width="1" height="15" fill="rgb(252,4,12)"/><text x="50.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="47" y="340" width="1" height="15" fill="rgb(236,197,20)"/><text x="50.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="47" y="356" width="1" height="15" fill="rgb(236,9,32)"/><text x="50.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="48" y="324" width="1" height="15" fill="rgb(207,2,7)"/><text x="51.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="48" y="340" width="1" height="15" fill="rgb(237,19,19)"/><text x="51.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.11%)</title><rect x="48" y="356" width="1" height="15" fill="rgb(225,73,26)"/><text x="51.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="49" y="324" width="2" height="15" fill="rgb(253,45,51)"/><text x="52.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="49" y="340" width="2" height="15" fill="rgb(242,115,49)"/><text x="52.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="49" y="356" width="2" height="15" fill="rgb(221,36,42)"/><text x="52.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="49" y="372" width="2" height="15" fill="rgb(248,109,42)"/><text x="52.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.11%)</title><rect x="49" y="388" width="2" height="15" fill="rgb(208,153,54)"/><text x="52.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.11%)</title><rect x="49" y="404" width="2" height="15" fill="rgb(240,211,29)"/><text x="52.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1498) (1 samples, 0.11%)</title><rect x="49" y="420" width="2" height="15" fill="rgb(211,42,32)"/><text x="52.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="51" y="324" width="1" height="15" fill="rgb(248,106,49)"/><text x="54.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="51" y="340" width="1" height="15" fill="rgb(231,155,0)"/><text x="54.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.11%)</title><rect x="51" y="356" width="1" height="15" fill="rgb(235,143,28)"/><text x="54.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="52" y="340" width="1" height="15" fill="rgb(219,53,49)"/><text x="55.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="53" y="340" width="1" height="15" fill="rgb(228,174,15)"/><text x="56.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(226,74,11)"/><text x="57.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(223,102,30)"/><text x="59.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="58" y="372" width="2" height="15" fill="rgb(240,206,21)"/><text x="61.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="57" y="356" width="4" height="15" fill="rgb(236,179,48)"/><text x="60.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="60" y="372" width="1" height="15" fill="rgb(222,167,27)"/><text x="63.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="61" y="356" width="1" height="15" fill="rgb(221,74,51)"/><text x="64.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="62" y="356" width="1" height="15" fill="rgb(249,210,52)"/><text x="65.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (16 samples, 1.74%)</title><rect x="44" y="212" width="21" height="15" fill="rgb(250,227,20)"/><text x="47.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 1.74%)</title><rect x="44" y="228" width="21" height="15" fill="rgb(242,92,40)"/><text x="47.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 1.74%)</title><rect x="44" y="244" width="21" height="15" fill="rgb(249,134,41)"/><text x="47.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 1.63%)</title><rect x="45" y="260" width="20" height="15" fill="rgb(242,181,47)"/><text x="48.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 1.41%)</title><rect x="48" y="276" width="17" height="15" fill="rgb(224,217,3)"/><text x="51.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 1.41%)</title><rect x="48" y="292" width="17" height="15" fill="rgb(211,221,48)"/><text x="51.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 1.41%)</title><rect x="48" y="308" width="17" height="15" fill="rgb(219,123,51)"/><text x="51.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.09%)</title><rect x="52" y="324" width="13" height="15" fill="rgb(246,9,32)"/><text x="55.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.76%)</title><rect x="56" y="340" width="9" height="15" fill="rgb(244,94,17)"/><text x="59.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="63" y="356" width="2" height="15" fill="rgb(207,56,29)"/><text x="66.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.11%)</title><rect x="65" y="212" width="1" height="15" fill="rgb(205,40,1)"/><text x="68.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.11%)</title><rect x="65" y="228" width="1" height="15" fill="rgb(229,25,38)"/><text x="68.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="65" y="244" width="1" height="15" fill="rgb(210,102,24)"/><text x="68.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="65" y="260" width="1" height="15" fill="rgb(241,185,9)"/><text x="68.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="65" y="276" width="1" height="15" fill="rgb(225,87,15)"/><text x="68.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="65" y="292" width="1" height="15" fill="rgb(219,91,13)"/><text x="68.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.11%)</title><rect x="65" y="308" width="1" height="15" fill="rgb(217,82,26)"/><text x="68.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.11%)</title><rect x="65" y="324" width="1" height="15" fill="rgb(242,26,8)"/><text x="68.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:985) (1 samples, 0.11%)</title><rect x="65" y="340" width="1" height="15" fill="rgb(209,37,30)"/><text x="68.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:799) (1 samples, 0.11%)</title><rect x="65" y="356" width="1" height="15" fill="rgb(244,176,4)"/><text x="68.00" y="366.50"></text></g><g><title>_mm_and_si128 (emmintrin.h:1232) (1 samples, 0.11%)</title><rect x="65" y="372" width="1" height="15" fill="rgb(216,42,19)"/><text x="68.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="67" y="244" width="2" height="15" fill="rgb(247,174,40)"/><text x="70.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="69" y="276" width="1" height="15" fill="rgb(248,112,8)"/><text x="72.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="69" y="292" width="1" height="15" fill="rgb(251,126,28)"/><text x="72.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.11%)</title><rect x="69" y="308" width="1" height="15" fill="rgb(211,134,22)"/><text x="72.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="69" y="324" width="1" height="15" fill="rgb(220,179,43)"/><text x="72.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="70" y="324" width="1" height="15" fill="rgb(210,70,26)"/><text x="73.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="71" y="324" width="1" height="15" fill="rgb(237,139,36)"/><text x="74.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="72" y="340" width="2" height="15" fill="rgb(228,150,50)"/><text x="75.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.43%)</title><rect x="70" y="276" width="5" height="15" fill="rgb(247,21,32)"/><text x="73.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.43%)</title><rect x="70" y="292" width="5" height="15" fill="rgb(249,150,18)"/><text x="73.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.43%)</title><rect x="70" y="308" width="5" height="15" fill="rgb(212,19,46)"/><text x="73.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="72" y="324" width="3" height="15" fill="rgb(237,123,21)"/><text x="75.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="74" y="340" width="1" height="15" fill="rgb(243,30,15)"/><text x="77.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.43%)</title><rect x="75" y="276" width="5" height="15" fill="rgb(209,72,18)"/><text x="78.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.43%)</title><rect x="75" y="292" width="5" height="15" fill="rgb(248,132,9)"/><text x="78.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.43%)</title><rect x="75" y="308" width="5" height="15" fill="rgb(221,104,39)"/><text x="78.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.43%)</title><rect x="75" y="324" width="5" height="15" fill="rgb(227,83,1)"/><text x="78.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.43%)</title><rect x="75" y="340" width="5" height="15" fill="rgb(250,44,8)"/><text x="78.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (50 samples, 5.43%)</title><rect x="17" y="196" width="64" height="15" fill="rgb(229,178,24)"/><text x="20.00" y="206.50">_samme_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (12 samples, 1.30%)</title><rect x="66" y="212" width="15" height="15" fill="rgb(220,51,10)"/><text x="69.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.20%)</title><rect x="67" y="228" width="14" height="15" fill="rgb(253,179,9)"/><text x="70.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.09%)</title><rect x="69" y="244" width="12" height="15" fill="rgb(249,73,21)"/><text x="72.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.09%)</title><rect x="69" y="260" width="12" height="15" fill="rgb(253,129,35)"/><text x="72.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="80" y="276" width="1" height="15" fill="rgb(213,144,36)"/><text x="83.00" y="286.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(208,221,23)"/><text x="84.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.11%)</title><rect x="83" y="228" width="1" height="15" fill="rgb(213,127,41)"/><text x="86.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.33%)</title><rect x="84" y="228" width="4" height="15" fill="rgb(221,153,13)"/><text x="87.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.33%)</title><rect x="84" y="244" width="4" height="15" fill="rgb(253,223,11)"/><text x="87.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.33%)</title><rect x="84" y="260" width="4" height="15" fill="rgb(241,177,15)"/><text x="87.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.33%)</title><rect x="84" y="276" width="4" height="15" fill="rgb(236,2,23)"/><text x="87.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.33%)</title><rect x="84" y="292" width="4" height="15" fill="rgb(227,169,41)"/><text x="87.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.22%)</title><rect x="89" y="324" width="3" height="15" fill="rgb(236,198,29)"/><text x="92.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.11%)</title><rect x="90" y="340" width="2" height="15" fill="rgb(252,103,10)"/><text x="93.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="92" y="356" width="1" height="15" fill="rgb(242,219,22)"/><text x="95.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="92" y="372" width="1" height="15" fill="rgb(254,3,26)"/><text x="95.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="92" y="388" width="1" height="15" fill="rgb(222,221,38)"/><text x="95.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.11%)</title><rect x="92" y="404" width="1" height="15" fill="rgb(235,162,50)"/><text x="95.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.11%)</title><rect x="92" y="420" width="1" height="15" fill="rgb(236,143,35)"/><text x="95.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.11%)</title><rect x="92" y="436" width="1" height="15" fill="rgb(239,77,13)"/><text x="95.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.11%)</title><rect x="92" y="452" width="1" height="15" fill="rgb(223,0,41)"/><text x="95.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.11%)</title><rect x="92" y="468" width="1" height="15" fill="rgb(227,136,9)"/><text x="95.00" y="478.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.43%)</title><rect x="89" y="308" width="5" height="15" fill="rgb(252,71,3)"/><text x="92.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="92" y="324" width="2" height="15" fill="rgb(245,56,46)"/><text x="95.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="92" y="340" width="2" height="15" fill="rgb(216,75,54)"/><text x="95.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="93" y="356" width="1" height="15" fill="rgb(219,4,12)"/><text x="96.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="93" y="372" width="1" height="15" fill="rgb(237,140,9)"/><text x="96.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="95" y="372" width="2" height="15" fill="rgb(206,158,19)"/><text x="98.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="95" y="324" width="4" height="15" fill="rgb(245,191,42)"/><text x="98.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="95" y="340" width="4" height="15" fill="rgb(230,172,6)"/><text x="98.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="95" y="356" width="4" height="15" fill="rgb(249,88,53)"/><text x="98.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="97" y="372" width="2" height="15" fill="rgb(234,112,10)"/><text x="100.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="97" y="388" width="2" height="15" fill="rgb(231,209,18)"/><text x="100.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="98" y="404" width="1" height="15" fill="rgb(220,143,33)"/><text x="101.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="98" y="420" width="1" height="15" fill="rgb(208,61,27)"/><text x="101.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="98" y="436" width="1" height="15" fill="rgb(244,180,49)"/><text x="101.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="98" y="452" width="1" height="15" fill="rgb(246,21,23)"/><text x="101.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.65%)</title><rect x="94" y="308" width="8" height="15" fill="rgb(241,201,18)"/><text x="97.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="99" y="324" width="3" height="15" fill="rgb(222,186,26)"/><text x="102.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (2 samples, 0.22%)</title><rect x="103" y="404" width="3" height="15" fill="rgb(253,94,54)"/><text x="106.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1869) (1 samples, 0.11%)</title><rect x="106" y="404" width="1" height="15" fill="rgb(222,138,23)"/><text x="109.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (21 samples, 2.28%)</title><rect x="81" y="196" width="27" height="15" fill="rgb(242,72,39)"/><text x="84.00" y="206.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (20 samples, 2.17%)</title><rect x="83" y="212" width="25" height="15" fill="rgb(219,116,32)"/><text x="86.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 1.74%)</title><rect x="88" y="228" width="20" height="15" fill="rgb(254,83,20)"/><text x="91.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (16 samples, 1.74%)</title><rect x="88" y="244" width="20" height="15" fill="rgb(244,200,52)"/><text x="91.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (16 samples, 1.74%)</title><rect x="88" y="260" width="20" height="15" fill="rgb(238,85,23)"/><text x="91.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (15 samples, 1.63%)</title><rect x="89" y="276" width="19" height="15" fill="rgb(206,82,15)"/><text x="92.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 1.63%)</title><rect x="89" y="292" width="19" height="15" fill="rgb(218,164,28)"/><text x="92.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (5 samples, 0.54%)</title><rect x="102" y="308" width="6" height="15" fill="rgb(242,95,39)"/><text x="105.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 0.54%)</title><rect x="102" y="324" width="6" height="15" fill="rgb(215,3,44)"/><text x="105.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.43%)</title><rect x="103" y="340" width="5" height="15" fill="rgb(254,156,28)"/><text x="106.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.43%)</title><rect x="103" y="356" width="5" height="15" fill="rgb(222,123,11)"/><text x="106.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.43%)</title><rect x="103" y="372" width="5" height="15" fill="rgb(213,208,49)"/><text x="106.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.43%)</title><rect x="103" y="388" width="5" height="15" fill="rgb(240,107,43)"/><text x="106.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.11%)</title><rect x="107" y="404" width="1" height="15" fill="rgb(215,192,31)"/><text x="110.00" y="414.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1338) (1 samples, 0.11%)</title><rect x="111" y="260" width="1" height="15" fill="rgb(246,83,48)"/><text x="114.00" y="270.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (2 samples, 0.22%)</title><rect x="112" y="260" width="3" height="15" fill="rgb(254,226,49)"/><text x="115.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="113" y="276" width="2" height="15" fill="rgb(217,182,26)"/><text x="116.00" y="286.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="115" y="276" width="1" height="15" fill="rgb(233,3,7)"/><text x="118.00" y="286.50"></text></g><g><title>0x7f670f377dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="116" y="292" width="1" height="15" fill="rgb(229,26,15)"/><text x="119.00" y="302.50"></text></g><g><title>0x7f670f377dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="117" y="292" width="2" height="15" fill="rgb(214,65,51)"/><text x="120.00" y="302.50"></text></g><g><title>0x7f670f377e01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="119" y="292" width="1" height="15" fill="rgb(220,21,17)"/><text x="122.00" y="302.50"></text></g><g><title>0x7f670f377e40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="120" y="292" width="1" height="15" fill="rgb(230,180,41)"/><text x="123.00" y="302.50"></text></g><g><title>0x7f670f377e4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="121" y="292" width="1" height="15" fill="rgb(221,227,47)"/><text x="124.00" y="302.50"></text></g><g><title>0x7f670f377e8d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="122" y="292" width="3" height="15" fill="rgb(227,87,48)"/><text x="125.00" y="302.50"></text></g><g><title>0x7f670f377eee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="125" y="292" width="3" height="15" fill="rgb(220,75,21)"/><text x="128.00" y="302.50"></text></g><g><title>0x7f670f377ef6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(229,88,39)"/><text x="131.00" y="302.50"></text></g><g><title>0x7f670f377fe3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="130" y="292" width="1" height="15" fill="rgb(239,114,40)"/><text x="133.00" y="302.50"></text></g><g><title>0x7f670f37800f (libm-2.29.so) (1 samples, 0.11%)</title><rect x="131" y="292" width="2" height="15" fill="rgb(250,111,16)"/><text x="134.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (20 samples, 2.17%)</title><rect x="108" y="196" width="26" height="15" fill="rgb(207,226,21)"/><text x="111.00" y="206.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 2.07%)</title><rect x="110" y="212" width="24" height="15" fill="rgb(233,204,29)"/><text x="113.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 2.07%)</title><rect x="110" y="228" width="24" height="15" fill="rgb(229,16,9)"/><text x="113.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 2.07%)</title><rect x="110" y="244" width="24" height="15" fill="rgb(238,213,7)"/><text x="113.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.63%)</title><rect x="115" y="260" width="19" height="15" fill="rgb(224,52,37)"/><text x="118.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (14 samples, 1.52%)</title><rect x="116" y="276" width="18" height="15" fill="rgb(220,120,48)"/><text x="119.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="133" y="292" width="1" height="15" fill="rgb(208,204,50)"/><text x="136.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.11%)</title><rect x="134" y="196" width="1" height="15" fill="rgb(252,90,9)"/><text x="137.00" y="206.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:696) (1 samples, 0.11%)</title><rect x="138" y="292" width="1" height="15" fill="rgb(229,21,49)"/><text x="141.00" y="302.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (1 samples, 0.11%)</title><rect x="139" y="292" width="1" height="15" fill="rgb(208,163,17)"/><text x="142.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.11%)</title><rect x="139" y="308" width="1" height="15" fill="rgb(216,166,22)"/><text x="142.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 0.43%)</title><rect x="136" y="212" width="6" height="15" fill="rgb(206,215,3)"/><text x="139.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="138" y="228" width="4" height="15" fill="rgb(239,164,25)"/><text x="141.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="138" y="244" width="4" height="15" fill="rgb(222,5,16)"/><text x="141.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.33%)</title><rect x="138" y="260" width="4" height="15" fill="rgb(216,199,44)"/><text x="141.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.33%)</title><rect x="138" y="276" width="4" height="15" fill="rgb(209,121,50)"/><text x="141.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="140" y="292" width="2" height="15" fill="rgb(221,120,48)"/><text x="143.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="140" y="308" width="2" height="15" fill="rgb(207,179,50)"/><text x="143.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="142" y="276" width="1" height="15" fill="rgb(234,149,20)"/><text x="145.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="142" y="292" width="1" height="15" fill="rgb(220,82,13)"/><text x="145.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.11%)</title><rect x="142" y="308" width="1" height="15" fill="rgb(240,2,48)"/><text x="145.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="143" y="324" width="1" height="15" fill="rgb(205,89,19)"/><text x="146.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="143" y="276" width="2" height="15" fill="rgb(249,213,6)"/><text x="146.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="143" y="292" width="2" height="15" fill="rgb(242,60,49)"/><text x="146.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="143" y="308" width="2" height="15" fill="rgb(226,101,51)"/><text x="146.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="144" y="324" width="1" height="15" fill="rgb(246,91,27)"/><text x="147.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="144" y="340" width="1" height="15" fill="rgb(221,209,46)"/><text x="147.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.43%)</title><rect x="142" y="228" width="5" height="15" fill="rgb(216,3,54)"/><text x="145.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.43%)</title><rect x="142" y="244" width="5" height="15" fill="rgb(234,137,30)"/><text x="145.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.43%)</title><rect x="142" y="260" width="5" height="15" fill="rgb(243,26,17)"/><text x="145.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="145" y="276" width="2" height="15" fill="rgb(214,165,39)"/><text x="148.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="145" y="292" width="2" height="15" fill="rgb(230,214,19)"/><text x="148.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="145" y="308" width="2" height="15" fill="rgb(247,177,40)"/><text x="148.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="145" y="324" width="2" height="15" fill="rgb(250,91,50)"/><text x="148.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.11%)</title><rect x="145" y="340" width="2" height="15" fill="rgb(237,119,30)"/><text x="148.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 0.54%)</title><rect x="142" y="212" width="6" height="15" fill="rgb(217,107,8)"/><text x="145.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="147" y="228" width="1" height="15" fill="rgb(242,173,34)"/><text x="150.00" y="238.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.11%)</title><rect x="147" y="244" width="1" height="15" fill="rgb(213,74,24)"/><text x="150.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="149" y="340" width="2" height="15" fill="rgb(240,191,38)"/><text x="152.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.33%)</title><rect x="149" y="260" width="4" height="15" fill="rgb(216,216,5)"/><text x="152.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.33%)</title><rect x="149" y="276" width="4" height="15" fill="rgb(245,209,17)"/><text x="152.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.33%)</title><rect x="149" y="292" width="4" height="15" fill="rgb(218,88,12)"/><text x="152.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.33%)</title><rect x="149" y="308" width="4" height="15" fill="rgb(214,202,13)"/><text x="152.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.33%)</title><rect x="149" y="324" width="4" height="15" fill="rgb(218,141,9)"/><text x="152.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="151" y="340" width="2" height="15" fill="rgb(237,137,38)"/><text x="154.00" y="350.50"></text></g><g><title>0x7f670f1bbe6d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="152" y="356" width="1" height="15" fill="rgb(208,138,25)"/><text x="155.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="153" y="308" width="1" height="15" fill="rgb(213,145,45)"/><text x="156.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="153" y="324" width="1" height="15" fill="rgb(239,146,1)"/><text x="156.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1472) (1 samples, 0.11%)</title><rect x="153" y="340" width="1" height="15" fill="rgb(241,187,53)"/><text x="156.00" y="350.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (110 samples, 11.96%)</title><rect x="16" y="100" width="141" height="15" fill="rgb(230,130,19)"/><text x="19.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 11.96%)</title><rect x="16" y="116" width="141" height="15" fill="rgb(207,126,41)"/><text x="19.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (110 samples, 11.96%)</title><rect x="16" y="132" width="141" height="15" fill="rgb(242,162,43)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (110 samples, 11.96%)</title><rect x="16" y="148" width="141" height="15" fill="rgb(231,197,9)"/><text x="19.00" y="158.50">predict_proba (sk..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (109 samples, 11.85%)</title><rect x="17" y="164" width="140" height="15" fill="rgb(212,212,42)"/><text x="20.00" y="174.50">decision_function..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (109 samples, 11.85%)</title><rect x="17" y="180" width="140" height="15" fill="rgb(210,73,26)"/><text x="20.00" y="190.50">&lt;genexpr&gt; (sklear..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (17 samples, 1.85%)</title><rect x="135" y="196" width="22" height="15" fill="rgb(249,154,40)"/><text x="138.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (7 samples, 0.76%)</title><rect x="148" y="212" width="9" height="15" fill="rgb(232,173,11)"/><text x="151.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 0.76%)</title><rect x="148" y="228" width="9" height="15" fill="rgb(246,42,0)"/><text x="151.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 0.65%)</title><rect x="149" y="244" width="8" height="15" fill="rgb(207,193,30)"/><text x="152.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.33%)</title><rect x="153" y="260" width="4" height="15" fill="rgb(214,23,7)"/><text x="156.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.33%)</title><rect x="153" y="276" width="4" height="15" fill="rgb(214,215,2)"/><text x="156.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.33%)</title><rect x="153" y="292" width="4" height="15" fill="rgb(222,198,8)"/><text x="156.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.22%)</title><rect x="154" y="308" width="3" height="15" fill="rgb(225,20,4)"/><text x="157.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.22%)</title><rect x="154" y="324" width="3" height="15" fill="rgb(210,193,42)"/><text x="157.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.22%)</title><rect x="154" y="340" width="3" height="15" fill="rgb(240,185,10)"/><text x="157.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:800) (1 samples, 0.11%)</title><rect x="157" y="148" width="1" height="15" fill="rgb(237,202,3)"/><text x="160.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="157" y="164" width="1" height="15" fill="rgb(244,213,14)"/><text x="160.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="160" y="228" width="1" height="15" fill="rgb(206,66,31)"/><text x="163.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="160" y="244" width="1" height="15" fill="rgb(206,83,41)"/><text x="163.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="163" y="244" width="2" height="15" fill="rgb(223,164,9)"/><text x="166.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (6 samples, 0.65%)</title><rect x="160" y="212" width="7" height="15" fill="rgb(217,161,22)"/><text x="163.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.54%)</title><rect x="161" y="228" width="6" height="15" fill="rgb(225,217,33)"/><text x="164.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.22%)</title><rect x="165" y="244" width="2" height="15" fill="rgb(229,46,4)"/><text x="168.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="167" y="244" width="2" height="15" fill="rgb(247,147,3)"/><text x="170.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="167" y="260" width="2" height="15" fill="rgb(237,31,2)"/><text x="170.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="169" y="260" width="1" height="15" fill="rgb(210,136,47)"/><text x="172.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.22%)</title><rect x="171" y="276" width="3" height="15" fill="rgb(242,194,53)"/><text x="174.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.11%)</title><rect x="174" y="276" width="1" height="15" fill="rgb(206,42,22)"/><text x="177.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 0.65%)</title><rect x="169" y="244" width="7" height="15" fill="rgb(239,160,35)"/><text x="172.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.54%)</title><rect x="170" y="260" width="6" height="15" fill="rgb(220,48,22)"/><text x="173.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="175" y="276" width="1" height="15" fill="rgb(230,65,1)"/><text x="178.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="176" y="244" width="2" height="15" fill="rgb(224,222,23)"/><text x="179.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="176" y="260" width="2" height="15" fill="rgb(226,27,43)"/><text x="179.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.11%)</title><rect x="176" y="276" width="2" height="15" fill="rgb(242,135,39)"/><text x="179.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.11%)</title><rect x="178" y="244" width="1" height="15" fill="rgb(221,12,39)"/><text x="181.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (9 samples, 0.98%)</title><rect x="179" y="244" width="11" height="15" fill="rgb(251,190,10)"/><text x="182.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 0.87%)</title><rect x="180" y="260" width="10" height="15" fill="rgb(217,84,4)"/><text x="183.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.22%)</title><rect x="188" y="276" width="2" height="15" fill="rgb(217,114,34)"/><text x="191.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.11%)</title><rect x="190" y="244" width="2" height="15" fill="rgb(209,229,32)"/><text x="193.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.22%)</title><rect x="192" y="260" width="2" height="15" fill="rgb(213,143,39)"/><text x="195.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="194" y="260" width="1" height="15" fill="rgb(227,96,12)"/><text x="197.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.43%)</title><rect x="192" y="244" width="5" height="15" fill="rgb(209,208,19)"/><text x="195.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.11%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(220,64,11)"/><text x="198.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (24 samples, 2.61%)</title><rect x="167" y="228" width="31" height="15" fill="rgb(205,225,44)"/><text x="170.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.11%)</title><rect x="197" y="244" width="1" height="15" fill="rgb(227,88,12)"/><text x="200.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (25 samples, 2.72%)</title><rect x="167" y="212" width="32" height="15" fill="rgb(220,28,47)"/><text x="170.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.11%)</title><rect x="198" y="228" width="1" height="15" fill="rgb(224,130,36)"/><text x="201.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.11%)</title><rect x="199" y="356" width="2" height="15" fill="rgb(227,104,28)"/><text x="202.00" y="366.50"></text></g><g><title>0x7f66e8bf72df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="199" y="276" width="3" height="15" fill="rgb(234,176,1)"/><text x="202.00" y="286.50"></text></g><g><title>0x7f66e8bdbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="199" y="292" width="3" height="15" fill="rgb(223,88,33)"/><text x="202.00" y="302.50"></text></g><g><title>0x7f66e8bdb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="199" y="308" width="3" height="15" fill="rgb(213,184,1)"/><text x="202.00" y="318.50"></text></g><g><title>0x7f66e8bd12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="199" y="324" width="3" height="15" fill="rgb(228,174,33)"/><text x="202.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.22%)</title><rect x="199" y="340" width="3" height="15" fill="rgb(245,1,23)"/><text x="202.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.11%)</title><rect x="201" y="356" width="1" height="15" fill="rgb(234,54,12)"/><text x="204.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.11%)</title><rect x="201" y="372" width="1" height="15" fill="rgb(252,133,49)"/><text x="204.00" y="382.50"></text></g><g><title>0x7f670f1b46a2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="201" y="388" width="1" height="15" fill="rgb(237,213,12)"/><text x="204.00" y="398.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.11%)</title><rect x="202" y="356" width="1" height="15" fill="rgb(222,159,11)"/><text x="205.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.11%)</title><rect x="202" y="372" width="1" height="15" fill="rgb(226,63,12)"/><text x="205.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="202" y="388" width="1" height="15" fill="rgb(213,176,2)"/><text x="205.00" y="398.50"></text></g><g><title>0x7f670f1a6b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="202" y="404" width="1" height="15" fill="rgb(213,119,20)"/><text x="205.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.33%)</title><rect x="202" y="340" width="4" height="15" fill="rgb(222,55,48)"/><text x="205.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (2 samples, 0.22%)</title><rect x="203" y="356" width="3" height="15" fill="rgb(243,167,43)"/><text x="206.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(206,203,16)"/><text x="207.00" y="382.50"></text></g><g><title>0x7f66e8bf7592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.43%)</title><rect x="202" y="276" width="5" height="15" fill="rgb(230,186,44)"/><text x="205.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (4 samples, 0.43%)</title><rect x="202" y="292" width="5" height="15" fill="rgb(244,70,11)"/><text x="205.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (4 samples, 0.43%)</title><rect x="202" y="308" width="5" height="15" fill="rgb(213,92,19)"/><text x="205.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (4 samples, 0.43%)</title><rect x="202" y="324" width="5" height="15" fill="rgb(233,229,39)"/><text x="205.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="206" y="340" width="1" height="15" fill="rgb(238,154,22)"/><text x="209.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="206" y="356" width="1" height="15" fill="rgb(230,115,34)"/><text x="209.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.11%)</title><rect x="206" y="372" width="1" height="15" fill="rgb(223,47,29)"/><text x="209.00" y="382.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.11%)</title><rect x="206" y="388" width="1" height="15" fill="rgb(243,37,33)"/><text x="209.00" y="398.50"></text></g><g><title>0x7f66e8bf7693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="207" y="276" width="1" height="15" fill="rgb(251,229,22)"/><text x="210.00" y="286.50"></text></g><g><title>0x7f66e8be8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.98%)</title><rect x="199" y="244" width="12" height="15" fill="rgb(245,163,30)"/><text x="202.00" y="254.50"></text></g><g><title>0x7f66e8bf8405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.98%)</title><rect x="199" y="260" width="12" height="15" fill="rgb(247,22,41)"/><text x="202.00" y="270.50"></text></g><g><title>0x7f66e8bf76e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="208" y="276" width="3" height="15" fill="rgb(228,203,21)"/><text x="211.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(240,168,3)"/><text x="215.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.11%)</title><rect x="212" y="276" width="1" height="15" fill="rgb(218,95,33)"/><text x="215.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.11%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(242,129,27)"/><text x="216.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.11%)</title><rect x="213" y="292" width="2" height="15" fill="rgb(210,82,43)"/><text x="216.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="213" y="308" width="2" height="15" fill="rgb(254,134,8)"/><text x="216.00" y="318.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:36) (1 samples, 0.11%)</title><rect x="215" y="276" width="1" height="15" fill="rgb(254,40,2)"/><text x="218.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.11%)</title><rect x="216" y="276" width="1" height="15" fill="rgb(219,133,34)"/><text x="219.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.11%)</title><rect x="216" y="292" width="1" height="15" fill="rgb(248,127,43)"/><text x="219.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="216" y="308" width="1" height="15" fill="rgb(251,46,29)"/><text x="219.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.11%)</title><rect x="216" y="324" width="1" height="15" fill="rgb(228,67,14)"/><text x="219.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.11%)</title><rect x="216" y="340" width="1" height="15" fill="rgb(229,43,22)"/><text x="219.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.11%)</title><rect x="216" y="356" width="1" height="15" fill="rgb(230,208,15)"/><text x="219.00" y="366.50"></text></g><g><title>0x7f66e8be905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.65%)</title><rect x="211" y="244" width="8" height="15" fill="rgb(244,112,39)"/><text x="214.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.43%)</title><rect x="213" y="260" width="6" height="15" fill="rgb(220,58,37)"/><text x="216.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.11%)</title><rect x="217" y="276" width="2" height="15" fill="rgb(236,223,37)"/><text x="220.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="217" y="292" width="2" height="15" fill="rgb(224,127,24)"/><text x="220.00" y="302.50"></text></g><g><title>0x7f66e8be913a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="219" y="244" width="1" height="15" fill="rgb(246,7,15)"/><text x="222.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="219" y="260" width="1" height="15" fill="rgb(210,20,5)"/><text x="222.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="219" y="276" width="1" height="15" fill="rgb(233,143,46)"/><text x="222.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="219" y="292" width="1" height="15" fill="rgb(254,153,45)"/><text x="222.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (17 samples, 1.85%)</title><rect x="199" y="212" width="22" height="15" fill="rgb(250,165,34)"/><text x="202.00" y="222.50">p..</text></g><g><title>0x7f66e8be9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 1.85%)</title><rect x="199" y="228" width="22" height="15" fill="rgb(240,62,8)"/><text x="202.00" y="238.50">0..</text></g><g><title>0x7f66e8be9328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="220" y="244" width="1" height="15" fill="rgb(222,152,12)"/><text x="223.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="220" y="260" width="1" height="15" fill="rgb(244,66,2)"/><text x="223.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(222,223,18)"/><text x="223.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.11%)</title><rect x="220" y="292" width="1" height="15" fill="rgb(210,101,4)"/><text x="223.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.11%)</title><rect x="220" y="308" width="1" height="15" fill="rgb(231,158,21)"/><text x="223.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.11%)</title><rect x="220" y="324" width="1" height="15" fill="rgb(232,110,7)"/><text x="223.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="221" y="228" width="1" height="15" fill="rgb(216,61,10)"/><text x="224.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:418) (1 samples, 0.11%)</title><rect x="221" y="244" width="1" height="15" fill="rgb(239,0,31)"/><text x="224.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="222" y="324" width="2" height="15" fill="rgb(244,79,53)"/><text x="225.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="222" y="340" width="2" height="15" fill="rgb(247,176,17)"/><text x="225.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="222" y="356" width="2" height="15" fill="rgb(254,113,48)"/><text x="225.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="222" y="372" width="2" height="15" fill="rgb(226,149,16)"/><text x="225.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="222" y="388" width="2" height="15" fill="rgb(212,228,48)"/><text x="225.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="222" y="404" width="2" height="15" fill="rgb(238,213,12)"/><text x="225.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="222" y="420" width="2" height="15" fill="rgb(239,25,22)"/><text x="225.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="222" y="436" width="2" height="15" fill="rgb(207,121,0)"/><text x="225.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="452" width="2" height="15" fill="rgb(212,86,30)"/><text x="225.00" y="462.50"></text></g><g><title>0x7f670f1a7700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="468" width="2" height="15" fill="rgb(224,59,43)"/><text x="225.00" y="478.50"></text></g><g><title>0x7f670f1a4af7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="222" y="484" width="2" height="15" fill="rgb(211,24,53)"/><text x="225.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="224" y="324" width="1" height="15" fill="rgb(225,13,46)"/><text x="227.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="224" y="340" width="1" height="15" fill="rgb(229,86,33)"/><text x="227.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:231) (1 samples, 0.11%)</title><rect x="224" y="356" width="1" height="15" fill="rgb(229,46,3)"/><text x="227.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="225" y="340" width="1" height="15" fill="rgb(222,213,26)"/><text x="228.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2825) (1 samples, 0.11%)</title><rect x="225" y="356" width="1" height="15" fill="rgb(240,194,42)"/><text x="228.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="225" y="324" width="3" height="15" fill="rgb(231,69,39)"/><text x="228.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.11%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(218,178,43)"/><text x="229.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="226" y="356" width="2" height="15" fill="rgb(236,81,13)"/><text x="229.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="226" y="372" width="2" height="15" fill="rgb(220,122,21)"/><text x="229.00" y="382.50"></text></g><g><title>0x7f670f1a76f1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="226" y="388" width="2" height="15" fill="rgb(254,114,41)"/><text x="229.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.11%)</title><rect x="228" y="324" width="1" height="15" fill="rgb(206,18,40)"/><text x="231.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="228" y="340" width="1" height="15" fill="rgb(249,0,53)"/><text x="231.00" y="350.50"></text></g><g><title>0x7f670e3c8c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="228" y="356" width="1" height="15" fill="rgb(238,123,7)"/><text x="231.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (2 samples, 0.22%)</title><rect x="229" y="340" width="2" height="15" fill="rgb(220,193,45)"/><text x="232.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="231" y="340" width="2" height="15" fill="rgb(230,195,43)"/><text x="234.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (4 samples, 0.43%)</title><rect x="233" y="356" width="5" height="15" fill="rgb(215,54,3)"/><text x="236.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="238" y="356" width="1" height="15" fill="rgb(216,194,7)"/><text x="241.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.22%)</title><rect x="240" y="372" width="3" height="15" fill="rgb(215,52,10)"/><text x="243.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (7 samples, 0.76%)</title><rect x="239" y="356" width="9" height="15" fill="rgb(244,32,50)"/><text x="242.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.43%)</title><rect x="243" y="372" width="5" height="15" fill="rgb(241,132,14)"/><text x="246.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.22%)</title><rect x="248" y="356" width="3" height="15" fill="rgb(237,213,30)"/><text x="251.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="251" y="356" width="1" height="15" fill="rgb(209,19,43)"/><text x="254.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (25 samples, 2.72%)</title><rect x="221" y="212" width="32" height="15" fill="rgb(243,43,46)"/><text x="224.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (24 samples, 2.61%)</title><rect x="222" y="228" width="31" height="15" fill="rgb(240,101,53)"/><text x="225.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.61%)</title><rect x="222" y="244" width="31" height="15" fill="rgb(231,43,17)"/><text x="225.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.61%)</title><rect x="222" y="260" width="31" height="15" fill="rgb(251,60,34)"/><text x="225.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 2.61%)</title><rect x="222" y="276" width="31" height="15" fill="rgb(235,20,8)"/><text x="225.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (24 samples, 2.61%)</title><rect x="222" y="292" width="31" height="15" fill="rgb(219,35,45)"/><text x="225.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (24 samples, 2.61%)</title><rect x="222" y="308" width="31" height="15" fill="rgb(254,133,14)"/><text x="225.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (19 samples, 2.07%)</title><rect x="229" y="324" width="24" height="15" fill="rgb(238,155,23)"/><text x="232.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 1.74%)</title><rect x="233" y="340" width="20" height="15" fill="rgb(254,200,42)"/><text x="236.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="252" y="356" width="1" height="15" fill="rgb(252,200,52)"/><text x="255.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.11%)</title><rect x="253" y="228" width="1" height="15" fill="rgb(214,53,15)"/><text x="256.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.11%)</title><rect x="253" y="244" width="1" height="15" fill="rgb(250,212,53)"/><text x="256.00" y="254.50"></text></g><g><title>unpack_indices (mapping.c:219) (1 samples, 0.11%)</title><rect x="253" y="260" width="1" height="15" fill="rgb(218,14,12)"/><text x="256.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="254" y="228" width="2" height="15" fill="rgb(253,25,33)"/><text x="257.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.11%)</title><rect x="254" y="244" width="2" height="15" fill="rgb(232,27,15)"/><text x="257.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="256" y="276" width="1" height="15" fill="rgb(221,67,46)"/><text x="259.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="256" y="292" width="1" height="15" fill="rgb(224,35,2)"/><text x="259.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="256" y="308" width="1" height="15" fill="rgb(246,182,27)"/><text x="259.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(219,105,24)"/><text x="259.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.11%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(233,69,53)"/><text x="259.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="256" y="244" width="2" height="15" fill="rgb(220,72,1)"/><text x="259.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="256" y="260" width="2" height="15" fill="rgb(230,221,21)"/><text x="259.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.11%)</title><rect x="257" y="276" width="1" height="15" fill="rgb(211,134,3)"/><text x="260.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.11%)</title><rect x="257" y="292" width="1" height="15" fill="rgb(218,206,48)"/><text x="260.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.54%)</title><rect x="253" y="212" width="7" height="15" fill="rgb(242,53,18)"/><text x="256.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.33%)</title><rect x="256" y="228" width="4" height="15" fill="rgb(223,45,38)"/><text x="259.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="258" y="244" width="2" height="15" fill="rgb(252,105,37)"/><text x="261.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="260" y="244" width="1" height="15" fill="rgb(219,58,41)"/><text x="263.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.11%)</title><rect x="260" y="260" width="1" height="15" fill="rgb(218,123,28)"/><text x="263.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="261" y="276" width="1" height="15" fill="rgb(224,122,0)"/><text x="264.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.11%)</title><rect x="261" y="292" width="1" height="15" fill="rgb(224,101,39)"/><text x="264.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2162) (1 samples, 0.11%)</title><rect x="261" y="308" width="1" height="15" fill="rgb(235,41,30)"/><text x="264.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="262" y="324" width="1" height="15" fill="rgb(225,23,43)"/><text x="265.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.11%)</title><rect x="263" y="324" width="2" height="15" fill="rgb(251,133,41)"/><text x="266.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="265" y="340" width="1" height="15" fill="rgb(224,110,20)"/><text x="268.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.33%)</title><rect x="266" y="340" width="4" height="15" fill="rgb(234,50,5)"/><text x="269.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.76%)</title><rect x="262" y="276" width="9" height="15" fill="rgb(205,173,33)"/><text x="265.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.76%)</title><rect x="262" y="292" width="9" height="15" fill="rgb(205,228,11)"/><text x="265.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 0.76%)</title><rect x="262" y="308" width="9" height="15" fill="rgb(219,181,24)"/><text x="265.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.54%)</title><rect x="265" y="324" width="6" height="15" fill="rgb(232,0,19)"/><text x="268.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="270" y="340" width="1" height="15" fill="rgb(211,176,5)"/><text x="273.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.11%)</title><rect x="271" y="276" width="1" height="15" fill="rgb(219,15,34)"/><text x="274.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="271" y="292" width="1" height="15" fill="rgb(210,213,22)"/><text x="274.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (18 samples, 1.96%)</title><rect x="261" y="260" width="23" height="15" fill="rgb(226,128,52)"/><text x="264.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (9 samples, 0.98%)</title><rect x="272" y="276" width="12" height="15" fill="rgb(236,188,15)"/><text x="275.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (9 samples, 0.98%)</title><rect x="272" y="292" width="12" height="15" fill="rgb(209,219,38)"/><text x="275.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (9 samples, 0.98%)</title><rect x="272" y="308" width="12" height="15" fill="rgb(210,148,38)"/><text x="275.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (9 samples, 0.98%)</title><rect x="272" y="324" width="12" height="15" fill="rgb(236,184,12)"/><text x="275.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (9 samples, 0.98%)</title><rect x="272" y="340" width="12" height="15" fill="rgb(205,86,24)"/><text x="275.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (99 samples, 10.76%)</title><rect x="158" y="196" width="127" height="15" fill="rgb(214,169,47)"/><text x="161.00" y="206.50">_samme_proba (s..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (20 samples, 2.17%)</title><rect x="260" y="212" width="25" height="15" fill="rgb(221,122,20)"/><text x="263.00" y="222.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 2.17%)</title><rect x="260" y="228" width="25" height="15" fill="rgb(214,52,23)"/><text x="263.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 2.07%)</title><rect x="261" y="244" width="24" height="15" fill="rgb(234,153,32)"/><text x="264.00" y="254.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="284" y="260" width="1" height="15" fill="rgb(220,173,49)"/><text x="287.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="284" y="276" width="1" height="15" fill="rgb(249,123,24)"/><text x="287.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="284" y="292" width="1" height="15" fill="rgb(207,39,49)"/><text x="287.00" y="302.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="289" y="212" width="1" height="15" fill="rgb(253,14,9)"/><text x="292.00" y="222.50"></text></g><g><title>0x7f670e3c8780 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="290" y="244" width="2" height="15" fill="rgb(219,97,31)"/><text x="293.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="293" y="260" width="1" height="15" fill="rgb(214,42,18)"/><text x="296.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.43%)</title><rect x="296" y="324" width="5" height="15" fill="rgb(236,41,13)"/><text x="299.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.33%)</title><rect x="297" y="340" width="4" height="15" fill="rgb(245,149,21)"/><text x="300.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="303" y="340" width="2" height="15" fill="rgb(242,1,8)"/><text x="306.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.11%)</title><rect x="303" y="356" width="2" height="15" fill="rgb(215,113,12)"/><text x="306.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.43%)</title><rect x="301" y="324" width="5" height="15" fill="rgb(254,93,27)"/><text x="304.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="305" y="340" width="1" height="15" fill="rgb(236,138,29)"/><text x="308.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.11%)</title><rect x="305" y="356" width="1" height="15" fill="rgb(207,212,52)"/><text x="308.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="306" y="340" width="1" height="15" fill="rgb(234,42,16)"/><text x="309.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="306" y="356" width="1" height="15" fill="rgb(249,110,38)"/><text x="309.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="306" y="372" width="1" height="15" fill="rgb(207,69,46)"/><text x="309.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="306" y="388" width="1" height="15" fill="rgb(239,154,50)"/><text x="309.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="306" y="404" width="1" height="15" fill="rgb(241,112,15)"/><text x="309.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="306" y="420" width="1" height="15" fill="rgb(234,87,8)"/><text x="309.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="307" y="356" width="1" height="15" fill="rgb(237,22,27)"/><text x="310.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="307" y="372" width="1" height="15" fill="rgb(247,225,18)"/><text x="310.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.11%)</title><rect x="307" y="388" width="1" height="15" fill="rgb(219,210,25)"/><text x="310.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:279) (1 samples, 0.11%)</title><rect x="307" y="404" width="1" height="15" fill="rgb(245,225,53)"/><text x="310.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="307" y="340" width="3" height="15" fill="rgb(232,112,15)"/><text x="310.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="308" y="356" width="2" height="15" fill="rgb(216,70,46)"/><text x="311.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="308" y="372" width="2" height="15" fill="rgb(231,27,41)"/><text x="311.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.11%)</title><rect x="308" y="388" width="2" height="15" fill="rgb(214,132,47)"/><text x="311.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="308" y="404" width="2" height="15" fill="rgb(225,164,54)"/><text x="311.00" y="414.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="308" y="420" width="2" height="15" fill="rgb(241,163,52)"/><text x="311.00" y="430.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="308" y="436" width="2" height="15" fill="rgb(229,110,37)"/><text x="311.00" y="446.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.11%)</title><rect x="310" y="356" width="1" height="15" fill="rgb(235,63,3)"/><text x="313.00" y="366.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.11%)</title><rect x="310" y="372" width="1" height="15" fill="rgb(209,140,23)"/><text x="313.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (14 samples, 1.52%)</title><rect x="294" y="308" width="18" height="15" fill="rgb(205,63,11)"/><text x="297.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.54%)</title><rect x="306" y="324" width="6" height="15" fill="rgb(239,97,19)"/><text x="309.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (2 samples, 0.22%)</title><rect x="310" y="340" width="2" height="15" fill="rgb(215,60,15)"/><text x="313.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.11%)</title><rect x="311" y="356" width="1" height="15" fill="rgb(253,82,35)"/><text x="314.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="312" y="324" width="1" height="15" fill="rgb(238,217,31)"/><text x="315.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="312" y="340" width="1" height="15" fill="rgb(209,62,50)"/><text x="315.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="315" y="404" width="1" height="15" fill="rgb(251,132,47)"/><text x="318.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="313" y="324" width="4" height="15" fill="rgb(221,90,54)"/><text x="316.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="313" y="340" width="4" height="15" fill="rgb(241,6,13)"/><text x="316.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="313" y="356" width="4" height="15" fill="rgb(225,161,46)"/><text x="316.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.33%)</title><rect x="313" y="372" width="4" height="15" fill="rgb(238,147,29)"/><text x="316.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.33%)</title><rect x="313" y="388" width="4" height="15" fill="rgb(254,80,7)"/><text x="316.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="316" y="404" width="1" height="15" fill="rgb(251,6,48)"/><text x="319.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="316" y="420" width="1" height="15" fill="rgb(238,179,25)"/><text x="319.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="316" y="436" width="1" height="15" fill="rgb(222,196,11)"/><text x="319.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1645) (1 samples, 0.11%)</title><rect x="316" y="452" width="1" height="15" fill="rgb(227,60,37)"/><text x="319.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="317" y="372" width="2" height="15" fill="rgb(208,48,28)"/><text x="320.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.65%)</title><rect x="312" y="308" width="8" height="15" fill="rgb(230,46,10)"/><text x="315.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="317" y="324" width="3" height="15" fill="rgb(232,197,38)"/><text x="320.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="317" y="340" width="3" height="15" fill="rgb(207,138,27)"/><text x="320.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="317" y="356" width="3" height="15" fill="rgb(228,82,41)"/><text x="320.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(219,129,0)"/><text x="322.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="319" y="388" width="1" height="15" fill="rgb(243,208,36)"/><text x="322.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="319" y="404" width="1" height="15" fill="rgb(248,45,37)"/><text x="322.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="320" y="340" width="1" height="15" fill="rgb(242,63,17)"/><text x="323.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="320" y="356" width="1" height="15" fill="rgb(236,142,30)"/><text x="323.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(252,182,8)"/><text x="323.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="320" y="388" width="1" height="15" fill="rgb(227,196,8)"/><text x="323.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="321" y="404" width="1" height="15" fill="rgb(206,198,11)"/><text x="324.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="321" y="420" width="1" height="15" fill="rgb(244,179,24)"/><text x="324.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="436" width="1" height="15" fill="rgb(225,217,41)"/><text x="324.00" y="446.50"></text></g><g><title>0x7f670f15d7a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="452" width="1" height="15" fill="rgb(219,0,49)"/><text x="324.00" y="462.50"></text></g><g><title>0x7f670f15d7c2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="468" width="1" height="15" fill="rgb(245,212,18)"/><text x="324.00" y="478.50"></text></g><g><title>0x7f670f15da6f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="484" width="1" height="15" fill="rgb(249,185,14)"/><text x="324.00" y="494.50"></text></g><g><title>0x7f670f1c5d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="500" width="1" height="15" fill="rgb(219,17,20)"/><text x="324.00" y="510.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.22%)</title><rect x="321" y="388" width="3" height="15" fill="rgb(246,149,3)"/><text x="324.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="322" y="404" width="2" height="15" fill="rgb(241,82,0)"/><text x="325.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.11%)</title><rect x="322" y="420" width="2" height="15" fill="rgb(252,44,13)"/><text x="325.00" y="430.50"></text></g><g><title>0x7f670f1a5a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="322" y="436" width="2" height="15" fill="rgb(217,214,41)"/><text x="325.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.33%)</title><rect x="321" y="372" width="4" height="15" fill="rgb(229,149,21)"/><text x="324.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.11%)</title><rect x="324" y="388" width="1" height="15" fill="rgb(233,52,44)"/><text x="327.00" y="398.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.11%)</title><rect x="324" y="404" width="1" height="15" fill="rgb(209,17,14)"/><text x="327.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (2 samples, 0.22%)</title><rect x="325" y="404" width="3" height="15" fill="rgb(205,151,52)"/><text x="328.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (37 samples, 4.02%)</title><rect x="285" y="196" width="48" height="15" fill="rgb(227,115,31)"/><text x="288.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (33 samples, 3.59%)</title><rect x="290" y="212" width="43" height="15" fill="rgb(245,184,3)"/><text x="293.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (33 samples, 3.59%)</title><rect x="290" y="228" width="43" height="15" fill="rgb(226,228,45)"/><text x="293.00" y="238.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (32 samples, 3.48%)</title><rect x="292" y="244" width="41" height="15" fill="rgb(215,215,5)"/><text x="295.00" y="254.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (30 samples, 3.26%)</title><rect x="294" y="260" width="39" height="15" fill="rgb(214,45,39)"/><text x="297.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (30 samples, 3.26%)</title><rect x="294" y="276" width="39" height="15" fill="rgb(233,79,9)"/><text x="297.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (30 samples, 3.26%)</title><rect x="294" y="292" width="39" height="15" fill="rgb(234,84,28)"/><text x="297.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (10 samples, 1.09%)</title><rect x="320" y="308" width="13" height="15" fill="rgb(243,148,13)"/><text x="323.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.09%)</title><rect x="320" y="324" width="13" height="15" fill="rgb(223,91,48)"/><text x="323.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.98%)</title><rect x="321" y="340" width="12" height="15" fill="rgb(206,127,7)"/><text x="324.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 0.98%)</title><rect x="321" y="356" width="12" height="15" fill="rgb(221,156,20)"/><text x="324.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (6 samples, 0.65%)</title><rect x="325" y="372" width="8" height="15" fill="rgb(208,155,11)"/><text x="328.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (6 samples, 0.65%)</title><rect x="325" y="388" width="8" height="15" fill="rgb(215,63,54)"/><text x="328.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (4 samples, 0.43%)</title><rect x="328" y="404" width="5" height="15" fill="rgb(225,101,47)"/><text x="331.00" y="414.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="333" y="276" width="1" height="15" fill="rgb(249,217,39)"/><text x="336.00" y="286.50"></text></g><g><title>0x7f670f377dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="335" y="292" width="2" height="15" fill="rgb(249,12,8)"/><text x="338.00" y="302.50"></text></g><g><title>0x7f670f377e01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="292" width="1" height="15" fill="rgb(234,151,26)"/><text x="340.00" y="302.50"></text></g><g><title>0x7f670f377e25 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="338" y="292" width="4" height="15" fill="rgb(222,99,19)"/><text x="341.00" y="302.50"></text></g><g><title>0x7f670f377e40 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="342" y="292" width="2" height="15" fill="rgb(247,101,9)"/><text x="345.00" y="302.50"></text></g><g><title>0x7f670f377e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="344" y="292" width="2" height="15" fill="rgb(207,103,41)"/><text x="347.00" y="302.50"></text></g><g><title>0x7f670f377e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="346" y="292" width="1" height="15" fill="rgb(226,0,52)"/><text x="349.00" y="302.50"></text></g><g><title>0x7f670f377ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="347" y="292" width="1" height="15" fill="rgb(207,16,8)"/><text x="350.00" y="302.50"></text></g><g><title>0x7f670f377ece (libm-2.29.so) (1 samples, 0.11%)</title><rect x="348" y="292" width="1" height="15" fill="rgb(248,41,40)"/><text x="351.00" y="302.50"></text></g><g><title>0x7f670f377ed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="349" y="292" width="2" height="15" fill="rgb(250,52,7)"/><text x="352.00" y="302.50"></text></g><g><title>0x7f670f377eda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="351" y="292" width="1" height="15" fill="rgb(211,149,12)"/><text x="354.00" y="302.50"></text></g><g><title>0x7f670f377eee (libm-2.29.so) (3 samples, 0.33%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(210,179,54)"/><text x="355.00" y="302.50"></text></g><g><title>0x7f670f377ef6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="356" y="292" width="2" height="15" fill="rgb(226,151,54)"/><text x="359.00" y="302.50"></text></g><g><title>0x7f670f377efa (libm-2.29.so) (2 samples, 0.22%)</title><rect x="358" y="292" width="3" height="15" fill="rgb(249,209,39)"/><text x="361.00" y="302.50"></text></g><g><title>0x7f670f377fb7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="292" width="1" height="15" fill="rgb(245,182,2)"/><text x="364.00" y="302.50"></text></g><g><title>0x7f670f377fc3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="362" y="292" width="2" height="15" fill="rgb(244,26,6)"/><text x="365.00" y="302.50"></text></g><g><title>0x7f670f377fd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="364" y="292" width="1" height="15" fill="rgb(222,206,27)"/><text x="367.00" y="302.50"></text></g><g><title>0x7f670f377fe3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="292" width="1" height="15" fill="rgb(238,227,50)"/><text x="368.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (30 samples, 3.26%)</title><rect x="333" y="196" width="38" height="15" fill="rgb(231,41,54)"/><text x="336.00" y="206.50">_sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 3.26%)</title><rect x="333" y="212" width="38" height="15" fill="rgb(236,167,9)"/><text x="336.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (30 samples, 3.26%)</title><rect x="333" y="228" width="38" height="15" fill="rgb(249,136,49)"/><text x="336.00" y="238.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (30 samples, 3.26%)</title><rect x="333" y="244" width="38" height="15" fill="rgb(208,178,53)"/><text x="336.00" y="254.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (30 samples, 3.26%)</title><rect x="333" y="260" width="38" height="15" fill="rgb(219,55,26)"/><text x="336.00" y="270.50">tri..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (29 samples, 3.15%)</title><rect x="334" y="276" width="37" height="15" fill="rgb(218,115,45)"/><text x="337.00" y="286.50">PyU..</text></g><g><title>log (libm-2.29.so) (4 samples, 0.43%)</title><rect x="366" y="292" width="5" height="15" fill="rgb(210,184,23)"/><text x="369.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.11%)</title><rect x="371" y="196" width="1" height="15" fill="rgb(229,35,41)"/><text x="374.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="375" y="212" width="1" height="15" fill="rgb(244,110,17)"/><text x="378.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="375" y="228" width="1" height="15" fill="rgb(234,107,25)"/><text x="378.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="375" y="244" width="1" height="15" fill="rgb(247,93,50)"/><text x="378.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="376" y="212" width="2" height="15" fill="rgb(223,90,23)"/><text x="379.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="376" y="228" width="2" height="15" fill="rgb(236,14,34)"/><text x="379.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="376" y="244" width="2" height="15" fill="rgb(236,51,1)"/><text x="379.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.11%)</title><rect x="376" y="260" width="2" height="15" fill="rgb(221,35,34)"/><text x="379.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="378" y="244" width="1" height="15" fill="rgb(248,67,29)"/><text x="381.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="378" y="260" width="1" height="15" fill="rgb(249,136,32)"/><text x="381.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1851) (1 samples, 0.11%)</title><rect x="378" y="276" width="1" height="15" fill="rgb(239,168,38)"/><text x="381.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="379" y="244" width="1" height="15" fill="rgb(235,28,3)"/><text x="382.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.11%)</title><rect x="379" y="260" width="1" height="15" fill="rgb(238,64,3)"/><text x="382.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="378" y="228" width="3" height="15" fill="rgb(243,147,28)"/><text x="381.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="380" y="244" width="1" height="15" fill="rgb(227,121,25)"/><text x="383.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1691) (1 samples, 0.11%)</title><rect x="380" y="260" width="1" height="15" fill="rgb(214,33,46)"/><text x="383.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 0.43%)</title><rect x="378" y="212" width="5" height="15" fill="rgb(229,27,48)"/><text x="381.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(250,173,12)"/><text x="384.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(224,193,49)"/><text x="384.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(245,131,24)"/><text x="384.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="381" y="276" width="2" height="15" fill="rgb(236,122,19)"/><text x="384.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="384" y="276" width="3" height="15" fill="rgb(241,166,38)"/><text x="387.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.22%)</title><rect x="384" y="292" width="3" height="15" fill="rgb(239,204,33)"/><text x="387.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.22%)</title><rect x="384" y="308" width="3" height="15" fill="rgb(226,202,52)"/><text x="387.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.22%)</title><rect x="384" y="324" width="3" height="15" fill="rgb(233,139,16)"/><text x="387.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="384" y="340" width="3" height="15" fill="rgb(211,95,9)"/><text x="387.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.22%)</title><rect x="384" y="356" width="3" height="15" fill="rgb(244,87,13)"/><text x="387.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.22%)</title><rect x="384" y="372" width="3" height="15" fill="rgb(206,117,49)"/><text x="387.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.22%)</title><rect x="384" y="388" width="3" height="15" fill="rgb(249,154,22)"/><text x="387.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.22%)</title><rect x="384" y="404" width="3" height="15" fill="rgb(218,136,47)"/><text x="387.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="384" y="420" width="3" height="15" fill="rgb(221,118,34)"/><text x="387.00" y="430.50"></text></g><g><title>0x7f670f1a721f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="436" width="2" height="15" fill="rgb(249,25,13)"/><text x="388.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="387" y="324" width="1" height="15" fill="rgb(221,186,28)"/><text x="390.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="388" y="324" width="1" height="15" fill="rgb(242,90,10)"/><text x="391.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="390" y="340" width="2" height="15" fill="rgb(247,68,52)"/><text x="393.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="392" y="340" width="1" height="15" fill="rgb(237,101,31)"/><text x="395.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.65%)</title><rect x="387" y="276" width="7" height="15" fill="rgb(216,92,2)"/><text x="390.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.65%)</title><rect x="387" y="292" width="7" height="15" fill="rgb(252,130,45)"/><text x="390.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.65%)</title><rect x="387" y="308" width="7" height="15" fill="rgb(250,92,49)"/><text x="390.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.43%)</title><rect x="389" y="324" width="5" height="15" fill="rgb(216,187,31)"/><text x="392.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="393" y="340" width="1" height="15" fill="rgb(250,65,5)"/><text x="396.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.09%)</title><rect x="384" y="228" width="13" height="15" fill="rgb(233,97,40)"/><text x="387.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.09%)</title><rect x="384" y="244" width="13" height="15" fill="rgb(223,87,29)"/><text x="387.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.09%)</title><rect x="384" y="260" width="13" height="15" fill="rgb(247,205,23)"/><text x="387.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="394" y="276" width="3" height="15" fill="rgb(253,206,44)"/><text x="397.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="394" y="292" width="3" height="15" fill="rgb(229,78,46)"/><text x="397.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="394" y="308" width="3" height="15" fill="rgb(225,215,31)"/><text x="397.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="394" y="324" width="3" height="15" fill="rgb(232,9,44)"/><text x="397.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (2 samples, 0.22%)</title><rect x="394" y="340" width="3" height="15" fill="rgb(215,221,31)"/><text x="397.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (12 samples, 1.30%)</title><rect x="383" y="212" width="15" height="15" fill="rgb(249,181,48)"/><text x="386.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="397" y="228" width="1" height="15" fill="rgb(227,103,45)"/><text x="400.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="398" y="340" width="1" height="15" fill="rgb(216,189,27)"/><text x="401.00" y="350.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="398" y="356" width="1" height="15" fill="rgb(210,70,44)"/><text x="401.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="398" y="260" width="3" height="15" fill="rgb(216,54,16)"/><text x="401.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="398" y="276" width="3" height="15" fill="rgb(234,197,13)"/><text x="401.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="398" y="292" width="3" height="15" fill="rgb(225,133,42)"/><text x="401.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="398" y="308" width="3" height="15" fill="rgb(243,8,44)"/><text x="401.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="398" y="324" width="3" height="15" fill="rgb(229,62,37)"/><text x="401.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="399" y="340" width="2" height="15" fill="rgb(233,83,22)"/><text x="402.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="401" y="276" width="1" height="15" fill="rgb(242,24,29)"/><text x="404.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="402" y="292" width="1" height="15" fill="rgb(246,71,38)"/><text x="405.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="402" y="308" width="1" height="15" fill="rgb(252,24,31)"/><text x="405.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="402" y="324" width="1" height="15" fill="rgb(220,8,40)"/><text x="405.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2175) (1 samples, 0.11%)</title><rect x="402" y="340" width="1" height="15" fill="rgb(240,68,54)"/><text x="405.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="403" y="308" width="2" height="15" fill="rgb(245,27,24)"/><text x="406.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="403" y="324" width="2" height="15" fill="rgb(249,227,45)"/><text x="406.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="403" y="340" width="2" height="15" fill="rgb(209,68,14)"/><text x="406.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="403" y="356" width="2" height="15" fill="rgb(244,28,38)"/><text x="406.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="403" y="372" width="2" height="15" fill="rgb(212,225,43)"/><text x="406.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="403" y="388" width="2" height="15" fill="rgb(237,199,53)"/><text x="406.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.11%)</title><rect x="405" y="356" width="1" height="15" fill="rgb(211,139,31)"/><text x="408.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="405" y="372" width="1" height="15" fill="rgb(240,3,10)"/><text x="408.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(213,58,24)"/><text x="408.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="405" y="324" width="2" height="15" fill="rgb(208,10,1)"/><text x="408.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.22%)</title><rect x="405" y="340" width="2" height="15" fill="rgb(227,149,53)"/><text x="408.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="406" y="356" width="1" height="15" fill="rgb(215,222,0)"/><text x="409.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="406" y="372" width="1" height="15" fill="rgb(207,153,19)"/><text x="409.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="407" y="324" width="1" height="15" fill="rgb(226,75,11)"/><text x="410.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="408" y="324" width="2" height="15" fill="rgb(248,56,38)"/><text x="411.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.11%)</title><rect x="408" y="340" width="2" height="15" fill="rgb(209,218,19)"/><text x="411.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.33%)</title><rect x="407" y="308" width="4" height="15" fill="rgb(253,207,41)"/><text x="410.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="410" y="324" width="1" height="15" fill="rgb(207,52,14)"/><text x="413.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.11%)</title><rect x="410" y="340" width="1" height="15" fill="rgb(248,41,21)"/><text x="413.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.11%)</title><rect x="411" y="308" width="1" height="15" fill="rgb(246,203,46)"/><text x="414.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.11%)</title><rect x="411" y="324" width="1" height="15" fill="rgb(212,140,11)"/><text x="414.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="412" y="324" width="2" height="15" fill="rgb(254,186,45)"/><text x="415.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="414" y="324" width="1" height="15" fill="rgb(216,141,40)"/><text x="417.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.22%)</title><rect x="415" y="356" width="2" height="15" fill="rgb(230,213,27)"/><text x="418.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="417" y="356" width="2" height="15" fill="rgb(244,114,52)"/><text x="420.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.43%)</title><rect x="415" y="340" width="5" height="15" fill="rgb(205,29,27)"/><text x="418.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="419" y="356" width="1" height="15" fill="rgb(245,43,48)"/><text x="422.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (205 samples, 22.28%)</title><rect x="158" y="180" width="263" height="15" fill="rgb(205,158,45)"/><text x="161.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (38 samples, 4.13%)</title><rect x="372" y="196" width="49" height="15" fill="rgb(221,190,52)"/><text x="375.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (18 samples, 1.96%)</title><rect x="398" y="212" width="23" height="15" fill="rgb(242,46,49)"/><text x="401.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 1.96%)</title><rect x="398" y="228" width="23" height="15" fill="rgb(240,40,16)"/><text x="401.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 1.96%)</title><rect x="398" y="244" width="23" height="15" fill="rgb(222,26,9)"/><text x="401.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (16 samples, 1.74%)</title><rect x="401" y="260" width="20" height="15" fill="rgb(236,186,44)"/><text x="404.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 1.63%)</title><rect x="402" y="276" width="19" height="15" fill="rgb(211,219,24)"/><text x="405.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 1.52%)</title><rect x="403" y="292" width="18" height="15" fill="rgb(207,134,50)"/><text x="406.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 0.76%)</title><rect x="412" y="308" width="9" height="15" fill="rgb(252,45,23)"/><text x="415.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.54%)</title><rect x="415" y="324" width="6" height="15" fill="rgb(210,75,15)"/><text x="418.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="420" y="340" width="1" height="15" fill="rgb(233,190,23)"/><text x="423.00" y="350.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="421" y="180" width="2" height="15" fill="rgb(209,58,25)"/><text x="424.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="421" y="196" width="2" height="15" fill="rgb(235,81,6)"/><text x="424.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="421" y="212" width="2" height="15" fill="rgb(248,212,52)"/><text x="424.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="421" y="228" width="2" height="15" fill="rgb(236,83,28)"/><text x="424.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="421" y="244" width="2" height="15" fill="rgb(214,147,30)"/><text x="424.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="421" y="260" width="2" height="15" fill="rgb(207,95,8)"/><text x="424.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.11%)</title><rect x="421" y="276" width="2" height="15" fill="rgb(251,74,15)"/><text x="424.00" y="286.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (209 samples, 22.72%)</title><rect x="158" y="148" width="268" height="15" fill="rgb(251,225,22)"/><text x="161.00" y="158.50">predict_proba (sklearn/ensemble/_we..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (209 samples, 22.72%)</title><rect x="158" y="164" width="268" height="15" fill="rgb(254,88,15)"/><text x="161.00" y="174.50">decision_function (sklearn/ensemble..</text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.33%)</title><rect x="423" y="180" width="3" height="15" fill="rgb(224,179,10)"/><text x="426.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.33%)</title><rect x="423" y="196" width="3" height="15" fill="rgb(251,62,14)"/><text x="426.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (3 samples, 0.33%)</title><rect x="423" y="212" width="3" height="15" fill="rgb(209,83,47)"/><text x="426.00" y="222.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="428" y="244" width="1" height="15" fill="rgb(205,108,32)"/><text x="431.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="429" y="292" width="1" height="15" fill="rgb(236,83,16)"/><text x="432.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="429" y="308" width="1" height="15" fill="rgb(247,154,25)"/><text x="432.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="429" y="324" width="1" height="15" fill="rgb(240,9,17)"/><text x="432.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.11%)</title><rect x="429" y="340" width="1" height="15" fill="rgb(219,151,35)"/><text x="432.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.11%)</title><rect x="429" y="356" width="1" height="15" fill="rgb(246,72,43)"/><text x="432.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.11%)</title><rect x="430" y="308" width="1" height="15" fill="rgb(252,61,17)"/><text x="433.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:316) (1 samples, 0.11%)</title><rect x="430" y="324" width="1" height="15" fill="rgb(224,15,52)"/><text x="433.00" y="334.50"></text></g><g><title>PyArray_View (convert.c:597) (1 samples, 0.11%)</title><rect x="430" y="340" width="1" height="15" fill="rgb(227,106,35)"/><text x="433.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="430" y="356" width="1" height="15" fill="rgb(233,148,30)"/><text x="433.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="430" y="372" width="1" height="15" fill="rgb(239,217,8)"/><text x="433.00" y="382.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (5 samples, 0.54%)</title><rect x="426" y="180" width="7" height="15" fill="rgb(230,214,35)"/><text x="429.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (5 samples, 0.54%)</title><rect x="426" y="196" width="7" height="15" fill="rgb(231,84,9)"/><text x="429.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.54%)</title><rect x="426" y="212" width="7" height="15" fill="rgb(223,173,49)"/><text x="429.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (5 samples, 0.54%)</title><rect x="426" y="228" width="7" height="15" fill="rgb(246,202,27)"/><text x="429.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.33%)</title><rect x="429" y="244" width="4" height="15" fill="rgb(252,223,46)"/><text x="432.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.33%)</title><rect x="429" y="260" width="4" height="15" fill="rgb(230,171,34)"/><text x="432.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.33%)</title><rect x="429" y="276" width="4" height="15" fill="rgb(245,181,18)"/><text x="432.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.22%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(209,100,7)"/><text x="433.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="431" y="308" width="2" height="15" fill="rgb(206,119,3)"/><text x="434.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="431" y="324" width="2" height="15" fill="rgb(209,181,44)"/><text x="434.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="431" y="340" width="2" height="15" fill="rgb(225,224,17)"/><text x="434.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="431" y="356" width="2" height="15" fill="rgb(227,44,46)"/><text x="434.00" y="366.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.11%)</title><rect x="433" y="180" width="1" height="15" fill="rgb(234,9,41)"/><text x="436.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="433" y="196" width="1" height="15" fill="rgb(237,157,21)"/><text x="436.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="433" y="212" width="1" height="15" fill="rgb(253,89,52)"/><text x="436.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="433" y="228" width="1" height="15" fill="rgb(239,96,18)"/><text x="436.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="433" y="244" width="1" height="15" fill="rgb(214,216,13)"/><text x="436.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="433" y="260" width="1" height="15" fill="rgb(209,6,31)"/><text x="436.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:38) (329 samples, 35.76%)</title><rect x="13" y="52" width="422" height="15" fill="rgb(228,33,31)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_1..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:37) (329 samples, 35.76%)</title><rect x="13" y="68" width="422" height="15" fill="rgb(210,23,4)"/><text x="16.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_5..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (327 samples, 35.54%)</title><rect x="16" y="84" width="419" height="15" fill="rgb(209,43,2)"/><text x="19.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1000..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (217 samples, 23.59%)</title><rect x="157" y="100" width="278" height="15" fill="rgb(237,46,35)"/><text x="160.00" y="110.50">profile (bench_AdaBoostClassifier_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (217 samples, 23.59%)</title><rect x="157" y="116" width="278" height="15" fill="rgb(254,134,15)"/><text x="160.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (217 samples, 23.59%)</title><rect x="157" y="132" width="278" height="15" fill="rgb(245,79,15)"/><text x="160.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (7 samples, 0.76%)</title><rect x="426" y="148" width="9" height="15" fill="rgb(239,77,48)"/><text x="429.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (7 samples, 0.76%)</title><rect x="426" y="164" width="9" height="15" fill="rgb(205,77,34)"/><text x="429.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:615) (1 samples, 0.11%)</title><rect x="434" y="180" width="1" height="15" fill="rgb(235,43,0)"/><text x="437.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="434" y="196" width="1" height="15" fill="rgb(230,216,50)"/><text x="437.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="434" y="212" width="1" height="15" fill="rgb(227,15,3)"/><text x="437.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="434" y="228" width="1" height="15" fill="rgb(244,174,38)"/><text x="437.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="434" y="244" width="1" height="15" fill="rgb(254,172,37)"/><text x="437.00" y="254.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="434" y="260" width="1" height="15" fill="rgb(252,86,38)"/><text x="437.00" y="270.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="434" y="276" width="1" height="15" fill="rgb(222,190,48)"/><text x="437.00" y="286.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="434" y="292" width="1" height="15" fill="rgb(220,198,51)"/><text x="437.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="434" y="308" width="1" height="15" fill="rgb(246,109,51)"/><text x="437.00" y="318.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:1) (1 samples, 0.11%)</title><rect x="435" y="148" width="2" height="15" fill="rgb(211,182,52)"/><text x="438.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="164" width="2" height="15" fill="rgb(234,144,22)"/><text x="438.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="180" width="2" height="15" fill="rgb(250,118,54)"/><text x="438.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="196" width="2" height="15" fill="rgb(228,29,22)"/><text x="438.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="212" width="2" height="15" fill="rgb(210,185,46)"/><text x="438.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="228" width="2" height="15" fill="rgb(231,134,40)"/><text x="438.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.11%)</title><rect x="435" y="244" width="2" height="15" fill="rgb(233,20,6)"/><text x="438.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="260" width="2" height="15" fill="rgb(205,153,48)"/><text x="438.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="276" width="2" height="15" fill="rgb(218,12,37)"/><text x="438.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="292" width="2" height="15" fill="rgb(221,48,11)"/><text x="438.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="308" width="2" height="15" fill="rgb(243,219,20)"/><text x="438.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="324" width="2" height="15" fill="rgb(229,178,30)"/><text x="438.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.11%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(235,98,40)"/><text x="438.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="356" width="2" height="15" fill="rgb(249,17,9)"/><text x="438.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="372" width="2" height="15" fill="rgb(236,42,22)"/><text x="438.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(248,208,27)"/><text x="438.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="404" width="2" height="15" fill="rgb(228,123,54)"/><text x="438.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="420" width="2" height="15" fill="rgb(220,177,47)"/><text x="438.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:61) (1 samples, 0.11%)</title><rect x="435" y="436" width="2" height="15" fill="rgb(236,20,41)"/><text x="438.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="452" width="2" height="15" fill="rgb(249,8,6)"/><text x="438.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="468" width="2" height="15" fill="rgb(243,79,49)"/><text x="438.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="484" width="2" height="15" fill="rgb(217,35,44)"/><text x="438.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="435" y="500" width="2" height="15" fill="rgb(239,35,42)"/><text x="438.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="435" y="516" width="2" height="15" fill="rgb(244,10,17)"/><text x="438.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="435" y="532" width="2" height="15" fill="rgb(232,206,43)"/><text x="438.00" y="542.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.11%)</title><rect x="437" y="852" width="1" height="15" fill="rgb(232,162,20)"/><text x="440.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.11%)</title><rect x="437" y="868" width="1" height="15" fill="rgb(231,54,14)"/><text x="440.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.11%)</title><rect x="437" y="884" width="1" height="15" fill="rgb(244,160,19)"/><text x="440.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.11%)</title><rect x="437" y="900" width="1" height="15" fill="rgb(251,133,5)"/><text x="440.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.11%)</title><rect x="437" y="916" width="1" height="15" fill="rgb(236,105,29)"/><text x="440.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.11%)</title><rect x="437" y="932" width="1" height="15" fill="rgb(215,198,18)"/><text x="440.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="437" y="948" width="1" height="15" fill="rgb(242,135,22)"/><text x="440.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="437" y="964" width="1" height="15" fill="rgb(240,8,3)"/><text x="440.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.11%)</title><rect x="437" y="980" width="1" height="15" fill="rgb(216,162,43)"/><text x="440.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (2 samples, 0.22%)</title><rect x="437" y="148" width="2" height="15" fill="rgb(206,107,25)"/><text x="440.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="164" width="2" height="15" fill="rgb(247,82,2)"/><text x="440.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="437" y="180" width="2" height="15" fill="rgb(207,191,29)"/><text x="440.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="196" width="2" height="15" fill="rgb(251,111,25)"/><text x="440.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="212" width="2" height="15" fill="rgb(235,129,2)"/><text x="440.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="228" width="2" height="15" fill="rgb(236,153,20)"/><text x="440.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(244,96,12)"/><text x="440.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="260" width="2" height="15" fill="rgb(253,101,18)"/><text x="440.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="276" width="2" height="15" fill="rgb(237,91,22)"/><text x="440.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.22%)</title><rect x="437" y="292" width="2" height="15" fill="rgb(212,122,50)"/><text x="440.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="308" width="2" height="15" fill="rgb(239,4,36)"/><text x="440.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="324" width="2" height="15" fill="rgb(213,6,50)"/><text x="440.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="340" width="2" height="15" fill="rgb(210,221,4)"/><text x="440.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="356" width="2" height="15" fill="rgb(217,27,14)"/><text x="440.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="372" width="2" height="15" fill="rgb(237,92,4)"/><text x="440.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.22%)</title><rect x="437" y="388" width="2" height="15" fill="rgb(214,154,44)"/><text x="440.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="404" width="2" height="15" fill="rgb(235,153,23)"/><text x="440.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="420" width="2" height="15" fill="rgb(217,72,14)"/><text x="440.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="436" width="2" height="15" fill="rgb(227,93,20)"/><text x="440.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="452" width="2" height="15" fill="rgb(207,26,23)"/><text x="440.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="468" width="2" height="15" fill="rgb(217,113,16)"/><text x="440.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.22%)</title><rect x="437" y="484" width="2" height="15" fill="rgb(213,136,23)"/><text x="440.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="500" width="2" height="15" fill="rgb(215,144,41)"/><text x="440.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="516" width="2" height="15" fill="rgb(247,229,0)"/><text x="440.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="532" width="2" height="15" fill="rgb(248,25,39)"/><text x="440.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="548" width="2" height="15" fill="rgb(237,133,36)"/><text x="440.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="564" width="2" height="15" fill="rgb(212,63,10)"/><text x="440.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.22%)</title><rect x="437" y="580" width="2" height="15" fill="rgb(215,72,42)"/><text x="440.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="596" width="2" height="15" fill="rgb(252,113,38)"/><text x="440.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="437" y="612" width="2" height="15" fill="rgb(222,55,36)"/><text x="440.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="628" width="2" height="15" fill="rgb(225,221,0)"/><text x="440.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="644" width="2" height="15" fill="rgb(226,171,12)"/><text x="440.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="660" width="2" height="15" fill="rgb(251,124,27)"/><text x="440.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="676" width="2" height="15" fill="rgb(237,9,35)"/><text x="440.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="692" width="2" height="15" fill="rgb(239,87,37)"/><text x="440.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="708" width="2" height="15" fill="rgb(219,45,53)"/><text x="440.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.22%)</title><rect x="437" y="724" width="2" height="15" fill="rgb(211,105,15)"/><text x="440.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="740" width="2" height="15" fill="rgb(240,16,11)"/><text x="440.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="756" width="2" height="15" fill="rgb(207,176,36)"/><text x="440.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="772" width="2" height="15" fill="rgb(216,155,48)"/><text x="440.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="788" width="2" height="15" fill="rgb(224,118,15)"/><text x="440.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="804" width="2" height="15" fill="rgb(211,69,10)"/><text x="440.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.22%)</title><rect x="437" y="820" width="2" height="15" fill="rgb(207,188,26)"/><text x="440.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.22%)</title><rect x="437" y="836" width="2" height="15" fill="rgb(246,166,17)"/><text x="440.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="438" y="852" width="1" height="15" fill="rgb(235,81,34)"/><text x="441.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="438" y="868" width="1" height="15" fill="rgb(209,106,53)"/><text x="441.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="438" y="884" width="1" height="15" fill="rgb(242,2,15)"/><text x="441.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="438" y="900" width="1" height="15" fill="rgb(228,47,3)"/><text x="441.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.11%)</title><rect x="438" y="916" width="1" height="15" fill="rgb(225,178,21)"/><text x="441.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.11%)</title><rect x="438" y="932" width="1" height="15" fill="rgb(241,36,6)"/><text x="441.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.11%)</title><rect x="438" y="948" width="1" height="15" fill="rgb(219,201,14)"/><text x="441.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.11%)</title><rect x="438" y="964" width="1" height="15" fill="rgb(254,54,45)"/><text x="441.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.11%)</title><rect x="438" y="980" width="1" height="15" fill="rgb(249,86,38)"/><text x="441.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.11%)</title><rect x="438" y="996" width="1" height="15" fill="rgb(211,133,26)"/><text x="441.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="438" y="1012" width="1" height="15" fill="rgb(240,41,53)"/><text x="441.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="438" y="1028" width="1" height="15" fill="rgb(248,194,8)"/><text x="441.00" y="1038.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1096) (1 samples, 0.11%)</title><rect x="439" y="1028" width="1" height="15" fill="rgb(227,76,18)"/><text x="442.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.11%)</title><rect x="439" y="1044" width="1" height="15" fill="rgb(230,150,14)"/><text x="442.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:697) (1 samples, 0.11%)</title><rect x="439" y="1060" width="1" height="15" fill="rgb(215,73,6)"/><text x="442.00" y="1070.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.22%)</title><rect x="439" y="676" width="3" height="15" fill="rgb(206,42,3)"/><text x="442.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="439" y="692" width="3" height="15" fill="rgb(237,48,53)"/><text x="442.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="439" y="708" width="3" height="15" fill="rgb(236,194,34)"/><text x="442.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="439" y="724" width="3" height="15" fill="rgb(213,34,27)"/><text x="442.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="439" y="740" width="3" height="15" fill="rgb(225,10,20)"/><text x="442.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="439" y="756" width="3" height="15" fill="rgb(239,202,28)"/><text x="442.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.22%)</title><rect x="439" y="772" width="3" height="15" fill="rgb(217,193,38)"/><text x="442.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="439" y="788" width="3" height="15" fill="rgb(254,223,47)"/><text x="442.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="439" y="804" width="3" height="15" fill="rgb(230,60,48)"/><text x="442.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="439" y="820" width="3" height="15" fill="rgb(228,88,41)"/><text x="442.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="439" y="836" width="3" height="15" fill="rgb(252,175,46)"/><text x="442.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="439" y="852" width="3" height="15" fill="rgb(207,61,53)"/><text x="442.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="439" y="868" width="3" height="15" fill="rgb(228,28,10)"/><text x="442.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="439" y="884" width="3" height="15" fill="rgb(215,218,16)"/><text x="442.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.22%)</title><rect x="439" y="900" width="3" height="15" fill="rgb(219,171,8)"/><text x="442.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="439" y="916" width="3" height="15" fill="rgb(228,42,17)"/><text x="442.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="439" y="932" width="3" height="15" fill="rgb(206,6,28)"/><text x="442.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="439" y="948" width="3" height="15" fill="rgb(250,157,48)"/><text x="442.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="439" y="964" width="3" height="15" fill="rgb(237,215,50)"/><text x="442.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="439" y="980" width="3" height="15" fill="rgb(222,156,9)"/><text x="442.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="439" y="996" width="3" height="15" fill="rgb(236,20,33)"/><text x="442.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="439" y="1012" width="3" height="15" fill="rgb(234,59,1)"/><text x="442.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2837) (1 samples, 0.11%)</title><rect x="440" y="1028" width="2" height="15" fill="rgb(218,55,7)"/><text x="443.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.11%)</title><rect x="440" y="1044" width="2" height="15" fill="rgb(244,83,24)"/><text x="443.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.11%)</title><rect x="440" y="1060" width="2" height="15" fill="rgb(249,137,36)"/><text x="443.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.11%)</title><rect x="440" y="1076" width="2" height="15" fill="rgb(224,221,9)"/><text x="443.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.11%)</title><rect x="440" y="1092" width="2" height="15" fill="rgb(240,25,13)"/><text x="443.00" y="1102.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.33%)</title><rect x="439" y="292" width="4" height="15" fill="rgb(216,143,10)"/><text x="442.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="439" y="308" width="4" height="15" fill="rgb(249,211,1)"/><text x="442.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="439" y="324" width="4" height="15" fill="rgb(217,70,42)"/><text x="442.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="439" y="340" width="4" height="15" fill="rgb(229,59,50)"/><text x="442.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="439" y="356" width="4" height="15" fill="rgb(247,20,38)"/><text x="442.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="439" y="372" width="4" height="15" fill="rgb(244,114,13)"/><text x="442.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.33%)</title><rect x="439" y="388" width="4" height="15" fill="rgb(218,44,17)"/><text x="442.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="439" y="404" width="4" height="15" fill="rgb(208,69,51)"/><text x="442.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="439" y="420" width="4" height="15" fill="rgb(227,35,10)"/><text x="442.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="439" y="436" width="4" height="15" fill="rgb(250,42,54)"/><text x="442.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="439" y="452" width="4" height="15" fill="rgb(218,135,10)"/><text x="442.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="439" y="468" width="4" height="15" fill="rgb(218,3,3)"/><text x="442.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.33%)</title><rect x="439" y="484" width="4" height="15" fill="rgb(234,115,10)"/><text x="442.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="439" y="500" width="4" height="15" fill="rgb(208,94,32)"/><text x="442.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="439" y="516" width="4" height="15" fill="rgb(210,100,29)"/><text x="442.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="439" y="532" width="4" height="15" fill="rgb(221,185,38)"/><text x="442.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="439" y="548" width="4" height="15" fill="rgb(234,220,40)"/><text x="442.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="439" y="564" width="4" height="15" fill="rgb(230,121,5)"/><text x="442.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.33%)</title><rect x="439" y="580" width="4" height="15" fill="rgb(239,89,19)"/><text x="442.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="439" y="596" width="4" height="15" fill="rgb(209,25,51)"/><text x="442.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="439" y="612" width="4" height="15" fill="rgb(238,26,0)"/><text x="442.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="439" y="628" width="4" height="15" fill="rgb(231,139,33)"/><text x="442.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="439" y="644" width="4" height="15" fill="rgb(209,39,8)"/><text x="442.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="439" y="660" width="4" height="15" fill="rgb(219,56,7)"/><text x="442.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.11%)</title><rect x="442" y="676" width="1" height="15" fill="rgb(248,2,38)"/><text x="445.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="442" y="692" width="1" height="15" fill="rgb(216,228,19)"/><text x="445.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="442" y="708" width="1" height="15" fill="rgb(207,184,23)"/><text x="445.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="442" y="724" width="1" height="15" fill="rgb(218,217,13)"/><text x="445.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="442" y="740" width="1" height="15" fill="rgb(217,123,6)"/><text x="445.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="756" width="1" height="15" fill="rgb(225,165,35)"/><text x="445.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/morestats.py:16) (1 samples, 0.11%)</title><rect x="442" y="772" width="1" height="15" fill="rgb(238,69,45)"/><text x="445.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="442" y="788" width="1" height="15" fill="rgb(220,2,54)"/><text x="445.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="804" width="1" height="15" fill="rgb(224,100,24)"/><text x="445.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="442" y="820" width="1" height="15" fill="rgb(227,207,43)"/><text x="445.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="442" y="836" width="1" height="15" fill="rgb(240,117,44)"/><text x="445.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="442" y="852" width="1" height="15" fill="rgb(222,193,28)"/><text x="445.00" y="862.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.11%)</title><rect x="442" y="868" width="1" height="15" fill="rgb(239,210,4)"/><text x="445.00" y="878.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.11%)</title><rect x="442" y="884" width="1" height="15" fill="rgb(224,143,37)"/><text x="445.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="442" y="900" width="1" height="15" fill="rgb(237,201,24)"/><text x="445.00" y="910.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="916" width="1" height="15" fill="rgb(244,226,48)"/><text x="445.00" y="926.50"></text></g><g><title>0x7f670f42d995 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="932" width="1" height="15" fill="rgb(252,148,48)"/><text x="445.00" y="942.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="948" width="1" height="15" fill="rgb(245,172,43)"/><text x="445.00" y="958.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="964" width="1" height="15" fill="rgb(209,57,6)"/><text x="445.00" y="974.50"></text></g><g><title>0x7f670f42d258 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="980" width="1" height="15" fill="rgb(228,199,51)"/><text x="445.00" y="990.50"></text></g><g><title>0x7f670f47ad7a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="996" width="1" height="15" fill="rgb(216,62,4)"/><text x="445.00" y="1006.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="1012" width="1" height="15" fill="rgb(232,69,1)"/><text x="445.00" y="1022.50"></text></g><g><title>0x7f670f47b345 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="1028" width="1" height="15" fill="rgb(235,131,19)"/><text x="445.00" y="1038.50"></text></g><g><title>0x7f670f473fec (ld-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="1044" width="1" height="15" fill="rgb(227,223,5)"/><text x="445.00" y="1054.50"></text></g><g><title>0x7f670f47256b (ld-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="1060" width="1" height="15" fill="rgb(251,187,19)"/><text x="445.00" y="1070.50"></text></g><g><title>0x7f670f471bba (ld-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="1076" width="1" height="15" fill="rgb(249,108,21)"/><text x="445.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (4 samples, 0.43%)</title><rect x="439" y="148" width="5" height="15" fill="rgb(229,213,50)"/><text x="442.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="439" y="164" width="5" height="15" fill="rgb(248,80,25)"/><text x="442.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.43%)</title><rect x="439" y="180" width="5" height="15" fill="rgb(236,12,42)"/><text x="442.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="439" y="196" width="5" height="15" fill="rgb(252,122,52)"/><text x="442.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="439" y="212" width="5" height="15" fill="rgb(225,18,36)"/><text x="442.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="439" y="228" width="5" height="15" fill="rgb(253,147,8)"/><text x="442.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="439" y="244" width="5" height="15" fill="rgb(253,12,43)"/><text x="442.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="439" y="260" width="5" height="15" fill="rgb(210,155,27)"/><text x="442.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="439" y="276" width="5" height="15" fill="rgb(237,62,21)"/><text x="442.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:75) (1 samples, 0.11%)</title><rect x="443" y="292" width="1" height="15" fill="rgb(226,2,52)"/><text x="446.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="443" y="308" width="1" height="15" fill="rgb(252,122,32)"/><text x="446.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="443" y="324" width="1" height="15" fill="rgb(242,48,24)"/><text x="446.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="443" y="340" width="1" height="15" fill="rgb(206,115,37)"/><text x="446.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="443" y="356" width="1" height="15" fill="rgb(242,151,51)"/><text x="446.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="443" y="372" width="1" height="15" fill="rgb(239,35,26)"/><text x="446.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_show_versions.py:12) (1 samples, 0.11%)</title><rect x="443" y="388" width="1" height="15" fill="rgb(208,170,44)"/><text x="446.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="443" y="404" width="1" height="15" fill="rgb(207,115,0)"/><text x="446.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="443" y="420" width="1" height="15" fill="rgb(212,216,25)"/><text x="446.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="443" y="436" width="1" height="15" fill="rgb(251,109,15)"/><text x="446.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="443" y="452" width="1" height="15" fill="rgb(241,229,29)"/><text x="446.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="443" y="468" width="1" height="15" fill="rgb(222,82,35)"/><text x="446.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.11%)</title><rect x="443" y="484" width="1" height="15" fill="rgb(228,204,19)"/><text x="446.00" y="494.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="443" y="500" width="1" height="15" fill="rgb(222,98,9)"/><text x="446.00" y="510.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="443" y="516" width="1" height="15" fill="rgb(237,90,21)"/><text x="446.00" y="526.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.11%)</title><rect x="444" y="772" width="2" height="15" fill="rgb(208,95,2)"/><text x="447.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="444" y="788" width="2" height="15" fill="rgb(246,78,13)"/><text x="447.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="444" y="804" width="2" height="15" fill="rgb(224,110,17)"/><text x="447.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="444" y="820" width="2" height="15" fill="rgb(215,78,32)"/><text x="447.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="444" y="836" width="2" height="15" fill="rgb(215,120,11)"/><text x="447.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="444" y="852" width="2" height="15" fill="rgb(240,4,39)"/><text x="447.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.11%)</title><rect x="444" y="868" width="2" height="15" fill="rgb(224,20,54)"/><text x="447.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="444" y="884" width="2" height="15" fill="rgb(234,114,25)"/><text x="447.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="444" y="900" width="2" height="15" fill="rgb(238,50,22)"/><text x="447.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="444" y="916" width="2" height="15" fill="rgb(218,130,24)"/><text x="447.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="444" y="932" width="2" height="15" fill="rgb(229,15,50)"/><text x="447.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="444" y="948" width="2" height="15" fill="rgb(225,167,8)"/><text x="447.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:38) (1 samples, 0.11%)</title><rect x="444" y="964" width="2" height="15" fill="rgb(227,128,0)"/><text x="447.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="444" y="980" width="2" height="15" fill="rgb(216,164,20)"/><text x="447.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="444" y="996" width="2" height="15" fill="rgb(233,214,20)"/><text x="447.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="444" y="1012" width="2" height="15" fill="rgb(225,209,5)"/><text x="447.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="444" y="1028" width="2" height="15" fill="rgb(221,57,40)"/><text x="447.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="444" y="1044" width="2" height="15" fill="rgb(237,60,46)"/><text x="447.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/request.py:3) (1 samples, 0.11%)</title><rect x="444" y="1060" width="2" height="15" fill="rgb(247,138,43)"/><text x="447.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="444" y="1076" width="2" height="15" fill="rgb(246,118,27)"/><text x="447.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="444" y="1092" width="2" height="15" fill="rgb(216,144,4)"/><text x="447.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="444" y="1108" width="2" height="15" fill="rgb(219,209,38)"/><text x="447.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="444" y="1124" width="2" height="15" fill="rgb(215,63,12)"/><text x="447.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.11%)</title><rect x="444" y="1140" width="2" height="15" fill="rgb(239,58,19)"/><text x="447.00" y="1150.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:954) (1 samples, 0.11%)</title><rect x="444" y="1156" width="2" height="15" fill="rgb(210,128,9)"/><text x="447.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.22%)</title><rect x="444" y="484" width="3" height="15" fill="rgb(241,77,13)"/><text x="447.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="444" y="500" width="3" height="15" fill="rgb(216,138,32)"/><text x="447.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="444" y="516" width="3" height="15" fill="rgb(251,204,47)"/><text x="447.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="444" y="532" width="3" height="15" fill="rgb(209,106,7)"/><text x="447.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="444" y="548" width="3" height="15" fill="rgb(231,85,19)"/><text x="447.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="444" y="564" width="3" height="15" fill="rgb(214,104,0)"/><text x="447.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.22%)</title><rect x="444" y="580" width="3" height="15" fill="rgb(248,109,14)"/><text x="447.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="444" y="596" width="3" height="15" fill="rgb(242,2,3)"/><text x="447.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="444" y="612" width="3" height="15" fill="rgb(207,98,19)"/><text x="447.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="444" y="628" width="3" height="15" fill="rgb(231,180,44)"/><text x="447.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="444" y="644" width="3" height="15" fill="rgb(245,176,45)"/><text x="447.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="444" y="660" width="3" height="15" fill="rgb(219,71,29)"/><text x="447.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.22%)</title><rect x="444" y="676" width="3" height="15" fill="rgb(234,46,4)"/><text x="447.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="444" y="692" width="3" height="15" fill="rgb(248,43,13)"/><text x="447.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="444" y="708" width="3" height="15" fill="rgb(217,9,34)"/><text x="447.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="444" y="724" width="3" height="15" fill="rgb(244,22,9)"/><text x="447.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="444" y="740" width="3" height="15" fill="rgb(216,205,2)"/><text x="447.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="444" y="756" width="3" height="15" fill="rgb(223,121,33)"/><text x="447.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.11%)</title><rect x="446" y="772" width="1" height="15" fill="rgb(233,165,49)"/><text x="449.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="446" y="788" width="1" height="15" fill="rgb(251,212,37)"/><text x="449.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="446" y="804" width="1" height="15" fill="rgb(241,68,38)"/><text x="449.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="446" y="820" width="1" height="15" fill="rgb(239,11,19)"/><text x="449.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="446" y="836" width="1" height="15" fill="rgb(208,20,48)"/><text x="449.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="446" y="852" width="1" height="15" fill="rgb(218,199,42)"/><text x="449.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="446" y="868" width="1" height="15" fill="rgb(242,139,23)"/><text x="449.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.11%)</title><rect x="446" y="884" width="1" height="15" fill="rgb(236,213,9)"/><text x="449.00" y="894.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.11%)</title><rect x="446" y="900" width="1" height="15" fill="rgb(228,123,11)"/><text x="449.00" y="910.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="446" y="916" width="1" height="15" fill="rgb(240,61,33)"/><text x="449.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.33%)</title><rect x="444" y="244" width="4" height="15" fill="rgb(221,68,41)"/><text x="447.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="444" y="260" width="4" height="15" fill="rgb(221,4,20)"/><text x="447.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="444" y="276" width="4" height="15" fill="rgb(220,53,35)"/><text x="447.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="444" y="292" width="4" height="15" fill="rgb(228,162,42)"/><text x="447.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="444" y="308" width="4" height="15" fill="rgb(238,80,43)"/><text x="447.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="444" y="324" width="4" height="15" fill="rgb(249,187,43)"/><text x="447.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.33%)</title><rect x="444" y="340" width="4" height="15" fill="rgb(235,34,42)"/><text x="447.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="444" y="356" width="4" height="15" fill="rgb(237,1,44)"/><text x="447.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.33%)</title><rect x="444" y="372" width="4" height="15" fill="rgb(215,29,40)"/><text x="447.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="444" y="388" width="4" height="15" fill="rgb(236,176,26)"/><text x="447.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="444" y="404" width="4" height="15" fill="rgb(228,203,29)"/><text x="447.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="444" y="420" width="4" height="15" fill="rgb(241,16,25)"/><text x="447.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="444" y="436" width="4" height="15" fill="rgb(223,142,15)"/><text x="447.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="444" y="452" width="4" height="15" fill="rgb(208,137,28)"/><text x="447.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="444" y="468" width="4" height="15" fill="rgb(254,74,7)"/><text x="447.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.11%)</title><rect x="447" y="484" width="1" height="15" fill="rgb(205,0,11)"/><text x="450.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="447" y="500" width="1" height="15" fill="rgb(248,85,35)"/><text x="450.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="447" y="516" width="1" height="15" fill="rgb(212,18,17)"/><text x="450.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="447" y="532" width="1" height="15" fill="rgb(233,37,15)"/><text x="450.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="447" y="548" width="1" height="15" fill="rgb(247,67,46)"/><text x="450.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="447" y="564" width="1" height="15" fill="rgb(213,82,28)"/><text x="450.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.11%)</title><rect x="447" y="580" width="1" height="15" fill="rgb(208,213,3)"/><text x="450.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="447" y="596" width="1" height="15" fill="rgb(242,149,54)"/><text x="450.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="447" y="612" width="1" height="15" fill="rgb(224,173,13)"/><text x="450.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="447" y="628" width="1" height="15" fill="rgb(212,58,43)"/><text x="450.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="447" y="644" width="1" height="15" fill="rgb(238,104,8)"/><text x="450.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="447" y="660" width="1" height="15" fill="rgb(242,56,37)"/><text x="450.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.11%)</title><rect x="447" y="676" width="1" height="15" fill="rgb(218,220,5)"/><text x="450.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="447" y="692" width="1" height="15" fill="rgb(216,76,16)"/><text x="450.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="447" y="708" width="1" height="15" fill="rgb(205,33,40)"/><text x="450.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="447" y="724" width="1" height="15" fill="rgb(224,158,30)"/><text x="450.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="447" y="740" width="1" height="15" fill="rgb(205,197,18)"/><text x="450.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="447" y="756" width="1" height="15" fill="rgb(219,108,48)"/><text x="450.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:141) (1 samples, 0.11%)</title><rect x="447" y="772" width="1" height="15" fill="rgb(226,124,9)"/><text x="450.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="447" y="788" width="1" height="15" fill="rgb(222,11,33)"/><text x="450.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="447" y="804" width="1" height="15" fill="rgb(223,85,49)"/><text x="450.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.11%)</title><rect x="447" y="820" width="1" height="15" fill="rgb(208,116,8)"/><text x="450.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.11%)</title><rect x="447" y="836" width="1" height="15" fill="rgb(238,98,9)"/><text x="450.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="447" y="852" width="1" height="15" fill="rgb(250,199,53)"/><text x="450.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="447" y="868" width="1" height="15" fill="rgb(246,142,0)"/><text x="450.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="447" y="884" width="1" height="15" fill="rgb(209,157,19)"/><text x="450.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:510) (1 samples, 0.11%)</title><rect x="447" y="900" width="1" height="15" fill="rgb(237,173,14)"/><text x="450.00" y="910.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.11%)</title><rect x="448" y="1780" width="1" height="15" fill="rgb(215,20,42)"/><text x="451.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="1796" width="1" height="15" fill="rgb(252,74,36)"/><text x="451.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="1812" width="1" height="15" fill="rgb(253,196,32)"/><text x="451.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="1828" width="1" height="15" fill="rgb(206,113,30)"/><text x="451.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="1844" width="1" height="15" fill="rgb(230,42,7)"/><text x="451.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="1860" width="1" height="15" fill="rgb(215,10,10)"/><text x="451.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:1969) (1 samples, 0.11%)</title><rect x="448" y="1876" width="1" height="15" fill="rgb(228,77,32)"/><text x="451.00" y="1886.50"></text></g><g><title>BoxStyle (matplotlib/patches.py:2448) (1 samples, 0.11%)</title><rect x="448" y="1892" width="1" height="15" fill="rgb(247,226,12)"/><text x="451.00" y="1902.50"></text></g><g><title>_pprint_styles (matplotlib/patches.py:1883) (1 samples, 0.11%)</title><rect x="448" y="1908" width="1" height="15" fill="rgb(221,6,1)"/><text x="451.00" y="1918.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.11%)</title><rect x="448" y="1924" width="1" height="15" fill="rgb(218,70,1)"/><text x="451.00" y="1934.50"></text></g><g><title>_signature_from_callable (inspect.py:2252) (1 samples, 0.11%)</title><rect x="448" y="1940" width="1" height="15" fill="rgb(244,68,6)"/><text x="451.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.22%)</title><rect x="448" y="532" width="3" height="15" fill="rgb(253,60,23)"/><text x="451.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="548" width="3" height="15" fill="rgb(254,53,13)"/><text x="451.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="564" width="3" height="15" fill="rgb(229,217,40)"/><text x="451.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="580" width="3" height="15" fill="rgb(238,21,32)"/><text x="451.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="596" width="3" height="15" fill="rgb(230,76,33)"/><text x="451.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="612" width="3" height="15" fill="rgb(239,94,54)"/><text x="451.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.22%)</title><rect x="448" y="628" width="3" height="15" fill="rgb(247,186,17)"/><text x="451.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="644" width="3" height="15" fill="rgb(223,205,45)"/><text x="451.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="660" width="3" height="15" fill="rgb(250,1,24)"/><text x="451.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="676" width="3" height="15" fill="rgb(215,89,33)"/><text x="451.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="692" width="3" height="15" fill="rgb(240,54,2)"/><text x="451.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="708" width="3" height="15" fill="rgb(239,25,20)"/><text x="451.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.22%)</title><rect x="448" y="724" width="3" height="15" fill="rgb(231,126,29)"/><text x="451.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="740" width="3" height="15" fill="rgb(233,98,3)"/><text x="451.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="756" width="3" height="15" fill="rgb(235,98,2)"/><text x="451.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="772" width="3" height="15" fill="rgb(219,73,34)"/><text x="451.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="788" width="3" height="15" fill="rgb(226,141,45)"/><text x="451.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="804" width="3" height="15" fill="rgb(228,83,39)"/><text x="451.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.22%)</title><rect x="448" y="820" width="3" height="15" fill="rgb(231,199,37)"/><text x="451.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="836" width="3" height="15" fill="rgb(238,218,14)"/><text x="451.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="852" width="3" height="15" fill="rgb(249,76,10)"/><text x="451.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="868" width="3" height="15" fill="rgb(242,106,36)"/><text x="451.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="884" width="3" height="15" fill="rgb(216,125,43)"/><text x="451.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="900" width="3" height="15" fill="rgb(210,96,26)"/><text x="451.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.22%)</title><rect x="448" y="916" width="3" height="15" fill="rgb(253,196,51)"/><text x="451.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="932" width="3" height="15" fill="rgb(237,88,39)"/><text x="451.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="948" width="3" height="15" fill="rgb(222,53,34)"/><text x="451.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="964" width="3" height="15" fill="rgb(241,124,37)"/><text x="451.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="980" width="3" height="15" fill="rgb(226,109,21)"/><text x="451.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="996" width="3" height="15" fill="rgb(247,39,50)"/><text x="451.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.22%)</title><rect x="448" y="1012" width="3" height="15" fill="rgb(219,4,33)"/><text x="451.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1028" width="3" height="15" fill="rgb(250,6,30)"/><text x="451.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1044" width="3" height="15" fill="rgb(233,216,51)"/><text x="451.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1060" width="3" height="15" fill="rgb(222,156,52)"/><text x="451.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1076" width="3" height="15" fill="rgb(239,74,41)"/><text x="451.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1092" width="3" height="15" fill="rgb(244,160,46)"/><text x="451.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.22%)</title><rect x="448" y="1108" width="3" height="15" fill="rgb(251,130,54)"/><text x="451.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1124" width="3" height="15" fill="rgb(224,142,8)"/><text x="451.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1140" width="3" height="15" fill="rgb(250,134,52)"/><text x="451.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1156" width="3" height="15" fill="rgb(230,182,34)"/><text x="451.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1172" width="3" height="15" fill="rgb(252,29,22)"/><text x="451.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1188" width="3" height="15" fill="rgb(231,86,12)"/><text x="451.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.22%)</title><rect x="448" y="1204" width="3" height="15" fill="rgb(206,151,47)"/><text x="451.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1220" width="3" height="15" fill="rgb(231,219,22)"/><text x="451.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1236" width="3" height="15" fill="rgb(216,211,53)"/><text x="451.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1252" width="3" height="15" fill="rgb(209,221,3)"/><text x="451.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1268" width="3" height="15" fill="rgb(238,73,22)"/><text x="451.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1284" width="3" height="15" fill="rgb(244,39,6)"/><text x="451.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.22%)</title><rect x="448" y="1300" width="3" height="15" fill="rgb(238,209,14)"/><text x="451.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1316" width="3" height="15" fill="rgb(215,36,45)"/><text x="451.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1332" width="3" height="15" fill="rgb(250,141,12)"/><text x="451.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1348" width="3" height="15" fill="rgb(251,82,52)"/><text x="451.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1364" width="3" height="15" fill="rgb(207,195,46)"/><text x="451.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1380" width="3" height="15" fill="rgb(218,144,5)"/><text x="451.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.22%)</title><rect x="448" y="1396" width="3" height="15" fill="rgb(249,157,5)"/><text x="451.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1412" width="3" height="15" fill="rgb(221,208,6)"/><text x="451.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1428" width="3" height="15" fill="rgb(221,193,19)"/><text x="451.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1444" width="3" height="15" fill="rgb(240,97,29)"/><text x="451.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1460" width="3" height="15" fill="rgb(216,175,21)"/><text x="451.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1476" width="3" height="15" fill="rgb(223,10,2)"/><text x="451.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.22%)</title><rect x="448" y="1492" width="3" height="15" fill="rgb(237,38,16)"/><text x="451.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1508" width="3" height="15" fill="rgb(254,161,14)"/><text x="451.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1524" width="3" height="15" fill="rgb(207,101,48)"/><text x="451.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1540" width="3" height="15" fill="rgb(240,216,1)"/><text x="451.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1556" width="3" height="15" fill="rgb(232,116,23)"/><text x="451.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1572" width="3" height="15" fill="rgb(238,170,5)"/><text x="451.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.22%)</title><rect x="448" y="1588" width="3" height="15" fill="rgb(229,214,44)"/><text x="451.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1604" width="3" height="15" fill="rgb(249,60,23)"/><text x="451.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1620" width="3" height="15" fill="rgb(215,24,3)"/><text x="451.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1636" width="3" height="15" fill="rgb(213,166,11)"/><text x="451.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1652" width="3" height="15" fill="rgb(231,23,51)"/><text x="451.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1668" width="3" height="15" fill="rgb(225,90,40)"/><text x="451.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.22%)</title><rect x="448" y="1684" width="3" height="15" fill="rgb(247,27,30)"/><text x="451.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="448" y="1700" width="3" height="15" fill="rgb(240,94,5)"/><text x="451.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="448" y="1716" width="3" height="15" fill="rgb(206,50,17)"/><text x="451.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="448" y="1732" width="3" height="15" fill="rgb(245,197,25)"/><text x="451.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="448" y="1748" width="3" height="15" fill="rgb(245,209,52)"/><text x="451.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="448" y="1764" width="3" height="15" fill="rgb(215,226,40)"/><text x="451.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.11%)</title><rect x="449" y="1780" width="2" height="15" fill="rgb(228,146,43)"/><text x="452.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="1796" width="2" height="15" fill="rgb(223,7,36)"/><text x="452.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="1812" width="2" height="15" fill="rgb(242,118,2)"/><text x="452.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="1828" width="2" height="15" fill="rgb(227,153,1)"/><text x="452.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="1844" width="2" height="15" fill="rgb(243,79,11)"/><text x="452.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="1860" width="2" height="15" fill="rgb(241,94,44)"/><text x="452.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.11%)</title><rect x="449" y="1876" width="2" height="15" fill="rgb(232,73,2)"/><text x="452.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="449" y="1892" width="2" height="15" fill="rgb(227,189,51)"/><text x="452.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="449" y="1908" width="2" height="15" fill="rgb(235,92,4)"/><text x="452.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="449" y="1924" width="2" height="15" fill="rgb(216,203,50)"/><text x="452.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="449" y="1940" width="2" height="15" fill="rgb(238,54,5)"/><text x="452.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="449" y="1956" width="2" height="15" fill="rgb(249,47,18)"/><text x="452.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:1353) (1 samples, 0.11%)</title><rect x="449" y="1972" width="2" height="15" fill="rgb(228,146,37)"/><text x="452.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py:925) (1 samples, 0.11%)</title><rect x="449" y="1988" width="2" height="15" fill="rgb(251,157,44)"/><text x="452.00" y="1998.50"></text></g><g><title>load (json/__init__.py:296) (1 samples, 0.11%)</title><rect x="449" y="2004" width="2" height="15" fill="rgb(232,123,40)"/><text x="452.00" y="2014.50"></text></g><g><title>loads (json/__init__.py:361) (1 samples, 0.11%)</title><rect x="449" y="2020" width="2" height="15" fill="rgb(236,16,20)"/><text x="452.00" y="2030.50"></text></g><g><title>decode (json/decoder.py:337) (1 samples, 0.11%)</title><rect x="449" y="2036" width="2" height="15" fill="rgb(224,111,19)"/><text x="452.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py:353) (1 samples, 0.11%)</title><rect x="449" y="2052" width="2" height="15" fill="rgb(208,47,45)"/><text x="452.00" y="2062.50"></text></g><g><title>0x7f66fb3fb720 (?) (1 samples, 0.11%)</title><rect x="449" y="2068" width="2" height="15" fill="rgb(206,145,42)"/><text x="452.00" y="2078.50"></text></g><g><title>0x7f66fb3fd568 (?) (1 samples, 0.11%)</title><rect x="449" y="2084" width="2" height="15" fill="rgb(228,2,10)"/><text x="452.00" y="2094.50"></text></g><g><title>0x7f66fb3fc8fe (?) (1 samples, 0.11%)</title><rect x="449" y="2100" width="2" height="15" fill="rgb(205,74,29)"/><text x="452.00" y="2110.50"></text></g><g><title>0x7f66fb3fc75d (?) (1 samples, 0.11%)</title><rect x="449" y="2116" width="2" height="15" fill="rgb(232,210,51)"/><text x="452.00" y="2126.50"></text></g><g><title>0x7f66fb3fd568 (?) (1 samples, 0.11%)</title><rect x="449" y="2132" width="2" height="15" fill="rgb(234,34,48)"/><text x="452.00" y="2142.50"></text></g><g><title>0x7f66fb3fcbab (?) (1 samples, 0.11%)</title><rect x="449" y="2148" width="2" height="15" fill="rgb(227,41,49)"/><text x="452.00" y="2158.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.33%)</title><rect x="448" y="436" width="4" height="15" fill="rgb(230,70,41)"/><text x="451.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="448" y="452" width="4" height="15" fill="rgb(242,49,3)"/><text x="451.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="448" y="468" width="4" height="15" fill="rgb(225,190,52)"/><text x="451.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="448" y="484" width="4" height="15" fill="rgb(254,136,11)"/><text x="451.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="448" y="500" width="4" height="15" fill="rgb(243,93,52)"/><text x="451.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="448" y="516" width="4" height="15" fill="rgb(238,39,51)"/><text x="451.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.11%)</title><rect x="451" y="532" width="1" height="15" fill="rgb(254,196,14)"/><text x="454.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="548" width="1" height="15" fill="rgb(240,17,25)"/><text x="454.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="564" width="1" height="15" fill="rgb(239,182,51)"/><text x="454.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="580" width="1" height="15" fill="rgb(252,195,30)"/><text x="454.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="596" width="1" height="15" fill="rgb(206,115,10)"/><text x="454.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="612" width="1" height="15" fill="rgb(252,126,51)"/><text x="454.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.11%)</title><rect x="451" y="628" width="1" height="15" fill="rgb(252,104,29)"/><text x="454.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="451" y="644" width="1" height="15" fill="rgb(224,42,16)"/><text x="454.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="660" width="1" height="15" fill="rgb(224,182,7)"/><text x="454.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="676" width="1" height="15" fill="rgb(251,75,44)"/><text x="454.00" y="686.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.11%)</title><rect x="451" y="692" width="1" height="15" fill="rgb(210,189,40)"/><text x="454.00" y="702.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:109) (1 samples, 0.11%)</title><rect x="451" y="708" width="1" height="15" fill="rgb(221,83,11)"/><text x="454.00" y="718.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:4) (14 samples, 1.52%)</title><rect x="435" y="52" width="18" height="15" fill="rgb(225,124,1)"/><text x="438.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.52%)</title><rect x="435" y="68" width="18" height="15" fill="rgb(229,68,11)"/><text x="438.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.52%)</title><rect x="435" y="84" width="18" height="15" fill="rgb(235,199,21)"/><text x="438.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.52%)</title><rect x="435" y="100" width="18" height="15" fill="rgb(251,66,46)"/><text x="438.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.52%)</title><rect x="435" y="116" width="18" height="15" fill="rgb(205,48,45)"/><text x="438.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.52%)</title><rect x="435" y="132" width="18" height="15" fill="rgb(252,18,30)"/><text x="438.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (7 samples, 0.76%)</title><rect x="444" y="148" width="9" height="15" fill="rgb(245,193,19)"/><text x="447.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.76%)</title><rect x="444" y="164" width="9" height="15" fill="rgb(211,97,17)"/><text x="447.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.76%)</title><rect x="444" y="180" width="9" height="15" fill="rgb(223,229,23)"/><text x="447.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.76%)</title><rect x="444" y="196" width="9" height="15" fill="rgb(250,9,38)"/><text x="447.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.76%)</title><rect x="444" y="212" width="9" height="15" fill="rgb(219,197,26)"/><text x="447.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.76%)</title><rect x="444" y="228" width="9" height="15" fill="rgb(235,77,53)"/><text x="447.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.43%)</title><rect x="448" y="244" width="5" height="15" fill="rgb(211,133,45)"/><text x="451.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="448" y="260" width="5" height="15" fill="rgb(244,143,26)"/><text x="451.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="448" y="276" width="5" height="15" fill="rgb(248,1,30)"/><text x="451.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="448" y="292" width="5" height="15" fill="rgb(222,221,5)"/><text x="451.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="448" y="308" width="5" height="15" fill="rgb(211,103,39)"/><text x="451.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="448" y="324" width="5" height="15" fill="rgb(209,12,42)"/><text x="451.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.43%)</title><rect x="448" y="340" width="5" height="15" fill="rgb(249,160,6)"/><text x="451.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="448" y="356" width="5" height="15" fill="rgb(229,218,54)"/><text x="451.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="448" y="372" width="5" height="15" fill="rgb(243,155,7)"/><text x="451.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="448" y="388" width="5" height="15" fill="rgb(210,95,53)"/><text x="451.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="448" y="404" width="5" height="15" fill="rgb(234,173,44)"/><text x="451.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="448" y="420" width="5" height="15" fill="rgb(250,179,18)"/><text x="451.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.11%)</title><rect x="452" y="436" width="1" height="15" fill="rgb(235,74,5)"/><text x="455.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="452" width="1" height="15" fill="rgb(225,81,20)"/><text x="455.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="452" y="468" width="1" height="15" fill="rgb(243,60,43)"/><text x="455.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="484" width="1" height="15" fill="rgb(221,24,32)"/><text x="455.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="500" width="1" height="15" fill="rgb(242,11,38)"/><text x="455.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="516" width="1" height="15" fill="rgb(252,157,13)"/><text x="455.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="532" width="1" height="15" fill="rgb(212,19,51)"/><text x="455.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="548" width="1" height="15" fill="rgb(220,105,43)"/><text x="455.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="564" width="1" height="15" fill="rgb(245,65,8)"/><text x="455.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.11%)</title><rect x="452" y="580" width="1" height="15" fill="rgb(213,155,51)"/><text x="455.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="596" width="1" height="15" fill="rgb(238,217,47)"/><text x="455.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="612" width="1" height="15" fill="rgb(241,108,38)"/><text x="455.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="628" width="1" height="15" fill="rgb(218,132,23)"/><text x="455.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="644" width="1" height="15" fill="rgb(244,130,18)"/><text x="455.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="660" width="1" height="15" fill="rgb(235,178,18)"/><text x="455.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.11%)</title><rect x="452" y="676" width="1" height="15" fill="rgb(220,29,45)"/><text x="455.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="692" width="1" height="15" fill="rgb(229,229,41)"/><text x="455.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="708" width="1" height="15" fill="rgb(253,229,6)"/><text x="455.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="724" width="1" height="15" fill="rgb(229,196,20)"/><text x="455.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="740" width="1" height="15" fill="rgb(247,11,27)"/><text x="455.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="756" width="1" height="15" fill="rgb(223,222,3)"/><text x="455.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.11%)</title><rect x="452" y="772" width="1" height="15" fill="rgb(237,15,17)"/><text x="455.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="788" width="1" height="15" fill="rgb(244,18,14)"/><text x="455.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="804" width="1" height="15" fill="rgb(228,167,37)"/><text x="455.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="820" width="1" height="15" fill="rgb(216,219,13)"/><text x="455.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="836" width="1" height="15" fill="rgb(237,2,7)"/><text x="455.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="852" width="1" height="15" fill="rgb(221,23,15)"/><text x="455.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.11%)</title><rect x="452" y="868" width="1" height="15" fill="rgb(215,222,3)"/><text x="455.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="884" width="1" height="15" fill="rgb(253,124,20)"/><text x="455.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="452" y="900" width="1" height="15" fill="rgb(234,80,5)"/><text x="455.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="916" width="1" height="15" fill="rgb(246,5,18)"/><text x="455.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="932" width="1" height="15" fill="rgb(248,72,25)"/><text x="455.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="948" width="1" height="15" fill="rgb(228,67,30)"/><text x="455.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="964" width="1" height="15" fill="rgb(237,128,27)"/><text x="455.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="980" width="1" height="15" fill="rgb(250,206,7)"/><text x="455.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="996" width="1" height="15" fill="rgb(208,141,32)"/><text x="455.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.11%)</title><rect x="452" y="1012" width="1" height="15" fill="rgb(214,151,18)"/><text x="455.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1028" width="1" height="15" fill="rgb(217,169,10)"/><text x="455.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1044" width="1" height="15" fill="rgb(230,56,25)"/><text x="455.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1060" width="1" height="15" fill="rgb(230,58,51)"/><text x="455.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1076" width="1" height="15" fill="rgb(216,24,36)"/><text x="455.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1092" width="1" height="15" fill="rgb(206,180,15)"/><text x="455.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.11%)</title><rect x="452" y="1108" width="1" height="15" fill="rgb(233,147,14)"/><text x="455.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1124" width="1" height="15" fill="rgb(244,83,20)"/><text x="455.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1140" width="1" height="15" fill="rgb(233,14,49)"/><text x="455.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1156" width="1" height="15" fill="rgb(232,86,14)"/><text x="455.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1172" width="1" height="15" fill="rgb(250,178,39)"/><text x="455.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1188" width="1" height="15" fill="rgb(246,216,51)"/><text x="455.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.11%)</title><rect x="452" y="1204" width="1" height="15" fill="rgb(243,130,12)"/><text x="455.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1220" width="1" height="15" fill="rgb(232,171,12)"/><text x="455.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1236" width="1" height="15" fill="rgb(245,79,31)"/><text x="455.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1252" width="1" height="15" fill="rgb(243,224,32)"/><text x="455.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1268" width="1" height="15" fill="rgb(211,93,3)"/><text x="455.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1284" width="1" height="15" fill="rgb(215,188,49)"/><text x="455.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.11%)</title><rect x="452" y="1300" width="1" height="15" fill="rgb(218,159,21)"/><text x="455.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.11%)</title><rect x="452" y="1316" width="1" height="15" fill="rgb(251,154,5)"/><text x="455.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.11%)</title><rect x="452" y="1332" width="1" height="15" fill="rgb(251,170,12)"/><text x="455.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.11%)</title><rect x="452" y="1348" width="1" height="15" fill="rgb(205,181,17)"/><text x="455.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.11%)</title><rect x="452" y="1364" width="1" height="15" fill="rgb(231,97,11)"/><text x="455.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.11%)</title><rect x="452" y="1380" width="1" height="15" fill="rgb(237,39,30)"/><text x="455.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.11%)</title><rect x="452" y="1396" width="1" height="15" fill="rgb(230,103,39)"/><text x="455.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="452" y="1412" width="1" height="15" fill="rgb(206,226,18)"/><text x="455.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="452" y="1428" width="1" height="15" fill="rgb(217,187,43)"/><text x="455.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.11%)</title><rect x="452" y="1444" width="1" height="15" fill="rgb(248,19,34)"/><text x="455.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.11%)</title><rect x="452" y="1460" width="1" height="15" fill="rgb(250,17,54)"/><text x="455.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="452" y="1476" width="1" height="15" fill="rgb(251,148,36)"/><text x="455.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.11%)</title><rect x="452" y="1492" width="1" height="15" fill="rgb(218,87,25)"/><text x="455.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="452" y="1508" width="1" height="15" fill="rgb(212,133,54)"/><text x="455.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.11%)</title><rect x="452" y="1524" width="1" height="15" fill="rgb(215,227,46)"/><text x="455.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="452" y="1540" width="1" height="15" fill="rgb(223,64,29)"/><text x="455.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.11%)</title><rect x="452" y="1556" width="1" height="15" fill="rgb(211,70,39)"/><text x="455.00" y="1566.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="452" y="1572" width="1" height="15" fill="rgb(243,98,44)"/><text x="455.00" y="1582.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.11%)</title><rect x="452" y="1588" width="1" height="15" fill="rgb(253,137,48)"/><text x="455.00" y="1598.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="452" y="1604" width="1" height="15" fill="rgb(231,182,54)"/><text x="455.00" y="1614.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.11%)</title><rect x="452" y="1620" width="1" height="15" fill="rgb(212,62,16)"/><text x="455.00" y="1630.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.11%)</title><rect x="452" y="1636" width="1" height="15" fill="rgb(236,65,27)"/><text x="455.00" y="1646.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.11%)</title><rect x="452" y="1652" width="1" height="15" fill="rgb(218,31,53)"/><text x="455.00" y="1662.50"></text></g><g><title>_optimize_charset (sre_compile.py:337) (1 samples, 0.11%)</title><rect x="452" y="1668" width="1" height="15" fill="rgb(254,88,16)"/><text x="455.00" y="1678.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="453" y="116" width="2" height="15" fill="rgb(233,35,2)"/><text x="456.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="453" y="132" width="2" height="15" fill="rgb(205,90,18)"/><text x="456.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="453" y="148" width="2" height="15" fill="rgb(216,91,32)"/><text x="456.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="453" y="164" width="2" height="15" fill="rgb(247,114,49)"/><text x="456.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="453" y="180" width="2" height="15" fill="rgb(243,50,40)"/><text x="456.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.11%)</title><rect x="453" y="196" width="2" height="15" fill="rgb(253,28,41)"/><text x="456.00" y="206.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:28) (2 samples, 0.22%)</title><rect x="453" y="84" width="3" height="15" fill="rgb(219,206,33)"/><text x="456.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="453" y="100" width="3" height="15" fill="rgb(244,157,22)"/><text x="456.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.11%)</title><rect x="455" y="116" width="1" height="15" fill="rgb(249,2,51)"/><text x="458.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.11%)</title><rect x="455" y="132" width="1" height="15" fill="rgb(214,51,32)"/><text x="458.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.11%)</title><rect x="455" y="148" width="1" height="15" fill="rgb(224,67,41)"/><text x="458.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.11%)</title><rect x="455" y="164" width="1" height="15" fill="rgb(227,208,25)"/><text x="458.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.11%)</title><rect x="455" y="180" width="1" height="15" fill="rgb(241,186,45)"/><text x="458.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:29) (1 samples, 0.11%)</title><rect x="455" y="196" width="1" height="15" fill="rgb(217,32,50)"/><text x="458.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py:76) (1 samples, 0.11%)</title><rect x="455" y="212" width="1" height="15" fill="rgb(228,122,14)"/><text x="458.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.11%)</title><rect x="458" y="180" width="2" height="15" fill="rgb(237,139,53)"/><text x="461.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="460" y="180" width="1" height="15" fill="rgb(241,134,43)"/><text x="463.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="460" y="196" width="1" height="15" fill="rgb(229,58,8)"/><text x="463.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="465" y="212" width="1" height="15" fill="rgb(214,185,38)"/><text x="468.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.11%)</title><rect x="465" y="228" width="1" height="15" fill="rgb(237,146,39)"/><text x="468.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.11%)</title><rect x="465" y="244" width="1" height="15" fill="rgb(228,222,42)"/><text x="468.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.11%)</title><rect x="465" y="260" width="1" height="15" fill="rgb(225,181,33)"/><text x="468.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.11%)</title><rect x="465" y="276" width="1" height="15" fill="rgb(213,13,25)"/><text x="468.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.11%)</title><rect x="465" y="292" width="1" height="15" fill="rgb(216,132,12)"/><text x="468.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.22%)</title><rect x="465" y="196" width="2" height="15" fill="rgb(224,83,48)"/><text x="468.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.11%)</title><rect x="466" y="212" width="1" height="15" fill="rgb(244,77,10)"/><text x="469.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="466" y="228" width="1" height="15" fill="rgb(217,69,18)"/><text x="469.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="466" y="244" width="1" height="15" fill="rgb(248,140,31)"/><text x="469.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="466" y="260" width="1" height="15" fill="rgb(250,111,21)"/><text x="469.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:298) (1 samples, 0.11%)</title><rect x="466" y="276" width="1" height="15" fill="rgb(245,126,5)"/><text x="469.00" y="286.50"></text></g><g><title>0x7f670f327979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="469" y="324" width="1" height="15" fill="rgb(242,80,53)"/><text x="472.00" y="334.50"></text></g><g><title>0x7f670f3279cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="470" y="324" width="1" height="15" fill="rgb(243,44,3)"/><text x="473.00" y="334.50"></text></g><g><title>0x7f670f327a21 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="471" y="324" width="4" height="15" fill="rgb(207,0,29)"/><text x="474.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (7 samples, 0.76%)</title><rect x="467" y="308" width="9" height="15" fill="rgb(227,179,44)"/><text x="470.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="475" y="324" width="1" height="15" fill="rgb(232,71,43)"/><text x="478.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 0.98%)</title><rect x="467" y="228" width="12" height="15" fill="rgb(231,6,12)"/><text x="470.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.98%)</title><rect x="467" y="244" width="12" height="15" fill="rgb(220,136,47)"/><text x="470.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 0.98%)</title><rect x="467" y="260" width="12" height="15" fill="rgb(207,45,48)"/><text x="470.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 0.98%)</title><rect x="467" y="276" width="12" height="15" fill="rgb(253,162,38)"/><text x="470.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 0.98%)</title><rect x="467" y="292" width="12" height="15" fill="rgb(243,138,18)"/><text x="470.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (2 samples, 0.22%)</title><rect x="476" y="308" width="3" height="15" fill="rgb(214,84,31)"/><text x="479.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (2 samples, 0.22%)</title><rect x="476" y="324" width="3" height="15" fill="rgb(215,149,45)"/><text x="479.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="482" y="292" width="1" height="15" fill="rgb(228,184,45)"/><text x="485.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.11%)</title><rect x="482" y="308" width="1" height="15" fill="rgb(207,197,51)"/><text x="485.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(254,0,35)"/><text x="488.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(220,3,25)"/><text x="488.00" y="366.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="485" y="372" width="2" height="15" fill="rgb(219,17,4)"/><text x="488.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="485" y="308" width="3" height="15" fill="rgb(243,228,14)"/><text x="488.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="485" y="324" width="3" height="15" fill="rgb(221,157,39)"/><text x="488.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="487" y="340" width="1" height="15" fill="rgb(252,174,30)"/><text x="490.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="487" y="356" width="1" height="15" fill="rgb(250,26,38)"/><text x="490.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="487" y="372" width="1" height="15" fill="rgb(210,107,15)"/><text x="490.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="487" y="388" width="1" height="15" fill="rgb(226,201,29)"/><text x="490.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="488" y="324" width="1" height="15" fill="rgb(224,8,17)"/><text x="491.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="489" y="356" width="1" height="15" fill="rgb(228,205,20)"/><text x="492.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="489" y="372" width="1" height="15" fill="rgb(212,223,24)"/><text x="492.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="489" y="388" width="1" height="15" fill="rgb(247,96,27)"/><text x="492.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="489" y="404" width="1" height="15" fill="rgb(235,147,20)"/><text x="492.00" y="414.50"></text></g><g><title>0x7f670f1c5d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="489" y="420" width="1" height="15" fill="rgb(230,69,5)"/><text x="492.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="490" y="356" width="2" height="15" fill="rgb(237,102,31)"/><text x="493.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="490" y="372" width="2" height="15" fill="rgb(237,99,2)"/><text x="493.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.11%)</title><rect x="490" y="388" width="2" height="15" fill="rgb(241,215,7)"/><text x="493.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="492" y="388" width="1" height="15" fill="rgb(229,177,23)"/><text x="495.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (21 samples, 2.28%)</title><rect x="467" y="196" width="27" height="15" fill="rgb(247,61,0)"/><text x="470.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 2.28%)</title><rect x="467" y="212" width="27" height="15" fill="rgb(224,204,27)"/><text x="470.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (12 samples, 1.30%)</title><rect x="479" y="228" width="15" height="15" fill="rgb(240,163,42)"/><text x="482.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 1.20%)</title><rect x="480" y="244" width="14" height="15" fill="rgb(237,26,20)"/><text x="483.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.20%)</title><rect x="480" y="260" width="14" height="15" fill="rgb(216,219,35)"/><text x="483.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (11 samples, 1.20%)</title><rect x="480" y="276" width="14" height="15" fill="rgb(215,128,49)"/><text x="483.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 0.98%)</title><rect x="483" y="292" width="11" height="15" fill="rgb(212,26,48)"/><text x="486.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.54%)</title><rect x="488" y="308" width="6" height="15" fill="rgb(224,115,9)"/><text x="491.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.43%)</title><rect x="489" y="324" width="5" height="15" fill="rgb(223,225,6)"/><text x="492.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.43%)</title><rect x="489" y="340" width="5" height="15" fill="rgb(220,89,37)"/><text x="492.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.22%)</title><rect x="492" y="356" width="2" height="15" fill="rgb(206,206,42)"/><text x="495.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.22%)</title><rect x="492" y="372" width="2" height="15" fill="rgb(234,85,45)"/><text x="495.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="493" y="388" width="1" height="15" fill="rgb(252,63,42)"/><text x="496.00" y="398.50"></text></g><g><title>0x7f66cfd03422 (?) (1 samples, 0.11%)</title><rect x="494" y="244" width="2" height="15" fill="rgb(242,76,3)"/><text x="497.00" y="254.50"></text></g><g><title>0x7f66cfd0989e (?) (1 samples, 0.11%)</title><rect x="494" y="260" width="2" height="15" fill="rgb(233,212,18)"/><text x="497.00" y="270.50"></text></g><g><title>0x7f66cfd0974f (?) (1 samples, 0.11%)</title><rect x="494" y="276" width="2" height="15" fill="rgb(217,17,33)"/><text x="497.00" y="286.50"></text></g><g><title>0x7f66cfd0fa3a (?) (1 samples, 0.11%)</title><rect x="494" y="292" width="2" height="15" fill="rgb(218,189,20)"/><text x="497.00" y="302.50"></text></g><g><title>0x7f66d916bab9 (?) (1 samples, 0.11%)</title><rect x="494" y="308" width="2" height="15" fill="rgb(211,108,16)"/><text x="497.00" y="318.50"></text></g><g><title>0x7f66d916cea0 (?) (1 samples, 0.11%)</title><rect x="494" y="324" width="2" height="15" fill="rgb(251,170,21)"/><text x="497.00" y="334.50"></text></g><g><title>0x7f66d916cea9 (libgomp.so.1.0.0) (8 samples, 0.87%)</title><rect x="496" y="468" width="10" height="15" fill="rgb(254,210,11)"/><text x="499.00" y="478.50"></text></g><g><title>0x7f66d916ceab (libgomp.so.1.0.0) (7 samples, 0.76%)</title><rect x="506" y="468" width="9" height="15" fill="rgb(246,157,13)"/><text x="509.00" y="478.50"></text></g><g><title>0x7f66d916bab9 (libgomp.so.1.0.0) (23 samples, 2.50%)</title><rect x="496" y="452" width="29" height="15" fill="rgb(248,25,54)"/><text x="499.00" y="462.50">0x..</text></g><g><title>0x7f66d916cead (libgomp.so.1.0.0) (8 samples, 0.87%)</title><rect x="515" y="468" width="10" height="15" fill="rgb(233,213,13)"/><text x="518.00" y="478.50"></text></g><g><title>0x7f66d916ccf9 (libgomp.so.1.0.0) (5 samples, 0.54%)</title><rect x="525" y="484" width="7" height="15" fill="rgb(210,210,16)"/><text x="528.00" y="494.50"></text></g><g><title>0x7f66d916ccfb (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="532" y="484" width="2" height="15" fill="rgb(238,57,12)"/><text x="535.00" y="494.50"></text></g><g><title>0x7f66d916adaa (libgomp.so.1.0.0) (8 samples, 0.87%)</title><rect x="525" y="468" width="10" height="15" fill="rgb(213,14,44)"/><text x="528.00" y="478.50"></text></g><g><title>0x7f66d916ccfd (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="534" y="484" width="1" height="15" fill="rgb(252,143,9)"/><text x="537.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:423) (1 samples, 0.11%)</title><rect x="535" y="468" width="2" height="15" fill="rgb(246,21,0)"/><text x="538.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (1 samples, 0.11%)</title><rect x="535" y="484" width="2" height="15" fill="rgb(207,160,22)"/><text x="538.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (1 samples, 0.11%)</title><rect x="535" y="500" width="2" height="15" fill="rgb(253,169,25)"/><text x="538.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.11%)</title><rect x="535" y="516" width="2" height="15" fill="rgb(237,132,6)"/><text x="538.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.11%)</title><rect x="535" y="532" width="2" height="15" fill="rgb(222,180,4)"/><text x="538.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.11%)</title><rect x="535" y="548" width="2" height="15" fill="rgb(248,189,20)"/><text x="538.00" y="558.50"></text></g><g><title>0x7f670f1a5d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="535" y="564" width="2" height="15" fill="rgb(229,111,37)"/><text x="538.00" y="574.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (34 samples, 3.70%)</title><rect x="494" y="196" width="44" height="15" fill="rgb(224,178,22)"/><text x="497.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 3.70%)</title><rect x="494" y="212" width="44" height="15" fill="rgb(238,143,40)"/><text x="497.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (34 samples, 3.70%)</title><rect x="494" y="228" width="44" height="15" fill="rgb(232,187,42)"/><text x="497.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 3.59%)</title><rect x="496" y="244" width="42" height="15" fill="rgb(223,117,42)"/><text x="499.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 3.59%)</title><rect x="496" y="260" width="42" height="15" fill="rgb(218,151,31)"/><text x="499.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 3.59%)</title><rect x="496" y="276" width="42" height="15" fill="rgb(237,81,29)"/><text x="499.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 3.59%)</title><rect x="496" y="292" width="42" height="15" fill="rgb(231,220,40)"/><text x="499.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 3.59%)</title><rect x="496" y="308" width="42" height="15" fill="rgb(253,98,7)"/><text x="499.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 3.59%)</title><rect x="496" y="324" width="42" height="15" fill="rgb(225,30,38)"/><text x="499.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 3.59%)</title><rect x="496" y="340" width="42" height="15" fill="rgb(244,78,42)"/><text x="499.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 3.59%)</title><rect x="496" y="356" width="42" height="15" fill="rgb(205,228,18)"/><text x="499.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 3.59%)</title><rect x="496" y="372" width="42" height="15" fill="rgb(208,116,20)"/><text x="499.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 3.59%)</title><rect x="496" y="388" width="42" height="15" fill="rgb(246,76,18)"/><text x="499.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 3.59%)</title><rect x="496" y="404" width="42" height="15" fill="rgb(235,187,5)"/><text x="499.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (33 samples, 3.59%)</title><rect x="496" y="420" width="42" height="15" fill="rgb(244,170,42)"/><text x="499.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (33 samples, 3.59%)</title><rect x="496" y="436" width="42" height="15" fill="rgb(227,95,34)"/><text x="499.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (10 samples, 1.09%)</title><rect x="525" y="452" width="13" height="15" fill="rgb(225,2,12)"/><text x="528.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:424) (1 samples, 0.11%)</title><rect x="537" y="468" width="1" height="15" fill="rgb(250,13,46)"/><text x="540.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h:595) (1 samples, 0.11%)</title><rect x="537" y="484" width="1" height="15" fill="rgb(243,134,48)"/><text x="540.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h:1084) (1 samples, 0.11%)</title><rect x="537" y="500" width="1" height="15" fill="rgb(242,148,46)"/><text x="540.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h:281) (1 samples, 0.11%)</title><rect x="537" y="516" width="1" height="15" fill="rgb(243,42,29)"/><text x="540.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h:266) (1 samples, 0.11%)</title><rect x="537" y="532" width="1" height="15" fill="rgb(224,137,42)"/><text x="540.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h:169) (1 samples, 0.11%)</title><rect x="537" y="548" width="1" height="15" fill="rgb(207,176,51)"/><text x="540.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="537" y="564" width="1" height="15" fill="rgb(225,75,7)"/><text x="540.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="537" y="580" width="1" height="15" fill="rgb(248,107,40)"/><text x="540.00" y="590.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="539" y="244" width="2" height="15" fill="rgb(250,1,7)"/><text x="542.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="539" y="260" width="2" height="15" fill="rgb(211,171,51)"/><text x="542.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:54) (1 samples, 0.11%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(250,68,14)"/><text x="542.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.22%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(231,134,50)"/><text x="544.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (2 samples, 0.22%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(224,197,21)"/><text x="544.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.33%)</title><rect x="541" y="292" width="3" height="15" fill="rgb(208,166,24)"/><text x="544.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="543" y="308" width="1" height="15" fill="rgb(212,168,23)"/><text x="546.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3069) (1 samples, 0.11%)</title><rect x="543" y="324" width="1" height="15" fill="rgb(251,206,30)"/><text x="546.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(253,67,39)"/><text x="547.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.11%)</title><rect x="544" y="308" width="2" height="15" fill="rgb(215,206,10)"/><text x="547.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.54%)</title><rect x="541" y="244" width="6" height="15" fill="rgb(215,0,54)"/><text x="544.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.54%)</title><rect x="541" y="260" width="6" height="15" fill="rgb(218,222,35)"/><text x="544.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.54%)</title><rect x="541" y="276" width="6" height="15" fill="rgb(249,6,8)"/><text x="544.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="546" y="292" width="1" height="15" fill="rgb(211,169,27)"/><text x="549.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:763) (1 samples, 0.11%)</title><rect x="546" y="308" width="1" height="15" fill="rgb(227,57,37)"/><text x="549.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="547" y="260" width="1" height="15" fill="rgb(231,164,27)"/><text x="550.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 0.87%)</title><rect x="539" y="228" width="10" height="15" fill="rgb(234,35,23)"/><text x="542.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.22%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(211,93,35)"/><text x="550.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.11%)</title><rect x="548" y="260" width="1" height="15" fill="rgb(226,5,4)"/><text x="551.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="549" y="292" width="2" height="15" fill="rgb(229,130,0)"/><text x="552.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="549" y="308" width="2" height="15" fill="rgb(223,196,32)"/><text x="552.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="549" y="324" width="2" height="15" fill="rgb(249,117,35)"/><text x="552.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1057) (1 samples, 0.11%)</title><rect x="549" y="340" width="2" height="15" fill="rgb(254,110,32)"/><text x="552.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.22%)</title><rect x="551" y="340" width="2" height="15" fill="rgb(209,82,26)"/><text x="554.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="553" y="340" width="2" height="15" fill="rgb(223,55,54)"/><text x="556.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (14 samples, 1.52%)</title><rect x="538" y="196" width="18" height="15" fill="rgb(218,42,35)"/><text x="541.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (13 samples, 1.41%)</title><rect x="539" y="212" width="17" height="15" fill="rgb(235,217,10)"/><text x="542.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.54%)</title><rect x="549" y="228" width="7" height="15" fill="rgb(227,130,44)"/><text x="552.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.54%)</title><rect x="549" y="244" width="7" height="15" fill="rgb(206,59,25)"/><text x="552.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.54%)</title><rect x="549" y="260" width="7" height="15" fill="rgb(238,179,23)"/><text x="552.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.54%)</title><rect x="549" y="276" width="7" height="15" fill="rgb(210,152,15)"/><text x="552.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.43%)</title><rect x="551" y="292" width="5" height="15" fill="rgb(222,29,52)"/><text x="554.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.43%)</title><rect x="551" y="308" width="5" height="15" fill="rgb(221,205,35)"/><text x="554.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.43%)</title><rect x="551" y="324" width="5" height="15" fill="rgb(253,4,31)"/><text x="554.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="555" y="340" width="1" height="15" fill="rgb(229,56,25)"/><text x="558.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.11%)</title><rect x="555" y="356" width="1" height="15" fill="rgb(230,200,21)"/><text x="558.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="558" y="324" width="2" height="15" fill="rgb(220,133,14)"/><text x="561.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="558" y="340" width="2" height="15" fill="rgb(226,37,38)"/><text x="561.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="558" y="356" width="2" height="15" fill="rgb(240,177,28)"/><text x="561.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="560" y="388" width="1" height="15" fill="rgb(211,60,35)"/><text x="563.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="561" y="420" width="1" height="15" fill="rgb(230,70,2)"/><text x="564.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.33%)</title><rect x="560" y="324" width="4" height="15" fill="rgb(219,227,39)"/><text x="563.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="560" y="340" width="4" height="15" fill="rgb(228,14,43)"/><text x="563.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="560" y="356" width="4" height="15" fill="rgb(215,62,11)"/><text x="563.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="560" y="372" width="4" height="15" fill="rgb(215,107,53)"/><text x="563.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="561" y="388" width="3" height="15" fill="rgb(240,23,46)"/><text x="564.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="561" y="404" width="3" height="15" fill="rgb(221,97,13)"/><text x="564.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="562" y="420" width="2" height="15" fill="rgb(206,4,24)"/><text x="565.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="562" y="436" width="2" height="15" fill="rgb(212,154,50)"/><text x="565.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="562" y="452" width="2" height="15" fill="rgb(226,2,46)"/><text x="565.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="562" y="468" width="2" height="15" fill="rgb(247,221,48)"/><text x="565.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="562" y="484" width="2" height="15" fill="rgb(241,186,2)"/><text x="565.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.11%)</title><rect x="562" y="500" width="2" height="15" fill="rgb(244,203,20)"/><text x="565.00" y="510.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="566" y="356" width="1" height="15" fill="rgb(212,174,19)"/><text x="569.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="566" y="372" width="1" height="15" fill="rgb(226,142,52)"/><text x="569.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="566" y="388" width="1" height="15" fill="rgb(243,33,30)"/><text x="569.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="566" y="404" width="1" height="15" fill="rgb(237,29,26)"/><text x="569.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="566" y="420" width="1" height="15" fill="rgb(213,52,23)"/><text x="569.00" y="430.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (2 samples, 0.22%)</title><rect x="567" y="420" width="3" height="15" fill="rgb(210,108,32)"/><text x="570.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.22%)</title><rect x="567" y="436" width="3" height="15" fill="rgb(237,8,8)"/><text x="570.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="567" y="452" width="3" height="15" fill="rgb(214,83,51)"/><text x="570.00" y="462.50"></text></g><g><title>0x7f670f1a6d0d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="569" y="468" width="1" height="15" fill="rgb(223,78,7)"/><text x="572.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="567" y="404" width="4" height="15" fill="rgb(240,213,37)"/><text x="570.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="570" y="420" width="1" height="15" fill="rgb(247,71,19)"/><text x="573.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.11%)</title><rect x="570" y="436" width="1" height="15" fill="rgb(205,136,50)"/><text x="573.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.87%)</title><rect x="567" y="356" width="11" height="15" fill="rgb(225,190,17)"/><text x="570.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.87%)</title><rect x="567" y="372" width="11" height="15" fill="rgb(233,131,24)"/><text x="570.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.87%)</title><rect x="567" y="388" width="11" height="15" fill="rgb(236,54,26)"/><text x="570.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.54%)</title><rect x="571" y="404" width="7" height="15" fill="rgb(215,228,17)"/><text x="574.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (5 samples, 0.54%)</title><rect x="571" y="420" width="7" height="15" fill="rgb(228,78,50)"/><text x="574.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (92 samples, 10.00%)</title><rect x="461" y="180" width="118" height="15" fill="rgb(229,1,22)"/><text x="464.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (18 samples, 1.96%)</title><rect x="556" y="196" width="23" height="15" fill="rgb(243,93,35)"/><text x="559.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (18 samples, 1.96%)</title><rect x="556" y="212" width="23" height="15" fill="rgb(244,104,42)"/><text x="559.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (18 samples, 1.96%)</title><rect x="556" y="228" width="23" height="15" fill="rgb(254,33,47)"/><text x="559.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 1.96%)</title><rect x="556" y="244" width="23" height="15" fill="rgb(250,24,37)"/><text x="559.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (17 samples, 1.85%)</title><rect x="557" y="260" width="22" height="15" fill="rgb(250,225,18)"/><text x="560.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (16 samples, 1.74%)</title><rect x="558" y="276" width="21" height="15" fill="rgb(230,0,28)"/><text x="561.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (16 samples, 1.74%)</title><rect x="558" y="292" width="21" height="15" fill="rgb(237,12,33)"/><text x="561.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 1.74%)</title><rect x="558" y="308" width="21" height="15" fill="rgb(226,107,35)"/><text x="561.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (12 samples, 1.30%)</title><rect x="564" y="324" width="15" height="15" fill="rgb(216,215,35)"/><text x="567.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (12 samples, 1.30%)</title><rect x="564" y="340" width="15" height="15" fill="rgb(213,25,13)"/><text x="567.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="578" y="356" width="1" height="15" fill="rgb(253,66,14)"/><text x="581.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.11%)</title><rect x="578" y="372" width="1" height="15" fill="rgb(231,222,16)"/><text x="581.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.11%)</title><rect x="578" y="388" width="1" height="15" fill="rgb(219,155,22)"/><text x="581.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="579" y="180" width="1" height="15" fill="rgb(251,15,37)"/><text x="582.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.22%)</title><rect x="580" y="180" width="3" height="15" fill="rgb(253,136,38)"/><text x="583.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (100 samples, 10.87%)</title><rect x="456" y="100" width="128" height="15" fill="rgb(220,52,28)"/><text x="459.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 10.87%)</title><rect x="456" y="116" width="128" height="15" fill="rgb(250,123,41)"/><text x="459.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (100 samples, 10.87%)</title><rect x="456" y="132" width="128" height="15" fill="rgb(211,98,43)"/><text x="459.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (100 samples, 10.87%)</title><rect x="456" y="148" width="128" height="15" fill="rgb(230,125,34)"/><text x="459.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (100 samples, 10.87%)</title><rect x="456" y="164" width="128" height="15" fill="rgb(235,75,44)"/><text x="459.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="583" y="180" width="1" height="15" fill="rgb(214,40,49)"/><text x="586.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.11%)</title><rect x="588" y="180" width="1" height="15" fill="rgb(217,5,2)"/><text x="591.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (11 samples, 1.20%)</title><rect x="589" y="180" width="14" height="15" fill="rgb(244,223,38)"/><text x="592.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.54%)</title><rect x="597" y="196" width="6" height="15" fill="rgb(215,119,21)"/><text x="600.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="608" y="260" width="2" height="15" fill="rgb(237,2,23)"/><text x="611.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.11%)</title><rect x="608" y="276" width="2" height="15" fill="rgb(228,81,13)"/><text x="611.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (1 samples, 0.11%)</title><rect x="608" y="292" width="2" height="15" fill="rgb(240,164,54)"/><text x="611.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.11%)</title><rect x="608" y="308" width="2" height="15" fill="rgb(235,94,31)"/><text x="611.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.22%)</title><rect x="608" y="212" width="3" height="15" fill="rgb(243,204,29)"/><text x="611.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.22%)</title><rect x="608" y="228" width="3" height="15" fill="rgb(216,35,33)"/><text x="611.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.22%)</title><rect x="608" y="244" width="3" height="15" fill="rgb(253,105,48)"/><text x="611.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="610" y="260" width="1" height="15" fill="rgb(239,158,13)"/><text x="613.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="610" y="276" width="1" height="15" fill="rgb(245,120,18)"/><text x="613.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.11%)</title><rect x="610" y="292" width="1" height="15" fill="rgb(209,39,13)"/><text x="613.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="610" y="308" width="1" height="15" fill="rgb(238,62,8)"/><text x="613.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.11%)</title><rect x="610" y="324" width="1" height="15" fill="rgb(254,54,5)"/><text x="613.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.11%)</title><rect x="611" y="244" width="1" height="15" fill="rgb(237,29,36)"/><text x="614.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 0.65%)</title><rect x="606" y="196" width="8" height="15" fill="rgb(208,126,35)"/><text x="609.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.22%)</title><rect x="611" y="212" width="3" height="15" fill="rgb(234,29,5)"/><text x="614.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.22%)</title><rect x="611" y="228" width="3" height="15" fill="rgb(241,56,4)"/><text x="614.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="612" y="244" width="2" height="15" fill="rgb(213,67,14)"/><text x="615.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="612" y="260" width="2" height="15" fill="rgb(227,43,28)"/><text x="615.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="612" y="276" width="2" height="15" fill="rgb(216,212,36)"/><text x="615.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:832) (1 samples, 0.11%)</title><rect x="612" y="292" width="2" height="15" fill="rgb(236,174,52)"/><text x="615.00" y="302.50"></text></g><g><title>scalar_value (scalarapi.c:39) (1 samples, 0.11%)</title><rect x="612" y="308" width="2" height="15" fill="rgb(253,135,19)"/><text x="615.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (1 samples, 0.11%)</title><rect x="614" y="196" width="1" height="15" fill="rgb(228,39,38)"/><text x="617.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="616" y="260" width="1" height="15" fill="rgb(245,167,25)"/><text x="619.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.11%)</title><rect x="616" y="276" width="1" height="15" fill="rgb(232,67,12)"/><text x="619.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="617" y="260" width="2" height="15" fill="rgb(208,24,23)"/><text x="620.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.11%)</title><rect x="617" y="276" width="2" height="15" fill="rgb(237,35,38)"/><text x="620.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="619" y="276" width="1" height="15" fill="rgb(238,158,0)"/><text x="622.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.11%)</title><rect x="619" y="292" width="1" height="15" fill="rgb(220,117,43)"/><text x="622.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="620" y="308" width="1" height="15" fill="rgb(217,81,15)"/><text x="623.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.11%)</title><rect x="620" y="324" width="1" height="15" fill="rgb(251,140,6)"/><text x="623.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.22%)</title><rect x="620" y="276" width="3" height="15" fill="rgb(240,204,32)"/><text x="623.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.22%)</title><rect x="620" y="292" width="3" height="15" fill="rgb(244,33,53)"/><text x="623.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="621" y="308" width="2" height="15" fill="rgb(234,23,29)"/><text x="624.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="621" y="324" width="2" height="15" fill="rgb(207,25,42)"/><text x="624.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.11%)</title><rect x="621" y="340" width="2" height="15" fill="rgb(247,191,36)"/><text x="624.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.11%)</title><rect x="621" y="356" width="2" height="15" fill="rgb(218,3,39)"/><text x="624.00" y="366.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.11%)</title><rect x="621" y="372" width="2" height="15" fill="rgb(226,207,34)"/><text x="624.00" y="382.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.11%)</title><rect x="621" y="388" width="2" height="15" fill="rgb(253,3,49)"/><text x="624.00" y="398.50"></text></g><g><title>0x7f670f327960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="625" y="324" width="1" height="15" fill="rgb(252,206,49)"/><text x="628.00" y="334.50"></text></g><g><title>0x7f670f327997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="324" width="2" height="15" fill="rgb(205,182,4)"/><text x="629.00" y="334.50"></text></g><g><title>0x7f670f3279cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="628" y="324" width="1" height="15" fill="rgb(252,30,9)"/><text x="631.00" y="334.50"></text></g><g><title>0x7f670f3279e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="629" y="324" width="1" height="15" fill="rgb(238,205,42)"/><text x="632.00" y="334.50"></text></g><g><title>0x7f670f327a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="630" y="324" width="2" height="15" fill="rgb(243,75,20)"/><text x="633.00" y="334.50"></text></g><g><title>0x7f670f327a1d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="632" y="324" width="2" height="15" fill="rgb(206,124,9)"/><text x="635.00" y="334.50"></text></g><g><title>0x7f670f327a21 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="634" y="324" width="5" height="15" fill="rgb(240,58,36)"/><text x="637.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (14 samples, 1.52%)</title><rect x="623" y="308" width="18" height="15" fill="rgb(244,127,2)"/><text x="626.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="639" y="324" width="2" height="15" fill="rgb(219,207,3)"/><text x="642.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.63%)</title><rect x="623" y="292" width="19" height="15" fill="rgb(226,86,14)"/><text x="626.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.11%)</title><rect x="641" y="308" width="1" height="15" fill="rgb(253,20,51)"/><text x="644.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="641" y="324" width="1" height="15" fill="rgb(218,16,8)"/><text x="644.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 2.28%)</title><rect x="616" y="244" width="27" height="15" fill="rgb(226,203,29)"/><text x="619.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 2.07%)</title><rect x="619" y="260" width="24" height="15" fill="rgb(233,94,7)"/><text x="622.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 1.74%)</title><rect x="623" y="276" width="20" height="15" fill="rgb(235,194,13)"/><text x="626.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.11%)</title><rect x="642" y="292" width="1" height="15" fill="rgb(253,97,41)"/><text x="645.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="642" y="308" width="1" height="15" fill="rgb(250,60,27)"/><text x="645.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (23 samples, 2.50%)</title><rect x="615" y="228" width="29" height="15" fill="rgb(231,117,20)"/><text x="618.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.11%)</title><rect x="643" y="244" width="1" height="15" fill="rgb(231,86,53)"/><text x="646.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.11%)</title><rect x="643" y="260" width="1" height="15" fill="rgb(214,183,52)"/><text x="646.00" y="270.50"></text></g><g><title>0x7f670f1c6124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="643" y="276" width="1" height="15" fill="rgb(217,31,24)"/><text x="646.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.11%)</title><rect x="646" y="276" width="1" height="15" fill="rgb(252,206,36)"/><text x="649.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="647" y="308" width="1" height="15" fill="rgb(251,219,38)"/><text x="650.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.22%)</title><rect x="647" y="292" width="3" height="15" fill="rgb(225,137,4)"/><text x="650.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.11%)</title><rect x="648" y="308" width="2" height="15" fill="rgb(220,65,52)"/><text x="651.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="650" y="324" width="1" height="15" fill="rgb(238,63,41)"/><text x="653.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:414) (1 samples, 0.11%)</title><rect x="651" y="372" width="1" height="15" fill="rgb(219,167,6)"/><text x="654.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.11%)</title><rect x="652" y="388" width="1" height="15" fill="rgb(254,83,54)"/><text x="655.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.11%)</title><rect x="652" y="404" width="1" height="15" fill="rgb(241,7,30)"/><text x="655.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.33%)</title><rect x="651" y="356" width="4" height="15" fill="rgb(222,211,37)"/><text x="654.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="652" y="372" width="3" height="15" fill="rgb(236,110,11)"/><text x="655.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="653" y="388" width="2" height="15" fill="rgb(245,19,16)"/><text x="656.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.11%)</title><rect x="653" y="404" width="2" height="15" fill="rgb(218,174,22)"/><text x="656.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.11%)</title><rect x="653" y="420" width="2" height="15" fill="rgb(205,90,30)"/><text x="656.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.11%)</title><rect x="655" y="372" width="1" height="15" fill="rgb(210,130,19)"/><text x="658.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1448) (1 samples, 0.11%)</title><rect x="655" y="388" width="1" height="15" fill="rgb(241,153,7)"/><text x="658.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="656" y="372" width="1" height="15" fill="rgb(235,135,15)"/><text x="659.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="657" y="388" width="2" height="15" fill="rgb(212,136,14)"/><text x="660.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="659" y="388" width="1" height="15" fill="rgb(230,163,27)"/><text x="662.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="661" y="404" width="1" height="15" fill="rgb(209,109,49)"/><text x="664.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="662" y="404" width="2" height="15" fill="rgb(207,5,14)"/><text x="665.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.43%)</title><rect x="660" y="388" width="5" height="15" fill="rgb(239,153,12)"/><text x="663.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="664" y="404" width="1" height="15" fill="rgb(212,33,6)"/><text x="667.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="665" y="388" width="1" height="15" fill="rgb(206,221,4)"/><text x="668.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="666" y="388" width="1" height="15" fill="rgb(206,88,1)"/><text x="669.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:195) (1 samples, 0.11%)</title><rect x="667" y="388" width="2" height="15" fill="rgb(208,37,31)"/><text x="670.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="669" y="388" width="1" height="15" fill="rgb(250,218,2)"/><text x="672.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.11%)</title><rect x="670" y="388" width="1" height="15" fill="rgb(251,25,41)"/><text x="673.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.11%)</title><rect x="670" y="404" width="1" height="15" fill="rgb(205,28,5)"/><text x="673.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 1.52%)</title><rect x="655" y="356" width="18" height="15" fill="rgb(205,224,17)"/><text x="658.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 1.30%)</title><rect x="657" y="372" width="16" height="15" fill="rgb(223,187,49)"/><text x="660.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="671" y="388" width="2" height="15" fill="rgb(221,170,38)"/><text x="674.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (46 samples, 5.00%)</title><rect x="615" y="196" width="59" height="15" fill="rgb(251,204,21)"/><text x="618.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (46 samples, 5.00%)</title><rect x="615" y="212" width="59" height="15" fill="rgb(223,122,12)"/><text x="618.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (23 samples, 2.50%)</title><rect x="644" y="228" width="30" height="15" fill="rgb(215,0,43)"/><text x="647.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (23 samples, 2.50%)</title><rect x="644" y="244" width="30" height="15" fill="rgb(222,122,9)"/><text x="647.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.50%)</title><rect x="644" y="260" width="30" height="15" fill="rgb(205,49,18)"/><text x="647.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (21 samples, 2.28%)</title><rect x="647" y="276" width="27" height="15" fill="rgb(207,211,41)"/><text x="650.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (19 samples, 2.07%)</title><rect x="650" y="292" width="24" height="15" fill="rgb(213,61,24)"/><text x="653.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (19 samples, 2.07%)</title><rect x="650" y="308" width="24" height="15" fill="rgb(209,134,53)"/><text x="653.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (18 samples, 1.96%)</title><rect x="651" y="324" width="23" height="15" fill="rgb(230,225,39)"/><text x="654.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (18 samples, 1.96%)</title><rect x="651" y="340" width="23" height="15" fill="rgb(217,59,42)"/><text x="654.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="673" y="356" width="1" height="15" fill="rgb(240,102,54)"/><text x="676.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="673" y="372" width="1" height="15" fill="rgb(243,218,22)"/><text x="676.00" y="382.50"></text></g><g><title>0x7f670f1a5e64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="673" y="388" width="1" height="15" fill="rgb(227,83,5)"/><text x="676.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.11%)</title><rect x="674" y="196" width="1" height="15" fill="rgb(218,151,24)"/><text x="677.00" y="206.50"></text></g><g><title>0x7f66d916cea0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="675" y="468" width="1" height="15" fill="rgb(241,216,18)"/><text x="678.00" y="478.50"></text></g><g><title>0x7f66d916cea9 (libgomp.so.1.0.0) (13 samples, 1.41%)</title><rect x="676" y="468" width="17" height="15" fill="rgb(220,217,45)"/><text x="679.00" y="478.50"></text></g><g><title>0x7f66d916ceab (libgomp.so.1.0.0) (8 samples, 0.87%)</title><rect x="693" y="468" width="10" height="15" fill="rgb(248,171,36)"/><text x="696.00" y="478.50"></text></g><g><title>0x7f66d916bab9 (libgomp.so.1.0.0) (29 samples, 3.15%)</title><rect x="675" y="452" width="37" height="15" fill="rgb(240,210,54)"/><text x="678.00" y="462.50">0x7..</text></g><g><title>0x7f66d916cead (libgomp.so.1.0.0) (7 samples, 0.76%)</title><rect x="703" y="468" width="9" height="15" fill="rgb(241,190,16)"/><text x="706.00" y="478.50"></text></g><g><title>0x7f66d916ccf0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="712" y="484" width="3" height="15" fill="rgb(216,25,2)"/><text x="715.00" y="494.50"></text></g><g><title>0x7f66d916ccf9 (libgomp.so.1.0.0) (6 samples, 0.65%)</title><rect x="715" y="484" width="8" height="15" fill="rgb(243,104,29)"/><text x="718.00" y="494.50"></text></g><g><title>0x7f66d916adaa (libgomp.so.1.0.0) (9 samples, 0.98%)</title><rect x="712" y="468" width="12" height="15" fill="rgb(213,123,41)"/><text x="715.00" y="478.50"></text></g><g><title>0x7f66d916ccfd (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="723" y="484" width="1" height="15" fill="rgb(210,41,24)"/><text x="726.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (39 samples, 4.24%)</title><rect x="675" y="196" width="50" height="15" fill="rgb(229,128,39)"/><text x="678.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (39 samples, 4.24%)</title><rect x="675" y="212" width="50" height="15" fill="rgb(217,219,11)"/><text x="678.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (39 samples, 4.24%)</title><rect x="675" y="228" width="50" height="15" fill="rgb(253,204,18)"/><text x="678.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (39 samples, 4.24%)</title><rect x="675" y="244" width="50" height="15" fill="rgb(238,65,34)"/><text x="678.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (39 samples, 4.24%)</title><rect x="675" y="260" width="50" height="15" fill="rgb(226,136,25)"/><text x="678.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (39 samples, 4.24%)</title><rect x="675" y="276" width="50" height="15" fill="rgb(241,195,2)"/><text x="678.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (39 samples, 4.24%)</title><rect x="675" y="292" width="50" height="15" fill="rgb(213,12,42)"/><text x="678.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (39 samples, 4.24%)</title><rect x="675" y="308" width="50" height="15" fill="rgb(232,202,41)"/><text x="678.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (39 samples, 4.24%)</title><rect x="675" y="324" width="50" height="15" fill="rgb(208,100,43)"/><text x="678.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (39 samples, 4.24%)</title><rect x="675" y="340" width="50" height="15" fill="rgb(212,211,0)"/><text x="678.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (39 samples, 4.24%)</title><rect x="675" y="356" width="50" height="15" fill="rgb(233,29,10)"/><text x="678.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (39 samples, 4.24%)</title><rect x="675" y="372" width="50" height="15" fill="rgb(244,48,3)"/><text x="678.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (39 samples, 4.24%)</title><rect x="675" y="388" width="50" height="15" fill="rgb(215,173,10)"/><text x="678.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (39 samples, 4.24%)</title><rect x="675" y="404" width="50" height="15" fill="rgb(248,196,5)"/><text x="678.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (39 samples, 4.24%)</title><rect x="675" y="420" width="50" height="15" fill="rgb(223,164,26)"/><text x="678.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (39 samples, 4.24%)</title><rect x="675" y="436" width="50" height="15" fill="rgb(229,78,14)"/><text x="678.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (10 samples, 1.09%)</title><rect x="712" y="452" width="13" height="15" fill="rgb(208,75,16)"/><text x="715.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:423) (1 samples, 0.11%)</title><rect x="724" y="468" width="1" height="15" fill="rgb(232,221,41)"/><text x="727.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:280) (1 samples, 0.11%)</title><rect x="724" y="484" width="1" height="15" fill="rgb(224,143,48)"/><text x="727.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.11%)</title><rect x="724" y="500" width="1" height="15" fill="rgb(218,196,54)"/><text x="727.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.11%)</title><rect x="724" y="516" width="1" height="15" fill="rgb(205,209,43)"/><text x="727.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="729" y="212" width="1" height="15" fill="rgb(241,181,44)"/><text x="732.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="732" y="260" width="1" height="15" fill="rgb(216,212,6)"/><text x="735.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.11%)</title><rect x="732" y="276" width="1" height="15" fill="rgb(214,209,9)"/><text x="735.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (2 samples, 0.22%)</title><rect x="732" y="228" width="2" height="15" fill="rgb(218,47,35)"/><text x="735.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="732" y="244" width="2" height="15" fill="rgb(220,165,0)"/><text x="735.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="733" y="260" width="1" height="15" fill="rgb(219,11,10)"/><text x="736.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="733" y="276" width="1" height="15" fill="rgb(226,180,32)"/><text x="736.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="733" y="292" width="1" height="15" fill="rgb(210,43,14)"/><text x="736.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="733" y="308" width="1" height="15" fill="rgb(215,202,5)"/><text x="736.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.11%)</title><rect x="733" y="324" width="1" height="15" fill="rgb(242,102,27)"/><text x="736.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.11%)</title><rect x="733" y="340" width="1" height="15" fill="rgb(240,1,18)"/><text x="736.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="734" y="308" width="1" height="15" fill="rgb(222,5,28)"/><text x="737.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.11%)</title><rect x="734" y="324" width="1" height="15" fill="rgb(223,46,31)"/><text x="737.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="734" y="292" width="3" height="15" fill="rgb(213,203,50)"/><text x="737.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="735" y="308" width="2" height="15" fill="rgb(225,75,40)"/><text x="738.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.11%)</title><rect x="735" y="324" width="2" height="15" fill="rgb(206,8,39)"/><text x="738.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.11%)</title><rect x="735" y="340" width="2" height="15" fill="rgb(226,117,22)"/><text x="738.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.33%)</title><rect x="737" y="340" width="4" height="15" fill="rgb(229,6,30)"/><text x="740.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="741" y="356" width="1" height="15" fill="rgb(218,180,12)"/><text x="744.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.54%)</title><rect x="737" y="292" width="6" height="15" fill="rgb(241,139,42)"/><text x="740.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.54%)</title><rect x="737" y="308" width="6" height="15" fill="rgb(252,102,25)"/><text x="740.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.54%)</title><rect x="737" y="324" width="6" height="15" fill="rgb(253,214,54)"/><text x="740.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="741" y="340" width="2" height="15" fill="rgb(239,1,54)"/><text x="744.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="742" y="356" width="1" height="15" fill="rgb(208,227,2)"/><text x="745.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (8 samples, 0.87%)</title><rect x="734" y="228" width="10" height="15" fill="rgb(234,56,31)"/><text x="737.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.87%)</title><rect x="734" y="244" width="10" height="15" fill="rgb(223,176,43)"/><text x="737.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.87%)</title><rect x="734" y="260" width="10" height="15" fill="rgb(246,224,45)"/><text x="737.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.87%)</title><rect x="734" y="276" width="10" height="15" fill="rgb(251,211,32)"/><text x="737.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="743" y="292" width="1" height="15" fill="rgb(217,193,42)"/><text x="746.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.11%)</title><rect x="743" y="308" width="1" height="15" fill="rgb(206,139,0)"/><text x="746.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (16 samples, 1.74%)</title><rect x="725" y="196" width="21" height="15" fill="rgb(251,210,19)"/><text x="728.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (12 samples, 1.30%)</title><rect x="730" y="212" width="16" height="15" fill="rgb(250,32,54)"/><text x="733.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.11%)</title><rect x="744" y="228" width="2" height="15" fill="rgb(233,199,52)"/><text x="747.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.11%)</title><rect x="744" y="244" width="2" height="15" fill="rgb(242,112,49)"/><text x="747.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="744" y="260" width="2" height="15" fill="rgb(209,2,13)"/><text x="747.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="744" y="276" width="2" height="15" fill="rgb(228,3,18)"/><text x="747.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.11%)</title><rect x="744" y="292" width="2" height="15" fill="rgb(243,82,12)"/><text x="747.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.11%)</title><rect x="744" y="308" width="2" height="15" fill="rgb(249,23,48)"/><text x="747.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.11%)</title><rect x="746" y="196" width="1" height="15" fill="rgb(238,21,12)"/><text x="749.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="748" y="228" width="2" height="15" fill="rgb(252,62,41)"/><text x="751.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="752" y="324" width="1" height="15" fill="rgb(246,52,9)"/><text x="755.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.43%)</title><rect x="753" y="324" width="6" height="15" fill="rgb(250,91,45)"/><text x="756.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.43%)</title><rect x="753" y="340" width="6" height="15" fill="rgb(252,71,31)"/><text x="756.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.33%)</title><rect x="755" y="356" width="4" height="15" fill="rgb(242,104,20)"/><text x="758.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.11%)</title><rect x="759" y="388" width="1" height="15" fill="rgb(214,33,14)"/><text x="762.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.11%)</title><rect x="760" y="452" width="1" height="15" fill="rgb(211,83,44)"/><text x="763.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="759" y="340" width="3" height="15" fill="rgb(253,48,39)"/><text x="762.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="759" y="356" width="3" height="15" fill="rgb(223,169,24)"/><text x="762.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="759" y="372" width="3" height="15" fill="rgb(205,41,37)"/><text x="762.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="760" y="388" width="2" height="15" fill="rgb(242,119,12)"/><text x="763.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="760" y="404" width="2" height="15" fill="rgb(223,67,48)"/><text x="763.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.22%)</title><rect x="760" y="420" width="2" height="15" fill="rgb(236,65,22)"/><text x="763.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.22%)</title><rect x="760" y="436" width="2" height="15" fill="rgb(239,178,0)"/><text x="763.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="761" y="452" width="1" height="15" fill="rgb(245,228,14)"/><text x="764.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="761" y="468" width="1" height="15" fill="rgb(219,5,8)"/><text x="764.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="761" y="484" width="1" height="15" fill="rgb(242,139,25)"/><text x="764.00" y="494.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.22%)</title><rect x="762" y="372" width="3" height="15" fill="rgb(250,59,34)"/><text x="765.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.11%)</title><rect x="764" y="388" width="1" height="15" fill="rgb(231,50,48)"/><text x="767.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.11%)</title><rect x="764" y="404" width="1" height="15" fill="rgb(224,41,38)"/><text x="767.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="762" y="356" width="4" height="15" fill="rgb(231,166,29)"/><text x="765.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="765" y="372" width="1" height="15" fill="rgb(235,71,51)"/><text x="768.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="765" y="388" width="1" height="15" fill="rgb(216,219,6)"/><text x="768.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.11%)</title><rect x="765" y="404" width="1" height="15" fill="rgb(210,149,10)"/><text x="768.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.76%)</title><rect x="759" y="324" width="9" height="15" fill="rgb(209,227,52)"/><text x="762.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.43%)</title><rect x="762" y="340" width="6" height="15" fill="rgb(214,150,22)"/><text x="765.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="766" y="356" width="2" height="15" fill="rgb(247,109,43)"/><text x="769.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="766" y="372" width="2" height="15" fill="rgb(210,146,33)"/><text x="769.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="766" y="388" width="2" height="15" fill="rgb(215,224,3)"/><text x="769.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="766" y="404" width="2" height="15" fill="rgb(205,112,17)"/><text x="769.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="770" y="372" width="1" height="15" fill="rgb(221,9,46)"/><text x="773.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="770" y="388" width="1" height="15" fill="rgb(242,145,51)"/><text x="773.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.11%)</title><rect x="770" y="404" width="1" height="15" fill="rgb(238,126,42)"/><text x="773.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2493) (1 samples, 0.11%)</title><rect x="771" y="436" width="2" height="15" fill="rgb(219,209,22)"/><text x="774.00" y="446.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="773" y="468" width="1" height="15" fill="rgb(253,121,50)"/><text x="776.00" y="478.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="773" y="436" width="2" height="15" fill="rgb(252,105,23)"/><text x="776.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.22%)</title><rect x="773" y="452" width="2" height="15" fill="rgb(238,71,36)"/><text x="776.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="774" y="468" width="1" height="15" fill="rgb(226,106,27)"/><text x="777.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.43%)</title><rect x="771" y="404" width="6" height="15" fill="rgb(222,13,3)"/><text x="774.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.43%)</title><rect x="771" y="420" width="6" height="15" fill="rgb(239,191,35)"/><text x="774.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.11%)</title><rect x="775" y="436" width="2" height="15" fill="rgb(254,88,49)"/><text x="778.00" y="446.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (2 samples, 0.22%)</title><rect x="777" y="420" width="2" height="15" fill="rgb(233,84,15)"/><text x="780.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.43%)</title><rect x="777" y="404" width="5" height="15" fill="rgb(226,194,26)"/><text x="780.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (2 samples, 0.22%)</title><rect x="779" y="420" width="3" height="15" fill="rgb(213,147,51)"/><text x="782.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (2 samples, 0.22%)</title><rect x="779" y="436" width="3" height="15" fill="rgb(208,57,5)"/><text x="782.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (2 samples, 0.22%)</title><rect x="779" y="452" width="3" height="15" fill="rgb(252,210,34)"/><text x="782.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (2 samples, 0.22%)</title><rect x="779" y="468" width="3" height="15" fill="rgb(214,53,54)"/><text x="782.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 0.98%)</title><rect x="771" y="372" width="12" height="15" fill="rgb(244,133,51)"/><text x="774.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 0.98%)</title><rect x="771" y="388" width="12" height="15" fill="rgb(247,120,31)"/><text x="774.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="782" y="404" width="1" height="15" fill="rgb(231,185,28)"/><text x="785.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="782" y="420" width="1" height="15" fill="rgb(247,204,19)"/><text x="785.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="782" y="436" width="1" height="15" fill="rgb(250,65,46)"/><text x="785.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.20%)</title><rect x="770" y="356" width="14" height="15" fill="rgb(247,174,4)"/><text x="773.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="783" y="372" width="1" height="15" fill="rgb(240,130,10)"/><text x="786.00" y="382.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.11%)</title><rect x="783" y="388" width="1" height="15" fill="rgb(234,139,1)"/><text x="786.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="783" y="404" width="1" height="15" fill="rgb(234,114,36)"/><text x="786.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="783" y="420" width="1" height="15" fill="rgb(246,32,9)"/><text x="786.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (142 samples, 15.43%)</title><rect x="603" y="180" width="182" height="15" fill="rgb(230,68,38)"/><text x="606.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (30 samples, 3.26%)</title><rect x="747" y="196" width="38" height="15" fill="rgb(205,219,51)"/><text x="750.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (30 samples, 3.26%)</title><rect x="747" y="212" width="38" height="15" fill="rgb(247,97,52)"/><text x="750.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (28 samples, 3.04%)</title><rect x="750" y="228" width="35" height="15" fill="rgb(253,10,26)"/><text x="753.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (28 samples, 3.04%)</title><rect x="750" y="244" width="35" height="15" fill="rgb(245,224,9)"/><text x="753.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (28 samples, 3.04%)</title><rect x="750" y="260" width="35" height="15" fill="rgb(215,124,33)"/><text x="753.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 2.93%)</title><rect x="751" y="276" width="34" height="15" fill="rgb(236,172,24)"/><text x="754.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (27 samples, 2.93%)</title><rect x="751" y="292" width="34" height="15" fill="rgb(227,117,3)"/><text x="754.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (27 samples, 2.93%)</title><rect x="751" y="308" width="34" height="15" fill="rgb(238,188,32)"/><text x="754.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (14 samples, 1.52%)</title><rect x="768" y="324" width="17" height="15" fill="rgb(243,12,28)"/><text x="771.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (13 samples, 1.41%)</title><rect x="769" y="340" width="16" height="15" fill="rgb(217,7,26)"/><text x="772.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="784" y="356" width="1" height="15" fill="rgb(212,103,17)"/><text x="787.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="784" y="372" width="1" height="15" fill="rgb(225,65,21)"/><text x="787.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="784" y="388" width="1" height="15" fill="rgb(213,92,15)"/><text x="787.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="784" y="404" width="1" height="15" fill="rgb(226,114,0)"/><text x="787.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.33%)</title><rect x="785" y="180" width="4" height="15" fill="rgb(229,183,22)"/><text x="788.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="789" y="180" width="2" height="15" fill="rgb(250,117,33)"/><text x="792.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 0.76%)</title><rect x="791" y="180" width="9" height="15" fill="rgb(235,16,43)"/><text x="794.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:45) (271 samples, 29.46%)</title><rect x="453" y="52" width="348" height="15" fill="rgb(209,152,24)"/><text x="456.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:44) (271 samples, 29.46%)</title><rect x="453" y="68" width="348" height="15" fill="rgb(243,207,25)"/><text x="456.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (269 samples, 29.24%)</title><rect x="456" y="84" width="345" height="15" fill="rgb(218,71,24)"/><text x="459.00" y="94.50">setup_profile (bench_AdaBoostClassifier_defaul..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (169 samples, 18.37%)</title><rect x="584" y="100" width="217" height="15" fill="rgb(221,58,7)"/><text x="587.00" y="110.50">profile (bench_AdaBoostClass..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (169 samples, 18.37%)</title><rect x="584" y="116" width="217" height="15" fill="rgb(213,226,36)"/><text x="587.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (169 samples, 18.37%)</title><rect x="584" y="132" width="217" height="15" fill="rgb(228,100,42)"/><text x="587.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (169 samples, 18.37%)</title><rect x="584" y="148" width="217" height="15" fill="rgb(229,54,42)"/><text x="587.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (169 samples, 18.37%)</title><rect x="584" y="164" width="217" height="15" fill="rgb(220,121,9)"/><text x="587.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="800" y="180" width="1" height="15" fill="rgb(211,81,25)"/><text x="803.00" y="190.50"></text></g><g><title>0x7f66cee63ff9 (?) (1 samples, 0.11%)</title><rect x="801" y="212" width="1" height="15" fill="rgb(243,216,42)"/><text x="804.00" y="222.50"></text></g><g><title>0x7f66cee5eef6 (?) (1 samples, 0.11%)</title><rect x="801" y="228" width="1" height="15" fill="rgb(222,92,32)"/><text x="804.00" y="238.50"></text></g><g><title>0x7f66cee53962 (?) (1 samples, 0.11%)</title><rect x="801" y="244" width="1" height="15" fill="rgb(245,158,13)"/><text x="804.00" y="254.50"></text></g><g><title>0x7f66cee877a7 (?) (1 samples, 0.11%)</title><rect x="801" y="260" width="1" height="15" fill="rgb(218,74,49)"/><text x="804.00" y="270.50"></text></g><g><title>0x7f66cee87379 (?) (1 samples, 0.11%)</title><rect x="801" y="276" width="1" height="15" fill="rgb(206,128,25)"/><text x="804.00" y="286.50"></text></g><g><title>0x7f66cf2e58b8 (?) (1 samples, 0.11%)</title><rect x="801" y="292" width="1" height="15" fill="rgb(239,139,34)"/><text x="804.00" y="302.50"></text></g><g><title>0x7f66cf2e3c7f (?) (1 samples, 0.11%)</title><rect x="801" y="308" width="1" height="15" fill="rgb(239,145,11)"/><text x="804.00" y="318.50"></text></g><g><title>0x7f66cf2f699c (?) (1 samples, 0.11%)</title><rect x="801" y="324" width="1" height="15" fill="rgb(223,32,31)"/><text x="804.00" y="334.50"></text></g><g><title>0x7f66cf01419e (?) (1 samples, 0.11%)</title><rect x="801" y="340" width="1" height="15" fill="rgb(233,86,29)"/><text x="804.00" y="350.50"></text></g><g><title>0x7f66cf010fce (?) (1 samples, 0.11%)</title><rect x="801" y="356" width="1" height="15" fill="rgb(244,204,38)"/><text x="804.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="802" y="388" width="1" height="15" fill="rgb(250,158,29)"/><text x="805.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="802" y="340" width="3" height="15" fill="rgb(231,35,44)"/><text x="805.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="802" y="356" width="3" height="15" fill="rgb(208,81,8)"/><text x="805.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="802" y="372" width="3" height="15" fill="rgb(225,115,4)"/><text x="805.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="803" y="388" width="2" height="15" fill="rgb(214,62,29)"/><text x="806.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="805" y="340" width="5" height="15" fill="rgb(223,84,5)"/><text x="808.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="356" width="1" height="15" fill="rgb(221,150,52)"/><text x="812.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="372" width="1" height="15" fill="rgb(206,29,15)"/><text x="812.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="388" width="1" height="15" fill="rgb(214,173,35)"/><text x="812.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="404" width="1" height="15" fill="rgb(221,227,19)"/><text x="812.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="420" width="1" height="15" fill="rgb(241,59,0)"/><text x="812.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="436" width="1" height="15" fill="rgb(210,148,21)"/><text x="812.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="452" width="1" height="15" fill="rgb(252,191,17)"/><text x="812.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="468" width="1" height="15" fill="rgb(254,126,23)"/><text x="812.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="809" y="484" width="1" height="15" fill="rgb(239,176,27)"/><text x="812.00" y="494.50"></text></g><g><title>0x7f670f1b46be (libc-2.29.so) (1 samples, 0.11%)</title><rect x="809" y="500" width="1" height="15" fill="rgb(227,183,20)"/><text x="812.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="810" y="340" width="5" height="15" fill="rgb(243,155,47)"/><text x="813.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="810" y="356" width="5" height="15" fill="rgb(206,199,36)"/><text x="813.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="810" y="372" width="5" height="15" fill="rgb(246,94,13)"/><text x="813.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="814" y="388" width="1" height="15" fill="rgb(228,11,11)"/><text x="817.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="815" y="340" width="4" height="15" fill="rgb(215,205,40)"/><text x="818.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="819" y="340" width="6" height="15" fill="rgb(237,171,22)"/><text x="822.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="819" y="356" width="6" height="15" fill="rgb(237,84,7)"/><text x="822.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="819" y="372" width="6" height="15" fill="rgb(233,205,45)"/><text x="822.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="821" y="388" width="4" height="15" fill="rgb(240,40,31)"/><text x="824.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="825" y="340" width="2" height="15" fill="rgb(231,69,14)"/><text x="828.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="825" y="356" width="2" height="15" fill="rgb(208,168,21)"/><text x="828.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="825" y="372" width="2" height="15" fill="rgb(205,60,52)"/><text x="828.00" y="382.50"></text></g><g><title>0x7f66cee2b9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="836" y="356" width="1" height="15" fill="rgb(220,212,43)"/><text x="839.00" y="366.50"></text></g><g><title>0x7f66cee2a930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="861" y="388" width="1" height="15" fill="rgb(248,65,16)"/><text x="864.00" y="398.50"></text></g><g><title>0x7f66cee2bba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="862" y="388" width="2" height="15" fill="rgb(245,95,48)"/><text x="865.00" y="398.50"></text></g><g><title>0x7f66fec71d50 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="866" y="404" width="3" height="15" fill="rgb(241,60,6)"/><text x="869.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (20 samples, 2.17%)</title><rect x="864" y="388" width="25" height="15" fill="rgb(207,79,44)"/><text x="867.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (16 samples, 1.74%)</title><rect x="869" y="404" width="20" height="15" fill="rgb(232,227,23)"/><text x="872.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.22%)</title><rect x="837" y="356" width="61" height="15" fill="rgb(244,177,19)"/><text x="840.00" y="366.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 3.80%)</title><rect x="853" y="372" width="45" height="15" fill="rgb(207,15,36)"/><text x="856.00" y="382.50">std:..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.76%)</title><rect x="889" y="388" width="9" height="15" fill="rgb(221,81,21)"/><text x="892.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="898" y="356" width="7" height="15" fill="rgb(217,171,34)"/><text x="901.00" y="366.50"></text></g><g><title>0x7f670f1c5dbb (libc-2.29.so) (2 samples, 0.22%)</title><rect x="902" y="372" width="3" height="15" fill="rgb(240,220,36)"/><text x="905.00" y="382.50"></text></g><g><title>0x7f66fec727a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="906" y="372" width="1" height="15" fill="rgb(253,221,46)"/><text x="909.00" y="382.50"></text></g><g><title>0x7f670f1a591c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="907" y="372" width="2" height="15" fill="rgb(207,61,48)"/><text x="910.00" y="382.50"></text></g><g><title>0x7f670f1a5945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="909" y="372" width="1" height="15" fill="rgb(239,90,29)"/><text x="912.00" y="382.50"></text></g><g><title>0x7f670f1a597c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="910" y="372" width="1" height="15" fill="rgb(253,101,4)"/><text x="913.00" y="382.50"></text></g><g><title>0x7f670f1a5998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="911" y="372" width="1" height="15" fill="rgb(206,103,10)"/><text x="914.00" y="382.50"></text></g><g><title>0x7f670f1a5be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="912" y="372" width="2" height="15" fill="rgb(209,148,17)"/><text x="915.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="914" y="372" width="1" height="15" fill="rgb(208,103,1)"/><text x="917.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="915" y="372" width="1" height="15" fill="rgb(248,89,27)"/><text x="918.00" y="382.50"></text></g><g><title>0x7f670f1a5902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="921" y="388" width="2" height="15" fill="rgb(227,173,40)"/><text x="924.00" y="398.50"></text></g><g><title>0x7f670f1a5922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="923" y="388" width="1" height="15" fill="rgb(240,174,5)"/><text x="926.00" y="398.50"></text></g><g><title>0x7f670f1a5938 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="924" y="388" width="1" height="15" fill="rgb(208,16,0)"/><text x="927.00" y="398.50"></text></g><g><title>0x7f670f1a596a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="925" y="388" width="2" height="15" fill="rgb(237,89,49)"/><text x="928.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.07%)</title><rect x="905" y="356" width="24" height="15" fill="rgb(210,136,19)"/><text x="908.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.09%)</title><rect x="916" y="372" width="13" height="15" fill="rgb(232,174,35)"/><text x="919.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="927" y="388" width="2" height="15" fill="rgb(210,57,40)"/><text x="930.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.98%)</title><rect x="802" y="260" width="130" height="15" fill="rgb(224,145,48)"/><text x="805.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.98%)</title><rect x="802" y="276" width="130" height="15" fill="rgb(250,135,1)"/><text x="805.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.98%)</title><rect x="802" y="292" width="130" height="15" fill="rgb(218,146,44)"/><text x="805.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.98%)</title><rect x="802" y="308" width="130" height="15" fill="rgb(242,96,7)"/><text x="805.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.98%)</title><rect x="802" y="324" width="130" height="15" fill="rgb(245,29,44)"/><text x="805.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 8.91%)</title><rect x="827" y="340" width="105" height="15" fill="rgb(248,222,11)"/><text x="830.00" y="350.50">onnxruntime:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="929" y="356" width="3" height="15" fill="rgb(227,6,24)"/><text x="932.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="932" y="260" width="2" height="15" fill="rgb(245,80,48)"/><text x="935.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="933" y="276" width="1" height="15" fill="rgb(248,72,18)"/><text x="936.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:18) (105 samples, 11.41%)</title><rect x="801" y="100" width="135" height="15" fill="rgb(211,56,37)"/><text x="804.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (105 samples, 11.41%)</title><rect x="801" y="116" width="135" height="15" fill="rgb(246,48,14)"/><text x="804.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (105 samples, 11.41%)</title><rect x="801" y="132" width="135" height="15" fill="rgb(240,69,50)"/><text x="804.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (105 samples, 11.41%)</title><rect x="801" y="148" width="135" height="15" fill="rgb(250,152,12)"/><text x="804.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (105 samples, 11.41%)</title><rect x="801" y="164" width="135" height="15" fill="rgb(236,132,20)"/><text x="804.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (105 samples, 11.41%)</title><rect x="801" y="180" width="135" height="15" fill="rgb(252,185,48)"/><text x="804.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (onnxruntime/capi/session.py:136) (105 samples, 11.41%)</title><rect x="801" y="196" width="135" height="15" fill="rgb(243,99,38)"/><text x="804.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.30%)</title><rect x="802" y="212" width="134" height="15" fill="rgb(244,171,4)"/><text x="805.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.30%)</title><rect x="802" y="228" width="134" height="15" fill="rgb(214,194,49)"/><text x="805.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.30%)</title><rect x="802" y="244" width="134" height="15" fill="rgb(213,164,13)"/><text x="805.00" y="254.50">onnxruntime::pyt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="934" y="260" width="2" height="15" fill="rgb(218,90,39)"/><text x="937.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="934" y="276" width="2" height="15" fill="rgb(243,65,48)"/><text x="937.00" y="286.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="934" y="292" width="2" height="15" fill="rgb(245,71,18)"/><text x="937.00" y="302.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="936" y="340" width="1" height="15" fill="rgb(235,59,30)"/><text x="939.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="936" y="356" width="1" height="15" fill="rgb(241,84,41)"/><text x="939.00" y="366.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="340" width="1" height="15" fill="rgb(243,151,53)"/><text x="940.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="356" width="1" height="15" fill="rgb(206,62,12)"/><text x="940.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="372" width="1" height="15" fill="rgb(218,73,48)"/><text x="940.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="938" y="340" width="1" height="15" fill="rgb(223,6,5)"/><text x="941.00" y="350.50"></text></g><g><title>0x7f670f1a5d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="356" width="1" height="15" fill="rgb(246,28,22)"/><text x="941.00" y="366.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.87%)</title><rect x="939" y="340" width="11" height="15" fill="rgb(246,86,25)"/><text x="942.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.30%)</title><rect x="950" y="372" width="15" height="15" fill="rgb(235,100,39)"/><text x="953.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.76%)</title><rect x="956" y="388" width="9" height="15" fill="rgb(236,214,11)"/><text x="959.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.41%)</title><rect x="950" y="340" width="16" height="15" fill="rgb(222,96,37)"/><text x="953.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.41%)</title><rect x="950" y="356" width="16" height="15" fill="rgb(238,189,43)"/><text x="953.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="372" width="1" height="15" fill="rgb(217,32,7)"/><text x="968.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="388" width="1" height="15" fill="rgb(249,2,40)"/><text x="968.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="404" width="1" height="15" fill="rgb(212,114,31)"/><text x="968.00" y="414.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="966" y="340" width="7" height="15" fill="rgb(231,140,42)"/><text x="969.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="356" width="2" height="15" fill="rgb(212,70,53)"/><text x="974.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="372" width="2" height="15" fill="rgb(226,145,7)"/><text x="974.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="388" width="2" height="15" fill="rgb(225,117,17)"/><text x="974.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="404" width="2" height="15" fill="rgb(243,45,39)"/><text x="974.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="420" width="2" height="15" fill="rgb(219,144,53)"/><text x="974.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="436" width="2" height="15" fill="rgb(231,68,46)"/><text x="974.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="452" width="2" height="15" fill="rgb(241,180,6)"/><text x="974.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="468" width="2" height="15" fill="rgb(225,73,22)"/><text x="974.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="484" width="2" height="15" fill="rgb(211,41,3)"/><text x="974.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="500" width="2" height="15" fill="rgb(244,29,13)"/><text x="974.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="971" y="516" width="2" height="15" fill="rgb(249,157,49)"/><text x="974.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="971" y="532" width="2" height="15" fill="rgb(240,200,17)"/><text x="974.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="971" y="548" width="2" height="15" fill="rgb(251,59,43)"/><text x="974.00" y="558.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="340" width="1" height="15" fill="rgb(241,91,17)"/><text x="976.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="356" width="1" height="15" fill="rgb(232,22,20)"/><text x="976.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="372" width="1" height="15" fill="rgb(249,0,47)"/><text x="976.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="388" width="1" height="15" fill="rgb(236,75,10)"/><text x="976.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="404" width="1" height="15" fill="rgb(214,32,4)"/><text x="976.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="420" width="1" height="15" fill="rgb(222,18,22)"/><text x="976.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="973" y="436" width="1" height="15" fill="rgb(211,161,33)"/><text x="976.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="973" y="452" width="1" height="15" fill="rgb(219,9,7)"/><text x="976.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="973" y="468" width="1" height="15" fill="rgb(232,11,40)"/><text x="976.00" y="478.50"></text></g><g><title>0x7f670f1a6d67 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="973" y="484" width="1" height="15" fill="rgb(242,215,7)"/><text x="976.00" y="494.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="974" y="340" width="19" height="15" fill="rgb(251,129,18)"/><text x="977.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="974" y="356" width="19" height="15" fill="rgb(239,58,3)"/><text x="977.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="974" y="372" width="19" height="15" fill="rgb(233,126,0)"/><text x="977.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.76%)</title><rect x="984" y="388" width="9" height="15" fill="rgb(237,10,45)"/><text x="987.00" y="398.50"></text></g><g><title>0x7f670f1a5945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="993" y="372" width="2" height="15" fill="rgb(220,168,14)"/><text x="996.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="993" y="340" width="5" height="15" fill="rgb(224,24,16)"/><text x="996.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="993" y="356" width="5" height="15" fill="rgb(251,138,37)"/><text x="996.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="995" y="372" width="3" height="15" fill="rgb(211,95,4)"/><text x="998.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1028" y="356" width="2" height="15" fill="rgb(233,96,33)"/><text x="1031.00" y="366.50"></text></g><g><title>0x7f66cee2a930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1089" y="388" width="3" height="15" fill="rgb(215,24,27)"/><text x="1092.00" y="398.50"></text></g><g><title>0x7f66cee2bba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1092" y="388" width="1" height="15" fill="rgb(251,216,4)"/><text x="1095.00" y="398.50"></text></g><g><title>0x7f66fec71d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1093" y="404" width="2" height="15" fill="rgb(206,41,10)"/><text x="1096.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (16 samples, 1.74%)</title><rect x="1093" y="388" width="21" height="15" fill="rgb(241,31,36)"/><text x="1096.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (15 samples, 1.63%)</title><rect x="1095" y="404" width="19" height="15" fill="rgb(241,17,9)"/><text x="1098.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (69 samples, 7.50%)</title><rect x="1030" y="356" width="89" height="15" fill="rgb(243,11,21)"/><text x="1033.00" y="366.50">onnxruntim..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.48%)</title><rect x="1078" y="372" width="41" height="15" fill="rgb(243,187,43)"/><text x="1081.00" y="382.50">std..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.43%)</title><rect x="1114" y="388" width="5" height="15" fill="rgb(233,104,36)"/><text x="1117.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.87%)</title><rect x="1119" y="356" width="10" height="15" fill="rgb(252,157,2)"/><text x="1122.00" y="366.50"></text></g><g><title>0x7f670f1c5d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1128" y="372" width="1" height="15" fill="rgb(212,155,4)"/><text x="1131.00" y="382.50"></text></g><g><title>0x7f66fec727a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1131" y="372" width="1" height="15" fill="rgb(239,38,15)"/><text x="1134.00" y="382.50"></text></g><g><title>0x7f670f1a5904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1132" y="372" width="1" height="15" fill="rgb(211,25,21)"/><text x="1135.00" y="382.50"></text></g><g><title>0x7f670f1a5906 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1133" y="372" width="3" height="15" fill="rgb(209,51,36)"/><text x="1136.00" y="382.50"></text></g><g><title>0x7f670f1a590e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1136" y="372" width="1" height="15" fill="rgb(253,143,52)"/><text x="1139.00" y="382.50"></text></g><g><title>0x7f670f1a591e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="372" width="1" height="15" fill="rgb(250,31,41)"/><text x="1140.00" y="382.50"></text></g><g><title>0x7f670f1a593b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="372" width="1" height="15" fill="rgb(214,167,17)"/><text x="1141.00" y="382.50"></text></g><g><title>0x7f670f1a597c (libc-2.29.so) (4 samples, 0.43%)</title><rect x="1139" y="372" width="6" height="15" fill="rgb(242,2,38)"/><text x="1142.00" y="382.50"></text></g><g><title>0x7f670f1a5982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1145" y="372" width="1" height="15" fill="rgb(225,158,41)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f670f1a5991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(210,123,41)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7f670f1a5998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(250,61,50)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7f670f1a5a33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1148" y="372" width="2" height="15" fill="rgb(238,186,44)"/><text x="1151.00" y="382.50"></text></g><g><title>0x7f670f1a5a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1150" y="372" width="1" height="15" fill="rgb(208,71,19)"/><text x="1153.00" y="382.50"></text></g><g><title>0x7f670f1a5bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="372" width="1" height="15" fill="rgb(206,79,45)"/><text x="1154.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.43%)</title><rect x="1152" y="372" width="5" height="15" fill="rgb(224,155,11)"/><text x="1155.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1157" y="372" width="2" height="15" fill="rgb(251,53,51)"/><text x="1160.00" y="382.50"></text></g><g><title>0x7f670f1a5902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1165" y="388" width="1" height="15" fill="rgb(249,125,34)"/><text x="1168.00" y="398.50"></text></g><g><title>0x7f670f1a595e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="2" height="15" fill="rgb(249,87,24)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7f670f1a5991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="388" width="1" height="15" fill="rgb(228,41,2)"/><text x="1171.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.48%)</title><rect x="1129" y="356" width="41" height="15" fill="rgb(227,15,29)"/><text x="1132.00" y="366.50">std..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.98%)</title><rect x="1159" y="372" width="11" height="15" fill="rgb(230,27,7)"/><text x="1162.00" y="382.50"></text></g><g><title>0x7f670f1a5bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1169" y="388" width="1" height="15" fill="rgb(215,227,53)"/><text x="1172.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 15.54%)</title><rect x="998" y="340" width="184" height="15" fill="rgb(253,149,42)"/><text x="1001.00" y="350.50">onnxruntime::ml::TreeEn..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.98%)</title><rect x="1170" y="356" width="12" height="15" fill="rgb(253,155,12)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 21.09%)</title><rect x="936" y="260" width="248" height="15" fill="rgb(233,77,3)"/><text x="939.00" y="270.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 21.09%)</title><rect x="936" y="276" width="248" height="15" fill="rgb(215,217,30)"/><text x="939.00" y="286.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 21.09%)</title><rect x="936" y="292" width="248" height="15" fill="rgb(239,66,23)"/><text x="939.00" y="302.50">onnxruntime::utils::ExecuteGraph ..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 21.09%)</title><rect x="936" y="308" width="248" height="15" fill="rgb(209,180,0)"/><text x="939.00" y="318.50">onnxruntime::utils::ExecuteGraphI..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 21.09%)</title><rect x="936" y="324" width="248" height="15" fill="rgb(225,32,30)"/><text x="939.00" y="334.50">onnxruntime::SequentialExecutor::..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1182" y="340" width="2" height="15" fill="rgb(249,144,39)"/><text x="1185.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1182" y="356" width="2" height="15" fill="rgb(206,15,34)"/><text x="1185.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1182" y="372" width="2" height="15" fill="rgb(229,0,52)"/><text x="1185.00" y="382.50"></text></g><g><title>0x7f670f1a72c1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1183" y="388" width="1" height="15" fill="rgb(210,64,14)"/><text x="1186.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1184" y="260" width="3" height="15" fill="rgb(215,178,47)"/><text x="1187.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (197 samples, 21.41%)</title><rect x="936" y="164" width="252" height="15" fill="rgb(236,122,1)"/><text x="939.00" y="174.50">_run_whole_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (197 samples, 21.41%)</title><rect x="936" y="180" width="252" height="15" fill="rgb(245,171,50)"/><text x="939.00" y="190.50">run (mlprodict/onnxrt/ops_whole/s..</text></g><g><title>run (onnxruntime/capi/session.py:136) (197 samples, 21.41%)</title><rect x="936" y="196" width="252" height="15" fill="rgb(212,153,38)"/><text x="939.00" y="206.50">run (onnxruntime/capi/session.py:..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 21.41%)</title><rect x="936" y="212" width="252" height="15" fill="rgb(245,209,11)"/><text x="939.00" y="222.50">pybind11::cpp_function::dispatche..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 21.41%)</title><rect x="936" y="228" width="252" height="15" fill="rgb(214,136,26)"/><text x="939.00" y="238.50">void pybind11::cpp_function::init..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 21.41%)</title><rect x="936" y="244" width="252" height="15" fill="rgb(253,59,10)"/><text x="939.00" y="254.50">onnxruntime::python::addObjectMet..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(209,141,32)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(250,209,18)"/><text x="1190.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(240,213,24)"/><text x="1190.00" y="302.50"></text></g><g><title>all (920 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,59,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:52) (303 samples, 32.93%)</title><rect x="801" y="52" width="389" height="15" fill="rgb(211,161,25)"/><text x="804.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:51) (303 samples, 32.93%)</title><rect x="801" y="68" width="389" height="15" fill="rgb(250,42,32)"/><text x="804.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:29) (303 samples, 32.93%)</title><rect x="801" y="84" width="389" height="15" fill="rgb(238,138,5)"/><text x="804.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py:23) (198 samples, 21.52%)</title><rect x="936" y="100" width="254" height="15" fill="rgb(210,162,4)"/><text x="939.00" y="110.50">profile (bench_AdaBoostClassifier..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (198 samples, 21.52%)</title><rect x="936" y="116" width="254" height="15" fill="rgb(228,83,49)"/><text x="939.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (198 samples, 21.52%)</title><rect x="936" y="132" width="254" height="15" fill="rgb(221,76,24)"/><text x="939.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (198 samples, 21.52%)</title><rect x="936" y="148" width="254" height="15" fill="rgb(240,128,30)"/><text x="939.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.11%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(243,117,10)"/><text x="1191.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(218,218,14)"/><text x="1191.00" y="190.50"></text></g></g></svg>