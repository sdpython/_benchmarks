<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.13%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(240,145,35)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1076" width="1" height="15" fill="rgb(230,26,4)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1092" width="1" height="15" fill="rgb(240,17,12)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1108" width="1" height="15" fill="rgb(222,187,45)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="1124" width="1" height="15" fill="rgb(209,105,29)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1140" width="1" height="15" fill="rgb(243,192,30)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="1156" width="1" height="15" fill="rgb(218,208,44)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1172" width="1" height="15" fill="rgb(222,62,36)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1188" width="1" height="15" fill="rgb(236,205,25)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1204" width="1" height="15" fill="rgb(208,2,16)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="1220" width="1" height="15" fill="rgb(224,186,31)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1236" width="1" height="15" fill="rgb(230,136,1)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/_gpc.py) (1 samples, 0.13%)</title><rect x="10" y="1252" width="1" height="15" fill="rgb(214,200,47)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1268" width="1" height="15" fill="rgb(233,0,20)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1284" width="1" height="15" fill="rgb(216,60,53)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1300" width="1" height="15" fill="rgb(251,134,40)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="1316" width="1" height="15" fill="rgb(207,126,45)"/><text x="13.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="10" y="1332" width="1" height="15" fill="rgb(219,9,48)"/><text x="13.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/multiclass.py) (1 samples, 0.13%)</title><rect x="10" y="1348" width="1" height="15" fill="rgb(251,133,7)"/><text x="13.00" y="1358.50"></text></g><g><title>OneVsRestClassifier (sklearn/multiclass.py) (1 samples, 0.13%)</title><rect x="10" y="1364" width="1" height="15" fill="rgb(216,112,18)"/><text x="13.00" y="1374.50"></text></g><g><title>&lt;lambda&gt; (sklearn/utils/metaestimators.py) (1 samples, 0.13%)</title><rect x="10" y="1380" width="1" height="15" fill="rgb(225,31,35)"/><text x="13.00" y="1390.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.39%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(253,38,0)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(209,141,11)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(210,195,7)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(211,165,0)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(214,147,31)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(207,130,52)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.39%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(217,99,35)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(246,146,13)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(243,113,38)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(213,136,15)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(238,194,48)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(246,205,22)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(208,213,13)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(238,42,36)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(224,137,17)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.39%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(212,210,32)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(209,4,21)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(251,227,44)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(209,192,31)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(253,144,30)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(247,189,47)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.39%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(228,35,34)"/><text x="13.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(210,205,42)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(207,163,20)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(229,218,48)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(251,31,37)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(217,9,20)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.26%)</title><rect x="11" y="1060" width="3" height="15" fill="rgb(225,35,2)"/><text x="14.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="11" y="1076" width="3" height="15" fill="rgb(207,86,38)"/><text x="14.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="11" y="1092" width="3" height="15" fill="rgb(209,157,41)"/><text x="14.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="11" y="1108" width="3" height="15" fill="rgb(254,22,1)"/><text x="14.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.26%)</title><rect x="11" y="1124" width="3" height="15" fill="rgb(249,35,44)"/><text x="14.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="11" y="1140" width="3" height="15" fill="rgb(207,82,36)"/><text x="14.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.26%)</title><rect x="11" y="1156" width="3" height="15" fill="rgb(234,7,20)"/><text x="14.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.26%)</title><rect x="11" y="1172" width="3" height="15" fill="rgb(222,190,38)"/><text x="14.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.26%)</title><rect x="11" y="1188" width="3" height="15" fill="rgb(249,205,13)"/><text x="14.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.26%)</title><rect x="11" y="1204" width="3" height="15" fill="rgb(210,167,28)"/><text x="14.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.13%)</title><rect x="13" y="1220" width="1" height="15" fill="rgb(250,95,31)"/><text x="16.00" y="1230.50"></text></g><g><title>tokeneater (inspect.py) (1 samples, 0.13%)</title><rect x="13" y="1236" width="1" height="15" fill="rgb(230,202,47)"/><text x="16.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/special/_ellip_harm.py) (1 samples, 0.13%)</title><rect x="14" y="1300" width="2" height="15" fill="rgb(233,115,46)"/><text x="17.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1316" width="2" height="15" fill="rgb(246,5,44)"/><text x="17.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1332" width="2" height="15" fill="rgb(226,188,52)"/><text x="17.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1348" width="2" height="15" fill="rgb(246,133,20)"/><text x="17.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1364" width="2" height="15" fill="rgb(214,39,14)"/><text x="17.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="1380" width="2" height="15" fill="rgb(205,166,5)"/><text x="17.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1396" width="2" height="15" fill="rgb(223,139,40)"/><text x="17.00" y="1406.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1412" width="2" height="15" fill="rgb(225,13,23)"/><text x="17.00" y="1422.50"></text></g><g><title>0x7f10c1898995 (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1428" width="2" height="15" fill="rgb(248,99,16)"/><text x="17.00" y="1438.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1444" width="2" height="15" fill="rgb(229,44,18)"/><text x="17.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1460" width="2" height="15" fill="rgb(219,120,6)"/><text x="17.00" y="1470.50"></text></g><g><title>0x7f10c1898258 (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1476" width="2" height="15" fill="rgb(227,26,11)"/><text x="17.00" y="1486.50"></text></g><g><title>0x7f10c18e5d7a (ld-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1492" width="2" height="15" fill="rgb(250,210,10)"/><text x="17.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1508" width="2" height="15" fill="rgb(245,76,11)"/><text x="17.00" y="1518.50"></text></g><g><title>0x7f10c18e6345 (ld-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1524" width="2" height="15" fill="rgb(228,204,38)"/><text x="17.00" y="1534.50"></text></g><g><title>0x7f10c18df3d4 (ld-2.29.so) (1 samples, 0.13%)</title><rect x="14" y="1540" width="2" height="15" fill="rgb(245,214,6)"/><text x="17.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1124" width="3" height="15" fill="rgb(225,118,8)"/><text x="17.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1140" width="3" height="15" fill="rgb(241,91,12)"/><text x="17.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1156" width="3" height="15" fill="rgb(223,36,6)"/><text x="17.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.26%)</title><rect x="14" y="1172" width="3" height="15" fill="rgb(208,199,9)"/><text x="17.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1188" width="3" height="15" fill="rgb(223,211,37)"/><text x="17.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (2 samples, 0.26%)</title><rect x="14" y="1204" width="3" height="15" fill="rgb(242,127,35)"/><text x="17.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1220" width="3" height="15" fill="rgb(234,207,25)"/><text x="17.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1236" width="3" height="15" fill="rgb(233,74,51)"/><text x="17.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1252" width="3" height="15" fill="rgb(236,34,35)"/><text x="17.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.26%)</title><rect x="14" y="1268" width="3" height="15" fill="rgb(206,6,0)"/><text x="17.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.26%)</title><rect x="14" y="1284" width="3" height="15" fill="rgb(230,204,14)"/><text x="17.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.13%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(216,50,19)"/><text x="19.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(237,101,9)"/><text x="19.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(252,152,26)"/><text x="19.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(217,130,47)"/><text x="19.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(241,19,15)"/><text x="19.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(224,141,32)"/><text x="19.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1396" width="1" height="15" fill="rgb(229,68,14)"/><text x="19.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1412" width="1" height="15" fill="rgb(208,195,52)"/><text x="19.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.13%)</title><rect x="16" y="1428" width="1" height="15" fill="rgb(244,139,50)"/><text x="19.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1444" width="1" height="15" fill="rgb(224,106,2)"/><text x="19.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1460" width="1" height="15" fill="rgb(214,21,42)"/><text x="19.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1476" width="1" height="15" fill="rgb(240,177,33)"/><text x="19.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1492" width="1" height="15" fill="rgb(251,80,30)"/><text x="19.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1508" width="1" height="15" fill="rgb(209,74,38)"/><text x="19.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1524" width="1" height="15" fill="rgb(227,8,53)"/><text x="19.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1540" width="1" height="15" fill="rgb(248,150,24)"/><text x="19.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.13%)</title><rect x="16" y="1556" width="1" height="15" fill="rgb(220,190,17)"/><text x="19.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1572" width="1" height="15" fill="rgb(217,20,41)"/><text x="19.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1588" width="1" height="15" fill="rgb(236,113,47)"/><text x="19.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1604" width="1" height="15" fill="rgb(208,212,18)"/><text x="19.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1620" width="1" height="15" fill="rgb(242,197,0)"/><text x="19.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1636" width="1" height="15" fill="rgb(222,68,20)"/><text x="19.00" y="1646.50"></text></g><g><title>0x7f109aa1bffd (?) (1 samples, 0.13%)</title><rect x="16" y="1652" width="1" height="15" fill="rgb(209,18,41)"/><text x="19.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1668" width="1" height="15" fill="rgb(207,200,42)"/><text x="19.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1684" width="1" height="15" fill="rgb(230,17,20)"/><text x="19.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1700" width="1" height="15" fill="rgb(220,171,23)"/><text x="19.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1716" width="1" height="15" fill="rgb(224,107,33)"/><text x="19.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1732" width="1" height="15" fill="rgb(245,163,10)"/><text x="19.00" y="1742.50"></text></g><g><title>0x7f109a55414b (?) (1 samples, 0.13%)</title><rect x="16" y="1748" width="1" height="15" fill="rgb(251,38,5)"/><text x="19.00" y="1758.50"></text></g><g><title>0x7f109a53c1a4 (?) (1 samples, 0.13%)</title><rect x="16" y="1764" width="1" height="15" fill="rgb(207,88,9)"/><text x="19.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(206,189,31)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(212,229,21)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(236,214,23)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(211,60,16)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(230,94,11)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(244,48,11)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 0.77%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(240,190,7)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(253,74,8)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(239,39,36)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(252,102,45)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(206,180,42)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(249,228,51)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 0.77%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(211,68,1)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(229,136,3)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(230,183,34)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(251,208,54)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(243,159,24)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(213,197,34)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.39%)</title><rect x="14" y="628" width="5" height="15" fill="rgb(250,217,18)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="644" width="5" height="15" fill="rgb(205,142,44)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="660" width="5" height="15" fill="rgb(207,162,31)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="676" width="5" height="15" fill="rgb(207,109,1)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="14" y="692" width="5" height="15" fill="rgb(230,83,50)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="708" width="5" height="15" fill="rgb(224,112,1)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.39%)</title><rect x="14" y="724" width="5" height="15" fill="rgb(252,132,26)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="740" width="5" height="15" fill="rgb(209,60,23)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="756" width="5" height="15" fill="rgb(235,95,19)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="772" width="5" height="15" fill="rgb(210,29,52)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="14" y="788" width="5" height="15" fill="rgb(218,195,11)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="804" width="5" height="15" fill="rgb(226,120,33)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.39%)</title><rect x="14" y="820" width="5" height="15" fill="rgb(233,152,4)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="836" width="5" height="15" fill="rgb(245,10,30)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="852" width="5" height="15" fill="rgb(215,157,32)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(214,9,46)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(249,41,35)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(207,13,32)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.39%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(241,71,48)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(212,89,53)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(226,102,10)"/><text x="17.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(231,225,27)"/><text x="17.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(247,79,28)"/><text x="17.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(219,4,24)"/><text x="17.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.39%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(250,24,17)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(240,74,19)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="1044" width="5" height="15" fill="rgb(246,98,0)"/><text x="17.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="1060" width="5" height="15" fill="rgb(209,107,36)"/><text x="17.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.39%)</title><rect x="14" y="1076" width="5" height="15" fill="rgb(246,43,32)"/><text x="17.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.39%)</title><rect x="14" y="1092" width="5" height="15" fill="rgb(241,227,43)"/><text x="17.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.39%)</title><rect x="14" y="1108" width="5" height="15" fill="rgb(252,63,26)"/><text x="17.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(218,187,37)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(248,87,9)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(254,140,35)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(243,110,33)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(228,68,18)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(240,220,41)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(222,227,11)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.13%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(218,101,13)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(215,158,16)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(207,107,51)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(213,70,43)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(250,17,44)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(216,36,33)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(248,64,2)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(236,122,26)"/><text x="20.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.13%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(208,121,50)"/><text x="20.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.13%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(216,103,12)"/><text x="20.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.13%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(254,105,1)"/><text x="20.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.13%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(207,59,43)"/><text x="20.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.90%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(218,205,13)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.90%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(213,31,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.90%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(225,147,53)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="340" width="1" height="15" fill="rgb(234,31,2)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="356" width="1" height="15" fill="rgb(251,192,46)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="372" width="1" height="15" fill="rgb(247,164,46)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="19" y="388" width="1" height="15" fill="rgb(226,37,15)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="404" width="1" height="15" fill="rgb(210,41,3)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="420" width="1" height="15" fill="rgb(205,144,18)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="436" width="1" height="15" fill="rgb(245,184,46)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="452" width="1" height="15" fill="rgb(227,183,23)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="468" width="1" height="15" fill="rgb(227,206,23)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="484" width="1" height="15" fill="rgb(222,20,27)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="500" width="1" height="15" fill="rgb(233,192,9)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="516" width="1" height="15" fill="rgb(225,157,12)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="532" width="1" height="15" fill="rgb(210,201,47)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="548" width="1" height="15" fill="rgb(212,27,31)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="564" width="1" height="15" fill="rgb(206,117,4)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.13%)</title><rect x="19" y="580" width="1" height="15" fill="rgb(241,119,42)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="596" width="1" height="15" fill="rgb(208,145,45)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="612" width="1" height="15" fill="rgb(248,50,37)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(214,96,8)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(205,67,23)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(232,120,27)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(236,2,44)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(242,70,12)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(249,228,52)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(233,219,17)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(233,80,36)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(220,91,10)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.13%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(249,98,0)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(221,76,41)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(218,49,28)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(217,99,9)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(239,160,38)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(236,182,2)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(218,11,35)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="884" width="1" height="15" fill="rgb(224,170,54)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(217,48,10)"/><text x="22.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(219,193,36)"/><text x="22.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(217,69,16)"/><text x="22.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(254,27,12)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.13%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(218,217,20)"/><text x="22.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(206,84,0)"/><text x="22.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="996" width="1" height="15" fill="rgb(205,26,25)"/><text x="22.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1012" width="1" height="15" fill="rgb(205,165,13)"/><text x="22.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1028" width="1" height="15" fill="rgb(235,58,5)"/><text x="22.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1044" width="1" height="15" fill="rgb(248,27,38)"/><text x="22.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py) (1 samples, 0.13%)</title><rect x="19" y="1060" width="1" height="15" fill="rgb(228,117,33)"/><text x="22.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1076" width="1" height="15" fill="rgb(224,101,36)"/><text x="22.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1092" width="1" height="15" fill="rgb(249,219,32)"/><text x="22.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1108" width="1" height="15" fill="rgb(210,20,18)"/><text x="22.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1124" width="1" height="15" fill="rgb(238,57,19)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1140" width="1" height="15" fill="rgb(254,204,14)"/><text x="22.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/io/common.py) (1 samples, 0.13%)</title><rect x="19" y="1156" width="1" height="15" fill="rgb(237,147,26)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1172" width="1" height="15" fill="rgb(206,147,18)"/><text x="22.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1188" width="1" height="15" fill="rgb(216,206,19)"/><text x="22.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1204" width="1" height="15" fill="rgb(238,178,15)"/><text x="22.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1220" width="1" height="15" fill="rgb(213,33,4)"/><text x="22.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1236" width="1" height="15" fill="rgb(218,201,50)"/><text x="22.00" y="1246.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.13%)</title><rect x="19" y="1252" width="1" height="15" fill="rgb(235,133,38)"/><text x="22.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1268" width="1" height="15" fill="rgb(236,45,34)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1284" width="1" height="15" fill="rgb(242,77,12)"/><text x="22.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1300" width="1" height="15" fill="rgb(210,193,13)"/><text x="22.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1316" width="1" height="15" fill="rgb(228,87,18)"/><text x="22.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1332" width="1" height="15" fill="rgb(208,153,36)"/><text x="22.00" y="1342.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.13%)</title><rect x="19" y="1348" width="1" height="15" fill="rgb(241,150,43)"/><text x="22.00" y="1358.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.13%)</title><rect x="19" y="1364" width="1" height="15" fill="rgb(206,168,46)"/><text x="22.00" y="1374.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.13%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(222,64,47)"/><text x="22.00" y="1390.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.13%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(211,220,36)"/><text x="22.00" y="1406.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.13%)</title><rect x="19" y="1412" width="1" height="15" fill="rgb(221,166,42)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_new_ (enum.py) (1 samples, 0.13%)</title><rect x="19" y="1428" width="1" height="15" fill="rgb(246,151,9)"/><text x="22.00" y="1438.50"></text></g><g><title>EntryPoint (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(248,168,20)"/><text x="23.00" y="846.50"></text></g><g><title>compile (re.py) (1 samples, 0.13%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(221,118,24)"/><text x="23.00" y="862.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(231,113,26)"/><text x="23.00" y="878.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(220,130,35)"/><text x="23.00" y="894.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(215,77,52)"/><text x="23.00" y="910.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(208,88,52)"/><text x="23.00" y="926.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(242,44,18)"/><text x="23.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(224,147,16)"/><text x="23.00" y="958.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(212,28,5)"/><text x="23.00" y="974.50"></text></g><g><title>tell (sre_parse.py) (1 samples, 0.13%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(217,51,0)"/><text x="23.00" y="990.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(212,16,20)"/><text x="25.00" y="974.50"></text></g><g><title>isabs (ntpath.py) (1 samples, 0.13%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(207,150,20)"/><text x="25.00" y="990.50"></text></g><g><title>splitdrive (ntpath.py) (1 samples, 0.13%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(221,3,25)"/><text x="25.00" y="1006.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.13%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(222,50,15)"/><text x="25.00" y="1022.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (2 samples, 0.26%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(205,143,19)"/><text x="25.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (2 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(222,144,4)"/><text x="25.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (2 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(247,27,49)"/><text x="25.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (2 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(225,182,46)"/><text x="25.00" y="958.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.13%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(212,171,31)"/><text x="26.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.39%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(227,13,7)"/><text x="25.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.39%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(223,164,23)"/><text x="25.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="25" y="900" width="1" height="15" fill="rgb(230,181,44)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(207,193,22)"/><text x="28.00" y="926.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.52%)</title><rect x="22" y="836" width="6" height="15" fill="rgb(209,103,35)"/><text x="25.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.52%)</title><rect x="22" y="852" width="6" height="15" fill="rgb(236,70,43)"/><text x="25.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(234,38,53)"/><text x="29.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(253,219,12)"/><text x="29.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(213,1,14)"/><text x="29.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(231,97,36)"/><text x="29.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(223,203,40)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.68%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(226,176,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.68%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(233,198,52)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.68%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(228,124,49)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.68%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(243,137,43)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 1.68%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(221,76,16)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.68%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(239,21,21)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.77%)</title><rect x="20" y="292" width="9" height="15" fill="rgb(227,71,35)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="308" width="9" height="15" fill="rgb(237,41,5)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="324" width="9" height="15" fill="rgb(239,222,39)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="340" width="9" height="15" fill="rgb(236,156,15)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="20" y="356" width="9" height="15" fill="rgb(208,65,28)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="372" width="9" height="15" fill="rgb(240,212,31)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.77%)</title><rect x="20" y="388" width="9" height="15" fill="rgb(242,5,29)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="404" width="9" height="15" fill="rgb(213,221,48)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="420" width="9" height="15" fill="rgb(231,151,43)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="436" width="9" height="15" fill="rgb(241,204,52)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="20" y="452" width="9" height="15" fill="rgb(218,68,13)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="468" width="9" height="15" fill="rgb(242,43,45)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.77%)</title><rect x="20" y="484" width="9" height="15" fill="rgb(248,100,22)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="500" width="9" height="15" fill="rgb(215,89,45)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="516" width="9" height="15" fill="rgb(220,33,7)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="532" width="9" height="15" fill="rgb(231,188,1)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="20" y="548" width="9" height="15" fill="rgb(207,18,48)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="564" width="9" height="15" fill="rgb(244,110,15)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.77%)</title><rect x="20" y="580" width="9" height="15" fill="rgb(220,123,8)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="596" width="9" height="15" fill="rgb(211,91,45)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="612" width="9" height="15" fill="rgb(231,182,46)"/><text x="23.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="628" width="9" height="15" fill="rgb(232,179,44)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="644" width="9" height="15" fill="rgb(228,202,45)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="660" width="9" height="15" fill="rgb(228,205,10)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="676" width="9" height="15" fill="rgb(234,28,15)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="20" y="692" width="9" height="15" fill="rgb(234,58,22)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="708" width="9" height="15" fill="rgb(238,159,30)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.77%)</title><rect x="20" y="724" width="9" height="15" fill="rgb(251,117,51)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="740" width="9" height="15" fill="rgb(253,221,2)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="756" width="9" height="15" fill="rgb(224,147,6)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="772" width="9" height="15" fill="rgb(219,33,18)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.77%)</title><rect x="20" y="788" width="9" height="15" fill="rgb(218,150,17)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.77%)</title><rect x="20" y="804" width="9" height="15" fill="rgb(250,109,24)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.77%)</title><rect x="20" y="820" width="9" height="15" fill="rgb(222,177,54)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="836" width="1" height="15" fill="rgb(224,218,35)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="852" width="1" height="15" fill="rgb(231,112,5)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(218,123,47)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(251,167,49)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(249,38,4)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.13%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(227,20,7)"/><text x="31.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.13%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(223,119,17)"/><text x="31.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.13%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(250,164,4)"/><text x="31.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="28" y="964" width="1" height="15" fill="rgb(208,169,22)"/><text x="31.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="980" width="1" height="15" fill="rgb(218,194,0)"/><text x="31.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="996" width="1" height="15" fill="rgb(230,174,41)"/><text x="31.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="1012" width="1" height="15" fill="rgb(254,50,39)"/><text x="31.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="1028" width="1" height="15" fill="rgb(242,141,5)"/><text x="31.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="1044" width="1" height="15" fill="rgb(250,20,24)"/><text x="31.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="1060" width="1" height="15" fill="rgb(253,21,27)"/><text x="31.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="28" y="1076" width="1" height="15" fill="rgb(252,180,39)"/><text x="31.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="68" width="21" height="15" fill="rgb(243,1,2)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="84" width="21" height="15" fill="rgb(247,189,41)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="100" width="21" height="15" fill="rgb(206,78,51)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.80%)</title><rect x="10" y="116" width="21" height="15" fill="rgb(246,188,18)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="132" width="21" height="15" fill="rgb(249,62,45)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (14 samples, 1.80%)</title><rect x="10" y="148" width="21" height="15" fill="rgb(217,154,11)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="164" width="21" height="15" fill="rgb(236,160,4)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.80%)</title><rect x="10" y="180" width="21" height="15" fill="rgb(229,187,16)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="196" width="2" height="15" fill="rgb(240,204,48)"/><text x="32.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="212" width="2" height="15" fill="rgb(210,110,6)"/><text x="32.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="228" width="2" height="15" fill="rgb(220,171,50)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.13%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(231,9,10)"/><text x="32.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(224,55,39)"/><text x="32.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="276" width="2" height="15" fill="rgb(248,188,35)"/><text x="32.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="292" width="2" height="15" fill="rgb(253,21,33)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="308" width="2" height="15" fill="rgb(223,187,39)"/><text x="32.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="324" width="2" height="15" fill="rgb(228,204,31)"/><text x="32.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="340" width="2" height="15" fill="rgb(246,206,29)"/><text x="32.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="356" width="2" height="15" fill="rgb(253,192,38)"/><text x="32.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.13%)</title><rect x="29" y="372" width="2" height="15" fill="rgb(223,203,7)"/><text x="32.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="388" width="2" height="15" fill="rgb(236,71,44)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="404" width="2" height="15" fill="rgb(251,212,36)"/><text x="32.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="420" width="2" height="15" fill="rgb(208,219,14)"/><text x="32.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(223,14,28)"/><text x="32.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(216,53,14)"/><text x="32.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.13%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(207,68,18)"/><text x="32.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(251,29,46)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(235,183,52)"/><text x="32.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(245,15,11)"/><text x="32.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(252,177,19)"/><text x="32.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(209,54,43)"/><text x="32.00" y="558.50"></text></g><g><title>&lt;module&gt; (weakref.py) (1 samples, 0.13%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(206,37,52)"/><text x="32.00" y="574.50"></text></g><g><title>0x7f10c160fbc6 (libc-2.29.so) (4 samples, 0.52%)</title><rect x="90" y="132" width="6" height="15" fill="rgb(230,116,20)"/><text x="93.00" y="142.50"></text></g><g><title>0x7f10c160fbd1 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="96" y="132" width="2" height="15" fill="rgb(210,129,7)"/><text x="99.00" y="142.50"></text></g><g><title>0x7f10c160fbdf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="98" y="132" width="1" height="15" fill="rgb(242,28,37)"/><text x="101.00" y="142.50"></text></g><g><title>0x7f10c160fc00 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="99" y="132" width="2" height="15" fill="rgb(211,224,16)"/><text x="102.00" y="142.50"></text></g><g><title>0x7f10c160fc04 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="101" y="132" width="1" height="15" fill="rgb(222,210,13)"/><text x="104.00" y="142.50"></text></g><g><title>0x7f10c160fc14 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="102" y="132" width="3" height="15" fill="rgb(244,18,7)"/><text x="105.00" y="142.50"></text></g><g><title>0x7f10c160fc19 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="105" y="132" width="2" height="15" fill="rgb(206,206,2)"/><text x="108.00" y="142.50"></text></g><g><title>0x7f10c160fc1c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="107" y="132" width="1" height="15" fill="rgb(252,220,41)"/><text x="110.00" y="142.50"></text></g><g><title>0x7f10c160fc20 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="108" y="132" width="2" height="15" fill="rgb(248,77,20)"/><text x="111.00" y="142.50"></text></g><g><title>0x7f10c160fc25 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="110" y="132" width="1" height="15" fill="rgb(228,202,6)"/><text x="113.00" y="142.50"></text></g><g><title>0x7f10c160fc3d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="111" y="132" width="2" height="15" fill="rgb(243,56,3)"/><text x="114.00" y="142.50"></text></g><g><title>0x7f10c160fc49 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="113" y="132" width="1" height="15" fill="rgb(252,125,14)"/><text x="116.00" y="142.50"></text></g><g><title>0x7f10c160faaf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="116" y="148" width="1" height="15" fill="rgb(235,216,19)"/><text x="119.00" y="158.50"></text></g><g><title>0x7f10c160fc73 (libc-2.29.so) (3 samples, 0.39%)</title><rect x="114" y="132" width="5" height="15" fill="rgb(248,95,18)"/><text x="117.00" y="142.50"></text></g><g><title>0x7f10c160fb0a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="117" y="148" width="2" height="15" fill="rgb(250,47,35)"/><text x="120.00" y="158.50"></text></g><g><title>0x7f10c160faa0 (libc-2.29.so) (3 samples, 0.39%)</title><rect x="119" y="148" width="5" height="15" fill="rgb(249,184,0)"/><text x="122.00" y="158.50"></text></g><g><title>0x7f10c160fab9 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="124" y="148" width="3" height="15" fill="rgb(209,133,42)"/><text x="127.00" y="158.50"></text></g><g><title>0x7f10c1610eb0 (libc-2.29.so) (26 samples, 3.35%)</title><rect x="90" y="116" width="40" height="15" fill="rgb(237,2,37)"/><text x="93.00" y="126.50">0x7..</text></g><g><title>0x7f10c160fca7 (libc-2.29.so) (7 samples, 0.90%)</title><rect x="119" y="132" width="11" height="15" fill="rgb(248,150,5)"/><text x="122.00" y="142.50"></text></g><g><title>0x7f10c160fae2 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="127" y="148" width="3" height="15" fill="rgb(214,229,19)"/><text x="130.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="130" y="116" width="1" height="15" fill="rgb(247,188,6)"/><text x="133.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="130" y="132" width="1" height="15" fill="rgb(208,42,21)"/><text x="133.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.39%)</title><rect x="142" y="180" width="4" height="15" fill="rgb(226,66,14)"/><text x="145.00" y="190.50"></text></g><g><title>0x7f1081e79ff9 (?) (1 samples, 0.13%)</title><rect x="152" y="212" width="2" height="15" fill="rgb(216,114,44)"/><text x="155.00" y="222.50"></text></g><g><title>0x7f1081e74ef6 (?) (1 samples, 0.13%)</title><rect x="152" y="228" width="2" height="15" fill="rgb(230,172,28)"/><text x="155.00" y="238.50"></text></g><g><title>0x7f1081e69962 (?) (1 samples, 0.13%)</title><rect x="152" y="244" width="2" height="15" fill="rgb(238,96,8)"/><text x="155.00" y="254.50"></text></g><g><title>0x7f1081e9d7a7 (?) (1 samples, 0.13%)</title><rect x="152" y="260" width="2" height="15" fill="rgb(216,158,28)"/><text x="155.00" y="270.50"></text></g><g><title>0x7f1081e9d379 (?) (1 samples, 0.13%)</title><rect x="152" y="276" width="2" height="15" fill="rgb(252,66,24)"/><text x="155.00" y="286.50"></text></g><g><title>0x7f10822fb8b8 (?) (1 samples, 0.13%)</title><rect x="152" y="292" width="2" height="15" fill="rgb(205,144,18)"/><text x="155.00" y="302.50"></text></g><g><title>0x7f10822f9c7f (?) (1 samples, 0.13%)</title><rect x="152" y="308" width="2" height="15" fill="rgb(218,96,7)"/><text x="155.00" y="318.50"></text></g><g><title>0x7f108230c99c (?) (1 samples, 0.13%)</title><rect x="152" y="324" width="2" height="15" fill="rgb(242,49,12)"/><text x="155.00" y="334.50"></text></g><g><title>0x7f1082037450 (?) (1 samples, 0.13%)</title><rect x="152" y="340" width="2" height="15" fill="rgb(230,212,51)"/><text x="155.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="152" y="356" width="2" height="15" fill="rgb(229,195,32)"/><text x="155.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="152" y="372" width="2" height="15" fill="rgb(232,30,40)"/><text x="155.00" y="382.50"></text></g><g><title>0x7f10c16123d1 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="152" y="388" width="2" height="15" fill="rgb(232,229,12)"/><text x="155.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.26%)</title><rect x="154" y="212" width="3" height="15" fill="rgb(230,195,6)"/><text x="157.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="155" y="228" width="2" height="15" fill="rgb(216,95,39)"/><text x="158.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="162" y="292" width="1" height="15" fill="rgb(210,127,36)"/><text x="165.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="162" y="308" width="1" height="15" fill="rgb(221,226,29)"/><text x="165.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="163" y="292" width="3" height="15" fill="rgb(248,133,50)"/><text x="166.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="166" y="340" width="3" height="15" fill="rgb(209,10,1)"/><text x="169.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="169" y="340" width="2" height="15" fill="rgb(237,227,24)"/><text x="172.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="356" width="1" height="15" fill="rgb(209,19,32)"/><text x="215.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="372" width="1" height="15" fill="rgb(216,111,33)"/><text x="215.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="388" width="1" height="15" fill="rgb(244,168,42)"/><text x="215.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="404" width="1" height="15" fill="rgb(206,218,35)"/><text x="215.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="420" width="1" height="15" fill="rgb(251,171,37)"/><text x="215.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="212" y="436" width="1" height="15" fill="rgb(244,6,17)"/><text x="215.00" y="446.50"></text></g><g><title>0x7f10c1630db3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="236" y="372" width="2" height="15" fill="rgb(223,85,35)"/><text x="239.00" y="382.50"></text></g><g><title>0x7f10c178fe14 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="238" y="372" width="1" height="15" fill="rgb(245,108,33)"/><text x="241.00" y="382.50"></text></g><g><title>0x7f10c178fe4e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="239" y="372" width="2" height="15" fill="rgb(237,154,47)"/><text x="242.00" y="382.50"></text></g><g><title>0x7f10c178fe71 (libm-2.29.so) (5 samples, 0.64%)</title><rect x="241" y="372" width="7" height="15" fill="rgb(208,85,41)"/><text x="244.00" y="382.50"></text></g><g><title>0x7f10c178fe96 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="248" y="372" width="3" height="15" fill="rgb(225,176,8)"/><text x="251.00" y="382.50"></text></g><g><title>0x7f10c178fea2 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="251" y="372" width="3" height="15" fill="rgb(236,189,50)"/><text x="254.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 7.22%)</title><rect x="171" y="340" width="85" height="15" fill="rgb(252,66,10)"/><text x="174.00" y="350.50">onnxruntim..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.61%)</title><rect x="213" y="356" width="43" height="15" fill="rgb(240,26,16)"/><text x="216.00" y="366.50">onnx..</text></g><g><title>0x7f10c178fea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="254" y="372" width="2" height="15" fill="rgb(223,52,24)"/><text x="257.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.68%)</title><rect x="256" y="340" width="20" height="15" fill="rgb(241,115,50)"/><text x="259.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.68%)</title><rect x="256" y="356" width="20" height="15" fill="rgb(234,108,7)"/><text x="259.00" y="366.50"></text></g><g><title>0x7f10c1611b12 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="391" y="388" width="2" height="15" fill="rgb(232,28,43)"/><text x="394.00" y="398.50"></text></g><g><title>0x7f10c1611b1c (libc-2.29.so) (2 samples, 0.26%)</title><rect x="393" y="388" width="3" height="15" fill="rgb(243,96,28)"/><text x="396.00" y="398.50"></text></g><g><title>0x7f10c1611b24 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="396" y="388" width="1" height="15" fill="rgb(239,227,6)"/><text x="399.00" y="398.50"></text></g><g><title>0x7f10c1611b39 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="397" y="388" width="2" height="15" fill="rgb(240,207,48)"/><text x="400.00" y="398.50"></text></g><g><title>0x7f10c1611b49 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="399" y="388" width="1" height="15" fill="rgb(214,34,49)"/><text x="402.00" y="398.50"></text></g><g><title>0x7f10c1611d27 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="400" y="388" width="2" height="15" fill="rgb(214,0,16)"/><text x="403.00" y="398.50"></text></g><g><title>0x7f10c1611d48 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="402" y="388" width="3" height="15" fill="rgb(235,61,40)"/><text x="405.00" y="398.50"></text></g><g><title>0x7f10c1611d54 (libc-2.29.so) (3 samples, 0.39%)</title><rect x="405" y="388" width="4" height="15" fill="rgb(226,74,43)"/><text x="408.00" y="398.50"></text></g><g><title>0x7f10c1611d67 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="409" y="388" width="3" height="15" fill="rgb(217,40,31)"/><text x="412.00" y="398.50"></text></g><g><title>0x7f10c1611d81 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="412" y="388" width="2" height="15" fill="rgb(219,25,46)"/><text x="415.00" y="398.50"></text></g><g><title>0x7f10c1611d8d (libc-2.29.so) (3 samples, 0.39%)</title><rect x="414" y="388" width="5" height="15" fill="rgb(242,207,29)"/><text x="417.00" y="398.50"></text></g><g><title>0x7f10c1611dd2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="419" y="388" width="1" height="15" fill="rgb(216,60,51)"/><text x="422.00" y="398.50"></text></g><g><title>0x7f10c1611e07 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="420" y="388" width="3" height="15" fill="rgb(241,31,5)"/><text x="423.00" y="398.50"></text></g><g><title>0x7f10c1611fdd (libc-2.29.so) (1 samples, 0.13%)</title><rect x="423" y="388" width="2" height="15" fill="rgb(205,218,32)"/><text x="426.00" y="398.50"></text></g><g><title>0x7f10c1611fde (libc-2.29.so) (2 samples, 0.26%)</title><rect x="425" y="388" width="3" height="15" fill="rgb(231,23,34)"/><text x="428.00" y="398.50"></text></g><g><title>0x7f10c1611fe2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="428" y="388" width="1" height="15" fill="rgb(253,226,32)"/><text x="431.00" y="398.50"></text></g><g><title>0x7f10c1611fe6 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="429" y="388" width="3" height="15" fill="rgb(235,39,42)"/><text x="432.00" y="398.50"></text></g><g><title>0x7f10c1612050 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="432" y="388" width="2" height="15" fill="rgb(254,178,47)"/><text x="435.00" y="398.50"></text></g><g><title>0x7f10c1612064 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="434" y="388" width="1" height="15" fill="rgb(246,90,0)"/><text x="437.00" y="398.50"></text></g><g><title>0x7f10c161207f (libc-2.29.so) (2 samples, 0.26%)</title><rect x="435" y="388" width="3" height="15" fill="rgb(233,90,23)"/><text x="438.00" y="398.50"></text></g><g><title>0x7f10c161208c (libc-2.29.so) (2 samples, 0.26%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(248,41,51)"/><text x="441.00" y="398.50"></text></g><g><title>0x7f10c1612097 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="441" y="388" width="3" height="15" fill="rgb(225,131,18)"/><text x="444.00" y="398.50"></text></g><g><title>0x7f10c16123d1 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="444" y="388" width="2" height="15" fill="rgb(243,125,2)"/><text x="447.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (87 samples, 11.21%)</title><rect x="315" y="356" width="132" height="15" fill="rgb(233,63,51)"/><text x="318.00" y="366.50">operator new (li..</text></g><g><title>malloc (libc-2.29.so) (85 samples, 10.95%)</title><rect x="318" y="372" width="129" height="15" fill="rgb(215,3,30)"/><text x="321.00" y="382.50">malloc (libc-2.2..</text></g><g><title>0x7f10c1612514 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="446" y="388" width="1" height="15" fill="rgb(205,137,27)"/><text x="449.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="356" width="2" height="15" fill="rgb(213,151,20)"/><text x="450.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.52%)</title><rect x="449" y="356" width="6" height="15" fill="rgb(208,132,11)"/><text x="452.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="454" y="372" width="1" height="15" fill="rgb(229,143,48)"/><text x="457.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.64%)</title><rect x="455" y="356" width="8" height="15" fill="rgb(212,60,36)"/><text x="458.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (201 samples, 25.90%)</title><rect x="160" y="260" width="306" height="15" fill="rgb(237,176,54)"/><text x="163.00" y="270.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (200 samples, 25.77%)</title><rect x="162" y="276" width="304" height="15" fill="rgb(210,158,34)"/><text x="165.00" y="286.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 25.39%)</title><rect x="166" y="292" width="300" height="15" fill="rgb(207,109,43)"/><text x="169.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 25.39%)</title><rect x="166" y="308" width="300" height="15" fill="rgb(207,69,7)"/><text x="169.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 25.39%)</title><rect x="166" y="324" width="300" height="15" fill="rgb(240,169,34)"/><text x="169.00" y="334.50">onnxruntime::SequentialExecutor::Execute..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 16.11%)</title><rect x="276" y="340" width="190" height="15" fill="rgb(253,172,29)"/><text x="279.00" y="350.50">onnxruntime::ml::ZipMapO..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="463" y="356" width="3" height="15" fill="rgb(208,11,13)"/><text x="466.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="466" y="260" width="1" height="15" fill="rgb(246,123,32)"/><text x="469.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 4.12%)</title><rect x="601" y="276" width="49" height="15" fill="rgb(235,58,20)"/><text x="604.00" y="286.50">pybi..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 16.24%)</title><rect x="467" y="260" width="192" height="15" fill="rgb(208,73,36)"/><text x="470.00" y="270.50">pybind11::detail::map_cas..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.77%)</title><rect x="650" y="276" width="9" height="15" fill="rgb(254,220,30)"/><text x="653.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="276" width="1" height="15" fill="rgb(225,87,30)"/><text x="662.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="292" width="1" height="15" fill="rgb(209,2,6)"/><text x="662.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="308" width="1" height="15" fill="rgb(244,127,53)"/><text x="662.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="324" width="1" height="15" fill="rgb(229,225,2)"/><text x="662.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="340" width="1" height="15" fill="rgb(231,112,34)"/><text x="662.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="356" width="1" height="15" fill="rgb(208,162,42)"/><text x="662.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="659" y="372" width="1" height="15" fill="rgb(228,176,13)"/><text x="662.00" y="382.50"></text></g><g><title>0x7f10c161090e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="666" y="292" width="2" height="15" fill="rgb(215,224,52)"/><text x="669.00" y="302.50"></text></g><g><title>0x7f10c161091e (libc-2.29.so) (3 samples, 0.39%)</title><rect x="668" y="292" width="4" height="15" fill="rgb(234,117,3)"/><text x="671.00" y="302.50"></text></g><g><title>0x7f10c161092c (libc-2.29.so) (2 samples, 0.26%)</title><rect x="672" y="292" width="4" height="15" fill="rgb(252,111,51)"/><text x="675.00" y="302.50"></text></g><g><title>0x7f10c1610945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="676" y="292" width="1" height="15" fill="rgb(213,96,13)"/><text x="679.00" y="302.50"></text></g><g><title>0x7f10c16109b3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="677" y="292" width="2" height="15" fill="rgb(242,226,18)"/><text x="680.00" y="302.50"></text></g><g><title>0x7f10c16109d3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="679" y="292" width="1" height="15" fill="rgb(205,213,54)"/><text x="682.00" y="302.50"></text></g><g><title>0x7f10c1610cf0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="680" y="292" width="2" height="15" fill="rgb(221,98,40)"/><text x="683.00" y="302.50"></text></g><g><title>0x7f10c1610d02 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="682" y="292" width="1" height="15" fill="rgb(240,120,37)"/><text x="685.00" y="302.50"></text></g><g><title>0x7f10c1610d07 (libc-2.29.so) (8 samples, 1.03%)</title><rect x="683" y="292" width="12" height="15" fill="rgb(244,127,43)"/><text x="686.00" y="302.50"></text></g><g><title>0x7f10c1610d13 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="695" y="292" width="3" height="15" fill="rgb(207,5,10)"/><text x="698.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.52%)</title><rect x="698" y="292" width="6" height="15" fill="rgb(213,147,26)"/><text x="701.00" y="302.50"></text></g><g><title>0x7f1081e410f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="711" y="308" width="1" height="15" fill="rgb(253,201,51)"/><text x="714.00" y="318.50"></text></g><g><title>0x7f10c1610982 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="712" y="308" width="3" height="15" fill="rgb(224,206,30)"/><text x="715.00" y="318.50"></text></g><g><title>0x7f10c161099b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="715" y="308" width="2" height="15" fill="rgb(208,23,30)"/><text x="718.00" y="318.50"></text></g><g><title>0x7f10c16109ed (libc-2.29.so) (3 samples, 0.39%)</title><rect x="717" y="308" width="4" height="15" fill="rgb(253,7,51)"/><text x="720.00" y="318.50"></text></g><g><title>0x7f10c1610d07 (libc-2.29.so) (11 samples, 1.42%)</title><rect x="721" y="308" width="17" height="15" fill="rgb(228,170,20)"/><text x="724.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.26%)</title><rect x="738" y="308" width="3" height="15" fill="rgb(208,82,39)"/><text x="741.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="741" y="308" width="1" height="15" fill="rgb(229,93,9)"/><text x="744.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (469 samples, 60.44%)</title><rect x="31" y="68" width="713" height="15" fill="rgb(231,16,29)"/><text x="34.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (469 samples, 60.44%)</title><rect x="31" y="84" width="713" height="15" fill="rgb(240,145,54)"/><text x="34.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (469 samples, 60.44%)</title><rect x="31" y="100" width="713" height="15" fill="rgb(248,201,11)"/><text x="34.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (403 samples, 51.93%)</title><rect x="131" y="116" width="613" height="15" fill="rgb(247,210,48)"/><text x="134.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (402 samples, 51.80%)</title><rect x="133" y="132" width="611" height="15" fill="rgb(209,47,39)"/><text x="136.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (402 samples, 51.80%)</title><rect x="133" y="148" width="611" height="15" fill="rgb(232,14,0)"/><text x="136.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (400 samples, 51.55%)</title><rect x="136" y="164" width="608" height="15" fill="rgb(237,57,40)"/><text x="139.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (393 samples, 50.64%)</title><rect x="146" y="180" width="598" height="15" fill="rgb(230,37,36)"/><text x="149.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (392 samples, 50.52%)</title><rect x="148" y="196" width="596" height="15" fill="rgb(245,135,9)"/><text x="151.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 49.74%)</title><rect x="157" y="212" width="587" height="15" fill="rgb(244,84,31)"/><text x="160.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state...</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 49.74%)</title><rect x="157" y="228" width="587" height="15" fill="rgb(220,15,45)"/><text x="160.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 49.74%)</title><rect x="157" y="244" width="587" height="15" fill="rgb(222,80,10)"/><text x="160.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::I..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 7.22%)</title><rect x="659" y="260" width="85" height="15" fill="rgb(227,68,36)"/><text x="662.00" y="270.50">std::vecto..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 7.09%)</title><rect x="660" y="276" width="84" height="15" fill="rgb(241,66,29)"/><text x="663.00" y="286.50">onnxrunti..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 3.35%)</title><rect x="704" y="292" width="40" height="15" fill="rgb(220,116,49)"/><text x="707.00" y="302.50">std..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(244,37,48)"/><text x="745.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="774" y="196" width="2" height="15" fill="rgb(231,32,37)"/><text x="777.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.13%)</title><rect x="776" y="212" width="1" height="15" fill="rgb(217,182,14)"/><text x="779.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.13%)</title><rect x="776" y="228" width="1" height="15" fill="rgb(231,137,1)"/><text x="779.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.13%)</title><rect x="776" y="244" width="1" height="15" fill="rgb(225,194,42)"/><text x="779.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.13%)</title><rect x="776" y="260" width="1" height="15" fill="rgb(254,184,47)"/><text x="779.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.13%)</title><rect x="776" y="276" width="1" height="15" fill="rgb(220,163,40)"/><text x="779.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.13%)</title><rect x="776" y="292" width="1" height="15" fill="rgb(245,226,34)"/><text x="779.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.13%)</title><rect x="776" y="308" width="1" height="15" fill="rgb(210,214,16)"/><text x="779.00" y="318.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.39%)</title><rect x="782" y="340" width="5" height="15" fill="rgb(234,176,48)"/><text x="785.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="787" y="340" width="1" height="15" fill="rgb(218,195,18)"/><text x="790.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="787" y="356" width="1" height="15" fill="rgb(246,103,44)"/><text x="790.00" y="366.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 0.90%)</title><rect x="779" y="276" width="11" height="15" fill="rgb(244,71,41)"/><text x="782.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 0.90%)</title><rect x="779" y="292" width="11" height="15" fill="rgb(234,92,40)"/><text x="782.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (7 samples, 0.90%)</title><rect x="779" y="308" width="11" height="15" fill="rgb(252,60,4)"/><text x="782.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (7 samples, 0.90%)</title><rect x="779" y="324" width="11" height="15" fill="rgb(230,22,32)"/><text x="782.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(217,87,36)"/><text x="791.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="788" y="356" width="2" height="15" fill="rgb(249,199,44)"/><text x="791.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="788" y="372" width="2" height="15" fill="rgb(232,207,2)"/><text x="791.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="788" y="388" width="2" height="15" fill="rgb(214,209,13)"/><text x="791.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="788" y="404" width="2" height="15" fill="rgb(249,206,12)"/><text x="791.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="788" y="420" width="2" height="15" fill="rgb(249,124,50)"/><text x="791.00" y="430.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 1.03%)</title><rect x="779" y="244" width="12" height="15" fill="rgb(227,7,34)"/><text x="782.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.03%)</title><rect x="779" y="260" width="12" height="15" fill="rgb(224,78,41)"/><text x="782.00" y="270.50"></text></g><g><title>npy_cache_import (npy_import.h) (1 samples, 0.13%)</title><rect x="790" y="276" width="1" height="15" fill="rgb(207,85,27)"/><text x="793.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.64%)</title><rect x="794" y="276" width="8" height="15" fill="rgb(244,19,45)"/><text x="797.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 0.64%)</title><rect x="794" y="292" width="8" height="15" fill="rgb(227,14,54)"/><text x="797.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 0.64%)</title><rect x="794" y="308" width="8" height="15" fill="rgb(243,198,9)"/><text x="797.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 0.64%)</title><rect x="794" y="324" width="8" height="15" fill="rgb(242,77,4)"/><text x="797.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (5 samples, 0.64%)</title><rect x="794" y="340" width="8" height="15" fill="rgb(230,70,8)"/><text x="797.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.64%)</title><rect x="794" y="356" width="8" height="15" fill="rgb(217,144,12)"/><text x="797.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.52%)</title><rect x="796" y="372" width="6" height="15" fill="rgb(253,61,44)"/><text x="799.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.52%)</title><rect x="796" y="388" width="6" height="15" fill="rgb(230,62,23)"/><text x="799.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (18 samples, 2.32%)</title><rect x="791" y="244" width="27" height="15" fill="rgb(207,132,38)"/><text x="794.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (16 samples, 2.06%)</title><rect x="794" y="260" width="24" height="15" fill="rgb(226,13,6)"/><text x="797.00" y="270.50">d..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.42%)</title><rect x="802" y="276" width="16" height="15" fill="rgb(249,223,16)"/><text x="805.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="820" y="276" width="2" height="15" fill="rgb(253,46,10)"/><text x="823.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="820" y="292" width="2" height="15" fill="rgb(246,214,16)"/><text x="823.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.13%)</title><rect x="822" y="308" width="1" height="15" fill="rgb(241,210,10)"/><text x="825.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="822" y="324" width="1" height="15" fill="rgb(223,36,25)"/><text x="825.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="822" y="340" width="1" height="15" fill="rgb(208,144,30)"/><text x="825.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.13%)</title><rect x="822" y="356" width="1" height="15" fill="rgb(242,201,43)"/><text x="825.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="823" y="308" width="2" height="15" fill="rgb(220,217,25)"/><text x="826.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.13%)</title><rect x="823" y="324" width="2" height="15" fill="rgb(217,171,6)"/><text x="826.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.13%)</title><rect x="823" y="340" width="2" height="15" fill="rgb(231,46,7)"/><text x="826.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.13%)</title><rect x="823" y="356" width="2" height="15" fill="rgb(224,69,46)"/><text x="826.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.13%)</title><rect x="823" y="372" width="2" height="15" fill="rgb(219,75,25)"/><text x="826.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="825" y="324" width="1" height="15" fill="rgb(249,121,27)"/><text x="828.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="825" y="340" width="1" height="15" fill="rgb(244,36,43)"/><text x="828.00" y="350.50"></text></g><g><title>0x7f10c1630d97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="829" y="356" width="2" height="15" fill="rgb(253,154,17)"/><text x="832.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.64%)</title><rect x="825" y="308" width="7" height="15" fill="rgb(244,3,23)"/><text x="828.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.52%)</title><rect x="826" y="324" width="6" height="15" fill="rgb(222,28,50)"/><text x="829.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.52%)</title><rect x="826" y="340" width="6" height="15" fill="rgb(236,172,37)"/><text x="829.00" y="350.50"></text></g><g><title>0x7f10c1630dbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="831" y="356" width="1" height="15" fill="rgb(223,49,49)"/><text x="834.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.03%)</title><rect x="822" y="292" width="12" height="15" fill="rgb(244,155,3)"/><text x="825.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="832" y="308" width="2" height="15" fill="rgb(236,182,38)"/><text x="835.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="832" y="324" width="2" height="15" fill="rgb(232,123,49)"/><text x="835.00" y="334.50"></text></g><g><title>0x7f10a3a37204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.26%)</title><rect x="834" y="324" width="3" height="15" fill="rgb(212,173,53)"/><text x="837.00" y="334.50"></text></g><g><title>0x7f10a39f5890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.26%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(240,225,21)"/><text x="840.00" y="350.50"></text></g><g><title>0x7f10a3b40c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="840" y="340" width="1" height="15" fill="rgb(253,140,8)"/><text x="843.00" y="350.50"></text></g><g><title>0x7f10c175c1a0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="852" y="356" width="1" height="15" fill="rgb(245,169,17)"/><text x="855.00" y="366.50"></text></g><g><title>0x7f10c178fe00 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="853" y="356" width="3" height="15" fill="rgb(217,52,44)"/><text x="856.00" y="366.50"></text></g><g><title>0x7f10c178fe0e (libm-2.29.so) (2 samples, 0.26%)</title><rect x="856" y="356" width="4" height="15" fill="rgb(207,187,41)"/><text x="859.00" y="366.50"></text></g><g><title>0x7f10c178fe4e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="860" y="356" width="1" height="15" fill="rgb(250,211,35)"/><text x="863.00" y="366.50"></text></g><g><title>0x7f10c178fe62 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="861" y="356" width="3" height="15" fill="rgb(220,122,37)"/><text x="864.00" y="366.50"></text></g><g><title>0x7f10c178fe71 (libm-2.29.so) (3 samples, 0.39%)</title><rect x="864" y="356" width="5" height="15" fill="rgb(226,90,5)"/><text x="867.00" y="366.50"></text></g><g><title>0x7f10c178fe7e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="869" y="356" width="1" height="15" fill="rgb(253,15,42)"/><text x="872.00" y="366.50"></text></g><g><title>0x7f10a3a37214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.09%)</title><rect x="837" y="324" width="36" height="15" fill="rgb(239,148,51)"/><text x="840.00" y="334.50">0x7..</text></g><g><title>expf (libm-2.29.so) (21 samples, 2.71%)</title><rect x="841" y="340" width="32" height="15" fill="rgb(248,51,8)"/><text x="844.00" y="350.50">ex..</text></g><g><title>0x7f10c178fea6 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="870" y="356" width="3" height="15" fill="rgb(232,40,38)"/><text x="873.00" y="366.50"></text></g><g><title>0x7f10a3a1533d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (29 samples, 3.74%)</title><rect x="834" y="308" width="44" height="15" fill="rgb(206,48,45)"/><text x="837.00" y="318.50">0x7f..</text></g><g><title>0x7f10a3a37228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.39%)</title><rect x="873" y="324" width="5" height="15" fill="rgb(212,172,0)"/><text x="876.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 4.90%)</title><rect x="822" y="276" width="57" height="15" fill="rgb(231,219,3)"/><text x="825.00" y="286.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 3.87%)</title><rect x="834" y="292" width="45" height="15" fill="rgb(211,74,49)"/><text x="837.00" y="302.50">triv..</text></g><g><title>0x7f10a3a15345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="878" y="308" width="1" height="15" fill="rgb(240,72,28)"/><text x="881.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.13%)</title><rect x="879" y="276" width="2" height="15" fill="rgb(236,141,39)"/><text x="882.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.13%)</title><rect x="879" y="292" width="2" height="15" fill="rgb(251,165,3)"/><text x="882.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 5.41%)</title><rect x="820" y="260" width="64" height="15" fill="rgb(232,151,47)"/><text x="823.00" y="270.50">PyUFunc..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.26%)</title><rect x="881" y="276" width="3" height="15" fill="rgb(213,137,13)"/><text x="884.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.26%)</title><rect x="881" y="292" width="3" height="15" fill="rgb(248,112,1)"/><text x="884.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.26%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(211,200,43)"/><text x="884.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (70 samples, 9.02%)</title><rect x="779" y="228" width="106" height="15" fill="rgb(206,51,12)"/><text x="782.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (44 samples, 5.67%)</title><rect x="818" y="244" width="67" height="15" fill="rgb(210,163,8)"/><text x="821.00" y="254.50">ufunc_g..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.13%)</title><rect x="884" y="260" width="1" height="15" fill="rgb(247,154,13)"/><text x="887.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="890" y="324" width="1" height="15" fill="rgb(214,49,36)"/><text x="893.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="890" y="340" width="1" height="15" fill="rgb(237,15,52)"/><text x="893.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.13%)</title><rect x="890" y="356" width="1" height="15" fill="rgb(214,135,15)"/><text x="893.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="895" y="372" width="1" height="15" fill="rgb(208,69,30)"/><text x="898.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="896" y="372" width="2" height="15" fill="rgb(250,89,15)"/><text x="899.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.13%)</title><rect x="898" y="372" width="1" height="15" fill="rgb(205,153,34)"/><text x="901.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.13%)</title><rect x="898" y="388" width="1" height="15" fill="rgb(236,57,25)"/><text x="901.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="898" y="404" width="1" height="15" fill="rgb(210,214,45)"/><text x="901.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="898" y="420" width="1" height="15" fill="rgb(211,78,39)"/><text x="901.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="898" y="436" width="1" height="15" fill="rgb(235,90,5)"/><text x="901.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 0.77%)</title><rect x="904" y="388" width="9" height="15" fill="rgb(221,194,13)"/><text x="907.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.13%)</title><rect x="911" y="404" width="2" height="15" fill="rgb(224,183,45)"/><text x="914.00" y="414.50"></text></g><g><title>array_sum (methods.c) (22 samples, 2.84%)</title><rect x="890" y="260" width="33" height="15" fill="rgb(234,54,18)"/><text x="893.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (22 samples, 2.84%)</title><rect x="890" y="276" width="33" height="15" fill="rgb(250,125,15)"/><text x="893.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (22 samples, 2.84%)</title><rect x="890" y="292" width="33" height="15" fill="rgb(210,57,12)"/><text x="893.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (22 samples, 2.84%)</title><rect x="890" y="308" width="33" height="15" fill="rgb(239,110,24)"/><text x="893.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (21 samples, 2.71%)</title><rect x="891" y="324" width="32" height="15" fill="rgb(219,113,13)"/><text x="894.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (19 samples, 2.45%)</title><rect x="895" y="340" width="28" height="15" fill="rgb(223,60,26)"/><text x="898.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (19 samples, 2.45%)</title><rect x="895" y="356" width="28" height="15" fill="rgb(253,115,21)"/><text x="898.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (16 samples, 2.06%)</title><rect x="899" y="372" width="24" height="15" fill="rgb(215,177,3)"/><text x="902.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 0.90%)</title><rect x="913" y="388" width="10" height="15" fill="rgb(232,42,3)"/><text x="916.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="923" y="340" width="2" height="15" fill="rgb(242,190,4)"/><text x="926.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.26%)</title><rect x="923" y="308" width="3" height="15" fill="rgb(242,53,16)"/><text x="926.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.26%)</title><rect x="923" y="324" width="3" height="15" fill="rgb(228,55,51)"/><text x="926.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="925" y="340" width="1" height="15" fill="rgb(231,51,14)"/><text x="928.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="925" y="356" width="1" height="15" fill="rgb(229,146,6)"/><text x="928.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="925" y="372" width="1" height="15" fill="rgb(231,21,23)"/><text x="928.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="925" y="388" width="1" height="15" fill="rgb(231,194,42)"/><text x="928.00" y="398.50"></text></g><g><title>_mm_div_ps (xmmintrin.h) (1 samples, 0.13%)</title><rect x="926" y="372" width="2" height="15" fill="rgb(217,0,37)"/><text x="929.00" y="382.50"></text></g><g><title>FLOAT_divide (loops.c.src) (4 samples, 0.52%)</title><rect x="926" y="324" width="7" height="15" fill="rgb(214,36,15)"/><text x="929.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (4 samples, 0.52%)</title><rect x="926" y="340" width="7" height="15" fill="rgb(206,194,46)"/><text x="929.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (4 samples, 0.52%)</title><rect x="926" y="356" width="7" height="15" fill="rgb(205,71,28)"/><text x="929.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (3 samples, 0.39%)</title><rect x="928" y="372" width="5" height="15" fill="rgb(225,202,48)"/><text x="931.00" y="382.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.13%)</title><rect x="933" y="324" width="1" height="15" fill="rgb(224,117,40)"/><text x="936.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.93%)</title><rect x="923" y="292" width="23" height="15" fill="rgb(205,176,26)"/><text x="926.00" y="302.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 1.68%)</title><rect x="926" y="308" width="20" height="15" fill="rgb(217,44,29)"/><text x="929.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (8 samples, 1.03%)</title><rect x="934" y="324" width="12" height="15" fill="rgb(206,127,42)"/><text x="937.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (8 samples, 1.03%)</title><rect x="934" y="340" width="12" height="15" fill="rgb(234,69,16)"/><text x="937.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 1.03%)</title><rect x="934" y="356" width="12" height="15" fill="rgb(229,95,5)"/><text x="937.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 0.77%)</title><rect x="937" y="372" width="9" height="15" fill="rgb(216,223,11)"/><text x="940.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.13%)</title><rect x="946" y="292" width="2" height="15" fill="rgb(232,89,0)"/><text x="949.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (133 samples, 17.14%)</title><rect x="747" y="132" width="202" height="15" fill="rgb(208,130,28)"/><text x="750.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (133 samples, 17.14%)</title><rect x="747" y="148" width="202" height="15" fill="rgb(212,20,14)"/><text x="750.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (132 samples, 17.01%)</title><rect x="749" y="164" width="200" height="15" fill="rgb(220,155,4)"/><text x="752.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (128 samples, 16.49%)</title><rect x="755" y="180" width="194" height="15" fill="rgb(209,28,19)"/><text x="758.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (114 samples, 14.69%)</title><rect x="776" y="196" width="173" height="15" fill="rgb(254,26,20)"/><text x="779.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (113 samples, 14.56%)</title><rect x="777" y="212" width="172" height="15" fill="rgb(223,75,2)"/><text x="780.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (42 samples, 5.41%)</title><rect x="885" y="228" width="64" height="15" fill="rgb(208,112,3)"/><text x="888.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (42 samples, 5.41%)</title><rect x="885" y="244" width="64" height="15" fill="rgb(230,71,38)"/><text x="888.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 2.19%)</title><rect x="923" y="260" width="26" height="15" fill="rgb(245,188,36)"/><text x="926.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 2.19%)</title><rect x="923" y="276" width="26" height="15" fill="rgb(205,112,48)"/><text x="926.00" y="286.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="948" y="292" width="1" height="15" fill="rgb(235,11,48)"/><text x="951.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="948" y="308" width="1" height="15" fill="rgb(228,104,17)"/><text x="951.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (136 samples, 17.53%)</title><rect x="744" y="100" width="207" height="15" fill="rgb(251,32,0)"/><text x="747.00" y="110.50">profile (bench_LogisticRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (135 samples, 17.40%)</title><rect x="745" y="116" width="206" height="15" fill="rgb(234,157,17)"/><text x="748.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.13%)</title><rect x="949" y="132" width="2" height="15" fill="rgb(223,172,46)"/><text x="952.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (137 samples, 17.65%)</title><rect x="744" y="68" width="208" height="15" fill="rgb(233,74,26)"/><text x="747.00" y="78.50">profile_pyrt (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (137 samples, 17.65%)</title><rect x="744" y="84" width="208" height="15" fill="rgb(245,100,54)"/><text x="747.00" y="94.50">setup_profile (bench_Logist..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="951" y="100" width="1" height="15" fill="rgb(250,212,54)"/><text x="954.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="951" y="116" width="1" height="15" fill="rgb(236,135,44)"/><text x="954.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="951" y="132" width="1" height="15" fill="rgb(214,154,13)"/><text x="954.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="951" y="148" width="1" height="15" fill="rgb(234,0,51)"/><text x="954.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="951" y="164" width="1" height="15" fill="rgb(218,39,15)"/><text x="954.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="951" y="180" width="1" height="15" fill="rgb(253,143,49)"/><text x="954.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.13%)</title><rect x="951" y="196" width="1" height="15" fill="rgb(206,155,20)"/><text x="954.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="212" width="1" height="15" fill="rgb(219,144,15)"/><text x="954.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="228" width="1" height="15" fill="rgb(207,148,32)"/><text x="954.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="244" width="1" height="15" fill="rgb(239,85,54)"/><text x="954.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="951" y="260" width="1" height="15" fill="rgb(230,94,35)"/><text x="954.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="276" width="1" height="15" fill="rgb(237,45,44)"/><text x="954.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.13%)</title><rect x="951" y="292" width="1" height="15" fill="rgb(252,18,17)"/><text x="954.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="308" width="1" height="15" fill="rgb(246,169,30)"/><text x="954.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="324" width="1" height="15" fill="rgb(251,126,40)"/><text x="954.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="340" width="1" height="15" fill="rgb(213,226,24)"/><text x="954.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="951" y="356" width="1" height="15" fill="rgb(231,168,24)"/><text x="954.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="372" width="1" height="15" fill="rgb(218,75,52)"/><text x="954.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.13%)</title><rect x="951" y="388" width="1" height="15" fill="rgb(254,224,15)"/><text x="954.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="404" width="1" height="15" fill="rgb(235,156,31)"/><text x="954.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="420" width="1" height="15" fill="rgb(209,136,17)"/><text x="954.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="436" width="1" height="15" fill="rgb(235,160,9)"/><text x="954.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="951" y="452" width="1" height="15" fill="rgb(226,187,2)"/><text x="954.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="951" y="468" width="1" height="15" fill="rgb(224,28,52)"/><text x="954.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.13%)</title><rect x="951" y="484" width="1" height="15" fill="rgb(222,54,42)"/><text x="954.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.13%)</title><rect x="951" y="500" width="1" height="15" fill="rgb(248,180,50)"/><text x="954.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="951" y="516" width="1" height="15" fill="rgb(238,112,17)"/><text x="954.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="951" y="532" width="1" height="15" fill="rgb(242,228,6)"/><text x="954.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="951" y="548" width="1" height="15" fill="rgb(246,7,20)"/><text x="954.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="951" y="564" width="1" height="15" fill="rgb(220,201,3)"/><text x="954.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.13%)</title><rect x="951" y="580" width="1" height="15" fill="rgb(216,159,39)"/><text x="954.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="596" width="1" height="15" fill="rgb(208,84,4)"/><text x="954.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.13%)</title><rect x="951" y="612" width="1" height="15" fill="rgb(217,7,44)"/><text x="954.00" y="622.50"></text></g><g><title>pull_dependencies (jinja2/compiler.py) (1 samples, 0.13%)</title><rect x="951" y="628" width="1" height="15" fill="rgb(205,113,50)"/><text x="954.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="644" width="1" height="15" fill="rgb(213,178,10)"/><text x="954.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="660" width="1" height="15" fill="rgb(225,178,4)"/><text x="954.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="676" width="1" height="15" fill="rgb(210,127,45)"/><text x="954.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="692" width="1" height="15" fill="rgb(231,186,48)"/><text x="954.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="708" width="1" height="15" fill="rgb(226,60,45)"/><text x="954.00" y="718.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="724" width="1" height="15" fill="rgb(238,52,26)"/><text x="954.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="740" width="1" height="15" fill="rgb(251,117,52)"/><text x="954.00" y="750.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="756" width="1" height="15" fill="rgb(233,164,15)"/><text x="954.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="772" width="1" height="15" fill="rgb(247,47,21)"/><text x="954.00" y="782.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="788" width="1" height="15" fill="rgb(231,5,39)"/><text x="954.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.13%)</title><rect x="951" y="804" width="1" height="15" fill="rgb(205,147,42)"/><text x="954.00" y="814.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.26%)</title><rect x="969" y="244" width="3" height="15" fill="rgb(213,60,9)"/><text x="972.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.26%)</title><rect x="969" y="260" width="3" height="15" fill="rgb(240,96,41)"/><text x="972.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.26%)</title><rect x="969" y="276" width="3" height="15" fill="rgb(218,178,5)"/><text x="972.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.26%)</title><rect x="969" y="292" width="3" height="15" fill="rgb(230,75,15)"/><text x="972.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.26%)</title><rect x="969" y="308" width="3" height="15" fill="rgb(231,142,14)"/><text x="972.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="972" y="308" width="2" height="15" fill="rgb(207,142,49)"/><text x="975.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="974" y="308" width="1" height="15" fill="rgb(226,119,27)"/><text x="977.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.39%)</title><rect x="972" y="292" width="5" height="15" fill="rgb(248,116,12)"/><text x="975.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.13%)</title><rect x="975" y="308" width="2" height="15" fill="rgb(220,144,7)"/><text x="978.00" y="318.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.13%)</title><rect x="977" y="324" width="1" height="15" fill="rgb(213,144,17)"/><text x="980.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.13%)</title><rect x="978" y="340" width="2" height="15" fill="rgb(214,79,6)"/><text x="981.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.39%)</title><rect x="977" y="292" width="4" height="15" fill="rgb(210,131,5)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.39%)</title><rect x="977" y="308" width="4" height="15" fill="rgb(218,167,45)"/><text x="980.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.26%)</title><rect x="978" y="324" width="3" height="15" fill="rgb(228,169,9)"/><text x="981.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="980" y="340" width="1" height="15" fill="rgb(242,137,42)"/><text x="983.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (6 samples, 0.77%)</title><rect x="987" y="308" width="9" height="15" fill="rgb(237,106,31)"/><text x="990.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.64%)</title><rect x="989" y="324" width="7" height="15" fill="rgb(211,21,3)"/><text x="992.00" y="334.50"></text></g><g><title>array_sum (methods.c) (24 samples, 3.09%)</title><rect x="963" y="180" width="36" height="15" fill="rgb(232,1,23)"/><text x="966.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (23 samples, 2.96%)</title><rect x="964" y="196" width="35" height="15" fill="rgb(209,95,41)"/><text x="967.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (20 samples, 2.58%)</title><rect x="969" y="212" width="30" height="15" fill="rgb(247,191,5)"/><text x="972.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (20 samples, 2.58%)</title><rect x="969" y="228" width="30" height="15" fill="rgb(236,200,20)"/><text x="972.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 2.32%)</title><rect x="972" y="244" width="27" height="15" fill="rgb(220,110,44)"/><text x="975.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (18 samples, 2.32%)</title><rect x="972" y="260" width="27" height="15" fill="rgb(247,14,4)"/><text x="975.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 2.32%)</title><rect x="972" y="276" width="27" height="15" fill="rgb(253,155,12)"/><text x="975.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (12 samples, 1.55%)</title><rect x="981" y="292" width="18" height="15" fill="rgb(229,166,18)"/><text x="984.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.26%)</title><rect x="996" y="308" width="3" height="15" fill="rgb(235,45,29)"/><text x="999.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.13%)</title><rect x="1004" y="244" width="2" height="15" fill="rgb(230,71,28)"/><text x="1007.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.13%)</title><rect x="1004" y="260" width="2" height="15" fill="rgb(236,153,36)"/><text x="1007.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.26%)</title><rect x="1004" y="196" width="3" height="15" fill="rgb(212,154,30)"/><text x="1007.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.26%)</title><rect x="1004" y="212" width="3" height="15" fill="rgb(220,18,0)"/><text x="1007.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.26%)</title><rect x="1004" y="228" width="3" height="15" fill="rgb(250,176,48)"/><text x="1007.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1006" y="244" width="1" height="15" fill="rgb(254,15,33)"/><text x="1009.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.26%)</title><rect x="1009" y="276" width="3" height="15" fill="rgb(243,157,43)"/><text x="1012.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.26%)</title><rect x="1009" y="292" width="3" height="15" fill="rgb(216,102,21)"/><text x="1012.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1010" y="308" width="2" height="15" fill="rgb(253,148,0)"/><text x="1013.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1010" y="324" width="2" height="15" fill="rgb(242,73,35)"/><text x="1013.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1010" y="340" width="2" height="15" fill="rgb(228,217,6)"/><text x="1013.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.26%)</title><rect x="1012" y="276" width="3" height="15" fill="rgb(253,192,6)"/><text x="1015.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1013" y="292" width="2" height="15" fill="rgb(228,149,40)"/><text x="1016.00" y="302.50"></text></g><g><title>0x7f10c1630d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1018" y="324" width="1" height="15" fill="rgb(226,6,3)"/><text x="1021.00" y="334.50"></text></g><g><title>array_add (number.c) (9 samples, 1.16%)</title><rect x="1007" y="196" width="14" height="15" fill="rgb(217,213,12)"/><text x="1010.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.16%)</title><rect x="1007" y="212" width="14" height="15" fill="rgb(215,166,47)"/><text x="1010.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.16%)</title><rect x="1007" y="228" width="14" height="15" fill="rgb(224,197,53)"/><text x="1010.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.16%)</title><rect x="1007" y="244" width="14" height="15" fill="rgb(238,206,19)"/><text x="1010.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.16%)</title><rect x="1007" y="260" width="14" height="15" fill="rgb(214,172,31)"/><text x="1010.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.52%)</title><rect x="1015" y="276" width="6" height="15" fill="rgb(230,133,3)"/><text x="1018.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.52%)</title><rect x="1015" y="292" width="6" height="15" fill="rgb(208,197,51)"/><text x="1018.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.52%)</title><rect x="1015" y="308" width="6" height="15" fill="rgb(245,54,54)"/><text x="1018.00" y="318.50"></text></g><g><title>0x7f10c1630d6f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1019" y="324" width="2" height="15" fill="rgb(249,186,15)"/><text x="1022.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1021" y="196" width="1" height="15" fill="rgb(247,203,18)"/><text x="1024.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="1021" y="212" width="1" height="15" fill="rgb(207,52,16)"/><text x="1024.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="1021" y="228" width="1" height="15" fill="rgb(249,155,31)"/><text x="1024.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.13%)</title><rect x="1027" y="212" width="1" height="15" fill="rgb(246,183,45)"/><text x="1030.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 1.03%)</title><rect x="1028" y="212" width="12" height="15" fill="rgb(250,185,43)"/><text x="1031.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.13%)</title><rect x="1047" y="228" width="1" height="15" fill="rgb(242,38,53)"/><text x="1050.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.03%)</title><rect x="1040" y="212" width="13" height="15" fill="rgb(205,134,24)"/><text x="1043.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.39%)</title><rect x="1048" y="228" width="5" height="15" fill="rgb(239,179,28)"/><text x="1051.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.26%)</title><rect x="1050" y="244" width="3" height="15" fill="rgb(244,148,10)"/><text x="1053.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.39%)</title><rect x="1053" y="212" width="4" height="15" fill="rgb(236,56,53)"/><text x="1056.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.13%)</title><rect x="1057" y="228" width="2" height="15" fill="rgb(211,33,10)"/><text x="1060.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.39%)</title><rect x="1057" y="212" width="5" height="15" fill="rgb(242,81,37)"/><text x="1060.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.26%)</title><rect x="1059" y="228" width="3" height="15" fill="rgb(226,103,25)"/><text x="1062.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 3.61%)</title><rect x="1022" y="196" width="43" height="15" fill="rgb(243,123,47)"/><text x="1025.00" y="206.50">chec..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.26%)</title><rect x="1062" y="212" width="3" height="15" fill="rgb(205,183,3)"/><text x="1065.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.26%)</title><rect x="1062" y="228" width="3" height="15" fill="rgb(254,12,32)"/><text x="1065.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.13%)</title><rect x="1075" y="228" width="2" height="15" fill="rgb(229,90,31)"/><text x="1078.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 1.16%)</title><rect x="1065" y="196" width="13" height="15" fill="rgb(232,2,29)"/><text x="1068.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 1.03%)</title><rect x="1066" y="212" width="12" height="15" fill="rgb(225,203,41)"/><text x="1069.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="1077" y="228" width="1" height="15" fill="rgb(225,76,9)"/><text x="1080.00" y="238.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 0.90%)</title><rect x="1078" y="212" width="11" height="15" fill="rgb(206,77,54)"/><text x="1081.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.13%)</title><rect x="1092" y="260" width="2" height="15" fill="rgb(211,108,34)"/><text x="1095.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="1092" y="276" width="2" height="15" fill="rgb(227,185,18)"/><text x="1095.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="1092" y="292" width="2" height="15" fill="rgb(207,137,52)"/><text x="1095.00" y="302.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="1092" y="308" width="2" height="15" fill="rgb(250,145,19)"/><text x="1095.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.13%)</title><rect x="1094" y="324" width="1" height="15" fill="rgb(240,166,32)"/><text x="1097.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1094" y="340" width="1" height="15" fill="rgb(205,100,45)"/><text x="1097.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.26%)</title><rect x="1094" y="292" width="3" height="15" fill="rgb(237,75,53)"/><text x="1097.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.26%)</title><rect x="1094" y="308" width="3" height="15" fill="rgb(234,79,51)"/><text x="1097.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1095" y="324" width="2" height="15" fill="rgb(218,91,5)"/><text x="1098.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.26%)</title><rect x="1097" y="292" width="3" height="15" fill="rgb(206,45,0)"/><text x="1100.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.26%)</title><rect x="1097" y="308" width="3" height="15" fill="rgb(216,208,33)"/><text x="1100.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.26%)</title><rect x="1097" y="324" width="3" height="15" fill="rgb(216,142,41)"/><text x="1100.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.26%)</title><rect x="1097" y="340" width="3" height="15" fill="rgb(250,209,37)"/><text x="1100.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.26%)</title><rect x="1097" y="356" width="3" height="15" fill="rgb(242,113,30)"/><text x="1100.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.26%)</title><rect x="1097" y="372" width="3" height="15" fill="rgb(212,227,10)"/><text x="1100.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1097" y="388" width="3" height="15" fill="rgb(251,183,3)"/><text x="1100.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 0.64%)</title><rect x="1094" y="276" width="7" height="15" fill="rgb(241,139,26)"/><text x="1097.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1100" y="292" width="1" height="15" fill="rgb(209,73,51)"/><text x="1103.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.77%)</title><rect x="1094" y="260" width="9" height="15" fill="rgb(222,82,43)"/><text x="1097.00" y="270.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1101" y="276" width="2" height="15" fill="rgb(213,201,22)"/><text x="1104.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.29%)</title><rect x="1089" y="228" width="15" height="15" fill="rgb(229,216,23)"/><text x="1092.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (10 samples, 1.29%)</title><rect x="1089" y="244" width="15" height="15" fill="rgb(249,117,5)"/><text x="1092.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1103" y="260" width="1" height="15" fill="rgb(236,53,37)"/><text x="1106.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1103" y="276" width="1" height="15" fill="rgb(211,172,15)"/><text x="1106.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1103" y="292" width="1" height="15" fill="rgb(231,37,19)"/><text x="1106.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1103" y="308" width="1" height="15" fill="rgb(232,113,6)"/><text x="1106.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.13%)</title><rect x="1103" y="324" width="1" height="15" fill="rgb(207,86,44)"/><text x="1106.00" y="334.50"></text></g><g><title>0x7f10c1610ab6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1103" y="340" width="1" height="15" fill="rgb(218,77,31)"/><text x="1106.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (70 samples, 9.02%)</title><rect x="999" y="180" width="107" height="15" fill="rgb(212,109,14)"/><text x="1002.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 2.32%)</title><rect x="1078" y="196" width="28" height="15" fill="rgb(251,130,19)"/><text x="1081.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.42%)</title><rect x="1089" y="212" width="17" height="15" fill="rgb(243,59,44)"/><text x="1092.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1104" y="228" width="2" height="15" fill="rgb(209,36,18)"/><text x="1107.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="1106" y="196" width="1" height="15" fill="rgb(221,57,35)"/><text x="1109.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="1106" y="212" width="1" height="15" fill="rgb(229,150,20)"/><text x="1109.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.13%)</title><rect x="1106" y="228" width="1" height="15" fill="rgb(208,117,19)"/><text x="1109.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (3 samples, 0.39%)</title><rect x="1109" y="244" width="4" height="15" fill="rgb(208,16,4)"/><text x="1112.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (3 samples, 0.39%)</title><rect x="1109" y="260" width="4" height="15" fill="rgb(222,201,23)"/><text x="1112.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (3 samples, 0.39%)</title><rect x="1109" y="276" width="4" height="15" fill="rgb(239,33,23)"/><text x="1112.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.39%)</title><rect x="1109" y="292" width="4" height="15" fill="rgb(233,161,27)"/><text x="1112.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1113" y="260" width="2" height="15" fill="rgb(209,138,34)"/><text x="1116.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.26%)</title><rect x="1113" y="244" width="4" height="15" fill="rgb(222,3,1)"/><text x="1116.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1115" y="260" width="2" height="15" fill="rgb(210,38,38)"/><text x="1118.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1117" y="244" width="1" height="15" fill="rgb(218,132,12)"/><text x="1120.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 1.68%)</title><rect x="1109" y="228" width="20" height="15" fill="rgb(230,111,36)"/><text x="1112.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.90%)</title><rect x="1118" y="244" width="11" height="15" fill="rgb(208,175,49)"/><text x="1121.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.90%)</title><rect x="1118" y="260" width="11" height="15" fill="rgb(253,214,5)"/><text x="1121.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.90%)</title><rect x="1118" y="276" width="11" height="15" fill="rgb(219,93,10)"/><text x="1121.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.39%)</title><rect x="1124" y="292" width="5" height="15" fill="rgb(222,144,23)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f10a3a37254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.26%)</title><rect x="1129" y="260" width="3" height="15" fill="rgb(210,194,27)"/><text x="1132.00" y="270.50"></text></g><g><title>0x7f10a39f4fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.26%)</title><rect x="1133" y="276" width="3" height="15" fill="rgb(207,23,28)"/><text x="1136.00" y="286.50"></text></g><g><title>0x7f10a3b409f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1136" y="276" width="2" height="15" fill="rgb(247,106,0)"/><text x="1139.00" y="286.50"></text></g><g><title>0x7f10c175c1b0 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="1139" y="292" width="3" height="15" fill="rgb(205,67,28)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f10c17e2bd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1142" y="292" width="2" height="15" fill="rgb(216,9,15)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f10c17e2be7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1144" y="292" width="1" height="15" fill="rgb(243,18,38)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f10c17e2bf9 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(252,15,9)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7f10c17e2c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1147" y="292" width="1" height="15" fill="rgb(221,13,50)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7f10c17e2c2e (libm-2.29.so) (3 samples, 0.39%)</title><rect x="1148" y="292" width="5" height="15" fill="rgb(228,154,32)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f10a3a37265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.93%)</title><rect x="1132" y="260" width="23" height="15" fill="rgb(214,127,31)"/><text x="1135.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (11 samples, 1.42%)</title><rect x="1138" y="276" width="17" height="15" fill="rgb(238,181,43)"/><text x="1141.00" y="286.50"></text></g><g><title>0x7f10c17e2c56 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(230,103,6)"/><text x="1156.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 4.64%)</title><rect x="1109" y="212" width="55" height="15" fill="rgb(240,6,12)"/><text x="1112.00" y="222.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (23 samples, 2.96%)</title><rect x="1129" y="228" width="35" height="15" fill="rgb(240,151,8)"/><text x="1132.00" y="238.50">tr..</text></g><g><title>0x7f10a3a169dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 2.96%)</title><rect x="1129" y="244" width="35" height="15" fill="rgb(228,168,36)"/><text x="1132.00" y="254.50">0x..</text></g><g><title>0x7f10a3a37279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.77%)</title><rect x="1155" y="260" width="9" height="15" fill="rgb(233,200,43)"/><text x="1158.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="1165" y="228" width="2" height="15" fill="rgb(250,103,20)"/><text x="1168.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.39%)</title><rect x="1164" y="212" width="4" height="15" fill="rgb(232,215,32)"/><text x="1167.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1167" y="228" width="1" height="15" fill="rgb(252,16,13)"/><text x="1170.00" y="238.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1167" y="244" width="1" height="15" fill="rgb(253,49,16)"/><text x="1170.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="1168" y="212" width="2" height="15" fill="rgb(239,6,19)"/><text x="1171.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1168" y="228" width="2" height="15" fill="rgb(229,136,34)"/><text x="1171.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 5.41%)</title><rect x="1107" y="196" width="64" height="15" fill="rgb(213,176,2)"/><text x="1110.00" y="206.50">PyUFunc..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1170" y="212" width="1" height="15" fill="rgb(222,125,38)"/><text x="1173.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (139 samples, 17.91%)</title><rect x="961" y="164" width="212" height="15" fill="rgb(246,167,48)"/><text x="964.00" y="174.50">_predict_proba_lr (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (44 samples, 5.67%)</title><rect x="1106" y="180" width="67" height="15" fill="rgb(230,157,44)"/><text x="1109.00" y="190.50">ufunc_g..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1171" y="196" width="2" height="15" fill="rgb(231,218,13)"/><text x="1174.00" y="206.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1171" y="212" width="2" height="15" fill="rgb(251,93,26)"/><text x="1174.00" y="222.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.13%)</title><rect x="1173" y="164" width="1" height="15" fill="rgb(227,34,41)"/><text x="1176.00" y="174.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.13%)</title><rect x="1173" y="180" width="1" height="15" fill="rgb(237,37,42)"/><text x="1176.00" y="190.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (1 samples, 0.13%)</title><rect x="1173" y="196" width="1" height="15" fill="rgb(254,148,25)"/><text x="1176.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.26%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(234,133,33)"/><text x="1186.00" y="206.50"></text></g><g><title>all (776 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,201,4)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (776 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(237,65,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (156 samples, 20.10%)</title><rect x="952" y="68" width="238" height="15" fill="rgb(214,83,21)"/><text x="955.00" y="78.50">profile_skl (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (156 samples, 20.10%)</title><rect x="952" y="84" width="238" height="15" fill="rgb(233,183,4)"/><text x="955.00" y="94.50">setup_profile (bench_LogisticRe..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py) (156 samples, 20.10%)</title><rect x="952" y="100" width="238" height="15" fill="rgb(216,211,42)"/><text x="955.00" y="110.50">profile (bench_LogisticRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 19.97%)</title><rect x="954" y="116" width="236" height="15" fill="rgb(233,115,15)"/><text x="957.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 19.72%)</title><rect x="957" y="132" width="233" height="15" fill="rgb(239,217,31)"/><text x="960.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (153 samples, 19.72%)</title><rect x="957" y="148" width="233" height="15" fill="rgb(227,95,7)"/><text x="960.00" y="158.50">predict_proba (sklearn/linear_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 1.29%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(219,103,25)"/><text x="1177.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 0.90%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(227,78,4)"/><text x="1182.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.26%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(244,40,12)"/><text x="1189.00" y="206.50"></text></g></g></svg>