<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(245,4,35)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.70%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(232,195,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(251,194,33)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(229,212,10)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(215,161,48)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(240,14,4)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(213,44,28)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.70%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(244,200,24)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(234,192,43)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(250,207,21)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(207,105,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(238,87,27)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(225,21,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(240,149,21)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(230,102,48)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(219,94,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(217,154,9)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(230,220,40)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(238,12,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(253,41,3)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(249,183,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(233,111,52)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(234,95,30)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(252,146,50)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(251,1,30)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="868" width="8" height="15" fill="rgb(217,76,5)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="884" width="8" height="15" fill="rgb(226,109,20)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="900" width="8" height="15" fill="rgb(220,186,24)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="10" y="916" width="8" height="15" fill="rgb(242,201,14)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(230,12,7)"/><text x="17.00" y="942.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.35%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(219,109,16)"/><text x="17.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.35%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(231,187,32)"/><text x="17.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.06%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(224,110,47)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(219,9,26)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(214,174,42)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(248,140,8)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(228,96,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(239,3,38)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.06%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(244,18,33)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(219,139,30)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(235,210,2)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(212,201,23)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(228,87,51)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(206,9,41)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (typing.py) (1 samples, 0.35%)</title><rect x="18" y="484" width="4" height="15" fill="rgb(228,152,51)"/><text x="21.00" y="494.50"></text></g><g><title>_alias (typing.py) (1 samples, 0.35%)</title><rect x="18" y="500" width="4" height="15" fill="rgb(223,4,3)"/><text x="21.00" y="510.50"></text></g><g><title>__init__ (typing.py) (1 samples, 0.35%)</title><rect x="18" y="516" width="4" height="15" fill="rgb(238,105,16)"/><text x="21.00" y="526.50"></text></g><g><title>__setattr__ (typing.py) (1 samples, 0.35%)</title><rect x="18" y="532" width="4" height="15" fill="rgb(235,53,16)"/><text x="21.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="10" y="196" width="16" height="15" fill="rgb(228,127,0)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="10" y="212" width="16" height="15" fill="rgb(207,203,9)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="10" y="228" width="16" height="15" fill="rgb(247,213,28)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="10" y="244" width="16" height="15" fill="rgb(245,101,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.41%)</title><rect x="10" y="260" width="16" height="15" fill="rgb(210,149,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="10" y="276" width="16" height="15" fill="rgb(220,83,7)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="292" width="4" height="15" fill="rgb(253,224,53)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="308" width="4" height="15" fill="rgb(220,202,51)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="324" width="4" height="15" fill="rgb(214,156,15)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="340" width="4" height="15" fill="rgb(251,21,32)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="356" width="4" height="15" fill="rgb(242,222,14)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="372" width="4" height="15" fill="rgb(214,144,45)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.35%)</title><rect x="22" y="388" width="4" height="15" fill="rgb(249,24,10)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="404" width="4" height="15" fill="rgb(217,198,23)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="420" width="4" height="15" fill="rgb(207,22,51)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="436" width="4" height="15" fill="rgb(217,176,44)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="452" width="4" height="15" fill="rgb(217,109,16)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="468" width="4" height="15" fill="rgb(251,118,47)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="484" width="4" height="15" fill="rgb(251,87,24)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="500" width="4" height="15" fill="rgb(225,183,3)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="516" width="4" height="15" fill="rgb(231,19,46)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="532" width="4" height="15" fill="rgb(230,115,15)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="548" width="4" height="15" fill="rgb(214,82,52)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="564" width="4" height="15" fill="rgb(221,147,10)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.35%)</title><rect x="22" y="580" width="4" height="15" fill="rgb(212,215,45)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="596" width="4" height="15" fill="rgb(236,85,9)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="612" width="4" height="15" fill="rgb(238,10,11)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="628" width="4" height="15" fill="rgb(224,3,21)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="644" width="4" height="15" fill="rgb(226,139,13)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="660" width="4" height="15" fill="rgb(237,126,41)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="676" width="4" height="15" fill="rgb(230,35,43)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="692" width="4" height="15" fill="rgb(248,120,12)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="708" width="4" height="15" fill="rgb(242,42,11)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(252,13,44)"/><text x="25.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(219,102,20)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(245,228,22)"/><text x="25.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="772" width="4" height="15" fill="rgb(238,201,39)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="788" width="4" height="15" fill="rgb(246,102,9)"/><text x="25.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="804" width="4" height="15" fill="rgb(234,127,4)"/><text x="25.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="820" width="4" height="15" fill="rgb(233,93,7)"/><text x="25.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="836" width="4" height="15" fill="rgb(213,161,30)"/><text x="25.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.35%)</title><rect x="22" y="852" width="4" height="15" fill="rgb(222,49,20)"/><text x="25.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(228,165,24)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(208,175,52)"/><text x="25.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(236,74,7)"/><text x="25.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(219,165,17)"/><text x="25.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(234,160,40)"/><text x="25.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/errors.py) (1 samples, 0.35%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(233,186,15)"/><text x="25.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(228,75,42)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(241,136,39)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(216,138,25)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(235,48,3)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(251,133,27)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(207,38,11)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(247,53,54)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(226,157,49)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(242,129,20)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(205,89,28)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(247,163,18)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(229,138,14)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.35%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(216,70,34)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(231,222,48)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(254,84,46)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(212,30,1)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(252,72,32)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(211,24,21)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(234,157,37)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(211,33,29)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(234,129,12)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(252,208,16)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(244,215,21)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(241,211,31)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.35%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(221,192,36)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(253,222,17)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(217,163,42)"/><text x="29.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(205,166,31)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(217,228,4)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(210,23,24)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(236,134,4)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(221,19,49)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(242,128,18)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(239,56,13)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(228,83,18)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(232,40,27)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(254,60,47)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(244,22,45)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(215,105,38)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.35%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(207,118,34)"/><text x="29.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(209,45,45)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(215,14,50)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(252,168,42)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(252,102,14)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(205,156,51)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(214,121,54)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(217,38,53)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1236" width="4" height="15" fill="rgb(239,91,49)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1252" width="4" height="15" fill="rgb(206,37,36)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1268" width="4" height="15" fill="rgb(241,227,16)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1284" width="4" height="15" fill="rgb(221,85,2)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1300" width="4" height="15" fill="rgb(218,72,52)"/><text x="29.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1316" width="4" height="15" fill="rgb(209,153,24)"/><text x="29.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1332" width="4" height="15" fill="rgb(247,146,41)"/><text x="29.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1348" width="4" height="15" fill="rgb(217,21,54)"/><text x="29.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.35%)</title><rect x="26" y="1364" width="4" height="15" fill="rgb(210,131,24)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1380" width="4" height="15" fill="rgb(209,170,34)"/><text x="29.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1396" width="4" height="15" fill="rgb(231,2,16)"/><text x="29.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1412" width="4" height="15" fill="rgb(238,143,8)"/><text x="29.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1428" width="4" height="15" fill="rgb(224,206,15)"/><text x="29.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1444" width="4" height="15" fill="rgb(228,103,48)"/><text x="29.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="26" y="1460" width="4" height="15" fill="rgb(224,31,38)"/><text x="29.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="26" y="1476" width="4" height="15" fill="rgb(228,51,9)"/><text x="29.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="26" y="1492" width="4" height="15" fill="rgb(252,164,42)"/><text x="29.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="26" y="1508" width="4" height="15" fill="rgb(244,196,26)"/><text x="29.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.35%)</title><rect x="26" y="1524" width="4" height="15" fill="rgb(229,191,36)"/><text x="29.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.35%)</title><rect x="26" y="1540" width="4" height="15" fill="rgb(234,207,18)"/><text x="29.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.35%)</title><rect x="26" y="1556" width="4" height="15" fill="rgb(219,137,15)"/><text x="29.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.35%)</title><rect x="26" y="1572" width="4" height="15" fill="rgb(232,143,27)"/><text x="29.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.35%)</title><rect x="26" y="1588" width="4" height="15" fill="rgb(225,34,34)"/><text x="29.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="26" y="1604" width="4" height="15" fill="rgb(230,64,46)"/><text x="29.00" y="1614.50"></text></g><g><title>0x7fed16bb70e9 (?) (1 samples, 0.35%)</title><rect x="26" y="1620" width="4" height="15" fill="rgb(252,218,38)"/><text x="29.00" y="1630.50"></text></g><g><title>0x7fed16bbaccb (?) (1 samples, 0.35%)</title><rect x="26" y="1636" width="4" height="15" fill="rgb(209,115,25)"/><text x="29.00" y="1646.50"></text></g><g><title>0x7fed16bb0797 (?) (1 samples, 0.35%)</title><rect x="26" y="1652" width="4" height="15" fill="rgb(225,43,21)"/><text x="29.00" y="1662.50"></text></g><g><title>0x7fed16bb0654 (?) (1 samples, 0.35%)</title><rect x="26" y="1668" width="4" height="15" fill="rgb(242,86,1)"/><text x="29.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="772" width="4" height="15" fill="rgb(254,19,52)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="788" width="4" height="15" fill="rgb(235,74,19)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="804" width="4" height="15" fill="rgb(212,42,21)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="820" width="4" height="15" fill="rgb(223,24,7)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(220,104,39)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(227,27,41)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="868" width="4" height="15" fill="rgb(217,27,13)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="884" width="4" height="15" fill="rgb(225,118,18)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(254,22,54)"/><text x="33.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(244,181,19)"/><text x="33.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(226,99,39)"/><text x="33.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(244,46,48)"/><text x="33.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(207,25,28)"/><text x="33.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(225,71,48)"/><text x="33.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="996" width="4" height="15" fill="rgb(248,140,51)"/><text x="33.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="1012" width="4" height="15" fill="rgb(220,59,54)"/><text x="33.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="30" y="1028" width="4" height="15" fill="rgb(213,51,13)"/><text x="33.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="30" y="1044" width="4" height="15" fill="rgb(254,214,49)"/><text x="33.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.35%)</title><rect x="34" y="1012" width="5" height="15" fill="rgb(231,141,50)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1028" width="5" height="15" fill="rgb(234,65,4)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1044" width="5" height="15" fill="rgb(227,37,24)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1060" width="5" height="15" fill="rgb(209,229,0)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1076" width="5" height="15" fill="rgb(217,202,22)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1092" width="5" height="15" fill="rgb(216,23,19)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.35%)</title><rect x="34" y="1108" width="5" height="15" fill="rgb(254,53,41)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1124" width="5" height="15" fill="rgb(228,135,30)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1140" width="5" height="15" fill="rgb(253,227,37)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1156" width="5" height="15" fill="rgb(211,49,17)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1172" width="5" height="15" fill="rgb(234,130,23)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1188" width="5" height="15" fill="rgb(249,55,39)"/><text x="37.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.35%)</title><rect x="34" y="1204" width="5" height="15" fill="rgb(232,94,32)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1220" width="5" height="15" fill="rgb(213,202,40)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1236" width="5" height="15" fill="rgb(244,193,31)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1252" width="5" height="15" fill="rgb(249,178,0)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1268" width="5" height="15" fill="rgb(254,185,42)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1284" width="5" height="15" fill="rgb(224,72,52)"/><text x="37.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.35%)</title><rect x="34" y="1300" width="5" height="15" fill="rgb(222,133,34)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1316" width="5" height="15" fill="rgb(237,100,10)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1332" width="5" height="15" fill="rgb(251,210,12)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1348" width="5" height="15" fill="rgb(227,40,37)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1364" width="5" height="15" fill="rgb(214,142,31)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1380" width="5" height="15" fill="rgb(237,48,49)"/><text x="37.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.35%)</title><rect x="34" y="1396" width="5" height="15" fill="rgb(218,2,20)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1412" width="5" height="15" fill="rgb(240,212,31)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1428" width="5" height="15" fill="rgb(220,18,35)"/><text x="37.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1444" width="5" height="15" fill="rgb(226,181,4)"/><text x="37.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1460" width="5" height="15" fill="rgb(239,178,40)"/><text x="37.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1476" width="5" height="15" fill="rgb(226,64,0)"/><text x="37.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.35%)</title><rect x="34" y="1492" width="5" height="15" fill="rgb(247,161,36)"/><text x="37.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1508" width="5" height="15" fill="rgb(224,185,46)"/><text x="37.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1524" width="5" height="15" fill="rgb(207,161,25)"/><text x="37.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1540" width="5" height="15" fill="rgb(208,32,25)"/><text x="37.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1556" width="5" height="15" fill="rgb(218,176,46)"/><text x="37.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1572" width="5" height="15" fill="rgb(217,31,48)"/><text x="37.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.35%)</title><rect x="34" y="1588" width="5" height="15" fill="rgb(205,67,13)"/><text x="37.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1604" width="5" height="15" fill="rgb(253,62,20)"/><text x="37.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1620" width="5" height="15" fill="rgb(252,191,28)"/><text x="37.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1636" width="5" height="15" fill="rgb(206,40,1)"/><text x="37.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1652" width="5" height="15" fill="rgb(213,168,8)"/><text x="37.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1668" width="5" height="15" fill="rgb(224,65,25)"/><text x="37.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.35%)</title><rect x="34" y="1684" width="5" height="15" fill="rgb(233,44,10)"/><text x="37.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1700" width="5" height="15" fill="rgb(235,119,19)"/><text x="37.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1716" width="5" height="15" fill="rgb(219,119,14)"/><text x="37.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1732" width="5" height="15" fill="rgb(242,25,12)"/><text x="37.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1748" width="5" height="15" fill="rgb(224,198,29)"/><text x="37.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1764" width="5" height="15" fill="rgb(207,147,25)"/><text x="37.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.35%)</title><rect x="34" y="1780" width="5" height="15" fill="rgb(241,52,25)"/><text x="37.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1796" width="5" height="15" fill="rgb(221,21,28)"/><text x="37.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1812" width="5" height="15" fill="rgb(251,228,24)"/><text x="37.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1828" width="5" height="15" fill="rgb(234,170,48)"/><text x="37.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1844" width="5" height="15" fill="rgb(241,98,38)"/><text x="37.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1860" width="5" height="15" fill="rgb(209,214,28)"/><text x="37.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.35%)</title><rect x="34" y="1876" width="5" height="15" fill="rgb(206,66,31)"/><text x="37.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1892" width="5" height="15" fill="rgb(211,169,42)"/><text x="37.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1908" width="5" height="15" fill="rgb(213,111,41)"/><text x="37.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1924" width="5" height="15" fill="rgb(225,129,49)"/><text x="37.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1940" width="5" height="15" fill="rgb(251,21,22)"/><text x="37.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1956" width="5" height="15" fill="rgb(227,5,24)"/><text x="37.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.35%)</title><rect x="34" y="1972" width="5" height="15" fill="rgb(208,153,7)"/><text x="37.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.41%)</title><rect x="26" y="340" width="17" height="15" fill="rgb(239,193,12)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="356" width="17" height="15" fill="rgb(215,35,32)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="372" width="17" height="15" fill="rgb(252,127,6)"/><text x="29.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="388" width="17" height="15" fill="rgb(248,59,53)"/><text x="29.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.41%)</title><rect x="26" y="404" width="17" height="15" fill="rgb(219,167,26)"/><text x="29.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="420" width="17" height="15" fill="rgb(247,54,22)"/><text x="29.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.41%)</title><rect x="26" y="436" width="17" height="15" fill="rgb(228,188,2)"/><text x="29.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="452" width="17" height="15" fill="rgb(230,119,37)"/><text x="29.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.41%)</title><rect x="26" y="468" width="17" height="15" fill="rgb(208,201,34)"/><text x="29.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="484" width="13" height="15" fill="rgb(212,18,32)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="30" y="500" width="13" height="15" fill="rgb(250,47,43)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="516" width="13" height="15" fill="rgb(229,2,3)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.06%)</title><rect x="30" y="532" width="13" height="15" fill="rgb(227,83,35)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="548" width="13" height="15" fill="rgb(223,29,3)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="564" width="13" height="15" fill="rgb(227,23,11)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="580" width="13" height="15" fill="rgb(252,170,7)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="30" y="596" width="13" height="15" fill="rgb(236,131,21)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="612" width="13" height="15" fill="rgb(206,133,40)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.06%)</title><rect x="30" y="628" width="13" height="15" fill="rgb(251,79,10)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="644" width="13" height="15" fill="rgb(222,143,40)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="660" width="13" height="15" fill="rgb(233,187,45)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="676" width="13" height="15" fill="rgb(250,189,50)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="30" y="692" width="13" height="15" fill="rgb(230,102,23)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="708" width="13" height="15" fill="rgb(230,10,6)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.06%)</title><rect x="30" y="724" width="13" height="15" fill="rgb(248,19,43)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="740" width="13" height="15" fill="rgb(253,156,35)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="30" y="756" width="13" height="15" fill="rgb(233,194,12)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="772" width="9" height="15" fill="rgb(228,193,15)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="34" y="788" width="9" height="15" fill="rgb(213,121,26)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="804" width="9" height="15" fill="rgb(253,159,50)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.70%)</title><rect x="34" y="820" width="9" height="15" fill="rgb(210,11,37)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="836" width="9" height="15" fill="rgb(238,24,48)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="852" width="9" height="15" fill="rgb(222,78,10)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="868" width="9" height="15" fill="rgb(221,171,36)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="34" y="884" width="9" height="15" fill="rgb(222,228,12)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="900" width="9" height="15" fill="rgb(212,190,44)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.70%)</title><rect x="34" y="916" width="9" height="15" fill="rgb(219,85,0)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="932" width="9" height="15" fill="rgb(222,127,15)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="948" width="9" height="15" fill="rgb(210,141,35)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="964" width="9" height="15" fill="rgb(224,86,5)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="34" y="980" width="9" height="15" fill="rgb(205,93,24)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="34" y="996" width="9" height="15" fill="rgb(244,37,42)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.35%)</title><rect x="39" y="1012" width="4" height="15" fill="rgb(212,151,5)"/><text x="42.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.35%)</title><rect x="39" y="1028" width="4" height="15" fill="rgb(228,13,1)"/><text x="42.00" y="1038.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.35%)</title><rect x="39" y="1044" width="4" height="15" fill="rgb(211,47,14)"/><text x="42.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.35%)</title><rect x="39" y="1060" width="4" height="15" fill="rgb(219,207,53)"/><text x="42.00" y="1070.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="39" y="1076" width="4" height="15" fill="rgb(224,88,12)"/><text x="42.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 1.76%)</title><rect x="26" y="244" width="21" height="15" fill="rgb(239,171,0)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.76%)</title><rect x="26" y="260" width="21" height="15" fill="rgb(240,53,41)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.76%)</title><rect x="26" y="276" width="21" height="15" fill="rgb(207,47,16)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.76%)</title><rect x="26" y="292" width="21" height="15" fill="rgb(224,211,11)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.76%)</title><rect x="26" y="308" width="21" height="15" fill="rgb(234,76,25)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.76%)</title><rect x="26" y="324" width="21" height="15" fill="rgb(229,147,35)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.35%)</title><rect x="43" y="340" width="4" height="15" fill="rgb(241,193,45)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="356" width="4" height="15" fill="rgb(243,98,9)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="372" width="4" height="15" fill="rgb(231,226,28)"/><text x="46.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="388" width="4" height="15" fill="rgb(219,191,7)"/><text x="46.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="404" width="4" height="15" fill="rgb(254,185,42)"/><text x="46.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="420" width="4" height="15" fill="rgb(239,99,29)"/><text x="46.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="436" width="4" height="15" fill="rgb(254,38,24)"/><text x="46.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="452" width="4" height="15" fill="rgb(205,60,37)"/><text x="46.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="468" width="4" height="15" fill="rgb(233,91,5)"/><text x="46.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.35%)</title><rect x="43" y="484" width="4" height="15" fill="rgb(225,165,39)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="500" width="4" height="15" fill="rgb(237,104,4)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="516" width="4" height="15" fill="rgb(207,174,8)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="532" width="4" height="15" fill="rgb(226,214,46)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="548" width="4" height="15" fill="rgb(249,225,51)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="564" width="4" height="15" fill="rgb(251,55,23)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.35%)</title><rect x="43" y="580" width="4" height="15" fill="rgb(218,20,9)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="596" width="4" height="15" fill="rgb(239,113,4)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="612" width="4" height="15" fill="rgb(235,108,14)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="628" width="4" height="15" fill="rgb(253,216,53)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="644" width="4" height="15" fill="rgb(223,91,41)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="660" width="4" height="15" fill="rgb(237,220,48)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.35%)</title><rect x="43" y="676" width="4" height="15" fill="rgb(224,20,2)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="692" width="4" height="15" fill="rgb(236,155,47)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="708" width="4" height="15" fill="rgb(223,57,33)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="724" width="4" height="15" fill="rgb(240,61,2)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="740" width="4" height="15" fill="rgb(219,202,37)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="756" width="4" height="15" fill="rgb(224,27,22)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.35%)</title><rect x="43" y="772" width="4" height="15" fill="rgb(217,207,5)"/><text x="46.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="788" width="4" height="15" fill="rgb(253,85,21)"/><text x="46.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="804" width="4" height="15" fill="rgb(218,102,51)"/><text x="46.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="820" width="4" height="15" fill="rgb(217,83,2)"/><text x="46.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="836" width="4" height="15" fill="rgb(234,191,41)"/><text x="46.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="852" width="4" height="15" fill="rgb(250,84,44)"/><text x="46.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.35%)</title><rect x="43" y="868" width="4" height="15" fill="rgb(242,99,4)"/><text x="46.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="884" width="4" height="15" fill="rgb(251,148,30)"/><text x="46.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="900" width="4" height="15" fill="rgb(251,192,44)"/><text x="46.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="916" width="4" height="15" fill="rgb(250,4,12)"/><text x="46.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="932" width="4" height="15" fill="rgb(221,100,9)"/><text x="46.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="948" width="4" height="15" fill="rgb(248,24,30)"/><text x="46.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.35%)</title><rect x="43" y="964" width="4" height="15" fill="rgb(237,80,30)"/><text x="46.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="980" width="4" height="15" fill="rgb(212,69,43)"/><text x="46.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="996" width="4" height="15" fill="rgb(211,24,25)"/><text x="46.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1012" width="4" height="15" fill="rgb(242,16,32)"/><text x="46.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="1028" width="4" height="15" fill="rgb(232,119,45)"/><text x="46.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="1044" width="4" height="15" fill="rgb(252,165,2)"/><text x="46.00" y="1054.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="1060" width="4" height="15" fill="rgb(205,39,8)"/><text x="46.00" y="1070.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="43" y="1076" width="4" height="15" fill="rgb(246,109,31)"/><text x="46.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="68" width="41" height="15" fill="rgb(217,215,7)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="84" width="41" height="15" fill="rgb(230,190,33)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="100" width="41" height="15" fill="rgb(249,182,26)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.52%)</title><rect x="10" y="116" width="41" height="15" fill="rgb(242,69,51)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="132" width="41" height="15" fill="rgb(245,68,4)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py) (10 samples, 3.52%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(251,68,0)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(254,208,37)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.52%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(224,156,5)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.11%)</title><rect x="26" y="196" width="25" height="15" fill="rgb(234,136,32)"/><text x="29.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.11%)</title><rect x="26" y="212" width="25" height="15" fill="rgb(225,162,25)"/><text x="29.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.11%)</title><rect x="26" y="228" width="25" height="15" fill="rgb(254,171,50)"/><text x="29.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.35%)</title><rect x="47" y="244" width="4" height="15" fill="rgb(207,8,8)"/><text x="50.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="260" width="4" height="15" fill="rgb(235,50,29)"/><text x="50.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="276" width="4" height="15" fill="rgb(221,138,40)"/><text x="50.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="292" width="4" height="15" fill="rgb(253,56,4)"/><text x="50.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="308" width="4" height="15" fill="rgb(220,91,8)"/><text x="50.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="324" width="4" height="15" fill="rgb(212,175,21)"/><text x="50.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="340" width="4" height="15" fill="rgb(233,69,44)"/><text x="50.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="356" width="4" height="15" fill="rgb(209,3,48)"/><text x="50.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.35%)</title><rect x="47" y="372" width="4" height="15" fill="rgb(253,38,12)"/><text x="50.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="388" width="4" height="15" fill="rgb(242,58,22)"/><text x="50.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="404" width="4" height="15" fill="rgb(220,191,19)"/><text x="50.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="420" width="4" height="15" fill="rgb(225,94,35)"/><text x="50.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="436" width="4" height="15" fill="rgb(239,45,1)"/><text x="50.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="452" width="4" height="15" fill="rgb(236,199,7)"/><text x="50.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.35%)</title><rect x="47" y="468" width="4" height="15" fill="rgb(214,123,4)"/><text x="50.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="484" width="4" height="15" fill="rgb(247,95,10)"/><text x="50.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="500" width="4" height="15" fill="rgb(216,125,53)"/><text x="50.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="516" width="4" height="15" fill="rgb(209,217,35)"/><text x="50.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="532" width="4" height="15" fill="rgb(229,214,50)"/><text x="50.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="548" width="4" height="15" fill="rgb(221,159,53)"/><text x="50.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.35%)</title><rect x="47" y="564" width="4" height="15" fill="rgb(250,208,29)"/><text x="50.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="580" width="4" height="15" fill="rgb(230,171,28)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="596" width="4" height="15" fill="rgb(229,145,47)"/><text x="50.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="47" y="612" width="4" height="15" fill="rgb(211,13,36)"/><text x="50.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="628" width="4" height="15" fill="rgb(214,126,50)"/><text x="50.00" y="638.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="644" width="4" height="15" fill="rgb(205,206,3)"/><text x="50.00" y="654.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="47" y="660" width="4" height="15" fill="rgb(245,166,24)"/><text x="50.00" y="670.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="80" y="180" width="4" height="15" fill="rgb(234,181,43)"/><text x="83.00" y="190.50"></text></g><g><title>0x7fece6b6bff9 (?) (1 samples, 0.35%)</title><rect x="109" y="212" width="4" height="15" fill="rgb(254,37,17)"/><text x="112.00" y="222.50"></text></g><g><title>0x7fece6b66d3b (?) (1 samples, 0.35%)</title><rect x="109" y="228" width="4" height="15" fill="rgb(221,55,39)"/><text x="112.00" y="238.50"></text></g><g><title>0x7fece6b65090 (?) (1 samples, 0.35%)</title><rect x="109" y="244" width="4" height="15" fill="rgb(211,18,17)"/><text x="112.00" y="254.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.70%)</title><rect x="118" y="244" width="8" height="15" fill="rgb(207,144,6)"/><text x="121.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.70%)</title><rect x="118" y="260" width="8" height="15" fill="rgb(240,33,27)"/><text x="121.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.41%)</title><rect x="113" y="212" width="17" height="15" fill="rgb(236,9,48)"/><text x="116.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.41%)</title><rect x="113" y="228" width="17" height="15" fill="rgb(215,143,3)"/><text x="116.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="126" y="244" width="4" height="15" fill="rgb(230,170,50)"/><text x="129.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="126" y="260" width="4" height="15" fill="rgb(235,165,15)"/><text x="129.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.35%)</title><rect x="130" y="212" width="4" height="15" fill="rgb(254,200,52)"/><text x="133.00" y="222.50"></text></g><g><title>0x7ffc091c3bb2 ([vdso]) (1 samples, 0.35%)</title><rect x="130" y="228" width="4" height="15" fill="rgb(222,22,38)"/><text x="133.00" y="238.50"></text></g><g><title>0x7ffc091c3949 ([vdso]) (1 samples, 0.35%)</title><rect x="130" y="244" width="4" height="15" fill="rgb(208,174,53)"/><text x="133.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="147" y="260" width="4" height="15" fill="rgb(212,44,31)"/><text x="150.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="151" y="260" width="8" height="15" fill="rgb(211,192,11)"/><text x="154.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="155" y="276" width="4" height="15" fill="rgb(224,190,27)"/><text x="158.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="163" y="292" width="4" height="15" fill="rgb(236,141,50)"/><text x="166.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="163" y="308" width="4" height="15" fill="rgb(216,222,28)"/><text x="166.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="167" y="292" width="5" height="15" fill="rgb(244,82,18)"/><text x="170.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="167" y="308" width="5" height="15" fill="rgb(240,181,22)"/><text x="170.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="176" y="340" width="4" height="15" fill="rgb(217,148,36)"/><text x="179.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="176" y="356" width="4" height="15" fill="rgb(228,164,18)"/><text x="179.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="176" y="372" width="4" height="15" fill="rgb(220,226,10)"/><text x="179.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="176" y="388" width="4" height="15" fill="rgb(238,15,54)"/><text x="179.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="180" y="356" width="4" height="15" fill="rgb(248,152,30)"/><text x="183.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="356" width="8" height="15" fill="rgb(237,86,27)"/><text x="187.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="372" width="8" height="15" fill="rgb(219,193,40)"/><text x="187.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="388" width="8" height="15" fill="rgb(214,43,11)"/><text x="187.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="404" width="8" height="15" fill="rgb(246,151,23)"/><text x="187.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="420" width="8" height="15" fill="rgb(254,194,2)"/><text x="187.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="436" width="8" height="15" fill="rgb(207,229,36)"/><text x="187.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="184" y="452" width="8" height="15" fill="rgb(219,205,18)"/><text x="187.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="188" y="468" width="4" height="15" fill="rgb(210,65,48)"/><text x="191.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="188" y="484" width="4" height="15" fill="rgb(205,133,53)"/><text x="191.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="188" y="500" width="4" height="15" fill="rgb(245,152,30)"/><text x="191.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="188" y="516" width="4" height="15" fill="rgb(236,179,53)"/><text x="191.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="188" y="532" width="4" height="15" fill="rgb(240,113,11)"/><text x="191.00" y="542.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="188" y="548" width="4" height="15" fill="rgb(219,214,54)"/><text x="191.00" y="558.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="188" y="564" width="4" height="15" fill="rgb(244,102,23)"/><text x="191.00" y="574.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.17%)</title><rect x="159" y="260" width="37" height="15" fill="rgb(207,62,43)"/><text x="162.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.17%)</title><rect x="159" y="276" width="37" height="15" fill="rgb(241,107,39)"/><text x="162.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.11%)</title><rect x="172" y="292" width="24" height="15" fill="rgb(252,128,54)"/><text x="175.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.11%)</title><rect x="172" y="308" width="24" height="15" fill="rgb(219,109,36)"/><text x="175.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.11%)</title><rect x="172" y="324" width="24" height="15" fill="rgb(223,31,19)"/><text x="175.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.41%)</title><rect x="180" y="340" width="16" height="15" fill="rgb(243,24,37)"/><text x="183.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="192" y="356" width="4" height="15" fill="rgb(242,220,1)"/><text x="195.00" y="366.50"></text></g><g><title>0x7fece6b32850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="192" y="372" width="4" height="15" fill="rgb(215,131,24)"/><text x="195.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="196" y="260" width="5" height="15" fill="rgb(211,12,28)"/><text x="199.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.35%)</title><rect x="196" y="276" width="5" height="15" fill="rgb(243,86,4)"/><text x="199.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="196" y="292" width="5" height="15" fill="rgb(212,92,16)"/><text x="199.00" y="302.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="201" y="260" width="4" height="15" fill="rgb(233,64,12)"/><text x="204.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="201" y="276" width="4" height="15" fill="rgb(224,98,36)"/><text x="204.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.63%)</title><rect x="142" y="244" width="67" height="15" fill="rgb(249,2,53)"/><text x="145.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="260" width="4" height="15" fill="rgb(245,20,16)"/><text x="208.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="276" width="4" height="15" fill="rgb(208,36,14)"/><text x="208.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="292" width="4" height="15" fill="rgb(242,33,20)"/><text x="208.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="308" width="4" height="15" fill="rgb(251,170,10)"/><text x="208.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="324" width="4" height="15" fill="rgb(213,46,6)"/><text x="208.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="340" width="4" height="15" fill="rgb(240,224,50)"/><text x="208.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="356" width="4" height="15" fill="rgb(208,31,54)"/><text x="208.00" y="366.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (37 samples, 13.03%)</title><rect x="59" y="132" width="154" height="15" fill="rgb(251,69,51)"/><text x="62.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (35 samples, 12.32%)</title><rect x="68" y="148" width="145" height="15" fill="rgb(247,92,30)"/><text x="71.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (35 samples, 12.32%)</title><rect x="68" y="164" width="145" height="15" fill="rgb(240,84,33)"/><text x="71.00" y="174.50">_run_whole_runtime..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 10.92%)</title><rect x="84" y="180" width="129" height="15" fill="rgb(229,209,20)"/><text x="87.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (29 samples, 10.21%)</title><rect x="93" y="196" width="120" height="15" fill="rgb(219,171,6)"/><text x="96.00" y="206.50">run (onnxrunti..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.69%)</title><rect x="134" y="212" width="79" height="15" fill="rgb(251,158,28)"/><text x="137.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 6.34%)</title><rect x="138" y="228" width="75" height="15" fill="rgb(233,48,46)"/><text x="141.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="209" y="244" width="4" height="15" fill="rgb(247,13,15)"/><text x="212.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="209" y="260" width="4" height="15" fill="rgb(242,63,16)"/><text x="212.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 14.08%)</title><rect x="51" y="68" width="166" height="15" fill="rgb(227,99,14)"/><text x="54.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 14.08%)</title><rect x="51" y="84" width="166" height="15" fill="rgb(222,49,33)"/><text x="54.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 14.08%)</title><rect x="51" y="100" width="166" height="15" fill="rgb(234,14,54)"/><text x="54.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 13.73%)</title><rect x="55" y="116" width="162" height="15" fill="rgb(235,119,54)"/><text x="58.00" y="126.50">time_predict (mlprod..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="213" y="132" width="4" height="15" fill="rgb(235,154,49)"/><text x="216.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="271" y="180" width="4" height="15" fill="rgb(228,202,2)"/><text x="274.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.35%)</title><rect x="325" y="212" width="4" height="15" fill="rgb(215,10,46)"/><text x="328.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.35%)</title><rect x="325" y="228" width="4" height="15" fill="rgb(206,13,1)"/><text x="328.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.35%)</title><rect x="325" y="244" width="4" height="15" fill="rgb(239,40,48)"/><text x="328.00" y="254.50"></text></g><g><title>0x7fed26bda74e (libc-2.29.so) (1 samples, 0.35%)</title><rect x="379" y="292" width="4" height="15" fill="rgb(224,170,33)"/><text x="382.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.35%)</title><rect x="392" y="324" width="4" height="15" fill="rgb(238,198,4)"/><text x="395.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="392" y="340" width="4" height="15" fill="rgb(228,4,29)"/><text x="395.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="392" y="356" width="4" height="15" fill="rgb(248,222,42)"/><text x="395.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="392" y="372" width="4" height="15" fill="rgb(218,1,11)"/><text x="395.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.35%)</title><rect x="392" y="388" width="4" height="15" fill="rgb(228,121,49)"/><text x="395.00" y="398.50"></text></g><g><title>PyArray_DIMS (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="392" y="404" width="4" height="15" fill="rgb(205,103,26)"/><text x="395.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="396" y="324" width="4" height="15" fill="rgb(226,102,4)"/><text x="399.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (11 samples, 3.87%)</title><rect x="367" y="244" width="46" height="15" fill="rgb(205,143,10)"/><text x="370.00" y="254.50">argm..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 3.52%)</title><rect x="371" y="260" width="42" height="15" fill="rgb(244,30,51)"/><text x="374.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (10 samples, 3.52%)</title><rect x="371" y="276" width="42" height="15" fill="rgb(207,13,38)"/><text x="374.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 2.46%)</title><rect x="383" y="292" width="30" height="15" fill="rgb(214,37,31)"/><text x="386.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c) (5 samples, 1.76%)</title><rect x="392" y="308" width="21" height="15" fill="rgb(247,218,29)"/><text x="395.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (3 samples, 1.06%)</title><rect x="400" y="324" width="13" height="15" fill="rgb(233,188,28)"/><text x="403.00" y="334.50"></text></g><g><title>0x7fed25d1db20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="425" y="340" width="4" height="15" fill="rgb(230,89,52)"/><text x="428.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="429" y="340" width="4" height="15" fill="rgb(235,8,41)"/><text x="432.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.35%)</title><rect x="433" y="340" width="4" height="15" fill="rgb(250,1,11)"/><text x="436.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="433" y="356" width="4" height="15" fill="rgb(206,118,15)"/><text x="436.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 2.46%)</title><rect x="417" y="276" width="29" height="15" fill="rgb(224,63,7)"/><text x="420.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.76%)</title><rect x="425" y="292" width="21" height="15" fill="rgb(244,159,49)"/><text x="428.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.76%)</title><rect x="425" y="308" width="21" height="15" fill="rgb(222,33,44)"/><text x="428.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.76%)</title><rect x="425" y="324" width="21" height="15" fill="rgb(239,69,1)"/><text x="428.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.70%)</title><rect x="437" y="340" width="9" height="15" fill="rgb(254,81,50)"/><text x="440.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.70%)</title><rect x="437" y="356" width="9" height="15" fill="rgb(254,134,27)"/><text x="440.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="442" y="372" width="4" height="15" fill="rgb(220,28,18)"/><text x="445.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 3.52%)</title><rect x="413" y="244" width="41" height="15" fill="rgb(222,44,39)"/><text x="416.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (10 samples, 3.52%)</title><rect x="413" y="260" width="41" height="15" fill="rgb(249,88,19)"/><text x="416.00" y="270.50">dot..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.70%)</title><rect x="446" y="276" width="8" height="15" fill="rgb(229,101,35)"/><text x="449.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c) (2 samples, 0.70%)</title><rect x="446" y="292" width="8" height="15" fill="rgb(215,105,18)"/><text x="449.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.70%)</title><rect x="446" y="308" width="8" height="15" fill="rgb(210,184,18)"/><text x="449.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="454" y="260" width="4" height="15" fill="rgb(247,114,33)"/><text x="457.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="454" y="276" width="4" height="15" fill="rgb(232,88,54)"/><text x="457.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.70%)</title><rect x="458" y="276" width="9" height="15" fill="rgb(205,172,53)"/><text x="461.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="462" y="292" width="5" height="15" fill="rgb(247,25,27)"/><text x="465.00" y="302.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.35%)</title><rect x="467" y="292" width="4" height="15" fill="rgb(206,135,15)"/><text x="470.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (2 samples, 0.70%)</title><rect x="467" y="276" width="8" height="15" fill="rgb(221,56,19)"/><text x="470.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.35%)</title><rect x="471" y="292" width="4" height="15" fill="rgb(234,187,22)"/><text x="474.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.35%)</title><rect x="479" y="308" width="4" height="15" fill="rgb(235,120,14)"/><text x="482.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.70%)</title><rect x="483" y="308" width="8" height="15" fill="rgb(237,56,47)"/><text x="486.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="487" y="324" width="4" height="15" fill="rgb(237,126,30)"/><text x="490.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="487" y="340" width="4" height="15" fill="rgb(234,222,9)"/><text x="490.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.35%)</title><rect x="487" y="356" width="4" height="15" fill="rgb(253,104,20)"/><text x="490.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.35%)</title><rect x="487" y="372" width="4" height="15" fill="rgb(215,92,32)"/><text x="490.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.35%)</title><rect x="491" y="308" width="5" height="15" fill="rgb(252,212,3)"/><text x="494.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.35%)</title><rect x="491" y="324" width="5" height="15" fill="rgb(220,176,30)"/><text x="494.00" y="334.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.35%)</title><rect x="496" y="308" width="4" height="15" fill="rgb(241,220,36)"/><text x="499.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (68 samples, 23.94%)</title><rect x="221" y="132" width="283" height="15" fill="rgb(246,83,16)"/><text x="224.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (65 samples, 22.89%)</title><rect x="234" y="148" width="270" height="15" fill="rgb(241,160,29)"/><text x="237.00" y="158.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (62 samples, 21.83%)</title><rect x="246" y="164" width="258" height="15" fill="rgb(230,212,14)"/><text x="249.00" y="174.50">_run_sequence_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (55 samples, 19.37%)</title><rect x="275" y="180" width="229" height="15" fill="rgb(229,44,1)"/><text x="278.00" y="190.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 15.85%)</title><rect x="317" y="196" width="187" height="15" fill="rgb(226,161,5)"/><text x="320.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (42 samples, 14.79%)</title><rect x="329" y="212" width="175" height="15" fill="rgb(225,8,18)"/><text x="332.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (39 samples, 13.73%)</title><rect x="342" y="228" width="162" height="15" fill="rgb(247,150,40)"/><text x="345.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 4.23%)</title><rect x="454" y="244" width="50" height="15" fill="rgb(251,92,11)"/><text x="457.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.87%)</title><rect x="458" y="260" width="46" height="15" fill="rgb(205,125,46)"/><text x="461.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.46%)</title><rect x="475" y="276" width="29" height="15" fill="rgb(205,219,42)"/><text x="478.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.46%)</title><rect x="475" y="292" width="29" height="15" fill="rgb(242,217,5)"/><text x="478.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.35%)</title><rect x="500" y="308" width="4" height="15" fill="rgb(223,220,18)"/><text x="503.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="500" y="324" width="4" height="15" fill="rgb(224,29,10)"/><text x="503.00" y="334.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (70 samples, 24.65%)</title><rect x="217" y="100" width="291" height="15" fill="rgb(231,42,16)"/><text x="220.00" y="110.50">profile (bench_LogisticRegression_libli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (70 samples, 24.65%)</title><rect x="217" y="116" width="291" height="15" fill="rgb(240,66,1)"/><text x="220.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="504" y="132" width="4" height="15" fill="rgb(238,8,28)"/><text x="507.00" y="142.50"></text></g><g><title>0x7fed26bd9f83 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="504" y="148" width="4" height="15" fill="rgb(222,117,3)"/><text x="507.00" y="158.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (71 samples, 25.00%)</title><rect x="217" y="68" width="295" height="15" fill="rgb(231,193,29)"/><text x="220.00" y="78.50">profile_pyrt (bench_LogisticRegression_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (71 samples, 25.00%)</title><rect x="217" y="84" width="295" height="15" fill="rgb(244,130,25)"/><text x="220.00" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="508" y="100" width="4" height="15" fill="rgb(232,128,53)"/><text x="511.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="508" y="116" width="4" height="15" fill="rgb(207,88,54)"/><text x="511.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="508" y="132" width="4" height="15" fill="rgb(246,138,35)"/><text x="511.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="508" y="148" width="4" height="15" fill="rgb(224,146,13)"/><text x="511.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="508" y="164" width="4" height="15" fill="rgb(252,197,44)"/><text x="511.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.35%)</title><rect x="508" y="180" width="4" height="15" fill="rgb(236,21,49)"/><text x="511.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.35%)</title><rect x="508" y="196" width="4" height="15" fill="rgb(228,96,42)"/><text x="511.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="212" width="4" height="15" fill="rgb(235,4,6)"/><text x="511.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="228" width="4" height="15" fill="rgb(218,98,49)"/><text x="511.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="244" width="4" height="15" fill="rgb(216,69,33)"/><text x="511.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(221,13,0)"/><text x="511.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="276" width="4" height="15" fill="rgb(205,170,32)"/><text x="511.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.35%)</title><rect x="508" y="292" width="4" height="15" fill="rgb(254,224,11)"/><text x="511.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="308" width="4" height="15" fill="rgb(238,224,25)"/><text x="511.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="324" width="4" height="15" fill="rgb(214,125,50)"/><text x="511.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="340" width="4" height="15" fill="rgb(216,153,6)"/><text x="511.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="508" y="356" width="4" height="15" fill="rgb(227,217,41)"/><text x="511.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="508" y="372" width="4" height="15" fill="rgb(246,73,27)"/><text x="511.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.35%)</title><rect x="508" y="388" width="4" height="15" fill="rgb(244,45,51)"/><text x="511.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.35%)</title><rect x="508" y="404" width="4" height="15" fill="rgb(227,133,27)"/><text x="511.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.35%)</title><rect x="508" y="420" width="4" height="15" fill="rgb(214,10,52)"/><text x="511.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.35%)</title><rect x="508" y="436" width="4" height="15" fill="rgb(253,186,8)"/><text x="511.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.35%)</title><rect x="508" y="452" width="4" height="15" fill="rgb(212,54,52)"/><text x="511.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.35%)</title><rect x="508" y="468" width="4" height="15" fill="rgb(246,24,38)"/><text x="511.00" y="478.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.35%)</title><rect x="566" y="164" width="4" height="15" fill="rgb(224,217,20)"/><text x="569.00" y="174.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.35%)</title><rect x="566" y="180" width="4" height="15" fill="rgb(243,71,40)"/><text x="569.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="566" y="196" width="4" height="15" fill="rgb(226,47,37)"/><text x="569.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="566" y="212" width="4" height="15" fill="rgb(208,215,25)"/><text x="569.00" y="222.50"></text></g><g><title>0x7fed26b1c120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="575" y="180" width="4" height="15" fill="rgb(240,115,51)"/><text x="578.00" y="190.50"></text></g><g><title>0x7fed26b1c14a (libc-2.29.so) (1 samples, 0.35%)</title><rect x="583" y="260" width="4" height="15" fill="rgb(208,227,33)"/><text x="586.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="587" y="260" width="4" height="15" fill="rgb(215,210,22)"/><text x="590.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.35%)</title><rect x="587" y="276" width="4" height="15" fill="rgb(232,160,26)"/><text x="590.00" y="286.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.35%)</title><rect x="587" y="292" width="4" height="15" fill="rgb(252,214,33)"/><text x="590.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.06%)</title><rect x="583" y="244" width="12" height="15" fill="rgb(251,191,34)"/><text x="586.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="591" y="260" width="4" height="15" fill="rgb(233,5,26)"/><text x="594.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="595" y="260" width="5" height="15" fill="rgb(240,3,49)"/><text x="598.00" y="270.50"></text></g><g><title>array_add (number.c) (8 samples, 2.82%)</title><rect x="570" y="164" width="34" height="15" fill="rgb(207,10,54)"/><text x="573.00" y="174.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.11%)</title><rect x="579" y="180" width="25" height="15" fill="rgb(225,56,53)"/><text x="582.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.11%)</title><rect x="579" y="196" width="25" height="15" fill="rgb(228,14,9)"/><text x="582.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.11%)</title><rect x="579" y="212" width="25" height="15" fill="rgb(230,30,9)"/><text x="582.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.11%)</title><rect x="579" y="228" width="25" height="15" fill="rgb(227,220,13)"/><text x="582.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.70%)</title><rect x="595" y="244" width="9" height="15" fill="rgb(231,86,28)"/><text x="598.00" y="254.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.35%)</title><rect x="600" y="260" width="4" height="15" fill="rgb(212,141,51)"/><text x="603.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.70%)</title><rect x="604" y="180" width="8" height="15" fill="rgb(250,127,8)"/><text x="607.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="608" y="196" width="4" height="15" fill="rgb(250,21,5)"/><text x="611.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.06%)</title><rect x="604" y="164" width="12" height="15" fill="rgb(245,56,26)"/><text x="607.00" y="174.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.35%)</title><rect x="612" y="180" width="4" height="15" fill="rgb(253,6,31)"/><text x="615.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.35%)</title><rect x="612" y="196" width="4" height="15" fill="rgb(207,173,50)"/><text x="615.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.06%)</title><rect x="741" y="180" width="12" height="15" fill="rgb(232,65,22)"/><text x="744.00" y="190.50"></text></g><g><title>__exit__ (warnings.py) (6 samples, 2.11%)</title><rect x="753" y="180" width="25" height="15" fill="rgb(235,226,8)"/><text x="756.00" y="190.50">_..</text></g><g><title>__init__ (warnings.py) (2 samples, 0.70%)</title><rect x="778" y="180" width="8" height="15" fill="rgb(242,57,22)"/><text x="781.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="807" y="196" width="4" height="15" fill="rgb(218,219,20)"/><text x="810.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 3.17%)</title><rect x="786" y="180" width="38" height="15" fill="rgb(242,213,54)"/><text x="789.00" y="190.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="811" y="196" width="13" height="15" fill="rgb(217,39,34)"/><text x="814.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.70%)</title><rect x="824" y="180" width="8" height="15" fill="rgb(247,196,34)"/><text x="827.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.35%)</title><rect x="870" y="196" width="4" height="15" fill="rgb(223,10,24)"/><text x="873.00" y="206.50"></text></g><g><title>0x7fed26b1c12b (libc-2.29.so) (1 samples, 0.35%)</title><rect x="870" y="212" width="4" height="15" fill="rgb(230,126,30)"/><text x="873.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 5.63%)</title><rect x="832" y="180" width="67" height="15" fill="rgb(205,127,53)"/><text x="835.00" y="190.50">_num_sa..</text></g><g><title>__instancecheck__ (abc.py) (6 samples, 2.11%)</title><rect x="874" y="196" width="25" height="15" fill="rgb(242,21,28)"/><text x="877.00" y="206.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (4 samples, 1.41%)</title><rect x="882" y="212" width="17" height="15" fill="rgb(218,131,54)"/><text x="885.00" y="222.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.35%)</title><rect x="899" y="180" width="4" height="15" fill="rgb(215,56,25)"/><text x="902.00" y="190.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="899" y="196" width="4" height="15" fill="rgb(223,142,20)"/><text x="902.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.70%)</title><rect x="903" y="180" width="8" height="15" fill="rgb(237,48,46)"/><text x="906.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.35%)</title><rect x="911" y="180" width="4" height="15" fill="rgb(254,141,16)"/><text x="914.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.35%)</title><rect x="919" y="196" width="5" height="15" fill="rgb(207,59,10)"/><text x="922.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 1.06%)</title><rect x="915" y="180" width="13" height="15" fill="rgb(245,133,1)"/><text x="918.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.35%)</title><rect x="924" y="196" width="4" height="15" fill="rgb(231,126,6)"/><text x="927.00" y="206.50"></text></g><g><title>0x7fed26b11e6d (libc-2.29.so) (1 samples, 0.35%)</title><rect x="924" y="212" width="4" height="15" fill="rgb(240,207,29)"/><text x="927.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (85 samples, 29.93%)</title><rect x="616" y="164" width="353" height="15" fill="rgb(224,180,41)"/><text x="619.00" y="174.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (10 samples, 3.52%)</title><rect x="928" y="180" width="41" height="15" fill="rgb(226,60,1)"/><text x="931.00" y="190.50">sim..</text></g><g><title>_add_filter (warnings.py) (7 samples, 2.46%)</title><rect x="940" y="196" width="29" height="15" fill="rgb(239,47,22)"/><text x="943.00" y="206.50">_a..</text></g><g><title>0x7fed26b1c120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1032" y="196" width="4" height="15" fill="rgb(218,79,41)"/><text x="1035.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.76%)</title><rect x="1036" y="196" width="21" height="15" fill="rgb(231,126,53)"/><text x="1039.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (24 samples, 8.45%)</title><rect x="969" y="164" width="100" height="15" fill="rgb(247,80,22)"/><text x="972.00" y="174.50">check_is_fit..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (20 samples, 7.04%)</title><rect x="986" y="180" width="83" height="15" fill="rgb(221,221,38)"/><text x="989.00" y="190.50">&lt;listcomp..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.06%)</title><rect x="1057" y="196" width="12" height="15" fill="rgb(251,68,44)"/><text x="1060.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.70%)</title><rect x="1102" y="180" width="9" height="15" fill="rgb(233,149,2)"/><text x="1105.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="1111" y="196" width="4" height="15" fill="rgb(210,46,28)"/><text x="1114.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="1111" y="212" width="4" height="15" fill="rgb(226,224,47)"/><text x="1114.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.35%)</title><rect x="1111" y="228" width="4" height="15" fill="rgb(242,149,12)"/><text x="1114.00" y="238.50"></text></g><g><title>0x7fed26afb965 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1115" y="228" width="4" height="15" fill="rgb(219,201,22)"/><text x="1118.00" y="238.50"></text></g><g><title>0x7fed26b1c120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1119" y="228" width="4" height="15" fill="rgb(236,45,2)"/><text x="1122.00" y="238.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.35%)</title><rect x="1127" y="276" width="4" height="15" fill="rgb(240,128,33)"/><text x="1130.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(251,104,53)"/><text x="1130.00" y="302.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1127" y="308" width="4" height="15" fill="rgb(218,4,9)"/><text x="1130.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.06%)</title><rect x="1127" y="260" width="13" height="15" fill="rgb(237,55,13)"/><text x="1130.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.70%)</title><rect x="1131" y="276" width="9" height="15" fill="rgb(241,10,33)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.70%)</title><rect x="1131" y="292" width="9" height="15" fill="rgb(217,136,39)"/><text x="1134.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.70%)</title><rect x="1131" y="308" width="9" height="15" fill="rgb(205,130,46)"/><text x="1134.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.70%)</title><rect x="1131" y="324" width="9" height="15" fill="rgb(237,126,4)"/><text x="1134.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 2.11%)</title><rect x="1123" y="228" width="25" height="15" fill="rgb(254,91,19)"/><text x="1126.00" y="238.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.76%)</title><rect x="1127" y="244" width="21" height="15" fill="rgb(206,138,45)"/><text x="1130.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.70%)</title><rect x="1140" y="260" width="8" height="15" fill="rgb(234,122,50)"/><text x="1143.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="1144" y="276" width="4" height="15" fill="rgb(237,41,19)"/><text x="1147.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="1144" y="292" width="4" height="15" fill="rgb(227,120,7)"/><text x="1147.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="1144" y="308" width="4" height="15" fill="rgb(216,79,29)"/><text x="1147.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1148" y="228" width="4" height="15" fill="rgb(220,159,21)"/><text x="1151.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="1148" y="244" width="4" height="15" fill="rgb(231,206,46)"/><text x="1151.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="1148" y="260" width="4" height="15" fill="rgb(253,60,32)"/><text x="1151.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="1148" y="276" width="4" height="15" fill="rgb(231,37,14)"/><text x="1151.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.70%)</title><rect x="1152" y="244" width="8" height="15" fill="rgb(221,190,28)"/><text x="1155.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.35%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(207,123,23)"/><text x="1159.00" y="270.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.35%)</title><rect x="1156" y="276" width="4" height="15" fill="rgb(247,135,45)"/><text x="1159.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 1.06%)</title><rect x="1152" y="228" width="13" height="15" fill="rgb(253,43,41)"/><text x="1155.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1160" y="244" width="5" height="15" fill="rgb(243,218,35)"/><text x="1163.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.35%)</title><rect x="1160" y="260" width="5" height="15" fill="rgb(249,110,45)"/><text x="1163.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1165" y="228" width="4" height="15" fill="rgb(241,198,13)"/><text x="1168.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.70%)</title><rect x="1169" y="228" width="8" height="15" fill="rgb(222,5,17)"/><text x="1172.00" y="238.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (161 samples, 56.69%)</title><rect x="512" y="100" width="669" height="15" fill="rgb(216,181,2)"/><text x="515.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (161 samples, 56.69%)</title><rect x="512" y="116" width="669" height="15" fill="rgb(224,119,24)"/><text x="515.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (154 samples, 54.23%)</title><rect x="541" y="132" width="640" height="15" fill="rgb(222,80,25)"/><text x="544.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (153 samples, 53.87%)</title><rect x="545" y="148" width="636" height="15" fill="rgb(234,173,51)"/><text x="548.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (27 samples, 9.51%)</title><rect x="1069" y="164" width="112" height="15" fill="rgb(223,143,30)"/><text x="1072.00" y="174.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 5.99%)</title><rect x="1111" y="180" width="70" height="15" fill="rgb(226,225,48)"/><text x="1114.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 5.63%)</title><rect x="1115" y="196" width="66" height="15" fill="rgb(206,170,42)"/><text x="1118.00" y="206.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (16 samples, 5.63%)</title><rect x="1115" y="212" width="66" height="15" fill="rgb(252,71,12)"/><text x="1118.00" y="222.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1177" y="228" width="4" height="15" fill="rgb(206,23,32)"/><text x="1180.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1177" y="244" width="4" height="15" fill="rgb(235,154,5)"/><text x="1180.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1177" y="260" width="4" height="15" fill="rgb(250,106,36)"/><text x="1180.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (283 samples, 99.65%)</title><rect x="10" y="52" width="1175" height="15" fill="rgb(248,227,11)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (162 samples, 57.04%)</title><rect x="512" y="68" width="673" height="15" fill="rgb(209,31,0)"/><text x="515.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_ra..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (162 samples, 57.04%)</title><rect x="512" y="84" width="673" height="15" fill="rgb(214,149,37)"/><text x="515.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_50_12_float_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="1181" y="100" width="4" height="15" fill="rgb(212,101,49)"/><text x="1184.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.35%)</title><rect x="1181" y="116" width="4" height="15" fill="rgb(251,94,10)"/><text x="1184.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.35%)</title><rect x="1181" y="132" width="4" height="15" fill="rgb(244,146,21)"/><text x="1184.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="1181" y="148" width="4" height="15" fill="rgb(236,81,13)"/><text x="1184.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="1181" y="164" width="4" height="15" fill="rgb(238,191,29)"/><text x="1184.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="1181" y="180" width="4" height="15" fill="rgb(215,41,40)"/><text x="1184.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(222,11,27)"/><text x="1184.00" y="206.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="1181" y="212" width="4" height="15" fill="rgb(254,155,36)"/><text x="1184.00" y="222.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="1181" y="228" width="4" height="15" fill="rgb(214,76,33)"/><text x="1184.00" y="238.50"></text></g><g><title>all (284 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,200,51)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.35%)</title><rect x="1185" y="52" width="5" height="15" fill="rgb(245,110,40)"/><text x="1188.00" y="62.50"></text></g></g></svg>