<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(216,179,5)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(234,204,25)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(211,218,50)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(210,31,54)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(209,16,43)"/><text x="13.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(233,128,46)"/><text x="13.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(246,189,51)"/><text x="13.00" y="1038.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(244,229,40)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(237,145,16)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(244,42,49)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(218,13,32)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(238,88,12)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(243,138,13)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(239,196,12)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(217,83,9)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(209,112,48)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(217,133,53)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(242,75,3)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(213,65,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(226,180,54)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(206,161,13)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(234,97,46)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(247,48,37)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(245,3,21)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(224,182,1)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.19%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(212,173,21)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(214,103,9)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(213,5,32)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(221,212,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(249,134,36)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(247,18,41)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.19%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(252,2,6)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.19%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(211,7,23)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.19%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(254,110,51)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="17" y="868" width="7" height="15" fill="rgb(210,84,21)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="17" y="884" width="7" height="15" fill="rgb(252,102,25)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(236,56,44)"/><text x="23.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.30%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(210,166,22)"/><text x="23.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.30%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(237,32,41)"/><text x="23.00" y="942.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.30%)</title><rect x="24" y="708" width="3" height="15" fill="rgb(215,124,54)"/><text x="27.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="724" width="3" height="15" fill="rgb(222,192,30)"/><text x="27.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="740" width="3" height="15" fill="rgb(228,187,25)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="756" width="3" height="15" fill="rgb(246,139,0)"/><text x="27.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(225,32,2)"/><text x="27.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(230,13,19)"/><text x="27.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(220,175,38)"/><text x="27.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(232,57,3)"/><text x="27.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(249,129,3)"/><text x="27.00" y="846.50"></text></g><g><title>0x7f8d01e51652 (?) (1 samples, 0.30%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(234,127,31)"/><text x="27.00" y="862.50"></text></g><g><title>0x7f8d01e56ad0 (?) (1 samples, 0.30%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(206,90,30)"/><text x="27.00" y="878.50"></text></g><g><title>0x7f8d01e603d2 (?) (1 samples, 0.30%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(234,17,42)"/><text x="27.00" y="894.50"></text></g><g><title>0x7f8d01ed2f40 (?) (1 samples, 0.30%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(235,200,2)"/><text x="27.00" y="910.50"></text></g><g><title>0x7f8d01f045bf (?) (1 samples, 0.30%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(230,179,44)"/><text x="27.00" y="926.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(245,144,37)"/><text x="27.00" y="942.50"></text></g><g><title>0x7f8d01f0aec0 (?) (1 samples, 0.30%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(231,92,34)"/><text x="27.00" y="958.50"></text></g><g><title>0x7f8d01eaf704 (?) (1 samples, 0.30%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(234,64,47)"/><text x="27.00" y="974.50"></text></g><g><title>0x7f8d01eaf5d3 (?) (1 samples, 0.30%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(248,44,38)"/><text x="27.00" y="990.50"></text></g><g><title>0x7f8d01eaf4cf (?) (1 samples, 0.30%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(242,6,7)"/><text x="27.00" y="1006.50"></text></g><g><title>0x7f8d01eaef85 (?) (1 samples, 0.30%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(227,16,38)"/><text x="27.00" y="1022.50"></text></g><g><title>0x7f8d01ead789 (?) (1 samples, 0.30%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(205,16,29)"/><text x="27.00" y="1038.50"></text></g><g><title>0x7f8d01eaa235 (?) (1 samples, 0.30%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(214,228,37)"/><text x="27.00" y="1054.50"></text></g><g><title>0x7f8d01ea788d (?) (1 samples, 0.30%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(212,182,53)"/><text x="27.00" y="1070.50"></text></g><g><title>0x7f8d01e95558 (?) (1 samples, 0.30%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(248,66,50)"/><text x="27.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.79%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(251,71,34)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(215,204,43)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.79%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(226,163,54)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(240,2,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(253,122,52)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(254,22,2)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.79%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(230,102,10)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(206,183,34)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.79%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(242,205,36)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(243,38,0)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(222,93,21)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(213,174,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.79%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(228,87,12)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(222,98,11)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.79%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(231,183,13)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="596" width="7" height="15" fill="rgb(208,41,7)"/><text x="27.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="612" width="7" height="15" fill="rgb(219,90,28)"/><text x="27.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="628" width="7" height="15" fill="rgb(216,24,54)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="644" width="7" height="15" fill="rgb(231,181,44)"/><text x="27.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="660" width="7" height="15" fill="rgb(219,127,6)"/><text x="27.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="676" width="7" height="15" fill="rgb(243,6,41)"/><text x="27.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="692" width="7" height="15" fill="rgb(208,35,37)"/><text x="27.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py) (1 samples, 0.30%)</title><rect x="27" y="708" width="4" height="15" fill="rgb(206,20,18)"/><text x="30.00" y="718.50"></text></g><g><title>0x7f8d01e574ac (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="27" y="724" width="4" height="15" fill="rgb(234,174,43)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="740" width="4" height="15" fill="rgb(220,222,20)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="756" width="4" height="15" fill="rgb(206,149,26)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="772" width="4" height="15" fill="rgb(216,12,43)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="788" width="4" height="15" fill="rgb(214,115,30)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="804" width="4" height="15" fill="rgb(252,80,38)"/><text x="30.00" y="814.50"></text></g><g><title>&lt;module&gt; (protobuf/internal/well_known_types.py) (1 samples, 0.30%)</title><rect x="27" y="820" width="4" height="15" fill="rgb(250,5,2)"/><text x="30.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(226,210,0)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(248,211,45)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(252,165,3)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="244" width="24" height="15" fill="rgb(237,201,14)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.08%)</title><rect x="10" y="260" width="24" height="15" fill="rgb(221,214,54)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="276" width="24" height="15" fill="rgb(245,110,47)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 2.08%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(223,68,19)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(244,51,4)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(230,146,43)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.08%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(228,176,18)"/><text x="13.00" y="350.50">_..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="31" y="356" width="3" height="15" fill="rgb(243,9,25)"/><text x="34.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="31" y="372" width="3" height="15" fill="rgb(249,65,27)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="31" y="388" width="3" height="15" fill="rgb(215,205,34)"/><text x="34.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="404" width="3" height="15" fill="rgb(244,50,15)"/><text x="34.00" y="414.50"></text></g><g><title>0x7f8d13d8f995 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="420" width="3" height="15" fill="rgb(215,71,25)"/><text x="34.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="436" width="3" height="15" fill="rgb(222,188,19)"/><text x="34.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="452" width="3" height="15" fill="rgb(253,100,9)"/><text x="34.00" y="462.50"></text></g><g><title>0x7f8d13d8f258 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="468" width="3" height="15" fill="rgb(211,79,12)"/><text x="34.00" y="478.50"></text></g><g><title>0x7f8d13ddcd7a (ld-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(245,32,40)"/><text x="34.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(219,51,10)"/><text x="34.00" y="510.50"></text></g><g><title>0x7f8d13ddd345 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(216,60,43)"/><text x="34.00" y="526.50"></text></g><g><title>0x7f8d13dd5fec (ld-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(233,115,22)"/><text x="34.00" y="542.50"></text></g><g><title>0x7f8d13dd4491 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="548" width="3" height="15" fill="rgb(240,44,7)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="484" width="4" height="15" fill="rgb(234,37,25)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="500" width="4" height="15" fill="rgb(232,50,19)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="516" width="4" height="15" fill="rgb(206,139,42)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="532" width="4" height="15" fill="rgb(227,65,52)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="548" width="4" height="15" fill="rgb(237,181,18)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="564" width="4" height="15" fill="rgb(252,152,12)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="580" width="4" height="15" fill="rgb(235,215,45)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="596" width="4" height="15" fill="rgb(218,115,16)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="612" width="4" height="15" fill="rgb(225,106,24)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="628" width="4" height="15" fill="rgb(218,67,3)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="644" width="4" height="15" fill="rgb(214,39,47)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="660" width="4" height="15" fill="rgb(232,129,24)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.30%)</title><rect x="34" y="676" width="4" height="15" fill="rgb(252,184,13)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="692" width="4" height="15" fill="rgb(230,16,31)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="708" width="4" height="15" fill="rgb(251,63,3)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="724" width="4" height="15" fill="rgb(226,7,11)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="740" width="4" height="15" fill="rgb(209,69,21)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="756" width="4" height="15" fill="rgb(226,114,40)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="772" width="4" height="15" fill="rgb(222,183,39)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="788" width="4" height="15" fill="rgb(228,29,2)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(232,73,50)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(250,228,48)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(236,38,17)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(235,73,21)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.30%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(252,216,27)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(214,82,26)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(251,96,37)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(208,76,44)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(209,103,3)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(224,92,39)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(242,53,22)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(237,90,51)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(217,8,28)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(218,37,50)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(211,185,15)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(246,37,33)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(235,0,13)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(237,222,33)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1092" width="4" height="15" fill="rgb(236,31,53)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.30%)</title><rect x="34" y="1108" width="4" height="15" fill="rgb(246,109,1)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(251,142,46)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1140" width="4" height="15" fill="rgb(210,77,25)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1156" width="4" height="15" fill="rgb(236,54,8)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1172" width="4" height="15" fill="rgb(244,193,23)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1188" width="4" height="15" fill="rgb(212,141,19)"/><text x="37.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.30%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(242,22,1)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(207,103,1)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1236" width="4" height="15" fill="rgb(234,45,9)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1252" width="4" height="15" fill="rgb(230,90,30)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1268" width="4" height="15" fill="rgb(209,228,47)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1284" width="4" height="15" fill="rgb(205,173,36)"/><text x="37.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="1300" width="4" height="15" fill="rgb(237,74,16)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1316" width="4" height="15" fill="rgb(242,108,30)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1332" width="4" height="15" fill="rgb(226,10,21)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1348" width="4" height="15" fill="rgb(226,166,54)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1364" width="4" height="15" fill="rgb(215,196,18)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1380" width="4" height="15" fill="rgb(235,185,52)"/><text x="37.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.30%)</title><rect x="34" y="1396" width="4" height="15" fill="rgb(245,227,36)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1412" width="4" height="15" fill="rgb(244,199,23)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1428" width="4" height="15" fill="rgb(225,215,37)"/><text x="37.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1444" width="4" height="15" fill="rgb(239,185,52)"/><text x="37.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1460" width="4" height="15" fill="rgb(209,170,42)"/><text x="37.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1476" width="4" height="15" fill="rgb(224,197,19)"/><text x="37.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.30%)</title><rect x="34" y="1492" width="4" height="15" fill="rgb(221,183,1)"/><text x="37.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1508" width="4" height="15" fill="rgb(223,200,35)"/><text x="37.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1524" width="4" height="15" fill="rgb(213,164,32)"/><text x="37.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1540" width="4" height="15" fill="rgb(246,217,45)"/><text x="37.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1556" width="4" height="15" fill="rgb(209,202,28)"/><text x="37.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1572" width="4" height="15" fill="rgb(247,17,52)"/><text x="37.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1588" width="4" height="15" fill="rgb(249,191,53)"/><text x="37.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1604" width="4" height="15" fill="rgb(238,93,32)"/><text x="37.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="1620" width="4" height="15" fill="rgb(239,106,40)"/><text x="37.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1636" width="4" height="15" fill="rgb(240,148,7)"/><text x="37.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1652" width="4" height="15" fill="rgb(205,176,23)"/><text x="37.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1668" width="4" height="15" fill="rgb(254,79,49)"/><text x="37.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1684" width="4" height="15" fill="rgb(233,226,50)"/><text x="37.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1700" width="4" height="15" fill="rgb(242,200,48)"/><text x="37.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py) (1 samples, 0.30%)</title><rect x="34" y="1716" width="4" height="15" fill="rgb(236,223,6)"/><text x="37.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1732" width="4" height="15" fill="rgb(244,208,35)"/><text x="37.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1748" width="4" height="15" fill="rgb(217,54,25)"/><text x="37.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1764" width="4" height="15" fill="rgb(216,85,2)"/><text x="37.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1780" width="4" height="15" fill="rgb(209,144,29)"/><text x="37.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1796" width="4" height="15" fill="rgb(237,57,40)"/><text x="37.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py) (1 samples, 0.30%)</title><rect x="34" y="1812" width="4" height="15" fill="rgb(207,193,50)"/><text x="37.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1828" width="4" height="15" fill="rgb(217,129,41)"/><text x="37.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1844" width="4" height="15" fill="rgb(253,182,10)"/><text x="37.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="34" y="1860" width="4" height="15" fill="rgb(222,197,1)"/><text x="37.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1876" width="4" height="15" fill="rgb(213,73,46)"/><text x="37.00" y="1886.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1892" width="4" height="15" fill="rgb(226,15,35)"/><text x="37.00" y="1902.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="1908" width="4" height="15" fill="rgb(245,70,38)"/><text x="37.00" y="1918.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.30%)</title><rect x="38" y="1108" width="3" height="15" fill="rgb(249,212,41)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(215,22,39)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1140" width="3" height="15" fill="rgb(251,116,4)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1156" width="3" height="15" fill="rgb(244,16,46)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="38" y="1172" width="3" height="15" fill="rgb(225,214,24)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1188" width="3" height="15" fill="rgb(227,22,10)"/><text x="41.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.30%)</title><rect x="38" y="1204" width="3" height="15" fill="rgb(236,48,40)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1220" width="3" height="15" fill="rgb(243,103,28)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1236" width="3" height="15" fill="rgb(251,54,30)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1252" width="3" height="15" fill="rgb(212,47,3)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="38" y="1268" width="3" height="15" fill="rgb(221,50,19)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1284" width="3" height="15" fill="rgb(207,219,37)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.30%)</title><rect x="38" y="1300" width="3" height="15" fill="rgb(221,143,27)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1316" width="3" height="15" fill="rgb(254,29,20)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1332" width="3" height="15" fill="rgb(244,147,45)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1348" width="3" height="15" fill="rgb(226,66,9)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="38" y="1364" width="3" height="15" fill="rgb(226,101,25)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="38" y="1380" width="3" height="15" fill="rgb(238,98,49)"/><text x="41.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.30%)</title><rect x="38" y="1396" width="3" height="15" fill="rgb(205,187,31)"/><text x="41.00" y="1406.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.30%)</title><rect x="38" y="1412" width="3" height="15" fill="rgb(212,229,13)"/><text x="41.00" y="1422.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.30%)</title><rect x="38" y="1428" width="3" height="15" fill="rgb(228,140,5)"/><text x="41.00" y="1438.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="38" y="1444" width="3" height="15" fill="rgb(205,170,29)"/><text x="41.00" y="1454.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="38" y="1460" width="3" height="15" fill="rgb(230,20,52)"/><text x="41.00" y="1470.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.89%)</title><rect x="34" y="436" width="11" height="15" fill="rgb(210,39,46)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.89%)</title><rect x="34" y="452" width="11" height="15" fill="rgb(231,20,38)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.89%)</title><rect x="34" y="468" width="11" height="15" fill="rgb(249,60,45)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="484" width="7" height="15" fill="rgb(228,99,31)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="500" width="7" height="15" fill="rgb(230,159,2)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="516" width="7" height="15" fill="rgb(221,36,53)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.60%)</title><rect x="38" y="532" width="7" height="15" fill="rgb(229,211,11)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="548" width="7" height="15" fill="rgb(224,168,15)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="564" width="7" height="15" fill="rgb(231,218,44)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="580" width="7" height="15" fill="rgb(243,7,37)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="596" width="7" height="15" fill="rgb(245,206,39)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="612" width="7" height="15" fill="rgb(236,43,20)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.60%)</title><rect x="38" y="628" width="7" height="15" fill="rgb(227,122,41)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="644" width="7" height="15" fill="rgb(247,44,46)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="660" width="7" height="15" fill="rgb(241,57,0)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="676" width="7" height="15" fill="rgb(235,97,49)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="692" width="7" height="15" fill="rgb(248,64,32)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="708" width="7" height="15" fill="rgb(213,8,45)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.60%)</title><rect x="38" y="724" width="7" height="15" fill="rgb(224,52,13)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="740" width="7" height="15" fill="rgb(230,128,51)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="756" width="7" height="15" fill="rgb(225,128,22)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="772" width="7" height="15" fill="rgb(219,49,23)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="788" width="7" height="15" fill="rgb(248,66,48)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="804" width="7" height="15" fill="rgb(252,154,27)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.60%)</title><rect x="38" y="820" width="7" height="15" fill="rgb(205,209,10)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="836" width="7" height="15" fill="rgb(211,227,30)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="852" width="7" height="15" fill="rgb(227,97,51)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="868" width="7" height="15" fill="rgb(221,3,14)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="884" width="7" height="15" fill="rgb(225,225,35)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="900" width="7" height="15" fill="rgb(228,19,48)"/><text x="41.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.60%)</title><rect x="38" y="916" width="7" height="15" fill="rgb(219,101,24)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="932" width="7" height="15" fill="rgb(218,162,54)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="948" width="7" height="15" fill="rgb(218,45,14)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="964" width="7" height="15" fill="rgb(221,105,18)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="980" width="7" height="15" fill="rgb(229,56,30)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="996" width="7" height="15" fill="rgb(213,148,46)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.60%)</title><rect x="38" y="1012" width="7" height="15" fill="rgb(221,139,48)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1028" width="7" height="15" fill="rgb(237,130,54)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1044" width="7" height="15" fill="rgb(241,116,4)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1060" width="7" height="15" fill="rgb(207,210,23)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="38" y="1076" width="7" height="15" fill="rgb(205,74,47)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="38" y="1092" width="7" height="15" fill="rgb(240,145,18)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.30%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(213,51,42)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(210,112,32)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(214,68,17)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(221,202,37)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(225,189,33)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(245,141,47)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.30%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(214,183,13)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(248,47,48)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1236" width="4" height="15" fill="rgb(238,0,30)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1252" width="4" height="15" fill="rgb(212,145,1)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1268" width="4" height="15" fill="rgb(227,65,36)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1284" width="4" height="15" fill="rgb(215,211,7)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.30%)</title><rect x="41" y="1300" width="4" height="15" fill="rgb(223,47,3)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1316" width="4" height="15" fill="rgb(245,15,41)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1332" width="4" height="15" fill="rgb(218,171,17)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1348" width="4" height="15" fill="rgb(249,193,52)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1364" width="4" height="15" fill="rgb(236,214,32)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1380" width="4" height="15" fill="rgb(223,191,33)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.30%)</title><rect x="41" y="1396" width="4" height="15" fill="rgb(213,143,20)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1412" width="4" height="15" fill="rgb(226,47,29)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1428" width="4" height="15" fill="rgb(225,34,9)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1444" width="4" height="15" fill="rgb(235,125,1)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1460" width="4" height="15" fill="rgb(216,50,50)"/><text x="44.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1476" width="4" height="15" fill="rgb(245,210,51)"/><text x="44.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.30%)</title><rect x="41" y="1492" width="4" height="15" fill="rgb(216,227,28)"/><text x="44.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1508" width="4" height="15" fill="rgb(220,49,33)"/><text x="44.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1524" width="4" height="15" fill="rgb(254,224,35)"/><text x="44.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1540" width="4" height="15" fill="rgb(250,99,5)"/><text x="44.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1556" width="4" height="15" fill="rgb(206,192,35)"/><text x="44.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1572" width="4" height="15" fill="rgb(237,172,34)"/><text x="44.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1588" width="4" height="15" fill="rgb(219,51,45)"/><text x="44.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1604" width="4" height="15" fill="rgb(244,44,42)"/><text x="44.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1620" width="4" height="15" fill="rgb(221,189,28)"/><text x="44.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.30%)</title><rect x="41" y="1636" width="4" height="15" fill="rgb(253,2,7)"/><text x="44.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1652" width="4" height="15" fill="rgb(226,63,27)"/><text x="44.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1668" width="4" height="15" fill="rgb(228,203,11)"/><text x="44.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1684" width="4" height="15" fill="rgb(240,85,26)"/><text x="44.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1700" width="4" height="15" fill="rgb(234,80,46)"/><text x="44.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1716" width="4" height="15" fill="rgb(253,172,30)"/><text x="44.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="41" y="1732" width="4" height="15" fill="rgb(253,166,19)"/><text x="44.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="41" y="1748" width="4" height="15" fill="rgb(217,135,49)"/><text x="44.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.30%)</title><rect x="41" y="1764" width="4" height="15" fill="rgb(252,104,8)"/><text x="44.00" y="1774.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.19%)</title><rect x="34" y="340" width="14" height="15" fill="rgb(229,140,26)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="34" y="356" width="14" height="15" fill="rgb(208,133,9)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="34" y="372" width="14" height="15" fill="rgb(216,85,5)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="34" y="388" width="14" height="15" fill="rgb(235,223,0)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.19%)</title><rect x="34" y="404" width="14" height="15" fill="rgb(243,126,14)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.19%)</title><rect x="34" y="420" width="14" height="15" fill="rgb(233,221,52)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.30%)</title><rect x="45" y="436" width="3" height="15" fill="rgb(229,178,50)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="452" width="3" height="15" fill="rgb(226,113,11)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="468" width="3" height="15" fill="rgb(237,178,37)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="484" width="3" height="15" fill="rgb(226,33,21)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="45" y="500" width="3" height="15" fill="rgb(246,205,14)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="516" width="3" height="15" fill="rgb(237,178,3)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.30%)</title><rect x="45" y="532" width="3" height="15" fill="rgb(235,80,42)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="548" width="3" height="15" fill="rgb(242,28,34)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="564" width="3" height="15" fill="rgb(210,213,24)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="580" width="3" height="15" fill="rgb(216,120,23)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="45" y="596" width="3" height="15" fill="rgb(243,98,33)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="612" width="3" height="15" fill="rgb(231,116,15)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.30%)</title><rect x="45" y="628" width="3" height="15" fill="rgb(219,22,8)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="644" width="3" height="15" fill="rgb(249,27,10)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(210,218,43)"/><text x="48.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(206,31,9)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(209,140,52)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(225,208,44)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(246,218,37)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(225,220,26)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(212,23,9)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (http/__init__.py) (1 samples, 0.30%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(211,180,46)"/><text x="48.00" y="782.50"></text></g><g><title>HTTPStatus (http/__init__.py) (1 samples, 0.30%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(239,42,30)"/><text x="48.00" y="798.50"></text></g><g><title>__setitem__ (enum.py) (1 samples, 0.30%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(254,87,18)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 1.49%)</title><rect x="34" y="244" width="18" height="15" fill="rgb(214,227,22)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="260" width="18" height="15" fill="rgb(229,73,45)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="276" width="18" height="15" fill="rgb(223,192,36)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="292" width="18" height="15" fill="rgb(212,26,31)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.49%)</title><rect x="34" y="308" width="18" height="15" fill="rgb(228,202,18)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.49%)</title><rect x="34" y="324" width="18" height="15" fill="rgb(205,183,15)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.30%)</title><rect x="48" y="340" width="4" height="15" fill="rgb(241,25,49)"/><text x="51.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="356" width="4" height="15" fill="rgb(226,132,50)"/><text x="51.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="372" width="4" height="15" fill="rgb(207,4,44)"/><text x="51.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="388" width="4" height="15" fill="rgb(236,37,0)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="404" width="4" height="15" fill="rgb(224,135,36)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="420" width="4" height="15" fill="rgb(207,19,15)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="436" width="4" height="15" fill="rgb(213,115,1)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="452" width="4" height="15" fill="rgb(230,6,36)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="468" width="4" height="15" fill="rgb(217,120,16)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.30%)</title><rect x="48" y="484" width="4" height="15" fill="rgb(214,38,41)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="500" width="4" height="15" fill="rgb(234,121,24)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="516" width="4" height="15" fill="rgb(244,188,3)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="532" width="4" height="15" fill="rgb(235,216,25)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="548" width="4" height="15" fill="rgb(250,142,4)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="564" width="4" height="15" fill="rgb(218,44,25)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.30%)</title><rect x="48" y="580" width="4" height="15" fill="rgb(243,203,15)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="596" width="4" height="15" fill="rgb(229,134,15)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="612" width="4" height="15" fill="rgb(232,159,12)"/><text x="51.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="628" width="4" height="15" fill="rgb(247,141,51)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="644" width="4" height="15" fill="rgb(223,198,39)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="660" width="4" height="15" fill="rgb(231,169,38)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="676" width="4" height="15" fill="rgb(246,46,18)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="692" width="4" height="15" fill="rgb(230,15,53)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="708" width="4" height="15" fill="rgb(205,142,29)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.30%)</title><rect x="48" y="724" width="4" height="15" fill="rgb(253,166,23)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="740" width="4" height="15" fill="rgb(239,18,12)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="756" width="4" height="15" fill="rgb(247,66,53)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="772" width="4" height="15" fill="rgb(221,140,47)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="788" width="4" height="15" fill="rgb(219,160,5)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="804" width="4" height="15" fill="rgb(240,71,48)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.30%)</title><rect x="48" y="820" width="4" height="15" fill="rgb(215,131,43)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="836" width="4" height="15" fill="rgb(212,11,49)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="852" width="4" height="15" fill="rgb(206,64,13)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="868" width="4" height="15" fill="rgb(205,142,12)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="884" width="4" height="15" fill="rgb(213,68,16)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="900" width="4" height="15" fill="rgb(214,134,27)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.30%)</title><rect x="48" y="916" width="4" height="15" fill="rgb(229,152,1)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="932" width="4" height="15" fill="rgb(240,115,2)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="948" width="4" height="15" fill="rgb(209,10,47)"/><text x="51.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(225,111,8)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(211,146,6)"/><text x="51.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="996" width="4" height="15" fill="rgb(243,144,51)"/><text x="51.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1012" width="4" height="15" fill="rgb(223,14,20)"/><text x="51.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1028" width="4" height="15" fill="rgb(237,97,25)"/><text x="51.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1044" width="4" height="15" fill="rgb(218,135,48)"/><text x="51.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.30%)</title><rect x="48" y="1060" width="4" height="15" fill="rgb(252,210,6)"/><text x="51.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1076" width="4" height="15" fill="rgb(250,7,16)"/><text x="51.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1092" width="4" height="15" fill="rgb(246,84,17)"/><text x="51.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1108" width="4" height="15" fill="rgb(238,26,19)"/><text x="51.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(212,149,37)"/><text x="51.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(227,195,2)"/><text x="51.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py) (1 samples, 0.30%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(254,64,18)"/><text x="51.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(209,41,14)"/><text x="51.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(218,204,1)"/><text x="51.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(226,123,38)"/><text x="51.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1220" width="4" height="15" fill="rgb(216,139,45)"/><text x="51.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1236" width="4" height="15" fill="rgb(251,42,49)"/><text x="51.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog_fake_classes.py) (1 samples, 0.30%)</title><rect x="48" y="1252" width="4" height="15" fill="rgb(213,78,3)"/><text x="51.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1268" width="4" height="15" fill="rgb(228,153,8)"/><text x="51.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1284" width="4" height="15" fill="rgb(209,222,20)"/><text x="51.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="1300" width="4" height="15" fill="rgb(253,74,26)"/><text x="51.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1316" width="4" height="15" fill="rgb(234,166,41)"/><text x="51.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1332" width="4" height="15" fill="rgb(235,173,6)"/><text x="51.00" y="1342.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="1348" width="4" height="15" fill="rgb(229,88,15)"/><text x="51.00" y="1358.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.30%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(240,96,11)"/><text x="55.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(214,207,12)"/><text x="55.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(239,150,45)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(206,171,15)"/><text x="55.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(215,97,31)"/><text x="55.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(206,45,4)"/><text x="55.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(222,91,48)"/><text x="55.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(217,83,35)"/><text x="55.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.30%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(233,32,54)"/><text x="55.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.30%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(206,54,5)"/><text x="55.00" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="260" width="7" height="15" fill="rgb(235,126,31)"/><text x="55.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="276" width="7" height="15" fill="rgb(225,37,36)"/><text x="55.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="292" width="7" height="15" fill="rgb(253,155,1)"/><text x="55.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="308" width="7" height="15" fill="rgb(253,91,38)"/><text x="55.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="324" width="7" height="15" fill="rgb(209,112,2)"/><text x="55.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="52" y="340" width="7" height="15" fill="rgb(214,102,46)"/><text x="55.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="52" y="356" width="7" height="15" fill="rgb(240,201,6)"/><text x="55.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.30%)</title><rect x="55" y="372" width="4" height="15" fill="rgb(249,169,50)"/><text x="58.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="388" width="4" height="15" fill="rgb(238,118,12)"/><text x="58.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="404" width="4" height="15" fill="rgb(209,32,7)"/><text x="58.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="420" width="4" height="15" fill="rgb(231,198,26)"/><text x="58.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="55" y="436" width="4" height="15" fill="rgb(227,96,11)"/><text x="58.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="452" width="4" height="15" fill="rgb(216,88,48)"/><text x="58.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.30%)</title><rect x="55" y="468" width="4" height="15" fill="rgb(209,192,39)"/><text x="58.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="484" width="4" height="15" fill="rgb(250,158,22)"/><text x="58.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="500" width="4" height="15" fill="rgb(236,105,42)"/><text x="58.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="516" width="4" height="15" fill="rgb(245,213,3)"/><text x="58.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="55" y="532" width="4" height="15" fill="rgb(225,53,24)"/><text x="58.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="548" width="4" height="15" fill="rgb(224,80,30)"/><text x="58.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.30%)</title><rect x="55" y="564" width="4" height="15" fill="rgb(248,126,30)"/><text x="58.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="580" width="4" height="15" fill="rgb(244,84,34)"/><text x="58.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="596" width="4" height="15" fill="rgb(215,139,42)"/><text x="58.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="612" width="4" height="15" fill="rgb(221,57,9)"/><text x="58.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="55" y="628" width="4" height="15" fill="rgb(216,0,54)"/><text x="58.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="55" y="644" width="4" height="15" fill="rgb(220,76,36)"/><text x="58.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/lib/histograms.py) (1 samples, 0.30%)</title><rect x="55" y="660" width="4" height="15" fill="rgb(214,118,20)"/><text x="58.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="68" width="52" height="15" fill="rgb(226,210,43)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="84" width="52" height="15" fill="rgb(211,12,28)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="100" width="52" height="15" fill="rgb(235,58,47)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.46%)</title><rect x="10" y="116" width="52" height="15" fill="rgb(222,193,54)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="132" width="52" height="15" fill="rgb(232,132,24)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (15 samples, 4.46%)</title><rect x="10" y="148" width="52" height="15" fill="rgb(222,170,25)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="164" width="52" height="15" fill="rgb(253,40,51)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.46%)</title><rect x="10" y="180" width="52" height="15" fill="rgb(219,89,3)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.38%)</title><rect x="34" y="196" width="28" height="15" fill="rgb(228,225,16)"/><text x="37.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.38%)</title><rect x="34" y="212" width="28" height="15" fill="rgb(248,201,51)"/><text x="37.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.38%)</title><rect x="34" y="228" width="28" height="15" fill="rgb(248,71,8)"/><text x="37.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.89%)</title><rect x="52" y="244" width="10" height="15" fill="rgb(250,229,2)"/><text x="55.00" y="254.50"></text></g><g><title>filterwarnings (warnings.py) (1 samples, 0.30%)</title><rect x="59" y="260" width="3" height="15" fill="rgb(215,196,47)"/><text x="62.00" y="270.50"></text></g><g><title>compile (re.py) (1 samples, 0.30%)</title><rect x="59" y="276" width="3" height="15" fill="rgb(253,169,5)"/><text x="62.00" y="286.50"></text></g><g><title>_compile (re.py) (1 samples, 0.30%)</title><rect x="59" y="292" width="3" height="15" fill="rgb(225,197,22)"/><text x="62.00" y="302.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.30%)</title><rect x="59" y="308" width="3" height="15" fill="rgb(214,131,36)"/><text x="62.00" y="318.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.30%)</title><rect x="59" y="324" width="3" height="15" fill="rgb(228,142,0)"/><text x="62.00" y="334.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.30%)</title><rect x="59" y="340" width="3" height="15" fill="rgb(223,219,26)"/><text x="62.00" y="350.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="62" y="228" width="4" height="15" fill="rgb(252,91,32)"/><text x="65.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="62" y="244" width="4" height="15" fill="rgb(218,220,2)"/><text x="65.00" y="254.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="66" y="228" width="3" height="15" fill="rgb(251,88,4)"/><text x="69.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.30%)</title><rect x="66" y="244" width="3" height="15" fill="rgb(223,68,22)"/><text x="69.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.30%)</title><rect x="66" y="260" width="3" height="15" fill="rgb(222,112,48)"/><text x="69.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="66" y="276" width="3" height="15" fill="rgb(246,179,35)"/><text x="69.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="66" y="292" width="3" height="15" fill="rgb(254,99,1)"/><text x="69.00" y="302.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="66" y="308" width="3" height="15" fill="rgb(213,183,18)"/><text x="69.00" y="318.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="66" y="324" width="3" height="15" fill="rgb(227,129,31)"/><text x="69.00" y="334.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.89%)</title><rect x="62" y="196" width="11" height="15" fill="rgb(230,112,4)"/><text x="65.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.89%)</title><rect x="62" y="212" width="11" height="15" fill="rgb(232,11,39)"/><text x="65.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="69" y="228" width="4" height="15" fill="rgb(237,101,41)"/><text x="72.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="69" y="244" width="4" height="15" fill="rgb(230,160,31)"/><text x="72.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.30%)</title><rect x="73" y="212" width="3" height="15" fill="rgb(239,220,29)"/><text x="76.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.30%)</title><rect x="73" y="228" width="3" height="15" fill="rgb(249,100,2)"/><text x="76.00" y="238.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.49%)</title><rect x="62" y="116" width="18" height="15" fill="rgb(253,164,19)"/><text x="65.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.49%)</title><rect x="62" y="132" width="18" height="15" fill="rgb(219,204,50)"/><text x="65.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (5 samples, 1.49%)</title><rect x="62" y="148" width="18" height="15" fill="rgb(249,72,42)"/><text x="65.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (5 samples, 1.49%)</title><rect x="62" y="164" width="18" height="15" fill="rgb(233,64,13)"/><text x="65.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (5 samples, 1.49%)</title><rect x="62" y="180" width="18" height="15" fill="rgb(211,218,32)"/><text x="65.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (2 samples, 0.60%)</title><rect x="73" y="196" width="7" height="15" fill="rgb(232,156,24)"/><text x="76.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.30%)</title><rect x="76" y="212" width="4" height="15" fill="rgb(210,173,26)"/><text x="79.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.30%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(209,106,49)"/><text x="79.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.30%)</title><rect x="76" y="244" width="4" height="15" fill="rgb(239,152,34)"/><text x="79.00" y="254.50"></text></g><g><title>find_switch_point (skl2onnx/common/tree_ensemble.py) (1 samples, 0.30%)</title><rect x="76" y="260" width="4" height="15" fill="rgb(228,112,42)"/><text x="79.00" y="270.50"></text></g><g><title>float_arrtype_new (scalartypes.c.src) (1 samples, 0.30%)</title><rect x="76" y="276" width="4" height="15" fill="rgb(222,2,41)"/><text x="79.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.30%)</title><rect x="76" y="292" width="4" height="15" fill="rgb(208,31,49)"/><text x="79.00" y="302.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.30%)</title><rect x="76" y="308" width="4" height="15" fill="rgb(241,200,22)"/><text x="79.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="76" y="324" width="4" height="15" fill="rgb(248,102,47)"/><text x="79.00" y="334.50"></text></g><g><title>load_build (_pickle.c) (1 samples, 0.30%)</title><rect x="80" y="164" width="3" height="15" fill="rgb(221,219,40)"/><text x="83.00" y="174.50"></text></g><g><title>_Pickle_FastCall (_pickle.c) (1 samples, 0.30%)</title><rect x="80" y="180" width="3" height="15" fill="rgb(211,91,18)"/><text x="83.00" y="190.50"></text></g><g><title>array_setstate (methods.c) (1 samples, 0.30%)</title><rect x="80" y="196" width="3" height="15" fill="rgb(221,14,3)"/><text x="83.00" y="206.50"></text></g><g><title>PyArray_CLEARFLAGS (ndarraytypes.h) (1 samples, 0.30%)</title><rect x="80" y="212" width="3" height="15" fill="rgb(241,155,10)"/><text x="83.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.30%)</title><rect x="80" y="228" width="3" height="15" fill="rgb(217,94,19)"/><text x="83.00" y="238.50"></text></g><g><title>0x7f8d13b07957 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="80" y="244" width="3" height="15" fill="rgb(249,170,6)"/><text x="83.00" y="254.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (7 samples, 2.08%)</title><rect x="62" y="68" width="25" height="15" fill="rgb(228,41,11)"/><text x="65.00" y="78.50">p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (7 samples, 2.08%)</title><rect x="62" y="84" width="25" height="15" fill="rgb(224,116,31)"/><text x="65.00" y="94.50">s..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.08%)</title><rect x="62" y="100" width="25" height="15" fill="rgb(249,15,39)"/><text x="65.00" y="110.50">s..</text></g><g><title>_pickle_load (_pickle.c.h) (2 samples, 0.60%)</title><rect x="80" y="116" width="7" height="15" fill="rgb(229,131,28)"/><text x="83.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c) (2 samples, 0.60%)</title><rect x="80" y="132" width="7" height="15" fill="rgb(247,35,1)"/><text x="83.00" y="142.50"></text></g><g><title>load (_pickle.c) (2 samples, 0.60%)</title><rect x="80" y="148" width="7" height="15" fill="rgb(206,36,19)"/><text x="83.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c) (1 samples, 0.30%)</title><rect x="83" y="164" width="4" height="15" fill="rgb(242,202,9)"/><text x="86.00" y="174.50"></text></g><g><title>0x7f8ced54a7af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="83" y="180" width="4" height="15" fill="rgb(248,9,34)"/><text x="86.00" y="190.50"></text></g><g><title>0x7f8ced52f1e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="83" y="196" width="4" height="15" fill="rgb(244,90,37)"/><text x="86.00" y="206.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.30%)</title><rect x="83" y="212" width="4" height="15" fill="rgb(241,107,50)"/><text x="86.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.30%)</title><rect x="83" y="228" width="4" height="15" fill="rgb(253,218,15)"/><text x="86.00" y="238.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="83" y="244" width="4" height="15" fill="rgb(207,66,38)"/><text x="86.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="83" y="260" width="4" height="15" fill="rgb(208,80,5)"/><text x="86.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.30%)</title><rect x="83" y="276" width="4" height="15" fill="rgb(234,45,41)"/><text x="86.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.30%)</title><rect x="83" y="292" width="4" height="15" fill="rgb(217,25,25)"/><text x="86.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.30%)</title><rect x="83" y="308" width="4" height="15" fill="rgb(244,227,11)"/><text x="86.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.30%)</title><rect x="83" y="324" width="4" height="15" fill="rgb(251,27,12)"/><text x="86.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.30%)</title><rect x="83" y="340" width="4" height="15" fill="rgb(254,128,0)"/><text x="86.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.30%)</title><rect x="83" y="356" width="4" height="15" fill="rgb(244,63,18)"/><text x="86.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="83" y="372" width="4" height="15" fill="rgb(252,190,40)"/><text x="86.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="83" y="388" width="4" height="15" fill="rgb(220,49,21)"/><text x="86.00" y="398.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.30%)</title><rect x="87" y="196" width="3" height="15" fill="rgb(220,14,1)"/><text x="90.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.30%)</title><rect x="87" y="212" width="3" height="15" fill="rgb(246,98,51)"/><text x="90.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="87" y="228" width="3" height="15" fill="rgb(209,133,8)"/><text x="90.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="87" y="244" width="3" height="15" fill="rgb(211,100,24)"/><text x="90.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.30%)</title><rect x="87" y="260" width="3" height="15" fill="rgb(231,217,33)"/><text x="90.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.30%)</title><rect x="87" y="276" width="3" height="15" fill="rgb(243,206,37)"/><text x="90.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.30%)</title><rect x="87" y="292" width="3" height="15" fill="rgb(232,20,20)"/><text x="90.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.30%)</title><rect x="87" y="308" width="3" height="15" fill="rgb(228,220,15)"/><text x="90.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="87" y="324" width="3" height="15" fill="rgb(242,75,26)"/><text x="90.00" y="334.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.60%)</title><rect x="87" y="164" width="7" height="15" fill="rgb(238,112,24)"/><text x="90.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (2 samples, 0.60%)</title><rect x="87" y="180" width="7" height="15" fill="rgb(242,182,0)"/><text x="90.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.30%)</title><rect x="90" y="196" width="4" height="15" fill="rgb(254,156,49)"/><text x="93.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.30%)</title><rect x="90" y="212" width="4" height="15" fill="rgb(206,105,38)"/><text x="93.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="90" y="228" width="4" height="15" fill="rgb(212,115,22)"/><text x="93.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="90" y="244" width="4" height="15" fill="rgb(205,177,45)"/><text x="93.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.30%)</title><rect x="90" y="260" width="4" height="15" fill="rgb(228,29,46)"/><text x="93.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.30%)</title><rect x="90" y="276" width="4" height="15" fill="rgb(229,175,4)"/><text x="93.00" y="286.50"></text></g><g><title>0x7f8d13cd9c18 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="90" y="292" width="4" height="15" fill="rgb(227,115,19)"/><text x="93.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.60%)</title><rect x="115" y="212" width="7" height="15" fill="rgb(235,44,33)"/><text x="118.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.60%)</title><rect x="115" y="228" width="7" height="15" fill="rgb(239,148,14)"/><text x="118.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.89%)</title><rect x="122" y="228" width="10" height="15" fill="rgb(212,169,7)"/><text x="125.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.89%)</title><rect x="122" y="244" width="10" height="15" fill="rgb(217,92,48)"/><text x="125.00" y="254.50"></text></g><g><title>0x7f8d13b07ae6 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="132" y="292" width="4" height="15" fill="rgb(238,186,53)"/><text x="135.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (5 samples, 1.49%)</title><rect x="122" y="212" width="17" height="15" fill="rgb(241,196,9)"/><text x="125.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.60%)</title><rect x="132" y="228" width="7" height="15" fill="rgb(232,163,32)"/><text x="135.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.60%)</title><rect x="132" y="244" width="7" height="15" fill="rgb(229,141,23)"/><text x="135.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.60%)</title><rect x="132" y="260" width="7" height="15" fill="rgb(239,29,1)"/><text x="135.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (2 samples, 0.60%)</title><rect x="132" y="276" width="7" height="15" fill="rgb(251,68,4)"/><text x="135.00" y="286.50"></text></g><g><title>0x7f8d13b07b16 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="136" y="292" width="3" height="15" fill="rgb(207,207,39)"/><text x="139.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.30%)</title><rect x="143" y="244" width="3" height="15" fill="rgb(230,170,52)"/><text x="146.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.30%)</title><rect x="143" y="260" width="3" height="15" fill="rgb(252,63,54)"/><text x="146.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.30%)</title><rect x="143" y="276" width="3" height="15" fill="rgb(246,124,18)"/><text x="146.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.30%)</title><rect x="153" y="276" width="4" height="15" fill="rgb(220,4,21)"/><text x="156.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.30%)</title><rect x="153" y="292" width="4" height="15" fill="rgb(221,218,23)"/><text x="156.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.30%)</title><rect x="153" y="308" width="4" height="15" fill="rgb(226,113,23)"/><text x="156.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="153" y="260" width="8" height="15" fill="rgb(241,204,16)"/><text x="156.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="157" y="276" width="4" height="15" fill="rgb(229,151,29)"/><text x="160.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.30%)</title><rect x="157" y="292" width="4" height="15" fill="rgb(239,110,0)"/><text x="160.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.30%)</title><rect x="157" y="308" width="4" height="15" fill="rgb(248,113,39)"/><text x="160.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.30%)</title><rect x="157" y="324" width="4" height="15" fill="rgb(220,109,8)"/><text x="160.00" y="334.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.30%)</title><rect x="157" y="340" width="4" height="15" fill="rgb(209,133,2)"/><text x="160.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.30%)</title><rect x="161" y="260" width="3" height="15" fill="rgb(241,213,32)"/><text x="164.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.30%)</title><rect x="161" y="276" width="3" height="15" fill="rgb(237,221,47)"/><text x="164.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.60%)</title><rect x="164" y="276" width="7" height="15" fill="rgb(247,130,19)"/><text x="167.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.60%)</title><rect x="164" y="292" width="7" height="15" fill="rgb(238,140,28)"/><text x="167.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.60%)</title><rect x="164" y="308" width="7" height="15" fill="rgb(226,185,46)"/><text x="167.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.60%)</title><rect x="164" y="324" width="7" height="15" fill="rgb(206,138,34)"/><text x="167.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.60%)</title><rect x="164" y="340" width="7" height="15" fill="rgb(231,157,20)"/><text x="167.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.60%)</title><rect x="164" y="356" width="7" height="15" fill="rgb(239,40,22)"/><text x="167.00" y="366.50"></text></g><g><title>0x7f8d13b08e6f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="168" y="372" width="3" height="15" fill="rgb(242,154,3)"/><text x="171.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="171" y="292" width="4" height="15" fill="rgb(252,214,13)"/><text x="174.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.19%)</title><rect x="164" y="260" width="14" height="15" fill="rgb(248,82,53)"/><text x="167.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.60%)</title><rect x="171" y="276" width="7" height="15" fill="rgb(213,2,49)"/><text x="174.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="175" y="292" width="3" height="15" fill="rgb(227,36,4)"/><text x="178.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.27%)</title><rect x="146" y="244" width="39" height="15" fill="rgb(250,61,3)"/><text x="149.00" y="254.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.60%)</title><rect x="178" y="260" width="7" height="15" fill="rgb(214,24,23)"/><text x="181.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.30%)</title><rect x="182" y="276" width="3" height="15" fill="rgb(233,106,46)"/><text x="185.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.30%)</title><rect x="182" y="292" width="3" height="15" fill="rgb(217,114,46)"/><text x="185.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.30%)</title><rect x="182" y="308" width="3" height="15" fill="rgb(231,200,37)"/><text x="185.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.30%)</title><rect x="182" y="324" width="3" height="15" fill="rgb(224,201,40)"/><text x="185.00" y="334.50"></text></g><g><title>0x7f8d12d2a350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="182" y="340" width="3" height="15" fill="rgb(226,143,37)"/><text x="185.00" y="350.50"></text></g><g><title>array_multiply (number.c) (14 samples, 4.17%)</title><rect x="139" y="212" width="50" height="15" fill="rgb(245,70,14)"/><text x="142.00" y="222.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.17%)</title><rect x="139" y="228" width="50" height="15" fill="rgb(233,32,33)"/><text x="142.00" y="238.50">ufunc..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="185" y="244" width="4" height="15" fill="rgb(250,36,11)"/><text x="188.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="185" y="260" width="4" height="15" fill="rgb(226,125,0)"/><text x="188.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.30%)</title><rect x="185" y="276" width="4" height="15" fill="rgb(243,53,7)"/><text x="188.00" y="286.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.30%)</title><rect x="189" y="228" width="3" height="15" fill="rgb(214,54,31)"/><text x="192.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.30%)</title><rect x="189" y="244" width="3" height="15" fill="rgb(244,161,35)"/><text x="192.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="189" y="260" width="3" height="15" fill="rgb(217,93,0)"/><text x="192.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="189" y="276" width="3" height="15" fill="rgb(243,190,3)"/><text x="192.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.60%)</title><rect x="189" y="212" width="7" height="15" fill="rgb(246,37,46)"/><text x="192.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.30%)</title><rect x="192" y="228" width="4" height="15" fill="rgb(253,21,15)"/><text x="195.00" y="238.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.30%)</title><rect x="199" y="244" width="4" height="15" fill="rgb(252,106,17)"/><text x="202.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.30%)</title><rect x="203" y="340" width="3" height="15" fill="rgb(228,125,51)"/><text x="206.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (2 samples, 0.60%)</title><rect x="203" y="292" width="7" height="15" fill="rgb(206,2,50)"/><text x="206.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (2 samples, 0.60%)</title><rect x="203" y="308" width="7" height="15" fill="rgb(245,31,5)"/><text x="206.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (2 samples, 0.60%)</title><rect x="203" y="324" width="7" height="15" fill="rgb(240,33,49)"/><text x="206.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.30%)</title><rect x="206" y="340" width="4" height="15" fill="rgb(246,139,4)"/><text x="209.00" y="350.50"></text></g><g><title>array_subtract (number.c) (9 samples, 2.68%)</title><rect x="196" y="212" width="31" height="15" fill="rgb(232,121,22)"/><text x="199.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.38%)</title><rect x="199" y="228" width="28" height="15" fill="rgb(221,121,50)"/><text x="202.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.08%)</title><rect x="203" y="244" width="24" height="15" fill="rgb(222,176,26)"/><text x="206.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.08%)</title><rect x="203" y="260" width="24" height="15" fill="rgb(248,136,44)"/><text x="206.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.08%)</title><rect x="203" y="276" width="24" height="15" fill="rgb(226,17,45)"/><text x="206.00" y="286.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.49%)</title><rect x="210" y="292" width="17" height="15" fill="rgb(215,173,14)"/><text x="213.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.49%)</title><rect x="210" y="308" width="17" height="15" fill="rgb(244,48,36)"/><text x="213.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.49%)</title><rect x="210" y="324" width="17" height="15" fill="rgb(250,124,13)"/><text x="213.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.60%)</title><rect x="220" y="340" width="7" height="15" fill="rgb(206,105,46)"/><text x="223.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="231" y="276" width="7" height="15" fill="rgb(224,211,38)"/><text x="234.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.60%)</title><rect x="231" y="292" width="7" height="15" fill="rgb(206,25,32)"/><text x="234.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.60%)</title><rect x="231" y="308" width="7" height="15" fill="rgb(247,183,7)"/><text x="234.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.30%)</title><rect x="234" y="324" width="4" height="15" fill="rgb(206,183,46)"/><text x="237.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.30%)</title><rect x="234" y="340" width="4" height="15" fill="rgb(251,173,9)"/><text x="237.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="241" y="324" width="4" height="15" fill="rgb(213,117,9)"/><text x="244.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.30%)</title><rect x="241" y="340" width="4" height="15" fill="rgb(230,200,13)"/><text x="244.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.30%)</title><rect x="241" y="356" width="4" height="15" fill="rgb(247,184,47)"/><text x="244.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.30%)</title><rect x="241" y="372" width="4" height="15" fill="rgb(231,226,4)"/><text x="244.00" y="382.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="245" y="356" width="3" height="15" fill="rgb(207,100,32)"/><text x="248.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="245" y="372" width="3" height="15" fill="rgb(235,220,36)"/><text x="248.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="245" y="388" width="3" height="15" fill="rgb(250,217,14)"/><text x="248.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.60%)</title><rect x="245" y="324" width="7" height="15" fill="rgb(205,116,32)"/><text x="248.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.60%)</title><rect x="245" y="340" width="7" height="15" fill="rgb(251,216,51)"/><text x="248.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.30%)</title><rect x="248" y="356" width="4" height="15" fill="rgb(244,216,5)"/><text x="251.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.30%)</title><rect x="248" y="372" width="4" height="15" fill="rgb(234,157,3)"/><text x="251.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (12 samples, 3.57%)</title><rect x="269" y="340" width="43" height="15" fill="rgb(216,146,17)"/><text x="272.00" y="350.50">DOUB..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.89%)</title><rect x="301" y="356" width="11" height="15" fill="rgb(236,88,54)"/><text x="304.00" y="366.50"></text></g><g><title>array_sum (methods.c) (29 samples, 8.63%)</title><rect x="227" y="212" width="102" height="15" fill="rgb(211,22,1)"/><text x="230.00" y="222.50">array_sum (m..</text></g><g><title>forward_ndarray_method (methods.c) (29 samples, 8.63%)</title><rect x="227" y="228" width="102" height="15" fill="rgb(251,116,41)"/><text x="230.00" y="238.50">forward_ndar..</text></g><g><title>_sum (numpy/core/_methods.py) (28 samples, 8.33%)</title><rect x="231" y="244" width="98" height="15" fill="rgb(251,25,45)"/><text x="234.00" y="254.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c) (28 samples, 8.33%)</title><rect x="231" y="260" width="98" height="15" fill="rgb(221,21,22)"/><text x="234.00" y="270.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (26 samples, 7.74%)</title><rect x="238" y="276" width="91" height="15" fill="rgb(231,40,20)"/><text x="241.00" y="286.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 7.74%)</title><rect x="238" y="292" width="91" height="15" fill="rgb(247,52,3)"/><text x="241.00" y="302.50">PyUFunc_Re..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (26 samples, 7.74%)</title><rect x="238" y="308" width="91" height="15" fill="rgb(239,142,46)"/><text x="241.00" y="318.50">PyUFunc_Re..</text></g><g><title>reduce_loop (ufunc_object.c) (22 samples, 6.55%)</title><rect x="252" y="324" width="77" height="15" fill="rgb(214,116,11)"/><text x="255.00" y="334.50">reduce_l..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 1.49%)</title><rect x="312" y="340" width="17" height="15" fill="rgb(233,26,19)"/><text x="315.00" y="350.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="333" y="228" width="3" height="15" fill="rgb(247,65,16)"/><text x="336.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.30%)</title><rect x="361" y="388" width="3" height="15" fill="rgb(226,16,9)"/><text x="364.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.30%)</title><rect x="361" y="404" width="3" height="15" fill="rgb(233,216,44)"/><text x="364.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.30%)</title><rect x="361" y="420" width="3" height="15" fill="rgb(243,93,29)"/><text x="364.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="361" y="356" width="7" height="15" fill="rgb(244,135,9)"/><text x="364.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.60%)</title><rect x="361" y="372" width="7" height="15" fill="rgb(240,123,14)"/><text x="364.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.30%)</title><rect x="364" y="388" width="4" height="15" fill="rgb(211,227,4)"/><text x="367.00" y="398.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="371" y="372" width="7" height="15" fill="rgb(244,19,31)"/><text x="374.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="371" y="388" width="7" height="15" fill="rgb(252,201,15)"/><text x="374.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.30%)</title><rect x="375" y="404" width="3" height="15" fill="rgb(244,68,48)"/><text x="378.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.68%)</title><rect x="368" y="356" width="31" height="15" fill="rgb(226,208,24)"/><text x="371.00" y="366.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.79%)</title><rect x="378" y="372" width="21" height="15" fill="rgb(245,170,38)"/><text x="381.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (6 samples, 1.79%)</title><rect x="378" y="388" width="21" height="15" fill="rgb(254,9,40)"/><text x="381.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (6 samples, 1.79%)</title><rect x="378" y="404" width="21" height="15" fill="rgb(213,208,50)"/><text x="381.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (13 samples, 3.87%)</title><rect x="357" y="324" width="46" height="15" fill="rgb(226,142,7)"/><text x="360.00" y="334.50">_cli..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.57%)</title><rect x="361" y="340" width="42" height="15" fill="rgb(224,0,41)"/><text x="364.00" y="350.50">ufu..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="399" y="356" width="4" height="15" fill="rgb(244,125,1)"/><text x="402.00" y="366.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.30%)</title><rect x="399" y="372" width="4" height="15" fill="rgb(219,227,3)"/><text x="402.00" y="382.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="399" y="388" width="4" height="15" fill="rgb(226,66,50)"/><text x="402.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.30%)</title><rect x="403" y="324" width="3" height="15" fill="rgb(241,106,31)"/><text x="406.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="424" y="340" width="7" height="15" fill="rgb(250,141,1)"/><text x="427.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.30%)</title><rect x="431" y="356" width="3" height="15" fill="rgb(230,102,50)"/><text x="434.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.30%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(223,55,16)"/><text x="441.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.30%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(243,90,30)"/><text x="441.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.30%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(243,160,19)"/><text x="441.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.30%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(206,120,2)"/><text x="441.00" y="430.50"></text></g><g><title>0x7f8d13b1debc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(249,190,16)"/><text x="441.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 2.98%)</title><rect x="431" y="340" width="35" height="15" fill="rgb(224,14,41)"/><text x="434.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.68%)</title><rect x="434" y="356" width="32" height="15" fill="rgb(209,104,6)"/><text x="437.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 2.08%)</title><rect x="441" y="372" width="25" height="15" fill="rgb(252,207,13)"/><text x="444.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.49%)</title><rect x="448" y="388" width="18" height="15" fill="rgb(244,79,10)"/><text x="451.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 1.19%)</title><rect x="452" y="404" width="14" height="15" fill="rgb(207,39,18)"/><text x="455.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.89%)</title><rect x="456" y="420" width="10" height="15" fill="rgb(227,21,7)"/><text x="459.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.89%)</title><rect x="456" y="436" width="10" height="15" fill="rgb(219,101,13)"/><text x="459.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.60%)</title><rect x="459" y="452" width="7" height="15" fill="rgb(222,180,45)"/><text x="462.00" y="462.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.30%)</title><rect x="466" y="420" width="4" height="15" fill="rgb(216,99,33)"/><text x="469.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="466" y="356" width="7" height="15" fill="rgb(248,76,36)"/><text x="469.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.60%)</title><rect x="466" y="372" width="7" height="15" fill="rgb(237,124,37)"/><text x="469.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.60%)</title><rect x="466" y="388" width="7" height="15" fill="rgb(212,24,18)"/><text x="469.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.60%)</title><rect x="466" y="404" width="7" height="15" fill="rgb(213,27,8)"/><text x="469.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.30%)</title><rect x="470" y="420" width="3" height="15" fill="rgb(212,227,29)"/><text x="473.00" y="430.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.30%)</title><rect x="477" y="404" width="3" height="15" fill="rgb(236,0,22)"/><text x="480.00" y="414.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.30%)</title><rect x="477" y="420" width="3" height="15" fill="rgb(208,115,11)"/><text x="480.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 1.19%)</title><rect x="473" y="372" width="14" height="15" fill="rgb(230,151,31)"/><text x="476.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.89%)</title><rect x="477" y="388" width="10" height="15" fill="rgb(249,202,16)"/><text x="480.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.60%)</title><rect x="480" y="404" width="7" height="15" fill="rgb(236,147,8)"/><text x="483.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.79%)</title><rect x="473" y="356" width="21" height="15" fill="rgb(216,215,10)"/><text x="476.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="487" y="372" width="7" height="15" fill="rgb(233,15,25)"/><text x="490.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="491" y="388" width="3" height="15" fill="rgb(212,32,26)"/><text x="494.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.30%)</title><rect x="491" y="404" width="3" height="15" fill="rgb(212,3,29)"/><text x="494.00" y="414.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 14.29%)</title><rect x="329" y="212" width="169" height="15" fill="rgb(215,61,26)"/><text x="332.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (46 samples, 13.69%)</title><rect x="336" y="228" width="162" height="15" fill="rgb(231,184,6)"/><text x="339.00" y="238.50">array_implement_arra..</text></g><g><title>clip (numpy/core/fromnumeric.py) (46 samples, 13.69%)</title><rect x="336" y="244" width="162" height="15" fill="rgb(225,189,17)"/><text x="339.00" y="254.50">clip (numpy/core/fro..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (46 samples, 13.69%)</title><rect x="336" y="260" width="162" height="15" fill="rgb(253,149,9)"/><text x="339.00" y="270.50">_wrapfunc (numpy/cor..</text></g><g><title>array_clip (methods.c) (46 samples, 13.69%)</title><rect x="336" y="276" width="162" height="15" fill="rgb(231,215,40)"/><text x="339.00" y="286.50">array_clip (methods...</text></g><g><title>forward_ndarray_method (methods.c) (45 samples, 13.39%)</title><rect x="340" y="292" width="158" height="15" fill="rgb(248,128,15)"/><text x="343.00" y="302.50">forward_ndarray_meth..</text></g><g><title>_clip (numpy/core/_methods.py) (43 samples, 12.80%)</title><rect x="347" y="308" width="151" height="15" fill="rgb(208,174,2)"/><text x="350.00" y="318.50">_clip (numpy/core/_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (26 samples, 7.74%)</title><rect x="406" y="324" width="92" height="15" fill="rgb(212,204,35)"/><text x="409.00" y="334.50">_clip_dep_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.68%)</title><rect x="466" y="340" width="32" height="15" fill="rgb(254,58,40)"/><text x="469.00" y="350.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="494" y="356" width="4" height="15" fill="rgb(220,47,7)"/><text x="497.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="494" y="372" width="4" height="15" fill="rgb(249,103,17)"/><text x="497.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.30%)</title><rect x="494" y="388" width="4" height="15" fill="rgb(229,103,47)"/><text x="497.00" y="398.50"></text></g><g><title>0x7f8ced54bd2e (?) (1 samples, 0.30%)</title><rect x="501" y="228" width="4" height="15" fill="rgb(241,34,45)"/><text x="504.00" y="238.50"></text></g><g><title>0x7f8ced54afa6 (?) (1 samples, 0.30%)</title><rect x="501" y="244" width="4" height="15" fill="rgb(214,151,30)"/><text x="504.00" y="254.50"></text></g><g><title>0x7f8ced55a405 (?) (1 samples, 0.30%)</title><rect x="501" y="260" width="4" height="15" fill="rgb(205,130,31)"/><text x="504.00" y="270.50"></text></g><g><title>0x7f8ced559592 (?) (1 samples, 0.30%)</title><rect x="501" y="276" width="4" height="15" fill="rgb(253,172,19)"/><text x="504.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="501" y="292" width="4" height="15" fill="rgb(233,216,9)"/><text x="504.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.30%)</title><rect x="501" y="308" width="4" height="15" fill="rgb(235,184,11)"/><text x="504.00" y="318.50"></text></g><g><title>0x7f8ced53acd0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="505" y="260" width="3" height="15" fill="rgb(243,211,31)"/><text x="508.00" y="270.50"></text></g><g><title>0x7f8ced54af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="505" y="244" width="7" height="15" fill="rgb(234,105,52)"/><text x="508.00" y="254.50"></text></g><g><title>0x7f8ced53acd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(220,117,28)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f8ced55a3d2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="512" y="260" width="3" height="15" fill="rgb(245,183,7)"/><text x="515.00" y="270.50"></text></g><g><title>0x7f8ced559225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="515" y="276" width="4" height="15" fill="rgb(225,26,50)"/><text x="518.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.30%)</title><rect x="515" y="292" width="4" height="15" fill="rgb(236,106,34)"/><text x="518.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.30%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(250,221,35)"/><text x="518.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.30%)</title><rect x="515" y="324" width="4" height="15" fill="rgb(226,70,27)"/><text x="518.00" y="334.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.30%)</title><rect x="515" y="340" width="4" height="15" fill="rgb(234,28,43)"/><text x="518.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.30%)</title><rect x="515" y="356" width="4" height="15" fill="rgb(228,211,26)"/><text x="518.00" y="366.50"></text></g><g><title>0x7f8ced5330e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(228,217,22)"/><text x="522.00" y="334.50"></text></g><g><title>0x7f8d12d2b0d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="526" y="372" width="3" height="15" fill="rgb(224,155,40)"/><text x="529.00" y="382.50"></text></g><g><title>0x7f8ced53dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.19%)</title><rect x="519" y="292" width="14" height="15" fill="rgb(212,202,53)"/><text x="522.00" y="302.50"></text></g><g><title>0x7f8ced53d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.19%)</title><rect x="519" y="308" width="14" height="15" fill="rgb(231,194,54)"/><text x="522.00" y="318.50"></text></g><g><title>0x7f8ced5332fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.89%)</title><rect x="522" y="324" width="11" height="15" fill="rgb(214,19,25)"/><text x="525.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.89%)</title><rect x="522" y="340" width="11" height="15" fill="rgb(235,111,25)"/><text x="525.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.89%)</title><rect x="522" y="356" width="11" height="15" fill="rgb(221,92,46)"/><text x="525.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.30%)</title><rect x="529" y="372" width="4" height="15" fill="rgb(223,196,22)"/><text x="532.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.30%)</title><rect x="529" y="388" width="4" height="15" fill="rgb(228,146,8)"/><text x="532.00" y="398.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.30%)</title><rect x="529" y="404" width="4" height="15" fill="rgb(230,177,7)"/><text x="532.00" y="414.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="529" y="420" width="4" height="15" fill="rgb(254,62,15)"/><text x="532.00" y="430.50"></text></g><g><title>0x7f8ced5592df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.49%)</title><rect x="519" y="276" width="17" height="15" fill="rgb(220,212,11)"/><text x="522.00" y="286.50"></text></g><g><title>0x7f8ced53e085 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="533" y="292" width="3" height="15" fill="rgb(249,38,37)"/><text x="536.00" y="302.50"></text></g><g><title>0x7f8ced559456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="536" y="276" width="4" height="15" fill="rgb(239,31,14)"/><text x="539.00" y="286.50"></text></g><g><title>0x7f8ced55953e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="540" y="276" width="3" height="15" fill="rgb(215,188,28)"/><text x="543.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.30%)</title><rect x="547" y="308" width="3" height="15" fill="rgb(239,9,31)"/><text x="550.00" y="318.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.30%)</title><rect x="550" y="308" width="4" height="15" fill="rgb(228,182,38)"/><text x="553.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="550" y="324" width="4" height="15" fill="rgb(213,130,2)"/><text x="553.00" y="334.50"></text></g><g><title>0x7f8ced559592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.19%)</title><rect x="543" y="276" width="14" height="15" fill="rgb(248,217,4)"/><text x="546.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 1.19%)</title><rect x="543" y="292" width="14" height="15" fill="rgb(244,214,42)"/><text x="546.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.30%)</title><rect x="554" y="308" width="3" height="15" fill="rgb(210,185,30)"/><text x="557.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.30%)</title><rect x="554" y="324" width="3" height="15" fill="rgb(236,66,36)"/><text x="557.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="554" y="340" width="3" height="15" fill="rgb(248,31,33)"/><text x="557.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.30%)</title><rect x="554" y="356" width="3" height="15" fill="rgb(219,10,2)"/><text x="557.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.30%)</title><rect x="554" y="372" width="3" height="15" fill="rgb(242,77,47)"/><text x="557.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="554" y="388" width="3" height="15" fill="rgb(239,35,46)"/><text x="557.00" y="398.50"></text></g><g><title>0x7f8d13b28103 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="554" y="404" width="3" height="15" fill="rgb(248,134,2)"/><text x="557.00" y="414.50"></text></g><g><title>0x7f8ced559687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="557" y="276" width="4" height="15" fill="rgb(228,103,33)"/><text x="560.00" y="286.50"></text></g><g><title>0x7f8ced559698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="561" y="276" width="3" height="15" fill="rgb(249,146,38)"/><text x="564.00" y="286.50"></text></g><g><title>0x7f8ced54afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.76%)</title><rect x="512" y="244" width="56" height="15" fill="rgb(239,185,16)"/><text x="515.00" y="254.50">0x7f8..</text></g><g><title>0x7f8ced55a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.46%)</title><rect x="515" y="260" width="53" height="15" fill="rgb(233,226,32)"/><text x="518.00" y="270.50">0x7f8..</text></g><g><title>0x7f8ced5596aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="564" y="276" width="4" height="15" fill="rgb(237,102,37)"/><text x="567.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.89%)</title><rect x="568" y="292" width="10" height="15" fill="rgb(223,187,6)"/><text x="571.00" y="302.50"></text></g><g><title>0x7f8ced54b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.19%)</title><rect x="568" y="244" width="14" height="15" fill="rgb(253,103,13)"/><text x="571.00" y="254.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.19%)</title><rect x="568" y="260" width="14" height="15" fill="rgb(249,158,42)"/><text x="571.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (4 samples, 1.19%)</title><rect x="568" y="276" width="14" height="15" fill="rgb(240,20,46)"/><text x="571.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.30%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(212,64,40)"/><text x="581.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.30%)</title><rect x="578" y="308" width="4" height="15" fill="rgb(231,95,39)"/><text x="581.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.30%)</title><rect x="578" y="324" width="4" height="15" fill="rgb(232,64,7)"/><text x="581.00" y="334.50"></text></g><g><title>0x7f8ced54b14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="582" y="244" width="3" height="15" fill="rgb(233,30,12)"/><text x="585.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="582" y="260" width="3" height="15" fill="rgb(207,174,4)"/><text x="585.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="582" y="276" width="3" height="15" fill="rgb(229,134,35)"/><text x="585.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.30%)</title><rect x="582" y="292" width="3" height="15" fill="rgb(243,0,15)"/><text x="585.00" y="302.50"></text></g><g><title>0x7f8ced54b1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="585" y="244" width="4" height="15" fill="rgb(231,126,48)"/><text x="588.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.30%)</title><rect x="585" y="260" width="4" height="15" fill="rgb(242,57,23)"/><text x="588.00" y="270.50"></text></g><g><title>0x7f8ced54bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 7.44%)</title><rect x="505" y="228" width="87" height="15" fill="rgb(230,107,53)"/><text x="508.00" y="238.50">0x7f8ced54..</text></g><g><title>0x7f8ced54b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="589" y="244" width="3" height="15" fill="rgb(232,208,28)"/><text x="592.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.30%)</title><rect x="589" y="260" width="3" height="15" fill="rgb(218,13,27)"/><text x="592.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.30%)</title><rect x="589" y="276" width="3" height="15" fill="rgb(252,189,39)"/><text x="592.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.60%)</title><rect x="600" y="260" width="7" height="15" fill="rgb(234,154,42)"/><text x="603.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.30%)</title><rect x="607" y="260" width="3" height="15" fill="rgb(239,157,14)"/><text x="610.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="617" y="276" width="4" height="15" fill="rgb(217,84,37)"/><text x="620.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.79%)</title><rect x="621" y="276" width="21" height="15" fill="rgb(224,115,7)"/><text x="624.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 2.98%)</title><rect x="610" y="260" width="35" height="15" fill="rgb(208,70,20)"/><text x="613.00" y="270.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="642" y="276" width="3" height="15" fill="rgb(215,81,0)"/><text x="645.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.60%)</title><rect x="645" y="260" width="7" height="15" fill="rgb(206,58,7)"/><text x="648.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.30%)</title><rect x="666" y="276" width="4" height="15" fill="rgb(244,133,10)"/><text x="669.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.89%)</title><rect x="670" y="276" width="10" height="15" fill="rgb(247,114,26)"/><text x="673.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.30%)</title><rect x="677" y="292" width="3" height="15" fill="rgb(233,63,49)"/><text x="680.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 2.68%)</title><rect x="652" y="260" width="32" height="15" fill="rgb(223,111,35)"/><text x="655.00" y="270.50">_n..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="680" y="276" width="4" height="15" fill="rgb(218,59,49)"/><text x="683.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.30%)</title><rect x="684" y="260" width="3" height="15" fill="rgb(233,110,43)"/><text x="687.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="705" y="372" width="3" height="15" fill="rgb(233,112,11)"/><text x="708.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (5 samples, 1.49%)</title><rect x="698" y="292" width="17" height="15" fill="rgb(245,63,21)"/><text x="701.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 1.19%)</title><rect x="701" y="308" width="14" height="15" fill="rgb(250,101,13)"/><text x="704.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 1.19%)</title><rect x="701" y="324" width="14" height="15" fill="rgb(243,202,0)"/><text x="704.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.19%)</title><rect x="701" y="340" width="14" height="15" fill="rgb(220,122,53)"/><text x="704.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 1.19%)</title><rect x="701" y="356" width="14" height="15" fill="rgb(230,117,10)"/><text x="704.00" y="366.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (2 samples, 0.60%)</title><rect x="708" y="372" width="7" height="15" fill="rgb(254,24,25)"/><text x="711.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (9 samples, 2.68%)</title><rect x="687" y="260" width="32" height="15" fill="rgb(234,137,44)"/><text x="690.00" y="270.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (7 samples, 2.08%)</title><rect x="694" y="276" width="25" height="15" fill="rgb(240,28,53)"/><text x="697.00" y="286.50">_..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="715" y="292" width="4" height="15" fill="rgb(212,181,19)"/><text x="718.00" y="302.50"></text></g><g><title>0x7f8d13be514d (libc-2.29.so) (1 samples, 0.30%)</title><rect x="715" y="308" width="4" height="15" fill="rgb(239,135,3)"/><text x="718.00" y="318.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.30%)</title><rect x="719" y="260" width="3" height="15" fill="rgb(233,56,31)"/><text x="722.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (44 samples, 13.10%)</title><rect x="592" y="228" width="155" height="15" fill="rgb(222,65,33)"/><text x="595.00" y="238.50">_validate_X_predict..</text></g><g><title>check_array (sklearn/utils/validation.py) (44 samples, 13.10%)</title><rect x="592" y="244" width="155" height="15" fill="rgb(252,176,3)"/><text x="595.00" y="254.50">check_array (sklear..</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.08%)</title><rect x="722" y="260" width="25" height="15" fill="rgb(253,115,6)"/><text x="725.00" y="270.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.49%)</title><rect x="729" y="276" width="18" height="15" fill="rgb(251,7,1)"/><text x="732.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.30%)</title><rect x="747" y="228" width="4" height="15" fill="rgb(248,0,24)"/><text x="750.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.30%)</title><rect x="747" y="244" width="4" height="15" fill="rgb(249,168,4)"/><text x="750.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="751" y="228" width="3" height="15" fill="rgb(231,97,48)"/><text x="754.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="751" y="244" width="3" height="15" fill="rgb(232,65,39)"/><text x="754.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="761" y="276" width="4" height="15" fill="rgb(231,94,54)"/><text x="764.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.30%)</title><rect x="761" y="292" width="4" height="15" fill="rgb(245,198,24)"/><text x="764.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="765" y="292" width="3" height="15" fill="rgb(246,174,33)"/><text x="768.00" y="302.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h) (1 samples, 0.30%)</title><rect x="768" y="356" width="4" height="15" fill="rgb(227,87,52)"/><text x="771.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 1.79%)</title><rect x="754" y="228" width="21" height="15" fill="rgb(208,57,39)"/><text x="757.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.49%)</title><rect x="758" y="244" width="17" height="15" fill="rgb(213,192,11)"/><text x="761.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.49%)</title><rect x="758" y="260" width="17" height="15" fill="rgb(239,11,9)"/><text x="761.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.89%)</title><rect x="765" y="276" width="10" height="15" fill="rgb(211,104,18)"/><text x="768.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.60%)</title><rect x="768" y="292" width="7" height="15" fill="rgb(210,31,13)"/><text x="771.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (2 samples, 0.60%)</title><rect x="768" y="308" width="7" height="15" fill="rgb(231,57,25)"/><text x="771.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (2 samples, 0.60%)</title><rect x="768" y="324" width="7" height="15" fill="rgb(248,49,49)"/><text x="771.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (2 samples, 0.60%)</title><rect x="768" y="340" width="7" height="15" fill="rgb(210,187,8)"/><text x="771.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.30%)</title><rect x="772" y="356" width="3" height="15" fill="rgb(208,126,38)"/><text x="775.00" y="366.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h) (1 samples, 0.30%)</title><rect x="772" y="372" width="3" height="15" fill="rgb(224,223,11)"/><text x="775.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.19%)</title><rect x="789" y="292" width="14" height="15" fill="rgb(234,45,1)"/><text x="792.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.89%)</title><rect x="793" y="308" width="10" height="15" fill="rgb(250,201,38)"/><text x="796.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.60%)</title><rect x="796" y="324" width="7" height="15" fill="rgb(253,21,29)"/><text x="799.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.60%)</title><rect x="796" y="340" width="7" height="15" fill="rgb(244,184,2)"/><text x="799.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.60%)</title><rect x="796" y="356" width="7" height="15" fill="rgb(252,124,41)"/><text x="799.00" y="366.50"></text></g><g><title>0x7f8d13be5fa4 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="800" y="372" width="3" height="15" fill="rgb(252,6,11)"/><text x="803.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.30%)</title><rect x="803" y="308" width="4" height="15" fill="rgb(213,59,9)"/><text x="806.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.30%)</title><rect x="803" y="324" width="4" height="15" fill="rgb(212,172,18)"/><text x="806.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.30%)</title><rect x="803" y="340" width="4" height="15" fill="rgb(223,109,27)"/><text x="806.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.30%)</title><rect x="810" y="356" width="4" height="15" fill="rgb(247,42,54)"/><text x="813.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.30%)</title><rect x="814" y="356" width="3" height="15" fill="rgb(254,144,30)"/><text x="817.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.89%)</title><rect x="810" y="340" width="11" height="15" fill="rgb(218,79,25)"/><text x="813.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.30%)</title><rect x="817" y="356" width="4" height="15" fill="rgb(220,77,15)"/><text x="820.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.30%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(244,41,50)"/><text x="824.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.30%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(212,127,36)"/><text x="824.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="821" y="372" width="3" height="15" fill="rgb(211,121,14)"/><text x="824.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="821" y="388" width="3" height="15" fill="rgb(216,98,42)"/><text x="824.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="824" y="388" width="4" height="15" fill="rgb(246,113,16)"/><text x="827.00" y="398.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="824" y="404" width="4" height="15" fill="rgb(223,155,18)"/><text x="827.00" y="414.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="824" y="420" width="4" height="15" fill="rgb(242,69,13)"/><text x="827.00" y="430.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="828" y="388" width="3" height="15" fill="rgb(213,109,52)"/><text x="831.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.89%)</title><rect x="824" y="340" width="11" height="15" fill="rgb(243,55,17)"/><text x="827.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.89%)</title><rect x="824" y="356" width="11" height="15" fill="rgb(245,45,41)"/><text x="827.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.89%)</title><rect x="824" y="372" width="11" height="15" fill="rgb(230,196,14)"/><text x="827.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="831" y="388" width="4" height="15" fill="rgb(229,97,39)"/><text x="834.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 3.27%)</title><rect x="849" y="356" width="38" height="15" fill="rgb(210,69,18)"/><text x="852.00" y="366.50">DOU..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (7 samples, 2.08%)</title><rect x="863" y="372" width="24" height="15" fill="rgb(230,212,5)"/><text x="866.00" y="382.50">p..</text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="887" y="356" width="4" height="15" fill="rgb(252,50,45)"/><text x="890.00" y="366.50"></text></g><g><title>array_sum (methods.c) (36 samples, 10.71%)</title><rect x="775" y="228" width="127" height="15" fill="rgb(217,227,40)"/><text x="778.00" y="238.50">array_sum (meth..</text></g><g><title>forward_ndarray_method (methods.c) (36 samples, 10.71%)</title><rect x="775" y="244" width="127" height="15" fill="rgb(242,52,0)"/><text x="778.00" y="254.50">forward_ndarray..</text></g><g><title>_sum (numpy/core/_methods.py) (33 samples, 9.82%)</title><rect x="786" y="260" width="116" height="15" fill="rgb(228,86,9)"/><text x="789.00" y="270.50">_sum (numpy/co..</text></g><g><title>ufunc_reduce (ufunc_object.c) (32 samples, 9.52%)</title><rect x="789" y="276" width="113" height="15" fill="rgb(212,157,20)"/><text x="792.00" y="286.50">ufunc_reduce ..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (28 samples, 8.33%)</title><rect x="803" y="292" width="99" height="15" fill="rgb(251,190,8)"/><text x="806.00" y="302.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (27 samples, 8.04%)</title><rect x="807" y="308" width="95" height="15" fill="rgb(235,22,38)"/><text x="810.00" y="318.50">PyUFunc_Red..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (27 samples, 8.04%)</title><rect x="807" y="324" width="95" height="15" fill="rgb(231,198,35)"/><text x="810.00" y="334.50">PyUFunc_Red..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 5.65%)</title><rect x="835" y="340" width="67" height="15" fill="rgb(238,195,44)"/><text x="838.00" y="350.50">reduce_..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.89%)</title><rect x="891" y="356" width="11" height="15" fill="rgb(223,147,21)"/><text x="894.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="912" y="260" width="4" height="15" fill="rgb(226,76,54)"/><text x="915.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.49%)</title><rect x="909" y="244" width="17" height="15" fill="rgb(209,105,32)"/><text x="912.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.89%)</title><rect x="916" y="260" width="10" height="15" fill="rgb(235,228,34)"/><text x="919.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 2.38%)</title><rect x="902" y="228" width="28" height="15" fill="rgb(244,93,52)"/><text x="905.00" y="238.50">c..</text></g><g><title>isclass (inspect.py) (1 samples, 0.30%)</title><rect x="926" y="244" width="4" height="15" fill="rgb(249,216,9)"/><text x="929.00" y="254.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (8 samples, 2.38%)</title><rect x="933" y="292" width="28" height="15" fill="rgb(248,181,17)"/><text x="936.00" y="302.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (8 samples, 2.38%)</title><rect x="933" y="308" width="28" height="15" fill="rgb(216,183,20)"/><text x="936.00" y="318.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (8 samples, 2.38%)</title><rect x="933" y="324" width="28" height="15" fill="rgb(209,152,22)"/><text x="936.00" y="334.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (8 samples, 2.38%)</title><rect x="933" y="340" width="28" height="15" fill="rgb(245,135,43)"/><text x="936.00" y="350.50">_..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="961" y="292" width="4" height="15" fill="rgb(209,46,49)"/><text x="964.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 2.08%)</title><rect x="965" y="292" width="24" height="15" fill="rgb(248,124,30)"/><text x="968.00" y="302.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 2.08%)</title><rect x="965" y="308" width="24" height="15" fill="rgb(233,130,43)"/><text x="968.00" y="318.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 2.08%)</title><rect x="965" y="324" width="24" height="15" fill="rgb(245,173,34)"/><text x="968.00" y="334.50">P..</text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 1.19%)</title><rect x="975" y="340" width="14" height="15" fill="rgb(205,113,6)"/><text x="978.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (18 samples, 5.36%)</title><rect x="930" y="260" width="63" height="15" fill="rgb(242,34,18)"/><text x="933.00" y="270.50">execut..</text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 5.36%)</title><rect x="930" y="276" width="63" height="15" fill="rgb(238,6,44)"/><text x="933.00" y="286.50">iterat..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.30%)</title><rect x="989" y="292" width="4" height="15" fill="rgb(216,93,40)"/><text x="992.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 5.65%)</title><rect x="930" y="244" width="66" height="15" fill="rgb(246,177,44)"/><text x="933.00" y="254.50">PyUFunc..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="993" y="260" width="3" height="15" fill="rgb(234,217,34)"/><text x="996.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (143 samples, 42.56%)</title><rect x="498" y="212" width="502" height="15" fill="rgb(205,226,47)"/><text x="501.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 5.95%)</title><rect x="930" y="228" width="70" height="15" fill="rgb(208,95,8)"/><text x="933.00" y="238.50">ufunc_g..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.30%)</title><rect x="996" y="244" width="4" height="15" fill="rgb(225,11,38)"/><text x="999.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="1000" y="260" width="3" height="15" fill="rgb(243,188,16)"/><text x="1003.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="1000" y="276" width="3" height="15" fill="rgb(220,174,22)"/><text x="1003.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="1000" y="292" width="3" height="15" fill="rgb(217,37,28)"/><text x="1003.00" y="302.50"></text></g><g><title>0x7f8d13cd9dd0 (libm-2.29.so) (4 samples, 1.19%)</title><rect x="1024" y="292" width="14" height="15" fill="rgb(210,144,5)"/><text x="1027.00" y="302.50"></text></g><g><title>0x7f8d13cd9dee (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1038" y="292" width="4" height="15" fill="rgb(212,145,13)"/><text x="1041.00" y="302.50"></text></g><g><title>0x7f8d13cd9e01 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1042" y="292" width="7" height="15" fill="rgb(210,143,32)"/><text x="1045.00" y="302.50"></text></g><g><title>0x7f8d13cd9e25 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1049" y="292" width="4" height="15" fill="rgb(243,147,37)"/><text x="1052.00" y="302.50"></text></g><g><title>0x7f8d13cd9e40 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1053" y="292" width="3" height="15" fill="rgb(218,8,39)"/><text x="1056.00" y="302.50"></text></g><g><title>0x7f8d13cd9e4d (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1056" y="292" width="7" height="15" fill="rgb(233,126,43)"/><text x="1059.00" y="302.50"></text></g><g><title>0x7f8d13cd9e61 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1063" y="292" width="4" height="15" fill="rgb(229,184,18)"/><text x="1066.00" y="302.50"></text></g><g><title>0x7f8d13cd9e7e (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1067" y="292" width="7" height="15" fill="rgb(216,70,19)"/><text x="1070.00" y="302.50"></text></g><g><title>0x7f8d13cd9e8d (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1074" y="292" width="7" height="15" fill="rgb(215,77,33)"/><text x="1077.00" y="302.50"></text></g><g><title>0x7f8d13cd9e91 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1081" y="292" width="3" height="15" fill="rgb(244,217,41)"/><text x="1084.00" y="302.50"></text></g><g><title>0x7f8d13cd9eb6 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1084" y="292" width="7" height="15" fill="rgb(250,150,20)"/><text x="1087.00" y="302.50"></text></g><g><title>0x7f8d13cd9ec6 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1091" y="292" width="4" height="15" fill="rgb(207,65,34)"/><text x="1094.00" y="302.50"></text></g><g><title>0x7f8d13cd9eca (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1095" y="292" width="3" height="15" fill="rgb(226,205,11)"/><text x="1098.00" y="302.50"></text></g><g><title>0x7f8d13cd9eee (libm-2.29.so) (5 samples, 1.49%)</title><rect x="1098" y="292" width="18" height="15" fill="rgb(228,185,19)"/><text x="1101.00" y="302.50"></text></g><g><title>0x7f8d13cd9ef6 (libm-2.29.so) (4 samples, 1.19%)</title><rect x="1116" y="292" width="14" height="15" fill="rgb(242,118,13)"/><text x="1119.00" y="302.50"></text></g><g><title>0x7f8d13cd9efa (libm-2.29.so) (6 samples, 1.79%)</title><rect x="1130" y="292" width="21" height="15" fill="rgb(227,135,14)"/><text x="1133.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (44 samples, 13.10%)</title><rect x="1000" y="244" width="154" height="15" fill="rgb(228,206,29)"/><text x="1003.00" y="254.50">execute_legacy_ufun..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (43 samples, 12.80%)</title><rect x="1003" y="260" width="151" height="15" fill="rgb(234,49,6)"/><text x="1006.00" y="270.50">trivial_two_operand..</text></g><g><title>PyUFunc_d_d (loops.c.src) (42 samples, 12.50%)</title><rect x="1007" y="276" width="147" height="15" fill="rgb(207,212,27)"/><text x="1010.00" y="286.50">PyUFunc_d_d (loops..</text></g><g><title>0x7f8d13cda013 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(205,97,8)"/><text x="1154.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (302 samples, 89.88%)</title><rect x="97" y="196" width="1061" height="15" fill="rgb(249,29,38)"/><text x="100.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (45 samples, 13.39%)</title><rect x="1000" y="212" width="158" height="15" fill="rgb(224,20,17)"/><text x="1003.00" y="222.50">ufunc_generic_call (..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (45 samples, 13.39%)</title><rect x="1000" y="228" width="158" height="15" fill="rgb(223,125,24)"/><text x="1003.00" y="238.50">PyUFunc_GenericFunct..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="1154" y="244" width="4" height="15" fill="rgb(239,43,31)"/><text x="1157.00" y="254.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="1154" y="260" width="4" height="15" fill="rgb(215,195,5)"/><text x="1157.00" y="270.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c) (1 samples, 0.30%)</title><rect x="1154" y="276" width="4" height="15" fill="rgb(207,79,15)"/><text x="1157.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.60%)</title><rect x="1158" y="196" width="7" height="15" fill="rgb(251,4,47)"/><text x="1161.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.60%)</title><rect x="1158" y="212" width="7" height="15" fill="rgb(241,24,7)"/><text x="1161.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.60%)</title><rect x="1158" y="228" width="7" height="15" fill="rgb(234,153,32)"/><text x="1161.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (306 samples, 91.07%)</title><rect x="94" y="180" width="1074" height="15" fill="rgb(238,133,7)"/><text x="97.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_sum (methods.c) (1 samples, 0.30%)</title><rect x="1165" y="196" width="3" height="15" fill="rgb(239,19,37)"/><text x="1168.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.30%)</title><rect x="1165" y="212" width="3" height="15" fill="rgb(252,47,13)"/><text x="1168.00" y="222.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.30%)</title><rect x="1165" y="228" width="3" height="15" fill="rgb(215,112,17)"/><text x="1168.00" y="238.50"></text></g><g><title>array_add (number.c) (1 samples, 0.30%)</title><rect x="1168" y="180" width="4" height="15" fill="rgb(243,222,52)"/><text x="1171.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1168" y="196" width="4" height="15" fill="rgb(245,173,2)"/><text x="1171.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1168" y="212" width="4" height="15" fill="rgb(211,162,36)"/><text x="1171.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1168" y="228" width="4" height="15" fill="rgb(247,211,13)"/><text x="1171.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(232,85,20)"/><text x="1171.00" y="254.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(229,202,7)"/><text x="1171.00" y="270.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (310 samples, 92.26%)</title><rect x="87" y="100" width="1088" height="15" fill="rgb(241,153,42)"/><text x="90.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (310 samples, 92.26%)</title><rect x="87" y="116" width="1088" height="15" fill="rgb(208,11,51)"/><text x="90.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (310 samples, 92.26%)</title><rect x="87" y="132" width="1088" height="15" fill="rgb(253,184,33)"/><text x="90.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (310 samples, 92.26%)</title><rect x="87" y="148" width="1088" height="15" fill="rgb(230,93,1)"/><text x="90.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (308 samples, 91.67%)</title><rect x="94" y="164" width="1081" height="15" fill="rgb(252,154,44)"/><text x="97.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="1172" y="180" width="3" height="15" fill="rgb(211,162,1)"/><text x="1175.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="1172" y="196" width="3" height="15" fill="rgb(221,211,12)"/><text x="1175.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.30%)</title><rect x="1172" y="212" width="3" height="15" fill="rgb(242,122,4)"/><text x="1175.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.30%)</title><rect x="1172" y="228" width="3" height="15" fill="rgb(227,70,7)"/><text x="1175.00" y="238.50"></text></g><g><title>0x7f8d13b07df0 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1172" y="244" width="3" height="15" fill="rgb(236,209,36)"/><text x="1175.00" y="254.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (311 samples, 92.56%)</title><rect x="87" y="68" width="1092" height="15" fill="rgb(205,157,48)"/><text x="90.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (311 samples, 92.56%)</title><rect x="87" y="84" width="1092" height="15" fill="rgb(239,169,49)"/><text x="90.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.30%)</title><rect x="1175" y="100" width="4" height="15" fill="rgb(223,228,15)"/><text x="1178.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.30%)</title><rect x="1175" y="116" width="4" height="15" fill="rgb(233,64,7)"/><text x="1178.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.30%)</title><rect x="1175" y="132" width="4" height="15" fill="rgb(217,203,15)"/><text x="1178.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.30%)</title><rect x="1175" y="148" width="4" height="15" fill="rgb(213,63,28)"/><text x="1178.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.30%)</title><rect x="1175" y="164" width="4" height="15" fill="rgb(214,166,34)"/><text x="1178.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.30%)</title><rect x="1175" y="180" width="4" height="15" fill="rgb(244,97,12)"/><text x="1178.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.30%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(212,123,35)"/><text x="1178.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.30%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(224,11,1)"/><text x="1178.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(239,33,8)"/><text x="1178.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.30%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(231,159,18)"/><text x="1178.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.30%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(229,127,4)"/><text x="1178.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.30%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(231,145,45)"/><text x="1178.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.30%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(209,61,12)"/><text x="1178.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.30%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(223,11,8)"/><text x="1178.00" y="318.50"></text></g><g><title>line (traceback.py) (1 samples, 0.30%)</title><rect x="1175" y="324" width="4" height="15" fill="rgb(241,184,37)"/><text x="1178.00" y="334.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.30%)</title><rect x="1175" y="340" width="4" height="15" fill="rgb(229,126,36)"/><text x="1178.00" y="350.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.30%)</title><rect x="1179" y="116" width="3" height="15" fill="rgb(215,106,39)"/><text x="1182.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.30%)</title><rect x="1179" y="132" width="3" height="15" fill="rgb(251,189,44)"/><text x="1182.00" y="142.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.30%)</title><rect x="1179" y="148" width="3" height="15" fill="rgb(224,82,54)"/><text x="1182.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="1179" y="164" width="3" height="15" fill="rgb(215,203,19)"/><text x="1182.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.30%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(249,155,34)"/><text x="1182.00" y="190.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.30%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(243,227,1)"/><text x="1185.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.30%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(226,132,31)"/><text x="1185.00" y="206.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.30%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(239,166,50)"/><text x="1185.00" y="222.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.30%)</title><rect x="1182" y="228" width="4" height="15" fill="rgb(207,137,19)"/><text x="1185.00" y="238.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c) (1 samples, 0.30%)</title><rect x="1182" y="244" width="4" height="15" fill="rgb(208,213,32)"/><text x="1185.00" y="254.50"></text></g><g><title>arraydescr_name_get (descriptor.c) (1 samples, 0.30%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(231,107,26)"/><text x="1185.00" y="270.50"></text></g><g><title>all (336 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,110,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (336 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(250,44,39)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_double_.py) (3 samples, 0.89%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(207,168,47)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (3 samples, 0.89%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(225,2,44)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.89%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(249,135,52)"/><text x="1182.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.60%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(223,108,40)"/><text x="1185.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.60%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(230,47,43)"/><text x="1185.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.60%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(243,172,2)"/><text x="1185.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.60%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(226,51,51)"/><text x="1185.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.30%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(232,192,28)"/><text x="1189.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.30%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(207,183,35)"/><text x="1189.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.30%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(239,16,10)"/><text x="1189.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.30%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(205,57,30)"/><text x="1189.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(212,85,24)"/><text x="1189.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.30%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(211,150,14)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.30%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(240,6,9)"/><text x="1189.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.30%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(213,159,31)"/><text x="1189.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.30%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(207,179,21)"/><text x="1189.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.30%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(215,119,50)"/><text x="1189.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(227,45,23)"/><text x="1189.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(247,167,29)"/><text x="1189.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(239,66,12)"/><text x="1189.00" y="382.50"></text></g></g></svg>