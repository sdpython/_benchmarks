<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(247,7,49)"/><text x="13.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(219,70,44)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(236,128,47)"/><text x="13.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.37%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(253,160,54)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(233,81,9)"/><text x="15.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.18%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(238,78,8)"/><text x="15.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.18%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(215,84,35)"/><text x="15.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(223,100,21)"/><text x="15.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.18%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(239,69,24)"/><text x="15.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.18%)</title><rect x="12" y="292" width="2" height="15" fill="rgb(205,87,43)"/><text x="15.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:18) (3 samples, 0.55%)</title><rect x="10" y="100" width="6" height="15" fill="rgb(235,83,22)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.55%)</title><rect x="10" y="116" width="6" height="15" fill="rgb(209,13,54)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.55%)</title><rect x="10" y="132" width="6" height="15" fill="rgb(246,192,47)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.55%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(211,51,27)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.18%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(242,212,31)"/><text x="17.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(222,38,33)"/><text x="17.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(233,184,28)"/><text x="17.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.18%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(240,48,1)"/><text x="17.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.18%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(234,132,53)"/><text x="17.00" y="238.50"></text></g><g><title>0x7f533183d9dd (?) (1 samples, 0.18%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(224,152,54)"/><text x="17.00" y="254.50"></text></g><g><title>0x7f533185e265 (?) (1 samples, 0.18%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(253,116,7)"/><text x="17.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.18%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(234,96,54)"/><text x="17.00" y="286.50"></text></g><g><title>0x7f5346726c3e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(232,83,1)"/><text x="17.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.55%)</title><rect x="20" y="164" width="7" height="15" fill="rgb(224,131,47)"/><text x="23.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.18%)</title><rect x="27" y="164" width="2" height="15" fill="rgb(245,166,13)"/><text x="30.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.37%)</title><rect x="29" y="196" width="4" height="15" fill="rgb(214,191,22)"/><text x="32.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.73%)</title><rect x="29" y="180" width="9" height="15" fill="rgb(216,152,33)"/><text x="32.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.37%)</title><rect x="33" y="196" width="5" height="15" fill="rgb(237,93,20)"/><text x="36.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (9 samples, 1.65%)</title><rect x="20" y="148" width="20" height="15" fill="rgb(211,136,7)"/><text x="23.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.92%)</title><rect x="29" y="164" width="11" height="15" fill="rgb(230,85,14)"/><text x="32.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.18%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(238,218,12)"/><text x="41.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="38" y="196" width="2" height="15" fill="rgb(213,108,33)"/><text x="41.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.18%)</title><rect x="40" y="148" width="2" height="15" fill="rgb(229,41,2)"/><text x="43.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.18%)</title><rect x="48" y="212" width="3" height="15" fill="rgb(217,161,36)"/><text x="51.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 0.73%)</title><rect x="44" y="180" width="9" height="15" fill="rgb(214,131,51)"/><text x="47.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.73%)</title><rect x="44" y="196" width="9" height="15" fill="rgb(228,22,48)"/><text x="47.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.18%)</title><rect x="51" y="212" width="2" height="15" fill="rgb(235,172,23)"/><text x="54.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.18%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(239,229,39)"/><text x="56.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.55%)</title><rect x="55" y="196" width="6" height="15" fill="rgb(230,132,54)"/><text x="58.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.18%)</title><rect x="59" y="212" width="2" height="15" fill="rgb(241,50,4)"/><text x="62.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.18%)</title><rect x="61" y="196" width="3" height="15" fill="rgb(231,128,34)"/><text x="64.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.18%)</title><rect x="61" y="212" width="3" height="15" fill="rgb(207,182,0)"/><text x="64.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.18%)</title><rect x="61" y="228" width="3" height="15" fill="rgb(240,20,36)"/><text x="64.00" y="238.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.18%)</title><rect x="64" y="228" width="2" height="15" fill="rgb(212,207,44)"/><text x="67.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.37%)</title><rect x="64" y="196" width="4" height="15" fill="rgb(217,148,34)"/><text x="67.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.37%)</title><rect x="64" y="212" width="4" height="15" fill="rgb(205,38,38)"/><text x="67.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.18%)</title><rect x="66" y="228" width="2" height="15" fill="rgb(227,20,20)"/><text x="69.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.18%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(228,53,39)"/><text x="71.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.18%)</title><rect x="68" y="228" width="2" height="15" fill="rgb(237,3,7)"/><text x="71.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.37%)</title><rect x="68" y="196" width="4" height="15" fill="rgb(213,228,44)"/><text x="71.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.18%)</title><rect x="70" y="212" width="2" height="15" fill="rgb(210,121,21)"/><text x="73.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2265) (1 samples, 0.18%)</title><rect x="70" y="228" width="2" height="15" fill="rgb(245,69,30)"/><text x="73.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="79" y="228" width="2" height="15" fill="rgb(246,1,38)"/><text x="82.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.18%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(247,127,7)"/><text x="84.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 1.10%)</title><rect x="72" y="196" width="13" height="15" fill="rgb(226,38,26)"/><text x="75.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.10%)</title><rect x="72" y="212" width="13" height="15" fill="rgb(213,43,9)"/><text x="75.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.18%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(213,140,30)"/><text x="86.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.18%)</title><rect x="85" y="212" width="2" height="15" fill="rgb(206,2,24)"/><text x="88.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (17 samples, 3.11%)</title><rect x="53" y="180" width="36" height="15" fill="rgb(213,116,9)"/><text x="56.00" y="190.50">dec..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.37%)</title><rect x="85" y="196" width="4" height="15" fill="rgb(210,87,38)"/><text x="88.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.18%)</title><rect x="87" y="212" width="2" height="15" fill="rgb(232,141,1)"/><text x="90.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.18%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(221,88,14)"/><text x="90.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.18%)</title><rect x="89" y="180" width="3" height="15" fill="rgb(243,25,21)"/><text x="92.00" y="190.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="92" y="260" width="2" height="15" fill="rgb(242,206,52)"/><text x="95.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(210,108,14)"/><text x="95.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="92" y="292" width="2" height="15" fill="rgb(234,206,31)"/><text x="95.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.18%)</title><rect x="94" y="276" width="2" height="15" fill="rgb(253,30,11)"/><text x="97.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.18%)</title><rect x="94" y="292" width="2" height="15" fill="rgb(221,0,24)"/><text x="97.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.37%)</title><rect x="96" y="308" width="4" height="15" fill="rgb(233,82,31)"/><text x="99.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.73%)</title><rect x="94" y="260" width="8" height="15" fill="rgb(242,220,35)"/><text x="97.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.55%)</title><rect x="96" y="276" width="6" height="15" fill="rgb(232,216,42)"/><text x="99.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.55%)</title><rect x="96" y="292" width="6" height="15" fill="rgb(227,132,39)"/><text x="99.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="100" y="308" width="2" height="15" fill="rgb(232,68,32)"/><text x="103.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:329) (1 samples, 0.18%)</title><rect x="100" y="324" width="2" height="15" fill="rgb(222,206,0)"/><text x="103.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.10%)</title><rect x="92" y="244" width="13" height="15" fill="rgb(205,182,23)"/><text x="95.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="102" y="260" width="3" height="15" fill="rgb(210,43,49)"/><text x="105.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.18%)</title><rect x="102" y="276" width="3" height="15" fill="rgb(227,62,32)"/><text x="105.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.18%)</title><rect x="102" y="292" width="3" height="15" fill="rgb(253,41,10)"/><text x="105.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.18%)</title><rect x="102" y="308" width="3" height="15" fill="rgb(234,148,17)"/><text x="105.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.18%)</title><rect x="102" y="324" width="3" height="15" fill="rgb(218,153,10)"/><text x="105.00" y="334.50"></text></g><g><title>array_add (number.c:330) (7 samples, 1.28%)</title><rect x="92" y="196" width="15" height="15" fill="rgb(253,21,5)"/><text x="95.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.28%)</title><rect x="92" y="212" width="15" height="15" fill="rgb(238,173,24)"/><text x="95.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.28%)</title><rect x="92" y="228" width="15" height="15" fill="rgb(236,140,27)"/><text x="95.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.18%)</title><rect x="105" y="244" width="2" height="15" fill="rgb(225,180,38)"/><text x="108.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="107" y="196" width="2" height="15" fill="rgb(228,216,10)"/><text x="110.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="109" y="212" width="2" height="15" fill="rgb(241,121,8)"/><text x="112.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="111" y="212" width="4" height="15" fill="rgb(253,71,30)"/><text x="114.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.18%)</title><rect x="115" y="244" width="3" height="15" fill="rgb(226,71,17)"/><text x="118.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="115" y="260" width="3" height="15" fill="rgb(254,199,24)"/><text x="118.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.18%)</title><rect x="115" y="276" width="3" height="15" fill="rgb(213,2,29)"/><text x="118.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.18%)</title><rect x="118" y="244" width="2" height="15" fill="rgb(224,187,41)"/><text x="121.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:76) (1 samples, 0.18%)</title><rect x="118" y="260" width="2" height="15" fill="rgb(244,188,2)"/><text x="121.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (14 samples, 2.56%)</title><rect x="92" y="180" width="30" height="15" fill="rgb(249,122,34)"/><text x="95.00" y="190.50">de..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (6 samples, 1.10%)</title><rect x="109" y="196" width="13" height="15" fill="rgb(246,177,42)"/><text x="112.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="115" y="212" width="7" height="15" fill="rgb(239,59,6)"/><text x="118.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (3 samples, 0.55%)</title><rect x="115" y="228" width="7" height="15" fill="rgb(222,229,26)"/><text x="118.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.18%)</title><rect x="120" y="244" width="2" height="15" fill="rgb(216,47,25)"/><text x="123.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.18%)</title><rect x="120" y="260" width="2" height="15" fill="rgb(210,169,46)"/><text x="123.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="120" y="276" width="2" height="15" fill="rgb(250,124,6)"/><text x="123.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="120" y="292" width="2" height="15" fill="rgb(229,172,21)"/><text x="123.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="120" y="308" width="2" height="15" fill="rgb(221,6,31)"/><text x="123.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (37 samples, 6.78%)</title><rect x="44" y="164" width="80" height="15" fill="rgb(222,220,49)"/><text x="47.00" y="174.50">_predict_..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.18%)</title><rect x="122" y="180" width="2" height="15" fill="rgb(229,96,4)"/><text x="125.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="124" y="196" width="2" height="15" fill="rgb(232,142,25)"/><text x="127.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.18%)</title><rect x="124" y="212" width="2" height="15" fill="rgb(207,104,44)"/><text x="127.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.18%)</title><rect x="124" y="228" width="2" height="15" fill="rgb(208,206,8)"/><text x="127.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.18%)</title><rect x="126" y="212" width="2" height="15" fill="rgb(205,106,23)"/><text x="129.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="126" y="228" width="2" height="15" fill="rgb(253,92,47)"/><text x="129.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.18%)</title><rect x="126" y="244" width="2" height="15" fill="rgb(237,72,14)"/><text x="129.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.18%)</title><rect x="126" y="260" width="2" height="15" fill="rgb(233,173,5)"/><text x="129.00" y="270.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.18%)</title><rect x="126" y="276" width="2" height="15" fill="rgb(222,140,46)"/><text x="129.00" y="286.50"></text></g><g><title>0x7f533181bfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="131" y="276" width="2" height="15" fill="rgb(226,192,46)"/><text x="134.00" y="286.50"></text></g><g><title>0x7f53319679f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="133" y="276" width="2" height="15" fill="rgb(245,122,51)"/><text x="136.00" y="286.50"></text></g><g><title>0x7f5346726ba0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(217,122,0)"/><text x="151.00" y="302.50"></text></g><g><title>0x7f5346726bd3 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="150" y="292" width="2" height="15" fill="rgb(246,186,34)"/><text x="153.00" y="302.50"></text></g><g><title>0x7f5346726c07 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="152" y="292" width="4" height="15" fill="rgb(230,4,40)"/><text x="155.00" y="302.50"></text></g><g><title>0x7f533185e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.56%)</title><rect x="128" y="260" width="31" height="15" fill="rgb(205,57,19)"/><text x="131.00" y="270.50">0x..</text></g><g><title>exp (libm-2.29.so) (11 samples, 2.01%)</title><rect x="135" y="276" width="24" height="15" fill="rgb(227,37,39)"/><text x="138.00" y="286.50">e..</text></g><g><title>0x7f5346726c6a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="156" y="292" width="3" height="15" fill="rgb(239,133,19)"/><text x="159.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 4.03%)</title><rect x="124" y="180" width="48" height="15" fill="rgb(244,217,54)"/><text x="127.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 3.85%)</title><rect x="126" y="196" width="46" height="15" fill="rgb(231,163,43)"/><text x="129.00" y="206.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (20 samples, 3.66%)</title><rect x="128" y="212" width="44" height="15" fill="rgb(242,164,16)"/><text x="131.00" y="222.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (20 samples, 3.66%)</title><rect x="128" y="228" width="44" height="15" fill="rgb(248,144,0)"/><text x="131.00" y="238.50">triv..</text></g><g><title>0x7f533183d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 3.66%)</title><rect x="128" y="244" width="44" height="15" fill="rgb(252,0,12)"/><text x="131.00" y="254.50">0x7f..</text></g><g><title>0x7f533185e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.10%)</title><rect x="159" y="260" width="13" height="15" fill="rgb(230,105,49)"/><text x="162.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (23 samples, 4.21%)</title><rect x="124" y="164" width="50" height="15" fill="rgb(214,60,14)"/><text x="127.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4764) (1 samples, 0.18%)</title><rect x="172" y="180" width="2" height="15" fill="rgb(222,16,26)"/><text x="175.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.18%)</title><rect x="174" y="180" width="2" height="15" fill="rgb(245,99,29)"/><text x="177.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.18%)</title><rect x="174" y="196" width="2" height="15" fill="rgb(243,188,27)"/><text x="177.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:284) (1 samples, 0.18%)</title><rect x="174" y="212" width="2" height="15" fill="rgb(205,121,46)"/><text x="177.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4529) (1 samples, 0.18%)</title><rect x="176" y="244" width="2" height="15" fill="rgb(250,210,36)"/><text x="179.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3605) (1 samples, 0.18%)</title><rect x="178" y="260" width="2" height="15" fill="rgb(226,142,2)"/><text x="181.00" y="270.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.18%)</title><rect x="178" y="276" width="2" height="15" fill="rgb(241,189,6)"/><text x="181.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.18%)</title><rect x="180" y="260" width="2" height="15" fill="rgb(217,127,30)"/><text x="183.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.18%)</title><rect x="180" y="276" width="2" height="15" fill="rgb(225,144,48)"/><text x="183.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.18%)</title><rect x="180" y="292" width="2" height="15" fill="rgb(237,145,3)"/><text x="183.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2191) (1 samples, 0.18%)</title><rect x="180" y="308" width="2" height="15" fill="rgb(219,85,1)"/><text x="183.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="182" y="276" width="3" height="15" fill="rgb(247,147,48)"/><text x="185.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="182" y="292" width="3" height="15" fill="rgb(228,194,44)"/><text x="185.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="182" y="308" width="3" height="15" fill="rgb(236,19,27)"/><text x="185.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.18%)</title><rect x="182" y="324" width="3" height="15" fill="rgb(224,196,44)"/><text x="185.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3896) (1 samples, 0.18%)</title><rect x="182" y="340" width="3" height="15" fill="rgb(238,152,52)"/><text x="185.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.18%)</title><rect x="185" y="308" width="2" height="15" fill="rgb(217,0,50)"/><text x="188.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (3 samples, 0.55%)</title><rect x="187" y="324" width="6" height="15" fill="rgb(247,217,32)"/><text x="190.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.92%)</title><rect x="187" y="308" width="11" height="15" fill="rgb(224,102,5)"/><text x="190.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.37%)</title><rect x="193" y="324" width="5" height="15" fill="rgb(208,4,17)"/><text x="196.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (2 samples, 0.37%)</title><rect x="198" y="308" width="4" height="15" fill="rgb(235,79,16)"/><text x="201.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 2.20%)</title><rect x="178" y="244" width="26" height="15" fill="rgb(237,42,20)"/><text x="181.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.83%)</title><rect x="182" y="260" width="22" height="15" fill="rgb(238,68,11)"/><text x="185.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 1.65%)</title><rect x="185" y="276" width="19" height="15" fill="rgb(222,119,38)"/><text x="188.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 1.65%)</title><rect x="185" y="292" width="19" height="15" fill="rgb(216,21,8)"/><text x="188.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.18%)</title><rect x="202" y="308" width="2" height="15" fill="rgb(233,47,44)"/><text x="205.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 2.56%)</title><rect x="176" y="180" width="30" height="15" fill="rgb(223,227,25)"/><text x="179.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 2.56%)</title><rect x="176" y="196" width="30" height="15" fill="rgb(240,83,25)"/><text x="179.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 2.56%)</title><rect x="176" y="212" width="30" height="15" fill="rgb(210,160,54)"/><text x="179.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 2.56%)</title><rect x="176" y="228" width="30" height="15" fill="rgb(238,143,13)"/><text x="179.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.18%)</title><rect x="204" y="244" width="2" height="15" fill="rgb(225,84,35)"/><text x="207.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.18%)</title><rect x="204" y="260" width="2" height="15" fill="rgb(232,3,22)"/><text x="207.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="206" y="196" width="2" height="15" fill="rgb(205,167,24)"/><text x="209.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.18%)</title><rect x="206" y="212" width="2" height="15" fill="rgb(216,50,7)"/><text x="209.00" y="222.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1755) (1 samples, 0.18%)</title><rect x="206" y="228" width="2" height="15" fill="rgb(225,19,33)"/><text x="209.00" y="238.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c:265) (1 samples, 0.18%)</title><rect x="206" y="244" width="2" height="15" fill="rgb(240,208,29)"/><text x="209.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.18%)</title><rect x="208" y="196" width="2" height="15" fill="rgb(237,139,18)"/><text x="211.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.18%)</title><rect x="208" y="212" width="2" height="15" fill="rgb(207,160,50)"/><text x="211.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="210" y="228" width="3" height="15" fill="rgb(210,19,30)"/><text x="213.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.18%)</title><rect x="210" y="244" width="3" height="15" fill="rgb(207,208,2)"/><text x="213.00" y="254.50"></text></g><g><title>0x7f5346575120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="210" y="260" width="3" height="15" fill="rgb(235,215,15)"/><text x="213.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.18%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(233,63,39)"/><text x="216.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.18%)</title><rect x="217" y="292" width="2" height="15" fill="rgb(216,58,39)"/><text x="220.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.73%)</title><rect x="213" y="228" width="8" height="15" fill="rgb(205,151,26)"/><text x="216.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.73%)</title><rect x="213" y="244" width="8" height="15" fill="rgb(246,31,29)"/><text x="216.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.73%)</title><rect x="213" y="260" width="8" height="15" fill="rgb(239,37,17)"/><text x="216.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.55%)</title><rect x="215" y="276" width="6" height="15" fill="rgb(219,58,11)"/><text x="218.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.18%)</title><rect x="219" y="292" width="2" height="15" fill="rgb(207,166,48)"/><text x="222.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.18%)</title><rect x="221" y="228" width="2" height="15" fill="rgb(244,192,8)"/><text x="224.00" y="238.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1221) (1 samples, 0.18%)</title><rect x="221" y="244" width="2" height="15" fill="rgb(237,172,11)"/><text x="224.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:38) (100 samples, 18.32%)</title><rect x="10" y="52" width="216" height="15" fill="rgb(244,41,41)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegr..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:37) (100 samples, 18.32%)</title><rect x="10" y="68" width="216" height="15" fill="rgb(238,166,54)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticR..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:29) (100 samples, 18.32%)</title><rect x="10" y="84" width="216" height="15" fill="rgb(227,167,48)"/><text x="13.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:23) (97 samples, 17.77%)</title><rect x="16" y="100" width="210" height="15" fill="rgb(226,211,8)"/><text x="19.00" y="110.50">profile (bench_LogisticRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (97 samples, 17.77%)</title><rect x="16" y="116" width="210" height="15" fill="rgb(246,213,46)"/><text x="19.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (95 samples, 17.40%)</title><rect x="20" y="132" width="206" height="15" fill="rgb(218,128,46)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (85 samples, 15.57%)</title><rect x="42" y="148" width="184" height="15" fill="rgb(250,210,43)"/><text x="45.00" y="158.50">predict_proba (sklearn/..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (24 samples, 4.40%)</title><rect x="174" y="164" width="52" height="15" fill="rgb(206,188,23)"/><text x="177.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.65%)</title><rect x="206" y="180" width="20" height="15" fill="rgb(215,66,48)"/><text x="209.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.28%)</title><rect x="210" y="196" width="16" height="15" fill="rgb(239,191,7)"/><text x="213.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.28%)</title><rect x="210" y="212" width="16" height="15" fill="rgb(214,22,47)"/><text x="213.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="223" y="228" width="3" height="15" fill="rgb(236,211,14)"/><text x="226.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.18%)</title><rect x="223" y="244" width="3" height="15" fill="rgb(220,30,44)"/><text x="226.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.18%)</title><rect x="223" y="260" width="3" height="15" fill="rgb(227,134,50)"/><text x="226.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.18%)</title><rect x="223" y="276" width="3" height="15" fill="rgb(213,145,12)"/><text x="226.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.18%)</title><rect x="223" y="292" width="3" height="15" fill="rgb(231,25,26)"/><text x="226.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:1) (1 samples, 0.18%)</title><rect x="226" y="148" width="2" height="15" fill="rgb(223,63,48)"/><text x="229.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="164" width="2" height="15" fill="rgb(227,194,8)"/><text x="229.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="180" width="2" height="15" fill="rgb(247,48,1)"/><text x="229.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="196" width="2" height="15" fill="rgb(236,140,19)"/><text x="229.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="226" y="212" width="2" height="15" fill="rgb(212,164,2)"/><text x="229.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="228" width="2" height="15" fill="rgb(248,83,50)"/><text x="229.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.18%)</title><rect x="226" y="244" width="2" height="15" fill="rgb(211,20,34)"/><text x="229.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(245,55,18)"/><text x="229.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="276" width="2" height="15" fill="rgb(223,134,1)"/><text x="229.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="292" width="2" height="15" fill="rgb(213,119,5)"/><text x="229.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="308" width="2" height="15" fill="rgb(221,50,54)"/><text x="229.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="324" width="2" height="15" fill="rgb(214,167,17)"/><text x="229.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(218,196,7)"/><text x="229.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="356" width="2" height="15" fill="rgb(216,151,45)"/><text x="229.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.18%)</title><rect x="226" y="372" width="2" height="15" fill="rgb(222,215,44)"/><text x="229.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="226" y="388" width="2" height="15" fill="rgb(234,227,17)"/><text x="229.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="404" width="2" height="15" fill="rgb(211,45,26)"/><text x="229.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="420" width="2" height="15" fill="rgb(223,9,0)"/><text x="229.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="436" width="2" height="15" fill="rgb(234,58,22)"/><text x="229.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="452" width="2" height="15" fill="rgb(208,168,15)"/><text x="229.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="226" y="468" width="2" height="15" fill="rgb(242,37,9)"/><text x="229.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="484" width="2" height="15" fill="rgb(219,61,5)"/><text x="229.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.18%)</title><rect x="226" y="500" width="2" height="15" fill="rgb(246,186,18)"/><text x="229.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="516" width="2" height="15" fill="rgb(248,70,40)"/><text x="229.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="532" width="2" height="15" fill="rgb(247,104,41)"/><text x="229.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="548" width="2" height="15" fill="rgb(221,223,32)"/><text x="229.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.18%)</title><rect x="226" y="564" width="2" height="15" fill="rgb(245,44,54)"/><text x="229.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="580" width="2" height="15" fill="rgb(248,75,30)"/><text x="229.00" y="590.50"></text></g><g><title>0x7f5338e1b585 (?) (1 samples, 0.18%)</title><rect x="226" y="596" width="2" height="15" fill="rgb(208,142,14)"/><text x="229.00" y="606.50"></text></g><g><title>0x7f5338e21075 (?) (1 samples, 0.18%)</title><rect x="226" y="612" width="2" height="15" fill="rgb(229,112,54)"/><text x="229.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="628" width="2" height="15" fill="rgb(213,168,21)"/><text x="229.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="644" width="2" height="15" fill="rgb(234,22,31)"/><text x="229.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="660" width="2" height="15" fill="rgb(205,138,9)"/><text x="229.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.18%)</title><rect x="226" y="676" width="2" height="15" fill="rgb(219,67,30)"/><text x="229.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="692" width="2" height="15" fill="rgb(222,40,6)"/><text x="229.00" y="702.50"></text></g><g><title>0x7f5338758543 (?) (1 samples, 0.18%)</title><rect x="226" y="708" width="2" height="15" fill="rgb(227,171,33)"/><text x="229.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="724" width="2" height="15" fill="rgb(228,47,1)"/><text x="229.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="740" width="2" height="15" fill="rgb(252,25,13)"/><text x="229.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="756" width="2" height="15" fill="rgb(206,17,53)"/><text x="229.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.18%)</title><rect x="226" y="772" width="2" height="15" fill="rgb(207,45,32)"/><text x="229.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="788" width="2" height="15" fill="rgb(225,122,28)"/><text x="229.00" y="798.50"></text></g><g><title>0x7f533852db9c (?) (1 samples, 0.18%)</title><rect x="226" y="804" width="2" height="15" fill="rgb(230,27,46)"/><text x="229.00" y="814.50"></text></g><g><title>0x7f5338531885 (?) (1 samples, 0.18%)</title><rect x="226" y="820" width="2" height="15" fill="rgb(239,69,51)"/><text x="229.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="836" width="2" height="15" fill="rgb(237,15,9)"/><text x="229.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="852" width="2" height="15" fill="rgb(252,75,1)"/><text x="229.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="868" width="2" height="15" fill="rgb(251,104,21)"/><text x="229.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="226" y="884" width="2" height="15" fill="rgb(237,80,21)"/><text x="229.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="900" width="2" height="15" fill="rgb(215,55,12)"/><text x="229.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:20) (1 samples, 0.18%)</title><rect x="226" y="916" width="2" height="15" fill="rgb(249,129,32)"/><text x="229.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="226" y="932" width="2" height="15" fill="rgb(239,141,46)"/><text x="229.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="226" y="948" width="2" height="15" fill="rgb(206,214,39)"/><text x="229.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="226" y="964" width="2" height="15" fill="rgb(243,103,41)"/><text x="229.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="226" y="980" width="2" height="15" fill="rgb(254,73,12)"/><text x="229.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="226" y="996" width="2" height="15" fill="rgb(242,100,45)"/><text x="229.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py:41) (1 samples, 0.18%)</title><rect x="226" y="1012" width="2" height="15" fill="rgb(211,49,39)"/><text x="229.00" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="226" y="1028" width="2" height="15" fill="rgb(226,72,5)"/><text x="229.00" y="1038.50"></text></g><g><title>0x7f534656ae7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="226" y="1044" width="2" height="15" fill="rgb(251,153,1)"/><text x="229.00" y="1054.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.18%)</title><rect x="228" y="916" width="2" height="15" fill="rgb(211,27,17)"/><text x="231.00" y="926.50"></text></g><g><title>join (posixpath.py:87) (1 samples, 0.18%)</title><rect x="228" y="932" width="2" height="15" fill="rgb(230,126,51)"/><text x="231.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.55%)</title><rect x="228" y="852" width="6" height="15" fill="rgb(211,161,23)"/><text x="231.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.55%)</title><rect x="228" y="868" width="6" height="15" fill="rgb(244,192,32)"/><text x="231.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.55%)</title><rect x="228" y="884" width="6" height="15" fill="rgb(241,26,53)"/><text x="231.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.55%)</title><rect x="228" y="900" width="6" height="15" fill="rgb(245,137,46)"/><text x="231.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.37%)</title><rect x="230" y="916" width="4" height="15" fill="rgb(209,82,7)"/><text x="233.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.37%)</title><rect x="230" y="932" width="4" height="15" fill="rgb(214,192,30)"/><text x="233.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.37%)</title><rect x="230" y="948" width="4" height="15" fill="rgb(234,80,39)"/><text x="233.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.18%)</title><rect x="232" y="964" width="2" height="15" fill="rgb(224,22,25)"/><text x="235.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.18%)</title><rect x="232" y="980" width="2" height="15" fill="rgb(215,203,11)"/><text x="235.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.18%)</title><rect x="232" y="996" width="2" height="15" fill="rgb(240,17,16)"/><text x="235.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.18%)</title><rect x="232" y="1012" width="2" height="15" fill="rgb(207,127,31)"/><text x="235.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="232" y="1028" width="2" height="15" fill="rgb(245,13,3)"/><text x="235.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="232" y="1044" width="2" height="15" fill="rgb(222,21,23)"/><text x="235.00" y="1054.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.18%)</title><rect x="234" y="964" width="2" height="15" fill="rgb(223,135,4)"/><text x="237.00" y="974.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.55%)</title><rect x="234" y="884" width="7" height="15" fill="rgb(222,108,3)"/><text x="237.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.55%)</title><rect x="234" y="900" width="7" height="15" fill="rgb(213,226,48)"/><text x="237.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 0.55%)</title><rect x="234" y="916" width="7" height="15" fill="rgb(217,162,42)"/><text x="237.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 0.55%)</title><rect x="234" y="932" width="7" height="15" fill="rgb(246,99,14)"/><text x="237.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (3 samples, 0.55%)</title><rect x="234" y="948" width="7" height="15" fill="rgb(244,79,53)"/><text x="237.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (2 samples, 0.37%)</title><rect x="236" y="964" width="5" height="15" fill="rgb(231,67,51)"/><text x="239.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (2 samples, 0.37%)</title><rect x="236" y="980" width="5" height="15" fill="rgb(208,67,42)"/><text x="239.00" y="990.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.18%)</title><rect x="241" y="900" width="2" height="15" fill="rgb(224,79,23)"/><text x="244.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (8 samples, 1.47%)</title><rect x="228" y="148" width="17" height="15" fill="rgb(243,210,27)"/><text x="231.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="164" width="17" height="15" fill="rgb(219,106,31)"/><text x="231.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.47%)</title><rect x="228" y="180" width="17" height="15" fill="rgb(246,125,2)"/><text x="231.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="196" width="17" height="15" fill="rgb(239,103,21)"/><text x="231.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="212" width="17" height="15" fill="rgb(253,131,21)"/><text x="231.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="228" width="17" height="15" fill="rgb(242,167,51)"/><text x="231.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="244" width="17" height="15" fill="rgb(217,142,10)"/><text x="231.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="260" width="17" height="15" fill="rgb(218,172,39)"/><text x="231.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="276" width="17" height="15" fill="rgb(243,121,36)"/><text x="231.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 1.47%)</title><rect x="228" y="292" width="17" height="15" fill="rgb(239,173,46)"/><text x="231.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="308" width="17" height="15" fill="rgb(213,189,19)"/><text x="231.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="324" width="17" height="15" fill="rgb(232,100,47)"/><text x="231.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="340" width="17" height="15" fill="rgb(227,148,22)"/><text x="231.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="356" width="17" height="15" fill="rgb(224,47,15)"/><text x="231.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="372" width="17" height="15" fill="rgb(215,7,37)"/><text x="231.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 1.47%)</title><rect x="228" y="388" width="17" height="15" fill="rgb(224,117,34)"/><text x="231.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="404" width="17" height="15" fill="rgb(233,50,19)"/><text x="231.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="420" width="17" height="15" fill="rgb(231,150,34)"/><text x="231.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="436" width="17" height="15" fill="rgb(242,156,48)"/><text x="231.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="452" width="17" height="15" fill="rgb(206,28,8)"/><text x="231.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="468" width="17" height="15" fill="rgb(214,156,53)"/><text x="231.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 1.47%)</title><rect x="228" y="484" width="17" height="15" fill="rgb(230,66,14)"/><text x="231.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="500" width="17" height="15" fill="rgb(220,127,51)"/><text x="231.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="516" width="17" height="15" fill="rgb(219,41,23)"/><text x="231.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="532" width="17" height="15" fill="rgb(242,140,12)"/><text x="231.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="548" width="17" height="15" fill="rgb(222,213,14)"/><text x="231.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="564" width="17" height="15" fill="rgb(249,100,13)"/><text x="231.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 1.47%)</title><rect x="228" y="580" width="17" height="15" fill="rgb(244,152,31)"/><text x="231.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="596" width="17" height="15" fill="rgb(215,228,4)"/><text x="231.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.47%)</title><rect x="228" y="612" width="17" height="15" fill="rgb(233,194,46)"/><text x="231.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="628" width="17" height="15" fill="rgb(226,79,4)"/><text x="231.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="644" width="17" height="15" fill="rgb(251,55,54)"/><text x="231.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="660" width="17" height="15" fill="rgb(219,76,33)"/><text x="231.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="676" width="17" height="15" fill="rgb(251,22,21)"/><text x="231.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="692" width="17" height="15" fill="rgb(245,29,31)"/><text x="231.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="708" width="17" height="15" fill="rgb(215,141,53)"/><text x="231.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 1.47%)</title><rect x="228" y="724" width="17" height="15" fill="rgb(207,211,33)"/><text x="231.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.47%)</title><rect x="228" y="740" width="17" height="15" fill="rgb(251,20,32)"/><text x="231.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.47%)</title><rect x="228" y="756" width="17" height="15" fill="rgb(243,134,16)"/><text x="231.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.47%)</title><rect x="228" y="772" width="17" height="15" fill="rgb(225,89,3)"/><text x="231.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.47%)</title><rect x="228" y="788" width="17" height="15" fill="rgb(241,140,7)"/><text x="231.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.47%)</title><rect x="228" y="804" width="17" height="15" fill="rgb(211,228,51)"/><text x="231.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 1.47%)</title><rect x="228" y="820" width="17" height="15" fill="rgb(245,41,42)"/><text x="231.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 1.47%)</title><rect x="228" y="836" width="17" height="15" fill="rgb(205,22,7)"/><text x="231.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (5 samples, 0.92%)</title><rect x="234" y="852" width="11" height="15" fill="rgb(210,210,18)"/><text x="237.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 0.92%)</title><rect x="234" y="868" width="11" height="15" fill="rgb(225,128,19)"/><text x="237.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.37%)</title><rect x="241" y="884" width="4" height="15" fill="rgb(226,127,11)"/><text x="244.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.18%)</title><rect x="243" y="900" width="2" height="15" fill="rgb(210,203,1)"/><text x="246.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.18%)</title><rect x="243" y="916" width="2" height="15" fill="rgb(218,16,44)"/><text x="246.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.18%)</title><rect x="243" y="932" width="2" height="15" fill="rgb(252,36,19)"/><text x="246.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.18%)</title><rect x="243" y="948" width="2" height="15" fill="rgb(243,223,31)"/><text x="246.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.18%)</title><rect x="243" y="964" width="2" height="15" fill="rgb(216,129,19)"/><text x="246.00" y="974.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:1738) (1 samples, 0.18%)</title><rect x="245" y="1524" width="2" height="15" fill="rgb(228,23,43)"/><text x="248.00" y="1534.50"></text></g><g><title>cpu_times (psutil/__init__.py:1732) (1 samples, 0.18%)</title><rect x="245" y="1540" width="2" height="15" fill="rgb(241,98,51)"/><text x="248.00" y="1550.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:567) (1 samples, 0.18%)</title><rect x="245" y="1556" width="2" height="15" fill="rgb(246,34,6)"/><text x="248.00" y="1566.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="245" y="1572" width="2" height="15" fill="rgb(207,63,29)"/><text x="248.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.37%)</title><rect x="245" y="484" width="4" height="15" fill="rgb(251,2,0)"/><text x="248.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="245" y="500" width="4" height="15" fill="rgb(205,181,36)"/><text x="248.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="516" width="4" height="15" fill="rgb(245,121,51)"/><text x="248.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="532" width="4" height="15" fill="rgb(243,203,23)"/><text x="248.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="548" width="4" height="15" fill="rgb(210,98,25)"/><text x="248.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="564" width="4" height="15" fill="rgb(221,49,29)"/><text x="248.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="580" width="4" height="15" fill="rgb(231,128,49)"/><text x="248.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="596" width="4" height="15" fill="rgb(214,127,0)"/><text x="248.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.37%)</title><rect x="245" y="612" width="4" height="15" fill="rgb(230,57,18)"/><text x="248.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="628" width="4" height="15" fill="rgb(238,77,9)"/><text x="248.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="644" width="4" height="15" fill="rgb(237,163,38)"/><text x="248.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="660" width="4" height="15" fill="rgb(207,176,49)"/><text x="248.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="676" width="4" height="15" fill="rgb(229,193,21)"/><text x="248.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="692" width="4" height="15" fill="rgb(219,79,17)"/><text x="248.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.37%)</title><rect x="245" y="708" width="4" height="15" fill="rgb(236,58,23)"/><text x="248.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="724" width="4" height="15" fill="rgb(250,88,29)"/><text x="248.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="740" width="4" height="15" fill="rgb(240,110,38)"/><text x="248.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="756" width="4" height="15" fill="rgb(224,103,35)"/><text x="248.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="772" width="4" height="15" fill="rgb(228,176,29)"/><text x="248.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="788" width="4" height="15" fill="rgb(241,192,48)"/><text x="248.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.37%)</title><rect x="245" y="804" width="4" height="15" fill="rgb(217,161,50)"/><text x="248.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="820" width="4" height="15" fill="rgb(241,67,9)"/><text x="248.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="836" width="4" height="15" fill="rgb(214,55,49)"/><text x="248.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="852" width="4" height="15" fill="rgb(238,43,41)"/><text x="248.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="868" width="4" height="15" fill="rgb(221,113,0)"/><text x="248.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="884" width="4" height="15" fill="rgb(218,57,3)"/><text x="248.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.37%)</title><rect x="245" y="900" width="4" height="15" fill="rgb(244,114,37)"/><text x="248.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="916" width="4" height="15" fill="rgb(210,89,42)"/><text x="248.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="932" width="4" height="15" fill="rgb(224,145,35)"/><text x="248.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="948" width="4" height="15" fill="rgb(237,97,17)"/><text x="248.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="964" width="4" height="15" fill="rgb(230,201,23)"/><text x="248.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="980" width="4" height="15" fill="rgb(205,126,52)"/><text x="248.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.37%)</title><rect x="245" y="996" width="4" height="15" fill="rgb(251,88,37)"/><text x="248.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1012" width="4" height="15" fill="rgb(207,123,35)"/><text x="248.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="245" y="1028" width="4" height="15" fill="rgb(224,20,23)"/><text x="248.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1044" width="4" height="15" fill="rgb(242,117,37)"/><text x="248.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1060" width="4" height="15" fill="rgb(254,188,27)"/><text x="248.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="1076" width="4" height="15" fill="rgb(226,156,13)"/><text x="248.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="1092" width="4" height="15" fill="rgb(211,196,54)"/><text x="248.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="1108" width="4" height="15" fill="rgb(232,224,13)"/><text x="248.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1124" width="4" height="15" fill="rgb(207,148,37)"/><text x="248.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (2 samples, 0.37%)</title><rect x="245" y="1140" width="4" height="15" fill="rgb(231,69,11)"/><text x="248.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1156" width="4" height="15" fill="rgb(221,179,41)"/><text x="248.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="1172" width="4" height="15" fill="rgb(243,210,1)"/><text x="248.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="1188" width="4" height="15" fill="rgb(217,213,0)"/><text x="248.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="1204" width="4" height="15" fill="rgb(223,122,35)"/><text x="248.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1220" width="4" height="15" fill="rgb(244,219,45)"/><text x="248.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (2 samples, 0.37%)</title><rect x="245" y="1236" width="4" height="15" fill="rgb(228,117,23)"/><text x="248.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1252" width="4" height="15" fill="rgb(213,8,7)"/><text x="248.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="1268" width="4" height="15" fill="rgb(242,96,33)"/><text x="248.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="1284" width="4" height="15" fill="rgb(219,178,3)"/><text x="248.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="1300" width="4" height="15" fill="rgb(228,138,54)"/><text x="248.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1316" width="4" height="15" fill="rgb(207,213,5)"/><text x="248.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (2 samples, 0.37%)</title><rect x="245" y="1332" width="4" height="15" fill="rgb(248,206,45)"/><text x="248.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1348" width="4" height="15" fill="rgb(211,10,34)"/><text x="248.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="1364" width="4" height="15" fill="rgb(212,106,13)"/><text x="248.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="1380" width="4" height="15" fill="rgb(220,112,17)"/><text x="248.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="1396" width="4" height="15" fill="rgb(239,11,0)"/><text x="248.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1412" width="4" height="15" fill="rgb(220,228,48)"/><text x="248.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (2 samples, 0.37%)</title><rect x="245" y="1428" width="4" height="15" fill="rgb(217,4,14)"/><text x="248.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="245" y="1444" width="4" height="15" fill="rgb(240,180,27)"/><text x="248.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="245" y="1460" width="4" height="15" fill="rgb(233,140,42)"/><text x="248.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="245" y="1476" width="4" height="15" fill="rgb(220,178,35)"/><text x="248.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="245" y="1492" width="4" height="15" fill="rgb(243,217,11)"/><text x="248.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="245" y="1508" width="4" height="15" fill="rgb(219,222,7)"/><text x="248.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:1744) (1 samples, 0.18%)</title><rect x="247" y="1524" width="2" height="15" fill="rgb(237,54,28)"/><text x="250.00" y="1534.50"></text></g><g><title>cpu_times (psutil/__init__.py:1734) (1 samples, 0.18%)</title><rect x="247" y="1540" width="2" height="15" fill="rgb(210,179,19)"/><text x="250.00" y="1550.50"></text></g><g><title>per_cpu_times (psutil/_pslinux.py:584) (1 samples, 0.18%)</title><rect x="247" y="1556" width="2" height="15" fill="rgb(220,171,43)"/><text x="250.00" y="1566.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (3 samples, 0.55%)</title><rect x="245" y="148" width="7" height="15" fill="rgb(214,202,13)"/><text x="248.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="245" y="164" width="7" height="15" fill="rgb(225,99,41)"/><text x="248.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.55%)</title><rect x="245" y="180" width="7" height="15" fill="rgb(216,228,16)"/><text x="248.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="245" y="196" width="7" height="15" fill="rgb(222,13,24)"/><text x="248.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="245" y="212" width="7" height="15" fill="rgb(240,56,10)"/><text x="248.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="245" y="228" width="7" height="15" fill="rgb(242,5,53)"/><text x="248.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="245" y="244" width="7" height="15" fill="rgb(205,173,29)"/><text x="248.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="245" y="260" width="7" height="15" fill="rgb(220,201,29)"/><text x="248.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="245" y="276" width="7" height="15" fill="rgb(249,24,21)"/><text x="248.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.55%)</title><rect x="245" y="292" width="7" height="15" fill="rgb(218,171,23)"/><text x="248.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="245" y="308" width="7" height="15" fill="rgb(213,164,3)"/><text x="248.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="245" y="324" width="7" height="15" fill="rgb(227,206,48)"/><text x="248.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="245" y="340" width="7" height="15" fill="rgb(239,22,48)"/><text x="248.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="245" y="356" width="7" height="15" fill="rgb(228,12,45)"/><text x="248.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="245" y="372" width="7" height="15" fill="rgb(248,144,26)"/><text x="248.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.55%)</title><rect x="245" y="388" width="7" height="15" fill="rgb(211,41,39)"/><text x="248.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="245" y="404" width="7" height="15" fill="rgb(210,41,29)"/><text x="248.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="245" y="420" width="7" height="15" fill="rgb(221,49,19)"/><text x="248.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="245" y="436" width="7" height="15" fill="rgb(225,201,5)"/><text x="248.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="245" y="452" width="7" height="15" fill="rgb(215,34,24)"/><text x="248.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="245" y="468" width="7" height="15" fill="rgb(212,53,39)"/><text x="248.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.18%)</title><rect x="249" y="484" width="3" height="15" fill="rgb(213,63,35)"/><text x="252.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="249" y="500" width="3" height="15" fill="rgb(246,125,46)"/><text x="252.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="249" y="516" width="3" height="15" fill="rgb(238,190,8)"/><text x="252.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="249" y="532" width="3" height="15" fill="rgb(207,115,50)"/><text x="252.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="249" y="548" width="3" height="15" fill="rgb(241,87,53)"/><text x="252.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="564" width="3" height="15" fill="rgb(224,140,52)"/><text x="252.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.18%)</title><rect x="249" y="580" width="3" height="15" fill="rgb(233,10,54)"/><text x="252.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="249" y="596" width="3" height="15" fill="rgb(222,26,5)"/><text x="252.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="249" y="612" width="3" height="15" fill="rgb(232,197,5)"/><text x="252.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="249" y="628" width="3" height="15" fill="rgb(243,73,27)"/><text x="252.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="249" y="644" width="3" height="15" fill="rgb(229,178,43)"/><text x="252.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="660" width="3" height="15" fill="rgb(251,44,6)"/><text x="252.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.18%)</title><rect x="249" y="676" width="3" height="15" fill="rgb(236,115,32)"/><text x="252.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="249" y="692" width="3" height="15" fill="rgb(248,192,35)"/><text x="252.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="249" y="708" width="3" height="15" fill="rgb(243,174,17)"/><text x="252.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="249" y="724" width="3" height="15" fill="rgb(245,199,12)"/><text x="252.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="249" y="740" width="3" height="15" fill="rgb(245,71,11)"/><text x="252.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="756" width="3" height="15" fill="rgb(212,131,1)"/><text x="252.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.18%)</title><rect x="249" y="772" width="3" height="15" fill="rgb(224,195,34)"/><text x="252.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="249" y="788" width="3" height="15" fill="rgb(254,69,21)"/><text x="252.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="804" width="3" height="15" fill="rgb(223,55,29)"/><text x="252.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="249" y="820" width="3" height="15" fill="rgb(210,202,46)"/><text x="252.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="249" y="836" width="3" height="15" fill="rgb(235,182,40)"/><text x="252.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="249" y="852" width="3" height="15" fill="rgb(248,174,29)"/><text x="252.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="249" y="868" width="3" height="15" fill="rgb(238,51,48)"/><text x="252.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="884" width="3" height="15" fill="rgb(207,217,18)"/><text x="252.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.18%)</title><rect x="249" y="900" width="3" height="15" fill="rgb(209,128,11)"/><text x="252.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="249" y="916" width="3" height="15" fill="rgb(250,183,15)"/><text x="252.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="932" width="3" height="15" fill="rgb(245,39,14)"/><text x="252.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="249" y="948" width="3" height="15" fill="rgb(241,121,54)"/><text x="252.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="249" y="964" width="3" height="15" fill="rgb(237,79,10)"/><text x="252.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="249" y="980" width="3" height="15" fill="rgb(253,153,29)"/><text x="252.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="249" y="996" width="3" height="15" fill="rgb(226,168,31)"/><text x="252.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="249" y="1012" width="3" height="15" fill="rgb(234,204,52)"/><text x="252.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1906) (1 samples, 0.18%)</title><rect x="249" y="1028" width="3" height="15" fill="rgb(254,183,48)"/><text x="252.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.18%)</title><rect x="249" y="1044" width="3" height="15" fill="rgb(225,17,7)"/><text x="252.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.18%)</title><rect x="249" y="1060" width="3" height="15" fill="rgb(205,90,36)"/><text x="252.00" y="1070.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="249" y="1076" width="3" height="15" fill="rgb(251,18,2)"/><text x="252.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.18%)</title><rect x="252" y="1252" width="2" height="15" fill="rgb(244,106,1)"/><text x="255.00" y="1262.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.18%)</title><rect x="252" y="1268" width="2" height="15" fill="rgb(250,150,52)"/><text x="255.00" y="1278.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="252" y="1284" width="2" height="15" fill="rgb(249,222,14)"/><text x="255.00" y="1294.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.18%)</title><rect x="252" y="1300" width="2" height="15" fill="rgb(254,186,42)"/><text x="255.00" y="1310.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.37%)</title><rect x="252" y="244" width="4" height="15" fill="rgb(212,153,52)"/><text x="255.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="260" width="4" height="15" fill="rgb(213,43,43)"/><text x="255.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="276" width="4" height="15" fill="rgb(218,149,4)"/><text x="255.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="292" width="4" height="15" fill="rgb(230,172,2)"/><text x="255.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="308" width="4" height="15" fill="rgb(226,18,16)"/><text x="255.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="324" width="4" height="15" fill="rgb(209,150,50)"/><text x="255.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.37%)</title><rect x="252" y="340" width="4" height="15" fill="rgb(249,99,41)"/><text x="255.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="356" width="4" height="15" fill="rgb(247,183,10)"/><text x="255.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="252" y="372" width="4" height="15" fill="rgb(249,92,11)"/><text x="255.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="388" width="4" height="15" fill="rgb(222,54,14)"/><text x="255.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="404" width="4" height="15" fill="rgb(212,38,25)"/><text x="255.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="420" width="4" height="15" fill="rgb(205,170,16)"/><text x="255.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="436" width="4" height="15" fill="rgb(214,50,11)"/><text x="255.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="452" width="4" height="15" fill="rgb(218,60,18)"/><text x="255.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="468" width="4" height="15" fill="rgb(249,44,12)"/><text x="255.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.37%)</title><rect x="252" y="484" width="4" height="15" fill="rgb(212,215,26)"/><text x="255.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="500" width="4" height="15" fill="rgb(248,53,17)"/><text x="255.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="516" width="4" height="15" fill="rgb(214,120,54)"/><text x="255.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="532" width="4" height="15" fill="rgb(245,30,43)"/><text x="255.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="548" width="4" height="15" fill="rgb(252,8,28)"/><text x="255.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="564" width="4" height="15" fill="rgb(249,119,45)"/><text x="255.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.37%)</title><rect x="252" y="580" width="4" height="15" fill="rgb(207,47,27)"/><text x="255.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="596" width="4" height="15" fill="rgb(217,98,17)"/><text x="255.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="612" width="4" height="15" fill="rgb(210,3,4)"/><text x="255.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="628" width="4" height="15" fill="rgb(236,97,44)"/><text x="255.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="644" width="4" height="15" fill="rgb(229,68,28)"/><text x="255.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="660" width="4" height="15" fill="rgb(223,62,52)"/><text x="255.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.37%)</title><rect x="252" y="676" width="4" height="15" fill="rgb(224,95,47)"/><text x="255.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="692" width="4" height="15" fill="rgb(239,35,34)"/><text x="255.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="708" width="4" height="15" fill="rgb(219,29,22)"/><text x="255.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="724" width="4" height="15" fill="rgb(211,90,7)"/><text x="255.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="740" width="4" height="15" fill="rgb(216,158,44)"/><text x="255.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="756" width="4" height="15" fill="rgb(218,212,22)"/><text x="255.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (2 samples, 0.37%)</title><rect x="252" y="772" width="4" height="15" fill="rgb(223,26,54)"/><text x="255.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="788" width="4" height="15" fill="rgb(215,127,48)"/><text x="255.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="804" width="4" height="15" fill="rgb(239,181,49)"/><text x="255.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="820" width="4" height="15" fill="rgb(227,46,20)"/><text x="255.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="836" width="4" height="15" fill="rgb(212,159,13)"/><text x="255.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="852" width="4" height="15" fill="rgb(252,168,10)"/><text x="255.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (2 samples, 0.37%)</title><rect x="252" y="868" width="4" height="15" fill="rgb(239,119,26)"/><text x="255.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="884" width="4" height="15" fill="rgb(243,3,5)"/><text x="255.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="900" width="4" height="15" fill="rgb(215,3,43)"/><text x="255.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="916" width="4" height="15" fill="rgb(227,112,39)"/><text x="255.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="932" width="4" height="15" fill="rgb(236,185,39)"/><text x="255.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="948" width="4" height="15" fill="rgb(224,187,0)"/><text x="255.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (2 samples, 0.37%)</title><rect x="252" y="964" width="4" height="15" fill="rgb(205,1,54)"/><text x="255.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="980" width="4" height="15" fill="rgb(252,87,7)"/><text x="255.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="996" width="4" height="15" fill="rgb(221,184,47)"/><text x="255.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="1012" width="4" height="15" fill="rgb(218,107,1)"/><text x="255.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="1028" width="4" height="15" fill="rgb(240,162,23)"/><text x="255.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="1044" width="4" height="15" fill="rgb(227,100,13)"/><text x="255.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (2 samples, 0.37%)</title><rect x="252" y="1060" width="4" height="15" fill="rgb(248,76,22)"/><text x="255.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="1076" width="4" height="15" fill="rgb(230,5,47)"/><text x="255.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="252" y="1092" width="4" height="15" fill="rgb(249,143,14)"/><text x="255.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="252" y="1108" width="4" height="15" fill="rgb(230,93,36)"/><text x="255.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="252" y="1124" width="4" height="15" fill="rgb(215,144,42)"/><text x="255.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="252" y="1140" width="4" height="15" fill="rgb(237,173,50)"/><text x="255.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py:28) (2 samples, 0.37%)</title><rect x="252" y="1156" width="4" height="15" fill="rgb(240,191,40)"/><text x="255.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="252" y="1172" width="4" height="15" fill="rgb(235,227,36)"/><text x="255.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (2 samples, 0.37%)</title><rect x="252" y="1188" width="4" height="15" fill="rgb(248,66,20)"/><text x="255.00" y="1198.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (2 samples, 0.37%)</title><rect x="252" y="1204" width="4" height="15" fill="rgb(249,169,42)"/><text x="255.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (2 samples, 0.37%)</title><rect x="252" y="1220" width="4" height="15" fill="rgb(218,51,11)"/><text x="255.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (2 samples, 0.37%)</title><rect x="252" y="1236" width="4" height="15" fill="rgb(219,193,20)"/><text x="255.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.18%)</title><rect x="254" y="1252" width="2" height="15" fill="rgb(236,0,17)"/><text x="257.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.18%)</title><rect x="256" y="436" width="2" height="15" fill="rgb(251,145,47)"/><text x="259.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="452" width="2" height="15" fill="rgb(221,23,12)"/><text x="259.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="468" width="2" height="15" fill="rgb(225,27,49)"/><text x="259.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="484" width="2" height="15" fill="rgb(222,57,39)"/><text x="259.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="500" width="2" height="15" fill="rgb(230,183,12)"/><text x="259.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="516" width="2" height="15" fill="rgb(213,8,10)"/><text x="259.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.18%)</title><rect x="256" y="532" width="2" height="15" fill="rgb(223,215,25)"/><text x="259.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="548" width="2" height="15" fill="rgb(240,212,26)"/><text x="259.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="564" width="2" height="15" fill="rgb(232,203,37)"/><text x="259.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="580" width="2" height="15" fill="rgb(251,52,4)"/><text x="259.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="596" width="2" height="15" fill="rgb(205,28,14)"/><text x="259.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="612" width="2" height="15" fill="rgb(214,171,39)"/><text x="259.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.18%)</title><rect x="256" y="628" width="2" height="15" fill="rgb(236,174,11)"/><text x="259.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="644" width="2" height="15" fill="rgb(223,129,25)"/><text x="259.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="660" width="2" height="15" fill="rgb(251,203,9)"/><text x="259.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="676" width="2" height="15" fill="rgb(209,191,41)"/><text x="259.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="692" width="2" height="15" fill="rgb(226,3,41)"/><text x="259.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="708" width="2" height="15" fill="rgb(237,152,27)"/><text x="259.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.18%)</title><rect x="256" y="724" width="2" height="15" fill="rgb(250,169,18)"/><text x="259.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="740" width="2" height="15" fill="rgb(214,107,27)"/><text x="259.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="756" width="2" height="15" fill="rgb(248,17,14)"/><text x="259.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="772" width="2" height="15" fill="rgb(211,176,52)"/><text x="259.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="788" width="2" height="15" fill="rgb(240,189,17)"/><text x="259.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="804" width="2" height="15" fill="rgb(224,98,25)"/><text x="259.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.18%)</title><rect x="256" y="820" width="2" height="15" fill="rgb(225,166,43)"/><text x="259.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="836" width="2" height="15" fill="rgb(215,175,37)"/><text x="259.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="852" width="2" height="15" fill="rgb(254,35,15)"/><text x="259.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="868" width="2" height="15" fill="rgb(222,158,48)"/><text x="259.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="884" width="2" height="15" fill="rgb(217,182,37)"/><text x="259.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="900" width="2" height="15" fill="rgb(220,7,24)"/><text x="259.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.18%)</title><rect x="256" y="916" width="2" height="15" fill="rgb(225,207,4)"/><text x="259.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="932" width="2" height="15" fill="rgb(250,80,1)"/><text x="259.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="948" width="2" height="15" fill="rgb(236,15,6)"/><text x="259.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="964" width="2" height="15" fill="rgb(242,70,30)"/><text x="259.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="980" width="2" height="15" fill="rgb(227,39,51)"/><text x="259.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="996" width="2" height="15" fill="rgb(240,206,28)"/><text x="259.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.18%)</title><rect x="256" y="1012" width="2" height="15" fill="rgb(252,39,41)"/><text x="259.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1028" width="2" height="15" fill="rgb(249,158,50)"/><text x="259.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1044" width="2" height="15" fill="rgb(208,212,52)"/><text x="259.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1060" width="2" height="15" fill="rgb(239,0,0)"/><text x="259.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1076" width="2" height="15" fill="rgb(215,74,36)"/><text x="259.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1092" width="2" height="15" fill="rgb(220,199,13)"/><text x="259.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.18%)</title><rect x="256" y="1108" width="2" height="15" fill="rgb(214,157,30)"/><text x="259.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1124" width="2" height="15" fill="rgb(234,142,4)"/><text x="259.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1140" width="2" height="15" fill="rgb(227,41,18)"/><text x="259.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1156" width="2" height="15" fill="rgb(205,229,49)"/><text x="259.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1172" width="2" height="15" fill="rgb(229,54,16)"/><text x="259.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1188" width="2" height="15" fill="rgb(244,96,8)"/><text x="259.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.18%)</title><rect x="256" y="1204" width="2" height="15" fill="rgb(212,203,19)"/><text x="259.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1220" width="2" height="15" fill="rgb(219,37,21)"/><text x="259.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1236" width="2" height="15" fill="rgb(231,78,35)"/><text x="259.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1252" width="2" height="15" fill="rgb(240,25,10)"/><text x="259.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1268" width="2" height="15" fill="rgb(235,20,40)"/><text x="259.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1284" width="2" height="15" fill="rgb(217,87,12)"/><text x="259.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.18%)</title><rect x="256" y="1300" width="2" height="15" fill="rgb(240,69,1)"/><text x="259.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1316" width="2" height="15" fill="rgb(248,148,42)"/><text x="259.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1332" width="2" height="15" fill="rgb(221,74,0)"/><text x="259.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1348" width="2" height="15" fill="rgb(231,216,29)"/><text x="259.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1364" width="2" height="15" fill="rgb(252,118,12)"/><text x="259.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1380" width="2" height="15" fill="rgb(229,157,35)"/><text x="259.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.18%)</title><rect x="256" y="1396" width="2" height="15" fill="rgb(214,81,50)"/><text x="259.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1412" width="2" height="15" fill="rgb(208,96,44)"/><text x="259.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1428" width="2" height="15" fill="rgb(225,221,25)"/><text x="259.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1444" width="2" height="15" fill="rgb(249,117,6)"/><text x="259.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1460" width="2" height="15" fill="rgb(230,222,14)"/><text x="259.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1476" width="2" height="15" fill="rgb(238,163,23)"/><text x="259.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.18%)</title><rect x="256" y="1492" width="2" height="15" fill="rgb(217,205,36)"/><text x="259.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1508" width="2" height="15" fill="rgb(223,203,4)"/><text x="259.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="256" y="1524" width="2" height="15" fill="rgb(254,69,30)"/><text x="259.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1540" width="2" height="15" fill="rgb(208,210,40)"/><text x="259.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1556" width="2" height="15" fill="rgb(231,53,13)"/><text x="259.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1572" width="2" height="15" fill="rgb(229,155,5)"/><text x="259.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1588" width="2" height="15" fill="rgb(251,35,38)"/><text x="259.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="256" y="1604" width="2" height="15" fill="rgb(228,140,2)"/><text x="259.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="256" y="1620" width="2" height="15" fill="rgb(237,180,51)"/><text x="259.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:148) (1 samples, 0.18%)</title><rect x="256" y="1636" width="2" height="15" fill="rgb(220,63,32)"/><text x="259.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="256" y="1652" width="2" height="15" fill="rgb(248,192,38)"/><text x="259.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="256" y="1668" width="2" height="15" fill="rgb(225,70,3)"/><text x="259.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="256" y="1684" width="2" height="15" fill="rgb(247,143,8)"/><text x="259.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="256" y="1700" width="2" height="15" fill="rgb(220,181,11)"/><text x="259.00" y="1710.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.18%)</title><rect x="256" y="1716" width="2" height="15" fill="rgb(225,190,12)"/><text x="259.00" y="1726.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:954) (1 samples, 0.18%)</title><rect x="256" y="1732" width="2" height="15" fill="rgb(238,54,11)"/><text x="259.00" y="1742.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.18%)</title><rect x="258" y="1108" width="2" height="15" fill="rgb(214,227,11)"/><text x="261.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="258" y="1124" width="2" height="15" fill="rgb(253,17,16)"/><text x="261.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="258" y="1140" width="2" height="15" fill="rgb(215,156,16)"/><text x="261.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="258" y="1156" width="2" height="15" fill="rgb(247,99,50)"/><text x="261.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="258" y="1172" width="2" height="15" fill="rgb(245,150,15)"/><text x="261.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="258" y="1188" width="2" height="15" fill="rgb(228,121,18)"/><text x="261.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.18%)</title><rect x="258" y="1204" width="2" height="15" fill="rgb(246,62,42)"/><text x="261.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="258" y="1220" width="2" height="15" fill="rgb(219,41,26)"/><text x="261.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="258" y="1236" width="2" height="15" fill="rgb(254,142,9)"/><text x="261.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="258" y="1252" width="2" height="15" fill="rgb(240,177,47)"/><text x="261.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="258" y="1268" width="2" height="15" fill="rgb(238,133,10)"/><text x="261.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="258" y="1284" width="2" height="15" fill="rgb(232,201,28)"/><text x="261.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.18%)</title><rect x="258" y="1300" width="2" height="15" fill="rgb(235,64,51)"/><text x="261.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="258" y="1316" width="2" height="15" fill="rgb(234,150,24)"/><text x="261.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="258" y="1332" width="2" height="15" fill="rgb(227,25,7)"/><text x="261.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="258" y="1348" width="2" height="15" fill="rgb(238,154,41)"/><text x="261.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="258" y="1364" width="2" height="15" fill="rgb(214,114,37)"/><text x="261.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="258" y="1380" width="2" height="15" fill="rgb(251,187,22)"/><text x="261.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:12) (1 samples, 0.18%)</title><rect x="258" y="1396" width="2" height="15" fill="rgb(247,211,38)"/><text x="261.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="258" y="1412" width="2" height="15" fill="rgb(234,81,49)"/><text x="261.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.18%)</title><rect x="258" y="1428" width="2" height="15" fill="rgb(205,190,33)"/><text x="261.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.18%)</title><rect x="258" y="1444" width="2" height="15" fill="rgb(251,130,24)"/><text x="261.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.18%)</title><rect x="258" y="1460" width="2" height="15" fill="rgb(224,175,35)"/><text x="261.00" y="1470.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.18%)</title><rect x="260" y="1460" width="2" height="15" fill="rgb(247,109,34)"/><text x="263.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.18%)</title><rect x="260" y="1476" width="2" height="15" fill="rgb(230,86,48)"/><text x="263.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.18%)</title><rect x="260" y="1492" width="2" height="15" fill="rgb(216,217,48)"/><text x="263.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.18%)</title><rect x="260" y="1508" width="2" height="15" fill="rgb(216,150,0)"/><text x="263.00" y="1518.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py:113) (1 samples, 0.18%)</title><rect x="260" y="1524" width="2" height="15" fill="rgb(238,228,41)"/><text x="263.00" y="1534.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="260" y="1540" width="2" height="15" fill="rgb(210,116,42)"/><text x="263.00" y="1550.50"></text></g><g><title>pybind11::detail::function_call::~function_call (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="260" y="1556" width="2" height="15" fill="rgb(225,3,19)"/><text x="263.00" y="1566.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:4) (18 samples, 3.30%)</title><rect x="226" y="52" width="39" height="15" fill="rgb(243,12,22)"/><text x="229.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 3.30%)</title><rect x="226" y="68" width="39" height="15" fill="rgb(243,84,36)"/><text x="229.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 3.30%)</title><rect x="226" y="84" width="39" height="15" fill="rgb(225,99,43)"/><text x="229.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 3.30%)</title><rect x="226" y="100" width="39" height="15" fill="rgb(241,85,27)"/><text x="229.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 3.30%)</title><rect x="226" y="116" width="39" height="15" fill="rgb(237,227,40)"/><text x="229.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 3.30%)</title><rect x="226" y="132" width="39" height="15" fill="rgb(221,89,34)"/><text x="229.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (6 samples, 1.10%)</title><rect x="252" y="148" width="13" height="15" fill="rgb(229,63,51)"/><text x="255.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.10%)</title><rect x="252" y="164" width="13" height="15" fill="rgb(212,227,32)"/><text x="255.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.10%)</title><rect x="252" y="180" width="13" height="15" fill="rgb(226,62,2)"/><text x="255.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.10%)</title><rect x="252" y="196" width="13" height="15" fill="rgb(241,148,11)"/><text x="255.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.10%)</title><rect x="252" y="212" width="13" height="15" fill="rgb(205,180,4)"/><text x="255.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.10%)</title><rect x="252" y="228" width="13" height="15" fill="rgb(221,36,1)"/><text x="255.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.73%)</title><rect x="256" y="244" width="9" height="15" fill="rgb(246,122,51)"/><text x="259.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.73%)</title><rect x="256" y="260" width="9" height="15" fill="rgb(243,159,19)"/><text x="259.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.73%)</title><rect x="256" y="276" width="9" height="15" fill="rgb(240,18,42)"/><text x="259.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.73%)</title><rect x="256" y="292" width="9" height="15" fill="rgb(236,161,48)"/><text x="259.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.73%)</title><rect x="256" y="308" width="9" height="15" fill="rgb(246,207,7)"/><text x="259.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.73%)</title><rect x="256" y="324" width="9" height="15" fill="rgb(247,161,28)"/><text x="259.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.73%)</title><rect x="256" y="340" width="9" height="15" fill="rgb(217,102,38)"/><text x="259.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.73%)</title><rect x="256" y="356" width="9" height="15" fill="rgb(210,179,16)"/><text x="259.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.73%)</title><rect x="256" y="372" width="9" height="15" fill="rgb(243,130,9)"/><text x="259.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.73%)</title><rect x="256" y="388" width="9" height="15" fill="rgb(222,3,35)"/><text x="259.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.73%)</title><rect x="256" y="404" width="9" height="15" fill="rgb(243,39,8)"/><text x="259.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.73%)</title><rect x="256" y="420" width="9" height="15" fill="rgb(228,115,40)"/><text x="259.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.55%)</title><rect x="258" y="436" width="7" height="15" fill="rgb(217,167,7)"/><text x="261.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="452" width="7" height="15" fill="rgb(246,140,15)"/><text x="261.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.55%)</title><rect x="258" y="468" width="7" height="15" fill="rgb(219,72,50)"/><text x="261.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="484" width="7" height="15" fill="rgb(233,88,34)"/><text x="261.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="500" width="7" height="15" fill="rgb(218,45,45)"/><text x="261.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="516" width="7" height="15" fill="rgb(242,152,21)"/><text x="261.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="532" width="7" height="15" fill="rgb(226,115,24)"/><text x="261.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="548" width="7" height="15" fill="rgb(242,178,5)"/><text x="261.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="564" width="7" height="15" fill="rgb(247,84,30)"/><text x="261.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.55%)</title><rect x="258" y="580" width="7" height="15" fill="rgb(216,174,46)"/><text x="261.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="596" width="7" height="15" fill="rgb(241,27,8)"/><text x="261.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="612" width="7" height="15" fill="rgb(215,205,33)"/><text x="261.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="628" width="7" height="15" fill="rgb(225,144,43)"/><text x="261.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="644" width="7" height="15" fill="rgb(210,198,15)"/><text x="261.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="660" width="7" height="15" fill="rgb(221,133,49)"/><text x="261.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.55%)</title><rect x="258" y="676" width="7" height="15" fill="rgb(205,92,45)"/><text x="261.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="692" width="7" height="15" fill="rgb(254,29,11)"/><text x="261.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="708" width="7" height="15" fill="rgb(214,87,23)"/><text x="261.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="724" width="7" height="15" fill="rgb(242,129,40)"/><text x="261.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="740" width="7" height="15" fill="rgb(205,218,16)"/><text x="261.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="756" width="7" height="15" fill="rgb(238,148,10)"/><text x="261.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.55%)</title><rect x="258" y="772" width="7" height="15" fill="rgb(236,138,36)"/><text x="261.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="788" width="7" height="15" fill="rgb(207,4,30)"/><text x="261.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="804" width="7" height="15" fill="rgb(240,24,7)"/><text x="261.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="820" width="7" height="15" fill="rgb(208,61,38)"/><text x="261.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="836" width="7" height="15" fill="rgb(232,72,18)"/><text x="261.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="852" width="7" height="15" fill="rgb(216,74,24)"/><text x="261.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.55%)</title><rect x="258" y="868" width="7" height="15" fill="rgb(249,6,37)"/><text x="261.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="884" width="7" height="15" fill="rgb(241,113,23)"/><text x="261.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.55%)</title><rect x="258" y="900" width="7" height="15" fill="rgb(218,23,37)"/><text x="261.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="916" width="7" height="15" fill="rgb(233,122,6)"/><text x="261.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="932" width="7" height="15" fill="rgb(226,164,14)"/><text x="261.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="948" width="7" height="15" fill="rgb(240,42,47)"/><text x="261.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="964" width="7" height="15" fill="rgb(252,100,44)"/><text x="261.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="980" width="7" height="15" fill="rgb(224,200,13)"/><text x="261.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="996" width="7" height="15" fill="rgb(227,188,40)"/><text x="261.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.55%)</title><rect x="258" y="1012" width="7" height="15" fill="rgb(221,163,46)"/><text x="261.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.55%)</title><rect x="258" y="1028" width="7" height="15" fill="rgb(207,60,38)"/><text x="261.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.55%)</title><rect x="258" y="1044" width="7" height="15" fill="rgb(251,103,33)"/><text x="261.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.55%)</title><rect x="258" y="1060" width="7" height="15" fill="rgb(231,212,37)"/><text x="261.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.55%)</title><rect x="258" y="1076" width="7" height="15" fill="rgb(228,40,33)"/><text x="261.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.55%)</title><rect x="258" y="1092" width="7" height="15" fill="rgb(251,202,47)"/><text x="261.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.37%)</title><rect x="260" y="1108" width="5" height="15" fill="rgb(253,42,22)"/><text x="263.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="260" y="1124" width="5" height="15" fill="rgb(209,20,12)"/><text x="263.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="260" y="1140" width="5" height="15" fill="rgb(228,142,36)"/><text x="263.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="260" y="1156" width="5" height="15" fill="rgb(206,138,53)"/><text x="263.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="260" y="1172" width="5" height="15" fill="rgb(218,160,0)"/><text x="263.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="260" y="1188" width="5" height="15" fill="rgb(236,75,53)"/><text x="263.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="260" y="1204" width="5" height="15" fill="rgb(221,200,47)"/><text x="263.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="260" y="1220" width="5" height="15" fill="rgb(222,93,51)"/><text x="263.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.37%)</title><rect x="260" y="1236" width="5" height="15" fill="rgb(211,60,42)"/><text x="263.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="260" y="1252" width="5" height="15" fill="rgb(228,109,24)"/><text x="263.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="260" y="1268" width="5" height="15" fill="rgb(229,109,26)"/><text x="263.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="260" y="1284" width="5" height="15" fill="rgb(213,213,49)"/><text x="263.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="260" y="1300" width="5" height="15" fill="rgb(214,39,0)"/><text x="263.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="260" y="1316" width="5" height="15" fill="rgb(235,89,13)"/><text x="263.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="260" y="1332" width="5" height="15" fill="rgb(229,216,0)"/><text x="263.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="260" y="1348" width="5" height="15" fill="rgb(239,216,23)"/><text x="263.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.37%)</title><rect x="260" y="1364" width="5" height="15" fill="rgb(228,31,0)"/><text x="263.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="260" y="1380" width="5" height="15" fill="rgb(213,217,3)"/><text x="263.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="260" y="1396" width="5" height="15" fill="rgb(209,119,23)"/><text x="263.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="260" y="1412" width="5" height="15" fill="rgb(206,37,30)"/><text x="263.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="260" y="1428" width="5" height="15" fill="rgb(247,128,16)"/><text x="263.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="260" y="1444" width="5" height="15" fill="rgb(247,191,34)"/><text x="263.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.18%)</title><rect x="262" y="1460" width="3" height="15" fill="rgb(234,149,18)"/><text x="265.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="262" y="1476" width="3" height="15" fill="rgb(228,166,49)"/><text x="265.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="262" y="1492" width="3" height="15" fill="rgb(209,222,16)"/><text x="265.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="262" y="1508" width="3" height="15" fill="rgb(242,97,9)"/><text x="265.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="262" y="1524" width="3" height="15" fill="rgb(245,45,5)"/><text x="265.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="262" y="1540" width="3" height="15" fill="rgb(254,158,33)"/><text x="265.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.18%)</title><rect x="262" y="1556" width="3" height="15" fill="rgb(236,80,15)"/><text x="265.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.18%)</title><rect x="262" y="1572" width="3" height="15" fill="rgb(213,123,51)"/><text x="265.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.18%)</title><rect x="262" y="1588" width="3" height="15" fill="rgb(213,44,28)"/><text x="265.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.18%)</title><rect x="262" y="1604" width="3" height="15" fill="rgb(240,142,5)"/><text x="265.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.18%)</title><rect x="262" y="1620" width="3" height="15" fill="rgb(225,174,37)"/><text x="265.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.18%)</title><rect x="262" y="1636" width="3" height="15" fill="rgb(213,122,50)"/><text x="265.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.18%)</title><rect x="262" y="1652" width="3" height="15" fill="rgb(237,9,32)"/><text x="265.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1668" width="3" height="15" fill="rgb(253,120,15)"/><text x="265.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.18%)</title><rect x="262" y="1684" width="3" height="15" fill="rgb(205,147,54)"/><text x="265.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="262" y="1700" width="3" height="15" fill="rgb(237,188,9)"/><text x="265.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1716" width="3" height="15" fill="rgb(212,110,2)"/><text x="265.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.18%)</title><rect x="262" y="1732" width="3" height="15" fill="rgb(236,41,19)"/><text x="265.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="262" y="1748" width="3" height="15" fill="rgb(230,83,1)"/><text x="265.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1764" width="3" height="15" fill="rgb(228,127,51)"/><text x="265.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.18%)</title><rect x="262" y="1780" width="3" height="15" fill="rgb(230,120,9)"/><text x="265.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="262" y="1796" width="3" height="15" fill="rgb(225,155,0)"/><text x="265.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1812" width="3" height="15" fill="rgb(224,24,19)"/><text x="265.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.18%)</title><rect x="262" y="1828" width="3" height="15" fill="rgb(205,99,27)"/><text x="265.00" y="1838.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="262" y="1844" width="3" height="15" fill="rgb(209,67,5)"/><text x="265.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1860" width="3" height="15" fill="rgb(247,4,37)"/><text x="265.00" y="1870.50"></text></g><g><title>visit_Output (jinja2/compiler.py:1358) (1 samples, 0.18%)</title><rect x="262" y="1876" width="3" height="15" fill="rgb(209,19,18)"/><text x="265.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="262" y="1892" width="3" height="15" fill="rgb(248,130,8)"/><text x="265.00" y="1902.50"></text></g><g><title>new_func (jinja2/compiler.py:68) (1 samples, 0.18%)</title><rect x="262" y="1908" width="3" height="15" fill="rgb(234,103,41)"/><text x="265.00" y="1918.50"></text></g><g><title>__ne__ (jinja2/nodes.py:233) (1 samples, 0.18%)</title><rect x="262" y="1924" width="3" height="15" fill="rgb(242,164,14)"/><text x="265.00" y="1934.50"></text></g><g><title>__eq__ (jinja2/nodes.py:230) (1 samples, 0.18%)</title><rect x="262" y="1940" width="3" height="15" fill="rgb(228,135,13)"/><text x="265.00" y="1950.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:28) (1 samples, 0.18%)</title><rect x="265" y="84" width="2" height="15" fill="rgb(213,205,46)"/><text x="268.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.18%)</title><rect x="265" y="100" width="2" height="15" fill="rgb(212,99,33)"/><text x="268.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.18%)</title><rect x="265" y="116" width="2" height="15" fill="rgb(232,182,43)"/><text x="268.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.18%)</title><rect x="265" y="132" width="2" height="15" fill="rgb(206,190,43)"/><text x="268.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.18%)</title><rect x="265" y="148" width="2" height="15" fill="rgb(211,110,41)"/><text x="268.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.18%)</title><rect x="265" y="164" width="2" height="15" fill="rgb(230,182,2)"/><text x="268.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.18%)</title><rect x="265" y="180" width="2" height="15" fill="rgb(228,82,29)"/><text x="268.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.18%)</title><rect x="265" y="196" width="2" height="15" fill="rgb(208,109,10)"/><text x="268.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="265" y="212" width="2" height="15" fill="rgb(244,11,30)"/><text x="268.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="265" y="228" width="2" height="15" fill="rgb(210,83,43)"/><text x="268.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="265" y="244" width="2" height="15" fill="rgb(253,23,41)"/><text x="268.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="265" y="260" width="2" height="15" fill="rgb(229,215,18)"/><text x="268.00" y="270.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.18%)</title><rect x="265" y="276" width="2" height="15" fill="rgb(245,169,53)"/><text x="268.00" y="286.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.18%)</title><rect x="265" y="292" width="2" height="15" fill="rgb(210,35,3)"/><text x="268.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.18%)</title><rect x="267" y="196" width="2" height="15" fill="rgb(224,37,4)"/><text x="270.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.18%)</title><rect x="267" y="212" width="2" height="15" fill="rgb(235,21,22)"/><text x="270.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.18%)</title><rect x="267" y="228" width="2" height="15" fill="rgb(208,78,17)"/><text x="270.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.18%)</title><rect x="267" y="244" width="2" height="15" fill="rgb(228,72,17)"/><text x="270.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="267" y="260" width="2" height="15" fill="rgb(229,91,6)"/><text x="270.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="267" y="276" width="2" height="15" fill="rgb(211,9,36)"/><text x="270.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1662) (1 samples, 0.18%)</title><rect x="267" y="292" width="2" height="15" fill="rgb(216,178,9)"/><text x="270.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:18) (2 samples, 0.37%)</title><rect x="267" y="100" width="4" height="15" fill="rgb(234,26,34)"/><text x="270.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.37%)</title><rect x="267" y="116" width="4" height="15" fill="rgb(237,154,22)"/><text x="270.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.37%)</title><rect x="267" y="132" width="4" height="15" fill="rgb(244,105,20)"/><text x="270.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.37%)</title><rect x="267" y="148" width="4" height="15" fill="rgb(229,109,34)"/><text x="270.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.37%)</title><rect x="267" y="164" width="4" height="15" fill="rgb(245,179,8)"/><text x="270.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.37%)</title><rect x="267" y="180" width="4" height="15" fill="rgb(240,73,11)"/><text x="270.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.18%)</title><rect x="269" y="196" width="2" height="15" fill="rgb(217,123,20)"/><text x="272.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.18%)</title><rect x="269" y="212" width="2" height="15" fill="rgb(220,44,12)"/><text x="272.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.18%)</title><rect x="269" y="228" width="2" height="15" fill="rgb(244,38,16)"/><text x="272.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="269" y="244" width="2" height="15" fill="rgb(236,91,39)"/><text x="272.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.18%)</title><rect x="269" y="260" width="2" height="15" fill="rgb(215,159,1)"/><text x="272.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.18%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(223,52,31)"/><text x="272.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.37%)</title><rect x="275" y="180" width="5" height="15" fill="rgb(248,129,1)"/><text x="278.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.18%)</title><rect x="286" y="212" width="2" height="15" fill="rgb(240,88,4)"/><text x="289.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.18%)</title><rect x="286" y="228" width="2" height="15" fill="rgb(208,224,17)"/><text x="289.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.18%)</title><rect x="286" y="244" width="2" height="15" fill="rgb(227,45,51)"/><text x="289.00" y="254.50"></text></g><g><title>0x7f534656a757 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="286" y="260" width="2" height="15" fill="rgb(252,184,30)"/><text x="289.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.73%)</title><rect x="284" y="196" width="9" height="15" fill="rgb(232,221,37)"/><text x="287.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.37%)</title><rect x="288" y="212" width="5" height="15" fill="rgb(232,3,37)"/><text x="291.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (2 samples, 0.37%)</title><rect x="288" y="228" width="5" height="15" fill="rgb(233,134,0)"/><text x="291.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.18%)</title><rect x="293" y="260" width="2" height="15" fill="rgb(216,66,5)"/><text x="296.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.18%)</title><rect x="295" y="260" width="2" height="15" fill="rgb(244,227,52)"/><text x="298.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.18%)</title><rect x="295" y="276" width="2" height="15" fill="rgb(247,197,47)"/><text x="298.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.18%)</title><rect x="295" y="292" width="2" height="15" fill="rgb(231,47,40)"/><text x="298.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.18%)</title><rect x="295" y="308" width="2" height="15" fill="rgb(210,204,13)"/><text x="298.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="297" y="420" width="2" height="15" fill="rgb(238,70,54)"/><text x="300.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="297" y="436" width="2" height="15" fill="rgb(221,199,0)"/><text x="300.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="297" y="452" width="2" height="15" fill="rgb(253,133,49)"/><text x="300.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="297" y="468" width="2" height="15" fill="rgb(229,32,3)"/><text x="300.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="297" y="484" width="2" height="15" fill="rgb(237,81,39)"/><text x="300.00" y="494.50"></text></g><g><title>0x7f5346555db0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="297" y="500" width="2" height="15" fill="rgb(236,48,39)"/><text x="300.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.37%)</title><rect x="297" y="356" width="4" height="15" fill="rgb(224,26,3)"/><text x="300.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.37%)</title><rect x="297" y="372" width="4" height="15" fill="rgb(233,72,30)"/><text x="300.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.37%)</title><rect x="297" y="388" width="4" height="15" fill="rgb(253,43,39)"/><text x="300.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.37%)</title><rect x="297" y="404" width="4" height="15" fill="rgb(252,123,15)"/><text x="300.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.18%)</title><rect x="299" y="420" width="2" height="15" fill="rgb(214,122,12)"/><text x="302.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="301" y="356" width="2" height="15" fill="rgb(237,12,3)"/><text x="304.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.18%)</title><rect x="301" y="372" width="2" height="15" fill="rgb(212,186,18)"/><text x="304.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:557) (1 samples, 0.18%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(219,23,16)"/><text x="306.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.18%)</title><rect x="306" y="372" width="2" height="15" fill="rgb(243,85,38)"/><text x="309.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.18%)</title><rect x="308" y="372" width="2" height="15" fill="rgb(247,173,46)"/><text x="311.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.18%)</title><rect x="312" y="388" width="2" height="15" fill="rgb(240,84,31)"/><text x="315.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.18%)</title><rect x="314" y="388" width="2" height="15" fill="rgb(235,161,54)"/><text x="317.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.83%)</title><rect x="297" y="260" width="22" height="15" fill="rgb(241,64,26)"/><text x="300.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.83%)</title><rect x="297" y="276" width="22" height="15" fill="rgb(242,142,4)"/><text x="300.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.83%)</title><rect x="297" y="292" width="22" height="15" fill="rgb(252,143,13)"/><text x="300.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.83%)</title><rect x="297" y="308" width="22" height="15" fill="rgb(233,180,11)"/><text x="300.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.83%)</title><rect x="297" y="324" width="22" height="15" fill="rgb(211,125,38)"/><text x="300.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.83%)</title><rect x="297" y="340" width="22" height="15" fill="rgb(233,118,5)"/><text x="300.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 1.10%)</title><rect x="306" y="356" width="13" height="15" fill="rgb(214,89,54)"/><text x="309.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.73%)</title><rect x="310" y="372" width="9" height="15" fill="rgb(205,157,41)"/><text x="313.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.18%)</title><rect x="316" y="388" width="3" height="15" fill="rgb(248,179,20)"/><text x="319.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="319" y="260" width="2" height="15" fill="rgb(214,56,21)"/><text x="322.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="319" y="276" width="2" height="15" fill="rgb(239,120,23)"/><text x="322.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.18%)</title><rect x="319" y="292" width="2" height="15" fill="rgb(224,100,20)"/><text x="322.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.18%)</title><rect x="319" y="308" width="2" height="15" fill="rgb(240,211,38)"/><text x="322.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="319" y="324" width="2" height="15" fill="rgb(225,79,28)"/><text x="322.00" y="334.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (14 samples, 2.56%)</title><rect x="293" y="244" width="30" height="15" fill="rgb(218,77,29)"/><text x="296.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4798) (1 samples, 0.18%)</title><rect x="321" y="260" width="2" height="15" fill="rgb(218,76,23)"/><text x="324.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.18%)</title><rect x="323" y="340" width="2" height="15" fill="rgb(227,98,37)"/><text x="326.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.18%)</title><rect x="323" y="356" width="2" height="15" fill="rgb(231,181,37)"/><text x="326.00" y="366.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.18%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(240,128,54)"/><text x="326.00" y="382.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:680) (1 samples, 0.18%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(251,27,39)"/><text x="326.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="323" y="308" width="4" height="15" fill="rgb(223,128,20)"/><text x="326.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.37%)</title><rect x="323" y="324" width="4" height="15" fill="rgb(237,17,42)"/><text x="326.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3048) (1 samples, 0.18%)</title><rect x="325" y="340" width="2" height="15" fill="rgb(252,217,25)"/><text x="328.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.37%)</title><rect x="327" y="356" width="5" height="15" fill="rgb(220,115,11)"/><text x="330.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.18%)</title><rect x="332" y="356" width="2" height="15" fill="rgb(218,122,28)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="334" y="356" width="2" height="15" fill="rgb(221,165,37)"/><text x="337.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.18%)</title><rect x="334" y="372" width="2" height="15" fill="rgb(226,196,18)"/><text x="337.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (21 samples, 3.85%)</title><rect x="293" y="196" width="45" height="15" fill="rgb(240,100,33)"/><text x="296.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 3.85%)</title><rect x="293" y="212" width="45" height="15" fill="rgb(233,168,11)"/><text x="296.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (21 samples, 3.85%)</title><rect x="293" y="228" width="45" height="15" fill="rgb(245,188,33)"/><text x="296.00" y="238.50">_run..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 1.28%)</title><rect x="323" y="244" width="15" height="15" fill="rgb(230,88,51)"/><text x="326.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.28%)</title><rect x="323" y="260" width="15" height="15" fill="rgb(248,124,21)"/><text x="326.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.28%)</title><rect x="323" y="276" width="15" height="15" fill="rgb(231,221,22)"/><text x="326.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.28%)</title><rect x="323" y="292" width="15" height="15" fill="rgb(209,33,2)"/><text x="326.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.92%)</title><rect x="327" y="308" width="11" height="15" fill="rgb(215,189,2)"/><text x="330.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.92%)</title><rect x="327" y="324" width="11" height="15" fill="rgb(208,48,15)"/><text x="330.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.92%)</title><rect x="327" y="340" width="11" height="15" fill="rgb(241,107,29)"/><text x="330.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.18%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(235,169,54)"/><text x="339.00" y="366.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.18%)</title><rect x="344" y="308" width="3" height="15" fill="rgb(249,187,49)"/><text x="347.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.18%)</title><rect x="344" y="324" width="3" height="15" fill="rgb(248,224,39)"/><text x="347.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.18%)</title><rect x="344" y="340" width="3" height="15" fill="rgb(220,163,53)"/><text x="347.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="347" y="372" width="2" height="15" fill="rgb(235,78,39)"/><text x="350.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="347" y="388" width="2" height="15" fill="rgb(227,229,4)"/><text x="350.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.55%)</title><rect x="344" y="276" width="7" height="15" fill="rgb(209,83,28)"/><text x="347.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.55%)</title><rect x="344" y="292" width="7" height="15" fill="rgb(210,170,12)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.37%)</title><rect x="347" y="308" width="4" height="15" fill="rgb(215,84,53)"/><text x="350.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (2 samples, 0.37%)</title><rect x="347" y="324" width="4" height="15" fill="rgb(234,38,13)"/><text x="350.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (2 samples, 0.37%)</title><rect x="347" y="340" width="4" height="15" fill="rgb(249,13,21)"/><text x="350.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="347" y="356" width="4" height="15" fill="rgb(227,93,32)"/><text x="350.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="349" y="372" width="2" height="15" fill="rgb(224,99,35)"/><text x="352.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (8 samples, 1.47%)</title><rect x="340" y="228" width="17" height="15" fill="rgb(244,138,4)"/><text x="343.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 1.28%)</title><rect x="342" y="244" width="15" height="15" fill="rgb(218,164,12)"/><text x="345.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 1.10%)</title><rect x="344" y="260" width="13" height="15" fill="rgb(241,59,22)"/><text x="347.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.55%)</title><rect x="351" y="276" width="6" height="15" fill="rgb(210,39,49)"/><text x="354.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.18%)</title><rect x="360" y="340" width="2" height="15" fill="rgb(239,140,1)"/><text x="363.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.18%)</title><rect x="362" y="340" width="2" height="15" fill="rgb(211,149,29)"/><text x="365.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.55%)</title><rect x="360" y="244" width="6" height="15" fill="rgb(214,37,18)"/><text x="363.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.55%)</title><rect x="360" y="260" width="6" height="15" fill="rgb(215,48,54)"/><text x="363.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.55%)</title><rect x="360" y="276" width="6" height="15" fill="rgb(207,126,15)"/><text x="363.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.55%)</title><rect x="360" y="292" width="6" height="15" fill="rgb(233,85,13)"/><text x="363.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.55%)</title><rect x="360" y="308" width="6" height="15" fill="rgb(212,129,18)"/><text x="363.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.55%)</title><rect x="360" y="324" width="6" height="15" fill="rgb(213,32,10)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="364" y="340" width="2" height="15" fill="rgb(217,182,47)"/><text x="367.00" y="350.50"></text></g><g><title>0x7f5346574dbb (libc-2.29.so) (1 samples, 0.18%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(236,105,24)"/><text x="367.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 0.92%)</title><rect x="357" y="228" width="11" height="15" fill="rgb(208,180,26)"/><text x="360.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.18%)</title><rect x="366" y="244" width="2" height="15" fill="rgb(230,78,27)"/><text x="369.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.18%)</title><rect x="366" y="260" width="2" height="15" fill="rgb(231,86,53)"/><text x="369.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="368" y="260" width="2" height="15" fill="rgb(250,109,33)"/><text x="371.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.18%)</title><rect x="368" y="276" width="2" height="15" fill="rgb(236,95,0)"/><text x="371.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.18%)</title><rect x="368" y="292" width="2" height="15" fill="rgb(254,115,6)"/><text x="371.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.18%)</title><rect x="368" y="308" width="2" height="15" fill="rgb(239,41,10)"/><text x="371.00" y="318.50"></text></g><g><title>0x7f533185e204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="370" y="324" width="3" height="15" fill="rgb(241,199,39)"/><text x="373.00" y="334.50"></text></g><g><title>0x7f533181c890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="377" y="340" width="2" height="15" fill="rgb(239,32,12)"/><text x="380.00" y="350.50"></text></g><g><title>0x7f53466a01a0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="386" y="356" width="2" height="15" fill="rgb(236,145,46)"/><text x="389.00" y="366.50"></text></g><g><title>0x7f53466d3e37 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="388" y="356" width="2" height="15" fill="rgb(216,110,43)"/><text x="391.00" y="366.50"></text></g><g><title>0x7f53466d3e4e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="390" y="356" width="2" height="15" fill="rgb(224,24,14)"/><text x="393.00" y="366.50"></text></g><g><title>0x7f53466d3e62 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="392" y="356" width="2" height="15" fill="rgb(217,19,13)"/><text x="395.00" y="366.50"></text></g><g><title>0x7f53466d3e71 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="394" y="356" width="2" height="15" fill="rgb(240,170,28)"/><text x="397.00" y="366.50"></text></g><g><title>0x7f53466d3e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="396" y="356" width="3" height="15" fill="rgb(214,159,51)"/><text x="399.00" y="366.50"></text></g><g><title>0x7f533185e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 2.38%)</title><rect x="373" y="324" width="28" height="15" fill="rgb(245,214,47)"/><text x="376.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (10 samples, 1.83%)</title><rect x="379" y="340" width="22" height="15" fill="rgb(254,39,25)"/><text x="382.00" y="350.50">e..</text></g><g><title>0x7f53466d3ea6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="399" y="356" width="2" height="15" fill="rgb(248,58,10)"/><text x="402.00" y="366.50"></text></g><g><title>0x7f533185e224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.55%)</title><rect x="401" y="324" width="6" height="15" fill="rgb(213,66,42)"/><text x="404.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (22 samples, 4.03%)</title><rect x="368" y="228" width="48" height="15" fill="rgb(254,173,52)"/><text x="371.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 4.03%)</title><rect x="368" y="244" width="48" height="15" fill="rgb(206,72,47)"/><text x="371.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 3.85%)</title><rect x="370" y="260" width="46" height="15" fill="rgb(237,56,2)"/><text x="373.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (21 samples, 3.85%)</title><rect x="370" y="276" width="46" height="15" fill="rgb(219,25,9)"/><text x="373.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (21 samples, 3.85%)</title><rect x="370" y="292" width="46" height="15" fill="rgb(231,30,51)"/><text x="373.00" y="302.50">triv..</text></g><g><title>0x7f533183c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.85%)</title><rect x="370" y="308" width="46" height="15" fill="rgb(253,114,25)"/><text x="373.00" y="318.50">0x7f..</text></g><g><title>0x7f533185e228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.73%)</title><rect x="407" y="324" width="9" height="15" fill="rgb(233,8,15)"/><text x="410.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:5) (1 samples, 0.18%)</title><rect x="416" y="244" width="2" height="15" fill="rgb(230,123,47)"/><text x="419.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.18%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(241,134,48)"/><text x="421.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.18%)</title><rect x="420" y="308" width="2" height="15" fill="rgb(208,64,3)"/><text x="423.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.18%)</title><rect x="420" y="324" width="2" height="15" fill="rgb(240,137,40)"/><text x="423.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.18%)</title><rect x="422" y="324" width="2" height="15" fill="rgb(231,86,40)"/><text x="425.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="422" y="340" width="2" height="15" fill="rgb(209,186,44)"/><text x="425.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="422" y="356" width="2" height="15" fill="rgb(242,142,6)"/><text x="425.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="422" y="372" width="2" height="15" fill="rgb(243,3,41)"/><text x="425.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="422" y="388" width="2" height="15" fill="rgb(219,88,44)"/><text x="425.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="422" y="404" width="2" height="15" fill="rgb(224,132,38)"/><text x="425.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="422" y="420" width="2" height="15" fill="rgb(222,157,42)"/><text x="425.00" y="430.50"></text></g><g><title>0x7f5346555dc9 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="422" y="436" width="2" height="15" fill="rgb(239,54,31)"/><text x="425.00" y="446.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.18%)</title><rect x="424" y="324" width="3" height="15" fill="rgb(253,126,36)"/><text x="427.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="424" y="340" width="3" height="15" fill="rgb(241,66,43)"/><text x="427.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.18%)</title><rect x="427" y="340" width="2" height="15" fill="rgb(230,154,31)"/><text x="430.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (43 samples, 7.88%)</title><rect x="338" y="196" width="93" height="15" fill="rgb(247,171,13)"/><text x="341.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 7.69%)</title><rect x="340" y="212" width="91" height="15" fill="rgb(227,87,5)"/><text x="343.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 1.28%)</title><rect x="416" y="228" width="15" height="15" fill="rgb(212,12,12)"/><text x="419.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.10%)</title><rect x="418" y="244" width="13" height="15" fill="rgb(247,34,20)"/><text x="421.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.10%)</title><rect x="418" y="260" width="13" height="15" fill="rgb(236,62,15)"/><text x="421.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.10%)</title><rect x="418" y="276" width="13" height="15" fill="rgb(240,102,21)"/><text x="421.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.92%)</title><rect x="420" y="292" width="11" height="15" fill="rgb(217,159,51)"/><text x="423.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (4 samples, 0.73%)</title><rect x="422" y="308" width="9" height="15" fill="rgb(231,95,44)"/><text x="425.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.37%)</title><rect x="427" y="324" width="4" height="15" fill="rgb(220,153,1)"/><text x="430.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.18%)</title><rect x="429" y="340" width="2" height="15" fill="rgb(210,184,0)"/><text x="432.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (71 samples, 13.00%)</title><rect x="280" y="180" width="153" height="15" fill="rgb(243,26,53)"/><text x="283.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.18%)</title><rect x="431" y="196" width="2" height="15" fill="rgb(239,3,20)"/><text x="434.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.18%)</title><rect x="431" y="212" width="2" height="15" fill="rgb(218,148,0)"/><text x="434.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.18%)</title><rect x="431" y="228" width="2" height="15" fill="rgb(243,163,16)"/><text x="434.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.18%)</title><rect x="433" y="180" width="2" height="15" fill="rgb(231,179,28)"/><text x="436.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (77 samples, 14.10%)</title><rect x="273" y="164" width="167" height="15" fill="rgb(209,204,39)"/><text x="276.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.37%)</title><rect x="435" y="180" width="5" height="15" fill="rgb(229,185,20)"/><text x="438.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (78 samples, 14.29%)</title><rect x="273" y="132" width="169" height="15" fill="rgb(239,216,17)"/><text x="276.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (78 samples, 14.29%)</title><rect x="273" y="148" width="169" height="15" fill="rgb(227,40,22)"/><text x="276.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.18%)</title><rect x="440" y="164" width="2" height="15" fill="rgb(242,133,26)"/><text x="443.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:45) (83 samples, 15.20%)</title><rect x="265" y="52" width="179" height="15" fill="rgb(224,64,1)"/><text x="268.00" y="62.50">&lt;module&gt; (bench_Logisti..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:44) (83 samples, 15.20%)</title><rect x="265" y="68" width="179" height="15" fill="rgb(252,16,49)"/><text x="268.00" y="78.50">profile_pyrt (bench_Log..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:29) (82 samples, 15.02%)</title><rect x="267" y="84" width="177" height="15" fill="rgb(231,214,6)"/><text x="270.00" y="94.50">setup_profile (bench_Lo..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:23) (80 samples, 14.65%)</title><rect x="271" y="100" width="173" height="15" fill="rgb(211,56,44)"/><text x="274.00" y="110.50">profile (bench_Logisti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (79 samples, 14.47%)</title><rect x="273" y="116" width="171" height="15" fill="rgb(237,188,50)"/><text x="276.00" y="126.50">time_predict (mlprodic..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="442" y="132" width="2" height="15" fill="rgb(246,50,33)"/><text x="445.00" y="142.50"></text></g><g><title>0x7f53065c4ff9 (?) (1 samples, 0.18%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(219,99,34)"/><text x="447.00" y="222.50"></text></g><g><title>0x7f53065bfef6 (?) (1 samples, 0.18%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(238,165,4)"/><text x="447.00" y="238.50"></text></g><g><title>0x7f53065b4c99 (?) (1 samples, 0.18%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(237,141,2)"/><text x="447.00" y="254.50"></text></g><g><title>0x7f53065d2c7b (?) (1 samples, 0.18%)</title><rect x="444" y="260" width="2" height="15" fill="rgb(215,170,18)"/><text x="447.00" y="270.50"></text></g><g><title>0x7f53065aa54e (?) (1 samples, 0.18%)</title><rect x="444" y="276" width="2" height="15" fill="rgb(214,208,30)"/><text x="447.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="260" width="4" height="15" fill="rgb(244,143,33)"/><text x="449.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="276" width="4" height="15" fill="rgb(215,189,15)"/><text x="449.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(232,204,54)"/><text x="449.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="308" width="4" height="15" fill="rgb(220,163,34)"/><text x="449.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="324" width="4" height="15" fill="rgb(254,133,21)"/><text x="449.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="446" y="340" width="4" height="15" fill="rgb(232,170,17)"/><text x="449.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="448" y="356" width="2" height="15" fill="rgb(223,81,29)"/><text x="451.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="448" y="372" width="2" height="15" fill="rgb(214,192,22)"/><text x="451.00" y="382.50"></text></g><g><title>0x7f5346555b1c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="448" y="388" width="2" height="15" fill="rgb(253,34,30)"/><text x="451.00" y="398.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.73%)</title><rect x="444" y="164" width="9" height="15" fill="rgb(248,214,44)"/><text x="447.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.73%)</title><rect x="444" y="180" width="9" height="15" fill="rgb(247,12,22)"/><text x="447.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.73%)</title><rect x="444" y="196" width="9" height="15" fill="rgb(208,49,25)"/><text x="447.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="446" y="212" width="7" height="15" fill="rgb(213,13,39)"/><text x="449.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="446" y="228" width="7" height="15" fill="rgb(246,68,13)"/><text x="449.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="446" y="244" width="7" height="15" fill="rgb(227,189,46)"/><text x="449.00" y="254.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="450" y="260" width="3" height="15" fill="rgb(227,171,41)"/><text x="453.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:18) (5 samples, 0.92%)</title><rect x="444" y="100" width="11" height="15" fill="rgb(230,165,32)"/><text x="447.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.92%)</title><rect x="444" y="116" width="11" height="15" fill="rgb(246,194,52)"/><text x="447.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (5 samples, 0.92%)</title><rect x="444" y="132" width="11" height="15" fill="rgb(247,2,32)"/><text x="447.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (5 samples, 0.92%)</title><rect x="444" y="148" width="11" height="15" fill="rgb(212,225,45)"/><text x="447.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.18%)</title><rect x="453" y="164" width="2" height="15" fill="rgb(217,30,15)"/><text x="456.00" y="174.50"></text></g><g><title>0x7f5346553b9b (libc-2.29.so) (1 samples, 0.18%)</title><rect x="502" y="132" width="2" height="15" fill="rgb(223,158,11)"/><text x="505.00" y="142.50"></text></g><g><title>0x7f5346553bc0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="504" y="132" width="3" height="15" fill="rgb(241,141,37)"/><text x="507.00" y="142.50"></text></g><g><title>0x7f5346553bc6 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="507" y="132" width="4" height="15" fill="rgb(236,53,10)"/><text x="510.00" y="142.50"></text></g><g><title>0x7f5346553bdb (libc-2.29.so) (1 samples, 0.18%)</title><rect x="511" y="132" width="2" height="15" fill="rgb(241,137,40)"/><text x="514.00" y="142.50"></text></g><g><title>0x7f5346553bdf (libc-2.29.so) (3 samples, 0.55%)</title><rect x="513" y="132" width="7" height="15" fill="rgb(221,218,9)"/><text x="516.00" y="142.50"></text></g><g><title>0x7f5346553c04 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="520" y="132" width="2" height="15" fill="rgb(229,224,20)"/><text x="523.00" y="142.50"></text></g><g><title>0x7f5346553c20 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="522" y="132" width="4" height="15" fill="rgb(210,128,50)"/><text x="525.00" y="142.50"></text></g><g><title>0x7f5346553c28 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="526" y="132" width="2" height="15" fill="rgb(217,100,22)"/><text x="529.00" y="142.50"></text></g><g><title>0x7f5346553c2d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="528" y="132" width="2" height="15" fill="rgb(246,153,41)"/><text x="531.00" y="142.50"></text></g><g><title>0x7f5346553c36 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="530" y="132" width="3" height="15" fill="rgb(211,125,20)"/><text x="533.00" y="142.50"></text></g><g><title>0x7f5346553c49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="533" y="132" width="2" height="15" fill="rgb(221,65,45)"/><text x="536.00" y="142.50"></text></g><g><title>0x7f5346553c4d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="535" y="132" width="2" height="15" fill="rgb(230,185,30)"/><text x="538.00" y="142.50"></text></g><g><title>0x7f5346553c51 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="537" y="132" width="2" height="15" fill="rgb(246,74,42)"/><text x="540.00" y="142.50"></text></g><g><title>0x7f5346553c73 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="539" y="132" width="2" height="15" fill="rgb(234,44,0)"/><text x="542.00" y="142.50"></text></g><g><title>0x7f5346553aaf (libc-2.29.so) (1 samples, 0.18%)</title><rect x="539" y="148" width="2" height="15" fill="rgb(217,44,6)"/><text x="542.00" y="158.50"></text></g><g><title>0x7f5346553aa0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="545" y="148" width="3" height="15" fill="rgb(253,96,15)"/><text x="548.00" y="158.50"></text></g><g><title>0x7f5346554eb0 (libc-2.29.so) (22 samples, 4.03%)</title><rect x="502" y="116" width="48" height="15" fill="rgb(242,66,17)"/><text x="505.00" y="126.50">0x7f..</text></g><g><title>0x7f5346553ca7 (libc-2.29.so) (4 samples, 0.73%)</title><rect x="541" y="132" width="9" height="15" fill="rgb(210,144,23)"/><text x="544.00" y="142.50"></text></g><g><title>0x7f5346553acd (libc-2.29.so) (1 samples, 0.18%)</title><rect x="548" y="148" width="2" height="15" fill="rgb(224,150,44)"/><text x="551.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="550" y="116" width="2" height="15" fill="rgb(250,63,6)"/><text x="553.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.18%)</title><rect x="550" y="132" width="2" height="15" fill="rgb(206,92,39)"/><text x="553.00" y="142.50"></text></g><g><title>0x7f53457767c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="550" y="148" width="2" height="15" fill="rgb(250,164,3)"/><text x="553.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.18%)</title><rect x="554" y="148" width="2" height="15" fill="rgb(230,66,15)"/><text x="557.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.18%)</title><rect x="558" y="196" width="3" height="15" fill="rgb(208,199,11)"/><text x="561.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.18%)</title><rect x="561" y="196" width="2" height="15" fill="rgb(232,86,41)"/><text x="564.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.18%)</title><rect x="561" y="212" width="2" height="15" fill="rgb(243,28,33)"/><text x="564.00" y="222.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="565" y="292" width="2" height="15" fill="rgb(225,85,46)"/><text x="568.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="565" y="308" width="2" height="15" fill="rgb(231,140,26)"/><text x="568.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="567" y="340" width="2" height="15" fill="rgb(253,38,29)"/><text x="570.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(251,146,31)"/><text x="570.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="569" y="340" width="2" height="15" fill="rgb(245,187,14)"/><text x="572.00" y="350.50"></text></g><g><title>0x7f5346575124 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="569" y="356" width="2" height="15" fill="rgb(218,6,18)"/><text x="572.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="571" y="340" width="3" height="15" fill="rgb(252,175,11)"/><text x="574.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="571" y="356" width="3" height="15" fill="rgb(228,24,45)"/><text x="574.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="571" y="372" width="3" height="15" fill="rgb(239,111,9)"/><text x="574.00" y="382.50"></text></g><g><title>0x7f5346554a4d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="571" y="388" width="3" height="15" fill="rgb(219,120,11)"/><text x="574.00" y="398.50"></text></g><g><title>0x7f5346574db3 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(212,91,7)"/><text x="646.00" y="382.50"></text></g><g><title>0x7f5346574dbe (libc-2.29.so) (1 samples, 0.18%)</title><rect x="647" y="372" width="2" height="15" fill="rgb(249,211,27)"/><text x="650.00" y="382.50"></text></g><g><title>0x7f53466d3e00 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="649" y="372" width="2" height="15" fill="rgb(242,66,25)"/><text x="652.00" y="382.50"></text></g><g><title>0x7f53466d3e0a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="651" y="372" width="3" height="15" fill="rgb(236,51,24)"/><text x="654.00" y="382.50"></text></g><g><title>0x7f53466d3e14 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="654" y="372" width="4" height="15" fill="rgb(226,153,17)"/><text x="657.00" y="382.50"></text></g><g><title>0x7f53466d3e2f (libm-2.29.so) (2 samples, 0.37%)</title><rect x="658" y="372" width="4" height="15" fill="rgb(226,221,48)"/><text x="661.00" y="382.50"></text></g><g><title>0x7f53466d3e6d (libm-2.29.so) (2 samples, 0.37%)</title><rect x="662" y="372" width="4" height="15" fill="rgb(208,59,1)"/><text x="665.00" y="382.50"></text></g><g><title>0x7f53466d3e71 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="666" y="372" width="3" height="15" fill="rgb(211,64,30)"/><text x="669.00" y="382.50"></text></g><g><title>0x7f53466d3e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="669" y="372" width="2" height="15" fill="rgb(232,103,9)"/><text x="672.00" y="382.50"></text></g><g><title>0x7f53466d3e9e (libm-2.29.so) (2 samples, 0.37%)</title><rect x="671" y="372" width="4" height="15" fill="rgb(229,0,18)"/><text x="674.00" y="382.50"></text></g><g><title>0x7f53466d3ea2 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="675" y="372" width="2" height="15" fill="rgb(253,214,1)"/><text x="678.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 9.16%)</title><rect x="574" y="340" width="108" height="15" fill="rgb(240,126,44)"/><text x="577.00" y="350.50">onnxruntime::..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 5.31%)</title><rect x="619" y="356" width="63" height="15" fill="rgb(207,46,28)"/><text x="622.00" y="366.50">onnxru..</text></g><g><title>0x7f53466d3ea6 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="677" y="372" width="5" height="15" fill="rgb(248,124,23)"/><text x="680.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.10%)</title><rect x="682" y="340" width="13" height="15" fill="rgb(210,108,26)"/><text x="685.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.10%)</title><rect x="682" y="356" width="13" height="15" fill="rgb(232,209,39)"/><text x="685.00" y="366.50"></text></g><g><title>0x7f530658b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="721" y="356" width="2" height="15" fill="rgb(232,82,14)"/><text x="724.00" y="366.50"></text></g><g><title>0x7f5346555b24 (libc-2.29.so) (3 samples, 0.55%)</title><rect x="800" y="388" width="7" height="15" fill="rgb(209,189,33)"/><text x="803.00" y="398.50"></text></g><g><title>0x7f5346555b49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="807" y="388" width="2" height="15" fill="rgb(205,179,14)"/><text x="810.00" y="398.50"></text></g><g><title>0x7f5346555d27 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(242,106,16)"/><text x="812.00" y="398.50"></text></g><g><title>0x7f5346555d36 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="811" y="388" width="2" height="15" fill="rgb(215,142,45)"/><text x="814.00" y="398.50"></text></g><g><title>0x7f5346555d48 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="813" y="388" width="5" height="15" fill="rgb(225,7,48)"/><text x="816.00" y="398.50"></text></g><g><title>0x7f5346555d67 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="818" y="388" width="2" height="15" fill="rgb(240,41,54)"/><text x="821.00" y="398.50"></text></g><g><title>0x7f5346555d9f (libc-2.29.so) (2 samples, 0.37%)</title><rect x="820" y="388" width="4" height="15" fill="rgb(216,23,51)"/><text x="823.00" y="398.50"></text></g><g><title>0x7f5346555db4 (libc-2.29.so) (3 samples, 0.55%)</title><rect x="824" y="388" width="7" height="15" fill="rgb(211,27,29)"/><text x="827.00" y="398.50"></text></g><g><title>0x7f5346555e07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="831" y="388" width="2" height="15" fill="rgb(250,124,50)"/><text x="834.00" y="398.50"></text></g><g><title>0x7f5346556033 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="833" y="388" width="2" height="15" fill="rgb(214,36,26)"/><text x="836.00" y="398.50"></text></g><g><title>0x7f534655606d (libc-2.29.so) (2 samples, 0.37%)</title><rect x="835" y="388" width="4" height="15" fill="rgb(212,98,13)"/><text x="838.00" y="398.50"></text></g><g><title>0x7f5346556097 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="839" y="388" width="5" height="15" fill="rgb(238,137,25)"/><text x="842.00" y="398.50"></text></g><g><title>0x7f53465560a3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="844" y="388" width="2" height="15" fill="rgb(209,138,21)"/><text x="847.00" y="398.50"></text></g><g><title>0x7f53465563ae (libc-2.29.so) (1 samples, 0.18%)</title><rect x="846" y="388" width="2" height="15" fill="rgb(246,158,53)"/><text x="849.00" y="398.50"></text></g><g><title>0x7f53465563c7 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="848" y="388" width="2" height="15" fill="rgb(205,86,35)"/><text x="851.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (60 samples, 10.99%)</title><rect x="723" y="356" width="129" height="15" fill="rgb(214,40,20)"/><text x="726.00" y="366.50">operator new (li..</text></g><g><title>malloc (libc-2.29.so) (59 samples, 10.81%)</title><rect x="725" y="372" width="127" height="15" fill="rgb(234,223,33)"/><text x="728.00" y="382.50">malloc (libc-2...</text></g><g><title>0x7f53465563d1 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="850" y="388" width="2" height="15" fill="rgb(235,60,37)"/><text x="853.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="852" y="356" width="7" height="15" fill="rgb(214,103,53)"/><text x="855.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.37%)</title><rect x="859" y="356" width="4" height="15" fill="rgb(207,192,14)"/><text x="862.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 26.01%)</title><rect x="565" y="260" width="307" height="15" fill="rgb(226,226,29)"/><text x="568.00" y="270.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 26.01%)</title><rect x="565" y="276" width="307" height="15" fill="rgb(209,118,54)"/><text x="568.00" y="286.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 25.82%)</title><rect x="567" y="292" width="305" height="15" fill="rgb(241,59,15)"/><text x="570.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 25.82%)</title><rect x="567" y="308" width="305" height="15" fill="rgb(249,206,35)"/><text x="570.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 25.82%)</title><rect x="567" y="324" width="305" height="15" fill="rgb(220,120,11)"/><text x="570.00" y="334.50">onnxruntime::SequentialExecutor::Execute ..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 15.02%)</title><rect x="695" y="340" width="177" height="15" fill="rgb(208,22,53)"/><text x="698.00" y="350.50">onnxruntime::ml::ZipMap..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.73%)</title><rect x="863" y="356" width="9" height="15" fill="rgb(209,182,2)"/><text x="866.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="872" y="260" width="2" height="15" fill="rgb(214,155,3)"/><text x="875.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="872" y="276" width="2" height="15" fill="rgb(215,80,53)"/><text x="875.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="872" y="292" width="2" height="15" fill="rgb(234,161,24)"/><text x="875.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="872" y="308" width="2" height="15" fill="rgb(235,101,16)"/><text x="875.00" y="318.50"></text></g><g><title>0x7f530658c570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1043" y="276" width="2" height="15" fill="rgb(254,17,26)"/><text x="1046.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 5.68%)</title><rect x="1045" y="276" width="67" height="15" fill="rgb(216,190,4)"/><text x="1048.00" y="286.50">pybind1..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 20.33%)</title><rect x="874" y="260" width="240" height="15" fill="rgb(235,8,18)"/><text x="877.00" y="270.50">pybind11::detail::map_caster&lt;st..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1112" y="276" width="2" height="15" fill="rgb(236,136,37)"/><text x="1115.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="276" width="2" height="15" fill="rgb(252,19,29)"/><text x="1117.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="292" width="2" height="15" fill="rgb(212,28,0)"/><text x="1117.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="308" width="2" height="15" fill="rgb(230,126,40)"/><text x="1117.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="324" width="2" height="15" fill="rgb(244,23,1)"/><text x="1117.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="340" width="2" height="15" fill="rgb(236,13,34)"/><text x="1117.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="356" width="2" height="15" fill="rgb(246,61,44)"/><text x="1117.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="372" width="2" height="15" fill="rgb(229,73,17)"/><text x="1117.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1114" y="388" width="2" height="15" fill="rgb(243,182,44)"/><text x="1117.00" y="398.50"></text></g><g><title>0x7f5346554906 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1118" y="292" width="2" height="15" fill="rgb(214,183,5)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7f534655491e (libc-2.29.so) (2 samples, 0.37%)</title><rect x="1120" y="292" width="5" height="15" fill="rgb(227,84,18)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7f534655492c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1125" y="292" width="2" height="15" fill="rgb(232,213,28)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f53465549b3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1127" y="292" width="2" height="15" fill="rgb(205,121,49)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7f53465549d3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1129" y="292" width="2" height="15" fill="rgb(215,81,32)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7f53465549ed (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1131" y="292" width="2" height="15" fill="rgb(247,1,8)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7f53465549ff (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(212,184,32)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7f5346554d07 (libc-2.29.so) (4 samples, 0.73%)</title><rect x="1135" y="292" width="9" height="15" fill="rgb(209,62,10)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f5346554d13 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(233,190,4)"/><text x="1147.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(220,196,14)"/><text x="1149.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.37%)</title><rect x="1148" y="292" width="5" height="15" fill="rgb(216,176,43)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f534655491e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1153" y="308" width="2" height="15" fill="rgb(223,152,39)"/><text x="1156.00" y="318.50"></text></g><g><title>0x7f5346554922 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(245,91,2)"/><text x="1158.00" y="318.50"></text></g><g><title>0x7f5346554a4b (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1157" y="308" width="2" height="15" fill="rgb(216,50,11)"/><text x="1160.00" y="318.50"></text></g><g><title>0x7f5346554cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(226,203,0)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7f5346554d02 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1161" y="308" width="3" height="15" fill="rgb(251,192,31)"/><text x="1164.00" y="318.50"></text></g><g><title>0x7f5346554d07 (libc-2.29.so) (3 samples, 0.55%)</title><rect x="1164" y="308" width="6" height="15" fill="rgb(211,106,3)"/><text x="1167.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.55%)</title><rect x="1170" y="308" width="7" height="15" fill="rgb(225,188,10)"/><text x="1173.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (291 samples, 53.30%)</title><rect x="556" y="164" width="629" height="15" fill="rgb(206,41,24)"/><text x="559.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (291 samples, 53.30%)</title><rect x="556" y="180" width="629" height="15" fill="rgb(230,69,34)"/><text x="559.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (288 samples, 52.75%)</title><rect x="563" y="196" width="622" height="15" fill="rgb(205,52,31)"/><text x="566.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 52.75%)</title><rect x="563" y="212" width="622" height="15" fill="rgb(242,39,48)"/><text x="566.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 52.75%)</title><rect x="563" y="228" width="622" height="15" fill="rgb(234,95,16)"/><text x="566.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 52.75%)</title><rect x="563" y="244" width="622" height="15" fill="rgb(248,140,14)"/><text x="566.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Infere..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 6.04%)</title><rect x="1114" y="260" width="71" height="15" fill="rgb(239,153,48)"/><text x="1117.00" y="270.50">std::vec..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 5.86%)</title><rect x="1116" y="276" width="69" height="15" fill="rgb(224,63,46)"/><text x="1119.00" y="286.50">onnxrun..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.75%)</title><rect x="1153" y="292" width="32" height="15" fill="rgb(228,96,2)"/><text x="1156.00" y="302.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.73%)</title><rect x="1177" y="308" width="8" height="15" fill="rgb(247,15,48)"/><text x="1180.00" y="318.50"></text></g><g><title>all (546 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,208,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:52) (345 samples, 63.19%)</title><rect x="444" y="52" width="746" height="15" fill="rgb(218,211,26)"/><text x="447.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:51) (345 samples, 63.19%)</title><rect x="444" y="68" width="746" height="15" fill="rgb(238,146,36)"/><text x="447.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:29) (345 samples, 63.19%)</title><rect x="444" y="84" width="746" height="15" fill="rgb(217,109,1)"/><text x="447.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:23) (340 samples, 62.27%)</title><rect x="455" y="100" width="735" height="15" fill="rgb(249,76,44)"/><text x="458.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (295 samples, 54.03%)</title><rect x="552" y="116" width="638" height="15" fill="rgb(224,193,48)"/><text x="555.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (295 samples, 54.03%)</title><rect x="552" y="132" width="638" height="15" fill="rgb(207,16,14)"/><text x="555.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (293 samples, 53.66%)</title><rect x="556" y="148" width="634" height="15" fill="rgb(214,50,1)"/><text x="559.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.37%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(214,192,25)"/><text x="1188.00" y="174.50"></text></g></g></svg>