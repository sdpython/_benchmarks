<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.30%)</title><rect x="17" y="164" width="3" height="15" fill="rgb(252,59,12)"/><text x="20.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="27" y="180" width="4" height="15" fill="rgb(239,205,34)"/><text x="30.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="48" y="196" width="4" height="15" fill="rgb(214,6,29)"/><text x="51.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (12 samples, 3.58%)</title><rect x="17" y="148" width="42" height="15" fill="rgb(253,191,19)"/><text x="20.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.28%)</title><rect x="20" y="164" width="39" height="15" fill="rgb(247,73,12)"/><text x="23.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.39%)</title><rect x="31" y="180" width="28" height="15" fill="rgb(231,72,27)"/><text x="34.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="52" y="196" width="7" height="15" fill="rgb(213,130,31)"/><text x="55.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.30%)</title><rect x="66" y="196" width="3" height="15" fill="rgb(220,165,10)"/><text x="69.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.90%)</title><rect x="69" y="212" width="11" height="15" fill="rgb(241,127,46)"/><text x="72.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.30%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(210,165,6)"/><text x="79.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 1.79%)</title><rect x="66" y="180" width="21" height="15" fill="rgb(237,72,15)"/><text x="69.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.49%)</title><rect x="69" y="196" width="18" height="15" fill="rgb(223,86,25)"/><text x="72.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.60%)</title><rect x="80" y="212" width="7" height="15" fill="rgb(250,58,36)"/><text x="83.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="80" y="228" width="7" height="15" fill="rgb(209,61,14)"/><text x="83.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.30%)</title><rect x="87" y="196" width="4" height="15" fill="rgb(220,122,49)"/><text x="90.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:466) (1 samples, 0.30%)</title><rect x="91" y="196" width="3" height="15" fill="rgb(238,75,17)"/><text x="94.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.30%)</title><rect x="94" y="196" width="4" height="15" fill="rgb(222,23,29)"/><text x="97.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.60%)</title><rect x="98" y="196" width="7" height="15" fill="rgb(239,147,0)"/><text x="101.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.30%)</title><rect x="101" y="212" width="4" height="15" fill="rgb(246,135,53)"/><text x="104.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.30%)</title><rect x="105" y="212" width="3" height="15" fill="rgb(239,208,5)"/><text x="108.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.30%)</title><rect x="112" y="228" width="3" height="15" fill="rgb(225,146,54)"/><text x="115.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.19%)</title><rect x="105" y="196" width="14" height="15" fill="rgb(254,53,4)"/><text x="108.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.90%)</title><rect x="108" y="212" width="11" height="15" fill="rgb(227,104,13)"/><text x="111.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.30%)</title><rect x="115" y="228" width="4" height="15" fill="rgb(205,16,43)"/><text x="118.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.30%)</title><rect x="119" y="196" width="3" height="15" fill="rgb(252,11,6)"/><text x="122.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.30%)</title><rect x="122" y="196" width="4" height="15" fill="rgb(250,106,24)"/><text x="125.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.30%)</title><rect x="122" y="212" width="4" height="15" fill="rgb(212,26,24)"/><text x="125.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.30%)</title><rect x="133" y="228" width="3" height="15" fill="rgb(229,16,33)"/><text x="136.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 1.19%)</title><rect x="126" y="196" width="14" height="15" fill="rgb(245,14,45)"/><text x="129.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.90%)</title><rect x="129" y="212" width="11" height="15" fill="rgb(216,34,34)"/><text x="132.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.30%)</title><rect x="136" y="228" width="4" height="15" fill="rgb(219,30,32)"/><text x="139.00" y="238.50"></text></g><g><title>0x7f652cc156d0 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="136" y="244" width="4" height="15" fill="rgb(217,134,49)"/><text x="139.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.30%)</title><rect x="140" y="212" width="3" height="15" fill="rgb(225,20,21)"/><text x="143.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (17 samples, 5.07%)</title><rect x="87" y="180" width="60" height="15" fill="rgb(242,168,45)"/><text x="90.00" y="190.50">decisi..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.60%)</title><rect x="140" y="196" width="7" height="15" fill="rgb(249,103,35)"/><text x="143.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.30%)</title><rect x="143" y="212" width="4" height="15" fill="rgb(241,122,54)"/><text x="146.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.30%)</title><rect x="143" y="228" width="4" height="15" fill="rgb(251,99,39)"/><text x="146.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.60%)</title><rect x="147" y="180" width="7" height="15" fill="rgb(210,11,48)"/><text x="150.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.30%)</title><rect x="150" y="196" width="4" height="15" fill="rgb(253,26,49)"/><text x="153.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.30%)</title><rect x="150" y="212" width="4" height="15" fill="rgb(249,217,12)"/><text x="153.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="150" y="228" width="4" height="15" fill="rgb(241,112,31)"/><text x="153.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.30%)</title><rect x="150" y="244" width="4" height="15" fill="rgb(244,101,11)"/><text x="153.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.30%)</title><rect x="157" y="244" width="4" height="15" fill="rgb(210,158,10)"/><text x="160.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.30%)</title><rect x="157" y="260" width="4" height="15" fill="rgb(209,211,37)"/><text x="160.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="161" y="260" width="3" height="15" fill="rgb(229,12,14)"/><text x="164.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="161" y="276" width="3" height="15" fill="rgb(244,34,51)"/><text x="164.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.30%)</title><rect x="161" y="292" width="3" height="15" fill="rgb(216,193,52)"/><text x="164.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.30%)</title><rect x="161" y="308" width="3" height="15" fill="rgb(231,102,2)"/><text x="164.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="161" y="324" width="3" height="15" fill="rgb(216,42,1)"/><text x="164.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.30%)</title><rect x="161" y="340" width="3" height="15" fill="rgb(233,124,26)"/><text x="164.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.30%)</title><rect x="164" y="292" width="4" height="15" fill="rgb(246,61,10)"/><text x="167.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="168" y="308" width="4" height="15" fill="rgb(236,55,7)"/><text x="171.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.60%)</title><rect x="172" y="308" width="7" height="15" fill="rgb(230,186,37)"/><text x="175.00" y="318.50"></text></g><g><title>0x7f652cc24d6a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="179" y="324" width="3" height="15" fill="rgb(222,6,33)"/><text x="182.00" y="334.50"></text></g><g><title>0x7f652cc24d6f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="182" y="324" width="4" height="15" fill="rgb(248,95,15)"/><text x="185.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 2.09%)</title><rect x="164" y="260" width="25" height="15" fill="rgb(226,223,9)"/><text x="167.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 2.09%)</title><rect x="164" y="276" width="25" height="15" fill="rgb(208,27,29)"/><text x="167.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.79%)</title><rect x="168" y="292" width="21" height="15" fill="rgb(251,209,46)"/><text x="171.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.90%)</title><rect x="179" y="308" width="10" height="15" fill="rgb(239,14,2)"/><text x="182.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.30%)</title><rect x="186" y="324" width="3" height="15" fill="rgb(247,116,5)"/><text x="189.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="189" y="260" width="4" height="15" fill="rgb(227,65,30)"/><text x="192.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="189" y="276" width="4" height="15" fill="rgb(231,188,29)"/><text x="192.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="189" y="292" width="4" height="15" fill="rgb(206,25,1)"/><text x="192.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.30%)</title><rect x="189" y="308" width="4" height="15" fill="rgb(226,206,16)"/><text x="192.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.28%)</title><rect x="157" y="212" width="39" height="15" fill="rgb(210,21,40)"/><text x="160.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 3.28%)</title><rect x="157" y="228" width="39" height="15" fill="rgb(254,8,52)"/><text x="160.00" y="238.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 2.99%)</title><rect x="161" y="244" width="35" height="15" fill="rgb(231,92,24)"/><text x="164.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.30%)</title><rect x="193" y="260" width="3" height="15" fill="rgb(210,132,25)"/><text x="196.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.30%)</title><rect x="193" y="276" width="3" height="15" fill="rgb(232,223,12)"/><text x="196.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="193" y="292" width="3" height="15" fill="rgb(218,173,53)"/><text x="196.00" y="302.50"></text></g><g><title>array_add (number.c:330) (12 samples, 3.58%)</title><rect x="157" y="196" width="43" height="15" fill="rgb(218,93,24)"/><text x="160.00" y="206.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.30%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(217,14,30)"/><text x="199.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="196" y="228" width="4" height="15" fill="rgb(242,76,11)"/><text x="199.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.60%)</title><rect x="200" y="228" width="7" height="15" fill="rgb(214,214,22)"/><text x="203.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.90%)</title><rect x="200" y="196" width="10" height="15" fill="rgb(248,40,42)"/><text x="203.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.90%)</title><rect x="200" y="212" width="10" height="15" fill="rgb(240,195,22)"/><text x="203.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.30%)</title><rect x="207" y="228" width="3" height="15" fill="rgb(246,21,29)"/><text x="210.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="210" y="212" width="11" height="15" fill="rgb(223,170,43)"/><text x="213.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.49%)</title><rect x="221" y="212" width="17" height="15" fill="rgb(220,41,25)"/><text x="224.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="238" y="244" width="4" height="15" fill="rgb(227,225,48)"/><text x="241.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.30%)</title><rect x="238" y="260" width="4" height="15" fill="rgb(216,179,14)"/><text x="241.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.60%)</title><rect x="238" y="212" width="8" height="15" fill="rgb(225,182,32)"/><text x="241.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.60%)</title><rect x="238" y="228" width="8" height="15" fill="rgb(212,100,9)"/><text x="241.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="242" y="244" width="4" height="15" fill="rgb(222,142,26)"/><text x="245.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.30%)</title><rect x="242" y="260" width="4" height="15" fill="rgb(213,19,26)"/><text x="245.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.30%)</title><rect x="246" y="260" width="3" height="15" fill="rgb(223,119,54)"/><text x="249.00" y="270.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:828) (1 samples, 0.30%)</title><rect x="246" y="276" width="3" height="15" fill="rgb(217,168,4)"/><text x="249.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.60%)</title><rect x="246" y="244" width="7" height="15" fill="rgb(222,139,49)"/><text x="249.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="249" y="260" width="4" height="15" fill="rgb(248,17,30)"/><text x="252.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.30%)</title><rect x="249" y="276" width="4" height="15" fill="rgb(207,206,53)"/><text x="252.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.30%)</title><rect x="249" y="292" width="4" height="15" fill="rgb(209,178,1)"/><text x="252.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2879) (1 samples, 0.30%)</title><rect x="253" y="244" width="3" height="15" fill="rgb(229,169,34)"/><text x="256.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.30%)</title><rect x="253" y="260" width="3" height="15" fill="rgb(207,15,16)"/><text x="256.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (1 samples, 0.30%)</title><rect x="256" y="244" width="4" height="15" fill="rgb(206,72,20)"/><text x="259.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="256" y="260" width="4" height="15" fill="rgb(221,186,27)"/><text x="259.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.30%)</title><rect x="260" y="244" width="3" height="15" fill="rgb(229,58,28)"/><text x="263.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:156) (1 samples, 0.30%)</title><rect x="260" y="260" width="3" height="15" fill="rgb(210,168,0)"/><text x="263.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.30%)</title><rect x="260" y="276" width="3" height="15" fill="rgb(240,76,18)"/><text x="263.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 4.78%)</title><rect x="210" y="196" width="57" height="15" fill="rgb(233,37,11)"/><text x="213.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.79%)</title><rect x="246" y="212" width="21" height="15" fill="rgb(215,154,49)"/><text x="249.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (6 samples, 1.79%)</title><rect x="246" y="228" width="21" height="15" fill="rgb(229,39,18)"/><text x="249.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.30%)</title><rect x="263" y="244" width="4" height="15" fill="rgb(239,102,0)"/><text x="266.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.30%)</title><rect x="263" y="260" width="4" height="15" fill="rgb(230,11,16)"/><text x="266.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="263" y="276" width="4" height="15" fill="rgb(235,72,50)"/><text x="266.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="263" y="292" width="4" height="15" fill="rgb(251,115,42)"/><text x="266.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="263" y="308" width="4" height="15" fill="rgb(251,167,14)"/><text x="266.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (59 samples, 17.61%)</title><rect x="66" y="164" width="208" height="15" fill="rgb(212,178,32)"/><text x="69.00" y="174.50">_predict_proba_lr (sklearn/..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (34 samples, 10.15%)</title><rect x="154" y="180" width="120" height="15" fill="rgb(252,92,26)"/><text x="157.00" y="190.50">decision_funct..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.60%)</title><rect x="267" y="196" width="7" height="15" fill="rgb(240,58,44)"/><text x="270.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.30%)</title><rect x="270" y="212" width="4" height="15" fill="rgb(249,23,1)"/><text x="273.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.30%)</title><rect x="274" y="196" width="3" height="15" fill="rgb(247,133,6)"/><text x="277.00" y="206.50"></text></g><g><title>0x7f6517eed9dd (?) (1 samples, 0.30%)</title><rect x="277" y="244" width="4" height="15" fill="rgb(230,118,19)"/><text x="280.00" y="254.50"></text></g><g><title>0x7f6517f0e265 (?) (1 samples, 0.30%)</title><rect x="277" y="260" width="4" height="15" fill="rgb(227,33,1)"/><text x="280.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.30%)</title><rect x="277" y="276" width="4" height="15" fill="rgb(253,50,50)"/><text x="280.00" y="286.50"></text></g><g><title>0x7f652cdd6ba0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="277" y="292" width="4" height="15" fill="rgb(205,73,23)"/><text x="280.00" y="302.50"></text></g><g><title>0x7f6517f0e254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="281" y="260" width="7" height="15" fill="rgb(227,62,15)"/><text x="284.00" y="270.50"></text></g><g><title>0x7f6517ecbfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="291" y="276" width="4" height="15" fill="rgb(214,212,51)"/><text x="294.00" y="286.50"></text></g><g><title>0x7f652cd501b0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="312" y="292" width="4" height="15" fill="rgb(227,53,38)"/><text x="315.00" y="302.50"></text></g><g><title>0x7f652cdd6ba0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="316" y="292" width="3" height="15" fill="rgb(240,85,51)"/><text x="319.00" y="302.50"></text></g><g><title>0x7f652cdd6bcb (libm-2.29.so) (1 samples, 0.30%)</title><rect x="319" y="292" width="4" height="15" fill="rgb(251,173,49)"/><text x="322.00" y="302.50"></text></g><g><title>0x7f652cdd6bf9 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="323" y="292" width="7" height="15" fill="rgb(214,180,0)"/><text x="326.00" y="302.50"></text></g><g><title>0x7f652cdd6c07 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="330" y="292" width="7" height="15" fill="rgb(208,91,2)"/><text x="333.00" y="302.50"></text></g><g><title>0x7f652cdd6c18 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="337" y="292" width="7" height="15" fill="rgb(239,220,43)"/><text x="340.00" y="302.50"></text></g><g><title>0x7f652cdd6c2e (libm-2.29.so) (2 samples, 0.60%)</title><rect x="344" y="292" width="7" height="15" fill="rgb(225,33,5)"/><text x="347.00" y="302.50"></text></g><g><title>0x7f652cdd6c56 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="351" y="292" width="4" height="15" fill="rgb(245,213,28)"/><text x="354.00" y="302.50"></text></g><g><title>0x7f6517f0e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 5.97%)</title><rect x="288" y="260" width="70" height="15" fill="rgb(239,136,33)"/><text x="291.00" y="270.50">0x7f651..</text></g><g><title>exp (libm-2.29.so) (18 samples, 5.37%)</title><rect x="295" y="276" width="63" height="15" fill="rgb(223,64,39)"/><text x="298.00" y="286.50">exp (l..</text></g><g><title>0x7f652cdd6c6a (libm-2.29.so) (1 samples, 0.30%)</title><rect x="355" y="292" width="3" height="15" fill="rgb(230,196,17)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f6517f0e275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="358" y="260" width="7" height="15" fill="rgb(239,198,25)"/><text x="361.00" y="270.50"></text></g><g><title>0x7f6517eed9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (33 samples, 9.85%)</title><rect x="281" y="244" width="116" height="15" fill="rgb(206,101,39)"/><text x="284.00" y="254.50">0x7f6517eed9dd..</text></g><g><title>0x7f6517f0e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.69%)</title><rect x="365" y="260" width="32" height="15" fill="rgb(210,166,51)"/><text x="368.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (36 samples, 10.75%)</title><rect x="274" y="164" width="126" height="15" fill="rgb(222,132,33)"/><text x="277.00" y="174.50">_predict_proba_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (36 samples, 10.75%)</title><rect x="274" y="180" width="126" height="15" fill="rgb(254,12,48)"/><text x="277.00" y="190.50">ufunc_generic_c..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (35 samples, 10.45%)</title><rect x="277" y="196" width="123" height="15" fill="rgb(229,184,40)"/><text x="280.00" y="206.50">PyUFunc_Generic..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (35 samples, 10.45%)</title><rect x="277" y="212" width="123" height="15" fill="rgb(208,55,23)"/><text x="280.00" y="222.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (35 samples, 10.45%)</title><rect x="277" y="228" width="123" height="15" fill="rgb(235,74,32)"/><text x="280.00" y="238.50">trivial_two_ope..</text></g><g><title>0x7f6517eed9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="397" y="244" width="3" height="15" fill="rgb(243,217,40)"/><text x="400.00" y="254.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.30%)</title><rect x="404" y="180" width="4" height="15" fill="rgb(246,214,52)"/><text x="407.00" y="190.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.30%)</title><rect x="408" y="276" width="3" height="15" fill="rgb(206,17,14)"/><text x="411.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.30%)</title><rect x="408" y="292" width="3" height="15" fill="rgb(212,56,3)"/><text x="411.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.30%)</title><rect x="408" y="308" width="3" height="15" fill="rgb(230,194,32)"/><text x="411.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3773) (1 samples, 0.30%)</title><rect x="408" y="324" width="3" height="15" fill="rgb(224,55,46)"/><text x="411.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.30%)</title><rect x="411" y="292" width="4" height="15" fill="rgb(251,226,42)"/><text x="414.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.30%)</title><rect x="411" y="308" width="4" height="15" fill="rgb(229,75,53)"/><text x="414.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.30%)</title><rect x="415" y="292" width="3" height="15" fill="rgb(208,225,20)"/><text x="418.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.30%)</title><rect x="415" y="308" width="3" height="15" fill="rgb(226,125,43)"/><text x="418.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.30%)</title><rect x="415" y="324" width="3" height="15" fill="rgb(244,203,46)"/><text x="418.00" y="334.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.30%)</title><rect x="415" y="340" width="3" height="15" fill="rgb(234,75,22)"/><text x="418.00" y="350.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:371) (1 samples, 0.30%)</title><rect x="415" y="356" width="3" height="15" fill="rgb(206,51,39)"/><text x="418.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.90%)</title><rect x="411" y="276" width="11" height="15" fill="rgb(238,105,29)"/><text x="414.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.30%)</title><rect x="418" y="292" width="4" height="15" fill="rgb(217,27,34)"/><text x="421.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2278) (1 samples, 0.30%)</title><rect x="418" y="308" width="4" height="15" fill="rgb(205,129,47)"/><text x="421.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.30%)</title><rect x="422" y="292" width="3" height="15" fill="rgb(241,163,37)"/><text x="425.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.30%)</title><rect x="425" y="292" width="4" height="15" fill="rgb(232,108,47)"/><text x="428.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.60%)</title><rect x="432" y="308" width="7" height="15" fill="rgb(222,183,4)"/><text x="435.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.60%)</title><rect x="443" y="324" width="7" height="15" fill="rgb(254,80,46)"/><text x="446.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 1.19%)</title><rect x="439" y="308" width="14" height="15" fill="rgb(243,117,29)"/><text x="442.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.30%)</title><rect x="450" y="324" width="3" height="15" fill="rgb(205,83,26)"/><text x="453.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.60%)</title><rect x="453" y="308" width="7" height="15" fill="rgb(212,163,25)"/><text x="456.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.30%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(244,65,18)"/><text x="463.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 3.88%)</title><rect x="422" y="276" width="45" height="15" fill="rgb(245,183,38)"/><text x="425.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (11 samples, 3.28%)</title><rect x="429" y="292" width="38" height="15" fill="rgb(244,37,47)"/><text x="432.00" y="302.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.30%)</title><rect x="464" y="308" width="3" height="15" fill="rgb(211,134,13)"/><text x="467.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 5.37%)</title><rect x="408" y="180" width="63" height="15" fill="rgb(232,75,34)"/><text x="411.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 5.37%)</title><rect x="408" y="196" width="63" height="15" fill="rgb(244,166,44)"/><text x="411.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 5.37%)</title><rect x="408" y="212" width="63" height="15" fill="rgb(219,146,28)"/><text x="411.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (18 samples, 5.37%)</title><rect x="408" y="228" width="63" height="15" fill="rgb(248,29,14)"/><text x="411.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (18 samples, 5.37%)</title><rect x="408" y="244" width="63" height="15" fill="rgb(223,161,39)"/><text x="411.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (18 samples, 5.37%)</title><rect x="408" y="260" width="63" height="15" fill="rgb(226,110,30)"/><text x="411.00" y="270.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.30%)</title><rect x="467" y="276" width="4" height="15" fill="rgb(243,69,52)"/><text x="470.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.30%)</title><rect x="467" y="292" width="4" height="15" fill="rgb(219,148,14)"/><text x="470.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="471" y="196" width="3" height="15" fill="rgb(237,144,27)"/><text x="474.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.30%)</title><rect x="471" y="212" width="3" height="15" fill="rgb(239,211,10)"/><text x="474.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.30%)</title><rect x="471" y="228" width="3" height="15" fill="rgb(245,69,47)"/><text x="474.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.30%)</title><rect x="471" y="244" width="3" height="15" fill="rgb(233,109,28)"/><text x="474.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:231) (1 samples, 0.30%)</title><rect x="474" y="244" width="4" height="15" fill="rgb(245,63,31)"/><text x="477.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.30%)</title><rect x="478" y="244" width="4" height="15" fill="rgb(234,18,28)"/><text x="481.00" y="254.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.30%)</title><rect x="478" y="260" width="4" height="15" fill="rgb(246,9,46)"/><text x="481.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.30%)</title><rect x="482" y="244" width="3" height="15" fill="rgb(225,27,48)"/><text x="485.00" y="254.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.30%)</title><rect x="482" y="260" width="3" height="15" fill="rgb(229,94,31)"/><text x="485.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="485" y="244" width="4" height="15" fill="rgb(220,25,46)"/><text x="488.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3059) (1 samples, 0.30%)</title><rect x="485" y="260" width="4" height="15" fill="rgb(211,60,26)"/><text x="488.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 1.49%)</title><rect x="474" y="228" width="18" height="15" fill="rgb(214,81,45)"/><text x="477.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.30%)</title><rect x="489" y="244" width="3" height="15" fill="rgb(213,26,30)"/><text x="492.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1688) (1 samples, 0.30%)</title><rect x="489" y="260" width="3" height="15" fill="rgb(218,11,12)"/><text x="492.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:295) (1 samples, 0.30%)</title><rect x="492" y="244" width="4" height="15" fill="rgb(225,126,54)"/><text x="495.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:305) (1 samples, 0.30%)</title><rect x="496" y="244" width="3" height="15" fill="rgb(225,162,30)"/><text x="499.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.30%)</title><rect x="499" y="244" width="4" height="15" fill="rgb(218,207,2)"/><text x="502.00" y="254.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.30%)</title><rect x="499" y="260" width="4" height="15" fill="rgb(230,48,2)"/><text x="502.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="499" y="276" width="4" height="15" fill="rgb(208,211,20)"/><text x="502.00" y="286.50"></text></g><g><title>0x7f652cc06293 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="499" y="292" width="4" height="15" fill="rgb(228,68,13)"/><text x="502.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="503" y="276" width="3" height="15" fill="rgb(231,43,33)"/><text x="506.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.30%)</title><rect x="506" y="276" width="4" height="15" fill="rgb(244,8,23)"/><text x="509.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.60%)</title><rect x="510" y="276" width="7" height="15" fill="rgb(241,6,44)"/><text x="513.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.30%)</title><rect x="517" y="292" width="3" height="15" fill="rgb(207,225,40)"/><text x="520.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.90%)</title><rect x="520" y="292" width="11" height="15" fill="rgb(254,184,46)"/><text x="523.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (12 samples, 3.58%)</title><rect x="492" y="228" width="42" height="15" fill="rgb(217,218,18)"/><text x="495.00" y="238.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 2.69%)</title><rect x="503" y="244" width="31" height="15" fill="rgb(229,225,29)"/><text x="506.00" y="254.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (9 samples, 2.69%)</title><rect x="503" y="260" width="31" height="15" fill="rgb(232,54,10)"/><text x="506.00" y="270.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 1.49%)</title><rect x="517" y="276" width="17" height="15" fill="rgb(230,44,24)"/><text x="520.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.30%)</title><rect x="531" y="292" width="3" height="15" fill="rgb(246,189,27)"/><text x="534.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (2 samples, 0.60%)</title><rect x="534" y="276" width="7" height="15" fill="rgb(243,61,31)"/><text x="537.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (2 samples, 0.60%)</title><rect x="534" y="292" width="7" height="15" fill="rgb(248,78,9)"/><text x="537.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (28 samples, 8.36%)</title><rect x="471" y="180" width="99" height="15" fill="rgb(245,117,38)"/><text x="474.00" y="190.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (27 samples, 8.06%)</title><rect x="474" y="196" width="96" height="15" fill="rgb(243,73,48)"/><text x="477.00" y="206.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (27 samples, 8.06%)</title><rect x="474" y="212" width="96" height="15" fill="rgb(243,147,29)"/><text x="477.00" y="222.50">execute_leg..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (10 samples, 2.99%)</title><rect x="534" y="228" width="36" height="15" fill="rgb(207,226,29)"/><text x="537.00" y="238.50">ite..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (10 samples, 2.99%)</title><rect x="534" y="244" width="36" height="15" fill="rgb(247,222,17)"/><text x="537.00" y="254.50">DOU..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (10 samples, 2.99%)</title><rect x="534" y="260" width="36" height="15" fill="rgb(250,6,50)"/><text x="537.00" y="270.50">run..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (8 samples, 2.39%)</title><rect x="541" y="276" width="29" height="15" fill="rgb(228,149,0)"/><text x="544.00" y="286.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (8 samples, 2.39%)</title><rect x="541" y="292" width="29" height="15" fill="rgb(226,110,13)"/><text x="544.00" y="302.50">_m..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (49 samples, 14.63%)</title><rect x="400" y="164" width="173" height="15" fill="rgb(233,177,20)"/><text x="403.00" y="174.50">_predict_proba_lr (skl..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.30%)</title><rect x="570" y="180" width="3" height="15" fill="rgb(250,187,25)"/><text x="573.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.30%)</title><rect x="570" y="196" width="3" height="15" fill="rgb(250,210,49)"/><text x="573.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (159 samples, 47.46%)</title><rect x="17" y="132" width="560" height="15" fill="rgb(217,18,54)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (147 samples, 43.88%)</title><rect x="59" y="148" width="518" height="15" fill="rgb(222,57,5)"/><text x="62.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:314) (1 samples, 0.30%)</title><rect x="573" y="164" width="4" height="15" fill="rgb(214,74,38)"/><text x="576.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:38) (162 samples, 48.36%)</title><rect x="10" y="52" width="570" height="15" fill="rgb(207,29,46)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:37) (162 samples, 48.36%)</title><rect x="10" y="68" width="570" height="15" fill="rgb(221,126,30)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:29) (162 samples, 48.36%)</title><rect x="10" y="84" width="570" height="15" fill="rgb(206,67,24)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:23) (162 samples, 48.36%)</title><rect x="10" y="100" width="570" height="15" fill="rgb(248,206,7)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (161 samples, 48.06%)</title><rect x="13" y="116" width="567" height="15" fill="rgb(251,49,0)"/><text x="16.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="577" y="132" width="3" height="15" fill="rgb(230,177,41)"/><text x="580.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.30%)</title><rect x="580" y="148" width="4" height="15" fill="rgb(215,112,29)"/><text x="583.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="580" y="164" width="4" height="15" fill="rgb(236,228,42)"/><text x="583.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="580" y="180" width="4" height="15" fill="rgb(209,141,40)"/><text x="583.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="580" y="196" width="4" height="15" fill="rgb(237,128,28)"/><text x="583.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="580" y="212" width="4" height="15" fill="rgb(221,63,24)"/><text x="583.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="580" y="228" width="4" height="15" fill="rgb(208,11,18)"/><text x="583.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.30%)</title><rect x="580" y="244" width="4" height="15" fill="rgb(238,50,27)"/><text x="583.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="580" y="260" width="4" height="15" fill="rgb(238,42,29)"/><text x="583.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="580" y="276" width="4" height="15" fill="rgb(240,224,45)"/><text x="583.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="580" y="292" width="4" height="15" fill="rgb(237,34,26)"/><text x="583.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="580" y="308" width="4" height="15" fill="rgb(219,36,50)"/><text x="583.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="580" y="324" width="4" height="15" fill="rgb(241,60,19)"/><text x="583.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.30%)</title><rect x="580" y="340" width="4" height="15" fill="rgb(239,136,17)"/><text x="583.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="580" y="356" width="4" height="15" fill="rgb(219,126,21)"/><text x="583.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="580" y="372" width="4" height="15" fill="rgb(242,224,36)"/><text x="583.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="580" y="388" width="4" height="15" fill="rgb(237,174,0)"/><text x="583.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="580" y="404" width="4" height="15" fill="rgb(207,166,30)"/><text x="583.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="580" y="420" width="4" height="15" fill="rgb(226,36,40)"/><text x="583.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:62) (1 samples, 0.30%)</title><rect x="580" y="436" width="4" height="15" fill="rgb(213,150,34)"/><text x="583.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="580" y="452" width="4" height="15" fill="rgb(234,77,51)"/><text x="583.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="580" y="468" width="4" height="15" fill="rgb(225,172,23)"/><text x="583.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="580" y="484" width="4" height="15" fill="rgb(230,127,0)"/><text x="583.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="580" y="500" width="4" height="15" fill="rgb(222,38,28)"/><text x="583.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="580" y="516" width="4" height="15" fill="rgb(216,190,34)"/><text x="583.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/loader.py:11) (1 samples, 0.30%)</title><rect x="580" y="532" width="4" height="15" fill="rgb(250,15,44)"/><text x="583.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.30%)</title><rect x="580" y="548" width="4" height="15" fill="rgb(227,22,7)"/><text x="583.00" y="558.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.60%)</title><rect x="584" y="852" width="7" height="15" fill="rgb(220,197,0)"/><text x="587.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.60%)</title><rect x="584" y="868" width="7" height="15" fill="rgb(224,0,54)"/><text x="587.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.60%)</title><rect x="584" y="884" width="7" height="15" fill="rgb(211,28,54)"/><text x="587.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.60%)</title><rect x="584" y="900" width="7" height="15" fill="rgb(220,163,13)"/><text x="587.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.60%)</title><rect x="584" y="916" width="7" height="15" fill="rgb(225,150,38)"/><text x="587.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.60%)</title><rect x="584" y="932" width="7" height="15" fill="rgb(218,28,4)"/><text x="587.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.60%)</title><rect x="584" y="948" width="7" height="15" fill="rgb(207,180,30)"/><text x="587.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.60%)</title><rect x="584" y="964" width="7" height="15" fill="rgb(254,213,50)"/><text x="587.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.30%)</title><rect x="587" y="980" width="4" height="15" fill="rgb(231,105,38)"/><text x="590.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.30%)</title><rect x="587" y="996" width="4" height="15" fill="rgb(240,134,4)"/><text x="590.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.30%)</title><rect x="587" y="1012" width="4" height="15" fill="rgb(207,137,41)"/><text x="590.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.30%)</title><rect x="587" y="1028" width="4" height="15" fill="rgb(232,80,40)"/><text x="590.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.30%)</title><rect x="587" y="1044" width="4" height="15" fill="rgb(247,19,28)"/><text x="590.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.30%)</title><rect x="591" y="852" width="3" height="15" fill="rgb(208,26,51)"/><text x="594.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.30%)</title><rect x="591" y="868" width="3" height="15" fill="rgb(243,37,50)"/><text x="594.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.30%)</title><rect x="591" y="884" width="3" height="15" fill="rgb(231,129,30)"/><text x="594.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.30%)</title><rect x="591" y="900" width="3" height="15" fill="rgb(212,178,27)"/><text x="594.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.30%)</title><rect x="591" y="916" width="3" height="15" fill="rgb(245,160,53)"/><text x="594.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.30%)</title><rect x="591" y="932" width="3" height="15" fill="rgb(205,22,25)"/><text x="594.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.30%)</title><rect x="591" y="948" width="3" height="15" fill="rgb(216,35,41)"/><text x="594.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.30%)</title><rect x="591" y="964" width="3" height="15" fill="rgb(243,202,42)"/><text x="594.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.30%)</title><rect x="591" y="980" width="3" height="15" fill="rgb(242,186,45)"/><text x="594.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.30%)</title><rect x="591" y="996" width="3" height="15" fill="rgb(219,9,53)"/><text x="594.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.30%)</title><rect x="591" y="1012" width="3" height="15" fill="rgb(221,94,18)"/><text x="594.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="591" y="1028" width="3" height="15" fill="rgb(235,119,0)"/><text x="594.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.30%)</title><rect x="591" y="1044" width="3" height="15" fill="rgb(228,78,22)"/><text x="594.00" y="1054.50"></text></g><g><title>join (posixpath.py:80) (1 samples, 0.30%)</title><rect x="594" y="900" width="4" height="15" fill="rgb(236,221,42)"/><text x="597.00" y="910.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.30%)</title><rect x="594" y="916" width="4" height="15" fill="rgb(216,108,29)"/><text x="597.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.49%)</title><rect x="584" y="820" width="17" height="15" fill="rgb(220,178,38)"/><text x="587.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.49%)</title><rect x="584" y="836" width="17" height="15" fill="rgb(224,167,6)"/><text x="587.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.60%)</title><rect x="594" y="852" width="7" height="15" fill="rgb(250,203,16)"/><text x="597.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.60%)</title><rect x="594" y="868" width="7" height="15" fill="rgb(229,51,40)"/><text x="597.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (2 samples, 0.60%)</title><rect x="594" y="884" width="7" height="15" fill="rgb(215,105,25)"/><text x="597.00" y="894.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.30%)</title><rect x="598" y="900" width="3" height="15" fill="rgb(247,58,20)"/><text x="601.00" y="910.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="598" y="916" width="3" height="15" fill="rgb(212,118,44)"/><text x="601.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (6 samples, 1.79%)</title><rect x="584" y="148" width="21" height="15" fill="rgb(248,155,42)"/><text x="587.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="164" width="21" height="15" fill="rgb(251,69,32)"/><text x="587.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.79%)</title><rect x="584" y="180" width="21" height="15" fill="rgb(212,184,37)"/><text x="587.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="196" width="21" height="15" fill="rgb(220,34,2)"/><text x="587.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="212" width="21" height="15" fill="rgb(226,126,6)"/><text x="587.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="228" width="21" height="15" fill="rgb(208,133,41)"/><text x="587.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="244" width="21" height="15" fill="rgb(226,68,41)"/><text x="587.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="260" width="21" height="15" fill="rgb(227,129,33)"/><text x="587.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="276" width="21" height="15" fill="rgb(230,103,13)"/><text x="587.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.79%)</title><rect x="584" y="292" width="21" height="15" fill="rgb(236,7,46)"/><text x="587.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="308" width="21" height="15" fill="rgb(218,219,52)"/><text x="587.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="324" width="21" height="15" fill="rgb(210,5,25)"/><text x="587.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="340" width="21" height="15" fill="rgb(222,150,46)"/><text x="587.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="356" width="21" height="15" fill="rgb(206,7,27)"/><text x="587.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="372" width="21" height="15" fill="rgb(245,216,22)"/><text x="587.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.79%)</title><rect x="584" y="388" width="21" height="15" fill="rgb(235,52,16)"/><text x="587.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="404" width="21" height="15" fill="rgb(232,142,33)"/><text x="587.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="420" width="21" height="15" fill="rgb(231,126,38)"/><text x="587.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="436" width="21" height="15" fill="rgb(254,209,9)"/><text x="587.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="452" width="21" height="15" fill="rgb(227,110,31)"/><text x="587.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="468" width="21" height="15" fill="rgb(246,7,38)"/><text x="587.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.79%)</title><rect x="584" y="484" width="21" height="15" fill="rgb(228,109,5)"/><text x="587.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="500" width="21" height="15" fill="rgb(208,200,54)"/><text x="587.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="516" width="21" height="15" fill="rgb(218,175,19)"/><text x="587.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="532" width="21" height="15" fill="rgb(240,215,42)"/><text x="587.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="548" width="21" height="15" fill="rgb(252,153,17)"/><text x="587.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="564" width="21" height="15" fill="rgb(240,31,13)"/><text x="587.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.79%)</title><rect x="584" y="580" width="21" height="15" fill="rgb(253,54,22)"/><text x="587.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="596" width="21" height="15" fill="rgb(237,125,10)"/><text x="587.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.79%)</title><rect x="584" y="612" width="21" height="15" fill="rgb(227,168,27)"/><text x="587.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="628" width="21" height="15" fill="rgb(231,198,46)"/><text x="587.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="644" width="21" height="15" fill="rgb(241,130,29)"/><text x="587.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="660" width="21" height="15" fill="rgb(234,164,39)"/><text x="587.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="676" width="21" height="15" fill="rgb(228,116,0)"/><text x="587.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="692" width="21" height="15" fill="rgb(248,143,8)"/><text x="587.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="708" width="21" height="15" fill="rgb(246,41,28)"/><text x="587.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.79%)</title><rect x="584" y="724" width="21" height="15" fill="rgb(212,6,46)"/><text x="587.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.79%)</title><rect x="584" y="740" width="21" height="15" fill="rgb(241,1,31)"/><text x="587.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.79%)</title><rect x="584" y="756" width="21" height="15" fill="rgb(249,145,36)"/><text x="587.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.79%)</title><rect x="584" y="772" width="21" height="15" fill="rgb(219,122,39)"/><text x="587.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.79%)</title><rect x="584" y="788" width="21" height="15" fill="rgb(235,209,38)"/><text x="587.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.79%)</title><rect x="584" y="804" width="21" height="15" fill="rgb(249,193,40)"/><text x="587.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.30%)</title><rect x="601" y="820" width="4" height="15" fill="rgb(222,192,44)"/><text x="604.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="601" y="836" width="4" height="15" fill="rgb(211,69,39)"/><text x="604.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="601" y="852" width="4" height="15" fill="rgb(253,218,47)"/><text x="604.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="601" y="868" width="4" height="15" fill="rgb(219,139,30)"/><text x="604.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="601" y="884" width="4" height="15" fill="rgb(233,169,7)"/><text x="604.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="601" y="900" width="4" height="15" fill="rgb(224,75,15)"/><text x="604.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.30%)</title><rect x="601" y="916" width="4" height="15" fill="rgb(227,165,27)"/><text x="604.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.30%)</title><rect x="601" y="932" width="4" height="15" fill="rgb(231,219,11)"/><text x="604.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="601" y="948" width="4" height="15" fill="rgb(251,87,12)"/><text x="604.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="601" y="964" width="4" height="15" fill="rgb(206,106,13)"/><text x="604.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.30%)</title><rect x="601" y="980" width="4" height="15" fill="rgb(249,204,23)"/><text x="604.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.30%)</title><rect x="601" y="996" width="4" height="15" fill="rgb(217,53,20)"/><text x="604.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="601" y="1012" width="4" height="15" fill="rgb(230,97,40)"/><text x="604.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.30%)</title><rect x="601" y="1028" width="4" height="15" fill="rgb(242,54,48)"/><text x="604.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="601" y="1044" width="4" height="15" fill="rgb(239,182,44)"/><text x="604.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.30%)</title><rect x="601" y="1060" width="4" height="15" fill="rgb(246,224,44)"/><text x="604.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="601" y="1076" width="4" height="15" fill="rgb(237,115,50)"/><text x="604.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.30%)</title><rect x="601" y="1092" width="4" height="15" fill="rgb(232,152,26)"/><text x="604.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:436) (1 samples, 0.30%)</title><rect x="601" y="1108" width="4" height="15" fill="rgb(218,155,23)"/><text x="604.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.30%)</title><rect x="605" y="676" width="3" height="15" fill="rgb(232,91,7)"/><text x="608.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="605" y="692" width="3" height="15" fill="rgb(236,160,38)"/><text x="608.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="605" y="708" width="3" height="15" fill="rgb(225,39,48)"/><text x="608.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="605" y="724" width="3" height="15" fill="rgb(243,55,26)"/><text x="608.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="605" y="740" width="3" height="15" fill="rgb(240,35,6)"/><text x="608.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="605" y="756" width="3" height="15" fill="rgb(208,133,20)"/><text x="608.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.30%)</title><rect x="605" y="772" width="3" height="15" fill="rgb(230,212,10)"/><text x="608.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="605" y="788" width="3" height="15" fill="rgb(254,17,36)"/><text x="608.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="605" y="804" width="3" height="15" fill="rgb(246,171,54)"/><text x="608.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="605" y="820" width="3" height="15" fill="rgb(229,214,34)"/><text x="608.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="605" y="836" width="3" height="15" fill="rgb(239,120,48)"/><text x="608.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="605" y="852" width="3" height="15" fill="rgb(210,51,17)"/><text x="608.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="605" y="868" width="3" height="15" fill="rgb(252,34,27)"/><text x="608.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="605" y="884" width="3" height="15" fill="rgb(210,60,18)"/><text x="608.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.30%)</title><rect x="605" y="900" width="3" height="15" fill="rgb(222,103,27)"/><text x="608.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="605" y="916" width="3" height="15" fill="rgb(245,224,33)"/><text x="608.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="605" y="932" width="3" height="15" fill="rgb(218,0,30)"/><text x="608.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="605" y="948" width="3" height="15" fill="rgb(208,77,6)"/><text x="608.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="605" y="964" width="3" height="15" fill="rgb(249,43,50)"/><text x="608.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="605" y="980" width="3" height="15" fill="rgb(216,122,21)"/><text x="608.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="605" y="996" width="3" height="15" fill="rgb(237,154,44)"/><text x="608.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="605" y="1012" width="3" height="15" fill="rgb(220,90,44)"/><text x="608.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:489) (1 samples, 0.30%)</title><rect x="605" y="1028" width="3" height="15" fill="rgb(230,115,18)"/><text x="608.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.30%)</title><rect x="605" y="1044" width="3" height="15" fill="rgb(205,115,31)"/><text x="608.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.30%)</title><rect x="605" y="1060" width="3" height="15" fill="rgb(241,112,36)"/><text x="608.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:737) (1 samples, 0.30%)</title><rect x="605" y="1076" width="3" height="15" fill="rgb(246,61,24)"/><text x="608.00" y="1086.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.30%)</title><rect x="605" y="1092" width="3" height="15" fill="rgb(218,44,20)"/><text x="608.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (2 samples, 0.60%)</title><rect x="605" y="148" width="7" height="15" fill="rgb(215,222,4)"/><text x="608.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="164" width="7" height="15" fill="rgb(216,80,51)"/><text x="608.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.60%)</title><rect x="605" y="180" width="7" height="15" fill="rgb(232,222,9)"/><text x="608.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="196" width="7" height="15" fill="rgb(246,127,6)"/><text x="608.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="212" width="7" height="15" fill="rgb(205,4,5)"/><text x="608.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="605" y="228" width="7" height="15" fill="rgb(219,190,35)"/><text x="608.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="605" y="244" width="7" height="15" fill="rgb(205,34,1)"/><text x="608.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="605" y="260" width="7" height="15" fill="rgb(216,153,13)"/><text x="608.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="276" width="7" height="15" fill="rgb(211,221,9)"/><text x="608.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.60%)</title><rect x="605" y="292" width="7" height="15" fill="rgb(234,45,39)"/><text x="608.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="308" width="7" height="15" fill="rgb(221,47,42)"/><text x="608.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="605" y="324" width="7" height="15" fill="rgb(219,15,43)"/><text x="608.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="605" y="340" width="7" height="15" fill="rgb(248,87,28)"/><text x="608.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="605" y="356" width="7" height="15" fill="rgb(237,150,28)"/><text x="608.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="372" width="7" height="15" fill="rgb(240,184,37)"/><text x="608.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.60%)</title><rect x="605" y="388" width="7" height="15" fill="rgb(225,16,17)"/><text x="608.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="404" width="7" height="15" fill="rgb(236,212,25)"/><text x="608.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="605" y="420" width="7" height="15" fill="rgb(217,0,9)"/><text x="608.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="605" y="436" width="7" height="15" fill="rgb(244,91,16)"/><text x="608.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="605" y="452" width="7" height="15" fill="rgb(241,32,43)"/><text x="608.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="468" width="7" height="15" fill="rgb(250,64,22)"/><text x="608.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.60%)</title><rect x="605" y="484" width="7" height="15" fill="rgb(225,37,7)"/><text x="608.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="500" width="7" height="15" fill="rgb(240,172,6)"/><text x="608.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="605" y="516" width="7" height="15" fill="rgb(207,183,2)"/><text x="608.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="605" y="532" width="7" height="15" fill="rgb(224,65,54)"/><text x="608.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="605" y="548" width="7" height="15" fill="rgb(244,34,10)"/><text x="608.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="564" width="7" height="15" fill="rgb(253,29,33)"/><text x="608.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.60%)</title><rect x="605" y="580" width="7" height="15" fill="rgb(207,10,4)"/><text x="608.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="605" y="596" width="7" height="15" fill="rgb(227,92,18)"/><text x="608.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="605" y="612" width="7" height="15" fill="rgb(247,64,38)"/><text x="608.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="605" y="628" width="7" height="15" fill="rgb(211,169,39)"/><text x="608.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="605" y="644" width="7" height="15" fill="rgb(229,224,25)"/><text x="608.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="605" y="660" width="7" height="15" fill="rgb(209,69,9)"/><text x="608.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.30%)</title><rect x="608" y="676" width="4" height="15" fill="rgb(229,123,5)"/><text x="611.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="608" y="692" width="4" height="15" fill="rgb(227,84,43)"/><text x="611.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="608" y="708" width="4" height="15" fill="rgb(220,64,14)"/><text x="611.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="608" y="724" width="4" height="15" fill="rgb(225,221,15)"/><text x="611.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="608" y="740" width="4" height="15" fill="rgb(251,61,14)"/><text x="611.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="608" y="756" width="4" height="15" fill="rgb(235,161,1)"/><text x="611.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/morestats.py:16) (1 samples, 0.30%)</title><rect x="608" y="772" width="4" height="15" fill="rgb(252,215,27)"/><text x="611.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="608" y="788" width="4" height="15" fill="rgb(206,192,22)"/><text x="611.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="608" y="804" width="4" height="15" fill="rgb(239,197,12)"/><text x="611.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="608" y="820" width="4" height="15" fill="rgb(237,121,27)"/><text x="611.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="608" y="836" width="4" height="15" fill="rgb(217,58,5)"/><text x="611.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="608" y="852" width="4" height="15" fill="rgb(221,123,19)"/><text x="611.00" y="862.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.30%)</title><rect x="608" y="868" width="4" height="15" fill="rgb(227,25,0)"/><text x="611.00" y="878.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.30%)</title><rect x="608" y="884" width="4" height="15" fill="rgb(237,134,24)"/><text x="611.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="608" y="900" width="4" height="15" fill="rgb(239,196,54)"/><text x="611.00" y="910.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="916" width="4" height="15" fill="rgb(239,213,49)"/><text x="611.00" y="926.50"></text></g><g><title>0x7f652ce8c995 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="932" width="4" height="15" fill="rgb(214,12,21)"/><text x="611.00" y="942.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="948" width="4" height="15" fill="rgb(210,26,5)"/><text x="611.00" y="958.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="964" width="4" height="15" fill="rgb(238,62,40)"/><text x="611.00" y="974.50"></text></g><g><title>0x7f652ce8c258 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="980" width="4" height="15" fill="rgb(214,194,33)"/><text x="611.00" y="990.50"></text></g><g><title>0x7f652ced9d7a (ld-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="996" width="4" height="15" fill="rgb(218,102,47)"/><text x="611.00" y="1006.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="1012" width="4" height="15" fill="rgb(235,155,35)"/><text x="611.00" y="1022.50"></text></g><g><title>0x7f652ceda18b (ld-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="1028" width="4" height="15" fill="rgb(235,28,54)"/><text x="611.00" y="1038.50"></text></g><g><title>0x7f652cecfad9 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="1044" width="4" height="15" fill="rgb(244,174,38)"/><text x="611.00" y="1054.50"></text></g><g><title>0x7f652ced74f4 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="1060" width="4" height="15" fill="rgb(245,67,17)"/><text x="611.00" y="1070.50"></text></g><g><title>0x7f652cee2a00 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="608" y="1076" width="4" height="15" fill="rgb(236,150,47)"/><text x="611.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.30%)</title><rect x="612" y="436" width="3" height="15" fill="rgb(221,74,10)"/><text x="615.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="612" y="452" width="3" height="15" fill="rgb(215,101,29)"/><text x="615.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="612" y="468" width="3" height="15" fill="rgb(214,138,49)"/><text x="615.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="612" y="484" width="3" height="15" fill="rgb(209,215,10)"/><text x="615.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="612" y="500" width="3" height="15" fill="rgb(245,173,12)"/><text x="615.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="612" y="516" width="3" height="15" fill="rgb(237,18,44)"/><text x="615.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.30%)</title><rect x="612" y="532" width="3" height="15" fill="rgb(242,100,7)"/><text x="615.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="612" y="548" width="3" height="15" fill="rgb(243,197,4)"/><text x="615.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="612" y="564" width="3" height="15" fill="rgb(238,145,32)"/><text x="615.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="612" y="580" width="3" height="15" fill="rgb(242,141,7)"/><text x="615.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="612" y="596" width="3" height="15" fill="rgb(205,116,0)"/><text x="615.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="612" y="612" width="3" height="15" fill="rgb(230,154,10)"/><text x="615.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.30%)</title><rect x="612" y="628" width="3" height="15" fill="rgb(245,11,3)"/><text x="615.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="612" y="644" width="3" height="15" fill="rgb(208,178,13)"/><text x="615.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="612" y="660" width="3" height="15" fill="rgb(217,3,8)"/><text x="615.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="612" y="676" width="3" height="15" fill="rgb(248,169,24)"/><text x="615.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="612" y="692" width="3" height="15" fill="rgb(210,136,5)"/><text x="615.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="612" y="708" width="3" height="15" fill="rgb(244,92,32)"/><text x="615.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.30%)</title><rect x="612" y="724" width="3" height="15" fill="rgb(235,217,47)"/><text x="615.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="612" y="740" width="3" height="15" fill="rgb(238,93,16)"/><text x="615.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="612" y="756" width="3" height="15" fill="rgb(245,105,34)"/><text x="615.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="612" y="772" width="3" height="15" fill="rgb(251,170,54)"/><text x="615.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="612" y="788" width="3" height="15" fill="rgb(251,150,14)"/><text x="615.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="612" y="804" width="3" height="15" fill="rgb(205,137,39)"/><text x="615.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="612" y="820" width="3" height="15" fill="rgb(244,223,8)"/><text x="615.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="612" y="836" width="3" height="15" fill="rgb(245,132,47)"/><text x="615.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.30%)</title><rect x="612" y="852" width="3" height="15" fill="rgb(233,147,52)"/><text x="615.00" y="862.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.30%)</title><rect x="612" y="868" width="3" height="15" fill="rgb(206,133,16)"/><text x="615.00" y="878.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="612" y="884" width="3" height="15" fill="rgb(233,146,6)"/><text x="615.00" y="894.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.30%)</title><rect x="615" y="1460" width="4" height="15" fill="rgb(241,9,11)"/><text x="618.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.30%)</title><rect x="615" y="1476" width="4" height="15" fill="rgb(228,225,19)"/><text x="618.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.30%)</title><rect x="615" y="1492" width="4" height="15" fill="rgb(210,80,53)"/><text x="618.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.30%)</title><rect x="615" y="1508" width="4" height="15" fill="rgb(232,186,44)"/><text x="618.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="615" y="1524" width="4" height="15" fill="rgb(237,183,38)"/><text x="618.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="615" y="1540" width="4" height="15" fill="rgb(211,213,4)"/><text x="618.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="615" y="1556" width="4" height="15" fill="rgb(214,46,16)"/><text x="618.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.30%)</title><rect x="615" y="1572" width="4" height="15" fill="rgb(236,137,4)"/><text x="618.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.30%)</title><rect x="615" y="1588" width="4" height="15" fill="rgb(234,83,35)"/><text x="618.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.30%)</title><rect x="615" y="1604" width="4" height="15" fill="rgb(249,84,4)"/><text x="618.00" y="1614.50"></text></g><g><title>parse_tuple (jinja2/parser.py:617) (1 samples, 0.30%)</title><rect x="619" y="1860" width="3" height="15" fill="rgb(222,196,33)"/><text x="622.00" y="1870.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.30%)</title><rect x="619" y="1876" width="3" height="15" fill="rgb(254,123,7)"/><text x="622.00" y="1886.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.30%)</title><rect x="619" y="1892" width="3" height="15" fill="rgb(222,147,49)"/><text x="622.00" y="1902.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.30%)</title><rect x="619" y="1908" width="3" height="15" fill="rgb(244,215,40)"/><text x="622.00" y="1918.50"></text></g><g><title>__new__ (jinja2/lexer.py:238) (1 samples, 0.30%)</title><rect x="619" y="1924" width="3" height="15" fill="rgb(228,118,44)"/><text x="622.00" y="1934.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.30%)</title><rect x="619" y="1940" width="3" height="15" fill="rgb(240,111,54)"/><text x="622.00" y="1950.50"></text></g><g><title>0x7f652cc1a757 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="619" y="1956" width="3" height="15" fill="rgb(249,21,50)"/><text x="622.00" y="1966.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:4) (13 samples, 3.88%)</title><rect x="580" y="52" width="46" height="15" fill="rgb(227,115,0)"/><text x="583.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 3.88%)</title><rect x="580" y="68" width="46" height="15" fill="rgb(243,56,21)"/><text x="583.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 3.88%)</title><rect x="580" y="84" width="46" height="15" fill="rgb(232,196,49)"/><text x="583.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 3.88%)</title><rect x="580" y="100" width="46" height="15" fill="rgb(212,178,2)"/><text x="583.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 3.88%)</title><rect x="580" y="116" width="46" height="15" fill="rgb(232,20,47)"/><text x="583.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 3.88%)</title><rect x="580" y="132" width="46" height="15" fill="rgb(242,13,7)"/><text x="583.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (4 samples, 1.19%)</title><rect x="612" y="148" width="14" height="15" fill="rgb(234,67,24)"/><text x="615.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="612" y="164" width="14" height="15" fill="rgb(212,119,25)"/><text x="615.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="612" y="180" width="14" height="15" fill="rgb(251,160,37)"/><text x="615.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="612" y="196" width="14" height="15" fill="rgb(214,94,16)"/><text x="615.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="612" y="212" width="14" height="15" fill="rgb(245,121,23)"/><text x="615.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="612" y="228" width="14" height="15" fill="rgb(215,207,40)"/><text x="615.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.19%)</title><rect x="612" y="244" width="14" height="15" fill="rgb(240,22,29)"/><text x="615.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="612" y="260" width="14" height="15" fill="rgb(221,86,39)"/><text x="615.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="612" y="276" width="14" height="15" fill="rgb(245,211,31)"/><text x="615.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="612" y="292" width="14" height="15" fill="rgb(253,93,12)"/><text x="615.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="612" y="308" width="14" height="15" fill="rgb(214,43,6)"/><text x="615.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="612" y="324" width="14" height="15" fill="rgb(237,104,23)"/><text x="615.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.19%)</title><rect x="612" y="340" width="14" height="15" fill="rgb(236,149,26)"/><text x="615.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.19%)</title><rect x="612" y="356" width="14" height="15" fill="rgb(219,5,2)"/><text x="615.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.19%)</title><rect x="612" y="372" width="14" height="15" fill="rgb(238,131,41)"/><text x="615.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.19%)</title><rect x="612" y="388" width="14" height="15" fill="rgb(215,105,23)"/><text x="615.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.19%)</title><rect x="612" y="404" width="14" height="15" fill="rgb(215,140,44)"/><text x="615.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.19%)</title><rect x="612" y="420" width="14" height="15" fill="rgb(236,13,10)"/><text x="615.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.90%)</title><rect x="615" y="436" width="11" height="15" fill="rgb(237,59,35)"/><text x="618.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="452" width="11" height="15" fill="rgb(249,218,46)"/><text x="618.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.90%)</title><rect x="615" y="468" width="11" height="15" fill="rgb(230,83,8)"/><text x="618.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="484" width="11" height="15" fill="rgb(205,178,25)"/><text x="618.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="500" width="11" height="15" fill="rgb(227,173,48)"/><text x="618.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="516" width="11" height="15" fill="rgb(233,217,35)"/><text x="618.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="532" width="11" height="15" fill="rgb(217,188,18)"/><text x="618.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="548" width="11" height="15" fill="rgb(246,5,14)"/><text x="618.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="564" width="11" height="15" fill="rgb(215,2,37)"/><text x="618.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.90%)</title><rect x="615" y="580" width="11" height="15" fill="rgb(233,204,40)"/><text x="618.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="596" width="11" height="15" fill="rgb(223,212,10)"/><text x="618.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="612" width="11" height="15" fill="rgb(244,90,45)"/><text x="618.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="628" width="11" height="15" fill="rgb(252,15,38)"/><text x="618.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="644" width="11" height="15" fill="rgb(209,119,40)"/><text x="618.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="660" width="11" height="15" fill="rgb(249,86,20)"/><text x="618.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.90%)</title><rect x="615" y="676" width="11" height="15" fill="rgb(205,71,37)"/><text x="618.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="692" width="11" height="15" fill="rgb(211,109,4)"/><text x="618.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="708" width="11" height="15" fill="rgb(246,52,28)"/><text x="618.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="724" width="11" height="15" fill="rgb(211,88,51)"/><text x="618.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="740" width="11" height="15" fill="rgb(249,41,35)"/><text x="618.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="756" width="11" height="15" fill="rgb(205,208,31)"/><text x="618.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.90%)</title><rect x="615" y="772" width="11" height="15" fill="rgb(252,34,41)"/><text x="618.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="788" width="11" height="15" fill="rgb(211,113,29)"/><text x="618.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="804" width="11" height="15" fill="rgb(252,81,49)"/><text x="618.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="820" width="11" height="15" fill="rgb(235,221,3)"/><text x="618.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="836" width="11" height="15" fill="rgb(237,179,12)"/><text x="618.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="852" width="11" height="15" fill="rgb(224,8,30)"/><text x="618.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.90%)</title><rect x="615" y="868" width="11" height="15" fill="rgb(210,54,28)"/><text x="618.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="884" width="11" height="15" fill="rgb(245,23,33)"/><text x="618.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.90%)</title><rect x="615" y="900" width="11" height="15" fill="rgb(222,77,0)"/><text x="618.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="916" width="11" height="15" fill="rgb(226,175,3)"/><text x="618.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="932" width="11" height="15" fill="rgb(216,77,26)"/><text x="618.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="948" width="11" height="15" fill="rgb(226,0,9)"/><text x="618.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="964" width="11" height="15" fill="rgb(236,184,6)"/><text x="618.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="980" width="11" height="15" fill="rgb(212,224,0)"/><text x="618.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="996" width="11" height="15" fill="rgb(229,140,21)"/><text x="618.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.90%)</title><rect x="615" y="1012" width="11" height="15" fill="rgb(209,49,9)"/><text x="618.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="1028" width="11" height="15" fill="rgb(236,135,6)"/><text x="618.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="1044" width="11" height="15" fill="rgb(237,141,30)"/><text x="618.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="1060" width="11" height="15" fill="rgb(253,50,21)"/><text x="618.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="1076" width="11" height="15" fill="rgb(229,166,54)"/><text x="618.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1092" width="11" height="15" fill="rgb(209,212,38)"/><text x="618.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.90%)</title><rect x="615" y="1108" width="11" height="15" fill="rgb(237,68,23)"/><text x="618.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.90%)</title><rect x="615" y="1124" width="11" height="15" fill="rgb(226,54,15)"/><text x="618.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1140" width="11" height="15" fill="rgb(225,127,29)"/><text x="618.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="1156" width="11" height="15" fill="rgb(224,2,34)"/><text x="618.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="1172" width="11" height="15" fill="rgb(208,219,31)"/><text x="618.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="1188" width="11" height="15" fill="rgb(224,104,15)"/><text x="618.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="1204" width="11" height="15" fill="rgb(239,28,3)"/><text x="618.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1220" width="11" height="15" fill="rgb(224,27,15)"/><text x="618.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.90%)</title><rect x="615" y="1236" width="11" height="15" fill="rgb(242,66,1)"/><text x="618.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.90%)</title><rect x="615" y="1252" width="11" height="15" fill="rgb(208,206,36)"/><text x="618.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1268" width="11" height="15" fill="rgb(219,44,44)"/><text x="618.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="1284" width="11" height="15" fill="rgb(220,56,39)"/><text x="618.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="1300" width="11" height="15" fill="rgb(249,171,46)"/><text x="618.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="1316" width="11" height="15" fill="rgb(243,166,20)"/><text x="618.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="1332" width="11" height="15" fill="rgb(206,150,41)"/><text x="618.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1348" width="11" height="15" fill="rgb(249,201,27)"/><text x="618.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.90%)</title><rect x="615" y="1364" width="11" height="15" fill="rgb(252,90,9)"/><text x="618.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="615" y="1380" width="11" height="15" fill="rgb(247,166,54)"/><text x="618.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="615" y="1396" width="11" height="15" fill="rgb(241,35,52)"/><text x="618.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="615" y="1412" width="11" height="15" fill="rgb(226,174,16)"/><text x="618.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="615" y="1428" width="11" height="15" fill="rgb(206,109,18)"/><text x="618.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="615" y="1444" width="11" height="15" fill="rgb(214,112,22)"/><text x="618.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.60%)</title><rect x="619" y="1460" width="7" height="15" fill="rgb(225,30,26)"/><text x="622.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="619" y="1476" width="7" height="15" fill="rgb(250,169,27)"/><text x="622.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="619" y="1492" width="7" height="15" fill="rgb(208,89,45)"/><text x="622.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="619" y="1508" width="7" height="15" fill="rgb(236,212,34)"/><text x="622.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="619" y="1524" width="7" height="15" fill="rgb(216,109,51)"/><text x="622.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="619" y="1540" width="7" height="15" fill="rgb(215,220,35)"/><text x="622.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.60%)</title><rect x="619" y="1556" width="7" height="15" fill="rgb(232,160,5)"/><text x="622.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 0.60%)</title><rect x="619" y="1572" width="7" height="15" fill="rgb(249,111,50)"/><text x="622.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.60%)</title><rect x="619" y="1588" width="7" height="15" fill="rgb(205,10,51)"/><text x="622.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.60%)</title><rect x="619" y="1604" width="7" height="15" fill="rgb(213,130,52)"/><text x="622.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (2 samples, 0.60%)</title><rect x="619" y="1620" width="7" height="15" fill="rgb(242,49,53)"/><text x="622.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (2 samples, 0.60%)</title><rect x="619" y="1636" width="7" height="15" fill="rgb(228,109,6)"/><text x="622.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (2 samples, 0.60%)</title><rect x="619" y="1652" width="7" height="15" fill="rgb(243,135,16)"/><text x="622.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="619" y="1668" width="7" height="15" fill="rgb(213,152,44)"/><text x="622.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="619" y="1684" width="7" height="15" fill="rgb(242,219,9)"/><text x="622.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 0.60%)</title><rect x="619" y="1700" width="7" height="15" fill="rgb(245,169,18)"/><text x="622.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.60%)</title><rect x="619" y="1716" width="7" height="15" fill="rgb(251,25,15)"/><text x="622.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="619" y="1732" width="7" height="15" fill="rgb(230,78,28)"/><text x="622.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="619" y="1748" width="7" height="15" fill="rgb(231,51,15)"/><text x="622.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (2 samples, 0.60%)</title><rect x="619" y="1764" width="7" height="15" fill="rgb(222,112,34)"/><text x="622.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.60%)</title><rect x="619" y="1780" width="7" height="15" fill="rgb(236,74,39)"/><text x="622.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.60%)</title><rect x="619" y="1796" width="7" height="15" fill="rgb(254,204,36)"/><text x="622.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.60%)</title><rect x="619" y="1812" width="7" height="15" fill="rgb(230,149,42)"/><text x="622.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:191) (2 samples, 0.60%)</title><rect x="619" y="1828" width="7" height="15" fill="rgb(237,162,3)"/><text x="622.00" y="1838.50"></text></g><g><title>parse_assign_target (jinja2/parser.py:417) (2 samples, 0.60%)</title><rect x="619" y="1844" width="7" height="15" fill="rgb(254,179,10)"/><text x="622.00" y="1854.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.30%)</title><rect x="622" y="1860" width="4" height="15" fill="rgb(235,0,16)"/><text x="625.00" y="1870.50"></text></g><g><title>parse_primary (jinja2/parser.py:561) (1 samples, 0.30%)</title><rect x="622" y="1876" width="4" height="15" fill="rgb(209,145,44)"/><text x="625.00" y="1886.50"></text></g><g><title>__init__ (jinja2/nodes.py:140) (1 samples, 0.30%)</title><rect x="622" y="1892" width="4" height="15" fill="rgb(251,21,36)"/><text x="625.00" y="1902.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.30%)</title><rect x="636" y="164" width="4" height="15" fill="rgb(221,94,18)"/><text x="639.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.30%)</title><rect x="640" y="164" width="4" height="15" fill="rgb(223,226,16)"/><text x="643.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.90%)</title><rect x="644" y="180" width="10" height="15" fill="rgb(239,20,37)"/><text x="647.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.60%)</title><rect x="647" y="196" width="7" height="15" fill="rgb(247,62,1)"/><text x="650.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.30%)</title><rect x="679" y="260" width="3" height="15" fill="rgb(221,11,21)"/><text x="682.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.30%)</title><rect x="686" y="308" width="3" height="15" fill="rgb(253,122,53)"/><text x="689.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="686" y="324" width="3" height="15" fill="rgb(221,179,40)"/><text x="689.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="686" y="340" width="3" height="15" fill="rgb(243,148,21)"/><text x="689.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.30%)</title><rect x="686" y="356" width="3" height="15" fill="rgb(216,119,20)"/><text x="689.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.30%)</title><rect x="686" y="372" width="3" height="15" fill="rgb(209,218,6)"/><text x="689.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.30%)</title><rect x="686" y="388" width="3" height="15" fill="rgb(238,132,37)"/><text x="689.00" y="398.50"></text></g><g><title>0x7f652cce2fb1 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="686" y="404" width="3" height="15" fill="rgb(252,72,4)"/><text x="689.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.30%)</title><rect x="689" y="324" width="4" height="15" fill="rgb(222,18,22)"/><text x="692.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4528) (1 samples, 0.30%)</title><rect x="693" y="324" width="3" height="15" fill="rgb(253,40,37)"/><text x="696.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.30%)</title><rect x="696" y="356" width="4" height="15" fill="rgb(227,221,53)"/><text x="699.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.30%)</title><rect x="696" y="372" width="4" height="15" fill="rgb(237,182,51)"/><text x="699.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.30%)</title><rect x="696" y="388" width="4" height="15" fill="rgb(206,116,23)"/><text x="699.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.30%)</title><rect x="696" y="404" width="4" height="15" fill="rgb(237,169,38)"/><text x="699.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.30%)</title><rect x="696" y="420" width="4" height="15" fill="rgb(230,155,17)"/><text x="699.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.30%)</title><rect x="700" y="356" width="3" height="15" fill="rgb(246,36,28)"/><text x="703.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.30%)</title><rect x="700" y="372" width="3" height="15" fill="rgb(217,223,54)"/><text x="703.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1360) (1 samples, 0.30%)</title><rect x="700" y="388" width="3" height="15" fill="rgb(234,204,18)"/><text x="703.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.30%)</title><rect x="703" y="372" width="4" height="15" fill="rgb(212,105,22)"/><text x="706.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.30%)</title><rect x="707" y="388" width="3" height="15" fill="rgb(217,223,12)"/><text x="710.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.30%)</title><rect x="710" y="388" width="4" height="15" fill="rgb(213,156,47)"/><text x="713.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.30%)</title><rect x="714" y="404" width="4" height="15" fill="rgb(242,211,38)"/><text x="717.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.60%)</title><rect x="714" y="388" width="7" height="15" fill="rgb(240,218,35)"/><text x="717.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.30%)</title><rect x="718" y="404" width="3" height="15" fill="rgb(244,89,7)"/><text x="721.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.60%)</title><rect x="721" y="388" width="7" height="15" fill="rgb(252,5,45)"/><text x="724.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.30%)</title><rect x="728" y="388" width="4" height="15" fill="rgb(205,184,8)"/><text x="731.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.30%)</title><rect x="732" y="388" width="3" height="15" fill="rgb(211,27,11)"/><text x="735.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.30%)</title><rect x="735" y="388" width="4" height="15" fill="rgb(206,8,27)"/><text x="738.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.30%)</title><rect x="739" y="388" width="3" height="15" fill="rgb(252,224,49)"/><text x="742.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1881) (1 samples, 0.30%)</title><rect x="739" y="404" width="3" height="15" fill="rgb(218,208,7)"/><text x="742.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (12 samples, 3.58%)</title><rect x="703" y="356" width="43" height="15" fill="rgb(206,7,21)"/><text x="706.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (11 samples, 3.28%)</title><rect x="707" y="372" width="39" height="15" fill="rgb(241,129,2)"/><text x="710.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.30%)</title><rect x="742" y="388" width="4" height="15" fill="rgb(233,80,16)"/><text x="745.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.67%)</title><rect x="682" y="260" width="67" height="15" fill="rgb(235,211,10)"/><text x="685.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 5.67%)</title><rect x="682" y="276" width="67" height="15" fill="rgb(225,77,11)"/><text x="685.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (19 samples, 5.67%)</title><rect x="682" y="292" width="67" height="15" fill="rgb(239,162,29)"/><text x="685.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 5.07%)</title><rect x="689" y="308" width="60" height="15" fill="rgb(230,79,48)"/><text x="692.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 4.48%)</title><rect x="696" y="324" width="53" height="15" fill="rgb(221,138,53)"/><text x="699.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 4.48%)</title><rect x="696" y="340" width="53" height="15" fill="rgb(242,172,19)"/><text x="699.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.30%)</title><rect x="746" y="356" width="3" height="15" fill="rgb(208,104,39)"/><text x="749.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.30%)</title><rect x="746" y="372" width="3" height="15" fill="rgb(220,131,38)"/><text x="749.00" y="382.50"></text></g><g><title>0x7f652cc0496a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="746" y="388" width="3" height="15" fill="rgb(215,139,3)"/><text x="749.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.30%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(250,55,24)"/><text x="752.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="749" y="308" width="4" height="15" fill="rgb(216,176,52)"/><text x="752.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.30%)</title><rect x="749" y="324" width="4" height="15" fill="rgb(213,96,19)"/><text x="752.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.30%)</title><rect x="749" y="340" width="4" height="15" fill="rgb(234,65,11)"/><text x="752.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.30%)</title><rect x="749" y="356" width="4" height="15" fill="rgb(254,56,12)"/><text x="752.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.30%)</title><rect x="749" y="372" width="4" height="15" fill="rgb(236,175,1)"/><text x="752.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="749" y="388" width="4" height="15" fill="rgb(246,182,34)"/><text x="752.00" y="398.50"></text></g><g><title>0x7f652cc06700 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="749" y="404" width="4" height="15" fill="rgb(223,13,42)"/><text x="752.00" y="414.50"></text></g><g><title>0x7f652cc03aa4 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="749" y="420" width="4" height="15" fill="rgb(233,79,5)"/><text x="752.00" y="430.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 6.87%)</title><rect x="675" y="244" width="81" height="15" fill="rgb(234,139,28)"/><text x="678.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.60%)</title><rect x="749" y="260" width="7" height="15" fill="rgb(246,159,15)"/><text x="752.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.60%)</title><rect x="749" y="276" width="7" height="15" fill="rgb(231,44,11)"/><text x="752.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.30%)</title><rect x="753" y="292" width="3" height="15" fill="rgb(219,185,35)"/><text x="756.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.30%)</title><rect x="753" y="308" width="3" height="15" fill="rgb(228,13,44)"/><text x="756.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (1 samples, 0.30%)</title><rect x="753" y="324" width="3" height="15" fill="rgb(232,190,39)"/><text x="756.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:195) (1 samples, 0.30%)</title><rect x="753" y="340" width="3" height="15" fill="rgb(208,45,7)"/><text x="756.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src:1057) (1 samples, 0.30%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(226,166,14)"/><text x="756.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.30%)</title><rect x="753" y="372" width="3" height="15" fill="rgb(240,218,28)"/><text x="756.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="760" y="260" width="3" height="15" fill="rgb(248,111,54)"/><text x="763.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="760" y="276" width="3" height="15" fill="rgb(241,132,49)"/><text x="763.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="760" y="292" width="3" height="15" fill="rgb(246,9,11)"/><text x="763.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.30%)</title><rect x="760" y="308" width="3" height="15" fill="rgb(234,59,11)"/><text x="763.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="760" y="324" width="3" height="15" fill="rgb(242,113,4)"/><text x="763.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.30%)</title><rect x="763" y="292" width="4" height="15" fill="rgb(244,33,53)"/><text x="766.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.30%)</title><rect x="763" y="308" width="4" height="15" fill="rgb(224,16,27)"/><text x="766.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.60%)</title><rect x="763" y="276" width="7" height="15" fill="rgb(214,93,31)"/><text x="766.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1230) (1 samples, 0.30%)</title><rect x="767" y="292" width="3" height="15" fill="rgb(207,173,1)"/><text x="770.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="770" y="276" width="4" height="15" fill="rgb(218,23,54)"/><text x="773.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1985) (1 samples, 0.30%)</title><rect x="770" y="292" width="4" height="15" fill="rgb(247,119,51)"/><text x="773.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.30%)</title><rect x="774" y="292" width="3" height="15" fill="rgb(234,125,26)"/><text x="777.00" y="302.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.30%)</title><rect x="774" y="308" width="3" height="15" fill="rgb(236,103,3)"/><text x="777.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.90%)</title><rect x="777" y="372" width="11" height="15" fill="rgb(217,87,27)"/><text x="780.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.19%)</title><rect x="777" y="308" width="14" height="15" fill="rgb(227,136,18)"/><text x="780.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.19%)</title><rect x="777" y="324" width="14" height="15" fill="rgb(235,106,43)"/><text x="780.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.19%)</title><rect x="777" y="340" width="14" height="15" fill="rgb(247,91,28)"/><text x="780.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 1.19%)</title><rect x="777" y="356" width="14" height="15" fill="rgb(225,193,20)"/><text x="780.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.30%)</title><rect x="788" y="372" width="3" height="15" fill="rgb(215,8,32)"/><text x="791.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.30%)</title><rect x="791" y="308" width="4" height="15" fill="rgb(253,158,51)"/><text x="794.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="791" y="324" width="4" height="15" fill="rgb(225,77,32)"/><text x="794.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (46 samples, 13.73%)</title><rect x="658" y="196" width="162" height="15" fill="rgb(210,24,10)"/><text x="661.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 13.43%)</title><rect x="661" y="212" width="159" height="15" fill="rgb(247,156,12)"/><text x="664.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (43 samples, 12.84%)</title><rect x="668" y="228" width="152" height="15" fill="rgb(215,88,12)"/><text x="671.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (18 samples, 5.37%)</title><rect x="756" y="244" width="64" height="15" fill="rgb(239,62,22)"/><text x="759.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.78%)</title><rect x="763" y="260" width="57" height="15" fill="rgb(243,166,54)"/><text x="766.00" y="270.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 3.88%)</title><rect x="774" y="276" width="46" height="15" fill="rgb(221,33,46)"/><text x="777.00" y="286.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.58%)</title><rect x="777" y="292" width="43" height="15" fill="rgb(215,216,11)"/><text x="780.00" y="302.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 2.09%)</title><rect x="795" y="308" width="25" height="15" fill="rgb(227,97,27)"/><text x="798.00" y="318.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 2.09%)</title><rect x="795" y="324" width="25" height="15" fill="rgb(254,79,42)"/><text x="798.00" y="334.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 2.09%)</title><rect x="795" y="340" width="25" height="15" fill="rgb(226,145,7)"/><text x="798.00" y="350.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 2.09%)</title><rect x="795" y="356" width="25" height="15" fill="rgb(205,205,29)"/><text x="798.00" y="366.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 2.09%)</title><rect x="795" y="372" width="25" height="15" fill="rgb(214,214,9)"/><text x="798.00" y="382.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.30%)</title><rect x="820" y="196" width="3" height="15" fill="rgb(236,42,9)"/><text x="823.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.30%)</title><rect x="837" y="244" width="4" height="15" fill="rgb(219,5,2)"/><text x="840.00" y="254.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.30%)</title><rect x="844" y="292" width="4" height="15" fill="rgb(240,129,25)"/><text x="847.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.30%)</title><rect x="848" y="324" width="3" height="15" fill="rgb(227,67,30)"/><text x="851.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.30%)</title><rect x="848" y="340" width="3" height="15" fill="rgb(223,13,27)"/><text x="851.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="848" y="356" width="3" height="15" fill="rgb(215,100,40)"/><text x="851.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="848" y="372" width="3" height="15" fill="rgb(228,51,33)"/><text x="851.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.30%)</title><rect x="848" y="388" width="3" height="15" fill="rgb(217,171,49)"/><text x="851.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:365) (2 samples, 0.60%)</title><rect x="851" y="324" width="7" height="15" fill="rgb(246,196,50)"/><text x="854.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.49%)</title><rect x="844" y="276" width="18" height="15" fill="rgb(236,98,31)"/><text x="847.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.19%)</title><rect x="848" y="292" width="14" height="15" fill="rgb(254,88,5)"/><text x="851.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 1.19%)</title><rect x="848" y="308" width="14" height="15" fill="rgb(233,205,35)"/><text x="851.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (1 samples, 0.30%)</title><rect x="858" y="324" width="4" height="15" fill="rgb(239,184,29)"/><text x="861.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:36) (1 samples, 0.30%)</title><rect x="858" y="340" width="4" height="15" fill="rgb(248,161,30)"/><text x="861.00" y="350.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="858" y="356" width="4" height="15" fill="rgb(222,129,16)"/><text x="861.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="858" y="372" width="4" height="15" fill="rgb(234,5,25)"/><text x="861.00" y="382.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="862" y="276" width="10" height="15" fill="rgb(222,79,42)"/><text x="865.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (19 samples, 5.67%)</title><rect x="834" y="228" width="67" height="15" fill="rgb(215,2,18)"/><text x="837.00" y="238.50">_run (m..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (17 samples, 5.07%)</title><rect x="841" y="244" width="60" height="15" fill="rgb(241,97,52)"/><text x="844.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (17 samples, 5.07%)</title><rect x="841" y="260" width="60" height="15" fill="rgb(244,205,19)"/><text x="844.00" y="270.50">dot (&lt;..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.39%)</title><rect x="872" y="276" width="29" height="15" fill="rgb(237,135,9)"/><text x="875.00" y="286.50">dg..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.30%)</title><rect x="901" y="228" width="3" height="15" fill="rgb(244,58,43)"/><text x="904.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="911" y="260" width="4" height="15" fill="rgb(241,184,2)"/><text x="914.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.30%)</title><rect x="911" y="276" width="4" height="15" fill="rgb(213,93,11)"/><text x="914.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.30%)</title><rect x="911" y="292" width="4" height="15" fill="rgb(231,160,38)"/><text x="914.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.30%)</title><rect x="911" y="308" width="4" height="15" fill="rgb(216,136,21)"/><text x="914.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="915" y="260" width="3" height="15" fill="rgb(236,126,44)"/><text x="918.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="915" y="276" width="3" height="15" fill="rgb(210,185,45)"/><text x="918.00" y="286.50"></text></g><g><title>0x7f652cc2514a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="915" y="292" width="3" height="15" fill="rgb(245,201,37)"/><text x="918.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="918" y="308" width="4" height="15" fill="rgb(249,50,30)"/><text x="921.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.30%)</title><rect x="922" y="308" width="3" height="15" fill="rgb(246,222,45)"/><text x="925.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.30%)</title><rect x="922" y="324" width="3" height="15" fill="rgb(232,65,22)"/><text x="925.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="925" y="308" width="4" height="15" fill="rgb(213,229,32)"/><text x="928.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.30%)</title><rect x="925" y="324" width="4" height="15" fill="rgb(249,44,22)"/><text x="928.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.19%)</title><rect x="918" y="292" width="14" height="15" fill="rgb(231,181,7)"/><text x="921.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.30%)</title><rect x="929" y="308" width="3" height="15" fill="rgb(248,170,44)"/><text x="932.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.30%)</title><rect x="929" y="324" width="3" height="15" fill="rgb(213,178,25)"/><text x="932.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.30%)</title><rect x="932" y="308" width="4" height="15" fill="rgb(205,32,19)"/><text x="935.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.30%)</title><rect x="932" y="324" width="4" height="15" fill="rgb(223,148,48)"/><text x="935.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="932" y="340" width="4" height="15" fill="rgb(251,184,8)"/><text x="935.00" y="350.50"></text></g><g><title>0x7f652cc0621f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="932" y="356" width="4" height="15" fill="rgb(243,144,9)"/><text x="935.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.30%)</title><rect x="936" y="340" width="3" height="15" fill="rgb(225,195,16)"/><text x="939.00" y="350.50"></text></g><g><title>0x7f652cc24d67 (libc-2.29.so) (2 samples, 0.60%)</title><rect x="939" y="356" width="7" height="15" fill="rgb(237,43,27)"/><text x="942.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.79%)</title><rect x="932" y="292" width="22" height="15" fill="rgb(207,224,20)"/><text x="935.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 1.49%)</title><rect x="936" y="308" width="18" height="15" fill="rgb(225,208,14)"/><text x="939.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.49%)</title><rect x="936" y="324" width="18" height="15" fill="rgb(232,181,50)"/><text x="939.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 1.19%)</title><rect x="939" y="340" width="15" height="15" fill="rgb(216,51,23)"/><text x="942.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (2 samples, 0.60%)</title><rect x="946" y="356" width="8" height="15" fill="rgb(221,76,6)"/><text x="949.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 3.58%)</title><rect x="918" y="260" width="43" height="15" fill="rgb(244,133,20)"/><text x="921.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.58%)</title><rect x="918" y="276" width="43" height="15" fill="rgb(211,81,20)"/><text x="921.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.60%)</title><rect x="954" y="292" width="7" height="15" fill="rgb(227,140,37)"/><text x="957.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.60%)</title><rect x="954" y="308" width="7" height="15" fill="rgb(238,186,24)"/><text x="957.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.60%)</title><rect x="954" y="324" width="7" height="15" fill="rgb(235,171,49)"/><text x="957.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.60%)</title><rect x="954" y="340" width="7" height="15" fill="rgb(218,51,28)"/><text x="957.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.60%)</title><rect x="954" y="356" width="7" height="15" fill="rgb(222,112,26)"/><text x="957.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (17 samples, 5.07%)</title><rect x="904" y="228" width="60" height="15" fill="rgb(216,154,35)"/><text x="907.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 4.48%)</title><rect x="911" y="244" width="53" height="15" fill="rgb(252,113,26)"/><text x="914.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.30%)</title><rect x="961" y="260" width="3" height="15" fill="rgb(209,182,2)"/><text x="964.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.30%)</title><rect x="968" y="292" width="3" height="15" fill="rgb(220,15,31)"/><text x="971.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.30%)</title><rect x="968" y="308" width="3" height="15" fill="rgb(252,194,30)"/><text x="971.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.30%)</title><rect x="968" y="324" width="3" height="15" fill="rgb(217,107,17)"/><text x="971.00" y="334.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.30%)</title><rect x="968" y="340" width="3" height="15" fill="rgb(212,143,16)"/><text x="971.00" y="350.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:402) (1 samples, 0.30%)</title><rect x="968" y="356" width="3" height="15" fill="rgb(213,203,4)"/><text x="971.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.60%)</title><rect x="968" y="260" width="7" height="15" fill="rgb(235,132,27)"/><text x="971.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.60%)</title><rect x="968" y="276" width="7" height="15" fill="rgb(241,58,3)"/><text x="971.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1689) (1 samples, 0.30%)</title><rect x="971" y="292" width="4" height="15" fill="rgb(227,208,27)"/><text x="974.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.30%)</title><rect x="975" y="276" width="3" height="15" fill="rgb(224,187,28)"/><text x="978.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.30%)</title><rect x="975" y="292" width="3" height="15" fill="rgb(225,76,18)"/><text x="978.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.30%)</title><rect x="975" y="308" width="3" height="15" fill="rgb(245,54,15)"/><text x="978.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.30%)</title><rect x="975" y="324" width="3" height="15" fill="rgb(218,57,47)"/><text x="978.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.30%)</title><rect x="975" y="340" width="3" height="15" fill="rgb(228,56,40)"/><text x="978.00" y="350.50"></text></g><g><title>0x7f6517eed9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="978" y="308" width="4" height="15" fill="rgb(225,20,3)"/><text x="981.00" y="318.50"></text></g><g><title>0x7f65180179f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="982" y="340" width="3" height="15" fill="rgb(243,118,11)"/><text x="985.00" y="350.50"></text></g><g><title>0x7f652cd501b0 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="999" y="356" width="7" height="15" fill="rgb(214,34,15)"/><text x="1002.00" y="366.50"></text></g><g><title>0x7f652cdd6ba0 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1006" y="356" width="7" height="15" fill="rgb(242,135,46)"/><text x="1009.00" y="366.50"></text></g><g><title>0x7f652cdd6bb4 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1013" y="356" width="4" height="15" fill="rgb(207,123,25)"/><text x="1016.00" y="366.50"></text></g><g><title>0x7f652cdd6bd3 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1017" y="356" width="3" height="15" fill="rgb(240,50,47)"/><text x="1020.00" y="366.50"></text></g><g><title>0x7f652cdd6bf9 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1020" y="356" width="7" height="15" fill="rgb(213,112,42)"/><text x="1023.00" y="366.50"></text></g><g><title>0x7f652cdd6c07 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1027" y="356" width="4" height="15" fill="rgb(224,37,31)"/><text x="1030.00" y="366.50"></text></g><g><title>0x7f652cdd6c18 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1031" y="356" width="4" height="15" fill="rgb(212,17,45)"/><text x="1034.00" y="366.50"></text></g><g><title>0x7f652cdd6c3e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1035" y="356" width="3" height="15" fill="rgb(206,43,14)"/><text x="1038.00" y="366.50"></text></g><g><title>0x7f6517f0e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 5.37%)</title><rect x="982" y="324" width="63" height="15" fill="rgb(250,172,21)"/><text x="985.00" y="334.50">0x7f65..</text></g><g><title>exp (libm-2.29.so) (17 samples, 5.07%)</title><rect x="985" y="340" width="60" height="15" fill="rgb(226,206,52)"/><text x="988.00" y="350.50">exp (l..</text></g><g><title>0x7f652cdd6c6a (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1038" y="356" width="7" height="15" fill="rgb(229,114,43)"/><text x="1041.00" y="366.50"></text></g><g><title>0x7f6517f0e275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.90%)</title><rect x="1045" y="324" width="11" height="15" fill="rgb(206,85,33)"/><text x="1048.00" y="334.50"></text></g><g><title>0x7f6517eed9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (39 samples, 11.64%)</title><rect x="982" y="308" width="137" height="15" fill="rgb(251,139,47)"/><text x="985.00" y="318.50">0x7f6517eed9dd (s..</text></g><g><title>0x7f6517f0e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 5.37%)</title><rect x="1056" y="324" width="63" height="15" fill="rgb(209,117,41)"/><text x="1059.00" y="334.50">0x7f65..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (46 samples, 13.73%)</title><rect x="968" y="244" width="162" height="15" fill="rgb(230,145,12)"/><text x="971.00" y="254.50">ufunc_generic_call (..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (44 samples, 13.13%)</title><rect x="975" y="260" width="155" height="15" fill="rgb(244,185,23)"/><text x="978.00" y="270.50">PyUFunc_GenericFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (43 samples, 12.84%)</title><rect x="978" y="276" width="152" height="15" fill="rgb(244,92,10)"/><text x="981.00" y="286.50">execute_legacy_ufun..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (43 samples, 12.84%)</title><rect x="978" y="292" width="152" height="15" fill="rgb(214,218,13)"/><text x="981.00" y="302.50">trivial_two_operand..</text></g><g><title>0x7f6517eed9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.90%)</title><rect x="1119" y="308" width="11" height="15" fill="rgb(211,227,20)"/><text x="1122.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (48 samples, 14.33%)</title><rect x="964" y="228" width="169" height="15" fill="rgb(234,205,10)"/><text x="967.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.30%)</title><rect x="1130" y="244" width="3" height="15" fill="rgb(217,222,11)"/><text x="1133.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.30%)</title><rect x="1133" y="228" width="4" height="15" fill="rgb(246,192,21)"/><text x="1136.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.30%)</title><rect x="1140" y="244" width="4" height="15" fill="rgb(211,206,7)"/><text x="1143.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.30%)</title><rect x="1140" y="260" width="4" height="15" fill="rgb(228,53,51)"/><text x="1143.00" y="270.50"></text></g><g><title>array_argmax (methods.c:297) (3 samples, 0.90%)</title><rect x="1144" y="308" width="10" height="15" fill="rgb(206,204,15)"/><text x="1147.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="1151" y="324" width="3" height="15" fill="rgb(224,216,18)"/><text x="1154.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.30%)</title><rect x="1154" y="324" width="4" height="15" fill="rgb(205,190,44)"/><text x="1157.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="1154" y="340" width="4" height="15" fill="rgb(233,5,14)"/><text x="1157.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.30%)</title><rect x="1154" y="356" width="4" height="15" fill="rgb(249,15,14)"/><text x="1157.00" y="366.50"></text></g><g><title>0x7f652cc24dae (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1154" y="372" width="4" height="15" fill="rgb(221,83,45)"/><text x="1157.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.30%)</title><rect x="1158" y="324" width="3" height="15" fill="rgb(245,182,12)"/><text x="1161.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3127) (1 samples, 0.30%)</title><rect x="1158" y="340" width="3" height="15" fill="rgb(248,173,41)"/><text x="1161.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (97 samples, 28.96%)</title><rect x="823" y="196" width="342" height="15" fill="rgb(254,28,28)"/><text x="826.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (96 samples, 28.66%)</title><rect x="827" y="212" width="338" height="15" fill="rgb(230,174,35)"/><text x="830.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 2.39%)</title><rect x="1137" y="228" width="28" height="15" fill="rgb(226,37,11)"/><text x="1140.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.79%)</title><rect x="1144" y="244" width="21" height="15" fill="rgb(252,182,50)"/><text x="1147.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.79%)</title><rect x="1144" y="260" width="21" height="15" fill="rgb(230,110,38)"/><text x="1147.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.79%)</title><rect x="1144" y="276" width="21" height="15" fill="rgb(236,146,34)"/><text x="1147.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 1.79%)</title><rect x="1144" y="292" width="21" height="15" fill="rgb(229,85,27)"/><text x="1147.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.90%)</title><rect x="1154" y="308" width="11" height="15" fill="rgb(220,102,5)"/><text x="1157.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.30%)</title><rect x="1161" y="324" width="4" height="15" fill="rgb(211,7,24)"/><text x="1164.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (148 samples, 44.18%)</title><rect x="654" y="180" width="521" height="15" fill="rgb(217,184,31)"/><text x="657.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.90%)</title><rect x="1165" y="196" width="10" height="15" fill="rgb(218,173,4)"/><text x="1168.00" y="206.50"></text></g><g><title>0x7f652cc2512b (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1172" y="212" width="3" height="15" fill="rgb(253,41,23)"/><text x="1175.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.60%)</title><rect x="1175" y="180" width="7" height="15" fill="rgb(206,153,39)"/><text x="1178.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.30%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(213,41,40)"/><text x="1185.00" y="190.50"></text></g><g><title>all (335 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,131,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:45) (160 samples, 47.76%)</title><rect x="626" y="52" width="564" height="15" fill="rgb(219,184,49)"/><text x="629.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_1..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:44) (160 samples, 47.76%)</title><rect x="626" y="68" width="564" height="15" fill="rgb(207,10,19)"/><text x="629.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:29) (160 samples, 47.76%)</title><rect x="626" y="84" width="564" height="15" fill="rgb(243,10,30)"/><text x="629.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_100..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_nozipmap.py:23) (160 samples, 47.76%)</title><rect x="626" y="100" width="564" height="15" fill="rgb(243,146,44)"/><text x="629.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 47.76%)</title><rect x="626" y="116" width="564" height="15" fill="rgb(212,149,16)"/><text x="629.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (159 samples, 47.46%)</title><rect x="629" y="132" width="561" height="15" fill="rgb(213,129,20)"/><text x="632.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (158 samples, 47.16%)</title><rect x="633" y="148" width="557" height="15" fill="rgb(243,67,49)"/><text x="636.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (155 samples, 46.27%)</title><rect x="644" y="164" width="546" height="15" fill="rgb(219,157,8)"/><text x="647.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.30%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(239,83,41)"/><text x="1189.00" y="190.50"></text></g></g></svg>