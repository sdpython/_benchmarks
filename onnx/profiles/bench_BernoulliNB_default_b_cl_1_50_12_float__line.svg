<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:930) (2 samples, 0.43%)</title><rect x="12" y="180" width="5" height="15" fill="rgb(242,207,26)"/><text x="15.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.22%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(237,219,44)"/><text x="20.00" y="190.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (8 samples, 1.72%)</title><rect x="12" y="164" width="20" height="15" fill="rgb(246,168,52)"/><text x="15.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.08%)</title><rect x="20" y="180" width="12" height="15" fill="rgb(252,9,4)"/><text x="23.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.86%)</title><rect x="22" y="196" width="10" height="15" fill="rgb(211,169,37)"/><text x="25.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.22%)</title><rect x="30" y="212" width="2" height="15" fill="rgb(227,100,30)"/><text x="33.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.22%)</title><rect x="37" y="212" width="3" height="15" fill="rgb(250,148,54)"/><text x="40.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.22%)</title><rect x="37" y="228" width="3" height="15" fill="rgb(248,225,12)"/><text x="40.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.22%)</title><rect x="40" y="212" width="3" height="15" fill="rgb(243,168,26)"/><text x="43.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.22%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(241,77,29)"/><text x="46.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.43%)</title><rect x="45" y="212" width="5" height="15" fill="rgb(224,77,1)"/><text x="48.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.22%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(239,227,8)"/><text x="51.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.86%)</title><rect x="50" y="212" width="10" height="15" fill="rgb(214,192,21)"/><text x="53.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.86%)</title><rect x="50" y="228" width="10" height="15" fill="rgb(230,110,24)"/><text x="53.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 0.86%)</title><rect x="50" y="244" width="10" height="15" fill="rgb(210,214,11)"/><text x="53.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.22%)</title><rect x="60" y="212" width="3" height="15" fill="rgb(212,131,48)"/><text x="63.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.22%)</title><rect x="60" y="228" width="3" height="15" fill="rgb(232,140,36)"/><text x="63.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.22%)</title><rect x="63" y="212" width="2" height="15" fill="rgb(234,45,13)"/><text x="66.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.22%)</title><rect x="65" y="212" width="3" height="15" fill="rgb(219,204,23)"/><text x="68.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.22%)</title><rect x="68" y="212" width="3" height="15" fill="rgb(250,47,40)"/><text x="71.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.22%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(244,97,13)"/><text x="71.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.65%)</title><rect x="71" y="228" width="7" height="15" fill="rgb(232,199,34)"/><text x="74.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.22%)</title><rect x="76" y="244" width="2" height="15" fill="rgb(245,145,37)"/><text x="79.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.86%)</title><rect x="71" y="212" width="10" height="15" fill="rgb(242,60,2)"/><text x="74.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.22%)</title><rect x="78" y="228" width="3" height="15" fill="rgb(243,190,49)"/><text x="81.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.22%)</title><rect x="78" y="244" width="3" height="15" fill="rgb(214,177,2)"/><text x="81.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.22%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(230,171,39)"/><text x="84.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(254,20,1)"/><text x="84.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.43%)</title><rect x="83" y="228" width="5" height="15" fill="rgb(215,155,42)"/><text x="86.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (25 samples, 5.39%)</title><rect x="35" y="180" width="64" height="15" fill="rgb(216,198,47)"/><text x="38.00" y="190.50">_check_..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (24 samples, 5.17%)</title><rect x="37" y="196" width="62" height="15" fill="rgb(236,15,8)"/><text x="40.00" y="206.50">_check..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.51%)</title><rect x="81" y="212" width="18" height="15" fill="rgb(215,112,39)"/><text x="84.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.86%)</title><rect x="88" y="228" width="11" height="15" fill="rgb(217,191,13)"/><text x="91.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.22%)</title><rect x="96" y="244" width="3" height="15" fill="rgb(240,181,0)"/><text x="99.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.22%)</title><rect x="109" y="212" width="2" height="15" fill="rgb(226,46,0)"/><text x="112.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.22%)</title><rect x="111" y="212" width="3" height="15" fill="rgb(212,22,13)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.22%)</title><rect x="114" y="212" width="2" height="15" fill="rgb(233,35,33)"/><text x="117.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.43%)</title><rect x="116" y="212" width="5" height="15" fill="rgb(224,15,36)"/><text x="119.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.22%)</title><rect x="121" y="212" width="3" height="15" fill="rgb(250,53,22)"/><text x="124.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.22%)</title><rect x="124" y="212" width="2" height="15" fill="rgb(210,209,51)"/><text x="127.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.22%)</title><rect x="124" y="228" width="2" height="15" fill="rgb(250,61,12)"/><text x="127.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.22%)</title><rect x="124" y="244" width="2" height="15" fill="rgb(233,108,37)"/><text x="127.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.22%)</title><rect x="126" y="212" width="3" height="15" fill="rgb(217,48,5)"/><text x="129.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.22%)</title><rect x="126" y="228" width="3" height="15" fill="rgb(226,49,14)"/><text x="129.00" y="238.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.22%)</title><rect x="126" y="244" width="3" height="15" fill="rgb(205,22,0)"/><text x="129.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.22%)</title><rect x="129" y="212" width="3" height="15" fill="rgb(219,100,36)"/><text x="132.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.22%)</title><rect x="132" y="212" width="2" height="15" fill="rgb(244,57,36)"/><text x="135.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.22%)</title><rect x="137" y="228" width="2" height="15" fill="rgb(208,29,26)"/><text x="140.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.65%)</title><rect x="134" y="212" width="8" height="15" fill="rgb(217,204,16)"/><text x="137.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.22%)</title><rect x="139" y="228" width="3" height="15" fill="rgb(236,128,44)"/><text x="142.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.22%)</title><rect x="139" y="244" width="3" height="15" fill="rgb(224,211,34)"/><text x="142.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.22%)</title><rect x="144" y="228" width="3" height="15" fill="rgb(212,72,40)"/><text x="147.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.22%)</title><rect x="147" y="228" width="2" height="15" fill="rgb(220,21,1)"/><text x="150.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.22%)</title><rect x="149" y="228" width="3" height="15" fill="rgb(237,137,38)"/><text x="152.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.29%)</title><rect x="142" y="212" width="15" height="15" fill="rgb(230,68,1)"/><text x="145.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.43%)</title><rect x="152" y="228" width="5" height="15" fill="rgb(215,60,48)"/><text x="155.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.43%)</title><rect x="152" y="244" width="5" height="15" fill="rgb(240,207,48)"/><text x="155.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.22%)</title><rect x="154" y="260" width="3" height="15" fill="rgb(243,105,34)"/><text x="157.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:585) (2 samples, 0.43%)</title><rect x="157" y="212" width="5" height="15" fill="rgb(248,57,53)"/><text x="160.00" y="222.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="160" y="228" width="2" height="15" fill="rgb(225,137,10)"/><text x="163.00" y="238.50"></text></g><g><title>may_share_memory (numpy/core/multiarray.py:1347) (1 samples, 0.22%)</title><rect x="160" y="244" width="2" height="15" fill="rgb(241,24,34)"/><text x="163.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.43%)</title><rect x="167" y="228" width="5" height="15" fill="rgb(210,126,49)"/><text x="170.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="170" y="244" width="2" height="15" fill="rgb(223,106,24)"/><text x="173.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.22%)</title><rect x="172" y="260" width="3" height="15" fill="rgb(208,7,39)"/><text x="175.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:158) (1 samples, 0.22%)</title><rect x="172" y="276" width="3" height="15" fill="rgb(215,112,11)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.22%)</title><rect x="175" y="292" width="2" height="15" fill="rgb(229,94,38)"/><text x="178.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.22%)</title><rect x="175" y="308" width="2" height="15" fill="rgb(237,193,52)"/><text x="178.00" y="318.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (29 samples, 6.25%)</title><rect x="106" y="196" width="74" height="15" fill="rgb(241,184,50)"/><text x="109.00" y="206.50">binarize..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (7 samples, 1.51%)</title><rect x="162" y="212" width="18" height="15" fill="rgb(248,71,38)"/><text x="165.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (3 samples, 0.65%)</title><rect x="172" y="228" width="8" height="15" fill="rgb(223,40,22)"/><text x="175.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (3 samples, 0.65%)</title><rect x="172" y="244" width="8" height="15" fill="rgb(227,102,0)"/><text x="175.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.43%)</title><rect x="175" y="260" width="5" height="15" fill="rgb(226,215,48)"/><text x="178.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.43%)</title><rect x="175" y="276" width="5" height="15" fill="rgb(247,126,45)"/><text x="178.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4061) (1 samples, 0.22%)</title><rect x="177" y="292" width="3" height="15" fill="rgb(229,157,8)"/><text x="180.00" y="302.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1863) (1 samples, 0.22%)</title><rect x="180" y="196" width="2" height="15" fill="rgb(205,124,44)"/><text x="183.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.22%)</title><rect x="180" y="212" width="2" height="15" fill="rgb(250,193,47)"/><text x="183.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.22%)</title><rect x="182" y="260" width="3" height="15" fill="rgb(226,200,26)"/><text x="185.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.43%)</title><rect x="182" y="244" width="6" height="15" fill="rgb(246,54,52)"/><text x="185.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.22%)</title><rect x="185" y="260" width="3" height="15" fill="rgb(234,83,1)"/><text x="188.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.22%)</title><rect x="185" y="276" width="3" height="15" fill="rgb(229,185,10)"/><text x="188.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.22%)</title><rect x="185" y="292" width="3" height="15" fill="rgb(214,143,33)"/><text x="188.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.22%)</title><rect x="185" y="308" width="3" height="15" fill="rgb(229,72,24)"/><text x="188.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.22%)</title><rect x="185" y="324" width="3" height="15" fill="rgb(215,174,38)"/><text x="188.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="188" y="244" width="2" height="15" fill="rgb(224,207,19)"/><text x="191.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.22%)</title><rect x="188" y="260" width="2" height="15" fill="rgb(227,162,44)"/><text x="191.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.22%)</title><rect x="188" y="276" width="2" height="15" fill="rgb(254,13,27)"/><text x="191.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.22%)</title><rect x="188" y="292" width="2" height="15" fill="rgb(225,22,6)"/><text x="191.00" y="302.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1094) (1 samples, 0.22%)</title><rect x="188" y="308" width="2" height="15" fill="rgb(235,53,15)"/><text x="191.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.22%)</title><rect x="190" y="244" width="3" height="15" fill="rgb(231,136,40)"/><text x="193.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.22%)</title><rect x="190" y="260" width="3" height="15" fill="rgb(217,124,34)"/><text x="193.00" y="270.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (5 samples, 1.08%)</title><rect x="182" y="196" width="13" height="15" fill="rgb(245,15,33)"/><text x="185.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (5 samples, 1.08%)</title><rect x="182" y="212" width="13" height="15" fill="rgb(253,208,20)"/><text x="185.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="182" y="228" width="13" height="15" fill="rgb(221,126,43)"/><text x="185.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(225,73,38)"/><text x="196.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.22%)</title><rect x="193" y="260" width="2" height="15" fill="rgb(221,217,16)"/><text x="196.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.22%)</title><rect x="193" y="276" width="2" height="15" fill="rgb(225,169,10)"/><text x="196.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1771) (1 samples, 0.22%)</title><rect x="193" y="292" width="2" height="15" fill="rgb(205,227,26)"/><text x="196.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.22%)</title><rect x="195" y="228" width="3" height="15" fill="rgb(221,2,6)"/><text x="198.00" y="238.50"></text></g><g><title>0x7f06b8956120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="195" y="244" width="3" height="15" fill="rgb(206,38,0)"/><text x="198.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="198" y="228" width="2" height="15" fill="rgb(240,181,45)"/><text x="201.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="198" y="244" width="2" height="15" fill="rgb(210,56,24)"/><text x="201.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.22%)</title><rect x="200" y="228" width="3" height="15" fill="rgb(231,124,15)"/><text x="203.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.22%)</title><rect x="200" y="244" width="3" height="15" fill="rgb(241,157,34)"/><text x="203.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (4 samples, 0.86%)</title><rect x="195" y="196" width="10" height="15" fill="rgb(206,93,27)"/><text x="198.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.86%)</title><rect x="195" y="212" width="10" height="15" fill="rgb(254,12,51)"/><text x="198.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="203" y="228" width="2" height="15" fill="rgb(225,49,11)"/><text x="206.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.22%)</title><rect x="203" y="244" width="2" height="15" fill="rgb(238,92,36)"/><text x="206.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(242,211,41)"/><text x="206.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:961) (1 samples, 0.22%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(236,38,43)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.22%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(210,105,19)"/><text x="208.00" y="270.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.22%)</title><rect x="205" y="276" width="3" height="15" fill="rgb(206,195,37)"/><text x="208.00" y="286.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.43%)</title><rect x="205" y="228" width="5" height="15" fill="rgb(244,97,20)"/><text x="208.00" y="238.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (2 samples, 0.43%)</title><rect x="205" y="244" width="5" height="15" fill="rgb(227,9,32)"/><text x="208.00" y="254.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3871) (1 samples, 0.22%)</title><rect x="208" y="260" width="2" height="15" fill="rgb(251,41,30)"/><text x="211.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="210" y="260" width="3" height="15" fill="rgb(216,222,20)"/><text x="213.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.22%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(242,9,2)"/><text x="216.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:937) (1 samples, 0.22%)</title><rect x="213" y="292" width="2" height="15" fill="rgb(216,196,21)"/><text x="216.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.43%)</title><rect x="213" y="260" width="5" height="15" fill="rgb(243,135,31)"/><text x="216.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="215" y="276" width="3" height="15" fill="rgb(240,149,10)"/><text x="218.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1064) (1 samples, 0.22%)</title><rect x="215" y="292" width="3" height="15" fill="rgb(207,1,4)"/><text x="218.00" y="302.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1240) (4 samples, 0.86%)</title><rect x="210" y="228" width="11" height="15" fill="rgb(249,199,34)"/><text x="213.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (4 samples, 0.86%)</title><rect x="210" y="244" width="11" height="15" fill="rgb(251,20,48)"/><text x="213.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:296) (1 samples, 0.22%)</title><rect x="218" y="260" width="3" height="15" fill="rgb(235,90,1)"/><text x="221.00" y="270.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (75 samples, 16.16%)</title><rect x="32" y="164" width="191" height="15" fill="rgb(210,86,30)"/><text x="35.00" y="174.50">predict_log_proba (sklea..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (49 samples, 10.56%)</title><rect x="99" y="180" width="124" height="15" fill="rgb(224,139,26)"/><text x="102.00" y="190.50">_check_X (sklea..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (7 samples, 1.51%)</title><rect x="205" y="196" width="18" height="15" fill="rgb(250,77,51)"/><text x="208.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (7 samples, 1.51%)</title><rect x="205" y="212" width="18" height="15" fill="rgb(252,163,13)"/><text x="208.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1260) (1 samples, 0.22%)</title><rect x="221" y="228" width="2" height="15" fill="rgb(205,148,7)"/><text x="224.00" y="238.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.22%)</title><rect x="221" y="244" width="2" height="15" fill="rgb(236,149,1)"/><text x="224.00" y="254.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.22%)</title><rect x="221" y="260" width="2" height="15" fill="rgb(240,229,54)"/><text x="224.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.22%)</title><rect x="226" y="212" width="2" height="15" fill="rgb(209,82,17)"/><text x="229.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3178) (1 samples, 0.22%)</title><rect x="228" y="228" width="3" height="15" fill="rgb(236,87,27)"/><text x="231.00" y="238.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.65%)</title><rect x="226" y="196" width="7" height="15" fill="rgb(231,187,51)"/><text x="229.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="228" y="212" width="5" height="15" fill="rgb(216,203,16)"/><text x="231.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="231" y="228" width="2" height="15" fill="rgb(239,202,19)"/><text x="234.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.22%)</title><rect x="231" y="244" width="2" height="15" fill="rgb(233,33,21)"/><text x="234.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.22%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(242,197,25)"/><text x="234.00" y="270.50"></text></g><g><title>0x7f06b7b57e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="231" y="276" width="2" height="15" fill="rgb(227,36,14)"/><text x="234.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="233" y="212" width="3" height="15" fill="rgb(235,46,47)"/><text x="236.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1081) (1 samples, 0.22%)</title><rect x="233" y="228" width="3" height="15" fill="rgb(230,79,4)"/><text x="236.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="236" y="212" width="2" height="15" fill="rgb(205,196,41)"/><text x="239.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="236" y="228" width="2" height="15" fill="rgb(234,219,14)"/><text x="239.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1637) (1 samples, 0.22%)</title><rect x="236" y="244" width="2" height="15" fill="rgb(235,103,15)"/><text x="239.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.22%)</title><rect x="238" y="228" width="3" height="15" fill="rgb(215,58,19)"/><text x="241.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="238" y="244" width="3" height="15" fill="rgb(210,147,38)"/><text x="241.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="238" y="260" width="3" height="15" fill="rgb(220,120,37)"/><text x="241.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="238" y="276" width="3" height="15" fill="rgb(205,54,51)"/><text x="241.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="238" y="292" width="3" height="15" fill="rgb(219,161,51)"/><text x="241.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="238" y="308" width="3" height="15" fill="rgb(228,94,50)"/><text x="241.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="238" y="324" width="3" height="15" fill="rgb(235,63,30)"/><text x="241.00" y="334.50"></text></g><g><title>0x7f06b8b07e25 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(242,138,37)"/><text x="244.00" y="286.50"></text></g><g><title>0x7f06b8b07c2e (libm-2.29.so) (1 samples, 0.22%)</title><rect x="246" y="292" width="3" height="15" fill="rgb(213,210,3)"/><text x="249.00" y="302.50"></text></g><g><title>0x7f06b8b07c3a (libm-2.29.so) (1 samples, 0.22%)</title><rect x="249" y="292" width="2" height="15" fill="rgb(221,87,7)"/><text x="252.00" y="302.50"></text></g><g><title>0x7f06b8b07c52 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="251" y="292" width="3" height="15" fill="rgb(224,95,39)"/><text x="254.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.51%)</title><rect x="238" y="212" width="18" height="15" fill="rgb(241,121,40)"/><text x="241.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (6 samples, 1.29%)</title><rect x="241" y="228" width="15" height="15" fill="rgb(249,102,5)"/><text x="244.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (6 samples, 1.29%)</title><rect x="241" y="244" width="15" height="15" fill="rgb(230,144,36)"/><text x="244.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (6 samples, 1.29%)</title><rect x="241" y="260" width="15" height="15" fill="rgb(252,206,36)"/><text x="244.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (5 samples, 1.08%)</title><rect x="243" y="276" width="13" height="15" fill="rgb(229,65,3)"/><text x="246.00" y="286.50"></text></g><g><title>0x7f06b8b07c7f (libm-2.29.so) (1 samples, 0.22%)</title><rect x="254" y="292" width="2" height="15" fill="rgb(254,53,0)"/><text x="257.00" y="302.50"></text></g><g><title>0x7f06b7b577c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="256" y="228" width="3" height="15" fill="rgb(216,18,32)"/><text x="259.00" y="238.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (15 samples, 3.23%)</title><rect x="223" y="180" width="38" height="15" fill="rgb(233,221,48)"/><text x="226.00" y="190.50">_jo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.37%)</title><rect x="233" y="196" width="28" height="15" fill="rgb(237,139,24)"/><text x="236.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (2 samples, 0.43%)</title><rect x="256" y="212" width="5" height="15" fill="rgb(237,118,9)"/><text x="259.00" y="222.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.22%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(211,99,1)"/><text x="262.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.22%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(227,206,31)"/><text x="262.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.22%)</title><rect x="264" y="228" width="2" height="15" fill="rgb(220,108,26)"/><text x="267.00" y="238.50"></text></g><g><title>0x7f06b8956120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="264" y="244" width="2" height="15" fill="rgb(254,86,35)"/><text x="267.00" y="254.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.43%)</title><rect x="264" y="196" width="5" height="15" fill="rgb(216,108,53)"/><text x="267.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="264" y="212" width="5" height="15" fill="rgb(211,31,37)"/><text x="267.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="266" y="228" width="3" height="15" fill="rgb(207,186,2)"/><text x="269.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.22%)</title><rect x="266" y="244" width="3" height="15" fill="rgb(207,6,4)"/><text x="269.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.22%)</title><rect x="266" y="260" width="3" height="15" fill="rgb(233,45,20)"/><text x="269.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.22%)</title><rect x="266" y="276" width="3" height="15" fill="rgb(242,9,33)"/><text x="269.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.22%)</title><rect x="266" y="292" width="3" height="15" fill="rgb(250,224,25)"/><text x="269.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:590) (1 samples, 0.22%)</title><rect x="266" y="308" width="3" height="15" fill="rgb(222,13,29)"/><text x="269.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="269" y="260" width="2" height="15" fill="rgb(229,117,43)"/><text x="272.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1919) (1 samples, 0.22%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(238,216,1)"/><text x="272.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.43%)</title><rect x="269" y="244" width="5" height="15" fill="rgb(213,44,27)"/><text x="272.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.22%)</title><rect x="271" y="260" width="3" height="15" fill="rgb(248,217,20)"/><text x="274.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.22%)</title><rect x="271" y="276" width="3" height="15" fill="rgb(238,182,2)"/><text x="274.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.22%)</title><rect x="271" y="292" width="3" height="15" fill="rgb(225,117,39)"/><text x="274.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="274" y="260" width="3" height="15" fill="rgb(250,197,37)"/><text x="277.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.22%)</title><rect x="274" y="276" width="3" height="15" fill="rgb(245,120,49)"/><text x="277.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (5 samples, 1.08%)</title><rect x="269" y="196" width="13" height="15" fill="rgb(205,80,36)"/><text x="272.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="269" y="212" width="13" height="15" fill="rgb(231,79,50)"/><text x="272.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (5 samples, 1.08%)</title><rect x="269" y="228" width="13" height="15" fill="rgb(230,81,35)"/><text x="272.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.65%)</title><rect x="274" y="244" width="8" height="15" fill="rgb(254,6,15)"/><text x="277.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.43%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(224,131,50)"/><text x="280.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.43%)</title><rect x="277" y="276" width="5" height="15" fill="rgb(229,78,12)"/><text x="280.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.43%)</title><rect x="277" y="292" width="5" height="15" fill="rgb(229,25,5)"/><text x="280.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.43%)</title><rect x="277" y="308" width="5" height="15" fill="rgb(207,129,26)"/><text x="280.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (2 samples, 0.43%)</title><rect x="277" y="324" width="5" height="15" fill="rgb(209,159,12)"/><text x="280.00" y="334.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (12 samples, 2.59%)</title><rect x="261" y="180" width="31" height="15" fill="rgb(220,44,19)"/><text x="264.00" y="190.50">_j..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 0.86%)</title><rect x="282" y="196" width="10" height="15" fill="rgb(250,113,20)"/><text x="285.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (4 samples, 0.86%)</title><rect x="282" y="212" width="10" height="15" fill="rgb(211,219,24)"/><text x="285.00" y="222.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.22%)</title><rect x="294" y="196" width="3" height="15" fill="rgb(224,143,53)"/><text x="297.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:349) (1 samples, 0.22%)</title><rect x="294" y="212" width="3" height="15" fill="rgb(233,101,3)"/><text x="297.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c:281) (1 samples, 0.22%)</title><rect x="294" y="228" width="3" height="15" fill="rgb(219,192,23)"/><text x="297.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.22%)</title><rect x="297" y="324" width="2" height="15" fill="rgb(242,110,0)"/><text x="300.00" y="334.50"></text></g><g><title>0x7f06b7b58a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="297" y="340" width="2" height="15" fill="rgb(250,197,23)"/><text x="300.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.43%)</title><rect x="297" y="244" width="5" height="15" fill="rgb(216,197,27)"/><text x="300.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.43%)</title><rect x="297" y="260" width="5" height="15" fill="rgb(236,107,35)"/><text x="300.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.43%)</title><rect x="297" y="276" width="5" height="15" fill="rgb(214,8,0)"/><text x="300.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.43%)</title><rect x="297" y="292" width="5" height="15" fill="rgb(212,215,10)"/><text x="300.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.43%)</title><rect x="297" y="308" width="5" height="15" fill="rgb(227,186,20)"/><text x="300.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="299" y="324" width="3" height="15" fill="rgb(214,217,20)"/><text x="302.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4452) (1 samples, 0.22%)</title><rect x="302" y="260" width="3" height="15" fill="rgb(216,186,31)"/><text x="305.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.22%)</title><rect x="305" y="260" width="2" height="15" fill="rgb(227,177,38)"/><text x="308.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.22%)</title><rect x="307" y="292" width="3" height="15" fill="rgb(228,161,33)"/><text x="310.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.22%)</title><rect x="307" y="308" width="3" height="15" fill="rgb(243,88,13)"/><text x="310.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.22%)</title><rect x="307" y="324" width="3" height="15" fill="rgb(221,136,28)"/><text x="310.00" y="334.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.22%)</title><rect x="307" y="340" width="3" height="15" fill="rgb(239,216,35)"/><text x="310.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.22%)</title><rect x="307" y="356" width="3" height="15" fill="rgb(238,101,1)"/><text x="310.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.22%)</title><rect x="310" y="292" width="2" height="15" fill="rgb(242,72,36)"/><text x="313.00" y="302.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="310" y="308" width="2" height="15" fill="rgb(241,225,27)"/><text x="313.00" y="318.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.22%)</title><rect x="310" y="324" width="2" height="15" fill="rgb(226,53,37)"/><text x="313.00" y="334.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="310" y="340" width="2" height="15" fill="rgb(231,106,26)"/><text x="313.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.51%)</title><rect x="297" y="196" width="18" height="15" fill="rgb(230,17,35)"/><text x="300.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.51%)</title><rect x="297" y="212" width="18" height="15" fill="rgb(252,224,34)"/><text x="300.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 1.51%)</title><rect x="297" y="228" width="18" height="15" fill="rgb(224,86,17)"/><text x="300.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.08%)</title><rect x="302" y="244" width="13" height="15" fill="rgb(225,31,53)"/><text x="305.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.65%)</title><rect x="307" y="260" width="8" height="15" fill="rgb(249,223,38)"/><text x="310.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.65%)</title><rect x="307" y="276" width="8" height="15" fill="rgb(219,228,4)"/><text x="310.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.22%)</title><rect x="312" y="292" width="3" height="15" fill="rgb(205,49,53)"/><text x="315.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3485) (1 samples, 0.22%)</title><rect x="312" y="308" width="3" height="15" fill="rgb(228,127,37)"/><text x="315.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="315" y="212" width="2" height="15" fill="rgb(237,163,10)"/><text x="318.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.22%)</title><rect x="315" y="228" width="2" height="15" fill="rgb(207,186,15)"/><text x="318.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.22%)</title><rect x="317" y="244" width="3" height="15" fill="rgb(236,158,41)"/><text x="320.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="320" y="260" width="2" height="15" fill="rgb(244,79,34)"/><text x="323.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.22%)</title><rect x="320" y="276" width="2" height="15" fill="rgb(221,77,5)"/><text x="323.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.22%)</title><rect x="322" y="260" width="3" height="15" fill="rgb(242,149,54)"/><text x="325.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.22%)</title><rect x="322" y="276" width="3" height="15" fill="rgb(253,208,41)"/><text x="325.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.65%)</title><rect x="320" y="244" width="7" height="15" fill="rgb(244,22,40)"/><text x="323.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="325" y="260" width="2" height="15" fill="rgb(243,18,41)"/><text x="328.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.22%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(232,169,26)"/><text x="328.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (15 samples, 3.23%)</title><rect x="292" y="180" width="38" height="15" fill="rgb(237,152,13)"/><text x="295.00" y="190.50">_jo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.29%)</title><rect x="315" y="196" width="15" height="15" fill="rgb(238,161,27)"/><text x="318.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.08%)</title><rect x="317" y="212" width="13" height="15" fill="rgb(235,36,24)"/><text x="320.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.08%)</title><rect x="317" y="228" width="13" height="15" fill="rgb(221,25,25)"/><text x="320.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.22%)</title><rect x="327" y="244" width="3" height="15" fill="rgb(252,114,5)"/><text x="330.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.22%)</title><rect x="327" y="260" width="3" height="15" fill="rgb(221,119,31)"/><text x="330.00" y="270.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (43 samples, 9.27%)</title><rect x="223" y="164" width="109" height="15" fill="rgb(254,128,31)"/><text x="226.00" y="174.50">predict_log_p..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.22%)</title><rect x="330" y="180" width="2" height="15" fill="rgb(233,151,3)"/><text x="333.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.22%)</title><rect x="330" y="196" width="2" height="15" fill="rgb(227,81,13)"/><text x="333.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.22%)</title><rect x="330" y="212" width="2" height="15" fill="rgb(219,10,17)"/><text x="333.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.22%)</title><rect x="330" y="228" width="2" height="15" fill="rgb(212,99,23)"/><text x="333.00" y="238.50"></text></g><g><title>0x7f06b8935945 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="330" y="244" width="2" height="15" fill="rgb(251,175,8)"/><text x="333.00" y="254.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.43%)</title><rect x="335" y="196" width="5" height="15" fill="rgb(206,69,18)"/><text x="338.00" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.43%)</title><rect x="343" y="244" width="5" height="15" fill="rgb(228,28,33)"/><text x="346.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.22%)</title><rect x="350" y="276" width="3" height="15" fill="rgb(212,178,36)"/><text x="353.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="353" y="308" width="2" height="15" fill="rgb(226,143,26)"/><text x="356.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="353" y="324" width="2" height="15" fill="rgb(230,194,49)"/><text x="356.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="353" y="340" width="2" height="15" fill="rgb(251,40,23)"/><text x="356.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(218,228,20)"/><text x="356.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.22%)</title><rect x="353" y="372" width="2" height="15" fill="rgb(245,77,2)"/><text x="356.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.22%)</title><rect x="353" y="388" width="2" height="15" fill="rgb(238,219,36)"/><text x="356.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.22%)</title><rect x="353" y="404" width="2" height="15" fill="rgb(223,189,53)"/><text x="356.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.22%)</title><rect x="353" y="420" width="2" height="15" fill="rgb(209,69,1)"/><text x="356.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.22%)</title><rect x="355" y="308" width="3" height="15" fill="rgb(254,216,7)"/><text x="358.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.22%)</title><rect x="355" y="324" width="3" height="15" fill="rgb(235,1,22)"/><text x="358.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.22%)</title><rect x="355" y="340" width="3" height="15" fill="rgb(215,205,14)"/><text x="358.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="355" y="356" width="3" height="15" fill="rgb(214,128,45)"/><text x="358.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4036) (1 samples, 0.22%)</title><rect x="355" y="372" width="3" height="15" fill="rgb(219,196,25)"/><text x="358.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="358" y="308" width="2" height="15" fill="rgb(207,205,46)"/><text x="361.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="358" y="324" width="2" height="15" fill="rgb(223,115,14)"/><text x="361.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.22%)</title><rect x="360" y="324" width="3" height="15" fill="rgb(205,137,17)"/><text x="363.00" y="334.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (13 samples, 2.80%)</title><rect x="332" y="180" width="34" height="15" fill="rgb(218,207,41)"/><text x="335.00" y="190.50">lo..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (10 samples, 2.16%)</title><rect x="340" y="196" width="26" height="15" fill="rgb(234,114,38)"/><text x="343.00" y="206.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 2.16%)</title><rect x="340" y="212" width="26" height="15" fill="rgb(210,88,34)"/><text x="343.00" y="222.50">a..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (9 samples, 1.94%)</title><rect x="343" y="228" width="23" height="15" fill="rgb(205,74,50)"/><text x="346.00" y="238.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 1.51%)</title><rect x="348" y="244" width="18" height="15" fill="rgb(208,54,54)"/><text x="351.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.29%)</title><rect x="350" y="260" width="16" height="15" fill="rgb(223,190,18)"/><text x="353.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.08%)</title><rect x="353" y="276" width="13" height="15" fill="rgb(227,217,35)"/><text x="356.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.08%)</title><rect x="353" y="292" width="13" height="15" fill="rgb(229,8,35)"/><text x="356.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.43%)</title><rect x="360" y="308" width="6" height="15" fill="rgb(229,164,29)"/><text x="363.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.22%)</title><rect x="363" y="324" width="3" height="15" fill="rgb(219,155,44)"/><text x="366.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.22%)</title><rect x="363" y="340" width="3" height="15" fill="rgb(215,220,51)"/><text x="366.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.22%)</title><rect x="363" y="356" width="3" height="15" fill="rgb(207,130,14)"/><text x="366.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.22%)</title><rect x="363" y="372" width="3" height="15" fill="rgb(254,204,34)"/><text x="366.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="363" y="388" width="3" height="15" fill="rgb(248,9,18)"/><text x="366.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.22%)</title><rect x="363" y="404" width="3" height="15" fill="rgb(212,224,40)"/><text x="366.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="363" y="420" width="3" height="15" fill="rgb(234,61,6)"/><text x="366.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.22%)</title><rect x="366" y="196" width="2" height="15" fill="rgb(216,169,49)"/><text x="369.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.22%)</title><rect x="366" y="212" width="2" height="15" fill="rgb(223,37,11)"/><text x="369.00" y="222.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.22%)</title><rect x="366" y="228" width="2" height="15" fill="rgb(249,106,16)"/><text x="369.00" y="238.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.22%)</title><rect x="366" y="244" width="2" height="15" fill="rgb(227,161,39)"/><text x="369.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="366" y="260" width="2" height="15" fill="rgb(242,172,13)"/><text x="369.00" y="270.50"></text></g><g><title>0x7f06b8955d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="366" y="276" width="2" height="15" fill="rgb(222,201,36)"/><text x="369.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="368" y="228" width="3" height="15" fill="rgb(227,164,21)"/><text x="371.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.22%)</title><rect x="368" y="244" width="3" height="15" fill="rgb(225,90,49)"/><text x="371.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.22%)</title><rect x="368" y="260" width="3" height="15" fill="rgb(249,53,22)"/><text x="371.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.22%)</title><rect x="368" y="276" width="3" height="15" fill="rgb(225,19,35)"/><text x="371.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.22%)</title><rect x="368" y="292" width="3" height="15" fill="rgb(241,121,1)"/><text x="371.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.22%)</title><rect x="368" y="308" width="3" height="15" fill="rgb(233,179,15)"/><text x="371.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.43%)</title><rect x="368" y="212" width="5" height="15" fill="rgb(206,8,25)"/><text x="371.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.22%)</title><rect x="371" y="228" width="2" height="15" fill="rgb(217,24,38)"/><text x="374.00" y="238.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1759) (1 samples, 0.22%)</title><rect x="371" y="244" width="2" height="15" fill="rgb(222,13,25)"/><text x="374.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.22%)</title><rect x="373" y="244" width="3" height="15" fill="rgb(254,42,20)"/><text x="376.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (3 samples, 0.65%)</title><rect x="373" y="228" width="8" height="15" fill="rgb(248,190,8)"/><text x="376.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (2 samples, 0.43%)</title><rect x="376" y="244" width="5" height="15" fill="rgb(254,186,49)"/><text x="379.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.29%)</title><rect x="368" y="196" width="15" height="15" fill="rgb(252,167,50)"/><text x="371.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="373" y="212" width="10" height="15" fill="rgb(251,129,1)"/><text x="376.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.22%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(211,170,37)"/><text x="384.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(205,220,50)"/><text x="384.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.22%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(246,87,50)"/><text x="384.00" y="270.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.22%)</title><rect x="381" y="276" width="2" height="15" fill="rgb(240,207,19)"/><text x="384.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1950) (1 samples, 0.22%)</title><rect x="383" y="212" width="3" height="15" fill="rgb(220,47,14)"/><text x="386.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (9 samples, 1.94%)</title><rect x="366" y="180" width="22" height="15" fill="rgb(247,169,4)"/><text x="369.00" y="190.50">l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.43%)</title><rect x="383" y="196" width="5" height="15" fill="rgb(251,133,34)"/><text x="386.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.22%)</title><rect x="386" y="212" width="2" height="15" fill="rgb(214,65,52)"/><text x="389.00" y="222.50"></text></g><g><title>array_subtract (number.c:334) (1 samples, 0.22%)</title><rect x="388" y="196" width="3" height="15" fill="rgb(246,145,27)"/><text x="391.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="391" y="228" width="3" height="15" fill="rgb(223,137,12)"/><text x="394.00" y="238.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.22%)</title><rect x="391" y="244" width="3" height="15" fill="rgb(243,215,17)"/><text x="394.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="391" y="260" width="3" height="15" fill="rgb(250,128,26)"/><text x="394.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.22%)</title><rect x="391" y="276" width="3" height="15" fill="rgb(253,118,1)"/><text x="394.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.22%)</title><rect x="391" y="292" width="3" height="15" fill="rgb(212,31,39)"/><text x="394.00" y="302.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.22%)</title><rect x="391" y="308" width="3" height="15" fill="rgb(241,18,2)"/><text x="394.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="394" y="228" width="2" height="15" fill="rgb(252,197,6)"/><text x="397.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.22%)</title><rect x="394" y="244" width="2" height="15" fill="rgb(213,86,2)"/><text x="397.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="396" y="276" width="3" height="15" fill="rgb(212,122,8)"/><text x="399.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="396" y="292" width="3" height="15" fill="rgb(232,76,28)"/><text x="399.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.22%)</title><rect x="396" y="308" width="3" height="15" fill="rgb(219,59,7)"/><text x="399.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.22%)</title><rect x="396" y="324" width="3" height="15" fill="rgb(254,158,39)"/><text x="399.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.22%)</title><rect x="396" y="340" width="3" height="15" fill="rgb(209,186,50)"/><text x="399.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="399" y="276" width="2" height="15" fill="rgb(230,91,15)"/><text x="402.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.22%)</title><rect x="399" y="292" width="2" height="15" fill="rgb(234,192,3)"/><text x="402.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.65%)</title><rect x="396" y="260" width="8" height="15" fill="rgb(240,61,35)"/><text x="399.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="401" y="276" width="3" height="15" fill="rgb(247,118,11)"/><text x="404.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.22%)</title><rect x="401" y="292" width="3" height="15" fill="rgb(244,140,30)"/><text x="404.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.22%)</title><rect x="401" y="308" width="3" height="15" fill="rgb(236,20,34)"/><text x="404.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.22%)</title><rect x="401" y="324" width="3" height="15" fill="rgb(218,71,46)"/><text x="404.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 1.29%)</title><rect x="391" y="196" width="15" height="15" fill="rgb(212,145,39)"/><text x="394.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.29%)</title><rect x="391" y="212" width="15" height="15" fill="rgb(246,160,52)"/><text x="394.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="396" y="228" width="10" height="15" fill="rgb(207,186,23)"/><text x="399.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.86%)</title><rect x="396" y="244" width="10" height="15" fill="rgb(244,120,26)"/><text x="399.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="404" y="260" width="2" height="15" fill="rgb(231,145,37)"/><text x="407.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.22%)</title><rect x="404" y="276" width="2" height="15" fill="rgb(246,124,10)"/><text x="407.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.22%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(230,110,52)"/><text x="407.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (8 samples, 1.72%)</title><rect x="388" y="180" width="21" height="15" fill="rgb(212,100,54)"/><text x="391.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="406" y="196" width="3" height="15" fill="rgb(217,222,27)"/><text x="409.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="406" y="212" width="3" height="15" fill="rgb(212,97,34)"/><text x="409.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.22%)</title><rect x="406" y="228" width="3" height="15" fill="rgb(218,225,18)"/><text x="409.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.22%)</title><rect x="416" y="212" width="3" height="15" fill="rgb(210,194,22)"/><text x="419.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (1 samples, 0.22%)</title><rect x="416" y="228" width="3" height="15" fill="rgb(240,96,2)"/><text x="419.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:120) (1 samples, 0.22%)</title><rect x="419" y="212" width="2" height="15" fill="rgb(245,86,36)"/><text x="422.00" y="222.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:127) (1 samples, 0.22%)</title><rect x="421" y="212" width="3" height="15" fill="rgb(247,72,43)"/><text x="424.00" y="222.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:132) (1 samples, 0.22%)</title><rect x="424" y="212" width="3" height="15" fill="rgb(230,167,8)"/><text x="427.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (8 samples, 1.72%)</title><rect x="409" y="180" width="20" height="15" fill="rgb(247,137,22)"/><text x="412.00" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (5 samples, 1.08%)</title><rect x="416" y="196" width="13" height="15" fill="rgb(214,107,14)"/><text x="419.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.22%)</title><rect x="427" y="212" width="2" height="15" fill="rgb(211,149,12)"/><text x="430.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.22%)</title><rect x="427" y="228" width="2" height="15" fill="rgb(239,182,45)"/><text x="430.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.22%)</title><rect x="427" y="244" width="2" height="15" fill="rgb(245,126,48)"/><text x="430.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c:260) (1 samples, 0.22%)</title><rect x="427" y="260" width="2" height="15" fill="rgb(251,78,28)"/><text x="430.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.22%)</title><rect x="434" y="212" width="3" height="15" fill="rgb(206,0,39)"/><text x="437.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.22%)</title><rect x="437" y="228" width="2" height="15" fill="rgb(213,217,47)"/><text x="440.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.22%)</title><rect x="442" y="244" width="2" height="15" fill="rgb(252,184,22)"/><text x="445.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.22%)</title><rect x="442" y="260" width="2" height="15" fill="rgb(239,13,53)"/><text x="445.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.22%)</title><rect x="444" y="260" width="3" height="15" fill="rgb(234,113,20)"/><text x="447.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="444" y="276" width="3" height="15" fill="rgb(223,118,1)"/><text x="447.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.22%)</title><rect x="444" y="292" width="3" height="15" fill="rgb(250,196,45)"/><text x="447.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.22%)</title><rect x="444" y="308" width="3" height="15" fill="rgb(214,179,43)"/><text x="447.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="444" y="324" width="3" height="15" fill="rgb(246,57,6)"/><text x="447.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.22%)</title><rect x="447" y="276" width="2" height="15" fill="rgb(235,171,27)"/><text x="450.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.22%)</title><rect x="449" y="292" width="3" height="15" fill="rgb(235,6,33)"/><text x="452.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.22%)</title><rect x="449" y="308" width="3" height="15" fill="rgb(248,72,31)"/><text x="452.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:233) (1 samples, 0.22%)</title><rect x="449" y="324" width="3" height="15" fill="rgb(219,102,38)"/><text x="452.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.22%)</title><rect x="452" y="292" width="3" height="15" fill="rgb(225,132,8)"/><text x="455.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.22%)</title><rect x="452" y="308" width="3" height="15" fill="rgb(221,215,19)"/><text x="455.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.22%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(212,80,36)"/><text x="455.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2199) (1 samples, 0.22%)</title><rect x="452" y="340" width="3" height="15" fill="rgb(248,115,11)"/><text x="455.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(215,28,18)"/><text x="458.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(228,60,29)"/><text x="458.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.22%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(205,68,20)"/><text x="458.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(212,69,31)"/><text x="458.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(208,97,6)"/><text x="458.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (12 samples, 2.59%)</title><rect x="429" y="180" width="31" height="15" fill="rgb(245,123,27)"/><text x="432.00" y="190.50">lo..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 2.16%)</title><rect x="434" y="196" width="26" height="15" fill="rgb(235,193,39)"/><text x="437.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.94%)</title><rect x="437" y="212" width="23" height="15" fill="rgb(245,211,2)"/><text x="440.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (8 samples, 1.72%)</title><rect x="439" y="228" width="21" height="15" fill="rgb(207,65,38)"/><text x="442.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (6 samples, 1.29%)</title><rect x="444" y="244" width="16" height="15" fill="rgb(215,76,23)"/><text x="447.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.08%)</title><rect x="447" y="260" width="13" height="15" fill="rgb(210,166,48)"/><text x="450.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.86%)</title><rect x="449" y="276" width="11" height="15" fill="rgb(209,190,27)"/><text x="452.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.43%)</title><rect x="455" y="292" width="5" height="15" fill="rgb(252,19,19)"/><text x="458.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:584) (1 samples, 0.22%)</title><rect x="457" y="308" width="3" height="15" fill="rgb(206,141,25)"/><text x="460.00" y="318.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.22%)</title><rect x="467" y="212" width="3" height="15" fill="rgb(226,143,14)"/><text x="470.00" y="222.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.22%)</title><rect x="467" y="228" width="3" height="15" fill="rgb(216,205,15)"/><text x="470.00" y="238.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (1 samples, 0.22%)</title><rect x="470" y="228" width="2" height="15" fill="rgb(223,21,17)"/><text x="473.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.43%)</title><rect x="470" y="212" width="5" height="15" fill="rgb(216,146,28)"/><text x="473.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.22%)</title><rect x="472" y="228" width="3" height="15" fill="rgb(218,39,1)"/><text x="475.00" y="238.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.22%)</title><rect x="475" y="212" width="2" height="15" fill="rgb(246,180,5)"/><text x="478.00" y="222.50"></text></g><g><title>_extract_pyvals (extobj.c:260) (1 samples, 0.22%)</title><rect x="477" y="260" width="3" height="15" fill="rgb(235,128,28)"/><text x="480.00" y="270.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (9 samples, 1.94%)</title><rect x="460" y="180" width="23" height="15" fill="rgb(209,23,32)"/><text x="463.00" y="190.50">l..</text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (8 samples, 1.72%)</title><rect x="462" y="196" width="21" height="15" fill="rgb(217,4,19)"/><text x="465.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (2 samples, 0.43%)</title><rect x="477" y="212" width="6" height="15" fill="rgb(254,167,52)"/><text x="480.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (2 samples, 0.43%)</title><rect x="477" y="228" width="6" height="15" fill="rgb(208,211,42)"/><text x="480.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (2 samples, 0.43%)</title><rect x="477" y="244" width="6" height="15" fill="rgb(238,111,45)"/><text x="480.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c:261) (1 samples, 0.22%)</title><rect x="480" y="260" width="3" height="15" fill="rgb(215,160,35)"/><text x="483.00" y="270.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="483" y="196" width="2" height="15" fill="rgb(246,52,49)"/><text x="486.00" y="206.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py:1432) (1 samples, 0.22%)</title><rect x="485" y="228" width="3" height="15" fill="rgb(230,104,11)"/><text x="488.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (3 samples, 0.65%)</title><rect x="483" y="180" width="7" height="15" fill="rgb(249,74,9)"/><text x="486.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (2 samples, 0.43%)</title><rect x="485" y="196" width="5" height="15" fill="rgb(227,157,30)"/><text x="488.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.43%)</title><rect x="485" y="212" width="5" height="15" fill="rgb(225,93,41)"/><text x="488.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py:1438) (1 samples, 0.22%)</title><rect x="488" y="228" width="2" height="15" fill="rgb(228,108,47)"/><text x="491.00" y="238.50"></text></g><g><title>array_squeeze (methods.c:241) (1 samples, 0.22%)</title><rect x="488" y="244" width="2" height="15" fill="rgb(211,24,33)"/><text x="491.00" y="254.50"></text></g><g><title>PyArray_SqueezeSelected (shape.c:610) (1 samples, 0.22%)</title><rect x="488" y="260" width="2" height="15" fill="rgb(251,170,42)"/><text x="491.00" y="270.50"></text></g><g><title>PyArray_View (convert.c:597) (1 samples, 0.22%)</title><rect x="488" y="276" width="2" height="15" fill="rgb(248,35,34)"/><text x="491.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.22%)</title><rect x="488" y="292" width="2" height="15" fill="rgb(209,125,50)"/><text x="491.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:124) (1 samples, 0.22%)</title><rect x="490" y="180" width="3" height="15" fill="rgb(205,161,40)"/><text x="493.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="490" y="196" width="3" height="15" fill="rgb(230,160,13)"/><text x="493.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="490" y="212" width="3" height="15" fill="rgb(224,170,15)"/><text x="493.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.22%)</title><rect x="490" y="228" width="3" height="15" fill="rgb(227,14,51)"/><text x="493.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.22%)</title><rect x="490" y="244" width="3" height="15" fill="rgb(224,25,11)"/><text x="493.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.22%)</title><rect x="490" y="260" width="3" height="15" fill="rgb(230,37,53)"/><text x="493.00" y="270.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:701) (1 samples, 0.22%)</title><rect x="490" y="276" width="3" height="15" fill="rgb(224,207,22)"/><text x="493.00" y="286.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:229) (1 samples, 0.22%)</title><rect x="493" y="196" width="2" height="15" fill="rgb(240,21,37)"/><text x="496.00" y="206.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:230) (1 samples, 0.22%)</title><rect x="495" y="196" width="3" height="15" fill="rgb(228,120,24)"/><text x="498.00" y="206.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:236) (2 samples, 0.43%)</title><rect x="498" y="196" width="5" height="15" fill="rgb(217,82,40)"/><text x="501.00" y="206.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (68 samples, 14.66%)</title><rect x="332" y="164" width="173" height="15" fill="rgb(208,75,15)"/><text x="335.00" y="174.50">predict_log_proba (skl..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (5 samples, 1.08%)</title><rect x="493" y="180" width="12" height="15" fill="rgb(222,79,32)"/><text x="496.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:238) (1 samples, 0.22%)</title><rect x="503" y="196" width="2" height="15" fill="rgb(209,127,40)"/><text x="506.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="508" y="244" width="2" height="15" fill="rgb(210,35,25)"/><text x="511.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="508" y="260" width="2" height="15" fill="rgb(219,114,53)"/><text x="511.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.22%)</title><rect x="508" y="276" width="2" height="15" fill="rgb(211,143,42)"/><text x="511.00" y="286.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.43%)</title><rect x="508" y="180" width="5" height="15" fill="rgb(243,77,41)"/><text x="511.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="508" y="196" width="5" height="15" fill="rgb(234,17,31)"/><text x="511.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="508" y="212" width="5" height="15" fill="rgb(247,165,52)"/><text x="511.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.43%)</title><rect x="508" y="228" width="5" height="15" fill="rgb(216,15,32)"/><text x="511.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.22%)</title><rect x="510" y="244" width="3" height="15" fill="rgb(222,3,24)"/><text x="513.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.22%)</title><rect x="513" y="196" width="3" height="15" fill="rgb(235,206,18)"/><text x="516.00" y="206.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.22%)</title><rect x="513" y="212" width="3" height="15" fill="rgb(230,126,7)"/><text x="516.00" y="222.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:122) (2 samples, 0.43%)</title><rect x="516" y="212" width="5" height="15" fill="rgb(229,208,22)"/><text x="519.00" y="222.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.22%)</title><rect x="518" y="228" width="3" height="15" fill="rgb(233,127,54)"/><text x="521.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (7 samples, 1.51%)</title><rect x="505" y="164" width="18" height="15" fill="rgb(247,32,33)"/><text x="508.00" y="174.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (4 samples, 0.86%)</title><rect x="513" y="180" width="10" height="15" fill="rgb(225,144,41)"/><text x="516.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.65%)</title><rect x="516" y="196" width="7" height="15" fill="rgb(234,188,18)"/><text x="519.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:129) (1 samples, 0.22%)</title><rect x="521" y="212" width="2" height="15" fill="rgb(235,98,19)"/><text x="524.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="523" y="164" width="3" height="15" fill="rgb(208,114,33)"/><text x="526.00" y="174.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="523" y="180" width="3" height="15" fill="rgb(224,5,24)"/><text x="526.00" y="190.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="523" y="196" width="3" height="15" fill="rgb(219,128,16)"/><text x="526.00" y="206.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.22%)</title><rect x="523" y="212" width="3" height="15" fill="rgb(235,19,30)"/><text x="526.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:38) (204 samples, 43.97%)</title><rect x="10" y="52" width="518" height="15" fill="rgb(206,69,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:37) (204 samples, 43.97%)</title><rect x="10" y="68" width="518" height="15" fill="rgb(221,71,41)"/><text x="13.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:29) (204 samples, 43.97%)</title><rect x="10" y="84" width="518" height="15" fill="rgb(227,169,48)"/><text x="13.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:23) (204 samples, 43.97%)</title><rect x="10" y="100" width="518" height="15" fill="rgb(236,185,54)"/><text x="13.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (203 samples, 43.75%)</title><rect x="12" y="116" width="516" height="15" fill="rgb(252,215,54)"/><text x="15.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (203 samples, 43.75%)</title><rect x="12" y="132" width="516" height="15" fill="rgb(238,56,18)"/><text x="15.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (203 samples, 43.75%)</title><rect x="12" y="148" width="516" height="15" fill="rgb(211,172,13)"/><text x="15.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="526" y="164" width="2" height="15" fill="rgb(224,84,19)"/><text x="529.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="526" y="180" width="2" height="15" fill="rgb(225,90,47)"/><text x="529.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="526" y="196" width="2" height="15" fill="rgb(220,63,46)"/><text x="529.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.22%)</title><rect x="526" y="212" width="2" height="15" fill="rgb(254,177,48)"/><text x="529.00" y="222.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.22%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(214,27,47)"/><text x="529.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.22%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(234,195,2)"/><text x="529.00" y="254.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.22%)</title><rect x="526" y="260" width="2" height="15" fill="rgb(240,106,27)"/><text x="529.00" y="270.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.22%)</title><rect x="528" y="244" width="3" height="15" fill="rgb(250,87,9)"/><text x="531.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="528" y="260" width="3" height="15" fill="rgb(207,63,37)"/><text x="531.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="528" y="276" width="3" height="15" fill="rgb(221,25,35)"/><text x="531.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="528" y="292" width="3" height="15" fill="rgb(220,31,18)"/><text x="531.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="528" y="308" width="3" height="15" fill="rgb(242,222,26)"/><text x="531.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="528" y="324" width="3" height="15" fill="rgb(224,183,45)"/><text x="531.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="528" y="340" width="3" height="15" fill="rgb(218,184,44)"/><text x="531.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(237,17,3)"/><text x="531.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:80) (1 samples, 0.22%)</title><rect x="528" y="372" width="3" height="15" fill="rgb(237,183,44)"/><text x="531.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="528" y="388" width="3" height="15" fill="rgb(205,218,13)"/><text x="531.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="528" y="404" width="3" height="15" fill="rgb(243,34,43)"/><text x="531.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="528" y="420" width="3" height="15" fill="rgb(253,19,23)"/><text x="531.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="528" y="436" width="3" height="15" fill="rgb(220,98,34)"/><text x="531.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="528" y="452" width="3" height="15" fill="rgb(218,19,40)"/><text x="531.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="528" y="468" width="3" height="15" fill="rgb(212,65,33)"/><text x="531.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:854) (1 samples, 0.22%)</title><rect x="528" y="484" width="3" height="15" fill="rgb(239,192,28)"/><text x="531.00" y="494.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.22%)</title><rect x="528" y="500" width="3" height="15" fill="rgb(252,170,28)"/><text x="531.00" y="510.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:1) (2 samples, 0.43%)</title><rect x="528" y="148" width="5" height="15" fill="rgb(206,128,30)"/><text x="531.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="528" y="164" width="5" height="15" fill="rgb(214,137,24)"/><text x="531.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="528" y="180" width="5" height="15" fill="rgb(209,48,8)"/><text x="531.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="528" y="196" width="5" height="15" fill="rgb(207,17,50)"/><text x="531.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="528" y="212" width="5" height="15" fill="rgb(253,6,19)"/><text x="531.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="528" y="228" width="5" height="15" fill="rgb(253,92,43)"/><text x="531.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.22%)</title><rect x="531" y="244" width="2" height="15" fill="rgb(212,147,33)"/><text x="534.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="531" y="260" width="2" height="15" fill="rgb(237,217,42)"/><text x="534.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="531" y="276" width="2" height="15" fill="rgb(219,4,48)"/><text x="534.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="531" y="292" width="2" height="15" fill="rgb(231,117,26)"/><text x="534.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(214,134,14)"/><text x="534.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(206,30,38)"/><text x="534.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.22%)</title><rect x="531" y="340" width="2" height="15" fill="rgb(250,42,10)"/><text x="534.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="531" y="356" width="2" height="15" fill="rgb(240,10,21)"/><text x="534.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="531" y="372" width="2" height="15" fill="rgb(233,61,51)"/><text x="534.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="531" y="388" width="2" height="15" fill="rgb(238,103,12)"/><text x="534.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="531" y="404" width="2" height="15" fill="rgb(245,39,15)"/><text x="534.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="531" y="420" width="2" height="15" fill="rgb(230,66,47)"/><text x="534.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.22%)</title><rect x="531" y="436" width="2" height="15" fill="rgb(227,208,29)"/><text x="534.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="531" y="452" width="2" height="15" fill="rgb(230,83,20)"/><text x="534.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="531" y="468" width="2" height="15" fill="rgb(230,211,2)"/><text x="534.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="531" y="484" width="2" height="15" fill="rgb(233,119,18)"/><text x="534.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="531" y="500" width="2" height="15" fill="rgb(217,74,50)"/><text x="534.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="531" y="516" width="2" height="15" fill="rgb(243,116,18)"/><text x="534.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py:137) (1 samples, 0.22%)</title><rect x="531" y="532" width="2" height="15" fill="rgb(206,158,39)"/><text x="534.00" y="542.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:30) (1 samples, 0.22%)</title><rect x="533" y="980" width="3" height="15" fill="rgb(241,191,1)"/><text x="536.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.43%)</title><rect x="533" y="916" width="5" height="15" fill="rgb(215,32,3)"/><text x="536.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.43%)</title><rect x="533" y="932" width="5" height="15" fill="rgb(251,25,14)"/><text x="536.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.43%)</title><rect x="533" y="948" width="5" height="15" fill="rgb(215,158,52)"/><text x="536.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.43%)</title><rect x="533" y="964" width="5" height="15" fill="rgb(238,8,52)"/><text x="536.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.22%)</title><rect x="536" y="980" width="2" height="15" fill="rgb(224,198,29)"/><text x="539.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.65%)</title><rect x="533" y="852" width="8" height="15" fill="rgb(236,98,50)"/><text x="536.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.65%)</title><rect x="533" y="868" width="8" height="15" fill="rgb(228,0,54)"/><text x="536.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.65%)</title><rect x="533" y="884" width="8" height="15" fill="rgb(223,155,26)"/><text x="536.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.65%)</title><rect x="533" y="900" width="8" height="15" fill="rgb(208,20,43)"/><text x="536.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.22%)</title><rect x="538" y="916" width="3" height="15" fill="rgb(229,149,41)"/><text x="541.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.22%)</title><rect x="538" y="932" width="3" height="15" fill="rgb(219,206,26)"/><text x="541.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="538" y="948" width="3" height="15" fill="rgb(224,191,15)"/><text x="541.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="538" y="964" width="3" height="15" fill="rgb(216,215,13)"/><text x="541.00" y="974.50"></text></g><g><title>0x7f06b8975237 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="538" y="980" width="3" height="15" fill="rgb(224,57,27)"/><text x="541.00" y="990.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.22%)</title><rect x="541" y="884" width="3" height="15" fill="rgb(231,132,2)"/><text x="544.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2895) (1 samples, 0.22%)</title><rect x="541" y="900" width="3" height="15" fill="rgb(210,200,8)"/><text x="544.00" y="910.50"></text></g><g><title>dirname (posixpath.py:157) (1 samples, 0.22%)</title><rect x="541" y="916" width="3" height="15" fill="rgb(231,214,14)"/><text x="544.00" y="926.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.22%)</title><rect x="544" y="884" width="2" height="15" fill="rgb(219,96,15)"/><text x="547.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.22%)</title><rect x="544" y="900" width="2" height="15" fill="rgb(228,62,43)"/><text x="547.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.22%)</title><rect x="544" y="916" width="2" height="15" fill="rgb(215,101,46)"/><text x="547.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.22%)</title><rect x="544" y="932" width="2" height="15" fill="rgb(234,76,11)"/><text x="547.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.22%)</title><rect x="544" y="948" width="2" height="15" fill="rgb(225,153,12)"/><text x="547.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.22%)</title><rect x="544" y="964" width="2" height="15" fill="rgb(225,223,5)"/><text x="547.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.22%)</title><rect x="544" y="980" width="2" height="15" fill="rgb(243,4,51)"/><text x="547.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.22%)</title><rect x="544" y="996" width="2" height="15" fill="rgb(236,57,36)"/><text x="547.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:2) (6 samples, 1.29%)</title><rect x="533" y="148" width="16" height="15" fill="rgb(205,25,19)"/><text x="536.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="164" width="16" height="15" fill="rgb(247,21,8)"/><text x="536.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.29%)</title><rect x="533" y="180" width="16" height="15" fill="rgb(227,129,9)"/><text x="536.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="196" width="16" height="15" fill="rgb(238,49,36)"/><text x="536.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="212" width="16" height="15" fill="rgb(248,69,15)"/><text x="536.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="228" width="16" height="15" fill="rgb(254,15,14)"/><text x="536.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="244" width="16" height="15" fill="rgb(254,91,0)"/><text x="536.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="260" width="16" height="15" fill="rgb(215,213,9)"/><text x="536.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="276" width="16" height="15" fill="rgb(213,124,24)"/><text x="536.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.29%)</title><rect x="533" y="292" width="16" height="15" fill="rgb(233,117,31)"/><text x="536.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="308" width="16" height="15" fill="rgb(228,9,30)"/><text x="536.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="324" width="16" height="15" fill="rgb(216,3,40)"/><text x="536.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="340" width="16" height="15" fill="rgb(242,6,27)"/><text x="536.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="356" width="16" height="15" fill="rgb(247,188,45)"/><text x="536.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="372" width="16" height="15" fill="rgb(249,65,8)"/><text x="536.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.29%)</title><rect x="533" y="388" width="16" height="15" fill="rgb(211,125,0)"/><text x="536.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="404" width="16" height="15" fill="rgb(234,81,42)"/><text x="536.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="420" width="16" height="15" fill="rgb(224,163,32)"/><text x="536.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="436" width="16" height="15" fill="rgb(210,39,36)"/><text x="536.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="452" width="16" height="15" fill="rgb(215,110,14)"/><text x="536.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="468" width="16" height="15" fill="rgb(238,141,22)"/><text x="536.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.29%)</title><rect x="533" y="484" width="16" height="15" fill="rgb(232,190,41)"/><text x="536.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="500" width="16" height="15" fill="rgb(219,192,30)"/><text x="536.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="516" width="16" height="15" fill="rgb(215,140,23)"/><text x="536.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="532" width="16" height="15" fill="rgb(251,6,34)"/><text x="536.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="548" width="16" height="15" fill="rgb(226,186,19)"/><text x="536.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="564" width="16" height="15" fill="rgb(205,1,28)"/><text x="536.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.29%)</title><rect x="533" y="580" width="16" height="15" fill="rgb(237,103,40)"/><text x="536.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="596" width="16" height="15" fill="rgb(254,142,34)"/><text x="536.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.29%)</title><rect x="533" y="612" width="16" height="15" fill="rgb(244,154,10)"/><text x="536.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="628" width="16" height="15" fill="rgb(254,70,52)"/><text x="536.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="644" width="16" height="15" fill="rgb(236,56,48)"/><text x="536.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="660" width="16" height="15" fill="rgb(223,190,51)"/><text x="536.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="676" width="16" height="15" fill="rgb(207,67,26)"/><text x="536.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="692" width="16" height="15" fill="rgb(211,112,40)"/><text x="536.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="708" width="16" height="15" fill="rgb(238,39,7)"/><text x="536.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.29%)</title><rect x="533" y="724" width="16" height="15" fill="rgb(253,122,44)"/><text x="536.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="533" y="740" width="16" height="15" fill="rgb(243,1,10)"/><text x="536.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="533" y="756" width="16" height="15" fill="rgb(224,33,16)"/><text x="536.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="533" y="772" width="16" height="15" fill="rgb(239,148,30)"/><text x="536.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="533" y="788" width="16" height="15" fill="rgb(216,132,44)"/><text x="536.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="533" y="804" width="16" height="15" fill="rgb(212,174,37)"/><text x="536.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.29%)</title><rect x="533" y="820" width="16" height="15" fill="rgb(229,167,53)"/><text x="536.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.29%)</title><rect x="533" y="836" width="16" height="15" fill="rgb(208,210,23)"/><text x="536.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.65%)</title><rect x="541" y="852" width="8" height="15" fill="rgb(220,79,51)"/><text x="544.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.65%)</title><rect x="541" y="868" width="8" height="15" fill="rgb(218,7,52)"/><text x="544.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.22%)</title><rect x="546" y="884" width="3" height="15" fill="rgb(217,4,44)"/><text x="549.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.22%)</title><rect x="546" y="900" width="3" height="15" fill="rgb(250,196,7)"/><text x="549.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.22%)</title><rect x="546" y="916" width="3" height="15" fill="rgb(242,117,11)"/><text x="549.00" y="926.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.22%)</title><rect x="546" y="932" width="3" height="15" fill="rgb(227,184,4)"/><text x="549.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.22%)</title><rect x="549" y="484" width="2" height="15" fill="rgb(247,199,30)"/><text x="552.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="549" y="500" width="2" height="15" fill="rgb(227,173,33)"/><text x="552.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="549" y="516" width="2" height="15" fill="rgb(221,46,9)"/><text x="552.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="549" y="532" width="2" height="15" fill="rgb(249,145,27)"/><text x="552.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="549" y="548" width="2" height="15" fill="rgb(217,52,4)"/><text x="552.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="549" y="564" width="2" height="15" fill="rgb(234,128,52)"/><text x="552.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="549" y="580" width="2" height="15" fill="rgb(221,28,37)"/><text x="552.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="549" y="596" width="2" height="15" fill="rgb(226,157,16)"/><text x="552.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.22%)</title><rect x="549" y="612" width="2" height="15" fill="rgb(230,156,20)"/><text x="552.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="549" y="628" width="2" height="15" fill="rgb(231,86,29)"/><text x="552.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="549" y="644" width="2" height="15" fill="rgb(225,167,22)"/><text x="552.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="549" y="660" width="2" height="15" fill="rgb(220,148,20)"/><text x="552.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="549" y="676" width="2" height="15" fill="rgb(247,118,14)"/><text x="552.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="549" y="692" width="2" height="15" fill="rgb(228,132,47)"/><text x="552.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.22%)</title><rect x="549" y="708" width="2" height="15" fill="rgb(226,196,38)"/><text x="552.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="549" y="724" width="2" height="15" fill="rgb(248,112,47)"/><text x="552.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="549" y="740" width="2" height="15" fill="rgb(254,49,20)"/><text x="552.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="549" y="756" width="2" height="15" fill="rgb(228,226,33)"/><text x="552.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="549" y="772" width="2" height="15" fill="rgb(225,80,26)"/><text x="552.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="549" y="788" width="2" height="15" fill="rgb(243,102,0)"/><text x="552.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.22%)</title><rect x="549" y="804" width="2" height="15" fill="rgb(227,199,50)"/><text x="552.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="549" y="820" width="2" height="15" fill="rgb(245,229,4)"/><text x="552.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="549" y="836" width="2" height="15" fill="rgb(252,17,41)"/><text x="552.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="549" y="852" width="2" height="15" fill="rgb(234,48,26)"/><text x="552.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="549" y="868" width="2" height="15" fill="rgb(241,48,9)"/><text x="552.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="549" y="884" width="2" height="15" fill="rgb(232,44,42)"/><text x="552.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:6) (1 samples, 0.22%)</title><rect x="549" y="900" width="2" height="15" fill="rgb(229,179,7)"/><text x="552.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:4) (2 samples, 0.43%)</title><rect x="549" y="148" width="5" height="15" fill="rgb(250,24,21)"/><text x="552.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="549" y="164" width="5" height="15" fill="rgb(233,16,29)"/><text x="552.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.43%)</title><rect x="549" y="180" width="5" height="15" fill="rgb(241,19,18)"/><text x="552.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="549" y="196" width="5" height="15" fill="rgb(241,151,15)"/><text x="552.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="549" y="212" width="5" height="15" fill="rgb(248,70,36)"/><text x="552.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="549" y="228" width="5" height="15" fill="rgb(210,48,45)"/><text x="552.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="549" y="244" width="5" height="15" fill="rgb(231,55,9)"/><text x="552.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="549" y="260" width="5" height="15" fill="rgb(226,85,26)"/><text x="552.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="549" y="276" width="5" height="15" fill="rgb(236,208,28)"/><text x="552.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.43%)</title><rect x="549" y="292" width="5" height="15" fill="rgb(238,166,3)"/><text x="552.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="549" y="308" width="5" height="15" fill="rgb(236,175,19)"/><text x="552.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="549" y="324" width="5" height="15" fill="rgb(215,120,15)"/><text x="552.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="549" y="340" width="5" height="15" fill="rgb(247,100,17)"/><text x="552.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="549" y="356" width="5" height="15" fill="rgb(207,229,53)"/><text x="552.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="549" y="372" width="5" height="15" fill="rgb(246,185,4)"/><text x="552.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.43%)</title><rect x="549" y="388" width="5" height="15" fill="rgb(228,229,8)"/><text x="552.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="549" y="404" width="5" height="15" fill="rgb(224,158,43)"/><text x="552.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="549" y="420" width="5" height="15" fill="rgb(222,206,17)"/><text x="552.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="549" y="436" width="5" height="15" fill="rgb(221,212,7)"/><text x="552.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="549" y="452" width="5" height="15" fill="rgb(251,35,25)"/><text x="552.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="549" y="468" width="5" height="15" fill="rgb(214,122,33)"/><text x="552.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.22%)</title><rect x="551" y="484" width="3" height="15" fill="rgb(212,229,32)"/><text x="554.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="551" y="500" width="3" height="15" fill="rgb(245,179,51)"/><text x="554.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="551" y="516" width="3" height="15" fill="rgb(230,18,9)"/><text x="554.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="551" y="532" width="3" height="15" fill="rgb(220,123,46)"/><text x="554.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="551" y="548" width="3" height="15" fill="rgb(216,49,4)"/><text x="554.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="551" y="564" width="3" height="15" fill="rgb(219,142,30)"/><text x="554.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.22%)</title><rect x="551" y="580" width="3" height="15" fill="rgb(214,63,0)"/><text x="554.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="551" y="596" width="3" height="15" fill="rgb(217,136,41)"/><text x="554.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="551" y="612" width="3" height="15" fill="rgb(245,6,31)"/><text x="554.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="551" y="628" width="3" height="15" fill="rgb(210,107,38)"/><text x="554.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="551" y="644" width="3" height="15" fill="rgb(242,137,16)"/><text x="554.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="551" y="660" width="3" height="15" fill="rgb(217,130,18)"/><text x="554.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.22%)</title><rect x="551" y="676" width="3" height="15" fill="rgb(250,34,23)"/><text x="554.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="551" y="692" width="3" height="15" fill="rgb(228,104,43)"/><text x="554.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="551" y="708" width="3" height="15" fill="rgb(234,53,7)"/><text x="554.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="551" y="724" width="3" height="15" fill="rgb(221,153,32)"/><text x="554.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="551" y="740" width="3" height="15" fill="rgb(254,217,28)"/><text x="554.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="551" y="756" width="3" height="15" fill="rgb(230,41,36)"/><text x="554.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.22%)</title><rect x="551" y="772" width="3" height="15" fill="rgb(240,46,26)"/><text x="554.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="551" y="788" width="3" height="15" fill="rgb(208,9,21)"/><text x="554.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.22%)</title><rect x="551" y="804" width="3" height="15" fill="rgb(205,148,34)"/><text x="554.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.22%)</title><rect x="551" y="820" width="3" height="15" fill="rgb(220,62,32)"/><text x="554.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.22%)</title><rect x="551" y="836" width="3" height="15" fill="rgb(246,208,4)"/><text x="554.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.22%)</title><rect x="551" y="852" width="3" height="15" fill="rgb(227,196,11)"/><text x="554.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.22%)</title><rect x="551" y="868" width="3" height="15" fill="rgb(215,3,17)"/><text x="554.00" y="878.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.22%)</title><rect x="551" y="884" width="3" height="15" fill="rgb(206,122,12)"/><text x="554.00" y="894.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="551" y="900" width="3" height="15" fill="rgb(223,132,35)"/><text x="554.00" y="910.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.22%)</title><rect x="554" y="772" width="2" height="15" fill="rgb(218,141,49)"/><text x="557.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="788" width="2" height="15" fill="rgb(243,9,46)"/><text x="557.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="804" width="2" height="15" fill="rgb(213,223,43)"/><text x="557.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="820" width="2" height="15" fill="rgb(253,21,17)"/><text x="557.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="836" width="2" height="15" fill="rgb(220,7,19)"/><text x="557.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="852" width="2" height="15" fill="rgb(226,130,42)"/><text x="557.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.22%)</title><rect x="554" y="868" width="2" height="15" fill="rgb(251,16,24)"/><text x="557.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="884" width="2" height="15" fill="rgb(216,191,48)"/><text x="557.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="900" width="2" height="15" fill="rgb(254,81,44)"/><text x="557.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="916" width="2" height="15" fill="rgb(215,225,9)"/><text x="557.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="932" width="2" height="15" fill="rgb(211,4,50)"/><text x="557.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="948" width="2" height="15" fill="rgb(240,199,20)"/><text x="557.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.22%)</title><rect x="554" y="964" width="2" height="15" fill="rgb(236,97,49)"/><text x="557.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="980" width="2" height="15" fill="rgb(254,214,52)"/><text x="557.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="996" width="2" height="15" fill="rgb(216,9,2)"/><text x="557.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="1012" width="2" height="15" fill="rgb(230,5,49)"/><text x="557.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="1028" width="2" height="15" fill="rgb(230,10,54)"/><text x="557.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="1044" width="2" height="15" fill="rgb(238,11,19)"/><text x="557.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.22%)</title><rect x="554" y="1060" width="2" height="15" fill="rgb(224,44,34)"/><text x="557.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="1076" width="2" height="15" fill="rgb(231,121,16)"/><text x="557.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="554" y="1092" width="2" height="15" fill="rgb(246,214,24)"/><text x="557.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="1108" width="2" height="15" fill="rgb(248,135,52)"/><text x="557.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="1124" width="2" height="15" fill="rgb(224,170,8)"/><text x="557.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="1140" width="2" height="15" fill="rgb(254,115,22)"/><text x="557.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="1156" width="2" height="15" fill="rgb(228,229,17)"/><text x="557.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="1172" width="2" height="15" fill="rgb(252,37,43)"/><text x="557.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="1188" width="2" height="15" fill="rgb(213,133,53)"/><text x="557.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.22%)</title><rect x="554" y="1204" width="2" height="15" fill="rgb(250,180,36)"/><text x="557.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="1220" width="2" height="15" fill="rgb(234,181,42)"/><text x="557.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="1236" width="2" height="15" fill="rgb(242,115,25)"/><text x="557.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="1252" width="2" height="15" fill="rgb(218,59,28)"/><text x="557.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="1268" width="2" height="15" fill="rgb(212,175,10)"/><text x="557.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="1284" width="2" height="15" fill="rgb(239,59,33)"/><text x="557.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.22%)</title><rect x="554" y="1300" width="2" height="15" fill="rgb(242,116,46)"/><text x="557.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="554" y="1316" width="2" height="15" fill="rgb(216,52,46)"/><text x="557.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="554" y="1332" width="2" height="15" fill="rgb(212,202,5)"/><text x="557.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="554" y="1348" width="2" height="15" fill="rgb(207,146,32)"/><text x="557.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="554" y="1364" width="2" height="15" fill="rgb(245,185,43)"/><text x="557.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="554" y="1380" width="2" height="15" fill="rgb(205,212,6)"/><text x="557.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.22%)</title><rect x="554" y="1396" width="2" height="15" fill="rgb(225,223,16)"/><text x="557.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.22%)</title><rect x="554" y="1412" width="2" height="15" fill="rgb(223,5,39)"/><text x="557.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.22%)</title><rect x="554" y="1428" width="2" height="15" fill="rgb(227,133,50)"/><text x="557.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.22%)</title><rect x="554" y="1444" width="2" height="15" fill="rgb(211,14,39)"/><text x="557.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.22%)</title><rect x="554" y="1460" width="2" height="15" fill="rgb(218,131,12)"/><text x="557.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.22%)</title><rect x="554" y="1476" width="2" height="15" fill="rgb(240,192,35)"/><text x="557.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.22%)</title><rect x="554" y="1492" width="2" height="15" fill="rgb(208,209,47)"/><text x="557.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.22%)</title><rect x="554" y="1508" width="2" height="15" fill="rgb(234,26,43)"/><text x="557.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.22%)</title><rect x="554" y="1524" width="2" height="15" fill="rgb(224,72,52)"/><text x="557.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.22%)</title><rect x="554" y="1540" width="2" height="15" fill="rgb(217,191,31)"/><text x="557.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:662) (1 samples, 0.22%)</title><rect x="554" y="1556" width="2" height="15" fill="rgb(238,208,35)"/><text x="557.00" y="1566.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.22%)</title><rect x="556" y="900" width="3" height="15" fill="rgb(234,85,34)"/><text x="559.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="916" width="3" height="15" fill="rgb(211,86,54)"/><text x="559.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="556" y="932" width="3" height="15" fill="rgb(239,111,48)"/><text x="559.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="948" width="3" height="15" fill="rgb(217,135,11)"/><text x="559.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="964" width="3" height="15" fill="rgb(214,161,3)"/><text x="559.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="556" y="980" width="3" height="15" fill="rgb(207,66,6)"/><text x="559.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="556" y="996" width="3" height="15" fill="rgb(217,10,19)"/><text x="559.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="556" y="1012" width="3" height="15" fill="rgb(219,16,26)"/><text x="559.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1028" width="3" height="15" fill="rgb(243,37,18)"/><text x="559.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.22%)</title><rect x="556" y="1044" width="3" height="15" fill="rgb(225,36,21)"/><text x="559.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="556" y="1060" width="3" height="15" fill="rgb(231,210,22)"/><text x="559.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1076" width="3" height="15" fill="rgb(213,79,35)"/><text x="559.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="1092" width="3" height="15" fill="rgb(226,156,13)"/><text x="559.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="556" y="1108" width="3" height="15" fill="rgb(211,227,54)"/><text x="559.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="556" y="1124" width="3" height="15" fill="rgb(237,205,9)"/><text x="559.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="556" y="1140" width="3" height="15" fill="rgb(240,37,46)"/><text x="559.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1156" width="3" height="15" fill="rgb(217,208,2)"/><text x="559.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.22%)</title><rect x="556" y="1172" width="3" height="15" fill="rgb(225,106,47)"/><text x="559.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="556" y="1188" width="3" height="15" fill="rgb(241,194,31)"/><text x="559.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1204" width="3" height="15" fill="rgb(217,96,10)"/><text x="559.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="1220" width="3" height="15" fill="rgb(220,138,49)"/><text x="559.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="556" y="1236" width="3" height="15" fill="rgb(233,135,24)"/><text x="559.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="556" y="1252" width="3" height="15" fill="rgb(248,115,38)"/><text x="559.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="556" y="1268" width="3" height="15" fill="rgb(214,66,51)"/><text x="559.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1284" width="3" height="15" fill="rgb(226,195,25)"/><text x="559.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.22%)</title><rect x="556" y="1300" width="3" height="15" fill="rgb(248,218,25)"/><text x="559.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="1316" width="3" height="15" fill="rgb(241,180,30)"/><text x="559.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="556" y="1332" width="3" height="15" fill="rgb(239,76,13)"/><text x="559.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="556" y="1348" width="3" height="15" fill="rgb(221,219,39)"/><text x="559.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="556" y="1364" width="3" height="15" fill="rgb(236,174,32)"/><text x="559.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1380" width="3" height="15" fill="rgb(206,212,34)"/><text x="559.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.22%)</title><rect x="556" y="1396" width="3" height="15" fill="rgb(254,75,8)"/><text x="559.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="1412" width="3" height="15" fill="rgb(231,79,52)"/><text x="559.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="556" y="1428" width="3" height="15" fill="rgb(234,119,44)"/><text x="559.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="556" y="1444" width="3" height="15" fill="rgb(244,136,35)"/><text x="559.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="556" y="1460" width="3" height="15" fill="rgb(207,40,18)"/><text x="559.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.22%)</title><rect x="556" y="1476" width="3" height="15" fill="rgb(222,92,32)"/><text x="559.00" y="1486.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.22%)</title><rect x="556" y="1492" width="3" height="15" fill="rgb(226,88,38)"/><text x="559.00" y="1502.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.22%)</title><rect x="556" y="1508" width="3" height="15" fill="rgb(238,72,10)"/><text x="559.00" y="1518.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.22%)</title><rect x="556" y="1524" width="3" height="15" fill="rgb(207,116,46)"/><text x="559.00" y="1534.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.22%)</title><rect x="556" y="1540" width="3" height="15" fill="rgb(239,206,25)"/><text x="559.00" y="1550.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.22%)</title><rect x="556" y="1556" width="3" height="15" fill="rgb(239,48,20)"/><text x="559.00" y="1566.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.22%)</title><rect x="556" y="1572" width="3" height="15" fill="rgb(246,135,42)"/><text x="559.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.65%)</title><rect x="554" y="244" width="7" height="15" fill="rgb(250,37,38)"/><text x="557.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="260" width="7" height="15" fill="rgb(238,167,36)"/><text x="557.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="554" y="276" width="7" height="15" fill="rgb(211,65,33)"/><text x="557.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="554" y="292" width="7" height="15" fill="rgb(233,223,47)"/><text x="557.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="554" y="308" width="7" height="15" fill="rgb(234,44,9)"/><text x="557.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="324" width="7" height="15" fill="rgb(209,152,42)"/><text x="557.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.65%)</title><rect x="554" y="340" width="7" height="15" fill="rgb(229,81,47)"/><text x="557.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="356" width="7" height="15" fill="rgb(219,95,41)"/><text x="557.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.65%)</title><rect x="554" y="372" width="7" height="15" fill="rgb(209,110,10)"/><text x="557.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="388" width="7" height="15" fill="rgb(222,211,28)"/><text x="557.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="404" width="7" height="15" fill="rgb(208,157,48)"/><text x="557.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="554" y="420" width="7" height="15" fill="rgb(239,219,21)"/><text x="557.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="554" y="436" width="7" height="15" fill="rgb(216,25,35)"/><text x="557.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="554" y="452" width="7" height="15" fill="rgb(232,194,19)"/><text x="557.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="468" width="7" height="15" fill="rgb(238,84,33)"/><text x="557.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 0.65%)</title><rect x="554" y="484" width="7" height="15" fill="rgb(231,221,50)"/><text x="557.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="500" width="7" height="15" fill="rgb(254,210,22)"/><text x="557.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="554" y="516" width="7" height="15" fill="rgb(250,53,34)"/><text x="557.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="554" y="532" width="7" height="15" fill="rgb(226,49,49)"/><text x="557.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="554" y="548" width="7" height="15" fill="rgb(209,96,42)"/><text x="557.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="564" width="7" height="15" fill="rgb(224,200,13)"/><text x="557.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 0.65%)</title><rect x="554" y="580" width="7" height="15" fill="rgb(249,130,18)"/><text x="557.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="596" width="7" height="15" fill="rgb(238,123,25)"/><text x="557.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="554" y="612" width="7" height="15" fill="rgb(225,77,7)"/><text x="557.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="554" y="628" width="7" height="15" fill="rgb(231,113,37)"/><text x="557.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="554" y="644" width="7" height="15" fill="rgb(208,66,50)"/><text x="557.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="660" width="7" height="15" fill="rgb(219,84,34)"/><text x="557.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 0.65%)</title><rect x="554" y="676" width="7" height="15" fill="rgb(214,36,6)"/><text x="557.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="554" y="692" width="7" height="15" fill="rgb(217,87,6)"/><text x="557.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="554" y="708" width="7" height="15" fill="rgb(217,130,45)"/><text x="557.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="554" y="724" width="7" height="15" fill="rgb(214,95,12)"/><text x="557.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="554" y="740" width="7" height="15" fill="rgb(241,76,41)"/><text x="557.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="554" y="756" width="7" height="15" fill="rgb(211,55,16)"/><text x="557.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.43%)</title><rect x="556" y="772" width="5" height="15" fill="rgb(221,14,34)"/><text x="559.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.43%)</title><rect x="556" y="788" width="5" height="15" fill="rgb(208,151,46)"/><text x="559.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="556" y="804" width="5" height="15" fill="rgb(234,113,36)"/><text x="559.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="556" y="820" width="5" height="15" fill="rgb(232,46,25)"/><text x="559.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="556" y="836" width="5" height="15" fill="rgb(254,125,14)"/><text x="559.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="556" y="852" width="5" height="15" fill="rgb(252,227,6)"/><text x="559.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="556" y="868" width="5" height="15" fill="rgb(241,126,45)"/><text x="559.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="556" y="884" width="5" height="15" fill="rgb(207,21,30)"/><text x="559.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.22%)</title><rect x="559" y="900" width="2" height="15" fill="rgb(223,178,33)"/><text x="562.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="559" y="916" width="2" height="15" fill="rgb(242,142,16)"/><text x="562.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="559" y="932" width="2" height="15" fill="rgb(229,165,12)"/><text x="562.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="559" y="948" width="2" height="15" fill="rgb(211,190,15)"/><text x="562.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="559" y="964" width="2" height="15" fill="rgb(246,92,31)"/><text x="562.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="559" y="980" width="2" height="15" fill="rgb(245,96,12)"/><text x="562.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.22%)</title><rect x="559" y="996" width="2" height="15" fill="rgb(230,78,5)"/><text x="562.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="559" y="1012" width="2" height="15" fill="rgb(223,67,28)"/><text x="562.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="559" y="1028" width="2" height="15" fill="rgb(214,223,22)"/><text x="562.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="559" y="1044" width="2" height="15" fill="rgb(241,160,41)"/><text x="562.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="559" y="1060" width="2" height="15" fill="rgb(217,19,17)"/><text x="562.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="559" y="1076" width="2" height="15" fill="rgb(245,190,50)"/><text x="562.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:56) (1 samples, 0.22%)</title><rect x="559" y="1092" width="2" height="15" fill="rgb(233,79,22)"/><text x="562.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="559" y="1108" width="2" height="15" fill="rgb(241,38,28)"/><text x="562.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="559" y="1124" width="2" height="15" fill="rgb(222,82,16)"/><text x="562.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="559" y="1140" width="2" height="15" fill="rgb(224,143,38)"/><text x="562.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="559" y="1156" width="2" height="15" fill="rgb(235,168,5)"/><text x="562.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="559" y="1172" width="2" height="15" fill="rgb(240,11,26)"/><text x="562.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py:17) (1 samples, 0.22%)</title><rect x="559" y="1188" width="2" height="15" fill="rgb(229,30,37)"/><text x="562.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="559" y="1204" width="2" height="15" fill="rgb(247,182,33)"/><text x="562.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="559" y="1220" width="2" height="15" fill="rgb(232,180,18)"/><text x="562.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="559" y="1236" width="2" height="15" fill="rgb(226,84,42)"/><text x="562.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="559" y="1252" width="2" height="15" fill="rgb(218,71,27)"/><text x="562.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="559" y="1268" width="2" height="15" fill="rgb(226,25,37)"/><text x="562.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x509.py:378) (1 samples, 0.22%)</title><rect x="559" y="1284" width="2" height="15" fill="rgb(207,64,42)"/><text x="562.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.22%)</title><rect x="559" y="1300" width="2" height="15" fill="rgb(226,90,43)"/><text x="562.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py:99) (1 samples, 0.22%)</title><rect x="559" y="1316" width="2" height="15" fill="rgb(223,189,11)"/><text x="562.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.22%)</title><rect x="561" y="628" width="3" height="15" fill="rgb(231,110,19)"/><text x="564.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="561" y="644" width="3" height="15" fill="rgb(242,164,41)"/><text x="564.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="561" y="660" width="3" height="15" fill="rgb(227,134,24)"/><text x="564.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="561" y="676" width="3" height="15" fill="rgb(252,153,37)"/><text x="564.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="561" y="692" width="3" height="15" fill="rgb(218,124,25)"/><text x="564.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="561" y="708" width="3" height="15" fill="rgb(230,10,48)"/><text x="564.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.22%)</title><rect x="561" y="724" width="3" height="15" fill="rgb(209,73,3)"/><text x="564.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="561" y="740" width="3" height="15" fill="rgb(212,12,37)"/><text x="564.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="561" y="756" width="3" height="15" fill="rgb(216,99,21)"/><text x="564.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="561" y="772" width="3" height="15" fill="rgb(236,57,37)"/><text x="564.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="561" y="788" width="3" height="15" fill="rgb(216,178,7)"/><text x="564.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="561" y="804" width="3" height="15" fill="rgb(230,43,24)"/><text x="564.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:6) (1 samples, 0.22%)</title><rect x="561" y="820" width="3" height="15" fill="rgb(215,105,10)"/><text x="564.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="561" y="836" width="3" height="15" fill="rgb(237,97,21)"/><text x="564.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="561" y="852" width="3" height="15" fill="rgb(214,144,10)"/><text x="564.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="561" y="868" width="3" height="15" fill="rgb(229,223,42)"/><text x="564.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="561" y="884" width="3" height="15" fill="rgb(231,116,0)"/><text x="564.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="561" y="900" width="3" height="15" fill="rgb(231,148,11)"/><text x="564.00" y="910.50"></text></g><g><title>0x7f068f5ad82d (?) (1 samples, 0.22%)</title><rect x="561" y="916" width="3" height="15" fill="rgb(226,39,13)"/><text x="564.00" y="926.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="561" y="932" width="3" height="15" fill="rgb(210,138,22)"/><text x="564.00" y="942.50"></text></g><g><title>Series (pandas/core/series.py:4220) (1 samples, 0.22%)</title><rect x="564" y="1124" width="2" height="15" fill="rgb(239,185,39)"/><text x="567.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.22%)</title><rect x="564" y="1140" width="2" height="15" fill="rgb(212,167,44)"/><text x="567.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.22%)</title><rect x="564" y="1156" width="2" height="15" fill="rgb(231,224,9)"/><text x="567.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.22%)</title><rect x="564" y="1172" width="2" height="15" fill="rgb(232,61,3)"/><text x="567.00" y="1182.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="564" y="1188" width="2" height="15" fill="rgb(247,142,26)"/><text x="567.00" y="1198.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="564" y="1204" width="2" height="15" fill="rgb(238,121,39)"/><text x="567.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:141) (2 samples, 0.43%)</title><rect x="564" y="1108" width="5" height="15" fill="rgb(209,97,21)"/><text x="567.00" y="1118.50"></text></g><g><title>Series (pandas/core/series.py:4687) (1 samples, 0.22%)</title><rect x="566" y="1124" width="3" height="15" fill="rgb(254,91,12)"/><text x="569.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.22%)</title><rect x="566" y="1140" width="3" height="15" fill="rgb(243,61,49)"/><text x="569.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.22%)</title><rect x="566" y="1156" width="3" height="15" fill="rgb(250,192,31)"/><text x="569.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.22%)</title><rect x="566" y="1172" width="3" height="15" fill="rgb(254,77,0)"/><text x="569.00" y="1182.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="566" y="1188" width="3" height="15" fill="rgb(231,223,50)"/><text x="569.00" y="1198.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.22%)</title><rect x="566" y="1204" width="3" height="15" fill="rgb(246,15,23)"/><text x="569.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.65%)</title><rect x="564" y="916" width="8" height="15" fill="rgb(230,197,12)"/><text x="567.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="564" y="932" width="8" height="15" fill="rgb(228,119,5)"/><text x="567.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="564" y="948" width="8" height="15" fill="rgb(249,51,41)"/><text x="567.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="564" y="964" width="8" height="15" fill="rgb(206,25,52)"/><text x="567.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="564" y="980" width="8" height="15" fill="rgb(240,172,45)"/><text x="567.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="564" y="996" width="8" height="15" fill="rgb(230,85,26)"/><text x="567.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.65%)</title><rect x="564" y="1012" width="8" height="15" fill="rgb(227,102,14)"/><text x="567.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="564" y="1028" width="8" height="15" fill="rgb(207,190,32)"/><text x="567.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="564" y="1044" width="8" height="15" fill="rgb(230,189,0)"/><text x="567.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="564" y="1060" width="8" height="15" fill="rgb(205,85,17)"/><text x="567.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="564" y="1076" width="8" height="15" fill="rgb(254,57,40)"/><text x="567.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="564" y="1092" width="8" height="15" fill="rgb(253,99,35)"/><text x="567.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.22%)</title><rect x="569" y="1108" width="3" height="15" fill="rgb(231,164,47)"/><text x="572.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1124" width="3" height="15" fill="rgb(218,220,31)"/><text x="572.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1140" width="3" height="15" fill="rgb(208,84,45)"/><text x="572.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1156" width="3" height="15" fill="rgb(212,220,9)"/><text x="572.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1172" width="3" height="15" fill="rgb(225,156,13)"/><text x="572.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1188" width="3" height="15" fill="rgb(236,206,12)"/><text x="572.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.22%)</title><rect x="569" y="1204" width="3" height="15" fill="rgb(243,220,36)"/><text x="572.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1220" width="3" height="15" fill="rgb(253,153,1)"/><text x="572.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1236" width="3" height="15" fill="rgb(232,205,40)"/><text x="572.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1252" width="3" height="15" fill="rgb(212,62,27)"/><text x="572.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1268" width="3" height="15" fill="rgb(235,124,5)"/><text x="572.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1284" width="3" height="15" fill="rgb(212,127,45)"/><text x="572.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.22%)</title><rect x="569" y="1300" width="3" height="15" fill="rgb(233,222,21)"/><text x="572.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1316" width="3" height="15" fill="rgb(245,65,3)"/><text x="572.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1332" width="3" height="15" fill="rgb(249,96,45)"/><text x="572.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1348" width="3" height="15" fill="rgb(218,100,39)"/><text x="572.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1364" width="3" height="15" fill="rgb(215,1,6)"/><text x="572.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1380" width="3" height="15" fill="rgb(209,210,7)"/><text x="572.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.22%)</title><rect x="569" y="1396" width="3" height="15" fill="rgb(212,184,5)"/><text x="572.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1412" width="3" height="15" fill="rgb(214,194,52)"/><text x="572.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1428" width="3" height="15" fill="rgb(234,37,24)"/><text x="572.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1444" width="3" height="15" fill="rgb(234,124,42)"/><text x="572.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1460" width="3" height="15" fill="rgb(219,63,43)"/><text x="572.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1476" width="3" height="15" fill="rgb(249,216,49)"/><text x="572.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.22%)</title><rect x="569" y="1492" width="3" height="15" fill="rgb(214,79,32)"/><text x="572.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1508" width="3" height="15" fill="rgb(242,124,3)"/><text x="572.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1524" width="3" height="15" fill="rgb(236,26,20)"/><text x="572.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1540" width="3" height="15" fill="rgb(208,132,26)"/><text x="572.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1556" width="3" height="15" fill="rgb(246,79,34)"/><text x="572.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1572" width="3" height="15" fill="rgb(223,76,31)"/><text x="572.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.22%)</title><rect x="569" y="1588" width="3" height="15" fill="rgb(235,159,54)"/><text x="572.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1604" width="3" height="15" fill="rgb(241,225,29)"/><text x="572.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1620" width="3" height="15" fill="rgb(244,109,52)"/><text x="572.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1636" width="3" height="15" fill="rgb(253,87,54)"/><text x="572.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1652" width="3" height="15" fill="rgb(210,116,14)"/><text x="572.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1668" width="3" height="15" fill="rgb(238,198,10)"/><text x="572.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.22%)</title><rect x="569" y="1684" width="3" height="15" fill="rgb(219,8,28)"/><text x="572.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1700" width="3" height="15" fill="rgb(236,100,41)"/><text x="572.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1716" width="3" height="15" fill="rgb(207,159,43)"/><text x="572.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1732" width="3" height="15" fill="rgb(225,58,33)"/><text x="572.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1748" width="3" height="15" fill="rgb(209,88,24)"/><text x="572.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1764" width="3" height="15" fill="rgb(213,39,32)"/><text x="572.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.22%)</title><rect x="569" y="1780" width="3" height="15" fill="rgb(205,101,28)"/><text x="572.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="569" y="1796" width="3" height="15" fill="rgb(219,98,26)"/><text x="572.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="569" y="1812" width="3" height="15" fill="rgb(230,103,28)"/><text x="572.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="569" y="1828" width="3" height="15" fill="rgb(208,149,35)"/><text x="572.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="569" y="1844" width="3" height="15" fill="rgb(252,173,1)"/><text x="572.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="569" y="1860" width="3" height="15" fill="rgb(217,161,11)"/><text x="572.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.22%)</title><rect x="569" y="1876" width="3" height="15" fill="rgb(247,142,36)"/><text x="572.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.22%)</title><rect x="569" y="1892" width="3" height="15" fill="rgb(230,145,47)"/><text x="572.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.22%)</title><rect x="569" y="1908" width="3" height="15" fill="rgb(221,94,0)"/><text x="572.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1230) (1 samples, 0.22%)</title><rect x="569" y="1924" width="3" height="15" fill="rgb(207,45,28)"/><text x="572.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py:1321) (1 samples, 0.22%)</title><rect x="569" y="1940" width="3" height="15" fill="rgb(218,78,50)"/><text x="572.00" y="1950.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.22%)</title><rect x="569" y="1956" width="3" height="15" fill="rgb(251,49,11)"/><text x="572.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py:626) (1 samples, 0.22%)</title><rect x="569" y="1972" width="3" height="15" fill="rgb(245,178,31)"/><text x="572.00" y="1982.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 0.86%)</title><rect x="564" y="724" width="10" height="15" fill="rgb(213,101,19)"/><text x="567.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.86%)</title><rect x="564" y="740" width="10" height="15" fill="rgb(236,152,10)"/><text x="567.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.86%)</title><rect x="564" y="756" width="10" height="15" fill="rgb(245,176,21)"/><text x="567.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.86%)</title><rect x="564" y="772" width="10" height="15" fill="rgb(245,64,16)"/><text x="567.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.86%)</title><rect x="564" y="788" width="10" height="15" fill="rgb(220,31,14)"/><text x="567.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.86%)</title><rect x="564" y="804" width="10" height="15" fill="rgb(243,144,26)"/><text x="567.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 0.86%)</title><rect x="564" y="820" width="10" height="15" fill="rgb(234,169,2)"/><text x="567.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.86%)</title><rect x="564" y="836" width="10" height="15" fill="rgb(245,53,44)"/><text x="567.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.86%)</title><rect x="564" y="852" width="10" height="15" fill="rgb(233,138,29)"/><text x="567.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.86%)</title><rect x="564" y="868" width="10" height="15" fill="rgb(254,77,48)"/><text x="567.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.86%)</title><rect x="564" y="884" width="10" height="15" fill="rgb(224,93,49)"/><text x="567.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.86%)</title><rect x="564" y="900" width="10" height="15" fill="rgb(249,165,0)"/><text x="567.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.22%)</title><rect x="572" y="916" width="2" height="15" fill="rgb(244,214,39)"/><text x="575.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="572" y="932" width="2" height="15" fill="rgb(205,42,24)"/><text x="575.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="572" y="948" width="2" height="15" fill="rgb(230,226,6)"/><text x="575.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="572" y="964" width="2" height="15" fill="rgb(253,15,27)"/><text x="575.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="572" y="980" width="2" height="15" fill="rgb(236,79,46)"/><text x="575.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="572" y="996" width="2" height="15" fill="rgb(241,49,22)"/><text x="575.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.22%)</title><rect x="572" y="1012" width="2" height="15" fill="rgb(249,104,42)"/><text x="575.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.22%)</title><rect x="572" y="1028" width="2" height="15" fill="rgb(244,152,28)"/><text x="575.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:732) (1 samples, 0.22%)</title><rect x="572" y="1044" width="2" height="15" fill="rgb(245,44,6)"/><text x="575.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.22%)</title><rect x="572" y="1060" width="2" height="15" fill="rgb(223,33,12)"/><text x="575.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.22%)</title><rect x="572" y="1076" width="2" height="15" fill="rgb(249,30,44)"/><text x="575.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.22%)</title><rect x="572" y="1092" width="2" height="15" fill="rgb(207,66,10)"/><text x="575.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.22%)</title><rect x="572" y="1108" width="2" height="15" fill="rgb(218,97,23)"/><text x="575.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 1.29%)</title><rect x="561" y="532" width="16" height="15" fill="rgb(224,210,34)"/><text x="564.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="561" y="548" width="16" height="15" fill="rgb(246,4,43)"/><text x="564.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="561" y="564" width="16" height="15" fill="rgb(226,166,17)"/><text x="564.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="561" y="580" width="16" height="15" fill="rgb(223,227,27)"/><text x="564.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="561" y="596" width="16" height="15" fill="rgb(209,173,3)"/><text x="564.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="561" y="612" width="16" height="15" fill="rgb(244,13,51)"/><text x="564.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 1.08%)</title><rect x="564" y="628" width="13" height="15" fill="rgb(206,215,50)"/><text x="567.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="564" y="644" width="13" height="15" fill="rgb(250,116,17)"/><text x="567.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="564" y="660" width="13" height="15" fill="rgb(214,182,31)"/><text x="567.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="564" y="676" width="13" height="15" fill="rgb(232,14,26)"/><text x="567.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="564" y="692" width="13" height="15" fill="rgb(234,192,6)"/><text x="567.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="564" y="708" width="13" height="15" fill="rgb(227,190,24)"/><text x="567.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.22%)</title><rect x="574" y="724" width="3" height="15" fill="rgb(244,82,43)"/><text x="577.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="574" y="740" width="3" height="15" fill="rgb(229,189,49)"/><text x="577.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="574" y="756" width="3" height="15" fill="rgb(228,71,25)"/><text x="577.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="574" y="772" width="3" height="15" fill="rgb(217,146,43)"/><text x="577.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="574" y="788" width="3" height="15" fill="rgb(232,157,45)"/><text x="577.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="574" y="804" width="3" height="15" fill="rgb(245,176,41)"/><text x="577.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="574" y="820" width="3" height="15" fill="rgb(230,146,11)"/><text x="577.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="574" y="836" width="3" height="15" fill="rgb(218,106,48)"/><text x="577.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="574" y="852" width="3" height="15" fill="rgb(208,15,23)"/><text x="577.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:13) (1 samples, 0.22%)</title><rect x="574" y="868" width="3" height="15" fill="rgb(206,20,23)"/><text x="577.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="574" y="884" width="3" height="15" fill="rgb(234,178,17)"/><text x="577.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="574" y="900" width="3" height="15" fill="rgb(233,42,6)"/><text x="577.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="574" y="916" width="3" height="15" fill="rgb(206,157,33)"/><text x="577.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="574" y="932" width="3" height="15" fill="rgb(238,118,33)"/><text x="577.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.22%)</title><rect x="574" y="948" width="3" height="15" fill="rgb(240,110,53)"/><text x="577.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.22%)</title><rect x="574" y="964" width="3" height="15" fill="rgb(246,54,42)"/><text x="577.00" y="974.50"></text></g><g><title>0x7f06b8a13df3 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="574" y="980" width="3" height="15" fill="rgb(230,47,26)"/><text x="577.00" y="990.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (7 samples, 1.51%)</title><rect x="561" y="436" width="18" height="15" fill="rgb(211,213,42)"/><text x="564.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.51%)</title><rect x="561" y="452" width="18" height="15" fill="rgb(240,199,11)"/><text x="564.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.51%)</title><rect x="561" y="468" width="18" height="15" fill="rgb(215,102,31)"/><text x="564.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.51%)</title><rect x="561" y="484" width="18" height="15" fill="rgb(220,199,40)"/><text x="564.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.51%)</title><rect x="561" y="500" width="18" height="15" fill="rgb(210,206,9)"/><text x="564.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.51%)</title><rect x="561" y="516" width="18" height="15" fill="rgb(209,215,22)"/><text x="564.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:16) (1 samples, 0.22%)</title><rect x="577" y="532" width="2" height="15" fill="rgb(253,198,12)"/><text x="580.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="577" y="548" width="2" height="15" fill="rgb(213,40,48)"/><text x="580.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="577" y="564" width="2" height="15" fill="rgb(228,44,37)"/><text x="580.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="577" y="580" width="2" height="15" fill="rgb(214,121,19)"/><text x="580.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="577" y="596" width="2" height="15" fill="rgb(205,3,43)"/><text x="580.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.22%)</title><rect x="577" y="612" width="2" height="15" fill="rgb(217,207,54)"/><text x="580.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.22%)</title><rect x="577" y="628" width="2" height="15" fill="rgb(209,197,27)"/><text x="580.00" y="638.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:4) (21 samples, 4.53%)</title><rect x="528" y="52" width="54" height="15" fill="rgb(230,88,40)"/><text x="531.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 4.53%)</title><rect x="528" y="68" width="54" height="15" fill="rgb(242,28,29)"/><text x="531.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 4.53%)</title><rect x="528" y="84" width="54" height="15" fill="rgb(235,120,17)"/><text x="531.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 4.53%)</title><rect x="528" y="100" width="54" height="15" fill="rgb(245,215,16)"/><text x="531.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 4.53%)</title><rect x="528" y="116" width="54" height="15" fill="rgb(247,58,18)"/><text x="531.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 4.53%)</title><rect x="528" y="132" width="54" height="15" fill="rgb(226,120,23)"/><text x="531.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:7) (11 samples, 2.37%)</title><rect x="554" y="148" width="28" height="15" fill="rgb(240,188,51)"/><text x="557.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="554" y="164" width="28" height="15" fill="rgb(221,49,35)"/><text x="557.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="554" y="180" width="28" height="15" fill="rgb(228,116,48)"/><text x="557.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="554" y="196" width="28" height="15" fill="rgb(207,74,39)"/><text x="557.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="554" y="212" width="28" height="15" fill="rgb(246,222,24)"/><text x="557.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="554" y="228" width="28" height="15" fill="rgb(209,164,54)"/><text x="557.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.72%)</title><rect x="561" y="244" width="21" height="15" fill="rgb(224,47,14)"/><text x="564.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.72%)</title><rect x="561" y="260" width="21" height="15" fill="rgb(212,89,48)"/><text x="564.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.72%)</title><rect x="561" y="276" width="21" height="15" fill="rgb(206,99,14)"/><text x="564.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.72%)</title><rect x="561" y="292" width="21" height="15" fill="rgb(215,80,21)"/><text x="564.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.72%)</title><rect x="561" y="308" width="21" height="15" fill="rgb(233,72,48)"/><text x="564.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.72%)</title><rect x="561" y="324" width="21" height="15" fill="rgb(210,92,41)"/><text x="564.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.72%)</title><rect x="561" y="340" width="21" height="15" fill="rgb(232,229,51)"/><text x="564.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.72%)</title><rect x="561" y="356" width="21" height="15" fill="rgb(235,126,15)"/><text x="564.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.72%)</title><rect x="561" y="372" width="21" height="15" fill="rgb(227,124,31)"/><text x="564.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.72%)</title><rect x="561" y="388" width="21" height="15" fill="rgb(230,200,25)"/><text x="564.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.72%)</title><rect x="561" y="404" width="21" height="15" fill="rgb(244,141,42)"/><text x="564.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.72%)</title><rect x="561" y="420" width="21" height="15" fill="rgb(235,95,44)"/><text x="564.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.22%)</title><rect x="579" y="436" width="3" height="15" fill="rgb(215,39,7)"/><text x="582.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="452" width="3" height="15" fill="rgb(234,42,39)"/><text x="582.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="579" y="468" width="3" height="15" fill="rgb(239,134,34)"/><text x="582.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="484" width="3" height="15" fill="rgb(254,23,31)"/><text x="582.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="500" width="3" height="15" fill="rgb(235,191,1)"/><text x="582.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="516" width="3" height="15" fill="rgb(233,1,12)"/><text x="582.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="532" width="3" height="15" fill="rgb(239,26,51)"/><text x="582.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="548" width="3" height="15" fill="rgb(241,69,20)"/><text x="582.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="564" width="3" height="15" fill="rgb(220,16,16)"/><text x="582.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.22%)</title><rect x="579" y="580" width="3" height="15" fill="rgb(206,207,42)"/><text x="582.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="596" width="3" height="15" fill="rgb(205,66,37)"/><text x="582.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="612" width="3" height="15" fill="rgb(220,52,16)"/><text x="582.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="628" width="3" height="15" fill="rgb(233,50,48)"/><text x="582.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="644" width="3" height="15" fill="rgb(238,127,32)"/><text x="582.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="660" width="3" height="15" fill="rgb(206,46,51)"/><text x="582.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.22%)</title><rect x="579" y="676" width="3" height="15" fill="rgb(237,38,47)"/><text x="582.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="692" width="3" height="15" fill="rgb(234,222,19)"/><text x="582.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="708" width="3" height="15" fill="rgb(221,77,10)"/><text x="582.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="724" width="3" height="15" fill="rgb(214,175,1)"/><text x="582.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="740" width="3" height="15" fill="rgb(209,205,36)"/><text x="582.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="756" width="3" height="15" fill="rgb(215,139,30)"/><text x="582.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.22%)</title><rect x="579" y="772" width="3" height="15" fill="rgb(231,186,14)"/><text x="582.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="788" width="3" height="15" fill="rgb(246,220,3)"/><text x="582.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="804" width="3" height="15" fill="rgb(251,4,38)"/><text x="582.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="820" width="3" height="15" fill="rgb(207,68,7)"/><text x="582.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="836" width="3" height="15" fill="rgb(249,178,11)"/><text x="582.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="852" width="3" height="15" fill="rgb(229,192,7)"/><text x="582.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.22%)</title><rect x="579" y="868" width="3" height="15" fill="rgb(246,182,33)"/><text x="582.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="884" width="3" height="15" fill="rgb(221,89,47)"/><text x="582.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="579" y="900" width="3" height="15" fill="rgb(223,122,49)"/><text x="582.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="916" width="3" height="15" fill="rgb(225,145,18)"/><text x="582.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="932" width="3" height="15" fill="rgb(207,85,32)"/><text x="582.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="948" width="3" height="15" fill="rgb(236,27,6)"/><text x="582.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="964" width="3" height="15" fill="rgb(245,155,32)"/><text x="582.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="980" width="3" height="15" fill="rgb(205,24,52)"/><text x="582.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="996" width="3" height="15" fill="rgb(226,123,31)"/><text x="582.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.22%)</title><rect x="579" y="1012" width="3" height="15" fill="rgb(231,58,29)"/><text x="582.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="1028" width="3" height="15" fill="rgb(208,165,23)"/><text x="582.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="1044" width="3" height="15" fill="rgb(244,108,17)"/><text x="582.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="1060" width="3" height="15" fill="rgb(212,177,10)"/><text x="582.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="1076" width="3" height="15" fill="rgb(222,93,46)"/><text x="582.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1092" width="3" height="15" fill="rgb(252,156,8)"/><text x="582.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.22%)</title><rect x="579" y="1108" width="3" height="15" fill="rgb(235,72,41)"/><text x="582.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="579" y="1124" width="3" height="15" fill="rgb(208,131,20)"/><text x="582.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1140" width="3" height="15" fill="rgb(207,97,33)"/><text x="582.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="1156" width="3" height="15" fill="rgb(218,176,14)"/><text x="582.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="1172" width="3" height="15" fill="rgb(223,215,2)"/><text x="582.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="1188" width="3" height="15" fill="rgb(246,104,19)"/><text x="582.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="1204" width="3" height="15" fill="rgb(222,58,9)"/><text x="582.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1220" width="3" height="15" fill="rgb(224,93,28)"/><text x="582.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.22%)</title><rect x="579" y="1236" width="3" height="15" fill="rgb(254,173,40)"/><text x="582.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="579" y="1252" width="3" height="15" fill="rgb(246,59,0)"/><text x="582.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1268" width="3" height="15" fill="rgb(224,8,34)"/><text x="582.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="1284" width="3" height="15" fill="rgb(208,72,28)"/><text x="582.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="1300" width="3" height="15" fill="rgb(246,61,49)"/><text x="582.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="1316" width="3" height="15" fill="rgb(239,130,28)"/><text x="582.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="1332" width="3" height="15" fill="rgb(244,40,43)"/><text x="582.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1348" width="3" height="15" fill="rgb(228,176,49)"/><text x="582.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.22%)</title><rect x="579" y="1364" width="3" height="15" fill="rgb(228,153,41)"/><text x="582.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="579" y="1380" width="3" height="15" fill="rgb(249,89,37)"/><text x="582.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="579" y="1396" width="3" height="15" fill="rgb(219,132,51)"/><text x="582.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="579" y="1412" width="3" height="15" fill="rgb(251,52,51)"/><text x="582.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="579" y="1428" width="3" height="15" fill="rgb(228,47,3)"/><text x="582.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="579" y="1444" width="3" height="15" fill="rgb(218,67,4)"/><text x="582.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.22%)</title><rect x="579" y="1460" width="3" height="15" fill="rgb(205,66,30)"/><text x="582.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.22%)</title><rect x="579" y="1476" width="3" height="15" fill="rgb(247,106,18)"/><text x="582.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.22%)</title><rect x="579" y="1492" width="3" height="15" fill="rgb(249,22,36)"/><text x="582.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.22%)</title><rect x="579" y="1508" width="3" height="15" fill="rgb(231,163,45)"/><text x="582.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.22%)</title><rect x="579" y="1524" width="3" height="15" fill="rgb(245,55,33)"/><text x="582.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.22%)</title><rect x="579" y="1540" width="3" height="15" fill="rgb(249,95,36)"/><text x="582.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="579" y="1556" width="3" height="15" fill="rgb(232,229,36)"/><text x="582.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.22%)</title><rect x="579" y="1572" width="3" height="15" fill="rgb(233,81,18)"/><text x="582.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.22%)</title><rect x="579" y="1588" width="3" height="15" fill="rgb(251,93,52)"/><text x="582.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.22%)</title><rect x="579" y="1604" width="3" height="15" fill="rgb(215,46,35)"/><text x="582.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.22%)</title><rect x="579" y="1620" width="3" height="15" fill="rgb(226,104,2)"/><text x="582.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.22%)</title><rect x="579" y="1636" width="3" height="15" fill="rgb(221,83,44)"/><text x="582.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.22%)</title><rect x="579" y="1652" width="3" height="15" fill="rgb(230,22,10)"/><text x="582.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="579" y="1668" width="3" height="15" fill="rgb(229,192,9)"/><text x="582.00" y="1678.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.22%)</title><rect x="582" y="180" width="2" height="15" fill="rgb(249,192,45)"/><text x="585.00" y="190.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:18) (2 samples, 0.43%)</title><rect x="582" y="100" width="5" height="15" fill="rgb(240,185,11)"/><text x="585.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.43%)</title><rect x="582" y="116" width="5" height="15" fill="rgb(241,162,22)"/><text x="585.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.43%)</title><rect x="582" y="132" width="5" height="15" fill="rgb(252,29,3)"/><text x="585.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.43%)</title><rect x="582" y="148" width="5" height="15" fill="rgb(206,124,4)"/><text x="585.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.43%)</title><rect x="582" y="164" width="5" height="15" fill="rgb(246,192,51)"/><text x="585.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.22%)</title><rect x="584" y="180" width="3" height="15" fill="rgb(252,72,9)"/><text x="587.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.22%)</title><rect x="584" y="196" width="3" height="15" fill="rgb(249,2,35)"/><text x="587.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.22%)</title><rect x="587" y="164" width="2" height="15" fill="rgb(223,19,3)"/><text x="590.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.43%)</title><rect x="589" y="164" width="5" height="15" fill="rgb(245,22,26)"/><text x="592.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.22%)</title><rect x="607" y="180" width="3" height="15" fill="rgb(230,185,20)"/><text x="610.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (23 samples, 4.96%)</title><rect x="610" y="180" width="58" height="15" fill="rgb(211,9,0)"/><text x="613.00" y="190.50">run (m..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.65%)</title><rect x="661" y="196" width="7" height="15" fill="rgb(247,172,27)"/><text x="664.00" y="206.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.22%)</title><rect x="716" y="244" width="3" height="15" fill="rgb(213,105,42)"/><text x="719.00" y="254.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.22%)</title><rect x="716" y="260" width="3" height="15" fill="rgb(205,188,13)"/><text x="719.00" y="270.50"></text></g><g><title>unpack_tuple (mapping.c:164) (1 samples, 0.22%)</title><rect x="716" y="276" width="3" height="15" fill="rgb(219,18,34)"/><text x="719.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.43%)</title><rect x="716" y="228" width="6" height="15" fill="rgb(206,4,29)"/><text x="719.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.22%)</title><rect x="719" y="244" width="3" height="15" fill="rgb(217,86,1)"/><text x="722.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.22%)</title><rect x="719" y="260" width="3" height="15" fill="rgb(210,210,9)"/><text x="722.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.22%)</title><rect x="719" y="276" width="3" height="15" fill="rgb(215,23,30)"/><text x="722.00" y="286.50"></text></g><g><title>0x7f06b894be50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="719" y="292" width="3" height="15" fill="rgb(210,114,5)"/><text x="722.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.22%)</title><rect x="722" y="244" width="2" height="15" fill="rgb(241,57,47)"/><text x="725.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.22%)</title><rect x="722" y="260" width="2" height="15" fill="rgb(233,124,11)"/><text x="725.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="722" y="276" width="2" height="15" fill="rgb(230,116,28)"/><text x="725.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1437) (1 samples, 0.22%)</title><rect x="722" y="292" width="2" height="15" fill="rgb(242,88,4)"/><text x="725.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (4 samples, 0.86%)</title><rect x="716" y="212" width="11" height="15" fill="rgb(247,20,21)"/><text x="719.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.43%)</title><rect x="722" y="228" width="5" height="15" fill="rgb(247,71,46)"/><text x="725.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:3024) (1 samples, 0.22%)</title><rect x="724" y="244" width="3" height="15" fill="rgb(220,32,48)"/><text x="727.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (2 samples, 0.43%)</title><rect x="727" y="212" width="5" height="15" fill="rgb(211,12,47)"/><text x="730.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.22%)</title><rect x="729" y="228" width="3" height="15" fill="rgb(252,141,52)"/><text x="732.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:40) (1 samples, 0.22%)</title><rect x="729" y="244" width="3" height="15" fill="rgb(227,129,1)"/><text x="732.00" y="254.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.22%)</title><rect x="734" y="244" width="3" height="15" fill="rgb(236,173,50)"/><text x="737.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.22%)</title><rect x="737" y="276" width="2" height="15" fill="rgb(205,159,41)"/><text x="740.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="737" y="292" width="2" height="15" fill="rgb(220,118,8)"/><text x="740.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.22%)</title><rect x="739" y="276" width="3" height="15" fill="rgb(220,94,45)"/><text x="742.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.22%)</title><rect x="739" y="292" width="3" height="15" fill="rgb(253,119,41)"/><text x="742.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.22%)</title><rect x="739" y="308" width="3" height="15" fill="rgb(241,211,51)"/><text x="742.00" y="318.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.22%)</title><rect x="739" y="324" width="3" height="15" fill="rgb(233,171,35)"/><text x="742.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (5 samples, 1.08%)</title><rect x="732" y="212" width="12" height="15" fill="rgb(249,16,41)"/><text x="735.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (5 samples, 1.08%)</title><rect x="732" y="228" width="12" height="15" fill="rgb(237,170,4)"/><text x="735.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.65%)</title><rect x="737" y="244" width="7" height="15" fill="rgb(239,143,45)"/><text x="740.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.65%)</title><rect x="737" y="260" width="7" height="15" fill="rgb(227,61,41)"/><text x="740.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.22%)</title><rect x="742" y="276" width="2" height="15" fill="rgb(242,170,0)"/><text x="745.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.22%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(241,97,11)"/><text x="745.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.22%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(226,127,11)"/><text x="745.00" y="318.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.22%)</title><rect x="747" y="228" width="3" height="15" fill="rgb(248,17,32)"/><text x="750.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.22%)</title><rect x="747" y="244" width="3" height="15" fill="rgb(225,8,38)"/><text x="750.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.65%)</title><rect x="744" y="212" width="8" height="15" fill="rgb(218,99,5)"/><text x="747.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.22%)</title><rect x="750" y="228" width="2" height="15" fill="rgb(212,110,10)"/><text x="753.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.22%)</title><rect x="750" y="244" width="2" height="15" fill="rgb(235,145,25)"/><text x="753.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.22%)</title><rect x="750" y="260" width="2" height="15" fill="rgb(206,211,2)"/><text x="753.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.22%)</title><rect x="750" y="276" width="2" height="15" fill="rgb(211,3,28)"/><text x="753.00" y="286.50"></text></g><g><title>try_binary_elide (temp_elide.c:338) (1 samples, 0.22%)</title><rect x="752" y="244" width="3" height="15" fill="rgb(227,14,1)"/><text x="755.00" y="254.50"></text></g><g><title>array_add (number.c:326) (2 samples, 0.43%)</title><rect x="752" y="228" width="5" height="15" fill="rgb(209,5,0)"/><text x="755.00" y="238.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.22%)</title><rect x="755" y="244" width="2" height="15" fill="rgb(240,54,44)"/><text x="758.00" y="254.50"></text></g><g><title>can_elide_temp (temp_elide.c:329) (1 samples, 0.22%)</title><rect x="755" y="260" width="2" height="15" fill="rgb(224,23,7)"/><text x="758.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.22%)</title><rect x="757" y="260" width="3" height="15" fill="rgb(250,79,53)"/><text x="760.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.22%)</title><rect x="757" y="276" width="3" height="15" fill="rgb(224,194,45)"/><text x="760.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="760" y="260" width="2" height="15" fill="rgb(205,141,42)"/><text x="763.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.22%)</title><rect x="760" y="276" width="2" height="15" fill="rgb(230,26,54)"/><text x="763.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.22%)</title><rect x="760" y="292" width="2" height="15" fill="rgb(253,27,4)"/><text x="763.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.22%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(241,145,15)"/><text x="763.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.22%)</title><rect x="760" y="324" width="2" height="15" fill="rgb(244,74,1)"/><text x="763.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.22%)</title><rect x="760" y="340" width="2" height="15" fill="rgb(240,34,14)"/><text x="763.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1523) (1 samples, 0.22%)</title><rect x="760" y="356" width="2" height="15" fill="rgb(250,159,0)"/><text x="763.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.22%)</title><rect x="762" y="276" width="3" height="15" fill="rgb(241,81,9)"/><text x="765.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.22%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(224,84,28)"/><text x="765.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.22%)</title><rect x="762" y="308" width="3" height="15" fill="rgb(249,223,50)"/><text x="765.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.22%)</title><rect x="762" y="324" width="3" height="15" fill="rgb(233,157,16)"/><text x="765.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.22%)</title><rect x="762" y="340" width="3" height="15" fill="rgb(217,92,43)"/><text x="765.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.22%)</title><rect x="762" y="356" width="3" height="15" fill="rgb(251,211,46)"/><text x="765.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.22%)</title><rect x="762" y="372" width="3" height="15" fill="rgb(237,137,15)"/><text x="765.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.43%)</title><rect x="762" y="260" width="5" height="15" fill="rgb(245,114,43)"/><text x="765.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.22%)</title><rect x="765" y="276" width="2" height="15" fill="rgb(229,83,4)"/><text x="768.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.22%)</title><rect x="765" y="292" width="2" height="15" fill="rgb(212,43,48)"/><text x="768.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="765" y="308" width="2" height="15" fill="rgb(226,25,34)"/><text x="768.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="757" y="244" width="13" height="15" fill="rgb(225,54,20)"/><text x="760.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="767" y="260" width="3" height="15" fill="rgb(235,8,37)"/><text x="770.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="767" y="276" width="3" height="15" fill="rgb(218,206,32)"/><text x="770.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.22%)</title><rect x="767" y="292" width="3" height="15" fill="rgb(247,229,51)"/><text x="770.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (25 samples, 5.39%)</title><rect x="709" y="196" width="63" height="15" fill="rgb(248,116,45)"/><text x="712.00" y="206.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (8 samples, 1.72%)</title><rect x="752" y="212" width="20" height="15" fill="rgb(243,199,3)"/><text x="755.00" y="222.50"></text></g><g><title>array_add (number.c:330) (6 samples, 1.29%)</title><rect x="757" y="228" width="15" height="15" fill="rgb(227,99,6)"/><text x="760.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.22%)</title><rect x="770" y="244" width="2" height="15" fill="rgb(244,71,15)"/><text x="773.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.22%)</title><rect x="770" y="260" width="2" height="15" fill="rgb(215,54,29)"/><text x="773.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="775" y="276" width="3" height="15" fill="rgb(218,100,42)"/><text x="778.00" y="286.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.22%)</title><rect x="775" y="292" width="3" height="15" fill="rgb(252,73,36)"/><text x="778.00" y="302.50"></text></g><g><title>0x7f06b8956134 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="775" y="308" width="3" height="15" fill="rgb(239,191,31)"/><text x="778.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (2 samples, 0.43%)</title><rect x="775" y="260" width="5" height="15" fill="rgb(246,155,54)"/><text x="778.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="778" y="276" width="2" height="15" fill="rgb(239,206,8)"/><text x="781.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="778" y="292" width="2" height="15" fill="rgb(221,209,48)"/><text x="781.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.22%)</title><rect x="778" y="308" width="2" height="15" fill="rgb(213,170,26)"/><text x="781.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.22%)</title><rect x="778" y="324" width="2" height="15" fill="rgb(243,75,54)"/><text x="781.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.22%)</title><rect x="778" y="340" width="2" height="15" fill="rgb(208,144,10)"/><text x="781.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.22%)</title><rect x="780" y="260" width="3" height="15" fill="rgb(211,32,35)"/><text x="783.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.22%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(226,205,24)"/><text x="783.00" y="286.50"></text></g><g><title>0x7f06b8956124 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(217,148,11)"/><text x="783.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.22%)</title><rect x="785" y="292" width="3" height="15" fill="rgb(221,100,39)"/><text x="788.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.22%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(224,42,47)"/><text x="791.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (4 samples, 0.86%)</title><rect x="783" y="260" width="10" height="15" fill="rgb(218,94,43)"/><text x="786.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (3 samples, 0.65%)</title><rect x="785" y="276" width="8" height="15" fill="rgb(249,112,40)"/><text x="788.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.43%)</title><rect x="788" y="292" width="5" height="15" fill="rgb(252,116,26)"/><text x="791.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:577) (1 samples, 0.22%)</title><rect x="790" y="308" width="3" height="15" fill="rgb(221,187,45)"/><text x="793.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (9 samples, 1.94%)</title><rect x="772" y="196" width="23" height="15" fill="rgb(247,193,36)"/><text x="775.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 1.94%)</title><rect x="772" y="212" width="23" height="15" fill="rgb(251,112,0)"/><text x="775.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (8 samples, 1.72%)</title><rect x="775" y="228" width="20" height="15" fill="rgb(230,83,12)"/><text x="778.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (8 samples, 1.72%)</title><rect x="775" y="244" width="20" height="15" fill="rgb(208,3,13)"/><text x="778.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.22%)</title><rect x="793" y="260" width="2" height="15" fill="rgb(233,48,13)"/><text x="796.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.22%)</title><rect x="793" y="276" width="2" height="15" fill="rgb(210,46,54)"/><text x="796.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.22%)</title><rect x="793" y="292" width="2" height="15" fill="rgb(240,101,40)"/><text x="796.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="793" y="308" width="2" height="15" fill="rgb(233,158,52)"/><text x="796.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4033) (1 samples, 0.22%)</title><rect x="793" y="324" width="2" height="15" fill="rgb(220,46,18)"/><text x="796.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:18) (1 samples, 0.22%)</title><rect x="800" y="228" width="3" height="15" fill="rgb(244,149,25)"/><text x="803.00" y="238.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.22%)</title><rect x="805" y="292" width="3" height="15" fill="rgb(225,173,30)"/><text x="808.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (3 samples, 0.65%)</title><rect x="803" y="228" width="8" height="15" fill="rgb(215,126,54)"/><text x="806.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="805" y="244" width="6" height="15" fill="rgb(213,6,2)"/><text x="808.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="805" y="260" width="6" height="15" fill="rgb(237,18,21)"/><text x="808.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.43%)</title><rect x="805" y="276" width="6" height="15" fill="rgb(233,65,13)"/><text x="808.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.22%)</title><rect x="808" y="292" width="3" height="15" fill="rgb(219,188,19)"/><text x="811.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.22%)</title><rect x="808" y="308" width="3" height="15" fill="rgb(244,81,28)"/><text x="811.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.22%)</title><rect x="808" y="324" width="3" height="15" fill="rgb(228,105,26)"/><text x="811.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:417) (1 samples, 0.22%)</title><rect x="808" y="340" width="3" height="15" fill="rgb(211,135,15)"/><text x="811.00" y="350.50"></text></g><g><title>0x7f06b8ab4e17 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="813" y="340" width="3" height="15" fill="rgb(229,215,8)"/><text x="816.00" y="350.50"></text></g><g><title>0x7f06b8ab4ea2 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="816" y="340" width="2" height="15" fill="rgb(218,138,25)"/><text x="819.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:20) (4 samples, 0.86%)</title><rect x="811" y="228" width="10" height="15" fill="rgb(205,192,15)"/><text x="814.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.86%)</title><rect x="811" y="244" width="10" height="15" fill="rgb(235,62,27)"/><text x="814.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="811" y="260" width="10" height="15" fill="rgb(232,129,27)"/><text x="814.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (4 samples, 0.86%)</title><rect x="811" y="276" width="10" height="15" fill="rgb(208,57,49)"/><text x="814.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (4 samples, 0.86%)</title><rect x="811" y="292" width="10" height="15" fill="rgb(253,205,7)"/><text x="814.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (4 samples, 0.86%)</title><rect x="811" y="308" width="10" height="15" fill="rgb(211,120,37)"/><text x="814.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (4 samples, 0.86%)</title><rect x="811" y="324" width="10" height="15" fill="rgb(209,205,8)"/><text x="814.00" y="334.50"></text></g><g><title>0x7f06b8ab4ea6 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="818" y="340" width="3" height="15" fill="rgb(207,140,13)"/><text x="821.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.22%)</title><rect x="821" y="260" width="2" height="15" fill="rgb(240,224,1)"/><text x="824.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.22%)</title><rect x="821" y="276" width="2" height="15" fill="rgb(212,65,37)"/><text x="824.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.22%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(234,217,8)"/><text x="826.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.22%)</title><rect x="823" y="292" width="3" height="15" fill="rgb(232,56,10)"/><text x="826.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.22%)</title><rect x="823" y="308" width="3" height="15" fill="rgb(228,164,40)"/><text x="826.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.22%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(240,203,38)"/><text x="826.00" y="334.50"></text></g><g><title>0x7f06b7b584f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="823" y="340" width="3" height="15" fill="rgb(221,24,12)"/><text x="826.00" y="350.50"></text></g><g><title>0x7f06b8ab79e4 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="826" y="324" width="2" height="15" fill="rgb(238,225,3)"/><text x="829.00" y="334.50"></text></g><g><title>0x7f06b8ab7a21 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="828" y="324" width="3" height="15" fill="rgb(250,169,2)"/><text x="831.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (5 samples, 1.08%)</title><rect x="821" y="228" width="12" height="15" fill="rgb(242,79,10)"/><text x="824.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="821" y="244" width="12" height="15" fill="rgb(213,61,53)"/><text x="824.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="823" y="260" width="10" height="15" fill="rgb(207,85,22)"/><text x="826.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.65%)</title><rect x="826" y="276" width="7" height="15" fill="rgb(223,171,11)"/><text x="829.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (3 samples, 0.65%)</title><rect x="826" y="292" width="7" height="15" fill="rgb(253,104,28)"/><text x="829.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (3 samples, 0.65%)</title><rect x="826" y="308" width="7" height="15" fill="rgb(242,164,48)"/><text x="829.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.22%)</title><rect x="831" y="324" width="2" height="15" fill="rgb(225,61,51)"/><text x="834.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="833" y="260" width="3" height="15" fill="rgb(228,135,48)"/><text x="836.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="833" y="276" width="3" height="15" fill="rgb(223,22,10)"/><text x="836.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.22%)</title><rect x="833" y="292" width="3" height="15" fill="rgb(220,2,34)"/><text x="836.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.22%)</title><rect x="833" y="308" width="3" height="15" fill="rgb(239,61,20)"/><text x="836.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.22%)</title><rect x="833" y="324" width="3" height="15" fill="rgb(215,142,9)"/><text x="836.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (2 samples, 0.43%)</title><rect x="833" y="228" width="6" height="15" fill="rgb(213,195,51)"/><text x="836.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="833" y="244" width="6" height="15" fill="rgb(214,5,37)"/><text x="836.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="836" y="260" width="3" height="15" fill="rgb(244,2,44)"/><text x="839.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1662) (1 samples, 0.22%)</title><rect x="836" y="276" width="3" height="15" fill="rgb(233,136,4)"/><text x="839.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="841" y="244" width="3" height="15" fill="rgb(251,178,45)"/><text x="844.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="841" y="260" width="3" height="15" fill="rgb(245,8,9)"/><text x="844.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="841" y="276" width="3" height="15" fill="rgb(250,126,31)"/><text x="844.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.43%)</title><rect x="851" y="292" width="5" height="15" fill="rgb(233,37,15)"/><text x="854.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.22%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(222,213,9)"/><text x="862.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.22%)</title><rect x="861" y="356" width="3" height="15" fill="rgb(243,166,40)"/><text x="864.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.43%)</title><rect x="861" y="340" width="6" height="15" fill="rgb(209,21,40)"/><text x="864.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.22%)</title><rect x="864" y="356" width="3" height="15" fill="rgb(251,23,28)"/><text x="867.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="867" y="356" width="2" height="15" fill="rgb(216,189,2)"/><text x="870.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="867" y="372" width="2" height="15" fill="rgb(222,221,37)"/><text x="870.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="867" y="388" width="2" height="15" fill="rgb(245,177,44)"/><text x="870.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="867" y="404" width="2" height="15" fill="rgb(243,196,31)"/><text x="870.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.22%)</title><rect x="867" y="420" width="2" height="15" fill="rgb(233,164,20)"/><text x="870.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.22%)</title><rect x="867" y="436" width="2" height="15" fill="rgb(219,136,12)"/><text x="870.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.22%)</title><rect x="867" y="452" width="2" height="15" fill="rgb(220,24,37)"/><text x="870.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="867" y="468" width="2" height="15" fill="rgb(222,42,19)"/><text x="870.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="869" y="372" width="3" height="15" fill="rgb(216,199,44)"/><text x="872.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.43%)</title><rect x="869" y="356" width="5" height="15" fill="rgb(219,5,38)"/><text x="872.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="872" y="372" width="2" height="15" fill="rgb(206,195,48)"/><text x="875.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1548) (1 samples, 0.22%)</title><rect x="872" y="388" width="2" height="15" fill="rgb(239,100,16)"/><text x="875.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.22%)</title><rect x="874" y="356" width="3" height="15" fill="rgb(241,40,13)"/><text x="877.00" y="366.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.22%)</title><rect x="874" y="372" width="3" height="15" fill="rgb(248,101,54)"/><text x="877.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.22%)</title><rect x="877" y="372" width="2" height="15" fill="rgb(216,214,48)"/><text x="880.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.22%)</title><rect x="877" y="388" width="2" height="15" fill="rgb(227,114,11)"/><text x="880.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (15 samples, 3.23%)</title><rect x="844" y="244" width="38" height="15" fill="rgb(248,49,24)"/><text x="847.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 3.02%)</title><rect x="846" y="260" width="36" height="15" fill="rgb(250,224,6)"/><text x="849.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (13 samples, 2.80%)</title><rect x="849" y="276" width="33" height="15" fill="rgb(220,61,23)"/><text x="852.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (10 samples, 2.16%)</title><rect x="856" y="292" width="26" height="15" fill="rgb(252,187,53)"/><text x="859.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.94%)</title><rect x="859" y="308" width="23" height="15" fill="rgb(225,169,9)"/><text x="862.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.72%)</title><rect x="861" y="324" width="21" height="15" fill="rgb(241,37,19)"/><text x="864.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.29%)</title><rect x="867" y="340" width="15" height="15" fill="rgb(213,64,5)"/><text x="870.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.43%)</title><rect x="877" y="356" width="5" height="15" fill="rgb(253,77,33)"/><text x="880.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.22%)</title><rect x="879" y="372" width="3" height="15" fill="rgb(226,58,27)"/><text x="882.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (18 samples, 3.88%)</title><rect x="839" y="228" width="45" height="15" fill="rgb(249,128,12)"/><text x="842.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.22%)</title><rect x="882" y="244" width="2" height="15" fill="rgb(224,140,30)"/><text x="885.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:440) (1 samples, 0.22%)</title><rect x="882" y="260" width="2" height="15" fill="rgb(248,150,44)"/><text x="885.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:28) (1 samples, 0.22%)</title><rect x="884" y="228" width="3" height="15" fill="rgb(221,94,11)"/><text x="887.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="889" y="244" width="3" height="15" fill="rgb(225,162,45)"/><text x="892.00" y="254.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.22%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(221,44,40)"/><text x="898.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.22%)</title><rect x="900" y="292" width="2" height="15" fill="rgb(254,75,43)"/><text x="903.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.22%)</title><rect x="907" y="324" width="3" height="15" fill="rgb(229,217,20)"/><text x="910.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="907" y="340" width="3" height="15" fill="rgb(253,47,19)"/><text x="910.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.22%)</title><rect x="910" y="372" width="2" height="15" fill="rgb(247,220,24)"/><text x="913.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.22%)</title><rect x="910" y="388" width="2" height="15" fill="rgb(221,53,5)"/><text x="913.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.43%)</title><rect x="910" y="356" width="5" height="15" fill="rgb(247,116,2)"/><text x="913.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.22%)</title><rect x="912" y="372" width="3" height="15" fill="rgb(218,198,24)"/><text x="915.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2129) (1 samples, 0.22%)</title><rect x="912" y="388" width="3" height="15" fill="rgb(254,28,33)"/><text x="915.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.22%)</title><rect x="915" y="372" width="2" height="15" fill="rgb(248,137,10)"/><text x="918.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.22%)</title><rect x="915" y="388" width="2" height="15" fill="rgb(247,176,16)"/><text x="918.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (49 samples, 10.56%)</title><rect x="795" y="196" width="125" height="15" fill="rgb(234,188,13)"/><text x="798.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (48 samples, 10.34%)</title><rect x="798" y="212" width="122" height="15" fill="rgb(217,120,45)"/><text x="801.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (13 samples, 2.80%)</title><rect x="887" y="228" width="33" height="15" fill="rgb(220,68,49)"/><text x="890.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 2.37%)</title><rect x="892" y="244" width="28" height="15" fill="rgb(207,17,32)"/><text x="895.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.37%)</title><rect x="892" y="260" width="28" height="15" fill="rgb(225,12,22)"/><text x="895.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 1.94%)</title><rect x="897" y="276" width="23" height="15" fill="rgb(212,26,42)"/><text x="900.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 1.51%)</title><rect x="902" y="292" width="18" height="15" fill="rgb(253,69,34)"/><text x="905.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.08%)</title><rect x="907" y="308" width="13" height="15" fill="rgb(248,151,50)"/><text x="910.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.86%)</title><rect x="910" y="324" width="10" height="15" fill="rgb(251,181,21)"/><text x="913.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.86%)</title><rect x="910" y="340" width="10" height="15" fill="rgb(208,20,24)"/><text x="913.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.43%)</title><rect x="915" y="356" width="5" height="15" fill="rgb(217,140,44)"/><text x="918.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.22%)</title><rect x="917" y="372" width="3" height="15" fill="rgb(231,56,11)"/><text x="920.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.22%)</title><rect x="917" y="388" width="3" height="15" fill="rgb(234,179,39)"/><text x="920.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.22%)</title><rect x="920" y="196" width="2" height="15" fill="rgb(218,78,28)"/><text x="923.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.22%)</title><rect x="920" y="212" width="2" height="15" fill="rgb(231,40,30)"/><text x="923.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="925" y="228" width="3" height="15" fill="rgb(245,141,16)"/><text x="928.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.22%)</title><rect x="925" y="244" width="3" height="15" fill="rgb(207,46,5)"/><text x="928.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="928" y="244" width="2" height="15" fill="rgb(229,18,31)"/><text x="931.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.22%)</title><rect x="928" y="260" width="2" height="15" fill="rgb(244,201,37)"/><text x="931.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.22%)</title><rect x="928" y="276" width="2" height="15" fill="rgb(251,123,53)"/><text x="931.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (4 samples, 0.86%)</title><rect x="922" y="196" width="11" height="15" fill="rgb(219,25,42)"/><text x="925.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (3 samples, 0.65%)</title><rect x="925" y="212" width="8" height="15" fill="rgb(216,211,28)"/><text x="928.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="928" y="228" width="5" height="15" fill="rgb(232,87,30)"/><text x="931.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="930" y="244" width="3" height="15" fill="rgb(228,166,24)"/><text x="933.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.22%)</title><rect x="930" y="260" width="3" height="15" fill="rgb(213,163,3)"/><text x="933.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (3 samples, 0.65%)</title><rect x="935" y="212" width="8" height="15" fill="rgb(205,212,43)"/><text x="938.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4720) (1 samples, 0.22%)</title><rect x="945" y="244" width="3" height="15" fill="rgb(226,112,34)"/><text x="948.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="948" y="260" width="2" height="15" fill="rgb(238,166,49)"/><text x="951.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="948" y="276" width="2" height="15" fill="rgb(210,61,6)"/><text x="951.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.22%)</title><rect x="948" y="292" width="2" height="15" fill="rgb(249,150,47)"/><text x="951.00" y="302.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.22%)</title><rect x="950" y="324" width="3" height="15" fill="rgb(229,85,10)"/><text x="953.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="950" y="340" width="3" height="15" fill="rgb(235,224,30)"/><text x="953.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.22%)</title><rect x="953" y="340" width="3" height="15" fill="rgb(238,33,47)"/><text x="956.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:96) (1 samples, 0.22%)</title><rect x="953" y="356" width="3" height="15" fill="rgb(207,127,9)"/><text x="956.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.22%)</title><rect x="953" y="372" width="3" height="15" fill="rgb(240,113,26)"/><text x="956.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.65%)</title><rect x="950" y="276" width="8" height="15" fill="rgb(228,55,2)"/><text x="953.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.65%)</title><rect x="950" y="292" width="8" height="15" fill="rgb(226,59,11)"/><text x="953.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 0.65%)</title><rect x="950" y="308" width="8" height="15" fill="rgb(252,66,21)"/><text x="953.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.43%)</title><rect x="953" y="324" width="5" height="15" fill="rgb(238,158,5)"/><text x="956.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.22%)</title><rect x="956" y="340" width="2" height="15" fill="rgb(245,180,33)"/><text x="959.00" y="350.50"></text></g><g><title>to_128 (npy_extint128.h:67) (1 samples, 0.22%)</title><rect x="956" y="356" width="2" height="15" fill="rgb(243,210,26)"/><text x="959.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="958" y="308" width="3" height="15" fill="rgb(209,37,4)"/><text x="961.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="958" y="324" width="3" height="15" fill="rgb(220,116,21)"/><text x="961.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="961" y="308" width="2" height="15" fill="rgb(234,190,9)"/><text x="964.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="961" y="324" width="2" height="15" fill="rgb(253,35,8)"/><text x="964.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.22%)</title><rect x="961" y="340" width="2" height="15" fill="rgb(218,170,22)"/><text x="964.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:332) (1 samples, 0.22%)</title><rect x="961" y="356" width="2" height="15" fill="rgb(242,18,53)"/><text x="964.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.65%)</title><rect x="958" y="292" width="8" height="15" fill="rgb(254,8,12)"/><text x="961.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="963" y="308" width="3" height="15" fill="rgb(240,58,20)"/><text x="966.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3045) (1 samples, 0.22%)</title><rect x="963" y="324" width="3" height="15" fill="rgb(235,147,33)"/><text x="966.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="966" y="292" width="2" height="15" fill="rgb(215,194,33)"/><text x="969.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="966" y="308" width="2" height="15" fill="rgb(248,215,0)"/><text x="969.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.22%)</title><rect x="966" y="324" width="2" height="15" fill="rgb(238,20,16)"/><text x="969.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.22%)</title><rect x="968" y="292" width="3" height="15" fill="rgb(222,53,4)"/><text x="971.00" y="302.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1040) (1 samples, 0.22%)</title><rect x="968" y="308" width="3" height="15" fill="rgb(221,15,52)"/><text x="971.00" y="318.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1741) (1 samples, 0.22%)</title><rect x="971" y="308" width="2" height="15" fill="rgb(217,168,28)"/><text x="974.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (12 samples, 2.59%)</title><rect x="945" y="228" width="31" height="15" fill="rgb(230,35,52)"/><text x="948.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.37%)</title><rect x="948" y="244" width="28" height="15" fill="rgb(241,181,6)"/><text x="951.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 2.16%)</title><rect x="950" y="260" width="26" height="15" fill="rgb(226,179,34)"/><text x="953.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.51%)</title><rect x="958" y="276" width="18" height="15" fill="rgb(246,76,51)"/><text x="961.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.43%)</title><rect x="971" y="292" width="5" height="15" fill="rgb(244,157,6)"/><text x="974.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.22%)</title><rect x="973" y="308" width="3" height="15" fill="rgb(235,106,28)"/><text x="976.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:532) (1 samples, 0.22%)</title><rect x="976" y="228" width="2" height="15" fill="rgb(226,13,43)"/><text x="979.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.22%)</title><rect x="978" y="260" width="3" height="15" fill="rgb(248,33,28)"/><text x="981.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1048) (1 samples, 0.22%)</title><rect x="981" y="276" width="3" height="15" fill="rgb(233,73,28)"/><text x="984.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1058) (1 samples, 0.22%)</title><rect x="984" y="276" width="2" height="15" fill="rgb(249,98,3)"/><text x="987.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.65%)</title><rect x="981" y="260" width="8" height="15" fill="rgb(206,157,49)"/><text x="984.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.22%)</title><rect x="986" y="276" width="3" height="15" fill="rgb(213,54,14)"/><text x="989.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.22%)</title><rect x="986" y="292" width="3" height="15" fill="rgb(232,145,44)"/><text x="989.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="989" y="276" width="2" height="15" fill="rgb(226,81,29)"/><text x="992.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1457) (1 samples, 0.22%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(241,119,27)"/><text x="992.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.22%)</title><rect x="991" y="276" width="3" height="15" fill="rgb(245,96,6)"/><text x="994.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.22%)</title><rect x="991" y="292" width="3" height="15" fill="rgb(235,144,46)"/><text x="994.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="994" y="308" width="2" height="15" fill="rgb(217,163,1)"/><text x="997.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="994" y="324" width="2" height="15" fill="rgb(250,45,35)"/><text x="997.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.22%)</title><rect x="994" y="340" width="2" height="15" fill="rgb(206,149,22)"/><text x="997.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.22%)</title><rect x="994" y="356" width="2" height="15" fill="rgb(225,108,42)"/><text x="997.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:117) (1 samples, 0.22%)</title><rect x="994" y="372" width="2" height="15" fill="rgb(212,141,28)"/><text x="997.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.72%)</title><rect x="978" y="244" width="21" height="15" fill="rgb(242,203,6)"/><text x="981.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="989" y="260" width="10" height="15" fill="rgb(208,37,18)"/><text x="992.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.43%)</title><rect x="994" y="276" width="5" height="15" fill="rgb(205,79,9)"/><text x="997.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.43%)</title><rect x="994" y="292" width="5" height="15" fill="rgb(227,197,28)"/><text x="997.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="996" y="308" width="3" height="15" fill="rgb(241,136,41)"/><text x="999.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1910) (1 samples, 0.22%)</title><rect x="996" y="324" width="3" height="15" fill="rgb(223,9,24)"/><text x="999.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (9 samples, 1.94%)</title><rect x="978" y="228" width="23" height="15" fill="rgb(245,15,5)"/><text x="981.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.22%)</title><rect x="999" y="244" width="2" height="15" fill="rgb(226,97,50)"/><text x="1002.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.22%)</title><rect x="999" y="260" width="2" height="15" fill="rgb(240,12,5)"/><text x="1002.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (3 samples, 0.65%)</title><rect x="1001" y="244" width="8" height="15" fill="rgb(217,44,43)"/><text x="1004.00" y="254.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c:29) (1 samples, 0.22%)</title><rect x="1006" y="260" width="3" height="15" fill="rgb(251,134,39)"/><text x="1009.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (1 samples, 0.22%)</title><rect x="1009" y="244" width="2" height="15" fill="rgb(210,178,1)"/><text x="1012.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (1 samples, 0.22%)</title><rect x="1011" y="244" width="3" height="15" fill="rgb(225,129,30)"/><text x="1014.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.22%)</title><rect x="1017" y="308" width="2" height="15" fill="rgb(234,68,2)"/><text x="1020.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.22%)</title><rect x="1017" y="324" width="2" height="15" fill="rgb(211,147,1)"/><text x="1020.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2145) (1 samples, 0.22%)</title><rect x="1017" y="340" width="2" height="15" fill="rgb(243,6,53)"/><text x="1020.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.43%)</title><rect x="1017" y="276" width="5" height="15" fill="rgb(242,31,28)"/><text x="1020.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.43%)</title><rect x="1017" y="292" width="5" height="15" fill="rgb(220,126,14)"/><text x="1020.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.22%)</title><rect x="1019" y="308" width="3" height="15" fill="rgb(242,71,22)"/><text x="1022.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.22%)</title><rect x="1019" y="324" width="3" height="15" fill="rgb(220,54,43)"/><text x="1022.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1019" y="340" width="3" height="15" fill="rgb(253,35,45)"/><text x="1022.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (4 samples, 0.86%)</title><rect x="1014" y="244" width="10" height="15" fill="rgb(251,75,40)"/><text x="1017.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.65%)</title><rect x="1017" y="260" width="7" height="15" fill="rgb(248,52,42)"/><text x="1020.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:303) (1 samples, 0.22%)</title><rect x="1022" y="276" width="2" height="15" fill="rgb(206,91,47)"/><text x="1025.00" y="286.50"></text></g><g><title>npy_cache_import (npy_import.h:22) (1 samples, 0.22%)</title><rect x="1022" y="292" width="2" height="15" fill="rgb(222,216,13)"/><text x="1025.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (37 samples, 7.97%)</title><rect x="933" y="196" width="94" height="15" fill="rgb(210,133,23)"/><text x="936.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (33 samples, 7.11%)</title><rect x="943" y="212" width="84" height="15" fill="rgb(245,127,46)"/><text x="946.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (10 samples, 2.16%)</title><rect x="1001" y="228" width="26" height="15" fill="rgb(240,214,52)"/><text x="1004.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.22%)</title><rect x="1024" y="244" width="3" height="15" fill="rgb(206,49,31)"/><text x="1027.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (142 samples, 30.60%)</title><rect x="668" y="180" width="361" height="15" fill="rgb(207,196,29)"/><text x="671.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.22%)</title><rect x="1027" y="196" width="2" height="15" fill="rgb(245,223,48)"/><text x="1030.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (4 samples, 0.86%)</title><rect x="1029" y="180" width="10" height="15" fill="rgb(225,115,38)"/><text x="1032.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.65%)</title><rect x="1039" y="180" width="8" height="15" fill="rgb(208,190,10)"/><text x="1042.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.22%)</title><rect x="1047" y="180" width="3" height="15" fill="rgb(246,110,24)"/><text x="1050.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (12 samples, 2.59%)</title><rect x="1050" y="180" width="30" height="15" fill="rgb(213,42,33)"/><text x="1053.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (193 samples, 41.59%)</title><rect x="594" y="164" width="491" height="15" fill="rgb(243,136,24)"/><text x="597.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.43%)</title><rect x="1080" y="180" width="5" height="15" fill="rgb(212,44,40)"/><text x="1083.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.22%)</title><rect x="1085" y="164" width="3" height="15" fill="rgb(252,45,34)"/><text x="1088.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (198 samples, 42.67%)</title><rect x="587" y="132" width="503" height="15" fill="rgb(243,52,26)"/><text x="590.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (198 samples, 42.67%)</title><rect x="587" y="148" width="503" height="15" fill="rgb(238,94,35)"/><text x="590.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.22%)</title><rect x="1088" y="164" width="2" height="15" fill="rgb(251,96,45)"/><text x="1091.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:45) (201 samples, 43.32%)</title><rect x="582" y="52" width="511" height="15" fill="rgb(205,142,48)"/><text x="585.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:44) (201 samples, 43.32%)</title><rect x="582" y="68" width="511" height="15" fill="rgb(218,7,46)"/><text x="585.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:44)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:29) (201 samples, 43.32%)</title><rect x="582" y="84" width="511" height="15" fill="rgb(229,228,26)"/><text x="585.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:23) (199 samples, 42.89%)</title><rect x="587" y="100" width="506" height="15" fill="rgb(227,194,20)"/><text x="590.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (199 samples, 42.89%)</title><rect x="587" y="116" width="506" height="15" fill="rgb(232,73,17)"/><text x="590.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="1090" y="132" width="3" height="15" fill="rgb(241,219,19)"/><text x="1093.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.22%)</title><rect x="1108" y="196" width="3" height="15" fill="rgb(219,95,32)"/><text x="1111.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.22%)</title><rect x="1108" y="212" width="3" height="15" fill="rgb(217,208,48)"/><text x="1111.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1108" y="228" width="3" height="15" fill="rgb(249,198,15)"/><text x="1111.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1108" y="244" width="3" height="15" fill="rgb(220,89,51)"/><text x="1111.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1108" y="260" width="3" height="15" fill="rgb(243,23,28)"/><text x="1111.00" y="270.50"></text></g><g><title>0x7f0678978ff9 (?) (1 samples, 0.22%)</title><rect x="1113" y="212" width="3" height="15" fill="rgb(218,128,43)"/><text x="1116.00" y="222.50"></text></g><g><title>0x7f0678973ef6 (?) (1 samples, 0.22%)</title><rect x="1113" y="228" width="3" height="15" fill="rgb(217,128,17)"/><text x="1116.00" y="238.50"></text></g><g><title>0x7f0678968962 (?) (1 samples, 0.22%)</title><rect x="1113" y="244" width="3" height="15" fill="rgb(208,70,42)"/><text x="1116.00" y="254.50"></text></g><g><title>0x7f067899c7a7 (?) (1 samples, 0.22%)</title><rect x="1113" y="260" width="3" height="15" fill="rgb(227,18,7)"/><text x="1116.00" y="270.50"></text></g><g><title>0x7f067899c379 (?) (1 samples, 0.22%)</title><rect x="1113" y="276" width="3" height="15" fill="rgb(234,73,22)"/><text x="1116.00" y="286.50"></text></g><g><title>0x7f0678dfa8b8 (?) (1 samples, 0.22%)</title><rect x="1113" y="292" width="3" height="15" fill="rgb(216,159,6)"/><text x="1116.00" y="302.50"></text></g><g><title>0x7f0678df8c7f (?) (1 samples, 0.22%)</title><rect x="1113" y="308" width="3" height="15" fill="rgb(242,115,7)"/><text x="1116.00" y="318.50"></text></g><g><title>0x7f0678e0b2e5 (?) (1 samples, 0.22%)</title><rect x="1113" y="324" width="3" height="15" fill="rgb(211,94,32)"/><text x="1116.00" y="334.50"></text></g><g><title>0x7f0678db373d (?) (1 samples, 0.22%)</title><rect x="1113" y="340" width="3" height="15" fill="rgb(211,2,34)"/><text x="1116.00" y="350.50"></text></g><g><title>0x7f0678daa620 (?) (1 samples, 0.22%)</title><rect x="1113" y="356" width="3" height="15" fill="rgb(240,79,11)"/><text x="1116.00" y="366.50"></text></g><g><title>0x7f0678df6e0a (?) (1 samples, 0.22%)</title><rect x="1113" y="372" width="3" height="15" fill="rgb(241,55,7)"/><text x="1116.00" y="382.50"></text></g><g><title>0x7f0678dd9132 (?) (1 samples, 0.22%)</title><rect x="1113" y="388" width="3" height="15" fill="rgb(236,42,27)"/><text x="1116.00" y="398.50"></text></g><g><title>0x7ffffbeb6a01 ([vdso]) (1 samples, 0.22%)</title><rect x="1116" y="212" width="2" height="15" fill="rgb(244,76,18)"/><text x="1119.00" y="222.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1121" y="228" width="2" height="15" fill="rgb(233,10,28)"/><text x="1124.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1121" y="244" width="2" height="15" fill="rgb(250,93,4)"/><text x="1124.00" y="254.50"></text></g><g><title>OrtValue::Get&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="260" width="3" height="15" fill="rgb(239,15,3)"/><text x="1126.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1128" y="308" width="3" height="15" fill="rgb(250,222,14)"/><text x="1131.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1128" y="292" width="6" height="15" fill="rgb(221,159,49)"/><text x="1131.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1131" y="308" width="3" height="15" fill="rgb(254,51,42)"/><text x="1134.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1131" y="324" width="3" height="15" fill="rgb(253,80,47)"/><text x="1134.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1131" y="340" width="3" height="15" fill="rgb(245,195,9)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(234,120,12)"/><text x="1137.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1141" y="340" width="3" height="15" fill="rgb(239,170,32)"/><text x="1144.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="340" width="2" height="15" fill="rgb(220,179,27)"/><text x="1147.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="356" width="2" height="15" fill="rgb(244,56,7)"/><text x="1147.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="372" width="2" height="15" fill="rgb(254,137,9)"/><text x="1147.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="388" width="2" height="15" fill="rgb(213,229,19)"/><text x="1147.00" y="398.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1146" y="340" width="3" height="15" fill="rgb(244,62,45)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1149" y="340" width="2" height="15" fill="rgb(220,159,15)"/><text x="1152.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1149" y="356" width="2" height="15" fill="rgb(205,164,13)"/><text x="1152.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1149" y="372" width="2" height="15" fill="rgb(209,97,15)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1149" y="388" width="2" height="15" fill="rgb(236,0,19)"/><text x="1152.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1149" y="404" width="2" height="15" fill="rgb(241,7,13)"/><text x="1152.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1149" y="420" width="2" height="15" fill="rgb(246,132,38)"/><text x="1152.00" y="430.50"></text></g><g><title>onnxruntime::MatMulComputeHelper::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="356" width="3" height="15" fill="rgb(205,209,35)"/><text x="1154.00" y="366.50"></text></g><g><title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_assign_aux&lt;unsigned long const*&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="372" width="3" height="15" fill="rgb(245,223,21)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7f067893f850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="388" width="3" height="15" fill="rgb(254,133,53)"/><text x="1154.00" y="398.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1151" y="340" width="5" height="15" fill="rgb(208,209,36)"/><text x="1154.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1154" y="356" width="2" height="15" fill="rgb(213,73,38)"/><text x="1157.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="372" width="2" height="15" fill="rgb(242,187,0)"/><text x="1157.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="388" width="2" height="15" fill="rgb(234,20,11)"/><text x="1157.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="404" width="2" height="15" fill="rgb(248,76,4)"/><text x="1157.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="420" width="2" height="15" fill="rgb(207,187,27)"/><text x="1157.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="436" width="2" height="15" fill="rgb(219,91,7)"/><text x="1157.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1154" y="452" width="2" height="15" fill="rgb(228,14,14)"/><text x="1157.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1156" y="340" width="3" height="15" fill="rgb(238,208,45)"/><text x="1159.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1164" y="372" width="3" height="15" fill="rgb(218,135,36)"/><text x="1167.00" y="382.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.86%)</title><rect x="1159" y="340" width="10" height="15" fill="rgb(240,12,34)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.86%)</title><rect x="1159" y="356" width="10" height="15" fill="rgb(208,73,11)"/><text x="1162.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1167" y="372" width="2" height="15" fill="rgb(220,192,28)"/><text x="1170.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1172" y="468" width="2" height="15" fill="rgb(233,137,9)"/><text x="1175.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1172" y="484" width="2" height="15" fill="rgb(245,213,48)"/><text x="1175.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.31%)</title><rect x="1126" y="260" width="51" height="15" fill="rgb(224,209,10)"/><text x="1129.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.31%)</title><rect x="1126" y="276" width="51" height="15" fill="rgb(253,152,19)"/><text x="1129.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.45%)</title><rect x="1136" y="292" width="41" height="15" fill="rgb(214,124,41)"/><text x="1139.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.23%)</title><rect x="1139" y="308" width="38" height="15" fill="rgb(227,26,48)"/><text x="1142.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.23%)</title><rect x="1139" y="324" width="38" height="15" fill="rgb(248,89,28)"/><text x="1142.00" y="334.50">onn..</text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.65%)</title><rect x="1169" y="340" width="8" height="15" fill="rgb(229,167,47)"/><text x="1172.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.65%)</title><rect x="1169" y="356" width="8" height="15" fill="rgb(244,26,10)"/><text x="1172.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="372" width="5" height="15" fill="rgb(228,180,12)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="388" width="5" height="15" fill="rgb(220,215,21)"/><text x="1175.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="404" width="5" height="15" fill="rgb(251,142,48)"/><text x="1175.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="420" width="5" height="15" fill="rgb(218,106,11)"/><text x="1175.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="436" width="5" height="15" fill="rgb(240,176,22)"/><text x="1175.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1172" y="452" width="5" height="15" fill="rgb(214,210,21)"/><text x="1175.00" y="462.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1174" y="468" width="3" height="15" fill="rgb(228,45,21)"/><text x="1177.00" y="478.50"></text></g><g><title>0x7f06b89446d2 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1174" y="484" width="3" height="15" fill="rgb(221,5,2)"/><text x="1177.00" y="494.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(220,137,46)"/><text x="1180.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1177" y="276" width="2" height="15" fill="rgb(236,211,9)"/><text x="1180.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1177" y="292" width="2" height="15" fill="rgb(226,181,6)"/><text x="1180.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1177" y="308" width="2" height="15" fill="rgb(237,27,46)"/><text x="1180.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(236,117,54)"/><text x="1182.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.22%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(228,64,10)"/><text x="1182.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="1179" y="292" width="3" height="15" fill="rgb(244,66,26)"/><text x="1182.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.22%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(219,161,40)"/><text x="1182.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (34 samples, 7.33%)</title><rect x="1100" y="164" width="87" height="15" fill="rgb(215,91,36)"/><text x="1103.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (33 samples, 7.11%)</title><rect x="1103" y="180" width="84" height="15" fill="rgb(235,141,12)"/><text x="1106.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (30 samples, 6.47%)</title><rect x="1111" y="196" width="76" height="15" fill="rgb(223,208,43)"/><text x="1114.00" y="206.50">run (onn..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 5.82%)</title><rect x="1118" y="212" width="69" height="15" fill="rgb(247,215,2)"/><text x="1121.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.39%)</title><rect x="1123" y="228" width="64" height="15" fill="rgb(222,76,14)"/><text x="1126.00" y="238.50">void py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.39%)</title><rect x="1123" y="244" width="64" height="15" fill="rgb(248,156,42)"/><text x="1126.00" y="254.50">onnxrun..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1182" y="260" width="5" height="15" fill="rgb(220,113,28)"/><text x="1185.00" y="270.50"></text></g><g><title>all (464 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,102,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:52) (38 samples, 8.19%)</title><rect x="1093" y="52" width="97" height="15" fill="rgb(247,75,49)"/><text x="1096.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:51) (38 samples, 8.19%)</title><rect x="1093" y="68" width="97" height="15" fill="rgb(205,161,2)"/><text x="1096.00" y="78.50">profile_ort..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:29) (38 samples, 8.19%)</title><rect x="1093" y="84" width="97" height="15" fill="rgb(244,160,38)"/><text x="1096.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py:23) (38 samples, 8.19%)</title><rect x="1093" y="100" width="97" height="15" fill="rgb(218,175,50)"/><text x="1096.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (38 samples, 8.19%)</title><rect x="1093" y="116" width="97" height="15" fill="rgb(227,11,42)"/><text x="1096.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (36 samples, 7.76%)</title><rect x="1098" y="132" width="92" height="15" fill="rgb(246,10,38)"/><text x="1101.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (35 samples, 7.54%)</title><rect x="1100" y="148" width="90" height="15" fill="rgb(246,0,26)"/><text x="1103.00" y="158.50">run (mlpro..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(240,228,14)"/><text x="1190.00" y="174.50"></text></g></g></svg>