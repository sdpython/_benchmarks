<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(242,74,7)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(211,108,53)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(218,154,42)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(230,148,16)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(224,128,6)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(210,160,19)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(230,191,43)"/><text x="13.00" y="974.50"></text></g><g><title>add (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="13" y="916" width="7" height="15" fill="rgb(209,155,8)"/><text x="16.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="16" y="932" width="4" height="15" fill="rgb(253,124,46)"/><text x="19.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.88%)</title><rect x="13" y="868" width="10" height="15" fill="rgb(237,192,8)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.88%)</title><rect x="13" y="884" width="10" height="15" fill="rgb(236,203,19)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.88%)</title><rect x="13" y="900" width="10" height="15" fill="rgb(244,96,1)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(218,198,38)"/><text x="23.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(210,68,10)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.29%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(248,89,39)"/><text x="23.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(222,226,4)"/><text x="23.00" y="974.50"></text></g><g><title>0x7fa449fc0237 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(211,182,43)"/><text x="23.00" y="990.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(205,141,42)"/><text x="26.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="23" y="996" width="4" height="15" fill="rgb(212,214,14)"/><text x="26.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(226,152,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(251,54,43)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(220,99,36)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(246,218,16)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(231,126,45)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(222,128,49)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.75%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(213,160,19)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(240,26,29)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(233,215,11)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(209,79,30)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(230,161,34)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(213,51,21)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.75%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(210,163,44)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(211,93,15)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(233,41,26)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(236,7,36)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(211,46,35)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(206,57,45)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.75%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(247,141,31)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(252,144,10)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(239,35,18)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(210,215,37)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(235,98,25)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(209,45,6)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.75%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(235,105,13)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(245,138,29)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(232,48,27)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(226,225,52)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(236,173,23)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(207,192,25)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(238,4,27)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(214,88,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(211,157,40)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.75%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(252,63,18)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(230,215,26)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(249,22,52)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(242,72,31)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.75%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(213,221,49)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.75%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(215,219,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.75%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(213,165,15)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.75%)</title><rect x="10" y="836" width="20" height="15" fill="rgb(251,41,22)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.75%)</title><rect x="10" y="852" width="20" height="15" fill="rgb(250,122,48)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="23" y="868" width="7" height="15" fill="rgb(223,113,16)"/><text x="26.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="23" y="884" width="7" height="15" fill="rgb(229,129,16)"/><text x="26.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="23" y="900" width="7" height="15" fill="rgb(225,213,36)"/><text x="26.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="23" y="916" width="7" height="15" fill="rgb(206,58,17)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.58%)</title><rect x="23" y="932" width="7" height="15" fill="rgb(206,157,29)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.58%)</title><rect x="23" y="948" width="7" height="15" fill="rgb(231,49,19)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.58%)</title><rect x="23" y="964" width="7" height="15" fill="rgb(245,24,34)"/><text x="26.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.29%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(214,195,14)"/><text x="30.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(217,69,39)"/><text x="30.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(244,75,33)"/><text x="30.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1700" width="4" height="15" fill="rgb(209,84,12)"/><text x="33.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py) (1 samples, 0.29%)</title><rect x="30" y="1716" width="4" height="15" fill="rgb(213,196,32)"/><text x="33.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1732" width="4" height="15" fill="rgb(205,39,8)"/><text x="33.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1748" width="4" height="15" fill="rgb(216,206,32)"/><text x="33.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1764" width="4" height="15" fill="rgb(232,62,10)"/><text x="33.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1780" width="4" height="15" fill="rgb(226,36,10)"/><text x="33.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1796" width="4" height="15" fill="rgb(205,159,47)"/><text x="33.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py) (1 samples, 0.29%)</title><rect x="30" y="1812" width="4" height="15" fill="rgb(218,175,3)"/><text x="33.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1828" width="4" height="15" fill="rgb(222,69,30)"/><text x="33.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1844" width="4" height="15" fill="rgb(218,111,9)"/><text x="33.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1860" width="4" height="15" fill="rgb(206,179,41)"/><text x="33.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1876" width="4" height="15" fill="rgb(218,30,21)"/><text x="33.00" y="1886.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1892" width="4" height="15" fill="rgb(210,146,46)"/><text x="33.00" y="1902.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1908" width="4" height="15" fill="rgb(205,173,49)"/><text x="33.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1124" width="7" height="15" fill="rgb(224,67,23)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1140" width="7" height="15" fill="rgb(254,160,36)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1156" width="7" height="15" fill="rgb(239,9,46)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1172" width="7" height="15" fill="rgb(231,154,53)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1188" width="7" height="15" fill="rgb(229,95,53)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.58%)</title><rect x="30" y="1204" width="7" height="15" fill="rgb(228,105,39)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1220" width="7" height="15" fill="rgb(208,185,14)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1236" width="7" height="15" fill="rgb(240,222,14)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1252" width="7" height="15" fill="rgb(209,65,38)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1268" width="7" height="15" fill="rgb(227,221,19)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1284" width="7" height="15" fill="rgb(245,54,28)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (2 samples, 0.58%)</title><rect x="30" y="1300" width="7" height="15" fill="rgb(239,170,24)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1316" width="7" height="15" fill="rgb(220,101,50)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1332" width="7" height="15" fill="rgb(224,23,47)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1348" width="7" height="15" fill="rgb(240,145,19)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1364" width="7" height="15" fill="rgb(227,158,7)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1380" width="7" height="15" fill="rgb(217,88,21)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (2 samples, 0.58%)</title><rect x="30" y="1396" width="7" height="15" fill="rgb(217,74,5)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1412" width="7" height="15" fill="rgb(245,110,15)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1428" width="7" height="15" fill="rgb(254,14,13)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1444" width="7" height="15" fill="rgb(224,135,32)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1460" width="7" height="15" fill="rgb(225,24,27)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1476" width="7" height="15" fill="rgb(226,216,8)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (2 samples, 0.58%)</title><rect x="30" y="1492" width="7" height="15" fill="rgb(211,227,19)"/><text x="33.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1508" width="7" height="15" fill="rgb(232,149,15)"/><text x="33.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1524" width="7" height="15" fill="rgb(217,183,20)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1540" width="7" height="15" fill="rgb(243,160,42)"/><text x="33.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1556" width="7" height="15" fill="rgb(207,130,16)"/><text x="33.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1572" width="7" height="15" fill="rgb(253,110,52)"/><text x="33.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1588" width="7" height="15" fill="rgb(253,6,38)"/><text x="33.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1604" width="7" height="15" fill="rgb(236,61,41)"/><text x="33.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (2 samples, 0.58%)</title><rect x="30" y="1620" width="7" height="15" fill="rgb(211,16,8)"/><text x="33.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1636" width="7" height="15" fill="rgb(212,94,11)"/><text x="33.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1652" width="7" height="15" fill="rgb(223,46,2)"/><text x="33.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="30" y="1668" width="7" height="15" fill="rgb(214,135,26)"/><text x="33.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="30" y="1684" width="7" height="15" fill="rgb(236,93,4)"/><text x="33.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1700" width="3" height="15" fill="rgb(205,13,46)"/><text x="37.00" y="1710.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="34" y="1716" width="3" height="15" fill="rgb(220,73,28)"/><text x="37.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="484" width="11" height="15" fill="rgb(230,204,3)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="500" width="11" height="15" fill="rgb(229,196,3)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="516" width="11" height="15" fill="rgb(230,47,48)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="532" width="11" height="15" fill="rgb(212,194,13)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="548" width="11" height="15" fill="rgb(212,205,12)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="564" width="11" height="15" fill="rgb(245,145,21)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.88%)</title><rect x="30" y="580" width="11" height="15" fill="rgb(234,213,8)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="596" width="11" height="15" fill="rgb(228,120,3)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="612" width="11" height="15" fill="rgb(233,5,51)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="628" width="11" height="15" fill="rgb(249,176,30)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="644" width="11" height="15" fill="rgb(235,184,8)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="660" width="11" height="15" fill="rgb(215,158,29)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.88%)</title><rect x="30" y="676" width="11" height="15" fill="rgb(205,196,20)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="692" width="11" height="15" fill="rgb(230,223,32)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="708" width="11" height="15" fill="rgb(224,186,27)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="724" width="11" height="15" fill="rgb(226,196,53)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="740" width="11" height="15" fill="rgb(243,228,16)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="756" width="11" height="15" fill="rgb(206,222,1)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.88%)</title><rect x="30" y="772" width="11" height="15" fill="rgb(205,196,7)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="788" width="11" height="15" fill="rgb(234,194,50)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="804" width="11" height="15" fill="rgb(252,44,21)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="820" width="11" height="15" fill="rgb(235,24,50)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="836" width="11" height="15" fill="rgb(245,13,53)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="852" width="11" height="15" fill="rgb(231,61,38)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.88%)</title><rect x="30" y="868" width="11" height="15" fill="rgb(250,218,47)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="884" width="11" height="15" fill="rgb(211,137,40)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="900" width="11" height="15" fill="rgb(226,75,22)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="916" width="11" height="15" fill="rgb(252,112,32)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="932" width="11" height="15" fill="rgb(245,158,52)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="948" width="11" height="15" fill="rgb(240,128,20)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="964" width="11" height="15" fill="rgb(207,14,50)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="980" width="11" height="15" fill="rgb(209,19,20)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="996" width="11" height="15" fill="rgb(223,145,43)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.88%)</title><rect x="30" y="1012" width="11" height="15" fill="rgb(240,74,15)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="1028" width="11" height="15" fill="rgb(209,43,37)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="1044" width="11" height="15" fill="rgb(229,184,30)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="1060" width="11" height="15" fill="rgb(214,183,42)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="30" y="1076" width="11" height="15" fill="rgb(226,119,16)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="30" y="1092" width="11" height="15" fill="rgb(250,61,5)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.88%)</title><rect x="30" y="1108" width="11" height="15" fill="rgb(218,98,40)"/><text x="33.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1124" width="4" height="15" fill="rgb(225,194,11)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1140" width="4" height="15" fill="rgb(208,168,51)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1156" width="4" height="15" fill="rgb(225,211,54)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1172" width="4" height="15" fill="rgb(217,175,51)"/><text x="40.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1188" width="4" height="15" fill="rgb(217,37,35)"/><text x="40.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1204" width="4" height="15" fill="rgb(211,215,20)"/><text x="40.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1220" width="4" height="15" fill="rgb(206,119,50)"/><text x="40.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.29%)</title><rect x="37" y="1236" width="4" height="15" fill="rgb(242,43,5)"/><text x="40.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1252" width="4" height="15" fill="rgb(237,89,14)"/><text x="40.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1268" width="4" height="15" fill="rgb(244,150,37)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1284" width="4" height="15" fill="rgb(223,124,20)"/><text x="40.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1300" width="4" height="15" fill="rgb(213,116,37)"/><text x="40.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1316" width="4" height="15" fill="rgb(242,55,15)"/><text x="40.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1332" width="4" height="15" fill="rgb(246,229,16)"/><text x="40.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1348" width="4" height="15" fill="rgb(208,172,22)"/><text x="40.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.29%)</title><rect x="37" y="1364" width="4" height="15" fill="rgb(228,123,53)"/><text x="40.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1380" width="4" height="15" fill="rgb(238,214,46)"/><text x="40.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1396" width="4" height="15" fill="rgb(251,134,43)"/><text x="40.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1412" width="4" height="15" fill="rgb(224,12,37)"/><text x="40.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1428" width="4" height="15" fill="rgb(227,72,36)"/><text x="40.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1444" width="4" height="15" fill="rgb(244,213,30)"/><text x="40.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.29%)</title><rect x="37" y="1460" width="4" height="15" fill="rgb(227,72,19)"/><text x="40.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1476" width="4" height="15" fill="rgb(251,143,46)"/><text x="40.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1492" width="4" height="15" fill="rgb(211,117,25)"/><text x="40.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1508" width="4" height="15" fill="rgb(245,101,9)"/><text x="40.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="37" y="1524" width="4" height="15" fill="rgb(208,85,31)"/><text x="40.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="37" y="1540" width="4" height="15" fill="rgb(218,15,19)"/><text x="40.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="37" y="1556" width="4" height="15" fill="rgb(238,43,20)"/><text x="40.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="37" y="1572" width="4" height="15" fill="rgb(205,119,53)"/><text x="40.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="37" y="1588" width="4" height="15" fill="rgb(205,143,12)"/><text x="40.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="37" y="1604" width="4" height="15" fill="rgb(234,182,22)"/><text x="40.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="37" y="1620" width="4" height="15" fill="rgb(252,20,1)"/><text x="40.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="37" y="1636" width="4" height="15" fill="rgb(235,35,11)"/><text x="40.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1652" width="4" height="15" fill="rgb(240,23,37)"/><text x="40.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1668" width="4" height="15" fill="rgb(211,196,41)"/><text x="40.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1684" width="4" height="15" fill="rgb(226,1,11)"/><text x="40.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1700" width="4" height="15" fill="rgb(214,43,41)"/><text x="40.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1716" width="4" height="15" fill="rgb(250,163,8)"/><text x="40.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1732" width="4" height="15" fill="rgb(247,196,20)"/><text x="40.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1748" width="4" height="15" fill="rgb(242,211,25)"/><text x="40.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1764" width="4" height="15" fill="rgb(249,73,37)"/><text x="40.00" y="1774.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1780" width="4" height="15" fill="rgb(251,229,42)"/><text x="40.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1796" width="4" height="15" fill="rgb(227,117,24)"/><text x="40.00" y="1806.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="37" y="1812" width="4" height="15" fill="rgb(218,128,40)"/><text x="40.00" y="1822.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1828" width="4" height="15" fill="rgb(236,113,42)"/><text x="40.00" y="1838.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.29%)</title><rect x="37" y="1844" width="4" height="15" fill="rgb(246,30,20)"/><text x="40.00" y="1854.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1860" width="4" height="15" fill="rgb(220,68,16)"/><text x="40.00" y="1870.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1876" width="4" height="15" fill="rgb(229,13,1)"/><text x="40.00" y="1886.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.29%)</title><rect x="37" y="1892" width="4" height="15" fill="rgb(212,155,34)"/><text x="40.00" y="1902.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="37" y="1908" width="4" height="15" fill="rgb(213,38,49)"/><text x="40.00" y="1918.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.29%)</title><rect x="41" y="724" width="3" height="15" fill="rgb(237,139,24)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="740" width="3" height="15" fill="rgb(214,6,2)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="756" width="3" height="15" fill="rgb(231,176,54)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="772" width="3" height="15" fill="rgb(248,116,24)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="788" width="3" height="15" fill="rgb(244,9,11)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="804" width="3" height="15" fill="rgb(231,154,53)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.29%)</title><rect x="41" y="820" width="3" height="15" fill="rgb(206,146,49)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="836" width="3" height="15" fill="rgb(251,81,39)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="852" width="3" height="15" fill="rgb(243,170,35)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="868" width="3" height="15" fill="rgb(210,154,54)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="884" width="3" height="15" fill="rgb(241,41,2)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="900" width="3" height="15" fill="rgb(234,152,40)"/><text x="44.00" y="910.50"></text></g><g><title>0x7fa42110740e (?) (1 samples, 0.29%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(246,12,35)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(250,23,8)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(252,121,26)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="964" width="3" height="15" fill="rgb(221,70,14)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="980" width="3" height="15" fill="rgb(221,214,11)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="996" width="3" height="15" fill="rgb(230,218,1)"/><text x="44.00" y="1006.50"></text></g><g><title>0x7fa420ec0cd2 (?) (1 samples, 0.29%)</title><rect x="41" y="1012" width="3" height="15" fill="rgb(228,135,43)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1028" width="3" height="15" fill="rgb(235,90,4)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1044" width="3" height="15" fill="rgb(234,219,16)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1060" width="3" height="15" fill="rgb(220,94,10)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="1076" width="3" height="15" fill="rgb(229,37,14)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(238,93,2)"/><text x="44.00" y="1102.50"></text></g><g><title>0x7fa4205b60e5 (?) (1 samples, 0.29%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(242,16,5)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(224,163,6)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(224,53,47)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(209,57,18)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="1172" width="3" height="15" fill="rgb(206,72,10)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1188" width="3" height="15" fill="rgb(213,142,28)"/><text x="44.00" y="1198.50"></text></g><g><title>0x7fa42033ae68 (?) (1 samples, 0.29%)</title><rect x="41" y="1204" width="3" height="15" fill="rgb(239,63,47)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1220" width="3" height="15" fill="rgb(223,209,2)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1236" width="3" height="15" fill="rgb(234,103,36)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1252" width="3" height="15" fill="rgb(243,186,48)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="1268" width="3" height="15" fill="rgb(214,140,12)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1284" width="3" height="15" fill="rgb(223,92,12)"/><text x="44.00" y="1294.50"></text></g><g><title>0x7fa4200cb2fb (?) (1 samples, 0.29%)</title><rect x="41" y="1300" width="3" height="15" fill="rgb(212,142,4)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1316" width="3" height="15" fill="rgb(232,23,31)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1332" width="3" height="15" fill="rgb(215,133,43)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1348" width="3" height="15" fill="rgb(220,127,12)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="1364" width="3" height="15" fill="rgb(221,225,13)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1380" width="3" height="15" fill="rgb(245,33,2)"/><text x="44.00" y="1390.50"></text></g><g><title>0x7fa41feaf153 (?) (1 samples, 0.29%)</title><rect x="41" y="1396" width="3" height="15" fill="rgb(233,158,21)"/><text x="44.00" y="1406.50"></text></g><g><title>0x7fa41feadc13 (?) (1 samples, 0.29%)</title><rect x="41" y="1412" width="3" height="15" fill="rgb(220,224,37)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1428" width="3" height="15" fill="rgb(243,93,30)"/><text x="44.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1444" width="3" height="15" fill="rgb(206,117,25)"/><text x="44.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1460" width="3" height="15" fill="rgb(246,130,52)"/><text x="44.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="41" y="1476" width="3" height="15" fill="rgb(242,154,11)"/><text x="44.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="41" y="1492" width="3" height="15" fill="rgb(227,156,13)"/><text x="44.00" y="1502.50"></text></g><g><title>0x7fa41fc0a181 (?) (1 samples, 0.29%)</title><rect x="41" y="1508" width="3" height="15" fill="rgb(253,143,34)"/><text x="44.00" y="1518.50"></text></g><g><title>0x7fa41fc0d1c9 (?) (1 samples, 0.29%)</title><rect x="41" y="1524" width="3" height="15" fill="rgb(217,19,7)"/><text x="44.00" y="1534.50"></text></g><g><title>0x7fa41fc39167 (?) (1 samples, 0.29%)</title><rect x="41" y="1540" width="3" height="15" fill="rgb(217,150,50)"/><text x="44.00" y="1550.50"></text></g><g><title>0x7fa41fc34b64 (?) (1 samples, 0.29%)</title><rect x="41" y="1556" width="3" height="15" fill="rgb(231,171,3)"/><text x="44.00" y="1566.50"></text></g><g><title>0x7fa41fc1807b (?) (1 samples, 0.29%)</title><rect x="41" y="1572" width="3" height="15" fill="rgb(246,208,24)"/><text x="44.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.29%)</title><rect x="41" y="1588" width="3" height="15" fill="rgb(208,183,25)"/><text x="44.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="41" y="1604" width="3" height="15" fill="rgb(210,144,17)"/><text x="44.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="41" y="1620" width="3" height="15" fill="rgb(246,66,3)"/><text x="44.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="41" y="1636" width="3" height="15" fill="rgb(249,185,50)"/><text x="44.00" y="1646.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="44" y="1028" width="3" height="15" fill="rgb(238,111,15)"/><text x="47.00" y="1038.50"></text></g><g><title>_make_logical_function (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="44" y="1044" width="3" height="15" fill="rgb(229,7,21)"/><text x="47.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="44" y="900" width="7" height="15" fill="rgb(224,6,3)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.58%)</title><rect x="44" y="916" width="7" height="15" fill="rgb(251,204,23)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="44" y="932" width="7" height="15" fill="rgb(216,115,40)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="44" y="948" width="7" height="15" fill="rgb(229,153,9)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="44" y="964" width="7" height="15" fill="rgb(236,42,19)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="44" y="980" width="7" height="15" fill="rgb(215,147,4)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="44" y="996" width="7" height="15" fill="rgb(226,25,13)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.58%)</title><rect x="44" y="1012" width="7" height="15" fill="rgb(252,194,35)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1028" width="4" height="15" fill="rgb(244,9,16)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1044" width="4" height="15" fill="rgb(246,138,31)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1060" width="4" height="15" fill="rgb(237,56,9)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1076" width="4" height="15" fill="rgb(225,186,52)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1092" width="4" height="15" fill="rgb(250,95,21)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.29%)</title><rect x="47" y="1108" width="4" height="15" fill="rgb(211,138,33)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1124" width="4" height="15" fill="rgb(221,108,6)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1140" width="4" height="15" fill="rgb(217,5,15)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1156" width="4" height="15" fill="rgb(236,179,26)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1172" width="4" height="15" fill="rgb(235,6,47)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1188" width="4" height="15" fill="rgb(231,203,14)"/><text x="50.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1204" width="4" height="15" fill="rgb(213,111,49)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1220" width="4" height="15" fill="rgb(215,54,45)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1236" width="4" height="15" fill="rgb(245,70,32)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1252" width="4" height="15" fill="rgb(250,130,15)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1268" width="4" height="15" fill="rgb(229,59,8)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1284" width="4" height="15" fill="rgb(222,222,45)"/><text x="50.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.29%)</title><rect x="47" y="1300" width="4" height="15" fill="rgb(241,170,21)"/><text x="50.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1316" width="4" height="15" fill="rgb(235,56,47)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1332" width="4" height="15" fill="rgb(249,74,48)"/><text x="50.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1348" width="4" height="15" fill="rgb(252,145,30)"/><text x="50.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1364" width="4" height="15" fill="rgb(213,89,12)"/><text x="50.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1380" width="4" height="15" fill="rgb(226,190,19)"/><text x="50.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1396" width="4" height="15" fill="rgb(247,162,45)"/><text x="50.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1412" width="4" height="15" fill="rgb(218,169,50)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1428" width="4" height="15" fill="rgb(224,194,40)"/><text x="50.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1444" width="4" height="15" fill="rgb(234,208,4)"/><text x="50.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1460" width="4" height="15" fill="rgb(231,193,4)"/><text x="50.00" y="1470.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1476" width="4" height="15" fill="rgb(225,52,49)"/><text x="50.00" y="1486.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1492" width="4" height="15" fill="rgb(232,118,45)"/><text x="50.00" y="1502.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1508" width="4" height="15" fill="rgb(213,48,18)"/><text x="50.00" y="1518.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1524" width="4" height="15" fill="rgb(207,63,10)"/><text x="50.00" y="1534.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1540" width="4" height="15" fill="rgb(245,173,3)"/><text x="50.00" y="1550.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1556" width="4" height="15" fill="rgb(244,84,2)"/><text x="50.00" y="1566.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1572" width="4" height="15" fill="rgb(241,116,24)"/><text x="50.00" y="1582.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="47" y="1588" width="4" height="15" fill="rgb(238,50,48)"/><text x="50.00" y="1598.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.29%)</title><rect x="47" y="1604" width="4" height="15" fill="rgb(219,218,33)"/><text x="50.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.05%)</title><rect x="30" y="340" width="24" height="15" fill="rgb(253,57,36)"/><text x="33.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="356" width="24" height="15" fill="rgb(245,95,0)"/><text x="33.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="372" width="24" height="15" fill="rgb(224,87,47)"/><text x="33.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="388" width="24" height="15" fill="rgb(232,168,32)"/><text x="33.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.05%)</title><rect x="30" y="404" width="24" height="15" fill="rgb(230,176,52)"/><text x="33.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="420" width="24" height="15" fill="rgb(209,183,37)"/><text x="33.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 2.05%)</title><rect x="30" y="436" width="24" height="15" fill="rgb(235,48,2)"/><text x="33.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="452" width="24" height="15" fill="rgb(231,194,16)"/><text x="33.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.05%)</title><rect x="30" y="468" width="24" height="15" fill="rgb(210,29,13)"/><text x="33.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="484" width="13" height="15" fill="rgb(231,125,10)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="41" y="500" width="13" height="15" fill="rgb(241,152,8)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="516" width="13" height="15" fill="rgb(238,1,43)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.17%)</title><rect x="41" y="532" width="13" height="15" fill="rgb(251,64,38)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="548" width="13" height="15" fill="rgb(224,51,54)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="564" width="13" height="15" fill="rgb(232,193,0)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="580" width="13" height="15" fill="rgb(215,113,48)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="41" y="596" width="13" height="15" fill="rgb(238,205,12)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="612" width="13" height="15" fill="rgb(208,189,10)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.17%)</title><rect x="41" y="628" width="13" height="15" fill="rgb(252,97,54)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="644" width="13" height="15" fill="rgb(211,212,25)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="660" width="13" height="15" fill="rgb(233,0,22)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="676" width="13" height="15" fill="rgb(254,191,2)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="41" y="692" width="13" height="15" fill="rgb(247,103,7)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="41" y="708" width="13" height="15" fill="rgb(220,137,1)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.88%)</title><rect x="44" y="724" width="10" height="15" fill="rgb(244,136,46)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="740" width="10" height="15" fill="rgb(211,127,15)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="756" width="10" height="15" fill="rgb(254,54,40)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="772" width="10" height="15" fill="rgb(215,199,4)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="44" y="788" width="10" height="15" fill="rgb(249,23,40)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="804" width="10" height="15" fill="rgb(229,73,23)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.88%)</title><rect x="44" y="820" width="10" height="15" fill="rgb(250,189,22)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="836" width="10" height="15" fill="rgb(243,104,52)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="852" width="10" height="15" fill="rgb(238,39,26)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="44" y="868" width="10" height="15" fill="rgb(238,19,12)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="44" y="884" width="10" height="15" fill="rgb(215,215,41)"/><text x="47.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(252,102,41)"/><text x="54.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(245,82,3)"/><text x="54.00" y="926.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.29%)</title><rect x="54" y="1156" width="4" height="15" fill="rgb(254,45,11)"/><text x="57.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="1172" width="4" height="15" fill="rgb(210,97,49)"/><text x="57.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="1188" width="4" height="15" fill="rgb(217,217,34)"/><text x="57.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="54" y="1204" width="4" height="15" fill="rgb(237,122,28)"/><text x="57.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="54" y="1220" width="4" height="15" fill="rgb(216,211,2)"/><text x="57.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="54" y="1236" width="4" height="15" fill="rgb(228,15,7)"/><text x="57.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="54" y="1252" width="4" height="15" fill="rgb(245,19,8)"/><text x="57.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (3 samples, 0.88%)</title><rect x="54" y="580" width="11" height="15" fill="rgb(214,102,25)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="596" width="11" height="15" fill="rgb(207,200,31)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="612" width="11" height="15" fill="rgb(222,131,48)"/><text x="57.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="628" width="11" height="15" fill="rgb(235,29,37)"/><text x="57.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="644" width="11" height="15" fill="rgb(214,39,5)"/><text x="57.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="660" width="11" height="15" fill="rgb(253,215,11)"/><text x="57.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="676" width="11" height="15" fill="rgb(251,10,5)"/><text x="57.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="54" y="692" width="11" height="15" fill="rgb(234,138,3)"/><text x="57.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="708" width="11" height="15" fill="rgb(229,82,50)"/><text x="57.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (3 samples, 0.88%)</title><rect x="54" y="724" width="11" height="15" fill="rgb(233,94,2)"/><text x="57.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="740" width="11" height="15" fill="rgb(236,181,11)"/><text x="57.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="756" width="11" height="15" fill="rgb(252,154,19)"/><text x="57.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="772" width="11" height="15" fill="rgb(218,161,19)"/><text x="57.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="54" y="788" width="11" height="15" fill="rgb(217,187,30)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="804" width="11" height="15" fill="rgb(216,26,11)"/><text x="57.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (3 samples, 0.88%)</title><rect x="54" y="820" width="11" height="15" fill="rgb(232,142,15)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="836" width="11" height="15" fill="rgb(252,36,11)"/><text x="57.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="852" width="11" height="15" fill="rgb(254,170,48)"/><text x="57.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="868" width="11" height="15" fill="rgb(230,151,35)"/><text x="57.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="54" y="884" width="11" height="15" fill="rgb(241,159,8)"/><text x="57.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="900" width="11" height="15" fill="rgb(238,157,51)"/><text x="57.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (3 samples, 0.88%)</title><rect x="54" y="916" width="11" height="15" fill="rgb(225,95,32)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="932" width="11" height="15" fill="rgb(238,165,8)"/><text x="57.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="948" width="11" height="15" fill="rgb(214,218,22)"/><text x="57.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="964" width="11" height="15" fill="rgb(233,184,37)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="980" width="11" height="15" fill="rgb(233,17,23)"/><text x="57.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="996" width="11" height="15" fill="rgb(223,73,24)"/><text x="57.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1012" width="11" height="15" fill="rgb(225,109,3)"/><text x="57.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="54" y="1028" width="11" height="15" fill="rgb(209,89,45)"/><text x="57.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1044" width="11" height="15" fill="rgb(209,190,27)"/><text x="57.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (3 samples, 0.88%)</title><rect x="54" y="1060" width="11" height="15" fill="rgb(218,99,8)"/><text x="57.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1076" width="11" height="15" fill="rgb(242,132,16)"/><text x="57.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1092" width="11" height="15" fill="rgb(217,226,28)"/><text x="57.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1108" width="11" height="15" fill="rgb(222,99,4)"/><text x="57.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.88%)</title><rect x="54" y="1124" width="11" height="15" fill="rgb(249,148,9)"/><text x="57.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="54" y="1140" width="11" height="15" fill="rgb(206,4,53)"/><text x="57.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (2 samples, 0.58%)</title><rect x="58" y="1156" width="7" height="15" fill="rgb(231,71,0)"/><text x="61.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="58" y="1172" width="7" height="15" fill="rgb(239,20,3)"/><text x="61.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="58" y="1188" width="7" height="15" fill="rgb(234,21,30)"/><text x="61.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="58" y="1204" width="7" height="15" fill="rgb(221,222,0)"/><text x="61.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="58" y="1220" width="7" height="15" fill="rgb(242,224,39)"/><text x="61.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="58" y="1236" width="7" height="15" fill="rgb(227,119,52)"/><text x="61.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1252" width="7" height="15" fill="rgb(224,101,36)"/><text x="61.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1268" width="7" height="15" fill="rgb(252,112,34)"/><text x="61.00" y="1278.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1284" width="7" height="15" fill="rgb(248,201,13)"/><text x="61.00" y="1294.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1300" width="7" height="15" fill="rgb(224,2,25)"/><text x="61.00" y="1310.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1316" width="7" height="15" fill="rgb(220,12,26)"/><text x="61.00" y="1326.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="58" y="1332" width="7" height="15" fill="rgb(243,112,24)"/><text x="61.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 3.22%)</title><rect x="30" y="244" width="38" height="15" fill="rgb(208,166,4)"/><text x="33.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.22%)</title><rect x="30" y="260" width="38" height="15" fill="rgb(254,12,20)"/><text x="33.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.22%)</title><rect x="30" y="276" width="38" height="15" fill="rgb(220,130,18)"/><text x="33.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.22%)</title><rect x="30" y="292" width="38" height="15" fill="rgb(222,43,5)"/><text x="33.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.22%)</title><rect x="30" y="308" width="38" height="15" fill="rgb(210,38,22)"/><text x="33.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.22%)</title><rect x="30" y="324" width="38" height="15" fill="rgb(216,184,38)"/><text x="33.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.17%)</title><rect x="54" y="340" width="14" height="15" fill="rgb(222,148,5)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="356" width="14" height="15" fill="rgb(207,12,45)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="372" width="14" height="15" fill="rgb(220,126,14)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="388" width="14" height="15" fill="rgb(224,83,52)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="404" width="14" height="15" fill="rgb(211,94,42)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="420" width="14" height="15" fill="rgb(219,21,17)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="436" width="14" height="15" fill="rgb(239,86,54)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="54" y="452" width="14" height="15" fill="rgb(213,130,18)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="468" width="14" height="15" fill="rgb(207,58,22)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.17%)</title><rect x="54" y="484" width="14" height="15" fill="rgb(244,155,18)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="500" width="14" height="15" fill="rgb(228,19,37)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="516" width="14" height="15" fill="rgb(241,138,35)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="532" width="14" height="15" fill="rgb(229,193,41)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.17%)</title><rect x="54" y="548" width="14" height="15" fill="rgb(211,2,0)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.17%)</title><rect x="54" y="564" width="14" height="15" fill="rgb(220,125,7)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.29%)</title><rect x="65" y="580" width="3" height="15" fill="rgb(211,170,27)"/><text x="68.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="596" width="3" height="15" fill="rgb(229,119,0)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="612" width="3" height="15" fill="rgb(253,51,32)"/><text x="68.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="628" width="3" height="15" fill="rgb(206,15,44)"/><text x="68.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="65" y="644" width="3" height="15" fill="rgb(248,28,48)"/><text x="68.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="660" width="3" height="15" fill="rgb(214,165,48)"/><text x="68.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.29%)</title><rect x="65" y="676" width="3" height="15" fill="rgb(237,211,36)"/><text x="68.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="692" width="3" height="15" fill="rgb(222,122,11)"/><text x="68.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="708" width="3" height="15" fill="rgb(220,9,18)"/><text x="68.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="724" width="3" height="15" fill="rgb(226,141,6)"/><text x="68.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="65" y="740" width="3" height="15" fill="rgb(240,45,26)"/><text x="68.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="756" width="3" height="15" fill="rgb(208,5,31)"/><text x="68.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.29%)</title><rect x="65" y="772" width="3" height="15" fill="rgb(212,172,46)"/><text x="68.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="788" width="3" height="15" fill="rgb(217,42,11)"/><text x="68.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="804" width="3" height="15" fill="rgb(223,52,1)"/><text x="68.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="820" width="3" height="15" fill="rgb(253,29,27)"/><text x="68.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="836" width="3" height="15" fill="rgb(213,141,50)"/><text x="68.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="852" width="3" height="15" fill="rgb(205,205,44)"/><text x="68.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="65" y="868" width="3" height="15" fill="rgb(241,91,5)"/><text x="68.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="65" y="884" width="3" height="15" fill="rgb(230,123,24)"/><text x="68.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.29%)</title><rect x="65" y="900" width="3" height="15" fill="rgb(230,104,0)"/><text x="68.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py) (1 samples, 0.29%)</title><rect x="68" y="340" width="4" height="15" fill="rgb(223,142,44)"/><text x="71.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="356" width="4" height="15" fill="rgb(212,119,16)"/><text x="71.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="372" width="4" height="15" fill="rgb(214,205,49)"/><text x="71.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="388" width="4" height="15" fill="rgb(209,211,52)"/><text x="71.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="68" y="404" width="4" height="15" fill="rgb(237,196,13)"/><text x="71.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="420" width="4" height="15" fill="rgb(212,27,14)"/><text x="71.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py) (1 samples, 0.29%)</title><rect x="68" y="436" width="4" height="15" fill="rgb(207,135,26)"/><text x="71.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="452" width="4" height="15" fill="rgb(236,143,43)"/><text x="71.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="468" width="4" height="15" fill="rgb(221,194,39)"/><text x="71.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="68" y="484" width="4" height="15" fill="rgb(242,103,25)"/><text x="71.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="68" y="500" width="4" height="15" fill="rgb(209,107,49)"/><text x="71.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="68" y="516" width="4" height="15" fill="rgb(237,102,46)"/><text x="71.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="68" width="65" height="15" fill="rgb(208,9,39)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="84" width="65" height="15" fill="rgb(238,143,18)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="100" width="65" height="15" fill="rgb(215,54,28)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 5.56%)</title><rect x="10" y="116" width="65" height="15" fill="rgb(226,65,38)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="132" width="65" height="15" fill="rgb(210,213,15)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (19 samples, 5.56%)</title><rect x="10" y="148" width="65" height="15" fill="rgb(231,50,41)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="164" width="65" height="15" fill="rgb(237,146,10)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 5.56%)</title><rect x="10" y="180" width="65" height="15" fill="rgb(232,76,1)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.80%)</title><rect x="30" y="196" width="45" height="15" fill="rgb(223,217,27)"/><text x="33.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.80%)</title><rect x="30" y="212" width="45" height="15" fill="rgb(245,23,7)"/><text x="33.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.80%)</title><rect x="30" y="228" width="45" height="15" fill="rgb(228,14,0)"/><text x="33.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (2 samples, 0.58%)</title><rect x="68" y="244" width="7" height="15" fill="rgb(251,158,43)"/><text x="71.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="260" width="7" height="15" fill="rgb(244,75,48)"/><text x="71.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="276" width="7" height="15" fill="rgb(251,9,11)"/><text x="71.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="292" width="7" height="15" fill="rgb(246,93,5)"/><text x="71.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.58%)</title><rect x="68" y="308" width="7" height="15" fill="rgb(214,36,15)"/><text x="71.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="68" y="324" width="7" height="15" fill="rgb(226,29,6)"/><text x="71.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.29%)</title><rect x="72" y="340" width="3" height="15" fill="rgb(244,223,21)"/><text x="75.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="356" width="3" height="15" fill="rgb(216,191,26)"/><text x="75.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="372" width="3" height="15" fill="rgb(229,186,11)"/><text x="75.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="388" width="3" height="15" fill="rgb(233,170,2)"/><text x="75.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="72" y="404" width="3" height="15" fill="rgb(230,112,18)"/><text x="75.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="420" width="3" height="15" fill="rgb(205,51,48)"/><text x="75.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.29%)</title><rect x="72" y="436" width="3" height="15" fill="rgb(247,114,48)"/><text x="75.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="452" width="3" height="15" fill="rgb(206,14,48)"/><text x="75.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="468" width="3" height="15" fill="rgb(249,137,23)"/><text x="75.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="72" y="484" width="3" height="15" fill="rgb(210,172,17)"/><text x="75.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="72" y="500" width="3" height="15" fill="rgb(246,11,19)"/><text x="75.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="72" y="516" width="3" height="15" fill="rgb(213,186,28)"/><text x="75.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="72" y="532" width="3" height="15" fill="rgb(254,181,31)"/><text x="75.00" y="542.50"></text></g><g><title>0x7fa409fb0ff9 (?) (1 samples, 0.29%)</title><rect x="106" y="212" width="4" height="15" fill="rgb(230,139,33)"/><text x="109.00" y="222.50"></text></g><g><title>0x7fa409fabef6 (?) (1 samples, 0.29%)</title><rect x="106" y="228" width="4" height="15" fill="rgb(252,36,5)"/><text x="109.00" y="238.50"></text></g><g><title>0x7fa409fa0962 (?) (1 samples, 0.29%)</title><rect x="106" y="244" width="4" height="15" fill="rgb(223,125,11)"/><text x="109.00" y="254.50"></text></g><g><title>0x7fa409fd47a7 (?) (1 samples, 0.29%)</title><rect x="106" y="260" width="4" height="15" fill="rgb(219,228,34)"/><text x="109.00" y="270.50"></text></g><g><title>0x7fa409fd4379 (?) (1 samples, 0.29%)</title><rect x="106" y="276" width="4" height="15" fill="rgb(230,141,38)"/><text x="109.00" y="286.50"></text></g><g><title>0x7fa40a4328b8 (?) (1 samples, 0.29%)</title><rect x="106" y="292" width="4" height="15" fill="rgb(232,149,2)"/><text x="109.00" y="302.50"></text></g><g><title>0x7fa40a430c7f (?) (1 samples, 0.29%)</title><rect x="106" y="308" width="4" height="15" fill="rgb(240,52,22)"/><text x="109.00" y="318.50"></text></g><g><title>0x7fa40a44399c (?) (1 samples, 0.29%)</title><rect x="106" y="324" width="4" height="15" fill="rgb(227,101,25)"/><text x="109.00" y="334.50"></text></g><g><title>0x7fa40a16e474 (?) (1 samples, 0.29%)</title><rect x="106" y="340" width="4" height="15" fill="rgb(228,66,42)"/><text x="109.00" y="350.50"></text></g><g><title>0x7fa409fc1ca5 (?) (1 samples, 0.29%)</title><rect x="106" y="356" width="4" height="15" fill="rgb(251,20,14)"/><text x="109.00" y="366.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="116" y="260" width="4" height="15" fill="rgb(230,223,16)"/><text x="119.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="116" y="276" width="4" height="15" fill="rgb(225,180,4)"/><text x="119.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="116" y="292" width="4" height="15" fill="rgb(209,43,23)"/><text x="119.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="120" y="260" width="3" height="15" fill="rgb(223,102,3)"/><text x="123.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (6 samples, 1.75%)</title><rect x="110" y="212" width="20" height="15" fill="rgb(205,124,32)"/><text x="113.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.46%)</title><rect x="113" y="228" width="17" height="15" fill="rgb(223,157,8)"/><text x="116.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.17%)</title><rect x="116" y="244" width="14" height="15" fill="rgb(253,198,33)"/><text x="119.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="123" y="260" width="7" height="15" fill="rgb(206,131,44)"/><text x="126.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="123" y="276" width="7" height="15" fill="rgb(223,30,38)"/><text x="126.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="123" y="292" width="7" height="15" fill="rgb(234,53,19)"/><text x="126.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="130" y="228" width="4" height="15" fill="rgb(219,45,40)"/><text x="133.00" y="238.50"></text></g><g><title>0x7fa449f80991 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="144" y="260" width="4" height="15" fill="rgb(242,100,53)"/><text x="147.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="151" y="292" width="3" height="15" fill="rgb(224,163,2)"/><text x="154.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="151" y="308" width="3" height="15" fill="rgb(223,78,20)"/><text x="154.00" y="318.50"></text></g><g><title>0x7fa449f8095e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="151" y="324" width="3" height="15" fill="rgb(235,205,51)"/><text x="154.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="154" y="292" width="4" height="15" fill="rgb(231,210,37)"/><text x="157.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="154" y="308" width="4" height="15" fill="rgb(240,184,29)"/><text x="157.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="154" y="324" width="4" height="15" fill="rgb(224,109,4)"/><text x="157.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="158" y="292" width="3" height="15" fill="rgb(229,59,53)"/><text x="161.00" y="302.50"></text></g><g><title>0x7fa449f80991 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="158" y="308" width="3" height="15" fill="rgb(244,64,23)"/><text x="161.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="161" y="356" width="4" height="15" fill="rgb(251,80,49)"/><text x="164.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="161" y="372" width="4" height="15" fill="rgb(215,82,3)"/><text x="164.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="161" y="388" width="4" height="15" fill="rgb(210,113,8)"/><text x="164.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="161" y="404" width="4" height="15" fill="rgb(249,28,12)"/><text x="164.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="165" y="356" width="3" height="15" fill="rgb(211,124,0)"/><text x="168.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="165" y="372" width="3" height="15" fill="rgb(246,52,20)"/><text x="168.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="165" y="388" width="3" height="15" fill="rgb(252,213,1)"/><text x="168.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="168" y="356" width="4" height="15" fill="rgb(242,96,7)"/><text x="171.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="168" y="372" width="4" height="15" fill="rgb(213,202,28)"/><text x="171.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="168" y="388" width="4" height="15" fill="rgb(229,215,6)"/><text x="171.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.17%)</title><rect x="161" y="340" width="14" height="15" fill="rgb(243,208,30)"/><text x="164.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="172" y="356" width="3" height="15" fill="rgb(230,77,22)"/><text x="175.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="172" y="372" width="3" height="15" fill="rgb(236,203,36)"/><text x="175.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="175" y="340" width="4" height="15" fill="rgb(243,229,53)"/><text x="178.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="175" y="356" width="4" height="15" fill="rgb(244,21,10)"/><text x="178.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="175" y="372" width="4" height="15" fill="rgb(222,68,51)"/><text x="178.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="179" y="340" width="3" height="15" fill="rgb(246,69,52)"/><text x="182.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="179" y="356" width="3" height="15" fill="rgb(231,118,11)"/><text x="182.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="179" y="372" width="3" height="15" fill="rgb(252,168,16)"/><text x="182.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="179" y="388" width="3" height="15" fill="rgb(226,164,39)"/><text x="182.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.34%)</title><rect x="161" y="292" width="28" height="15" fill="rgb(251,117,35)"/><text x="164.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.34%)</title><rect x="161" y="308" width="28" height="15" fill="rgb(212,62,34)"/><text x="164.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.34%)</title><rect x="161" y="324" width="28" height="15" fill="rgb(212,223,26)"/><text x="164.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="182" y="340" width="7" height="15" fill="rgb(225,181,10)"/><text x="185.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="182" y="356" width="7" height="15" fill="rgb(227,48,54)"/><text x="185.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="182" y="372" width="7" height="15" fill="rgb(248,48,2)"/><text x="185.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="182" y="388" width="7" height="15" fill="rgb(235,168,27)"/><text x="185.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="185" y="404" width="4" height="15" fill="rgb(214,79,13)"/><text x="188.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="185" y="420" width="4" height="15" fill="rgb(227,181,36)"/><text x="188.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.80%)</title><rect x="148" y="260" width="44" height="15" fill="rgb(210,188,3)"/><text x="151.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.51%)</title><rect x="151" y="276" width="41" height="15" fill="rgb(221,54,15)"/><text x="154.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="189" y="292" width="3" height="15" fill="rgb(235,107,25)"/><text x="192.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="189" y="308" width="3" height="15" fill="rgb(239,24,49)"/><text x="192.00" y="318.50"></text></g><g><title>0x7fa449f8090e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="192" y="292" width="4" height="15" fill="rgb(217,106,22)"/><text x="195.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.88%)</title><rect x="192" y="260" width="11" height="15" fill="rgb(218,65,26)"/><text x="195.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.88%)</title><rect x="192" y="276" width="11" height="15" fill="rgb(234,117,47)"/><text x="195.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.58%)</title><rect x="196" y="292" width="7" height="15" fill="rgb(232,146,46)"/><text x="199.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.58%)</title><rect x="196" y="308" width="7" height="15" fill="rgb(240,18,49)"/><text x="199.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="203" y="260" width="3" height="15" fill="rgb(240,217,1)"/><text x="206.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.29%)</title><rect x="203" y="276" width="3" height="15" fill="rgb(216,9,13)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="203" y="292" width="3" height="15" fill="rgb(232,74,38)"/><text x="206.00" y="302.50"></text></g><g><title>0x7fa449fa0db3 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="203" y="308" width="3" height="15" fill="rgb(251,61,50)"/><text x="206.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="206" y="260" width="4" height="15" fill="rgb(236,222,40)"/><text x="209.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="206" y="276" width="4" height="15" fill="rgb(253,34,14)"/><text x="209.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="210" y="260" width="3" height="15" fill="rgb(229,73,17)"/><text x="213.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 7.02%)</title><rect x="134" y="244" width="83" height="15" fill="rgb(232,63,18)"/><text x="137.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="260" width="4" height="15" fill="rgb(235,142,54)"/><text x="216.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="276" width="4" height="15" fill="rgb(206,57,15)"/><text x="216.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="292" width="4" height="15" fill="rgb(229,146,53)"/><text x="216.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="308" width="4" height="15" fill="rgb(228,29,24)"/><text x="216.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="324" width="4" height="15" fill="rgb(227,13,6)"/><text x="216.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="340" width="4" height="15" fill="rgb(252,205,37)"/><text x="216.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="356" width="4" height="15" fill="rgb(216,157,52)"/><text x="216.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="213" y="372" width="4" height="15" fill="rgb(213,11,47)"/><text x="216.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="217" y="244" width="3" height="15" fill="rgb(253,206,3)"/><text x="220.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="217" y="260" width="3" height="15" fill="rgb(218,53,35)"/><text x="220.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="220" y="244" width="7" height="15" fill="rgb(245,25,45)"/><text x="223.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="223" y="260" width="4" height="15" fill="rgb(253,105,18)"/><text x="226.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 12.57%)</title><rect x="82" y="132" width="148" height="15" fill="rgb(244,179,5)"/><text x="85.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (41 samples, 11.99%)</title><rect x="89" y="148" width="141" height="15" fill="rgb(217,45,9)"/><text x="92.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 11.70%)</title><rect x="92" y="164" width="138" height="15" fill="rgb(235,84,10)"/><text x="95.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (38 samples, 11.11%)</title><rect x="99" y="180" width="131" height="15" fill="rgb(227,32,17)"/><text x="102.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (38 samples, 11.11%)</title><rect x="99" y="196" width="131" height="15" fill="rgb(213,112,8)"/><text x="102.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.48%)</title><rect x="130" y="212" width="100" height="15" fill="rgb(225,57,11)"/><text x="133.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 8.19%)</title><rect x="134" y="228" width="96" height="15" fill="rgb(228,88,2)"/><text x="137.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="227" y="244" width="3" height="15" fill="rgb(237,107,28)"/><text x="230.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="227" y="260" width="3" height="15" fill="rgb(248,90,52)"/><text x="230.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (46 samples, 13.45%)</title><rect x="75" y="100" width="159" height="15" fill="rgb(241,155,26)"/><text x="78.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (44 samples, 12.87%)</title><rect x="82" y="116" width="152" height="15" fill="rgb(220,53,38)"/><text x="85.00" y="126.50">time_predict (mlpro..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="230" y="132" width="4" height="15" fill="rgb(213,224,54)"/><text x="233.00" y="142.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (47 samples, 13.74%)</title><rect x="75" y="68" width="162" height="15" fill="rgb(252,182,42)"/><text x="78.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (47 samples, 13.74%)</title><rect x="75" y="84" width="162" height="15" fill="rgb(247,192,35)"/><text x="78.00" y="94.50">setup_profile (bench..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="234" y="100" width="3" height="15" fill="rgb(229,112,11)"/><text x="237.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="234" y="116" width="3" height="15" fill="rgb(225,134,47)"/><text x="237.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="234" y="132" width="3" height="15" fill="rgb(205,0,23)"/><text x="237.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="234" y="148" width="3" height="15" fill="rgb(214,29,3)"/><text x="237.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="234" y="164" width="3" height="15" fill="rgb(207,4,49)"/><text x="237.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="180" width="3" height="15" fill="rgb(246,134,52)"/><text x="237.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="196" width="3" height="15" fill="rgb(236,158,13)"/><text x="237.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="212" width="3" height="15" fill="rgb(219,162,2)"/><text x="237.00" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="228" width="3" height="15" fill="rgb(218,68,46)"/><text x="237.00" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="244" width="3" height="15" fill="rgb(232,2,38)"/><text x="237.00" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="234" y="260" width="3" height="15" fill="rgb(231,60,0)"/><text x="237.00" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="234" y="276" width="3" height="15" fill="rgb(240,149,22)"/><text x="237.00" y="286.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="234" y="292" width="3" height="15" fill="rgb(227,59,28)"/><text x="237.00" y="302.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="234" y="308" width="3" height="15" fill="rgb(238,197,25)"/><text x="237.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="241" y="116" width="3" height="15" fill="rgb(229,52,30)"/><text x="244.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="241" y="132" width="3" height="15" fill="rgb(246,218,9)"/><text x="244.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="241" y="148" width="3" height="15" fill="rgb(234,227,1)"/><text x="244.00" y="158.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.58%)</title><rect x="358" y="196" width="7" height="15" fill="rgb(253,48,13)"/><text x="361.00" y="206.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="375" y="260" width="4" height="15" fill="rgb(245,174,24)"/><text x="378.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.88%)</title><rect x="372" y="212" width="10" height="15" fill="rgb(228,64,42)"/><text x="375.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.58%)</title><rect x="375" y="228" width="7" height="15" fill="rgb(237,122,6)"/><text x="378.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.58%)</title><rect x="375" y="244" width="7" height="15" fill="rgb(219,11,1)"/><text x="378.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.29%)</title><rect x="379" y="260" width="3" height="15" fill="rgb(241,227,46)"/><text x="382.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.29%)</title><rect x="379" y="276" width="3" height="15" fill="rgb(213,13,20)"/><text x="382.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.29%)</title><rect x="382" y="212" width="4" height="15" fill="rgb(235,41,48)"/><text x="385.00" y="222.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 1.17%)</title><rect x="424" y="244" width="13" height="15" fill="rgb(252,206,53)"/><text x="427.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.88%)</title><rect x="427" y="260" width="10" height="15" fill="rgb(239,156,18)"/><text x="430.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.88%)</title><rect x="427" y="276" width="10" height="15" fill="rgb(206,132,45)"/><text x="430.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.29%)</title><rect x="434" y="292" width="3" height="15" fill="rgb(208,154,33)"/><text x="437.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.29%)</title><rect x="434" y="308" width="3" height="15" fill="rgb(213,182,8)"/><text x="437.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="434" y="324" width="3" height="15" fill="rgb(205,11,14)"/><text x="437.00" y="334.50"></text></g><g><title>0x7fa44a05f004 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="434" y="340" width="3" height="15" fill="rgb(217,214,44)"/><text x="437.00" y="350.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.29%)</title><rect x="437" y="244" width="4" height="15" fill="rgb(205,70,32)"/><text x="440.00" y="254.50"></text></g><g><title>0x7fa449f96773 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="451" y="308" width="4" height="15" fill="rgb(208,11,12)"/><text x="454.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.58%)</title><rect x="458" y="340" width="7" height="15" fill="rgb(239,85,50)"/><text x="461.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.75%)</title><rect x="448" y="276" width="20" height="15" fill="rgb(231,223,50)"/><text x="451.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 1.75%)</title><rect x="448" y="292" width="20" height="15" fill="rgb(214,133,52)"/><text x="451.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 1.17%)</title><rect x="455" y="308" width="13" height="15" fill="rgb(214,38,1)"/><text x="458.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.17%)</title><rect x="455" y="324" width="13" height="15" fill="rgb(223,61,31)"/><text x="458.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.29%)</title><rect x="465" y="340" width="3" height="15" fill="rgb(213,81,52)"/><text x="468.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="465" y="356" width="3" height="15" fill="rgb(240,71,18)"/><text x="468.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 2.63%)</title><rect x="441" y="244" width="31" height="15" fill="rgb(208,116,9)"/><text x="444.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.34%)</title><rect x="444" y="260" width="28" height="15" fill="rgb(232,150,20)"/><text x="447.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="468" y="276" width="4" height="15" fill="rgb(219,30,43)"/><text x="471.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.29%)</title><rect x="468" y="292" width="4" height="15" fill="rgb(223,140,36)"/><text x="471.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="468" y="308" width="4" height="15" fill="rgb(254,68,46)"/><text x="471.00" y="318.50"></text></g><g><title>0x7fa449f387a5 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="482" y="356" width="4" height="15" fill="rgb(251,99,30)"/><text x="485.00" y="366.50"></text></g><g><title>0x7fa449fa0d50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="482" y="372" width="4" height="15" fill="rgb(211,158,25)"/><text x="485.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.88%)</title><rect x="479" y="292" width="10" height="15" fill="rgb(244,151,4)"/><text x="482.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.88%)</title><rect x="479" y="308" width="10" height="15" fill="rgb(210,103,8)"/><text x="482.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (3 samples, 0.88%)</title><rect x="479" y="324" width="10" height="15" fill="rgb(254,39,8)"/><text x="482.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.58%)</title><rect x="482" y="340" width="7" height="15" fill="rgb(216,198,39)"/><text x="485.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="486" y="356" width="3" height="15" fill="rgb(225,215,24)"/><text x="489.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="489" y="292" width="7" height="15" fill="rgb(220,148,3)"/><text x="492.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.29%)</title><rect x="496" y="308" width="3" height="15" fill="rgb(244,135,50)"/><text x="499.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.29%)</title><rect x="496" y="324" width="3" height="15" fill="rgb(239,202,25)"/><text x="499.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.29%)</title><rect x="496" y="340" width="3" height="15" fill="rgb(252,87,42)"/><text x="499.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="503" y="324" width="3" height="15" fill="rgb(225,51,30)"/><text x="506.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.17%)</title><rect x="499" y="308" width="14" height="15" fill="rgb(218,163,52)"/><text x="502.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.58%)</title><rect x="506" y="324" width="7" height="15" fill="rgb(251,186,48)"/><text x="509.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 3.80%)</title><rect x="475" y="276" width="45" height="15" fill="rgb(213,159,28)"/><text x="478.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.05%)</title><rect x="496" y="292" width="24" height="15" fill="rgb(247,80,13)"/><text x="499.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.58%)</title><rect x="513" y="308" width="7" height="15" fill="rgb(251,190,32)"/><text x="516.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.58%)</title><rect x="513" y="324" width="7" height="15" fill="rgb(210,184,48)"/><text x="516.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="520" y="276" width="4" height="15" fill="rgb(209,73,53)"/><text x="523.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 4.68%)</title><rect x="472" y="260" width="55" height="15" fill="rgb(232,157,35)"/><text x="475.00" y="270.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.29%)</title><rect x="524" y="276" width="3" height="15" fill="rgb(252,135,18)"/><text x="527.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.29%)</title><rect x="524" y="292" width="3" height="15" fill="rgb(214,191,34)"/><text x="527.00" y="302.50"></text></g><g><title>0x7fa4491a2e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="524" y="308" width="3" height="15" fill="rgb(240,199,12)"/><text x="527.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (36 samples, 10.53%)</title><rect x="406" y="228" width="124" height="15" fill="rgb(211,55,9)"/><text x="409.00" y="238.50">_run (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 4.97%)</title><rect x="472" y="244" width="58" height="15" fill="rgb(240,174,5)"/><text x="475.00" y="254.50">ufunc_..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.29%)</title><rect x="527" y="260" width="3" height="15" fill="rgb(219,19,44)"/><text x="530.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.29%)</title><rect x="527" y="276" width="3" height="15" fill="rgb(209,158,37)"/><text x="530.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.58%)</title><rect x="555" y="260" width="7" height="15" fill="rgb(234,181,12)"/><text x="558.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.58%)</title><rect x="555" y="276" width="7" height="15" fill="rgb(251,211,17)"/><text x="558.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.88%)</title><rect x="568" y="324" width="11" height="15" fill="rgb(214,211,22)"/><text x="571.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.88%)</title><rect x="568" y="340" width="11" height="15" fill="rgb(234,26,40)"/><text x="571.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.88%)</title><rect x="568" y="356" width="11" height="15" fill="rgb(214,126,38)"/><text x="571.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.88%)</title><rect x="568" y="372" width="11" height="15" fill="rgb(206,158,9)"/><text x="571.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.88%)</title><rect x="568" y="388" width="11" height="15" fill="rgb(225,86,27)"/><text x="571.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="582" y="340" width="4" height="15" fill="rgb(205,159,7)"/><text x="585.00" y="350.50"></text></g><g><title>0x7fa449fa1120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="586" y="356" width="3" height="15" fill="rgb(230,229,39)"/><text x="589.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="589" y="372" width="4" height="15" fill="rgb(218,158,7)"/><text x="592.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.58%)</title><rect x="593" y="372" width="7" height="15" fill="rgb(224,195,31)"/><text x="596.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.58%)</title><rect x="593" y="388" width="7" height="15" fill="rgb(214,139,40)"/><text x="596.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="596" y="404" width="4" height="15" fill="rgb(252,218,50)"/><text x="599.00" y="414.50"></text></g><g><title>0x7fa449fa0d53 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="596" y="420" width="4" height="15" fill="rgb(236,93,21)"/><text x="599.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.29%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(217,117,28)"/><text x="603.00" y="382.50"></text></g><g><title>0x7fa4491a3710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="600" y="388" width="3" height="15" fill="rgb(213,201,36)"/><text x="603.00" y="398.50"></text></g><g><title>array_sum (methods.c) (13 samples, 3.80%)</title><rect x="562" y="260" width="44" height="15" fill="rgb(247,46,26)"/><text x="565.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 3.80%)</title><rect x="562" y="276" width="44" height="15" fill="rgb(215,35,1)"/><text x="565.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 3.80%)</title><rect x="562" y="292" width="44" height="15" fill="rgb(205,35,44)"/><text x="565.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 3.22%)</title><rect x="568" y="308" width="38" height="15" fill="rgb(212,220,28)"/><text x="571.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 2.34%)</title><rect x="579" y="324" width="27" height="15" fill="rgb(219,31,4)"/><text x="582.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.75%)</title><rect x="586" y="340" width="20" height="15" fill="rgb(212,156,49)"/><text x="589.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.46%)</title><rect x="589" y="356" width="17" height="15" fill="rgb(242,176,28)"/><text x="592.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.29%)</title><rect x="603" y="372" width="3" height="15" fill="rgb(207,22,53)"/><text x="606.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.29%)</title><rect x="606" y="276" width="4" height="15" fill="rgb(241,148,6)"/><text x="609.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.29%)</title><rect x="606" y="292" width="4" height="15" fill="rgb(243,108,54)"/><text x="609.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="606" y="308" width="4" height="15" fill="rgb(214,33,10)"/><text x="609.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="613" y="292" width="4" height="15" fill="rgb(249,118,14)"/><text x="616.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="613" y="308" width="4" height="15" fill="rgb(224,210,1)"/><text x="616.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.29%)</title><rect x="617" y="292" width="3" height="15" fill="rgb(216,174,28)"/><text x="620.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="620" y="292" width="4" height="15" fill="rgb(240,178,25)"/><text x="623.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="620" y="308" width="4" height="15" fill="rgb(228,74,13)"/><text x="623.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.29%)</title><rect x="624" y="308" width="3" height="15" fill="rgb(223,121,49)"/><text x="627.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="624" y="324" width="3" height="15" fill="rgb(209,149,37)"/><text x="627.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="624" y="340" width="3" height="15" fill="rgb(235,59,45)"/><text x="627.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.58%)</title><rect x="624" y="292" width="7" height="15" fill="rgb(254,135,34)"/><text x="627.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="627" y="308" width="4" height="15" fill="rgb(217,6,11)"/><text x="630.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.29%)</title><rect x="627" y="324" width="4" height="15" fill="rgb(222,175,22)"/><text x="630.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.05%)</title><rect x="610" y="276" width="24" height="15" fill="rgb(242,180,14)"/><text x="613.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="631" y="292" width="3" height="15" fill="rgb(243,91,23)"/><text x="634.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.29%)</title><rect x="634" y="276" width="3" height="15" fill="rgb(230,158,22)"/><text x="637.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.29%)</title><rect x="634" y="292" width="3" height="15" fill="rgb(236,171,2)"/><text x="637.00" y="302.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (110 samples, 32.16%)</title><rect x="261" y="164" width="380" height="15" fill="rgb(235,91,54)"/><text x="264.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (108 samples, 31.58%)</title><rect x="268" y="180" width="373" height="15" fill="rgb(246,229,44)"/><text x="271.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (80 samples, 23.39%)</title><rect x="365" y="196" width="276" height="15" fill="rgb(227,158,43)"/><text x="368.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (74 samples, 21.64%)</title><rect x="386" y="212" width="255" height="15" fill="rgb(224,134,14)"/><text x="389.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 9.36%)</title><rect x="530" y="228" width="111" height="15" fill="rgb(235,47,14)"/><text x="533.00" y="238.50">_run (mlprodi..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 8.77%)</title><rect x="537" y="244" width="104" height="15" fill="rgb(229,48,7)"/><text x="540.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.92%)</title><rect x="606" y="260" width="35" height="15" fill="rgb(209,184,21)"/><text x="609.00" y="270.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(228,54,47)"/><text x="640.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (119 samples, 34.80%)</title><rect x="237" y="100" width="411" height="15" fill="rgb(229,153,37)"/><text x="240.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (117 samples, 34.21%)</title><rect x="244" y="116" width="404" height="15" fill="rgb(253,37,0)"/><text x="247.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (114 samples, 33.33%)</title><rect x="254" y="132" width="394" height="15" fill="rgb(247,171,21)"/><text x="257.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (114 samples, 33.33%)</title><rect x="254" y="148" width="394" height="15" fill="rgb(234,210,18)"/><text x="257.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.58%)</title><rect x="641" y="164" width="7" height="15" fill="rgb(245,213,47)"/><text x="644.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="644" y="180" width="4" height="15" fill="rgb(218,37,7)"/><text x="647.00" y="190.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (120 samples, 35.09%)</title><rect x="237" y="68" width="414" height="15" fill="rgb(218,221,13)"/><text x="240.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (120 samples, 35.09%)</title><rect x="237" y="84" width="414" height="15" fill="rgb(246,125,16)"/><text x="240.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="648" y="100" width="3" height="15" fill="rgb(220,32,15)"/><text x="651.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="648" y="116" width="3" height="15" fill="rgb(239,67,33)"/><text x="651.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="648" y="132" width="3" height="15" fill="rgb(228,171,28)"/><text x="651.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="648" y="148" width="3" height="15" fill="rgb(229,123,22)"/><text x="651.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="648" y="164" width="3" height="15" fill="rgb(248,125,50)"/><text x="651.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.29%)</title><rect x="648" y="180" width="3" height="15" fill="rgb(237,109,21)"/><text x="651.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.29%)</title><rect x="648" y="196" width="3" height="15" fill="rgb(235,121,16)"/><text x="651.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="212" width="3" height="15" fill="rgb(238,20,20)"/><text x="651.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="228" width="3" height="15" fill="rgb(250,34,26)"/><text x="651.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="244" width="3" height="15" fill="rgb(208,102,34)"/><text x="651.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="648" y="260" width="3" height="15" fill="rgb(238,58,2)"/><text x="651.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="276" width="3" height="15" fill="rgb(246,67,29)"/><text x="651.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.29%)</title><rect x="648" y="292" width="3" height="15" fill="rgb(209,170,24)"/><text x="651.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="308" width="3" height="15" fill="rgb(221,100,4)"/><text x="651.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="324" width="3" height="15" fill="rgb(210,28,32)"/><text x="651.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="340" width="3" height="15" fill="rgb(241,9,28)"/><text x="651.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="648" y="356" width="3" height="15" fill="rgb(242,57,37)"/><text x="651.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="372" width="3" height="15" fill="rgb(228,185,5)"/><text x="651.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.29%)</title><rect x="648" y="388" width="3" height="15" fill="rgb(212,97,6)"/><text x="651.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="404" width="3" height="15" fill="rgb(251,116,14)"/><text x="651.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="420" width="3" height="15" fill="rgb(206,35,54)"/><text x="651.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="436" width="3" height="15" fill="rgb(237,204,50)"/><text x="651.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="648" y="452" width="3" height="15" fill="rgb(208,177,15)"/><text x="651.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="648" y="468" width="3" height="15" fill="rgb(237,53,27)"/><text x="651.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="648" y="484" width="3" height="15" fill="rgb(237,195,26)"/><text x="651.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.29%)</title><rect x="648" y="500" width="3" height="15" fill="rgb(209,114,2)"/><text x="651.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="648" y="516" width="3" height="15" fill="rgb(241,93,34)"/><text x="651.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="648" y="532" width="3" height="15" fill="rgb(208,52,43)"/><text x="651.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="648" y="548" width="3" height="15" fill="rgb(225,63,13)"/><text x="651.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="648" y="564" width="3" height="15" fill="rgb(247,183,14)"/><text x="651.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="648" y="580" width="3" height="15" fill="rgb(253,129,50)"/><text x="651.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="648" y="596" width="3" height="15" fill="rgb(241,178,27)"/><text x="651.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="648" y="612" width="3" height="15" fill="rgb(232,65,31)"/><text x="651.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="648" y="628" width="3" height="15" fill="rgb(233,103,8)"/><text x="651.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.29%)</title><rect x="648" y="644" width="3" height="15" fill="rgb(226,210,15)"/><text x="651.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.29%)</title><rect x="648" y="660" width="3" height="15" fill="rgb(254,43,6)"/><text x="651.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="648" y="676" width="3" height="15" fill="rgb(233,214,43)"/><text x="651.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="648" y="692" width="3" height="15" fill="rgb(245,179,6)"/><text x="651.00" y="702.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.29%)</title><rect x="648" y="708" width="3" height="15" fill="rgb(243,185,41)"/><text x="651.00" y="718.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.88%)</title><rect x="706" y="180" width="11" height="15" fill="rgb(224,178,25)"/><text x="709.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.58%)</title><rect x="710" y="196" width="7" height="15" fill="rgb(223,126,43)"/><text x="713.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.58%)</title><rect x="710" y="212" width="7" height="15" fill="rgb(210,104,20)"/><text x="713.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (2 samples, 0.58%)</title><rect x="710" y="228" width="7" height="15" fill="rgb(252,120,17)"/><text x="713.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (2 samples, 0.58%)</title><rect x="710" y="244" width="7" height="15" fill="rgb(208,134,2)"/><text x="713.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.58%)</title><rect x="720" y="244" width="7" height="15" fill="rgb(252,215,50)"/><text x="723.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.58%)</title><rect x="720" y="260" width="7" height="15" fill="rgb(248,102,28)"/><text x="723.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.58%)</title><rect x="720" y="276" width="7" height="15" fill="rgb(251,59,3)"/><text x="723.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.58%)</title><rect x="720" y="292" width="7" height="15" fill="rgb(221,51,43)"/><text x="723.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.58%)</title><rect x="720" y="308" width="7" height="15" fill="rgb(206,15,7)"/><text x="723.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.29%)</title><rect x="734" y="292" width="4" height="15" fill="rgb(229,217,34)"/><text x="737.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.29%)</title><rect x="734" y="308" width="4" height="15" fill="rgb(217,41,19)"/><text x="737.00" y="318.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.29%)</title><rect x="734" y="324" width="4" height="15" fill="rgb(213,225,54)"/><text x="737.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.29%)</title><rect x="738" y="292" width="3" height="15" fill="rgb(223,69,48)"/><text x="741.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.29%)</title><rect x="738" y="308" width="3" height="15" fill="rgb(208,149,43)"/><text x="741.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.58%)</title><rect x="741" y="292" width="7" height="15" fill="rgb(232,87,36)"/><text x="744.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.58%)</title><rect x="741" y="308" width="7" height="15" fill="rgb(217,211,7)"/><text x="744.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="744" y="324" width="4" height="15" fill="rgb(213,208,46)"/><text x="747.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.29%)</title><rect x="744" y="340" width="4" height="15" fill="rgb(235,165,28)"/><text x="747.00" y="350.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.29%)</title><rect x="748" y="292" width="3" height="15" fill="rgb(212,219,18)"/><text x="751.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.05%)</title><rect x="731" y="276" width="24" height="15" fill="rgb(242,117,40)"/><text x="734.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="751" y="292" width="4" height="15" fill="rgb(210,224,29)"/><text x="754.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.29%)</title><rect x="751" y="308" width="4" height="15" fill="rgb(207,93,0)"/><text x="754.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="758" y="292" width="4" height="15" fill="rgb(216,222,24)"/><text x="761.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="758" y="308" width="4" height="15" fill="rgb(207,67,7)"/><text x="761.00" y="318.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.29%)</title><rect x="758" y="324" width="4" height="15" fill="rgb(228,228,50)"/><text x="761.00" y="334.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.29%)</title><rect x="758" y="340" width="4" height="15" fill="rgb(221,93,52)"/><text x="761.00" y="350.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.09%)</title><rect x="717" y="180" width="48" height="15" fill="rgb(251,36,38)"/><text x="720.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.09%)</title><rect x="717" y="196" width="48" height="15" fill="rgb(239,218,46)"/><text x="720.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.09%)</title><rect x="717" y="212" width="48" height="15" fill="rgb(238,180,15)"/><text x="720.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 3.80%)</title><rect x="720" y="228" width="45" height="15" fill="rgb(238,4,17)"/><text x="723.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 3.22%)</title><rect x="727" y="244" width="38" height="15" fill="rgb(207,228,20)"/><text x="730.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 2.92%)</title><rect x="731" y="260" width="34" height="15" fill="rgb(215,155,32)"/><text x="734.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.88%)</title><rect x="755" y="276" width="10" height="15" fill="rgb(206,198,42)"/><text x="758.00" y="286.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.29%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(250,74,9)"/><text x="765.00" y="302.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.58%)</title><rect x="765" y="196" width="7" height="15" fill="rgb(238,193,34)"/><text x="768.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.29%)</title><rect x="769" y="212" width="3" height="15" fill="rgb(224,129,48)"/><text x="772.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="769" y="228" width="3" height="15" fill="rgb(228,96,2)"/><text x="772.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.29%)</title><rect x="772" y="276" width="3" height="15" fill="rgb(241,9,36)"/><text x="775.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.29%)</title><rect x="772" y="292" width="3" height="15" fill="rgb(235,134,21)"/><text x="775.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="775" y="276" width="4" height="15" fill="rgb(228,3,15)"/><text x="778.00" y="286.50"></text></g><g><title>array_add (number.c) (4 samples, 1.17%)</title><rect x="772" y="196" width="14" height="15" fill="rgb(233,87,3)"/><text x="775.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.17%)</title><rect x="772" y="212" width="14" height="15" fill="rgb(208,3,53)"/><text x="775.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.17%)</title><rect x="772" y="228" width="14" height="15" fill="rgb(242,178,20)"/><text x="775.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.17%)</title><rect x="772" y="244" width="14" height="15" fill="rgb(243,109,10)"/><text x="775.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.17%)</title><rect x="772" y="260" width="14" height="15" fill="rgb(231,55,9)"/><text x="775.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.58%)</title><rect x="779" y="276" width="7" height="15" fill="rgb(239,190,30)"/><text x="782.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.29%)</title><rect x="782" y="292" width="4" height="15" fill="rgb(254,174,24)"/><text x="785.00" y="302.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.58%)</title><rect x="813" y="212" width="7" height="15" fill="rgb(220,128,42)"/><text x="816.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.58%)</title><rect x="820" y="212" width="7" height="15" fill="rgb(214,118,9)"/><text x="823.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.58%)</title><rect x="827" y="212" width="7" height="15" fill="rgb(246,207,43)"/><text x="830.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.58%)</title><rect x="848" y="228" width="7" height="15" fill="rgb(239,10,0)"/><text x="851.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.29%)</title><rect x="855" y="228" width="3" height="15" fill="rgb(233,155,9)"/><text x="858.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 2.92%)</title><rect x="834" y="212" width="35" height="15" fill="rgb(225,209,25)"/><text x="837.00" y="222.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.88%)</title><rect x="858" y="228" width="11" height="15" fill="rgb(231,47,15)"/><text x="861.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.29%)</title><rect x="869" y="212" width="3" height="15" fill="rgb(243,34,51)"/><text x="872.00" y="222.50"></text></g><g><title>0x7fa44a05ee02 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="896" y="228" width="4" height="15" fill="rgb(248,107,18)"/><text x="899.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (11 samples, 3.22%)</title><rect x="872" y="212" width="38" height="15" fill="rgb(211,75,50)"/><text x="875.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.88%)</title><rect x="900" y="228" width="10" height="15" fill="rgb(205,146,18)"/><text x="903.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.58%)</title><rect x="903" y="244" width="7" height="15" fill="rgb(253,115,48)"/><text x="906.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.88%)</title><rect x="910" y="212" width="10" height="15" fill="rgb(249,21,32)"/><text x="913.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="917" y="228" width="3" height="15" fill="rgb(226,1,22)"/><text x="920.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.29%)</title><rect x="927" y="228" width="4" height="15" fill="rgb(235,183,36)"/><text x="930.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (6 samples, 1.75%)</title><rect x="920" y="212" width="21" height="15" fill="rgb(253,58,54)"/><text x="923.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 0.88%)</title><rect x="931" y="228" width="10" height="15" fill="rgb(223,68,28)"/><text x="934.00" y="238.50"></text></g><g><title>0x7fa449f96ed2 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="938" y="244" width="3" height="15" fill="rgb(239,170,52)"/><text x="941.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (55 samples, 16.08%)</title><rect x="786" y="196" width="190" height="15" fill="rgb(225,65,4)"/><text x="789.00" y="206.50">check_array (sklearn/uti..</text></g><g><title>simplefilter (warnings.py) (10 samples, 2.92%)</title><rect x="941" y="212" width="35" height="15" fill="rgb(216,117,40)"/><text x="944.00" y="222.50">si..</text></g><g><title>_add_filter (warnings.py) (8 samples, 2.34%)</title><rect x="948" y="228" width="28" height="15" fill="rgb(224,200,54)"/><text x="951.00" y="238.50">_..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.17%)</title><rect x="996" y="228" width="14" height="15" fill="rgb(231,111,13)"/><text x="999.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.92%)</title><rect x="986" y="212" width="34" height="15" fill="rgb(244,178,0)"/><text x="989.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.88%)</title><rect x="1010" y="228" width="10" height="15" fill="rgb(236,1,22)"/><text x="1013.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 4.09%)</title><rect x="976" y="196" width="48" height="15" fill="rgb(222,92,43)"/><text x="979.00" y="206.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.29%)</title><rect x="1020" y="212" width="4" height="15" fill="rgb(243,7,17)"/><text x="1023.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.58%)</title><rect x="1034" y="212" width="7" height="15" fill="rgb(219,101,52)"/><text x="1037.00" y="222.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (3 samples, 0.88%)</title><rect x="1051" y="324" width="11" height="15" fill="rgb(234,227,13)"/><text x="1054.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.58%)</title><rect x="1055" y="340" width="7" height="15" fill="rgb(254,129,34)"/><text x="1058.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.58%)</title><rect x="1055" y="356" width="7" height="15" fill="rgb(240,156,21)"/><text x="1058.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.46%)</title><rect x="1048" y="276" width="17" height="15" fill="rgb(233,84,42)"/><text x="1051.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.46%)</title><rect x="1048" y="292" width="17" height="15" fill="rgb(225,144,49)"/><text x="1051.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.46%)</title><rect x="1048" y="308" width="17" height="15" fill="rgb(216,208,20)"/><text x="1051.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1062" y="324" width="3" height="15" fill="rgb(247,65,54)"/><text x="1065.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.05%)</title><rect x="1045" y="260" width="24" height="15" fill="rgb(252,32,54)"/><text x="1048.00" y="270.50">N..</text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1065" y="276" width="4" height="15" fill="rgb(253,36,26)"/><text x="1068.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="1065" y="292" width="4" height="15" fill="rgb(250,206,37)"/><text x="1068.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1069" y="260" width="3" height="15" fill="rgb(229,108,16)"/><text x="1072.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="1069" y="276" width="3" height="15" fill="rgb(214,29,37)"/><text x="1072.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.29%)</title><rect x="1069" y="292" width="3" height="15" fill="rgb(236,146,51)"/><text x="1072.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.29%)</title><rect x="1069" y="308" width="3" height="15" fill="rgb(236,12,31)"/><text x="1072.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1072" y="260" width="4" height="15" fill="rgb(225,228,25)"/><text x="1075.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1072" y="276" width="4" height="15" fill="rgb(226,128,32)"/><text x="1075.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1072" y="292" width="4" height="15" fill="rgb(236,182,38)"/><text x="1075.00" y="302.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.29%)</title><rect x="1072" y="308" width="4" height="15" fill="rgb(253,121,31)"/><text x="1075.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (92 samples, 26.90%)</title><rect x="765" y="180" width="318" height="15" fill="rgb(228,23,37)"/><text x="768.00" y="190.50">decision_function (sklearn/linear_model/_b..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (17 samples, 4.97%)</title><rect x="1024" y="196" width="59" height="15" fill="rgb(247,45,43)"/><text x="1027.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.51%)</title><rect x="1041" y="212" width="42" height="15" fill="rgb(251,187,31)"/><text x="1044.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.51%)</title><rect x="1041" y="228" width="42" height="15" fill="rgb(243,36,7)"/><text x="1044.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 3.51%)</title><rect x="1041" y="244" width="42" height="15" fill="rgb(206,111,11)"/><text x="1044.00" y="254.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.58%)</title><rect x="1076" y="260" width="7" height="15" fill="rgb(218,8,45)"/><text x="1079.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.58%)</title><rect x="1083" y="196" width="6" height="15" fill="rgb(208,85,43)"/><text x="1086.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.58%)</title><rect x="1083" y="212" width="6" height="15" fill="rgb(254,199,25)"/><text x="1086.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="1086" y="228" width="3" height="15" fill="rgb(234,178,27)"/><text x="1089.00" y="238.50"></text></g><g><title>0x7fa449f96e7a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1086" y="244" width="3" height="15" fill="rgb(244,8,46)"/><text x="1089.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="1093" y="212" width="7" height="15" fill="rgb(212,173,31)"/><text x="1096.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1096" y="228" width="4" height="15" fill="rgb(249,129,21)"/><text x="1099.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1096" y="244" width="4" height="15" fill="rgb(218,120,19)"/><text x="1099.00" y="254.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.29%)</title><rect x="1100" y="276" width="3" height="15" fill="rgb(227,188,23)"/><text x="1103.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="1100" y="292" width="3" height="15" fill="rgb(233,24,10)"/><text x="1103.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="1100" y="308" width="3" height="15" fill="rgb(233,152,30)"/><text x="1103.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.58%)</title><rect x="1100" y="228" width="7" height="15" fill="rgb(230,133,46)"/><text x="1103.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.58%)</title><rect x="1100" y="244" width="7" height="15" fill="rgb(254,11,18)"/><text x="1103.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.58%)</title><rect x="1100" y="260" width="7" height="15" fill="rgb(209,200,42)"/><text x="1103.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1103" y="276" width="4" height="15" fill="rgb(227,99,2)"/><text x="1106.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.46%)</title><rect x="1100" y="212" width="17" height="15" fill="rgb(242,40,23)"/><text x="1103.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.88%)</title><rect x="1107" y="228" width="10" height="15" fill="rgb(233,73,5)"/><text x="1110.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.58%)</title><rect x="1110" y="244" width="7" height="15" fill="rgb(223,74,6)"/><text x="1113.00" y="254.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1114" y="260" width="3" height="15" fill="rgb(217,49,34)"/><text x="1117.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.58%)</title><rect x="1117" y="212" width="7" height="15" fill="rgb(220,101,2)"/><text x="1120.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="1120" y="228" width="4" height="15" fill="rgb(212,8,2)"/><text x="1123.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (130 samples, 38.01%)</title><rect x="679" y="164" width="448" height="15" fill="rgb(216,85,2)"/><text x="682.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.80%)</title><rect x="1083" y="180" width="44" height="15" fill="rgb(219,219,51)"/><text x="1086.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.22%)</title><rect x="1089" y="196" width="38" height="15" fill="rgb(228,144,2)"/><text x="1092.00" y="206.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1124" y="212" width="3" height="15" fill="rgb(253,119,49)"/><text x="1127.00" y="222.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.29%)</title><rect x="1127" y="164" width="4" height="15" fill="rgb(241,165,38)"/><text x="1130.00" y="174.50"></text></g><g><title>0x7fa449fa1120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1165" y="196" width="4" height="15" fill="rgb(240,171,3)"/><text x="1168.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.88%)</title><rect x="1169" y="196" width="10" height="15" fill="rgb(249,104,18)"/><text x="1172.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 3.80%)</title><rect x="1141" y="180" width="45" height="15" fill="rgb(223,9,16)"/><text x="1144.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.58%)</title><rect x="1179" y="196" width="7" height="15" fill="rgb(247,181,32)"/><text x="1182.00" y="206.50"></text></g><g><title>all (342 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,165,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (342 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,161,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (156 samples, 45.61%)</title><rect x="651" y="68" width="539" height="15" fill="rgb(249,91,12)"/><text x="654.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (156 samples, 45.61%)</title><rect x="651" y="84" width="539" height="15" fill="rgb(227,68,20)"/><text x="654.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_5..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py) (156 samples, 45.61%)</title><rect x="651" y="100" width="539" height="15" fill="rgb(254,146,16)"/><text x="654.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (154 samples, 45.03%)</title><rect x="658" y="116" width="532" height="15" fill="rgb(236,25,13)"/><text x="661.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (152 samples, 44.44%)</title><rect x="665" y="132" width="525" height="15" fill="rgb(238,193,0)"/><text x="668.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (150 samples, 43.86%)</title><rect x="672" y="148" width="518" height="15" fill="rgb(241,143,48)"/><text x="675.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 4.97%)</title><rect x="1131" y="164" width="59" height="15" fill="rgb(226,180,9)"/><text x="1134.00" y="174.50">check_..</text></g><g><title>isclass (inspect.py) (1 samples, 0.29%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(244,116,7)"/><text x="1189.00" y="190.50"></text></g></g></svg>