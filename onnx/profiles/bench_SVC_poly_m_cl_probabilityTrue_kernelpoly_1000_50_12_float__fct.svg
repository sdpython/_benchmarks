<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(249,222,19)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(246,91,34)"/><text x="13.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(211,139,31)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(220,51,23)"/><text x="13.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="868" width="6" height="15" fill="rgb(219,226,10)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="884" width="6" height="15" fill="rgb(244,41,1)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(219,23,37)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(222,67,41)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(208,154,25)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(250,16,17)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="964" width="6" height="15" fill="rgb(250,9,45)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="980" width="6" height="15" fill="rgb(218,182,3)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="996" width="6" height="15" fill="rgb(233,207,42)"/><text x="18.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="1012" width="6" height="15" fill="rgb(211,173,52)"/><text x="18.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="1028" width="6" height="15" fill="rgb(226,47,29)"/><text x="18.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.48%)</title><rect x="15" y="1044" width="6" height="15" fill="rgb(221,184,27)"/><text x="18.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(224,48,24)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(242,215,14)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="868" width="6" height="15" fill="rgb(243,200,38)"/><text x="24.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="884" width="6" height="15" fill="rgb(205,116,26)"/><text x="24.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="900" width="6" height="15" fill="rgb(213,6,31)"/><text x="24.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="916" width="6" height="15" fill="rgb(250,65,49)"/><text x="24.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="932" width="6" height="15" fill="rgb(218,106,50)"/><text x="24.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="21" y="948" width="6" height="15" fill="rgb(213,63,49)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="21" y="964" width="6" height="15" fill="rgb(212,142,1)"/><text x="24.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="196" width="22" height="15" fill="rgb(220,7,48)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="212" width="22" height="15" fill="rgb(221,188,41)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="228" width="22" height="15" fill="rgb(213,119,25)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="244" width="22" height="15" fill="rgb(224,83,27)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="260" width="22" height="15" fill="rgb(213,139,34)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="276" width="22" height="15" fill="rgb(250,4,3)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.92%)</title><rect x="10" y="292" width="22" height="15" fill="rgb(222,179,12)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="308" width="22" height="15" fill="rgb(211,121,28)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="324" width="22" height="15" fill="rgb(246,69,24)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="340" width="22" height="15" fill="rgb(223,10,5)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="356" width="22" height="15" fill="rgb(235,226,5)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="372" width="22" height="15" fill="rgb(252,64,38)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.92%)</title><rect x="10" y="388" width="22" height="15" fill="rgb(234,27,43)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="404" width="22" height="15" fill="rgb(219,44,13)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="420" width="22" height="15" fill="rgb(233,180,41)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="436" width="22" height="15" fill="rgb(217,129,47)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="452" width="22" height="15" fill="rgb(244,116,17)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="468" width="22" height="15" fill="rgb(249,14,37)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.92%)</title><rect x="10" y="484" width="22" height="15" fill="rgb(213,75,13)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="500" width="22" height="15" fill="rgb(248,174,43)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="516" width="22" height="15" fill="rgb(237,169,38)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="532" width="22" height="15" fill="rgb(240,206,54)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="548" width="22" height="15" fill="rgb(211,18,28)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="564" width="22" height="15" fill="rgb(206,56,26)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.92%)</title><rect x="10" y="580" width="22" height="15" fill="rgb(218,123,52)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="596" width="22" height="15" fill="rgb(247,192,28)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="612" width="22" height="15" fill="rgb(253,159,31)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="628" width="22" height="15" fill="rgb(242,203,22)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="644" width="22" height="15" fill="rgb(243,207,6)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="660" width="22" height="15" fill="rgb(242,93,38)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="676" width="22" height="15" fill="rgb(249,80,37)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="692" width="22" height="15" fill="rgb(230,155,49)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="708" width="22" height="15" fill="rgb(208,57,6)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.92%)</title><rect x="10" y="724" width="22" height="15" fill="rgb(207,80,8)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="740" width="22" height="15" fill="rgb(246,116,6)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="756" width="22" height="15" fill="rgb(244,60,26)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="772" width="22" height="15" fill="rgb(241,3,12)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="10" y="788" width="22" height="15" fill="rgb(246,75,13)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="10" y="804" width="22" height="15" fill="rgb(225,134,48)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.92%)</title><rect x="10" y="820" width="22" height="15" fill="rgb(241,183,18)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="27" y="836" width="5" height="15" fill="rgb(211,91,52)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="27" y="852" width="5" height="15" fill="rgb(254,47,5)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="27" y="868" width="5" height="15" fill="rgb(237,38,27)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="27" y="884" width="5" height="15" fill="rgb(253,121,38)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="27" y="900" width="5" height="15" fill="rgb(230,193,18)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.48%)</title><rect x="27" y="916" width="5" height="15" fill="rgb(231,138,32)"/><text x="30.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.48%)</title><rect x="27" y="932" width="5" height="15" fill="rgb(215,117,31)"/><text x="30.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.48%)</title><rect x="27" y="948" width="5" height="15" fill="rgb(238,94,11)"/><text x="30.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.48%)</title><rect x="27" y="964" width="5" height="15" fill="rgb(207,163,13)"/><text x="30.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.48%)</title><rect x="27" y="980" width="5" height="15" fill="rgb(235,221,38)"/><text x="30.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="996" width="5" height="15" fill="rgb(233,92,18)"/><text x="30.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1012" width="5" height="15" fill="rgb(212,193,9)"/><text x="30.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1028" width="5" height="15" fill="rgb(251,153,3)"/><text x="30.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1044" width="5" height="15" fill="rgb(226,74,48)"/><text x="30.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1060" width="5" height="15" fill="rgb(207,175,28)"/><text x="30.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1076" width="5" height="15" fill="rgb(246,190,52)"/><text x="30.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1092" width="5" height="15" fill="rgb(215,5,14)"/><text x="30.00" y="1102.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1108" width="5" height="15" fill="rgb(234,94,36)"/><text x="30.00" y="1118.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.48%)</title><rect x="27" y="1124" width="5" height="15" fill="rgb(238,141,47)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1476" width="6" height="15" fill="rgb(238,13,11)"/><text x="35.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1492" width="6" height="15" fill="rgb(248,4,47)"/><text x="35.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1508" width="6" height="15" fill="rgb(231,17,41)"/><text x="35.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1524" width="6" height="15" fill="rgb(238,49,26)"/><text x="35.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1540" width="6" height="15" fill="rgb(208,115,1)"/><text x="35.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.48%)</title><rect x="32" y="1556" width="6" height="15" fill="rgb(242,207,34)"/><text x="35.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.48%)</title><rect x="32" y="1572" width="6" height="15" fill="rgb(251,30,11)"/><text x="35.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1588" width="6" height="15" fill="rgb(211,155,14)"/><text x="35.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1604" width="6" height="15" fill="rgb(223,177,49)"/><text x="35.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1620" width="6" height="15" fill="rgb(223,179,2)"/><text x="35.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1636" width="6" height="15" fill="rgb(211,191,11)"/><text x="35.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1652" width="6" height="15" fill="rgb(221,124,9)"/><text x="35.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.48%)</title><rect x="32" y="1668" width="6" height="15" fill="rgb(233,102,25)"/><text x="35.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.48%)</title><rect x="32" y="1684" width="6" height="15" fill="rgb(239,186,22)"/><text x="35.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1700" width="6" height="15" fill="rgb(215,12,6)"/><text x="35.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1716" width="6" height="15" fill="rgb(227,47,12)"/><text x="35.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1732" width="6" height="15" fill="rgb(230,24,29)"/><text x="35.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1748" width="6" height="15" fill="rgb(242,97,11)"/><text x="35.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1764" width="6" height="15" fill="rgb(242,127,42)"/><text x="35.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.48%)</title><rect x="32" y="1780" width="6" height="15" fill="rgb(247,153,36)"/><text x="35.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1796" width="6" height="15" fill="rgb(214,186,31)"/><text x="35.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1812" width="6" height="15" fill="rgb(244,71,27)"/><text x="35.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1828" width="6" height="15" fill="rgb(231,115,27)"/><text x="35.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1844" width="6" height="15" fill="rgb(230,111,48)"/><text x="35.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1860" width="6" height="15" fill="rgb(227,197,48)"/><text x="35.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.48%)</title><rect x="32" y="1876" width="6" height="15" fill="rgb(250,44,29)"/><text x="35.00" y="1886.50"></text></g><g><title>0x7f612ebebc58 (?) (1 samples, 0.48%)</title><rect x="38" y="1588" width="6" height="15" fill="rgb(206,12,1)"/><text x="41.00" y="1598.50"></text></g><g><title>0x7f612ecbe479 (?) (1 samples, 0.48%)</title><rect x="38" y="1604" width="6" height="15" fill="rgb(237,191,29)"/><text x="41.00" y="1614.50"></text></g><g><title>0x7f612ecbe3dc (?) (1 samples, 0.48%)</title><rect x="38" y="1620" width="6" height="15" fill="rgb(247,229,9)"/><text x="41.00" y="1630.50"></text></g><g><title>0x7f612ecbe0b9 (?) (1 samples, 0.48%)</title><rect x="38" y="1636" width="6" height="15" fill="rgb(247,67,11)"/><text x="41.00" y="1646.50"></text></g><g><title>0x7f612ec9c5b6 (?) (1 samples, 0.48%)</title><rect x="38" y="1652" width="6" height="15" fill="rgb(225,99,42)"/><text x="41.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="484" width="23" height="15" fill="rgb(209,187,29)"/><text x="35.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="500" width="23" height="15" fill="rgb(208,156,40)"/><text x="35.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="516" width="23" height="15" fill="rgb(246,91,42)"/><text x="35.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="532" width="23" height="15" fill="rgb(244,206,42)"/><text x="35.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="548" width="23" height="15" fill="rgb(229,219,29)"/><text x="35.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="564" width="23" height="15" fill="rgb(220,188,12)"/><text x="35.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.92%)</title><rect x="32" y="580" width="23" height="15" fill="rgb(217,168,36)"/><text x="35.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="596" width="23" height="15" fill="rgb(249,40,24)"/><text x="35.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="612" width="23" height="15" fill="rgb(250,131,15)"/><text x="35.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="628" width="23" height="15" fill="rgb(233,32,12)"/><text x="35.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="644" width="23" height="15" fill="rgb(242,171,25)"/><text x="35.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="660" width="23" height="15" fill="rgb(236,204,40)"/><text x="35.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.92%)</title><rect x="32" y="676" width="23" height="15" fill="rgb(208,148,28)"/><text x="35.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="692" width="23" height="15" fill="rgb(250,1,44)"/><text x="35.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="708" width="23" height="15" fill="rgb(205,44,16)"/><text x="35.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="724" width="23" height="15" fill="rgb(248,220,6)"/><text x="35.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="740" width="23" height="15" fill="rgb(208,26,1)"/><text x="35.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="756" width="23" height="15" fill="rgb(251,163,51)"/><text x="35.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.92%)</title><rect x="32" y="772" width="23" height="15" fill="rgb(246,166,36)"/><text x="35.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="788" width="23" height="15" fill="rgb(232,184,1)"/><text x="35.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="804" width="23" height="15" fill="rgb(213,191,20)"/><text x="35.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="820" width="23" height="15" fill="rgb(228,180,44)"/><text x="35.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="836" width="23" height="15" fill="rgb(220,56,8)"/><text x="35.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="852" width="23" height="15" fill="rgb(216,223,16)"/><text x="35.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.92%)</title><rect x="32" y="868" width="23" height="15" fill="rgb(246,169,33)"/><text x="35.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="884" width="23" height="15" fill="rgb(238,170,35)"/><text x="35.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="900" width="23" height="15" fill="rgb(228,208,44)"/><text x="35.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="916" width="23" height="15" fill="rgb(254,15,12)"/><text x="35.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="932" width="23" height="15" fill="rgb(233,46,25)"/><text x="35.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="948" width="23" height="15" fill="rgb(241,80,3)"/><text x="35.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="964" width="23" height="15" fill="rgb(229,1,42)"/><text x="35.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="980" width="23" height="15" fill="rgb(223,187,12)"/><text x="35.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="996" width="23" height="15" fill="rgb(254,1,17)"/><text x="35.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.92%)</title><rect x="32" y="1012" width="23" height="15" fill="rgb(235,123,25)"/><text x="35.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1028" width="23" height="15" fill="rgb(243,28,16)"/><text x="35.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1044" width="23" height="15" fill="rgb(237,17,3)"/><text x="35.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1060" width="23" height="15" fill="rgb(225,190,13)"/><text x="35.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="1076" width="23" height="15" fill="rgb(207,227,17)"/><text x="35.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1092" width="23" height="15" fill="rgb(244,31,17)"/><text x="35.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.92%)</title><rect x="32" y="1108" width="23" height="15" fill="rgb(249,193,6)"/><text x="35.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1124" width="23" height="15" fill="rgb(213,11,35)"/><text x="35.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1140" width="23" height="15" fill="rgb(237,102,37)"/><text x="35.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1156" width="23" height="15" fill="rgb(217,34,14)"/><text x="35.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1172" width="23" height="15" fill="rgb(240,68,30)"/><text x="35.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1188" width="23" height="15" fill="rgb(231,229,48)"/><text x="35.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="1204" width="23" height="15" fill="rgb(205,120,52)"/><text x="35.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1220" width="23" height="15" fill="rgb(247,25,18)"/><text x="35.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.92%)</title><rect x="32" y="1236" width="23" height="15" fill="rgb(254,223,39)"/><text x="35.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1252" width="23" height="15" fill="rgb(246,107,32)"/><text x="35.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1268" width="23" height="15" fill="rgb(230,63,5)"/><text x="35.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1284" width="23" height="15" fill="rgb(220,103,17)"/><text x="35.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1300" width="23" height="15" fill="rgb(223,221,19)"/><text x="35.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1316" width="23" height="15" fill="rgb(238,170,23)"/><text x="35.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="1332" width="23" height="15" fill="rgb(217,223,32)"/><text x="35.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1348" width="23" height="15" fill="rgb(231,116,52)"/><text x="35.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.92%)</title><rect x="32" y="1364" width="23" height="15" fill="rgb(252,117,29)"/><text x="35.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1380" width="23" height="15" fill="rgb(245,113,54)"/><text x="35.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1396" width="23" height="15" fill="rgb(247,219,34)"/><text x="35.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1412" width="23" height="15" fill="rgb(242,107,19)"/><text x="35.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.92%)</title><rect x="32" y="1428" width="23" height="15" fill="rgb(239,147,17)"/><text x="35.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.92%)</title><rect x="32" y="1444" width="23" height="15" fill="rgb(208,212,45)"/><text x="35.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.92%)</title><rect x="32" y="1460" width="23" height="15" fill="rgb(214,42,7)"/><text x="35.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.44%)</title><rect x="38" y="1476" width="17" height="15" fill="rgb(237,67,36)"/><text x="41.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.44%)</title><rect x="38" y="1492" width="17" height="15" fill="rgb(217,105,18)"/><text x="41.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 1.44%)</title><rect x="38" y="1508" width="17" height="15" fill="rgb(221,215,11)"/><text x="41.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 1.44%)</title><rect x="38" y="1524" width="17" height="15" fill="rgb(230,41,1)"/><text x="41.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.44%)</title><rect x="38" y="1540" width="17" height="15" fill="rgb(207,133,9)"/><text x="41.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.44%)</title><rect x="38" y="1556" width="17" height="15" fill="rgb(214,51,53)"/><text x="41.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.44%)</title><rect x="38" y="1572" width="17" height="15" fill="rgb(212,33,23)"/><text x="41.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.96%)</title><rect x="44" y="1588" width="11" height="15" fill="rgb(244,228,25)"/><text x="47.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.48%)</title><rect x="49" y="1604" width="6" height="15" fill="rgb(208,154,20)"/><text x="52.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.48%)</title><rect x="49" y="1620" width="6" height="15" fill="rgb(249,199,38)"/><text x="52.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.48%)</title><rect x="55" y="628" width="6" height="15" fill="rgb(237,108,11)"/><text x="58.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="644" width="6" height="15" fill="rgb(227,182,52)"/><text x="58.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="660" width="6" height="15" fill="rgb(251,212,6)"/><text x="58.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="676" width="6" height="15" fill="rgb(227,16,50)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="692" width="6" height="15" fill="rgb(229,122,18)"/><text x="58.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="708" width="6" height="15" fill="rgb(250,203,26)"/><text x="58.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="55" y="724" width="6" height="15" fill="rgb(222,156,15)"/><text x="58.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="740" width="6" height="15" fill="rgb(254,151,25)"/><text x="58.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.48%)</title><rect x="55" y="756" width="6" height="15" fill="rgb(237,208,54)"/><text x="58.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.48%)</title><rect x="55" y="772" width="6" height="15" fill="rgb(232,164,23)"/><text x="58.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.48%)</title><rect x="55" y="788" width="6" height="15" fill="rgb(218,5,52)"/><text x="58.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.48%)</title><rect x="55" y="804" width="6" height="15" fill="rgb(230,108,7)"/><text x="58.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.48%)</title><rect x="55" y="820" width="6" height="15" fill="rgb(207,32,14)"/><text x="58.00" y="830.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.48%)</title><rect x="55" y="836" width="6" height="15" fill="rgb(248,17,27)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="68" width="56" height="15" fill="rgb(244,76,40)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="84" width="56" height="15" fill="rgb(246,156,1)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="100" width="56" height="15" fill="rgb(240,140,14)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.81%)</title><rect x="10" y="116" width="56" height="15" fill="rgb(212,193,2)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="132" width="56" height="15" fill="rgb(235,18,23)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py) (10 samples, 4.81%)</title><rect x="10" y="148" width="56" height="15" fill="rgb(212,58,19)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="164" width="56" height="15" fill="rgb(253,172,12)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.81%)</title><rect x="10" y="180" width="56" height="15" fill="rgb(246,89,19)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="196" width="34" height="15" fill="rgb(228,42,6)"/><text x="35.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.88%)</title><rect x="32" y="212" width="34" height="15" fill="rgb(211,20,28)"/><text x="35.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="228" width="34" height="15" fill="rgb(228,190,52)"/><text x="35.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 2.88%)</title><rect x="32" y="244" width="34" height="15" fill="rgb(239,65,4)"/><text x="35.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="260" width="34" height="15" fill="rgb(216,3,23)"/><text x="35.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="276" width="34" height="15" fill="rgb(223,206,33)"/><text x="35.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="292" width="34" height="15" fill="rgb(237,182,51)"/><text x="35.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.88%)</title><rect x="32" y="308" width="34" height="15" fill="rgb(206,18,17)"/><text x="35.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="324" width="34" height="15" fill="rgb(239,60,50)"/><text x="35.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.88%)</title><rect x="32" y="340" width="34" height="15" fill="rgb(239,34,3)"/><text x="35.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="356" width="34" height="15" fill="rgb(248,186,31)"/><text x="35.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="372" width="34" height="15" fill="rgb(237,132,27)"/><text x="35.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="388" width="34" height="15" fill="rgb(213,126,30)"/><text x="35.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.88%)</title><rect x="32" y="404" width="34" height="15" fill="rgb(223,80,35)"/><text x="35.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="420" width="34" height="15" fill="rgb(206,222,53)"/><text x="35.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.88%)</title><rect x="32" y="436" width="34" height="15" fill="rgb(206,76,46)"/><text x="35.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="452" width="34" height="15" fill="rgb(234,105,24)"/><text x="35.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.88%)</title><rect x="32" y="468" width="34" height="15" fill="rgb(253,48,32)"/><text x="35.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="484" width="11" height="15" fill="rgb(221,178,41)"/><text x="58.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="55" y="500" width="11" height="15" fill="rgb(239,168,48)"/><text x="58.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="516" width="11" height="15" fill="rgb(234,207,26)"/><text x="58.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.96%)</title><rect x="55" y="532" width="11" height="15" fill="rgb(238,123,15)"/><text x="58.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="548" width="11" height="15" fill="rgb(218,157,11)"/><text x="58.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="564" width="11" height="15" fill="rgb(254,226,23)"/><text x="58.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="580" width="11" height="15" fill="rgb(240,207,32)"/><text x="58.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="55" y="596" width="11" height="15" fill="rgb(253,34,13)"/><text x="58.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="55" y="612" width="11" height="15" fill="rgb(251,110,25)"/><text x="58.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.48%)</title><rect x="61" y="628" width="5" height="15" fill="rgb(206,138,27)"/><text x="64.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="644" width="5" height="15" fill="rgb(223,129,24)"/><text x="64.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="660" width="5" height="15" fill="rgb(216,36,17)"/><text x="64.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="676" width="5" height="15" fill="rgb(237,203,40)"/><text x="64.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="692" width="5" height="15" fill="rgb(252,96,4)"/><text x="64.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="708" width="5" height="15" fill="rgb(249,8,7)"/><text x="64.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.48%)</title><rect x="61" y="724" width="5" height="15" fill="rgb(239,104,32)"/><text x="64.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="740" width="5" height="15" fill="rgb(211,56,27)"/><text x="64.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="756" width="5" height="15" fill="rgb(243,74,32)"/><text x="64.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="772" width="5" height="15" fill="rgb(239,2,4)"/><text x="64.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="788" width="5" height="15" fill="rgb(252,185,17)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="804" width="5" height="15" fill="rgb(229,79,32)"/><text x="64.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.48%)</title><rect x="61" y="820" width="5" height="15" fill="rgb(207,214,20)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="836" width="5" height="15" fill="rgb(250,50,5)"/><text x="64.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="852" width="5" height="15" fill="rgb(209,171,26)"/><text x="64.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="868" width="5" height="15" fill="rgb(224,155,32)"/><text x="64.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="884" width="5" height="15" fill="rgb(205,175,49)"/><text x="64.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="900" width="5" height="15" fill="rgb(254,43,53)"/><text x="64.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.48%)</title><rect x="61" y="916" width="5" height="15" fill="rgb(226,72,20)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="932" width="5" height="15" fill="rgb(254,44,52)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="948" width="5" height="15" fill="rgb(216,125,7)"/><text x="64.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="964" width="5" height="15" fill="rgb(238,49,21)"/><text x="64.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="980" width="5" height="15" fill="rgb(254,152,24)"/><text x="64.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="996" width="5" height="15" fill="rgb(220,10,13)"/><text x="64.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.48%)</title><rect x="61" y="1012" width="5" height="15" fill="rgb(253,45,11)"/><text x="64.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1028" width="5" height="15" fill="rgb(220,36,26)"/><text x="64.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1044" width="5" height="15" fill="rgb(210,179,41)"/><text x="64.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1060" width="5" height="15" fill="rgb(218,212,24)"/><text x="64.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1076" width="5" height="15" fill="rgb(244,31,53)"/><text x="64.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1092" width="5" height="15" fill="rgb(244,188,40)"/><text x="64.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.48%)</title><rect x="61" y="1108" width="5" height="15" fill="rgb(246,149,49)"/><text x="64.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1124" width="5" height="15" fill="rgb(225,164,6)"/><text x="64.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1140" width="5" height="15" fill="rgb(234,139,25)"/><text x="64.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1156" width="5" height="15" fill="rgb(211,203,46)"/><text x="64.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1172" width="5" height="15" fill="rgb(224,211,21)"/><text x="64.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1188" width="5" height="15" fill="rgb(208,85,6)"/><text x="64.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.48%)</title><rect x="61" y="1204" width="5" height="15" fill="rgb(243,225,30)"/><text x="64.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1220" width="5" height="15" fill="rgb(210,153,22)"/><text x="64.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1236" width="5" height="15" fill="rgb(234,28,34)"/><text x="64.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1252" width="5" height="15" fill="rgb(216,19,5)"/><text x="64.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1268" width="5" height="15" fill="rgb(210,118,17)"/><text x="64.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1284" width="5" height="15" fill="rgb(247,145,30)"/><text x="64.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.48%)</title><rect x="61" y="1300" width="5" height="15" fill="rgb(254,62,52)"/><text x="64.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1316" width="5" height="15" fill="rgb(216,52,26)"/><text x="64.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1332" width="5" height="15" fill="rgb(213,120,54)"/><text x="64.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1348" width="5" height="15" fill="rgb(227,190,50)"/><text x="64.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1364" width="5" height="15" fill="rgb(222,20,30)"/><text x="64.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1380" width="5" height="15" fill="rgb(254,181,27)"/><text x="64.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.48%)</title><rect x="61" y="1396" width="5" height="15" fill="rgb(206,122,5)"/><text x="64.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1412" width="5" height="15" fill="rgb(207,181,13)"/><text x="64.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1428" width="5" height="15" fill="rgb(214,114,46)"/><text x="64.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1444" width="5" height="15" fill="rgb(238,0,39)"/><text x="64.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1460" width="5" height="15" fill="rgb(244,112,54)"/><text x="64.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1476" width="5" height="15" fill="rgb(215,17,53)"/><text x="64.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.48%)</title><rect x="61" y="1492" width="5" height="15" fill="rgb(244,34,40)"/><text x="64.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1508" width="5" height="15" fill="rgb(245,15,44)"/><text x="64.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1524" width="5" height="15" fill="rgb(235,195,10)"/><text x="64.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1540" width="5" height="15" fill="rgb(236,71,37)"/><text x="64.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1556" width="5" height="15" fill="rgb(244,218,27)"/><text x="64.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1572" width="5" height="15" fill="rgb(219,126,37)"/><text x="64.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.48%)</title><rect x="61" y="1588" width="5" height="15" fill="rgb(214,163,54)"/><text x="64.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1604" width="5" height="15" fill="rgb(247,64,3)"/><text x="64.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1620" width="5" height="15" fill="rgb(243,65,18)"/><text x="64.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1636" width="5" height="15" fill="rgb(223,50,54)"/><text x="64.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1652" width="5" height="15" fill="rgb(231,183,8)"/><text x="64.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1668" width="5" height="15" fill="rgb(218,149,6)"/><text x="64.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.48%)</title><rect x="61" y="1684" width="5" height="15" fill="rgb(250,36,35)"/><text x="64.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1700" width="5" height="15" fill="rgb(228,28,19)"/><text x="64.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1716" width="5" height="15" fill="rgb(238,177,21)"/><text x="64.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1732" width="5" height="15" fill="rgb(254,129,4)"/><text x="64.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1748" width="5" height="15" fill="rgb(224,120,50)"/><text x="64.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1764" width="5" height="15" fill="rgb(206,69,21)"/><text x="64.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.48%)</title><rect x="61" y="1780" width="5" height="15" fill="rgb(217,56,5)"/><text x="64.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1796" width="5" height="15" fill="rgb(231,3,36)"/><text x="64.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1812" width="5" height="15" fill="rgb(229,132,5)"/><text x="64.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1828" width="5" height="15" fill="rgb(244,29,29)"/><text x="64.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1844" width="5" height="15" fill="rgb(230,161,52)"/><text x="64.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1860" width="5" height="15" fill="rgb(247,27,30)"/><text x="64.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.48%)</title><rect x="61" y="1876" width="5" height="15" fill="rgb(214,34,44)"/><text x="64.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1892" width="5" height="15" fill="rgb(219,62,45)"/><text x="64.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1908" width="5" height="15" fill="rgb(222,128,52)"/><text x="64.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1924" width="5" height="15" fill="rgb(253,177,24)"/><text x="64.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1940" width="5" height="15" fill="rgb(248,70,45)"/><text x="64.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1956" width="5" height="15" fill="rgb(205,36,0)"/><text x="64.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="61" y="1972" width="5" height="15" fill="rgb(210,38,34)"/><text x="64.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="61" y="1988" width="5" height="15" fill="rgb(234,183,13)"/><text x="64.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.48%)</title><rect x="61" y="2004" width="5" height="15" fill="rgb(248,166,28)"/><text x="64.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.48%)</title><rect x="61" y="2020" width="5" height="15" fill="rgb(229,97,21)"/><text x="64.00" y="2030.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.48%)</title><rect x="61" y="2036" width="5" height="15" fill="rgb(243,198,50)"/><text x="64.00" y="2046.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.48%)</title><rect x="61" y="2052" width="5" height="15" fill="rgb(228,177,50)"/><text x="64.00" y="2062.50"></text></g><g><title>profile_pyrt (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (1 samples, 0.48%)</title><rect x="66" y="68" width="6" height="15" fill="rgb(240,123,27)"/><text x="69.00" y="78.50"></text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (1 samples, 0.48%)</title><rect x="66" y="84" width="6" height="15" fill="rgb(254,159,39)"/><text x="69.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="66" y="100" width="6" height="15" fill="rgb(208,78,18)"/><text x="69.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="66" y="116" width="6" height="15" fill="rgb(240,182,25)"/><text x="69.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="66" y="132" width="6" height="15" fill="rgb(240,93,8)"/><text x="69.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.48%)</title><rect x="66" y="148" width="6" height="15" fill="rgb(208,113,12)"/><text x="69.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.48%)</title><rect x="66" y="164" width="6" height="15" fill="rgb(254,95,31)"/><text x="69.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.48%)</title><rect x="66" y="180" width="6" height="15" fill="rgb(247,184,27)"/><text x="69.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.48%)</title><rect x="66" y="196" width="6" height="15" fill="rgb(219,25,50)"/><text x="69.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="212" width="6" height="15" fill="rgb(222,169,10)"/><text x="69.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="228" width="6" height="15" fill="rgb(213,182,44)"/><text x="69.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="244" width="6" height="15" fill="rgb(250,102,11)"/><text x="69.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="260" width="6" height="15" fill="rgb(223,189,43)"/><text x="69.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="276" width="6" height="15" fill="rgb(214,108,37)"/><text x="69.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.48%)</title><rect x="66" y="292" width="6" height="15" fill="rgb(253,190,8)"/><text x="69.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="308" width="6" height="15" fill="rgb(245,64,34)"/><text x="69.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="324" width="6" height="15" fill="rgb(242,117,18)"/><text x="69.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="340" width="6" height="15" fill="rgb(218,205,10)"/><text x="69.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="356" width="6" height="15" fill="rgb(224,18,22)"/><text x="69.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="372" width="6" height="15" fill="rgb(218,11,14)"/><text x="69.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.48%)</title><rect x="66" y="388" width="6" height="15" fill="rgb(246,186,36)"/><text x="69.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="404" width="6" height="15" fill="rgb(248,98,23)"/><text x="69.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="420" width="6" height="15" fill="rgb(217,162,47)"/><text x="69.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="436" width="6" height="15" fill="rgb(236,55,54)"/><text x="69.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="452" width="6" height="15" fill="rgb(206,153,39)"/><text x="69.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="468" width="6" height="15" fill="rgb(208,104,20)"/><text x="69.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.48%)</title><rect x="66" y="484" width="6" height="15" fill="rgb(253,113,48)"/><text x="69.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.48%)</title><rect x="66" y="500" width="6" height="15" fill="rgb(217,68,38)"/><text x="69.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.48%)</title><rect x="66" y="516" width="6" height="15" fill="rgb(228,37,52)"/><text x="69.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.48%)</title><rect x="66" y="532" width="6" height="15" fill="rgb(234,183,44)"/><text x="69.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.48%)</title><rect x="66" y="548" width="6" height="15" fill="rgb(252,17,16)"/><text x="69.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.48%)</title><rect x="66" y="564" width="6" height="15" fill="rgb(239,46,5)"/><text x="69.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.48%)</title><rect x="66" y="580" width="6" height="15" fill="rgb(240,63,42)"/><text x="69.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.48%)</title><rect x="66" y="596" width="6" height="15" fill="rgb(247,178,0)"/><text x="69.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.48%)</title><rect x="66" y="612" width="6" height="15" fill="rgb(208,111,39)"/><text x="69.00" y="622.50"></text></g><g><title>pull_dependencies (jinja2/compiler.py) (1 samples, 0.48%)</title><rect x="66" y="628" width="6" height="15" fill="rgb(209,35,33)"/><text x="69.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.48%)</title><rect x="66" y="644" width="6" height="15" fill="rgb(232,216,5)"/><text x="69.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.48%)</title><rect x="66" y="660" width="6" height="15" fill="rgb(232,128,30)"/><text x="69.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.48%)</title><rect x="66" y="676" width="6" height="15" fill="rgb(209,96,47)"/><text x="69.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.48%)</title><rect x="66" y="692" width="6" height="15" fill="rgb(210,8,17)"/><text x="69.00" y="702.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.48%)</title><rect x="66" y="708" width="6" height="15" fill="rgb(215,12,32)"/><text x="69.00" y="718.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.48%)</title><rect x="66" y="724" width="6" height="15" fill="rgb(222,174,52)"/><text x="69.00" y="734.50"></text></g><g><title>0x7f611b38946c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.48%)</title><rect x="72" y="196" width="6" height="15" fill="rgb(244,117,4)"/><text x="75.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="72" y="212" width="6" height="15" fill="rgb(241,117,15)"/><text x="75.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.48%)</title><rect x="72" y="228" width="6" height="15" fill="rgb(241,117,19)"/><text x="75.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.48%)</title><rect x="72" y="244" width="6" height="15" fill="rgb(215,171,48)"/><text x="75.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.48%)</title><rect x="72" y="260" width="6" height="15" fill="rgb(207,137,12)"/><text x="75.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.48%)</title><rect x="72" y="276" width="6" height="15" fill="rgb(241,112,0)"/><text x="75.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.48%)</title><rect x="72" y="292" width="6" height="15" fill="rgb(254,89,18)"/><text x="75.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.48%)</title><rect x="72" y="308" width="6" height="15" fill="rgb(236,24,26)"/><text x="75.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="72" y="324" width="6" height="15" fill="rgb(207,29,46)"/><text x="75.00" y="334.50"></text></g><g><title>0x7f614089c2a3 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="72" y="340" width="6" height="15" fill="rgb(244,171,7)"/><text x="75.00" y="350.50"></text></g><g><title>0x7f614089a902 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="293" y="244" width="6" height="15" fill="rgb(247,195,30)"/><text x="296.00" y="254.50"></text></g><g><title>0x7f614089a92c (libc-2.29.so) (2 samples, 0.96%)</title><rect x="299" y="244" width="11" height="15" fill="rgb(228,222,22)"/><text x="302.00" y="254.50"></text></g><g><title>0x7f6140a6cc0c (libm-2.29.so) (1 samples, 0.48%)</title><rect x="322" y="260" width="5" height="15" fill="rgb(227,132,16)"/><text x="325.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (4 samples, 1.92%)</title><rect x="310" y="244" width="23" height="15" fill="rgb(210,9,15)"/><text x="313.00" y="254.50">e..</text></g><g><title>0x7f6140a6cc7f (libm-2.29.so) (1 samples, 0.48%)</title><rect x="327" y="260" width="6" height="15" fill="rgb(245,148,24)"/><text x="330.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.48%)</title><rect x="333" y="244" width="6" height="15" fill="rgb(216,229,23)"/><text x="336.00" y="254.50"></text></g><g><title>0x7f614089bb12 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="361" y="260" width="6" height="15" fill="rgb(226,77,32)"/><text x="364.00" y="270.50"></text></g><g><title>0x7f614089bc04 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="367" y="260" width="6" height="15" fill="rgb(218,15,4)"/><text x="370.00" y="270.50"></text></g><g><title>0x7f614089bc38 (libc-2.29.so) (3 samples, 1.44%)</title><rect x="373" y="260" width="17" height="15" fill="rgb(208,176,21)"/><text x="376.00" y="270.50"></text></g><g><title>0x7f614089bc48 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="390" y="260" width="5" height="15" fill="rgb(228,163,27)"/><text x="393.00" y="270.50"></text></g><g><title>0x7f614089bf0a (libc-2.29.so) (1 samples, 0.48%)</title><rect x="395" y="260" width="6" height="15" fill="rgb(222,164,39)"/><text x="398.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (15 samples, 7.21%)</title><rect x="339" y="244" width="85" height="15" fill="rgb(224,83,46)"/><text x="342.00" y="254.50">malloc (li..</text></g><g><title>0x7f614089c00a (libc-2.29.so) (4 samples, 1.92%)</title><rect x="401" y="260" width="23" height="15" fill="rgb(215,165,50)"/><text x="404.00" y="270.50">0..</text></g><g><title>0x7f611b36c3a0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.48%)</title><rect x="458" y="260" width="5" height="15" fill="rgb(209,140,36)"/><text x="461.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="463" y="260" width="6" height="15" fill="rgb(210,13,29)"/><text x="466.00" y="270.50"></text></g><g><title>0x7f611b36c6b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.96%)</title><rect x="571" y="276" width="11" height="15" fill="rgb(213,56,37)"/><text x="574.00" y="286.50"></text></g><g><title>0x7f611b389553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (188 samples, 90.38%)</title><rect x="78" y="196" width="1066" height="15" fill="rgb(218,195,0)"/><text x="81.00" y="206.50">0x7f611b389553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (188 samples, 90.38%)</title><rect x="78" y="212" width="1066" height="15" fill="rgb(242,37,53)"/><text x="81.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (188 samples, 90.38%)</title><rect x="78" y="228" width="1066" height="15" fill="rgb(208,215,37)"/><text x="81.00" y="238.50">svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (127 samples, 61.06%)</title><rect x="424" y="244" width="720" height="15" fill="rgb(254,208,1)"/><text x="427.00" y="254.50">svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (119 samples, 57.21%)</title><rect x="469" y="260" width="675" height="15" fill="rgb(228,226,32)"/><text x="472.00" y="270.50">svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (99 samples, 47.60%)</title><rect x="582" y="276" width="562" height="15" fill="rgb(214,6,33)"/><text x="585.00" y="286.50">svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (190 samples, 91.35%)</title><rect x="72" y="164" width="1078" height="15" fill="rgb(212,172,27)"/><text x="75.00" y="174.50">_dense_predict_proba (sklearn/svm/_base.py)</text></g><g><title>0x7f611b38b3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (190 samples, 91.35%)</title><rect x="72" y="180" width="1078" height="15" fill="rgb(217,191,2)"/><text x="75.00" y="190.50">0x7f611b38b3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>0x7f611b38ad06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.48%)</title><rect x="1144" y="196" width="6" height="15" fill="rgb(240,113,24)"/><text x="1147.00" y="206.50"></text></g><g><title>0x7f611b3725ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.48%)</title><rect x="1144" y="212" width="6" height="15" fill="rgb(242,192,29)"/><text x="1147.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.48%)</title><rect x="1144" y="228" width="6" height="15" fill="rgb(243,87,19)"/><text x="1147.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.48%)</title><rect x="1144" y="244" width="6" height="15" fill="rgb(249,69,31)"/><text x="1147.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.48%)</title><rect x="1155" y="196" width="6" height="15" fill="rgb(247,149,47)"/><text x="1158.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 1.44%)</title><rect x="1150" y="180" width="17" height="15" fill="rgb(253,130,37)"/><text x="1153.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="1161" y="196" width="6" height="15" fill="rgb(230,14,39)"/><text x="1164.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="1161" y="212" width="6" height="15" fill="rgb(209,26,13)"/><text x="1164.00" y="222.50"></text></g><g><title>profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (194 samples, 93.27%)</title><rect x="72" y="68" width="1100" height="15" fill="rgb(247,70,31)"/><text x="75.00" y="78.50">profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (194 samples, 93.27%)</title><rect x="72" y="84" width="1100" height="15" fill="rgb(208,178,14)"/><text x="75.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py)</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (194 samples, 93.27%)</title><rect x="72" y="100" width="1100" height="15" fill="rgb(247,63,53)"/><text x="75.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 93.27%)</title><rect x="72" y="116" width="1100" height="15" fill="rgb(244,138,13)"/><text x="75.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 93.27%)</title><rect x="72" y="132" width="1100" height="15" fill="rgb(205,221,41)"/><text x="75.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (194 samples, 93.27%)</title><rect x="72" y="148" width="1100" height="15" fill="rgb(222,203,18)"/><text x="75.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (4 samples, 1.92%)</title><rect x="1150" y="164" width="22" height="15" fill="rgb(216,54,50)"/><text x="1153.00" y="174.50">_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="1167" y="180" width="5" height="15" fill="rgb(216,46,42)"/><text x="1170.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="1167" y="196" width="5" height="15" fill="rgb(212,128,33)"/><text x="1170.00" y="206.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="1172" y="116" width="6" height="15" fill="rgb(226,71,28)"/><text x="1175.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.48%)</title><rect x="1172" y="132" width="6" height="15" fill="rgb(250,21,37)"/><text x="1175.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py) (1 samples, 0.48%)</title><rect x="1172" y="148" width="6" height="15" fill="rgb(230,104,6)"/><text x="1175.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.48%)</title><rect x="1172" y="164" width="6" height="15" fill="rgb(231,55,11)"/><text x="1175.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="1172" y="180" width="6" height="15" fill="rgb(254,167,26)"/><text x="1175.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.48%)</title><rect x="1172" y="196" width="6" height="15" fill="rgb(205,186,36)"/><text x="1175.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.48%)</title><rect x="1172" y="212" width="6" height="15" fill="rgb(212,190,30)"/><text x="1175.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.48%)</title><rect x="1172" y="228" width="6" height="15" fill="rgb(217,130,18)"/><text x="1175.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.48%)</title><rect x="1172" y="244" width="6" height="15" fill="rgb(218,146,45)"/><text x="1175.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.48%)</title><rect x="1172" y="260" width="6" height="15" fill="rgb(221,17,13)"/><text x="1175.00" y="270.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.48%)</title><rect x="1172" y="276" width="6" height="15" fill="rgb(231,213,34)"/><text x="1175.00" y="286.50"></text></g><g><title>all (208 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,163,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (208 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(241,139,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py)</text></g><g><title>start (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_50_12_float_.py) (3 samples, 1.44%)</title><rect x="1172" y="68" width="18" height="15" fill="rgb(232,122,31)"/><text x="1175.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py) (3 samples, 1.44%)</title><rect x="1172" y="84" width="18" height="15" fill="rgb(246,1,30)"/><text x="1175.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.44%)</title><rect x="1172" y="100" width="18" height="15" fill="rgb(245,57,21)"/><text x="1175.00" y="110.50"></text></g><g><title>fit (sklearn/svm/_base.py) (2 samples, 0.96%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(206,27,54)"/><text x="1181.00" y="126.50"></text></g><g><title>_validate_targets (sklearn/svm/_base.py) (2 samples, 0.96%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(215,191,50)"/><text x="1181.00" y="142.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (2 samples, 0.96%)</title><rect x="1178" y="148" width="12" height="15" fill="rgb(236,224,1)"/><text x="1181.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.96%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(237,86,45)"/><text x="1181.00" y="174.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (2 samples, 0.96%)</title><rect x="1178" y="180" width="12" height="15" fill="rgb(223,28,51)"/><text x="1181.00" y="190.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (2 samples, 0.96%)</title><rect x="1178" y="196" width="12" height="15" fill="rgb(211,178,2)"/><text x="1181.00" y="206.50"></text></g></g></svg>