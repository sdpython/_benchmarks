<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1862" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1845.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1845.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.10%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(208,47,26)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.10%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(242,46,19)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.10%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(251,117,12)"/><text x="13.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:18) (2 samples, 0.20%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(241,210,24)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.20%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(251,117,16)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.20%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(237,160,30)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.20%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(251,49,5)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.10%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(230,190,50)"/><text x="14.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(234,111,51)"/><text x="14.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(240,103,51)"/><text x="14.00" y="206.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.10%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(228,38,48)"/><text x="14.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.10%)</title><rect x="17" y="164" width="1" height="15" fill="rgb(245,197,22)"/><text x="20.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.20%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(248,94,30)"/><text x="21.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.10%)</title><rect x="19" y="180" width="1" height="15" fill="rgb(224,75,7)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.10%)</title><rect x="21" y="180" width="2" height="15" fill="rgb(206,198,27)"/><text x="24.00" y="190.50"></text></g><g><title>0x7f723c64412f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="25" y="196" width="1" height="15" fill="rgb(237,143,21)"/><text x="28.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.40%)</title><rect x="26" y="196" width="5" height="15" fill="rgb(253,46,7)"/><text x="29.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 0.80%)</title><rect x="23" y="180" width="9" height="15" fill="rgb(211,193,0)"/><text x="26.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="31" y="196" width="1" height="15" fill="rgb(224,12,27)"/><text x="34.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (14 samples, 1.41%)</title><rect x="17" y="148" width="16" height="15" fill="rgb(224,141,11)"/><text x="20.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 1.11%)</title><rect x="20" y="164" width="13" height="15" fill="rgb(219,6,5)"/><text x="23.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.10%)</title><rect x="32" y="180" width="1" height="15" fill="rgb(231,157,26)"/><text x="35.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="32" y="196" width="1" height="15" fill="rgb(240,188,8)"/><text x="35.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.10%)</title><rect x="33" y="148" width="1" height="15" fill="rgb(236,130,1)"/><text x="36.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.10%)</title><rect x="38" y="196" width="1" height="15" fill="rgb(226,18,45)"/><text x="41.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.10%)</title><rect x="38" y="212" width="1" height="15" fill="rgb(215,229,50)"/><text x="41.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.30%)</title><rect x="42" y="228" width="3" height="15" fill="rgb(232,101,14)"/><text x="45.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.60%)</title><rect x="40" y="212" width="7" height="15" fill="rgb(217,112,16)"/><text x="43.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.20%)</title><rect x="45" y="228" width="2" height="15" fill="rgb(210,101,46)"/><text x="48.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 1.01%)</title><rect x="39" y="196" width="12" height="15" fill="rgb(207,213,21)"/><text x="42.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.30%)</title><rect x="47" y="212" width="4" height="15" fill="rgb(234,6,12)"/><text x="50.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="50" y="228" width="1" height="15" fill="rgb(222,136,17)"/><text x="53.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (12 samples, 1.21%)</title><rect x="38" y="180" width="14" height="15" fill="rgb(237,172,41)"/><text x="41.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.10%)</title><rect x="51" y="196" width="1" height="15" fill="rgb(215,131,45)"/><text x="54.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.20%)</title><rect x="52" y="196" width="3" height="15" fill="rgb(251,179,30)"/><text x="55.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.10%)</title><rect x="53" y="212" width="2" height="15" fill="rgb(243,113,33)"/><text x="56.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.10%)</title><rect x="56" y="212" width="1" height="15" fill="rgb(228,146,12)"/><text x="59.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.10%)</title><rect x="57" y="212" width="1" height="15" fill="rgb(234,170,32)"/><text x="60.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.40%)</title><rect x="55" y="196" width="4" height="15" fill="rgb(243,29,8)"/><text x="58.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.10%)</title><rect x="58" y="212" width="1" height="15" fill="rgb(221,183,54)"/><text x="61.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.20%)</title><rect x="59" y="196" width="3" height="15" fill="rgb(229,88,32)"/><text x="62.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.20%)</title><rect x="59" y="212" width="3" height="15" fill="rgb(213,136,18)"/><text x="62.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.20%)</title><rect x="59" y="228" width="3" height="15" fill="rgb(224,23,40)"/><text x="62.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.30%)</title><rect x="62" y="196" width="3" height="15" fill="rgb(211,175,50)"/><text x="65.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.20%)</title><rect x="63" y="212" width="2" height="15" fill="rgb(211,131,11)"/><text x="66.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="65" y="196" width="1" height="15" fill="rgb(206,48,26)"/><text x="68.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.10%)</title><rect x="66" y="196" width="2" height="15" fill="rgb(253,87,9)"/><text x="69.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.10%)</title><rect x="68" y="196" width="1" height="15" fill="rgb(234,99,32)"/><text x="71.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="72" y="228" width="2" height="15" fill="rgb(210,218,10)"/><text x="75.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.40%)</title><rect x="70" y="212" width="5" height="15" fill="rgb(208,2,47)"/><text x="73.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="74" y="228" width="1" height="15" fill="rgb(246,27,9)"/><text x="77.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 0.60%)</title><rect x="69" y="196" width="7" height="15" fill="rgb(221,188,19)"/><text x="72.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="75" y="212" width="1" height="15" fill="rgb(237,96,39)"/><text x="78.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.10%)</title><rect x="75" y="228" width="1" height="15" fill="rgb(232,27,1)"/><text x="78.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.10%)</title><rect x="77" y="212" width="1" height="15" fill="rgb(254,101,33)"/><text x="80.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.10%)</title><rect x="78" y="212" width="2" height="15" fill="rgb(208,11,10)"/><text x="81.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (26 samples, 2.62%)</title><rect x="52" y="180" width="31" height="15" fill="rgb(215,195,46)"/><text x="55.00" y="190.50">de..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.60%)</title><rect x="76" y="196" width="7" height="15" fill="rgb(249,38,48)"/><text x="79.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.30%)</title><rect x="80" y="212" width="3" height="15" fill="rgb(207,221,9)"/><text x="83.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.20%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(246,164,6)"/><text x="84.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.10%)</title><rect x="83" y="180" width="1" height="15" fill="rgb(225,192,54)"/><text x="86.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.10%)</title><rect x="83" y="196" width="1" height="15" fill="rgb(206,149,33)"/><text x="86.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="85" y="228" width="2" height="15" fill="rgb(216,75,42)"/><text x="88.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.10%)</title><rect x="85" y="244" width="2" height="15" fill="rgb(242,113,3)"/><text x="88.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="87" y="228" width="1" height="15" fill="rgb(245,3,39)"/><text x="90.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.10%)</title><rect x="87" y="244" width="1" height="15" fill="rgb(209,223,8)"/><text x="90.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="88" y="260" width="1" height="15" fill="rgb(234,85,19)"/><text x="91.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:196) (1 samples, 0.10%)</title><rect x="88" y="276" width="1" height="15" fill="rgb(233,154,20)"/><text x="91.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.10%)</title><rect x="89" y="292" width="1" height="15" fill="rgb(213,65,12)"/><text x="92.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.20%)</title><rect x="90" y="308" width="3" height="15" fill="rgb(244,187,15)"/><text x="93.00" y="318.50"></text></g><g><title>0x7f723c643d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="93" y="324" width="1" height="15" fill="rgb(232,95,1)"/><text x="96.00" y="334.50"></text></g><g><title>0x7f723c643d5f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="94" y="324" width="1" height="15" fill="rgb(253,154,51)"/><text x="97.00" y="334.50"></text></g><g><title>0x7f723c643d62 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="95" y="324" width="1" height="15" fill="rgb(251,96,14)"/><text x="98.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.01%)</title><rect x="85" y="212" width="12" height="15" fill="rgb(209,44,43)"/><text x="88.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.80%)</title><rect x="88" y="228" width="9" height="15" fill="rgb(211,202,15)"/><text x="91.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.80%)</title><rect x="88" y="244" width="9" height="15" fill="rgb(239,185,1)"/><text x="91.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.70%)</title><rect x="89" y="260" width="8" height="15" fill="rgb(219,209,28)"/><text x="92.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.70%)</title><rect x="89" y="276" width="8" height="15" fill="rgb(238,194,6)"/><text x="92.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.60%)</title><rect x="90" y="292" width="7" height="15" fill="rgb(237,22,8)"/><text x="93.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.40%)</title><rect x="93" y="308" width="4" height="15" fill="rgb(214,141,16)"/><text x="96.00" y="318.50"></text></g><g><title>0x7f723c643d6f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="96" y="324" width="1" height="15" fill="rgb(215,173,42)"/><text x="99.00" y="334.50"></text></g><g><title>array_add (number.c:330) (12 samples, 1.21%)</title><rect x="84" y="196" width="15" height="15" fill="rgb(253,176,38)"/><text x="87.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.10%)</title><rect x="97" y="212" width="2" height="15" fill="rgb(217,179,12)"/><text x="100.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.40%)</title><rect x="99" y="212" width="4" height="15" fill="rgb(212,111,26)"/><text x="102.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.60%)</title><rect x="103" y="212" width="7" height="15" fill="rgb(251,5,46)"/><text x="106.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.10%)</title><rect x="110" y="244" width="2" height="15" fill="rgb(234,201,32)"/><text x="113.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:502) (1 samples, 0.10%)</title><rect x="110" y="260" width="2" height="15" fill="rgb(251,92,6)"/><text x="113.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2811) (1 samples, 0.10%)</title><rect x="112" y="244" width="1" height="15" fill="rgb(227,34,29)"/><text x="115.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.10%)</title><rect x="112" y="260" width="1" height="15" fill="rgb(206,208,41)"/><text x="115.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="113" y="260" width="1" height="15" fill="rgb(242,106,54)"/><text x="116.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.10%)</title><rect x="113" y="276" width="1" height="15" fill="rgb(206,167,15)"/><text x="116.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:924) (1 samples, 0.10%)</title><rect x="113" y="292" width="1" height="15" fill="rgb(230,170,11)"/><text x="116.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.10%)</title><rect x="114" y="260" width="1" height="15" fill="rgb(210,60,12)"/><text x="117.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.10%)</title><rect x="114" y="276" width="1" height="15" fill="rgb(254,91,20)"/><text x="117.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1486) (1 samples, 0.10%)</title><rect x="114" y="292" width="1" height="15" fill="rgb(211,66,5)"/><text x="117.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.20%)</title><rect x="115" y="308" width="3" height="15" fill="rgb(216,51,38)"/><text x="118.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.20%)</title><rect x="115" y="324" width="3" height="15" fill="rgb(238,223,12)"/><text x="118.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.30%)</title><rect x="115" y="260" width="4" height="15" fill="rgb(233,109,19)"/><text x="118.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.30%)</title><rect x="115" y="276" width="4" height="15" fill="rgb(250,175,18)"/><text x="118.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.30%)</title><rect x="115" y="292" width="4" height="15" fill="rgb(208,218,38)"/><text x="118.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.10%)</title><rect x="118" y="308" width="1" height="15" fill="rgb(205,227,23)"/><text x="121.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.10%)</title><rect x="118" y="324" width="1" height="15" fill="rgb(223,80,12)"/><text x="121.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.10%)</title><rect x="118" y="340" width="1" height="15" fill="rgb(217,68,9)"/><text x="121.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 0.60%)</title><rect x="113" y="244" width="7" height="15" fill="rgb(253,21,29)"/><text x="116.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:451) (1 samples, 0.10%)</title><rect x="119" y="260" width="1" height="15" fill="rgb(226,159,45)"/><text x="122.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.10%)</title><rect x="120" y="244" width="1" height="15" fill="rgb(215,226,41)"/><text x="123.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:115) (1 samples, 0.10%)</title><rect x="120" y="260" width="1" height="15" fill="rgb(224,221,19)"/><text x="123.00" y="270.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:114) (1 samples, 0.10%)</title><rect x="121" y="276" width="1" height="15" fill="rgb(208,172,24)"/><text x="124.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.30%)</title><rect x="121" y="244" width="4" height="15" fill="rgb(211,144,23)"/><text x="124.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (3 samples, 0.30%)</title><rect x="121" y="260" width="4" height="15" fill="rgb(240,209,6)"/><text x="124.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.20%)</title><rect x="122" y="276" width="3" height="15" fill="rgb(247,123,45)"/><text x="125.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.31%)</title><rect x="110" y="212" width="16" height="15" fill="rgb(205,193,33)"/><text x="113.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 1.31%)</title><rect x="110" y="228" width="16" height="15" fill="rgb(251,180,31)"/><text x="113.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.10%)</title><rect x="125" y="244" width="1" height="15" fill="rgb(208,86,38)"/><text x="128.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="125" y="260" width="1" height="15" fill="rgb(240,102,30)"/><text x="128.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (24 samples, 2.41%)</title><rect x="99" y="196" width="28" height="15" fill="rgb(244,229,46)"/><text x="102.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.10%)</title><rect x="126" y="212" width="1" height="15" fill="rgb(236,138,33)"/><text x="129.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:440) (1 samples, 0.10%)</title><rect x="126" y="228" width="1" height="15" fill="rgb(252,216,54)"/><text x="129.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (38 samples, 3.82%)</title><rect x="84" y="180" width="45" height="15" fill="rgb(210,80,28)"/><text x="87.00" y="190.50">deci..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.20%)</title><rect x="127" y="196" width="2" height="15" fill="rgb(226,66,53)"/><text x="130.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.20%)</title><rect x="127" y="212" width="2" height="15" fill="rgb(213,42,12)"/><text x="130.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (78 samples, 7.85%)</title><rect x="38" y="164" width="93" height="15" fill="rgb(217,56,54)"/><text x="41.00" y="174.50">_predict_pr..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.10%)</title><rect x="129" y="180" width="2" height="15" fill="rgb(229,145,39)"/><text x="132.00" y="190.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.10%)</title><rect x="129" y="196" width="2" height="15" fill="rgb(216,190,49)"/><text x="132.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="132" y="180" width="1" height="15" fill="rgb(213,146,23)"/><text x="135.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="132" y="196" width="1" height="15" fill="rgb(248,72,21)"/><text x="135.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="132" y="212" width="1" height="15" fill="rgb(238,177,50)"/><text x="135.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="132" y="228" width="1" height="15" fill="rgb(230,0,15)"/><text x="135.00" y="238.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:907) (1 samples, 0.10%)</title><rect x="133" y="228" width="1" height="15" fill="rgb(205,170,14)"/><text x="136.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.20%)</title><rect x="133" y="196" width="2" height="15" fill="rgb(232,221,49)"/><text x="136.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (2 samples, 0.20%)</title><rect x="133" y="212" width="2" height="15" fill="rgb(212,125,23)"/><text x="136.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.10%)</title><rect x="134" y="228" width="1" height="15" fill="rgb(238,38,4)"/><text x="137.00" y="238.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.10%)</title><rect x="134" y="244" width="1" height="15" fill="rgb(211,91,25)"/><text x="137.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="135" y="196" width="2" height="15" fill="rgb(225,180,39)"/><text x="138.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="135" y="212" width="2" height="15" fill="rgb(205,130,30)"/><text x="138.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.10%)</title><rect x="135" y="228" width="2" height="15" fill="rgb(226,124,54)"/><text x="138.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.10%)</title><rect x="135" y="244" width="2" height="15" fill="rgb(224,170,4)"/><text x="138.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.10%)</title><rect x="135" y="260" width="2" height="15" fill="rgb(224,214,12)"/><text x="138.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.10%)</title><rect x="135" y="276" width="2" height="15" fill="rgb(242,172,1)"/><text x="138.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1480) (1 samples, 0.10%)</title><rect x="135" y="292" width="2" height="15" fill="rgb(239,37,32)"/><text x="138.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.10%)</title><rect x="137" y="212" width="1" height="15" fill="rgb(217,143,21)"/><text x="140.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="137" y="228" width="1" height="15" fill="rgb(238,157,23)"/><text x="140.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.10%)</title><rect x="137" y="244" width="1" height="15" fill="rgb(242,40,28)"/><text x="140.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:561) (1 samples, 0.10%)</title><rect x="137" y="260" width="1" height="15" fill="rgb(214,157,39)"/><text x="140.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="137" y="276" width="1" height="15" fill="rgb(239,90,2)"/><text x="140.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.10%)</title><rect x="138" y="228" width="1" height="15" fill="rgb(238,125,4)"/><text x="141.00" y="238.50"></text></g><g><title>0x7f721ea299da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="139" y="244" width="2" height="15" fill="rgb(220,180,23)"/><text x="142.00" y="254.50"></text></g><g><title>0x7f721ea4a254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="141" y="260" width="1" height="15" fill="rgb(221,160,30)"/><text x="144.00" y="270.50"></text></g><g><title>0x7f721ea4a25c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="142" y="260" width="2" height="15" fill="rgb(235,195,53)"/><text x="145.00" y="270.50"></text></g><g><title>0x7f721ea07fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="145" y="276" width="1" height="15" fill="rgb(244,49,6)"/><text x="148.00" y="286.50"></text></g><g><title>0x7f723c76f1b0 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(228,141,29)"/><text x="151.00" y="302.50"></text></g><g><title>0x7f723c7f5bb4 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="150" y="292" width="3" height="15" fill="rgb(229,54,43)"/><text x="153.00" y="302.50"></text></g><g><title>0x7f723c7f5bd3 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="153" y="292" width="4" height="15" fill="rgb(236,80,8)"/><text x="156.00" y="302.50"></text></g><g><title>0x7f723c7f5be7 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="157" y="292" width="1" height="15" fill="rgb(223,17,39)"/><text x="160.00" y="302.50"></text></g><g><title>0x7f723c7f5bf9 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="158" y="292" width="1" height="15" fill="rgb(208,112,54)"/><text x="161.00" y="302.50"></text></g><g><title>0x7f723c7f5c07 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="159" y="292" width="1" height="15" fill="rgb(212,46,34)"/><text x="162.00" y="302.50"></text></g><g><title>0x7f723c7f5c18 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="160" y="292" width="1" height="15" fill="rgb(217,111,26)"/><text x="163.00" y="302.50"></text></g><g><title>0x7f723c7f5c3e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="161" y="292" width="2" height="15" fill="rgb(209,7,46)"/><text x="164.00" y="302.50"></text></g><g><title>0x7f723c7f5c56 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="163" y="292" width="2" height="15" fill="rgb(206,80,32)"/><text x="166.00" y="302.50"></text></g><g><title>0x7f723c7f5c6a (libm-2.29.so) (2 samples, 0.20%)</title><rect x="165" y="292" width="2" height="15" fill="rgb(211,149,25)"/><text x="168.00" y="302.50"></text></g><g><title>0x7f721ea4a265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 2.41%)</title><rect x="144" y="260" width="28" height="15" fill="rgb(232,92,24)"/><text x="147.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (22 samples, 2.21%)</title><rect x="146" y="276" width="26" height="15" fill="rgb(218,50,7)"/><text x="149.00" y="286.50">e..</text></g><g><title>0x7f723c7f5c7b (libm-2.29.so) (4 samples, 0.40%)</title><rect x="167" y="292" width="5" height="15" fill="rgb(232,227,19)"/><text x="170.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (51 samples, 5.13%)</title><rect x="131" y="164" width="60" height="15" fill="rgb(252,67,34)"/><text x="134.00" y="174.50">_predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (49 samples, 4.93%)</title><rect x="133" y="180" width="58" height="15" fill="rgb(231,106,13)"/><text x="136.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (46 samples, 4.63%)</title><rect x="137" y="196" width="54" height="15" fill="rgb(220,86,14)"/><text x="140.00" y="206.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (45 samples, 4.53%)</title><rect x="138" y="212" width="53" height="15" fill="rgb(232,209,50)"/><text x="141.00" y="222.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (44 samples, 4.43%)</title><rect x="139" y="228" width="52" height="15" fill="rgb(233,23,54)"/><text x="142.00" y="238.50">trivi..</text></g><g><title>0x7f721ea299dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (42 samples, 4.23%)</title><rect x="141" y="244" width="50" height="15" fill="rgb(225,3,43)"/><text x="144.00" y="254.50">0x7f7..</text></g><g><title>0x7f721ea4a279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.61%)</title><rect x="172" y="260" width="19" height="15" fill="rgb(221,47,17)"/><text x="175.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.10%)</title><rect x="194" y="196" width="1" height="15" fill="rgb(227,138,22)"/><text x="197.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.10%)</title><rect x="194" y="212" width="1" height="15" fill="rgb(210,202,42)"/><text x="197.00" y="222.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.10%)</title><rect x="194" y="228" width="1" height="15" fill="rgb(214,218,17)"/><text x="197.00" y="238.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.20%)</title><rect x="194" y="180" width="2" height="15" fill="rgb(209,220,12)"/><text x="197.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="195" y="196" width="1" height="15" fill="rgb(206,190,21)"/><text x="198.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.10%)</title><rect x="195" y="212" width="1" height="15" fill="rgb(240,215,14)"/><text x="198.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="197" y="228" width="1" height="15" fill="rgb(212,73,10)"/><text x="200.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="197" y="244" width="1" height="15" fill="rgb(219,213,23)"/><text x="200.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="197" y="260" width="1" height="15" fill="rgb(218,35,12)"/><text x="200.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="197" y="276" width="1" height="15" fill="rgb(227,85,41)"/><text x="200.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="197" y="292" width="1" height="15" fill="rgb(232,126,14)"/><text x="200.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="197" y="308" width="1" height="15" fill="rgb(224,76,22)"/><text x="200.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="198" y="244" width="1" height="15" fill="rgb(236,190,52)"/><text x="201.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4528) (1 samples, 0.10%)</title><rect x="199" y="244" width="2" height="15" fill="rgb(215,112,22)"/><text x="202.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="201" y="260" width="1" height="15" fill="rgb(222,1,51)"/><text x="204.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="201" y="276" width="1" height="15" fill="rgb(206,165,17)"/><text x="204.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="201" y="292" width="1" height="15" fill="rgb(225,227,49)"/><text x="204.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.10%)</title><rect x="201" y="308" width="1" height="15" fill="rgb(245,11,10)"/><text x="204.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="202" y="276" width="1" height="15" fill="rgb(251,168,5)"/><text x="205.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="202" y="292" width="1" height="15" fill="rgb(235,2,19)"/><text x="205.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="202" y="308" width="1" height="15" fill="rgb(229,221,53)"/><text x="205.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="202" y="324" width="1" height="15" fill="rgb(244,15,10)"/><text x="205.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.10%)</title><rect x="202" y="340" width="1" height="15" fill="rgb(217,182,14)"/><text x="205.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="203" y="276" width="1" height="15" fill="rgb(213,168,5)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="203" y="292" width="1" height="15" fill="rgb(224,148,38)"/><text x="206.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="203" y="308" width="1" height="15" fill="rgb(223,62,14)"/><text x="206.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.10%)</title><rect x="203" y="324" width="1" height="15" fill="rgb(228,104,49)"/><text x="206.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.10%)</title><rect x="204" y="276" width="1" height="15" fill="rgb(208,66,45)"/><text x="207.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="204" y="292" width="1" height="15" fill="rgb(227,181,40)"/><text x="207.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1218) (1 samples, 0.10%)</title><rect x="204" y="308" width="1" height="15" fill="rgb(236,122,42)"/><text x="207.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.10%)</title><rect x="205" y="292" width="2" height="15" fill="rgb(217,104,8)"/><text x="208.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.10%)</title><rect x="207" y="292" width="1" height="15" fill="rgb(237,5,42)"/><text x="210.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (2 samples, 0.20%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(232,58,18)"/><text x="211.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (2 samples, 0.20%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(237,166,1)"/><text x="213.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="212" y="292" width="2" height="15" fill="rgb(230,204,40)"/><text x="215.00" y="302.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.40%)</title><rect x="214" y="324" width="4" height="15" fill="rgb(236,86,16)"/><text x="217.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.10%)</title><rect x="218" y="324" width="2" height="15" fill="rgb(223,209,31)"/><text x="221.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.60%)</title><rect x="214" y="308" width="7" height="15" fill="rgb(238,71,10)"/><text x="217.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.10%)</title><rect x="220" y="324" width="1" height="15" fill="rgb(234,137,37)"/><text x="223.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="221" y="308" width="1" height="15" fill="rgb(246,71,1)"/><text x="224.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.10%)</title><rect x="222" y="308" width="1" height="15" fill="rgb(221,26,4)"/><text x="225.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.20%)</title><rect x="223" y="308" width="3" height="15" fill="rgb(207,153,46)"/><text x="226.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="226" y="308" width="1" height="15" fill="rgb(233,70,18)"/><text x="229.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (2 samples, 0.20%)</title><rect x="227" y="308" width="2" height="15" fill="rgb(237,154,29)"/><text x="230.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (14 samples, 1.41%)</title><rect x="214" y="292" width="16" height="15" fill="rgb(205,132,36)"/><text x="217.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.10%)</title><rect x="229" y="308" width="1" height="15" fill="rgb(225,32,23)"/><text x="232.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="230" y="308" width="1" height="15" fill="rgb(225,157,5)"/><text x="233.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (23 samples, 2.31%)</title><rect x="205" y="276" width="28" height="15" fill="rgb(237,80,14)"/><text x="208.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (2 samples, 0.20%)</title><rect x="230" y="292" width="3" height="15" fill="rgb(246,133,34)"/><text x="233.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="231" y="308" width="2" height="15" fill="rgb(209,40,46)"/><text x="234.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (28 samples, 2.82%)</title><rect x="201" y="244" width="33" height="15" fill="rgb(220,210,35)"/><text x="204.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (27 samples, 2.72%)</title><rect x="202" y="260" width="32" height="15" fill="rgb(251,202,43)"/><text x="205.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.10%)</title><rect x="233" y="276" width="1" height="15" fill="rgb(238,171,32)"/><text x="236.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.10%)</title><rect x="233" y="292" width="1" height="15" fill="rgb(238,161,46)"/><text x="236.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (33 samples, 3.32%)</title><rect x="196" y="180" width="39" height="15" fill="rgb(217,226,4)"/><text x="199.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (33 samples, 3.32%)</title><rect x="196" y="196" width="39" height="15" fill="rgb(226,168,16)"/><text x="199.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (33 samples, 3.32%)</title><rect x="196" y="212" width="39" height="15" fill="rgb(221,145,32)"/><text x="199.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (31 samples, 3.12%)</title><rect x="198" y="228" width="37" height="15" fill="rgb(240,42,41)"/><text x="201.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4702) (1 samples, 0.10%)</title><rect x="234" y="244" width="1" height="15" fill="rgb(226,97,0)"/><text x="237.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="235" y="196" width="1" height="15" fill="rgb(223,30,53)"/><text x="238.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.10%)</title><rect x="235" y="212" width="1" height="15" fill="rgb(231,117,46)"/><text x="238.00" y="222.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.10%)</title><rect x="235" y="228" width="1" height="15" fill="rgb(221,131,12)"/><text x="238.00" y="238.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:692) (1 samples, 0.10%)</title><rect x="235" y="244" width="1" height="15" fill="rgb(219,197,35)"/><text x="238.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="236" y="196" width="1" height="15" fill="rgb(213,24,11)"/><text x="239.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.10%)</title><rect x="236" y="212" width="1" height="15" fill="rgb(252,196,7)"/><text x="239.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.10%)</title><rect x="237" y="228" width="2" height="15" fill="rgb(226,22,25)"/><text x="240.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.10%)</title><rect x="239" y="244" width="1" height="15" fill="rgb(239,189,45)"/><text x="242.00" y="254.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.10%)</title><rect x="239" y="260" width="1" height="15" fill="rgb(219,137,40)"/><text x="242.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.10%)</title><rect x="239" y="276" width="1" height="15" fill="rgb(228,202,14)"/><text x="242.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="240" y="244" width="1" height="15" fill="rgb(252,142,34)"/><text x="243.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.10%)</title><rect x="240" y="260" width="1" height="15" fill="rgb(252,222,30)"/><text x="243.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.10%)</title><rect x="240" y="276" width="1" height="15" fill="rgb(244,114,7)"/><text x="243.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.10%)</title><rect x="240" y="292" width="1" height="15" fill="rgb(253,1,12)"/><text x="243.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.30%)</title><rect x="239" y="228" width="3" height="15" fill="rgb(230,193,11)"/><text x="242.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="241" y="244" width="1" height="15" fill="rgb(248,91,35)"/><text x="244.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1612) (1 samples, 0.10%)</title><rect x="241" y="260" width="1" height="15" fill="rgb(239,116,25)"/><text x="244.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.10%)</title><rect x="242" y="260" width="1" height="15" fill="rgb(233,207,41)"/><text x="245.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.20%)</title><rect x="243" y="276" width="3" height="15" fill="rgb(207,96,22)"/><text x="246.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (2 samples, 0.20%)</title><rect x="246" y="292" width="2" height="15" fill="rgb(236,77,30)"/><text x="249.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.70%)</title><rect x="242" y="228" width="8" height="15" fill="rgb(250,40,12)"/><text x="245.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.70%)</title><rect x="242" y="244" width="8" height="15" fill="rgb(235,176,28)"/><text x="245.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.60%)</title><rect x="243" y="260" width="7" height="15" fill="rgb(252,167,6)"/><text x="246.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.40%)</title><rect x="246" y="276" width="4" height="15" fill="rgb(209,147,25)"/><text x="249.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.20%)</title><rect x="248" y="292" width="2" height="15" fill="rgb(211,75,44)"/><text x="251.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="250" y="276" width="2" height="15" fill="rgb(253,102,42)"/><text x="253.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.10%)</title><rect x="250" y="292" width="2" height="15" fill="rgb(251,4,16)"/><text x="253.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (8 samples, 0.80%)</title><rect x="250" y="244" width="10" height="15" fill="rgb(212,5,18)"/><text x="253.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (8 samples, 0.80%)</title><rect x="250" y="260" width="10" height="15" fill="rgb(252,170,39)"/><text x="253.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 0.70%)</title><rect x="252" y="276" width="8" height="15" fill="rgb(235,34,40)"/><text x="255.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 0.70%)</title><rect x="252" y="292" width="8" height="15" fill="rgb(212,64,52)"/><text x="255.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.10%)</title><rect x="260" y="244" width="1" height="15" fill="rgb(218,124,1)"/><text x="263.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:38) (213 samples, 21.43%)</title><rect x="10" y="52" width="252" height="15" fill="rgb(249,71,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegressio..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:37) (213 samples, 21.43%)</title><rect x="10" y="68" width="252" height="15" fill="rgb(219,94,8)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (213 samples, 21.43%)</title><rect x="10" y="84" width="252" height="15" fill="rgb(210,196,16)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegr..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (211 samples, 21.23%)</title><rect x="12" y="100" width="250" height="15" fill="rgb(214,58,20)"/><text x="15.00" y="110.50">profile (bench_LogisticRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (210 samples, 21.13%)</title><rect x="13" y="116" width="249" height="15" fill="rgb(212,149,43)"/><text x="16.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (207 samples, 20.82%)</title><rect x="17" y="132" width="245" height="15" fill="rgb(217,26,48)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (192 samples, 19.32%)</title><rect x="34" y="148" width="228" height="15" fill="rgb(251,60,22)"/><text x="37.00" y="158.50">predict_proba (sklearn/linear_..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (60 samples, 6.04%)</title><rect x="191" y="164" width="71" height="15" fill="rgb(222,63,8)"/><text x="194.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 2.31%)</title><rect x="235" y="180" width="27" height="15" fill="rgb(231,117,24)"/><text x="238.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 2.11%)</title><rect x="237" y="196" width="25" height="15" fill="rgb(246,10,14)"/><text x="240.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (21 samples, 2.11%)</title><rect x="237" y="212" width="25" height="15" fill="rgb(240,100,41)"/><text x="240.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (10 samples, 1.01%)</title><rect x="250" y="228" width="12" height="15" fill="rgb(216,123,9)"/><text x="253.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:280) (1 samples, 0.10%)</title><rect x="261" y="244" width="1" height="15" fill="rgb(241,200,26)"/><text x="264.00" y="254.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.10%)</title><rect x="262" y="852" width="2" height="15" fill="rgb(249,3,5)"/><text x="265.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.10%)</title><rect x="262" y="868" width="2" height="15" fill="rgb(235,179,13)"/><text x="265.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.10%)</title><rect x="262" y="884" width="2" height="15" fill="rgb(248,49,36)"/><text x="265.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.10%)</title><rect x="262" y="900" width="2" height="15" fill="rgb(211,167,52)"/><text x="265.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.10%)</title><rect x="262" y="916" width="2" height="15" fill="rgb(224,67,40)"/><text x="265.00" y="926.50"></text></g><g><title>join (posixpath.py:86) (1 samples, 0.10%)</title><rect x="262" y="932" width="2" height="15" fill="rgb(225,68,40)"/><text x="265.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.10%)</title><rect x="264" y="852" width="1" height="15" fill="rgb(230,147,33)"/><text x="267.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.10%)</title><rect x="264" y="868" width="1" height="15" fill="rgb(217,15,49)"/><text x="267.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.10%)</title><rect x="264" y="884" width="1" height="15" fill="rgb(224,170,12)"/><text x="267.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.10%)</title><rect x="264" y="900" width="1" height="15" fill="rgb(241,99,27)"/><text x="267.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.10%)</title><rect x="264" y="916" width="1" height="15" fill="rgb(231,155,41)"/><text x="267.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.10%)</title><rect x="264" y="932" width="1" height="15" fill="rgb(243,176,34)"/><text x="267.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.10%)</title><rect x="264" y="948" width="1" height="15" fill="rgb(236,10,51)"/><text x="267.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1547) (1 samples, 0.10%)</title><rect x="264" y="964" width="1" height="15" fill="rgb(232,217,38)"/><text x="267.00" y="974.50"></text></g><g><title>isabs (posixpath.py:67) (1 samples, 0.10%)</title><rect x="264" y="980" width="1" height="15" fill="rgb(245,201,21)"/><text x="267.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.10%)</title><rect x="265" y="884" width="1" height="15" fill="rgb(243,27,35)"/><text x="268.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.10%)</title><rect x="265" y="900" width="1" height="15" fill="rgb(214,79,6)"/><text x="268.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="265" y="916" width="1" height="15" fill="rgb(247,144,43)"/><text x="268.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="265" y="932" width="1" height="15" fill="rgb(212,96,34)"/><text x="268.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.10%)</title><rect x="265" y="948" width="1" height="15" fill="rgb(251,87,40)"/><text x="268.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.40%)</title><rect x="262" y="580" width="5" height="15" fill="rgb(224,98,20)"/><text x="265.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="262" y="596" width="5" height="15" fill="rgb(253,131,27)"/><text x="265.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.40%)</title><rect x="262" y="612" width="5" height="15" fill="rgb(218,113,34)"/><text x="265.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="262" y="628" width="5" height="15" fill="rgb(245,44,52)"/><text x="265.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="262" y="644" width="5" height="15" fill="rgb(221,173,50)"/><text x="265.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="262" y="660" width="5" height="15" fill="rgb(219,54,51)"/><text x="265.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="262" y="676" width="5" height="15" fill="rgb(240,62,6)"/><text x="265.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="262" y="692" width="5" height="15" fill="rgb(230,135,49)"/><text x="265.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="262" y="708" width="5" height="15" fill="rgb(212,91,6)"/><text x="265.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.40%)</title><rect x="262" y="724" width="5" height="15" fill="rgb(218,166,34)"/><text x="265.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="262" y="740" width="5" height="15" fill="rgb(254,104,53)"/><text x="265.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="262" y="756" width="5" height="15" fill="rgb(227,27,31)"/><text x="265.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="262" y="772" width="5" height="15" fill="rgb(226,200,15)"/><text x="265.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="262" y="788" width="5" height="15" fill="rgb(252,190,44)"/><text x="265.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="262" y="804" width="5" height="15" fill="rgb(253,128,27)"/><text x="265.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.40%)</title><rect x="262" y="820" width="5" height="15" fill="rgb(252,209,24)"/><text x="265.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.40%)</title><rect x="262" y="836" width="5" height="15" fill="rgb(245,164,9)"/><text x="265.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.20%)</title><rect x="265" y="852" width="2" height="15" fill="rgb(237,128,50)"/><text x="268.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.20%)</title><rect x="265" y="868" width="2" height="15" fill="rgb(234,85,17)"/><text x="268.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.10%)</title><rect x="266" y="884" width="1" height="15" fill="rgb(205,188,51)"/><text x="269.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.10%)</title><rect x="266" y="900" width="1" height="15" fill="rgb(230,76,28)"/><text x="269.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.10%)</title><rect x="266" y="916" width="1" height="15" fill="rgb(248,15,23)"/><text x="269.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.10%)</title><rect x="266" y="932" width="1" height="15" fill="rgb(212,71,3)"/><text x="269.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.10%)</title><rect x="266" y="948" width="1" height="15" fill="rgb(233,88,6)"/><text x="269.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2556) (1 samples, 0.10%)</title><rect x="266" y="964" width="1" height="15" fill="rgb(243,103,37)"/><text x="269.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2767) (1 samples, 0.10%)</title><rect x="266" y="980" width="1" height="15" fill="rgb(236,94,36)"/><text x="269.00" y="990.50"></text></g><g><title>yield_lines (pkg_resources/__init__.py:2381) (1 samples, 0.10%)</title><rect x="266" y="996" width="1" height="15" fill="rgb(248,141,29)"/><text x="269.00" y="1006.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.10%)</title><rect x="266" y="1012" width="1" height="15" fill="rgb(246,183,53)"/><text x="269.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (5 samples, 0.50%)</title><rect x="262" y="148" width="6" height="15" fill="rgb(229,55,7)"/><text x="265.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.50%)</title><rect x="262" y="164" width="6" height="15" fill="rgb(239,186,4)"/><text x="265.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.50%)</title><rect x="262" y="180" width="6" height="15" fill="rgb(228,200,39)"/><text x="265.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.50%)</title><rect x="262" y="196" width="6" height="15" fill="rgb(248,65,14)"/><text x="265.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.50%)</title><rect x="262" y="212" width="6" height="15" fill="rgb(209,67,43)"/><text x="265.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.50%)</title><rect x="262" y="228" width="6" height="15" fill="rgb(219,148,35)"/><text x="265.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.50%)</title><rect x="262" y="244" width="6" height="15" fill="rgb(231,134,1)"/><text x="265.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.50%)</title><rect x="262" y="260" width="6" height="15" fill="rgb(220,0,52)"/><text x="265.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.50%)</title><rect x="262" y="276" width="6" height="15" fill="rgb(224,203,1)"/><text x="265.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.50%)</title><rect x="262" y="292" width="6" height="15" fill="rgb(232,9,4)"/><text x="265.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.50%)</title><rect x="262" y="308" width="6" height="15" fill="rgb(221,5,23)"/><text x="265.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.50%)</title><rect x="262" y="324" width="6" height="15" fill="rgb(236,118,39)"/><text x="265.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.50%)</title><rect x="262" y="340" width="6" height="15" fill="rgb(222,84,31)"/><text x="265.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.50%)</title><rect x="262" y="356" width="6" height="15" fill="rgb(212,59,54)"/><text x="265.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.50%)</title><rect x="262" y="372" width="6" height="15" fill="rgb(227,156,18)"/><text x="265.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.50%)</title><rect x="262" y="388" width="6" height="15" fill="rgb(227,124,13)"/><text x="265.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.50%)</title><rect x="262" y="404" width="6" height="15" fill="rgb(230,160,53)"/><text x="265.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.50%)</title><rect x="262" y="420" width="6" height="15" fill="rgb(206,91,14)"/><text x="265.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.50%)</title><rect x="262" y="436" width="6" height="15" fill="rgb(239,145,33)"/><text x="265.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.50%)</title><rect x="262" y="452" width="6" height="15" fill="rgb(212,161,2)"/><text x="265.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.50%)</title><rect x="262" y="468" width="6" height="15" fill="rgb(227,224,31)"/><text x="265.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.50%)</title><rect x="262" y="484" width="6" height="15" fill="rgb(241,91,34)"/><text x="265.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.50%)</title><rect x="262" y="500" width="6" height="15" fill="rgb(229,175,25)"/><text x="265.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.50%)</title><rect x="262" y="516" width="6" height="15" fill="rgb(216,73,18)"/><text x="265.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.50%)</title><rect x="262" y="532" width="6" height="15" fill="rgb(252,129,54)"/><text x="265.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.50%)</title><rect x="262" y="548" width="6" height="15" fill="rgb(241,46,26)"/><text x="265.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.50%)</title><rect x="262" y="564" width="6" height="15" fill="rgb(221,169,1)"/><text x="265.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.10%)</title><rect x="267" y="580" width="1" height="15" fill="rgb(214,206,24)"/><text x="270.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="267" y="596" width="1" height="15" fill="rgb(208,189,25)"/><text x="270.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="267" y="612" width="1" height="15" fill="rgb(228,57,20)"/><text x="270.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="267" y="628" width="1" height="15" fill="rgb(250,94,51)"/><text x="270.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="267" y="644" width="1" height="15" fill="rgb(235,90,11)"/><text x="270.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="267" y="660" width="1" height="15" fill="rgb(221,19,7)"/><text x="270.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="267" y="676" width="1" height="15" fill="rgb(247,102,29)"/><text x="270.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="267" y="692" width="1" height="15" fill="rgb(241,113,5)"/><text x="270.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py:47) (1 samples, 0.10%)</title><rect x="267" y="708" width="1" height="15" fill="rgb(233,77,5)"/><text x="270.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="267" y="724" width="1" height="15" fill="rgb(236,194,27)"/><text x="270.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="267" y="740" width="1" height="15" fill="rgb(240,6,8)"/><text x="270.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="267" y="756" width="1" height="15" fill="rgb(242,127,5)"/><text x="270.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="267" y="772" width="1" height="15" fill="rgb(205,80,20)"/><text x="270.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.10%)</title><rect x="267" y="788" width="1" height="15" fill="rgb(245,29,52)"/><text x="270.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.10%)</title><rect x="267" y="804" width="1" height="15" fill="rgb(215,219,4)"/><text x="270.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.10%)</title><rect x="267" y="820" width="1" height="15" fill="rgb(209,35,24)"/><text x="270.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="267" y="836" width="1" height="15" fill="rgb(252,86,50)"/><text x="270.00" y="846.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="852" width="1" height="15" fill="rgb(210,210,38)"/><text x="270.00" y="862.50"></text></g><g><title>0x7f723c8ab995 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="868" width="1" height="15" fill="rgb(243,30,37)"/><text x="270.00" y="878.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="884" width="1" height="15" fill="rgb(235,74,53)"/><text x="270.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="900" width="1" height="15" fill="rgb(214,3,32)"/><text x="270.00" y="910.50"></text></g><g><title>0x7f723c8ab258 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="916" width="1" height="15" fill="rgb(241,138,48)"/><text x="270.00" y="926.50"></text></g><g><title>0x7f723c8f8d7a (ld-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="932" width="1" height="15" fill="rgb(238,219,22)"/><text x="270.00" y="942.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="948" width="1" height="15" fill="rgb(230,133,33)"/><text x="270.00" y="958.50"></text></g><g><title>0x7f723c8f9345 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="964" width="1" height="15" fill="rgb(246,12,0)"/><text x="270.00" y="974.50"></text></g><g><title>0x7f723c8f1fec (ld-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="980" width="1" height="15" fill="rgb(238,142,3)"/><text x="270.00" y="990.50"></text></g><g><title>0x7f723c8f056b (ld-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="996" width="1" height="15" fill="rgb(240,130,21)"/><text x="270.00" y="1006.50"></text></g><g><title>0x7f723c8ef952 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="267" y="1012" width="1" height="15" fill="rgb(235,161,46)"/><text x="270.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.10%)</title><rect x="268" y="388" width="1" height="15" fill="rgb(252,31,13)"/><text x="271.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="268" y="404" width="1" height="15" fill="rgb(233,157,13)"/><text x="271.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="268" y="420" width="1" height="15" fill="rgb(238,224,2)"/><text x="271.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="268" y="436" width="1" height="15" fill="rgb(205,191,26)"/><text x="271.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="268" y="452" width="1" height="15" fill="rgb(238,65,5)"/><text x="271.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="268" y="468" width="1" height="15" fill="rgb(220,101,52)"/><text x="271.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.10%)</title><rect x="268" y="484" width="1" height="15" fill="rgb(230,38,51)"/><text x="271.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="268" y="500" width="1" height="15" fill="rgb(210,51,52)"/><text x="271.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="268" y="516" width="1" height="15" fill="rgb(228,210,42)"/><text x="271.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="268" y="532" width="1" height="15" fill="rgb(248,100,39)"/><text x="271.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="268" y="548" width="1" height="15" fill="rgb(210,163,10)"/><text x="271.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="268" y="564" width="1" height="15" fill="rgb(206,26,31)"/><text x="271.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.10%)</title><rect x="268" y="580" width="1" height="15" fill="rgb(218,78,22)"/><text x="271.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="268" y="596" width="1" height="15" fill="rgb(205,29,11)"/><text x="271.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="268" y="612" width="1" height="15" fill="rgb(221,49,16)"/><text x="271.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="268" y="628" width="1" height="15" fill="rgb(210,77,26)"/><text x="271.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="268" y="644" width="1" height="15" fill="rgb(212,75,50)"/><text x="271.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="268" y="660" width="1" height="15" fill="rgb(232,214,31)"/><text x="271.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:6) (1 samples, 0.10%)</title><rect x="268" y="676" width="1" height="15" fill="rgb(251,218,17)"/><text x="271.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="268" y="692" width="1" height="15" fill="rgb(246,51,4)"/><text x="271.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="268" y="708" width="1" height="15" fill="rgb(239,108,13)"/><text x="271.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="268" y="724" width="1" height="15" fill="rgb(234,5,23)"/><text x="271.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="268" y="740" width="1" height="15" fill="rgb(253,57,40)"/><text x="271.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="268" y="756" width="1" height="15" fill="rgb(212,158,34)"/><text x="271.00" y="766.50"></text></g><g><title>0x7f7227239746 (?) (1 samples, 0.10%)</title><rect x="268" y="772" width="1" height="15" fill="rgb(246,186,17)"/><text x="271.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="268" y="788" width="1" height="15" fill="rgb(227,207,1)"/><text x="271.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="268" y="804" width="1" height="15" fill="rgb(238,120,52)"/><text x="271.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="268" y="820" width="1" height="15" fill="rgb(215,24,28)"/><text x="271.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="268" y="836" width="1" height="15" fill="rgb(214,149,35)"/><text x="271.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="268" y="852" width="1" height="15" fill="rgb(241,182,22)"/><text x="271.00" y="862.50"></text></g><g><title>0x7f722700e998 (?) (1 samples, 0.10%)</title><rect x="268" y="868" width="1" height="15" fill="rgb(234,126,22)"/><text x="271.00" y="878.50"></text></g><g><title>0x7f722701149f (?) (1 samples, 0.10%)</title><rect x="268" y="884" width="1" height="15" fill="rgb(242,212,44)"/><text x="271.00" y="894.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="268" y="900" width="1" height="15" fill="rgb(228,183,10)"/><text x="271.00" y="910.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="268" y="916" width="1" height="15" fill="rgb(223,70,25)"/><text x="271.00" y="926.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.10%)</title><rect x="268" y="932" width="1" height="15" fill="rgb(252,147,18)"/><text x="271.00" y="942.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.10%)</title><rect x="268" y="948" width="1" height="15" fill="rgb(226,6,17)"/><text x="271.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.10%)</title><rect x="268" y="964" width="1" height="15" fill="rgb(245,183,33)"/><text x="271.00" y="974.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.10%)</title><rect x="268" y="980" width="1" height="15" fill="rgb(237,35,19)"/><text x="271.00" y="990.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.10%)</title><rect x="268" y="996" width="1" height="15" fill="rgb(225,185,50)"/><text x="271.00" y="1006.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.10%)</title><rect x="268" y="1012" width="1" height="15" fill="rgb(244,154,34)"/><text x="271.00" y="1022.50"></text></g><g><title>getwidth (sre_parse.py:202) (1 samples, 0.10%)</title><rect x="268" y="1028" width="1" height="15" fill="rgb(235,67,24)"/><text x="271.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.20%)</title><rect x="268" y="292" width="3" height="15" fill="rgb(241,101,6)"/><text x="271.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.20%)</title><rect x="268" y="308" width="3" height="15" fill="rgb(235,124,11)"/><text x="271.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.20%)</title><rect x="268" y="324" width="3" height="15" fill="rgb(235,37,23)"/><text x="271.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.20%)</title><rect x="268" y="340" width="3" height="15" fill="rgb(239,12,15)"/><text x="271.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.20%)</title><rect x="268" y="356" width="3" height="15" fill="rgb(216,133,15)"/><text x="271.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="268" y="372" width="3" height="15" fill="rgb(215,171,38)"/><text x="271.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.10%)</title><rect x="269" y="388" width="2" height="15" fill="rgb(234,75,43)"/><text x="272.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="269" y="404" width="2" height="15" fill="rgb(242,139,2)"/><text x="272.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="269" y="420" width="2" height="15" fill="rgb(214,175,32)"/><text x="272.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="269" y="436" width="2" height="15" fill="rgb(212,102,32)"/><text x="272.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="269" y="452" width="2" height="15" fill="rgb(221,193,41)"/><text x="272.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="269" y="468" width="2" height="15" fill="rgb(248,99,28)"/><text x="272.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.10%)</title><rect x="269" y="484" width="2" height="15" fill="rgb(238,39,0)"/><text x="272.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="269" y="500" width="2" height="15" fill="rgb(238,53,22)"/><text x="272.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="269" y="516" width="2" height="15" fill="rgb(226,217,7)"/><text x="272.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="269" y="532" width="2" height="15" fill="rgb(207,35,45)"/><text x="272.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="269" y="548" width="2" height="15" fill="rgb(228,138,38)"/><text x="272.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="269" y="564" width="2" height="15" fill="rgb(215,195,36)"/><text x="272.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="269" y="580" width="2" height="15" fill="rgb(242,119,30)"/><text x="272.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="269" y="596" width="2" height="15" fill="rgb(236,219,37)"/><text x="272.00" y="606.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.10%)</title><rect x="269" y="612" width="2" height="15" fill="rgb(245,107,1)"/><text x="272.00" y="622.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.10%)</title><rect x="269" y="628" width="2" height="15" fill="rgb(210,45,53)"/><text x="272.00" y="638.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.10%)</title><rect x="269" y="644" width="2" height="15" fill="rgb(239,214,25)"/><text x="272.00" y="654.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.10%)</title><rect x="269" y="660" width="2" height="15" fill="rgb(212,81,8)"/><text x="272.00" y="670.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.10%)</title><rect x="269" y="676" width="2" height="15" fill="rgb(218,75,35)"/><text x="272.00" y="686.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.10%)</title><rect x="269" y="692" width="2" height="15" fill="rgb(227,63,38)"/><text x="272.00" y="702.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.10%)</title><rect x="269" y="708" width="2" height="15" fill="rgb(254,193,18)"/><text x="272.00" y="718.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c:687) (1 samples, 0.10%)</title><rect x="269" y="724" width="2" height="15" fill="rgb(253,111,31)"/><text x="272.00" y="734.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.10%)</title><rect x="269" y="740" width="2" height="15" fill="rgb(216,54,25)"/><text x="272.00" y="750.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.10%)</title><rect x="271" y="1236" width="1" height="15" fill="rgb(215,198,14)"/><text x="274.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="1252" width="1" height="15" fill="rgb(232,196,19)"/><text x="274.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="1268" width="1" height="15" fill="rgb(240,101,29)"/><text x="274.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="1284" width="1" height="15" fill="rgb(252,220,36)"/><text x="274.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="1300" width="1" height="15" fill="rgb(214,5,48)"/><text x="274.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1316" width="1" height="15" fill="rgb(208,188,40)"/><text x="274.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.10%)</title><rect x="271" y="1332" width="1" height="15" fill="rgb(243,49,45)"/><text x="274.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="271" y="1348" width="1" height="15" fill="rgb(228,182,10)"/><text x="274.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1364" width="1" height="15" fill="rgb(212,147,20)"/><text x="274.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="1380" width="1" height="15" fill="rgb(228,217,48)"/><text x="274.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="1396" width="1" height="15" fill="rgb(249,77,16)"/><text x="274.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="1412" width="1" height="15" fill="rgb(229,159,3)"/><text x="274.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="1428" width="1" height="15" fill="rgb(240,55,36)"/><text x="274.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1444" width="1" height="15" fill="rgb(244,31,12)"/><text x="274.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:91) (1 samples, 0.10%)</title><rect x="271" y="1460" width="1" height="15" fill="rgb(225,183,8)"/><text x="274.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="1476" width="1" height="15" fill="rgb(232,205,53)"/><text x="274.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="1492" width="1" height="15" fill="rgb(239,129,10)"/><text x="274.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="1508" width="1" height="15" fill="rgb(216,127,18)"/><text x="274.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="1524" width="1" height="15" fill="rgb(222,119,2)"/><text x="274.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1540" width="1" height="15" fill="rgb(210,103,9)"/><text x="274.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/quadpack.py:9) (1 samples, 0.10%)</title><rect x="271" y="1556" width="1" height="15" fill="rgb(252,220,46)"/><text x="274.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="271" y="1572" width="1" height="15" fill="rgb(254,22,35)"/><text x="274.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1588" width="1" height="15" fill="rgb(224,148,10)"/><text x="274.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="1604" width="1" height="15" fill="rgb(217,42,50)"/><text x="274.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="1620" width="1" height="15" fill="rgb(206,122,6)"/><text x="274.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.10%)</title><rect x="271" y="1636" width="1" height="15" fill="rgb(211,65,33)"/><text x="274.00" y="1646.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.10%)</title><rect x="271" y="1652" width="1" height="15" fill="rgb(245,194,21)"/><text x="274.00" y="1662.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.10%)</title><rect x="271" y="1668" width="1" height="15" fill="rgb(217,200,29)"/><text x="274.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="1684" width="1" height="15" fill="rgb(240,1,14)"/><text x="274.00" y="1694.50"></text></g><g><title>0x7f7211a00042 (?) (1 samples, 0.10%)</title><rect x="271" y="1700" width="1" height="15" fill="rgb(235,77,42)"/><text x="274.00" y="1710.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:149) (1 samples, 0.10%)</title><rect x="272" y="1364" width="1" height="15" fill="rgb(220,3,12)"/><text x="275.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.10%)</title><rect x="272" y="1380" width="1" height="15" fill="rgb(209,66,53)"/><text x="275.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.10%)</title><rect x="272" y="1396" width="1" height="15" fill="rgb(220,7,31)"/><text x="275.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.10%)</title><rect x="272" y="1412" width="1" height="15" fill="rgb(254,228,4)"/><text x="275.00" y="1422.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="272" y="1428" width="1" height="15" fill="rgb(254,182,20)"/><text x="275.00" y="1438.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="272" y="1444" width="1" height="15" fill="rgb(217,211,35)"/><text x="275.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py:2220) (1 samples, 0.10%)</title><rect x="272" y="1460" width="1" height="15" fill="rgb(233,86,10)"/><text x="275.00" y="1470.50"></text></g><g><title>_signature_bound_method (inspect.py:1822) (1 samples, 0.10%)</title><rect x="272" y="1476" width="1" height="15" fill="rgb(232,141,32)"/><text x="275.00" y="1486.50"></text></g><g><title>replace (inspect.py:2849) (1 samples, 0.10%)</title><rect x="272" y="1492" width="1" height="15" fill="rgb(237,55,20)"/><text x="275.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.10%)</title><rect x="273" y="1364" width="1" height="15" fill="rgb(222,219,21)"/><text x="276.00" y="1374.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="273" y="1380" width="1" height="15" fill="rgb(227,12,38)"/><text x="276.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="273" y="1396" width="1" height="15" fill="rgb(206,0,37)"/><text x="276.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="273" y="1412" width="1" height="15" fill="rgb(250,164,50)"/><text x="276.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="273" y="1428" width="1" height="15" fill="rgb(239,28,43)"/><text x="276.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="273" y="1444" width="1" height="15" fill="rgb(207,138,9)"/><text x="276.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="273" y="1460" width="1" height="15" fill="rgb(215,31,42)"/><text x="276.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="273" y="1476" width="1" height="15" fill="rgb(252,132,34)"/><text x="276.00" y="1486.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.10%)</title><rect x="273" y="1492" width="1" height="15" fill="rgb(239,220,28)"/><text x="276.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="273" y="1508" width="1" height="15" fill="rgb(242,10,50)"/><text x="276.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="273" y="1524" width="1" height="15" fill="rgb(222,115,44)"/><text x="276.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="273" y="1540" width="1" height="15" fill="rgb(214,87,2)"/><text x="276.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="273" y="1556" width="1" height="15" fill="rgb(219,115,53)"/><text x="276.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="273" y="1572" width="1" height="15" fill="rgb(247,47,0)"/><text x="276.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:20) (1 samples, 0.10%)</title><rect x="273" y="1588" width="1" height="15" fill="rgb(247,184,29)"/><text x="276.00" y="1598.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="273" y="1604" width="1" height="15" fill="rgb(225,92,17)"/><text x="276.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="273" y="1620" width="1" height="15" fill="rgb(214,137,42)"/><text x="276.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="273" y="1636" width="1" height="15" fill="rgb(242,41,31)"/><text x="276.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="273" y="1652" width="1" height="15" fill="rgb(228,86,28)"/><text x="276.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="273" y="1668" width="1" height="15" fill="rgb(227,78,42)"/><text x="276.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="273" y="1684" width="1" height="15" fill="rgb(213,225,30)"/><text x="276.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="273" y="1700" width="1" height="15" fill="rgb(206,115,37)"/><text x="276.00" y="1710.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/fitpack.py:10) (1 samples, 0.10%)</title><rect x="273" y="1716" width="1" height="15" fill="rgb(233,219,30)"/><text x="276.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="273" y="1732" width="1" height="15" fill="rgb(209,59,28)"/><text x="276.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="273" y="1748" width="1" height="15" fill="rgb(216,19,30)"/><text x="276.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="273" y="1764" width="1" height="15" fill="rgb(237,119,14)"/><text x="276.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="273" y="1780" width="1" height="15" fill="rgb(214,60,23)"/><text x="276.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="273" y="1796" width="1" height="15" fill="rgb(245,146,7)"/><text x="276.00" y="1806.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="273" y="1812" width="1" height="15" fill="rgb(252,182,48)"/><text x="276.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 0.40%)</title><rect x="271" y="532" width="4" height="15" fill="rgb(242,186,50)"/><text x="274.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="548" width="4" height="15" fill="rgb(236,68,11)"/><text x="274.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="564" width="4" height="15" fill="rgb(240,104,3)"/><text x="274.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="580" width="4" height="15" fill="rgb(211,30,48)"/><text x="274.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="596" width="4" height="15" fill="rgb(247,67,6)"/><text x="274.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="612" width="4" height="15" fill="rgb(212,178,29)"/><text x="274.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 0.40%)</title><rect x="271" y="628" width="4" height="15" fill="rgb(233,210,35)"/><text x="274.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="644" width="4" height="15" fill="rgb(205,29,31)"/><text x="274.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="660" width="4" height="15" fill="rgb(252,103,29)"/><text x="274.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="676" width="4" height="15" fill="rgb(239,24,15)"/><text x="274.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="692" width="4" height="15" fill="rgb(218,120,29)"/><text x="274.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="708" width="4" height="15" fill="rgb(233,65,28)"/><text x="274.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 0.40%)</title><rect x="271" y="724" width="4" height="15" fill="rgb(237,51,43)"/><text x="274.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="740" width="4" height="15" fill="rgb(246,8,5)"/><text x="274.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="756" width="4" height="15" fill="rgb(213,205,20)"/><text x="274.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="772" width="4" height="15" fill="rgb(224,109,34)"/><text x="274.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="788" width="4" height="15" fill="rgb(249,79,44)"/><text x="274.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="804" width="4" height="15" fill="rgb(218,85,25)"/><text x="274.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 0.40%)</title><rect x="271" y="820" width="4" height="15" fill="rgb(239,207,44)"/><text x="274.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="836" width="4" height="15" fill="rgb(248,10,4)"/><text x="274.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="852" width="4" height="15" fill="rgb(229,115,16)"/><text x="274.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="868" width="4" height="15" fill="rgb(234,126,43)"/><text x="274.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="884" width="4" height="15" fill="rgb(217,192,18)"/><text x="274.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="900" width="4" height="15" fill="rgb(229,71,23)"/><text x="274.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 0.40%)</title><rect x="271" y="916" width="4" height="15" fill="rgb(209,35,14)"/><text x="274.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="932" width="4" height="15" fill="rgb(250,38,35)"/><text x="274.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="948" width="4" height="15" fill="rgb(229,72,1)"/><text x="274.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="964" width="4" height="15" fill="rgb(227,94,35)"/><text x="274.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="980" width="4" height="15" fill="rgb(211,198,46)"/><text x="274.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="996" width="4" height="15" fill="rgb(213,215,26)"/><text x="274.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (4 samples, 0.40%)</title><rect x="271" y="1012" width="4" height="15" fill="rgb(236,15,53)"/><text x="274.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="1028" width="4" height="15" fill="rgb(247,175,23)"/><text x="274.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="1044" width="4" height="15" fill="rgb(253,176,39)"/><text x="274.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="1060" width="4" height="15" fill="rgb(207,17,4)"/><text x="274.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="1076" width="4" height="15" fill="rgb(213,133,33)"/><text x="274.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="1092" width="4" height="15" fill="rgb(210,148,42)"/><text x="274.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (4 samples, 0.40%)</title><rect x="271" y="1108" width="4" height="15" fill="rgb(237,220,44)"/><text x="274.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.40%)</title><rect x="271" y="1124" width="4" height="15" fill="rgb(250,115,28)"/><text x="274.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="1140" width="4" height="15" fill="rgb(245,56,22)"/><text x="274.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.40%)</title><rect x="271" y="1156" width="4" height="15" fill="rgb(210,87,50)"/><text x="274.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.40%)</title><rect x="271" y="1172" width="4" height="15" fill="rgb(210,111,33)"/><text x="274.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.40%)</title><rect x="271" y="1188" width="4" height="15" fill="rgb(213,95,44)"/><text x="274.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.40%)</title><rect x="271" y="1204" width="4" height="15" fill="rgb(216,145,21)"/><text x="274.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.40%)</title><rect x="271" y="1220" width="4" height="15" fill="rgb(225,177,30)"/><text x="274.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (3 samples, 0.30%)</title><rect x="272" y="1236" width="3" height="15" fill="rgb(254,90,34)"/><text x="275.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.30%)</title><rect x="272" y="1252" width="3" height="15" fill="rgb(226,35,52)"/><text x="275.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="272" y="1268" width="3" height="15" fill="rgb(216,6,52)"/><text x="275.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="272" y="1284" width="3" height="15" fill="rgb(216,143,32)"/><text x="275.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.30%)</title><rect x="272" y="1300" width="3" height="15" fill="rgb(221,173,43)"/><text x="275.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.30%)</title><rect x="272" y="1316" width="3" height="15" fill="rgb(211,158,37)"/><text x="275.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.30%)</title><rect x="272" y="1332" width="3" height="15" fill="rgb(234,128,49)"/><text x="275.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="272" y="1348" width="3" height="15" fill="rgb(225,41,52)"/><text x="275.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3292) (1 samples, 0.10%)</title><rect x="274" y="1364" width="1" height="15" fill="rgb(243,65,9)"/><text x="277.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1556) (1 samples, 0.10%)</title><rect x="274" y="1380" width="1" height="15" fill="rgb(248,198,19)"/><text x="277.00" y="1390.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:591) (1 samples, 0.10%)</title><rect x="274" y="1396" width="1" height="15" fill="rgb(214,192,22)"/><text x="277.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.10%)</title><rect x="274" y="1412" width="1" height="15" fill="rgb(248,141,11)"/><text x="277.00" y="1422.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="274" y="1428" width="1" height="15" fill="rgb(219,179,52)"/><text x="277.00" y="1438.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="274" y="1444" width="1" height="15" fill="rgb(231,63,23)"/><text x="277.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.10%)</title><rect x="274" y="1460" width="1" height="15" fill="rgb(224,181,41)"/><text x="277.00" y="1470.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.10%)</title><rect x="274" y="1476" width="1" height="15" fill="rgb(223,143,8)"/><text x="277.00" y="1486.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.10%)</title><rect x="274" y="1492" width="1" height="15" fill="rgb(252,195,30)"/><text x="277.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.10%)</title><rect x="275" y="964" width="2" height="15" fill="rgb(221,16,27)"/><text x="278.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="980" width="2" height="15" fill="rgb(213,72,0)"/><text x="278.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="996" width="2" height="15" fill="rgb(251,196,35)"/><text x="278.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1012" width="2" height="15" fill="rgb(251,38,1)"/><text x="278.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1028" width="2" height="15" fill="rgb(252,146,4)"/><text x="278.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1044" width="2" height="15" fill="rgb(254,80,21)"/><text x="278.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.10%)</title><rect x="275" y="1060" width="2" height="15" fill="rgb(240,172,26)"/><text x="278.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1076" width="2" height="15" fill="rgb(237,194,28)"/><text x="278.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1092" width="2" height="15" fill="rgb(254,164,42)"/><text x="278.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1108" width="2" height="15" fill="rgb(208,214,28)"/><text x="278.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1124" width="2" height="15" fill="rgb(229,206,43)"/><text x="278.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1140" width="2" height="15" fill="rgb(214,20,47)"/><text x="278.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.10%)</title><rect x="275" y="1156" width="2" height="15" fill="rgb(240,23,2)"/><text x="278.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1172" width="2" height="15" fill="rgb(235,198,2)"/><text x="278.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1188" width="2" height="15" fill="rgb(218,203,53)"/><text x="278.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1204" width="2" height="15" fill="rgb(251,192,21)"/><text x="278.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1220" width="2" height="15" fill="rgb(205,20,29)"/><text x="278.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1236" width="2" height="15" fill="rgb(210,1,6)"/><text x="278.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.10%)</title><rect x="275" y="1252" width="2" height="15" fill="rgb(238,14,48)"/><text x="278.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1268" width="2" height="15" fill="rgb(237,27,4)"/><text x="278.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1284" width="2" height="15" fill="rgb(236,84,17)"/><text x="278.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1300" width="2" height="15" fill="rgb(206,151,3)"/><text x="278.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1316" width="2" height="15" fill="rgb(210,102,19)"/><text x="278.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1332" width="2" height="15" fill="rgb(210,64,34)"/><text x="278.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.10%)</title><rect x="275" y="1348" width="2" height="15" fill="rgb(252,89,19)"/><text x="278.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1364" width="2" height="15" fill="rgb(231,204,37)"/><text x="278.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1380" width="2" height="15" fill="rgb(228,110,48)"/><text x="278.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1396" width="2" height="15" fill="rgb(218,51,27)"/><text x="278.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1412" width="2" height="15" fill="rgb(253,163,37)"/><text x="278.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1428" width="2" height="15" fill="rgb(213,138,40)"/><text x="278.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.10%)</title><rect x="275" y="1444" width="2" height="15" fill="rgb(243,76,45)"/><text x="278.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1460" width="2" height="15" fill="rgb(249,100,27)"/><text x="278.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1476" width="2" height="15" fill="rgb(249,154,34)"/><text x="278.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1492" width="2" height="15" fill="rgb(253,168,21)"/><text x="278.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="275" y="1508" width="2" height="15" fill="rgb(211,214,11)"/><text x="278.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="275" y="1524" width="2" height="15" fill="rgb(249,139,27)"/><text x="278.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:23) (1 samples, 0.10%)</title><rect x="275" y="1540" width="2" height="15" fill="rgb(223,161,27)"/><text x="278.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="275" y="1556" width="2" height="15" fill="rgb(244,159,45)"/><text x="278.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="275" y="1572" width="2" height="15" fill="rgb(239,168,53)"/><text x="278.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="275" y="1588" width="2" height="15" fill="rgb(207,155,10)"/><text x="278.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="275" y="1604" width="2" height="15" fill="rgb(215,183,44)"/><text x="278.00" y="1614.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="275" y="1620" width="2" height="15" fill="rgb(229,185,50)"/><text x="278.00" y="1630.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="275" y="1636" width="2" height="15" fill="rgb(230,71,24)"/><text x="278.00" y="1646.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.10%)</title><rect x="277" y="1348" width="1" height="15" fill="rgb(248,193,47)"/><text x="280.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.10%)</title><rect x="277" y="1364" width="1" height="15" fill="rgb(229,19,28)"/><text x="280.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.10%)</title><rect x="277" y="1380" width="1" height="15" fill="rgb(215,74,45)"/><text x="280.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:4) (14 samples, 1.41%)</title><rect x="262" y="52" width="17" height="15" fill="rgb(210,168,53)"/><text x="265.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.41%)</title><rect x="262" y="68" width="17" height="15" fill="rgb(213,97,13)"/><text x="265.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.41%)</title><rect x="262" y="84" width="17" height="15" fill="rgb(245,143,52)"/><text x="265.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.41%)</title><rect x="262" y="100" width="17" height="15" fill="rgb(253,132,52)"/><text x="265.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.41%)</title><rect x="262" y="116" width="17" height="15" fill="rgb(212,188,1)"/><text x="265.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.41%)</title><rect x="262" y="132" width="17" height="15" fill="rgb(212,89,2)"/><text x="265.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (9 samples, 0.91%)</title><rect x="268" y="148" width="11" height="15" fill="rgb(215,111,45)"/><text x="271.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 0.91%)</title><rect x="268" y="164" width="11" height="15" fill="rgb(221,155,5)"/><text x="271.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 0.91%)</title><rect x="268" y="180" width="11" height="15" fill="rgb(225,84,53)"/><text x="271.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 0.91%)</title><rect x="268" y="196" width="11" height="15" fill="rgb(206,170,21)"/><text x="271.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 0.91%)</title><rect x="268" y="212" width="11" height="15" fill="rgb(248,156,31)"/><text x="271.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 0.91%)</title><rect x="268" y="228" width="11" height="15" fill="rgb(207,86,4)"/><text x="271.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 0.91%)</title><rect x="268" y="244" width="11" height="15" fill="rgb(242,104,28)"/><text x="271.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 0.91%)</title><rect x="268" y="260" width="11" height="15" fill="rgb(243,194,54)"/><text x="271.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 0.91%)</title><rect x="268" y="276" width="11" height="15" fill="rgb(248,52,39)"/><text x="271.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 0.70%)</title><rect x="271" y="292" width="8" height="15" fill="rgb(236,97,35)"/><text x="274.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.70%)</title><rect x="271" y="308" width="8" height="15" fill="rgb(206,156,45)"/><text x="274.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 0.70%)</title><rect x="271" y="324" width="8" height="15" fill="rgb(212,145,3)"/><text x="274.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.70%)</title><rect x="271" y="340" width="8" height="15" fill="rgb(243,15,50)"/><text x="274.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.70%)</title><rect x="271" y="356" width="8" height="15" fill="rgb(210,75,34)"/><text x="274.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.70%)</title><rect x="271" y="372" width="8" height="15" fill="rgb(207,101,50)"/><text x="274.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.70%)</title><rect x="271" y="388" width="8" height="15" fill="rgb(240,192,23)"/><text x="274.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.70%)</title><rect x="271" y="404" width="8" height="15" fill="rgb(243,202,8)"/><text x="274.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.70%)</title><rect x="271" y="420" width="8" height="15" fill="rgb(218,216,37)"/><text x="274.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 0.70%)</title><rect x="271" y="436" width="8" height="15" fill="rgb(213,147,43)"/><text x="274.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.70%)</title><rect x="271" y="452" width="8" height="15" fill="rgb(224,6,36)"/><text x="274.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.70%)</title><rect x="271" y="468" width="8" height="15" fill="rgb(237,33,48)"/><text x="274.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.70%)</title><rect x="271" y="484" width="8" height="15" fill="rgb(249,202,30)"/><text x="274.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.70%)</title><rect x="271" y="500" width="8" height="15" fill="rgb(216,126,14)"/><text x="274.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.70%)</title><rect x="271" y="516" width="8" height="15" fill="rgb(230,16,2)"/><text x="274.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.30%)</title><rect x="275" y="532" width="4" height="15" fill="rgb(226,98,35)"/><text x="278.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="275" y="548" width="4" height="15" fill="rgb(225,31,54)"/><text x="278.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.30%)</title><rect x="275" y="564" width="4" height="15" fill="rgb(220,77,14)"/><text x="278.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.30%)</title><rect x="275" y="580" width="4" height="15" fill="rgb(221,186,39)"/><text x="278.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.30%)</title><rect x="275" y="596" width="4" height="15" fill="rgb(210,50,14)"/><text x="278.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="275" y="612" width="4" height="15" fill="rgb(220,57,39)"/><text x="278.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.30%)</title><rect x="275" y="628" width="4" height="15" fill="rgb(228,160,3)"/><text x="278.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="275" y="644" width="4" height="15" fill="rgb(211,122,48)"/><text x="278.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.30%)</title><rect x="275" y="660" width="4" height="15" fill="rgb(210,11,0)"/><text x="278.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.30%)</title><rect x="275" y="676" width="4" height="15" fill="rgb(219,52,42)"/><text x="278.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.30%)</title><rect x="275" y="692" width="4" height="15" fill="rgb(206,224,19)"/><text x="278.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="275" y="708" width="4" height="15" fill="rgb(236,170,36)"/><text x="278.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.30%)</title><rect x="275" y="724" width="4" height="15" fill="rgb(237,211,35)"/><text x="278.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="275" y="740" width="4" height="15" fill="rgb(216,223,51)"/><text x="278.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.30%)</title><rect x="275" y="756" width="4" height="15" fill="rgb(205,151,24)"/><text x="278.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="275" y="772" width="4" height="15" fill="rgb(242,1,42)"/><text x="278.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="275" y="788" width="4" height="15" fill="rgb(235,112,53)"/><text x="278.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.30%)</title><rect x="275" y="804" width="4" height="15" fill="rgb(210,100,21)"/><text x="278.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.30%)</title><rect x="275" y="820" width="4" height="15" fill="rgb(224,205,16)"/><text x="278.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.30%)</title><rect x="275" y="836" width="4" height="15" fill="rgb(250,205,31)"/><text x="278.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="275" y="852" width="4" height="15" fill="rgb(216,116,31)"/><text x="278.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.30%)</title><rect x="275" y="868" width="4" height="15" fill="rgb(239,82,10)"/><text x="278.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.30%)</title><rect x="275" y="884" width="4" height="15" fill="rgb(234,96,28)"/><text x="278.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.30%)</title><rect x="275" y="900" width="4" height="15" fill="rgb(219,189,10)"/><text x="278.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.30%)</title><rect x="275" y="916" width="4" height="15" fill="rgb(232,23,35)"/><text x="278.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.30%)</title><rect x="275" y="932" width="4" height="15" fill="rgb(223,209,36)"/><text x="278.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.30%)</title><rect x="275" y="948" width="4" height="15" fill="rgb(224,226,47)"/><text x="278.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.20%)</title><rect x="277" y="964" width="2" height="15" fill="rgb(226,163,2)"/><text x="280.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.20%)</title><rect x="277" y="980" width="2" height="15" fill="rgb(227,117,27)"/><text x="280.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="277" y="996" width="2" height="15" fill="rgb(213,84,9)"/><text x="280.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.20%)</title><rect x="277" y="1012" width="2" height="15" fill="rgb(245,89,26)"/><text x="280.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.20%)</title><rect x="277" y="1028" width="2" height="15" fill="rgb(210,120,15)"/><text x="280.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.20%)</title><rect x="277" y="1044" width="2" height="15" fill="rgb(249,15,45)"/><text x="280.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.20%)</title><rect x="277" y="1060" width="2" height="15" fill="rgb(252,133,51)"/><text x="280.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="277" y="1076" width="2" height="15" fill="rgb(230,66,0)"/><text x="280.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.20%)</title><rect x="277" y="1092" width="2" height="15" fill="rgb(252,71,48)"/><text x="280.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.20%)</title><rect x="277" y="1108" width="2" height="15" fill="rgb(215,163,42)"/><text x="280.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="277" y="1124" width="2" height="15" fill="rgb(236,26,43)"/><text x="280.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.20%)</title><rect x="277" y="1140" width="2" height="15" fill="rgb(219,51,25)"/><text x="280.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.20%)</title><rect x="277" y="1156" width="2" height="15" fill="rgb(218,157,38)"/><text x="280.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.20%)</title><rect x="277" y="1172" width="2" height="15" fill="rgb(243,88,0)"/><text x="280.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.20%)</title><rect x="277" y="1188" width="2" height="15" fill="rgb(212,15,15)"/><text x="280.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="277" y="1204" width="2" height="15" fill="rgb(244,35,34)"/><text x="280.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.20%)</title><rect x="277" y="1220" width="2" height="15" fill="rgb(241,221,43)"/><text x="280.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.20%)</title><rect x="277" y="1236" width="2" height="15" fill="rgb(219,60,3)"/><text x="280.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.20%)</title><rect x="277" y="1252" width="2" height="15" fill="rgb(244,174,54)"/><text x="280.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.20%)</title><rect x="277" y="1268" width="2" height="15" fill="rgb(245,219,10)"/><text x="280.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.20%)</title><rect x="277" y="1284" width="2" height="15" fill="rgb(210,47,34)"/><text x="280.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.20%)</title><rect x="277" y="1300" width="2" height="15" fill="rgb(221,142,47)"/><text x="280.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.20%)</title><rect x="277" y="1316" width="2" height="15" fill="rgb(225,38,21)"/><text x="280.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.20%)</title><rect x="277" y="1332" width="2" height="15" fill="rgb(243,36,49)"/><text x="280.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.10%)</title><rect x="278" y="1348" width="1" height="15" fill="rgb(254,179,13)"/><text x="281.00" y="1358.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="278" y="1364" width="1" height="15" fill="rgb(237,50,12)"/><text x="281.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="278" y="1380" width="1" height="15" fill="rgb(227,42,31)"/><text x="281.00" y="1390.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="278" y="1396" width="1" height="15" fill="rgb(215,198,3)"/><text x="281.00" y="1406.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="278" y="1412" width="1" height="15" fill="rgb(237,153,1)"/><text x="281.00" y="1422.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="278" y="1428" width="1" height="15" fill="rgb(236,98,54)"/><text x="281.00" y="1438.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.10%)</title><rect x="284" y="164" width="1" height="15" fill="rgb(237,113,25)"/><text x="287.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.10%)</title><rect x="285" y="164" width="1" height="15" fill="rgb(226,108,50)"/><text x="288.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.10%)</title><rect x="286" y="164" width="1" height="15" fill="rgb(249,80,30)"/><text x="289.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.10%)</title><rect x="287" y="164" width="1" height="15" fill="rgb(233,132,16)"/><text x="290.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (8 samples, 0.80%)</title><rect x="293" y="180" width="10" height="15" fill="rgb(248,136,4)"/><text x="296.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.10%)</title><rect x="302" y="196" width="1" height="15" fill="rgb(248,109,38)"/><text x="305.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.10%)</title><rect x="305" y="212" width="1" height="15" fill="rgb(221,136,37)"/><text x="308.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.10%)</title><rect x="305" y="228" width="1" height="15" fill="rgb(209,148,1)"/><text x="308.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.10%)</title><rect x="305" y="244" width="1" height="15" fill="rgb(221,75,27)"/><text x="308.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 0.50%)</title><rect x="304" y="196" width="6" height="15" fill="rgb(205,111,18)"/><text x="307.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.30%)</title><rect x="306" y="212" width="4" height="15" fill="rgb(239,173,4)"/><text x="309.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (3 samples, 0.30%)</title><rect x="306" y="228" width="4" height="15" fill="rgb(231,75,24)"/><text x="309.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="316" y="260" width="1" height="15" fill="rgb(210,179,8)"/><text x="319.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="316" y="276" width="1" height="15" fill="rgb(208,198,21)"/><text x="319.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.10%)</title><rect x="316" y="292" width="1" height="15" fill="rgb(234,193,38)"/><text x="319.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="317" y="276" width="1" height="15" fill="rgb(220,152,45)"/><text x="320.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:922) (1 samples, 0.10%)</title><rect x="317" y="292" width="1" height="15" fill="rgb(251,64,37)"/><text x="320.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.20%)</title><rect x="317" y="260" width="2" height="15" fill="rgb(226,160,35)"/><text x="320.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.10%)</title><rect x="318" y="276" width="1" height="15" fill="rgb(226,31,8)"/><text x="321.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.10%)</title><rect x="319" y="260" width="2" height="15" fill="rgb(254,92,17)"/><text x="322.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.10%)</title><rect x="319" y="276" width="2" height="15" fill="rgb(251,20,9)"/><text x="322.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.10%)</title><rect x="319" y="292" width="2" height="15" fill="rgb(252,14,15)"/><text x="322.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.10%)</title><rect x="319" y="308" width="2" height="15" fill="rgb(235,19,6)"/><text x="322.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.10%)</title><rect x="319" y="324" width="2" height="15" fill="rgb(233,100,35)"/><text x="322.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="324" y="308" width="1" height="15" fill="rgb(211,221,11)"/><text x="327.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="324" y="324" width="1" height="15" fill="rgb(246,177,15)"/><text x="327.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="324" y="340" width="1" height="15" fill="rgb(207,217,20)"/><text x="327.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="324" y="356" width="1" height="15" fill="rgb(225,116,22)"/><text x="327.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(221,6,51)"/><text x="327.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="324" y="388" width="1" height="15" fill="rgb(236,140,50)"/><text x="327.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.10%)</title><rect x="325" y="324" width="1" height="15" fill="rgb(215,98,30)"/><text x="328.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="326" y="340" width="2" height="15" fill="rgb(211,206,26)"/><text x="329.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="326" y="356" width="2" height="15" fill="rgb(218,100,11)"/><text x="329.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.10%)</title><rect x="329" y="388" width="1" height="15" fill="rgb(209,111,17)"/><text x="332.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="329" y="404" width="1" height="15" fill="rgb(235,173,38)"/><text x="332.00" y="414.50"></text></g><g><title>0x7f723c5db8c0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="329" y="420" width="1" height="15" fill="rgb(242,48,29)"/><text x="332.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.30%)</title><rect x="328" y="356" width="3" height="15" fill="rgb(253,84,39)"/><text x="331.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.30%)</title><rect x="328" y="372" width="3" height="15" fill="rgb(245,44,4)"/><text x="331.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="330" y="388" width="1" height="15" fill="rgb(222,168,36)"/><text x="333.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="330" y="404" width="1" height="15" fill="rgb(230,156,6)"/><text x="333.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.10%)</title><rect x="330" y="420" width="1" height="15" fill="rgb(218,218,39)"/><text x="333.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.10%)</title><rect x="330" y="436" width="1" height="15" fill="rgb(249,18,5)"/><text x="333.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.10%)</title><rect x="330" y="452" width="1" height="15" fill="rgb(244,137,31)"/><text x="333.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:402) (1 samples, 0.10%)</title><rect x="331" y="372" width="1" height="15" fill="rgb(218,175,49)"/><text x="334.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.10%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(236,40,7)"/><text x="335.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3794) (1 samples, 0.10%)</title><rect x="332" y="404" width="2" height="15" fill="rgb(213,106,40)"/><text x="335.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.10%)</title><rect x="332" y="420" width="2" height="15" fill="rgb(226,143,28)"/><text x="335.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.30%)</title><rect x="331" y="356" width="4" height="15" fill="rgb(238,118,44)"/><text x="334.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.20%)</title><rect x="332" y="372" width="3" height="15" fill="rgb(212,153,14)"/><text x="335.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="334" y="388" width="1" height="15" fill="rgb(235,80,2)"/><text x="337.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.10%)</title><rect x="334" y="404" width="1" height="15" fill="rgb(237,98,52)"/><text x="337.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.10%)</title><rect x="335" y="356" width="1" height="15" fill="rgb(205,102,27)"/><text x="338.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="335" y="372" width="1" height="15" fill="rgb(223,9,24)"/><text x="338.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.10%)</title><rect x="335" y="388" width="1" height="15" fill="rgb(251,225,37)"/><text x="338.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.10%)</title><rect x="336" y="372" width="1" height="15" fill="rgb(231,6,31)"/><text x="339.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="337" y="372" width="1" height="15" fill="rgb(249,183,52)"/><text x="340.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (3 samples, 0.30%)</title><rect x="338" y="372" width="4" height="15" fill="rgb(238,168,9)"/><text x="341.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="342" y="388" width="1" height="15" fill="rgb(250,206,44)"/><text x="345.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="343" y="388" width="1" height="15" fill="rgb(224,113,39)"/><text x="346.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (4 samples, 0.40%)</title><rect x="344" y="404" width="5" height="15" fill="rgb(235,35,18)"/><text x="347.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (6 samples, 0.60%)</title><rect x="344" y="388" width="7" height="15" fill="rgb(231,38,54)"/><text x="347.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (2 samples, 0.20%)</title><rect x="349" y="404" width="2" height="15" fill="rgb(241,202,46)"/><text x="352.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.10%)</title><rect x="351" y="388" width="2" height="15" fill="rgb(234,112,5)"/><text x="354.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (3 samples, 0.30%)</title><rect x="353" y="388" width="3" height="15" fill="rgb(218,74,16)"/><text x="356.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (18 samples, 1.81%)</title><rect x="336" y="356" width="21" height="15" fill="rgb(210,111,4)"/><text x="339.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.31%)</title><rect x="342" y="372" width="15" height="15" fill="rgb(239,184,26)"/><text x="345.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.10%)</title><rect x="356" y="388" width="1" height="15" fill="rgb(221,93,43)"/><text x="359.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (32 samples, 3.22%)</title><rect x="321" y="260" width="38" height="15" fill="rgb(218,61,2)"/><text x="324.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 3.22%)</title><rect x="321" y="276" width="38" height="15" fill="rgb(218,57,32)"/><text x="324.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (29 samples, 2.92%)</title><rect x="324" y="292" width="35" height="15" fill="rgb(248,22,41)"/><text x="327.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (28 samples, 2.82%)</title><rect x="325" y="308" width="34" height="15" fill="rgb(205,171,26)"/><text x="328.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (27 samples, 2.72%)</title><rect x="326" y="324" width="33" height="15" fill="rgb(253,78,19)"/><text x="329.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (26 samples, 2.62%)</title><rect x="328" y="340" width="31" height="15" fill="rgb(245,7,31)"/><text x="331.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="357" y="356" width="2" height="15" fill="rgb(253,191,14)"/><text x="360.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="357" y="372" width="2" height="15" fill="rgb(222,184,7)"/><text x="360.00" y="382.50"></text></g><g><title>0x7f723c623ace (libc-2.29.so) (1 samples, 0.10%)</title><rect x="357" y="388" width="2" height="15" fill="rgb(224,217,40)"/><text x="360.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.10%)</title><rect x="359" y="292" width="1" height="15" fill="rgb(245,92,48)"/><text x="362.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.20%)</title><rect x="359" y="276" width="2" height="15" fill="rgb(240,71,35)"/><text x="362.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.10%)</title><rect x="360" y="292" width="1" height="15" fill="rgb(221,67,53)"/><text x="363.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.10%)</title><rect x="361" y="276" width="1" height="15" fill="rgb(220,125,12)"/><text x="364.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.10%)</title><rect x="361" y="292" width="1" height="15" fill="rgb(243,167,11)"/><text x="364.00" y="302.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.10%)</title><rect x="361" y="308" width="1" height="15" fill="rgb(240,2,25)"/><text x="364.00" y="318.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (44 samples, 4.43%)</title><rect x="311" y="244" width="52" height="15" fill="rgb(236,156,6)"/><text x="314.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.40%)</title><rect x="359" y="260" width="4" height="15" fill="rgb(241,192,0)"/><text x="362.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="362" y="276" width="1" height="15" fill="rgb(244,10,36)"/><text x="365.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="362" y="292" width="1" height="15" fill="rgb(219,193,47)"/><text x="365.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.10%)</title><rect x="362" y="308" width="1" height="15" fill="rgb(252,155,30)"/><text x="365.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="362" y="324" width="1" height="15" fill="rgb(218,149,27)"/><text x="365.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="362" y="340" width="1" height="15" fill="rgb(240,71,12)"/><text x="365.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="362" y="356" width="1" height="15" fill="rgb(235,41,46)"/><text x="365.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1527) (1 samples, 0.10%)</title><rect x="364" y="308" width="2" height="15" fill="rgb(243,120,45)"/><text x="367.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="366" y="356" width="1" height="15" fill="rgb(205,130,48)"/><text x="369.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.30%)</title><rect x="367" y="356" width="3" height="15" fill="rgb(214,138,17)"/><text x="370.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.60%)</title><rect x="366" y="308" width="7" height="15" fill="rgb(229,31,25)"/><text x="369.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.60%)</title><rect x="366" y="324" width="7" height="15" fill="rgb(234,204,53)"/><text x="369.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.60%)</title><rect x="366" y="340" width="7" height="15" fill="rgb(217,17,34)"/><text x="369.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.20%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(236,26,42)"/><text x="373.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (2 samples, 0.20%)</title><rect x="370" y="372" width="3" height="15" fill="rgb(239,214,19)"/><text x="373.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.20%)</title><rect x="373" y="308" width="2" height="15" fill="rgb(242,177,20)"/><text x="376.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.20%)</title><rect x="373" y="324" width="2" height="15" fill="rgb(230,102,45)"/><text x="376.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.20%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(249,210,53)"/><text x="376.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (2 samples, 0.20%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(243,180,30)"/><text x="376.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.20%)</title><rect x="373" y="372" width="2" height="15" fill="rgb(246,105,39)"/><text x="376.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (56 samples, 5.63%)</title><rect x="310" y="196" width="66" height="15" fill="rgb(226,88,14)"/><text x="313.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (56 samples, 5.63%)</title><rect x="310" y="212" width="66" height="15" fill="rgb(252,47,49)"/><text x="313.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (56 samples, 5.63%)</title><rect x="310" y="228" width="66" height="15" fill="rgb(234,141,47)"/><text x="313.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (11 samples, 1.11%)</title><rect x="363" y="244" width="13" height="15" fill="rgb(246,226,31)"/><text x="366.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.01%)</title><rect x="364" y="260" width="12" height="15" fill="rgb(234,55,21)"/><text x="367.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.01%)</title><rect x="364" y="276" width="12" height="15" fill="rgb(212,6,23)"/><text x="367.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.01%)</title><rect x="364" y="292" width="12" height="15" fill="rgb(249,144,15)"/><text x="367.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="375" y="308" width="1" height="15" fill="rgb(235,62,46)"/><text x="378.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="375" y="324" width="1" height="15" fill="rgb(215,53,44)"/><text x="378.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.10%)</title><rect x="376" y="196" width="2" height="15" fill="rgb(214,229,40)"/><text x="379.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3275) (1 samples, 0.10%)</title><rect x="376" y="212" width="2" height="15" fill="rgb(247,126,53)"/><text x="379.00" y="222.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.10%)</title><rect x="379" y="244" width="1" height="15" fill="rgb(241,85,37)"/><text x="382.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:931) (1 samples, 0.10%)</title><rect x="380" y="308" width="1" height="15" fill="rgb(254,157,17)"/><text x="383.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.10%)</title><rect x="380" y="324" width="1" height="15" fill="rgb(240,210,8)"/><text x="383.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.10%)</title><rect x="380" y="340" width="1" height="15" fill="rgb(248,210,54)"/><text x="383.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.10%)</title><rect x="380" y="356" width="1" height="15" fill="rgb(212,139,23)"/><text x="383.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.10%)</title><rect x="380" y="372" width="1" height="15" fill="rgb(248,24,13)"/><text x="383.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.10%)</title><rect x="381" y="324" width="1" height="15" fill="rgb(210,138,4)"/><text x="384.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.10%)</title><rect x="381" y="340" width="1" height="15" fill="rgb(233,57,45)"/><text x="384.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.10%)</title><rect x="381" y="356" width="1" height="15" fill="rgb(210,139,18)"/><text x="384.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="381" y="372" width="1" height="15" fill="rgb(232,204,24)"/><text x="384.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.10%)</title><rect x="381" y="388" width="1" height="15" fill="rgb(236,204,22)"/><text x="384.00" y="398.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.10%)</title><rect x="382" y="372" width="1" height="15" fill="rgb(209,173,31)"/><text x="385.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.50%)</title><rect x="380" y="276" width="6" height="15" fill="rgb(254,157,32)"/><text x="383.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 0.50%)</title><rect x="380" y="292" width="6" height="15" fill="rgb(240,43,38)"/><text x="383.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.40%)</title><rect x="381" y="308" width="5" height="15" fill="rgb(233,220,21)"/><text x="384.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.30%)</title><rect x="382" y="324" width="4" height="15" fill="rgb(245,90,41)"/><text x="385.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.30%)</title><rect x="382" y="340" width="4" height="15" fill="rgb(239,61,46)"/><text x="385.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.30%)</title><rect x="382" y="356" width="4" height="15" fill="rgb(216,69,53)"/><text x="385.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.20%)</title><rect x="383" y="372" width="3" height="15" fill="rgb(250,150,47)"/><text x="386.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.10%)</title><rect x="385" y="388" width="1" height="15" fill="rgb(216,210,42)"/><text x="388.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.20%)</title><rect x="386" y="276" width="2" height="15" fill="rgb(221,39,29)"/><text x="389.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (20 samples, 2.01%)</title><rect x="379" y="228" width="23" height="15" fill="rgb(249,43,1)"/><text x="382.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (19 samples, 1.91%)</title><rect x="380" y="244" width="22" height="15" fill="rgb(237,198,9)"/><text x="383.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (19 samples, 1.91%)</title><rect x="380" y="260" width="22" height="15" fill="rgb(232,68,20)"/><text x="383.00" y="270.50">d..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 1.21%)</title><rect x="388" y="276" width="14" height="15" fill="rgb(244,218,33)"/><text x="391.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="402" y="260" width="2" height="15" fill="rgb(241,48,12)"/><text x="405.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.10%)</title><rect x="402" y="276" width="2" height="15" fill="rgb(206,25,51)"/><text x="405.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.10%)</title><rect x="402" y="292" width="2" height="15" fill="rgb(219,49,32)"/><text x="405.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.10%)</title><rect x="404" y="308" width="1" height="15" fill="rgb(241,167,40)"/><text x="407.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:778) (1 samples, 0.10%)</title><rect x="404" y="324" width="1" height="15" fill="rgb(222,225,14)"/><text x="407.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.20%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(243,168,5)"/><text x="407.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="405" y="308" width="1" height="15" fill="rgb(222,112,28)"/><text x="408.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2721) (1 samples, 0.10%)</title><rect x="405" y="324" width="1" height="15" fill="rgb(223,180,10)"/><text x="408.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="406" y="308" width="1" height="15" fill="rgb(238,67,22)"/><text x="409.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="406" y="324" width="1" height="15" fill="rgb(221,166,16)"/><text x="409.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="406" y="340" width="1" height="15" fill="rgb(213,196,42)"/><text x="409.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="407" y="340" width="1" height="15" fill="rgb(232,113,48)"/><text x="410.00" y="350.50"></text></g><g><title>0x7f723c643d50 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="408" y="356" width="3" height="15" fill="rgb(226,33,11)"/><text x="411.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.70%)</title><rect x="404" y="260" width="8" height="15" fill="rgb(253,209,34)"/><text x="407.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.70%)</title><rect x="404" y="276" width="8" height="15" fill="rgb(238,78,19)"/><text x="407.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.50%)</title><rect x="406" y="292" width="6" height="15" fill="rgb(240,127,29)"/><text x="409.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.40%)</title><rect x="407" y="308" width="5" height="15" fill="rgb(246,33,23)"/><text x="410.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.40%)</title><rect x="407" y="324" width="5" height="15" fill="rgb(219,193,13)"/><text x="410.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.30%)</title><rect x="408" y="340" width="4" height="15" fill="rgb(237,169,53)"/><text x="411.00" y="350.50"></text></g><g><title>0x7f723c643d97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="411" y="356" width="1" height="15" fill="rgb(227,168,15)"/><text x="414.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.91%)</title><rect x="402" y="244" width="11" height="15" fill="rgb(213,81,10)"/><text x="405.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.10%)</title><rect x="412" y="260" width="1" height="15" fill="rgb(227,165,25)"/><text x="415.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (10 samples, 1.01%)</title><rect x="402" y="228" width="12" height="15" fill="rgb(235,63,37)"/><text x="405.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.10%)</title><rect x="413" y="244" width="1" height="15" fill="rgb(236,81,25)"/><text x="416.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:473) (1 samples, 0.10%)</title><rect x="413" y="260" width="1" height="15" fill="rgb(220,33,24)"/><text x="416.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.10%)</title><rect x="414" y="228" width="1" height="15" fill="rgb(232,103,44)"/><text x="417.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="417" y="308" width="1" height="15" fill="rgb(242,115,8)"/><text x="420.00" y="318.50"></text></g><g><title>0x7f723c701151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="417" y="324" width="1" height="15" fill="rgb(219,225,16)"/><text x="420.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.20%)</title><rect x="417" y="244" width="2" height="15" fill="rgb(225,82,53)"/><text x="420.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.20%)</title><rect x="417" y="260" width="2" height="15" fill="rgb(219,122,12)"/><text x="420.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.20%)</title><rect x="417" y="276" width="2" height="15" fill="rgb(209,111,38)"/><text x="420.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.20%)</title><rect x="417" y="292" width="2" height="15" fill="rgb(254,148,31)"/><text x="420.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="418" y="308" width="1" height="15" fill="rgb(206,42,53)"/><text x="421.00" y="318.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.10%)</title><rect x="419" y="292" width="1" height="15" fill="rgb(206,209,4)"/><text x="422.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="419" y="308" width="1" height="15" fill="rgb(241,66,39)"/><text x="422.00" y="318.50"></text></g><g><title>0x7f721ea2833a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="420" y="308" width="3" height="15" fill="rgb(252,4,0)"/><text x="423.00" y="318.50"></text></g><g><title>0x7f721ea4a204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="423" y="324" width="1" height="15" fill="rgb(233,172,33)"/><text x="426.00" y="334.50"></text></g><g><title>0x7f721eb53c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="426" y="340" width="1" height="15" fill="rgb(244,20,46)"/><text x="429.00" y="350.50"></text></g><g><title>0x7f723c7a2e00 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="437" y="356" width="1" height="15" fill="rgb(222,119,51)"/><text x="440.00" y="366.50"></text></g><g><title>0x7f723c7a2e17 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="438" y="356" width="2" height="15" fill="rgb(253,37,1)"/><text x="441.00" y="366.50"></text></g><g><title>0x7f723c7a2e37 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="440" y="356" width="3" height="15" fill="rgb(240,64,15)"/><text x="443.00" y="366.50"></text></g><g><title>0x7f721ea4a214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.01%)</title><rect x="424" y="324" width="24" height="15" fill="rgb(249,142,42)"/><text x="427.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (17 samples, 1.71%)</title><rect x="427" y="340" width="21" height="15" fill="rgb(241,105,14)"/><text x="430.00" y="350.50"></text></g><g><title>0x7f723c7a2ea6 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="443" y="356" width="5" height="15" fill="rgb(205,179,33)"/><text x="446.00" y="366.50"></text></g><g><title>0x7f721ea2833d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (32 samples, 3.22%)</title><rect x="423" y="308" width="38" height="15" fill="rgb(207,61,32)"/><text x="426.00" y="318.50">0x7..</text></g><g><title>0x7f721ea4a228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.11%)</title><rect x="448" y="324" width="13" height="15" fill="rgb(213,134,21)"/><text x="451.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (36 samples, 3.62%)</title><rect x="420" y="292" width="43" height="15" fill="rgb(209,140,37)"/><text x="423.00" y="302.50">triv..</text></g><g><title>0x7f721ea28345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="461" y="308" width="2" height="15" fill="rgb(248,218,41)"/><text x="464.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (41 samples, 4.12%)</title><rect x="415" y="228" width="49" height="15" fill="rgb(218,107,30)"/><text x="418.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (38 samples, 3.82%)</title><rect x="419" y="244" width="45" height="15" fill="rgb(222,139,8)"/><text x="422.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (38 samples, 3.82%)</title><rect x="419" y="260" width="45" height="15" fill="rgb(207,181,35)"/><text x="422.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (38 samples, 3.82%)</title><rect x="419" y="276" width="45" height="15" fill="rgb(253,180,2)"/><text x="422.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.10%)</title><rect x="463" y="292" width="1" height="15" fill="rgb(229,137,35)"/><text x="466.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="463" y="308" width="1" height="15" fill="rgb(238,184,22)"/><text x="466.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (2 samples, 0.20%)</title><rect x="464" y="228" width="3" height="15" fill="rgb(214,147,10)"/><text x="467.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.20%)</title><rect x="468" y="308" width="2" height="15" fill="rgb(217,76,39)"/><text x="471.00" y="318.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.10%)</title><rect x="470" y="340" width="1" height="15" fill="rgb(220,88,26)"/><text x="473.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.20%)</title><rect x="470" y="324" width="2" height="15" fill="rgb(219,89,39)"/><text x="473.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3129) (1 samples, 0.10%)</title><rect x="471" y="340" width="1" height="15" fill="rgb(242,51,41)"/><text x="474.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (81 samples, 8.15%)</title><rect x="378" y="196" width="96" height="15" fill="rgb(230,140,42)"/><text x="381.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (81 samples, 8.15%)</title><rect x="378" y="212" width="96" height="15" fill="rgb(225,50,37)"/><text x="381.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 0.60%)</title><rect x="467" y="228" width="7" height="15" fill="rgb(225,91,20)"/><text x="470.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 0.60%)</title><rect x="467" y="244" width="7" height="15" fill="rgb(236,25,14)"/><text x="470.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.60%)</title><rect x="467" y="260" width="7" height="15" fill="rgb(243,76,26)"/><text x="470.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 0.60%)</title><rect x="467" y="276" width="7" height="15" fill="rgb(224,164,23)"/><text x="470.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.50%)</title><rect x="468" y="292" width="6" height="15" fill="rgb(210,168,28)"/><text x="471.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.30%)</title><rect x="470" y="308" width="4" height="15" fill="rgb(206,217,13)"/><text x="473.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:83) (1 samples, 0.10%)</title><rect x="472" y="324" width="2" height="15" fill="rgb(246,142,1)"/><text x="475.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.10%)</title><rect x="474" y="196" width="1" height="15" fill="rgb(246,207,33)"/><text x="477.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.10%)</title><rect x="474" y="212" width="1" height="15" fill="rgb(225,174,36)"/><text x="477.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.10%)</title><rect x="474" y="228" width="1" height="15" fill="rgb(216,91,26)"/><text x="477.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.10%)</title><rect x="474" y="244" width="1" height="15" fill="rgb(232,17,9)"/><text x="477.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.10%)</title><rect x="474" y="260" width="1" height="15" fill="rgb(213,28,50)"/><text x="477.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (146 samples, 14.69%)</title><rect x="303" y="180" width="173" height="15" fill="rgb(231,171,38)"/><text x="306.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:386) (1 samples, 0.10%)</title><rect x="475" y="196" width="1" height="15" fill="rgb(209,93,21)"/><text x="478.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.20%)</title><rect x="476" y="180" width="2" height="15" fill="rgb(250,50,14)"/><text x="479.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.20%)</title><rect x="478" y="180" width="3" height="15" fill="rgb(221,16,40)"/><text x="481.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.50%)</title><rect x="481" y="180" width="6" height="15" fill="rgb(232,34,50)"/><text x="484.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (168 samples, 16.90%)</title><rect x="288" y="164" width="200" height="15" fill="rgb(250,207,48)"/><text x="291.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.10%)</title><rect x="487" y="180" width="1" height="15" fill="rgb(235,41,45)"/><text x="490.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:45) (180 samples, 18.11%)</title><rect x="279" y="52" width="214" height="15" fill="rgb(224,98,40)"/><text x="282.00" y="62.50">&lt;module&gt; (bench_LogisticRegr..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:44) (180 samples, 18.11%)</title><rect x="279" y="68" width="214" height="15" fill="rgb(209,215,38)"/><text x="282.00" y="78.50">profile_pyrt (bench_Logistic..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (180 samples, 18.11%)</title><rect x="279" y="84" width="214" height="15" fill="rgb(223,12,22)"/><text x="282.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (180 samples, 18.11%)</title><rect x="279" y="100" width="214" height="15" fill="rgb(232,58,50)"/><text x="282.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (178 samples, 17.91%)</title><rect x="281" y="116" width="212" height="15" fill="rgb(254,104,37)"/><text x="284.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (178 samples, 17.91%)</title><rect x="281" y="132" width="212" height="15" fill="rgb(217,133,21)"/><text x="284.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (177 samples, 17.81%)</title><rect x="283" y="148" width="210" height="15" fill="rgb(225,227,36)"/><text x="286.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.40%)</title><rect x="488" y="164" width="5" height="15" fill="rgb(224,154,51)"/><text x="491.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.10%)</title><rect x="491" y="180" width="2" height="15" fill="rgb(225,4,17)"/><text x="494.00" y="190.50"></text></g><g><title>0x7f723c623eb0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="494" y="116" width="1" height="15" fill="rgb(205,89,19)"/><text x="497.00" y="126.50"></text></g><g><title>0x7f723c622c2d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="494" y="132" width="1" height="15" fill="rgb(232,75,6)"/><text x="497.00" y="142.50"></text></g><g><title>0x7f71fce8cff9 (?) (1 samples, 0.10%)</title><rect x="495" y="212" width="1" height="15" fill="rgb(216,168,34)"/><text x="498.00" y="222.50"></text></g><g><title>0x7f71fce87ef6 (?) (1 samples, 0.10%)</title><rect x="495" y="228" width="1" height="15" fill="rgb(207,83,19)"/><text x="498.00" y="238.50"></text></g><g><title>0x7f71fce7cc99 (?) (1 samples, 0.10%)</title><rect x="495" y="244" width="1" height="15" fill="rgb(230,226,23)"/><text x="498.00" y="254.50"></text></g><g><title>0x7f71fce9ac7b (?) (1 samples, 0.10%)</title><rect x="495" y="260" width="1" height="15" fill="rgb(220,6,31)"/><text x="498.00" y="270.50"></text></g><g><title>0x7f71fce7254e (?) (1 samples, 0.10%)</title><rect x="495" y="276" width="1" height="15" fill="rgb(221,180,49)"/><text x="498.00" y="286.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="496" y="340" width="1" height="15" fill="rgb(240,90,22)"/><text x="499.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="496" y="356" width="1" height="15" fill="rgb(226,200,1)"/><text x="499.00" y="366.50"></text></g><g><title>0x7f723c624d27 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="499" y="388" width="1" height="15" fill="rgb(219,227,46)"/><text x="502.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="496" y="260" width="5" height="15" fill="rgb(231,56,44)"/><text x="499.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="496" y="276" width="5" height="15" fill="rgb(205,72,29)"/><text x="499.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="496" y="292" width="5" height="15" fill="rgb(222,148,16)"/><text x="499.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="496" y="308" width="5" height="15" fill="rgb(230,65,53)"/><text x="499.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="496" y="324" width="5" height="15" fill="rgb(225,44,16)"/><text x="499.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="497" y="340" width="4" height="15" fill="rgb(205,143,25)"/><text x="500.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.30%)</title><rect x="497" y="356" width="4" height="15" fill="rgb(245,134,53)"/><text x="500.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.20%)</title><rect x="499" y="372" width="2" height="15" fill="rgb(220,19,43)"/><text x="502.00" y="382.50"></text></g><g><title>0x7f723c62508c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="500" y="388" width="1" height="15" fill="rgb(251,58,28)"/><text x="503.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="501" y="260" width="1" height="15" fill="rgb(252,49,8)"/><text x="504.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:18) (9 samples, 0.91%)</title><rect x="493" y="100" width="10" height="15" fill="rgb(253,108,36)"/><text x="496.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 0.70%)</title><rect x="495" y="116" width="8" height="15" fill="rgb(231,176,23)"/><text x="498.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (7 samples, 0.70%)</title><rect x="495" y="132" width="8" height="15" fill="rgb(228,16,14)"/><text x="498.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 0.70%)</title><rect x="495" y="148" width="8" height="15" fill="rgb(241,189,17)"/><text x="498.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (7 samples, 0.70%)</title><rect x="495" y="164" width="8" height="15" fill="rgb(226,27,13)"/><text x="498.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (7 samples, 0.70%)</title><rect x="495" y="180" width="8" height="15" fill="rgb(243,60,26)"/><text x="498.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (7 samples, 0.70%)</title><rect x="495" y="196" width="8" height="15" fill="rgb(210,145,5)"/><text x="498.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.60%)</title><rect x="496" y="212" width="7" height="15" fill="rgb(229,208,23)"/><text x="499.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.60%)</title><rect x="496" y="228" width="7" height="15" fill="rgb(227,202,22)"/><text x="499.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.60%)</title><rect x="496" y="244" width="7" height="15" fill="rgb(214,129,5)"/><text x="499.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="502" y="260" width="1" height="15" fill="rgb(219,76,37)"/><text x="505.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="502" y="276" width="1" height="15" fill="rgb(213,185,25)"/><text x="505.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="502" y="292" width="1" height="15" fill="rgb(214,27,4)"/><text x="505.00" y="302.50"></text></g><g><title>0x7f723c623b05 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="554" y="116" width="2" height="15" fill="rgb(247,37,9)"/><text x="557.00" y="126.50"></text></g><g><title>0x7f723c622aa4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="554" y="132" width="2" height="15" fill="rgb(236,70,4)"/><text x="557.00" y="142.50"></text></g><g><title>0x7f723c622bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="556" y="132" width="1" height="15" fill="rgb(223,35,37)"/><text x="559.00" y="142.50"></text></g><g><title>0x7f723c622bc6 (libc-2.29.so) (6 samples, 0.60%)</title><rect x="557" y="132" width="7" height="15" fill="rgb(254,113,39)"/><text x="560.00" y="142.50"></text></g><g><title>0x7f723c622bd1 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="564" y="132" width="2" height="15" fill="rgb(218,145,1)"/><text x="567.00" y="142.50"></text></g><g><title>0x7f723c622bfd (libc-2.29.so) (3 samples, 0.30%)</title><rect x="566" y="132" width="4" height="15" fill="rgb(219,86,12)"/><text x="569.00" y="142.50"></text></g><g><title>0x7f723c622c04 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="570" y="132" width="1" height="15" fill="rgb(253,224,14)"/><text x="573.00" y="142.50"></text></g><g><title>0x7f723c622c19 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="571" y="132" width="1" height="15" fill="rgb(229,128,4)"/><text x="574.00" y="142.50"></text></g><g><title>0x7f723c622c20 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="572" y="132" width="3" height="15" fill="rgb(244,127,33)"/><text x="575.00" y="142.50"></text></g><g><title>0x7f723c622c25 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="575" y="132" width="1" height="15" fill="rgb(249,35,4)"/><text x="578.00" y="142.50"></text></g><g><title>0x7f723c622c2d (libc-2.29.so) (2 samples, 0.20%)</title><rect x="576" y="132" width="2" height="15" fill="rgb(229,207,26)"/><text x="579.00" y="142.50"></text></g><g><title>0x7f723c622c36 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="578" y="132" width="1" height="15" fill="rgb(215,210,42)"/><text x="581.00" y="142.50"></text></g><g><title>0x7f723c622c49 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="579" y="132" width="2" height="15" fill="rgb(250,123,1)"/><text x="582.00" y="142.50"></text></g><g><title>0x7f723c622c4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="581" y="132" width="1" height="15" fill="rgb(228,222,19)"/><text x="584.00" y="142.50"></text></g><g><title>0x7f723c622c5a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="582" y="132" width="1" height="15" fill="rgb(238,113,3)"/><text x="585.00" y="142.50"></text></g><g><title>0x7f723c622acd (libc-2.29.so) (1 samples, 0.10%)</title><rect x="583" y="148" width="1" height="15" fill="rgb(237,192,51)"/><text x="586.00" y="158.50"></text></g><g><title>0x7f723c622c73 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="583" y="132" width="2" height="15" fill="rgb(210,56,21)"/><text x="586.00" y="142.50"></text></g><g><title>0x7f723c622ad5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="584" y="148" width="1" height="15" fill="rgb(217,130,8)"/><text x="587.00" y="158.50"></text></g><g><title>0x7f723c622c98 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="585" y="132" width="3" height="15" fill="rgb(245,134,35)"/><text x="588.00" y="142.50"></text></g><g><title>0x7f723c622aa8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="589" y="148" width="1" height="15" fill="rgb(236,167,18)"/><text x="592.00" y="158.50"></text></g><g><title>0x7f723c622ac7 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="590" y="148" width="1" height="15" fill="rgb(254,171,1)"/><text x="593.00" y="158.50"></text></g><g><title>0x7f723c622acd (libc-2.29.so) (1 samples, 0.10%)</title><rect x="591" y="148" width="1" height="15" fill="rgb(218,174,47)"/><text x="594.00" y="158.50"></text></g><g><title>0x7f723c623eb0 (libc-2.29.so) (32 samples, 3.22%)</title><rect x="556" y="116" width="38" height="15" fill="rgb(217,108,15)"/><text x="559.00" y="126.50">0x7..</text></g><g><title>0x7f723c622ca7 (libc-2.29.so) (5 samples, 0.50%)</title><rect x="588" y="132" width="6" height="15" fill="rgb(214,128,9)"/><text x="591.00" y="142.50"></text></g><g><title>0x7f723c622ad5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="592" y="148" width="2" height="15" fill="rgb(230,138,3)"/><text x="595.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="594" y="116" width="1" height="15" fill="rgb(238,116,49)"/><text x="597.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="594" y="132" width="1" height="15" fill="rgb(205,145,19)"/><text x="597.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="594" y="148" width="1" height="15" fill="rgb(222,26,23)"/><text x="597.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="594" y="164" width="1" height="15" fill="rgb(238,40,32)"/><text x="597.00" y="174.50"></text></g><g><title>0x7f723c623f71 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="594" y="180" width="1" height="15" fill="rgb(218,190,54)"/><text x="597.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.10%)</title><rect x="600" y="148" width="1" height="15" fill="rgb(246,37,40)"/><text x="603.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 0.30%)</title><rect x="601" y="148" width="3" height="15" fill="rgb(248,147,45)"/><text x="604.00" y="158.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="608" y="260" width="1" height="15" fill="rgb(208,201,14)"/><text x="611.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="608" y="276" width="1" height="15" fill="rgb(226,213,38)"/><text x="611.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="608" y="292" width="1" height="15" fill="rgb(231,175,19)"/><text x="611.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.30%)</title><rect x="607" y="196" width="3" height="15" fill="rgb(254,88,37)"/><text x="610.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.30%)</title><rect x="607" y="212" width="3" height="15" fill="rgb(222,63,39)"/><text x="610.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="608" y="228" width="2" height="15" fill="rgb(222,125,42)"/><text x="611.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="608" y="244" width="2" height="15" fill="rgb(254,10,20)"/><text x="611.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="609" y="260" width="1" height="15" fill="rgb(224,28,28)"/><text x="612.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="609" y="276" width="1" height="15" fill="rgb(224,38,50)"/><text x="612.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="609" y="292" width="1" height="15" fill="rgb(225,61,29)"/><text x="612.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="613" y="228" width="1" height="15" fill="rgb(247,15,29)"/><text x="616.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="613" y="244" width="1" height="15" fill="rgb(238,151,29)"/><text x="616.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="615" y="292" width="1" height="15" fill="rgb(253,27,39)"/><text x="618.00" y="302.50"></text></g><g><title>0x7f723c623906 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="617" y="324" width="1" height="15" fill="rgb(223,102,50)"/><text x="620.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="621" y="468" width="1" height="15" fill="rgb(213,72,42)"/><text x="624.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="621" y="484" width="1" height="15" fill="rgb(231,16,13)"/><text x="624.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="621" y="500" width="1" height="15" fill="rgb(250,77,14)"/><text x="624.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="621" y="516" width="1" height="15" fill="rgb(247,157,39)"/><text x="624.00" y="526.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="618" y="340" width="5" height="15" fill="rgb(242,12,29)"/><text x="621.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="618" y="356" width="5" height="15" fill="rgb(220,197,13)"/><text x="621.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="618" y="372" width="5" height="15" fill="rgb(225,39,20)"/><text x="621.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="618" y="388" width="5" height="15" fill="rgb(245,106,40)"/><text x="621.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="618" y="404" width="5" height="15" fill="rgb(216,169,49)"/><text x="621.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="620" y="420" width="3" height="15" fill="rgb(254,6,9)"/><text x="623.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="620" y="436" width="3" height="15" fill="rgb(231,190,43)"/><text x="623.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="620" y="452" width="3" height="15" fill="rgb(246,106,23)"/><text x="623.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="622" y="468" width="1" height="15" fill="rgb(216,51,22)"/><text x="625.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="622" y="484" width="1" height="15" fill="rgb(239,161,46)"/><text x="625.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="340" width="1" height="15" fill="rgb(214,28,51)"/><text x="626.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="356" width="1" height="15" fill="rgb(241,132,23)"/><text x="626.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="372" width="1" height="15" fill="rgb(233,166,6)"/><text x="626.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="388" width="1" height="15" fill="rgb(249,82,5)"/><text x="626.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="404" width="1" height="15" fill="rgb(231,144,2)"/><text x="626.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="420" width="1" height="15" fill="rgb(221,87,28)"/><text x="626.00" y="430.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="623" y="436" width="1" height="15" fill="rgb(247,12,44)"/><text x="626.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="623" y="452" width="1" height="15" fill="rgb(237,176,17)"/><text x="626.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="623" y="468" width="1" height="15" fill="rgb(238,68,7)"/><text x="626.00" y="478.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="624" y="340" width="2" height="15" fill="rgb(224,171,43)"/><text x="627.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="624" y="356" width="2" height="15" fill="rgb(235,2,25)"/><text x="627.00" y="366.50"></text></g><g><title>0x7f723c643d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="691" y="372" width="1" height="15" fill="rgb(217,137,48)"/><text x="694.00" y="382.50"></text></g><g><title>0x7f723c643dae (libc-2.29.so) (1 samples, 0.10%)</title><rect x="692" y="372" width="1" height="15" fill="rgb(228,116,32)"/><text x="695.00" y="382.50"></text></g><g><title>0x7f723c7a2e0e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="693" y="372" width="1" height="15" fill="rgb(247,167,14)"/><text x="696.00" y="382.50"></text></g><g><title>0x7f723c7a2e14 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="694" y="372" width="3" height="15" fill="rgb(249,225,53)"/><text x="697.00" y="382.50"></text></g><g><title>0x7f723c7a2e4e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="697" y="372" width="1" height="15" fill="rgb(251,126,11)"/><text x="700.00" y="382.50"></text></g><g><title>0x7f723c7a2e53 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="698" y="372" width="1" height="15" fill="rgb(240,198,23)"/><text x="701.00" y="382.50"></text></g><g><title>0x7f723c7a2e5f (libm-2.29.so) (1 samples, 0.10%)</title><rect x="699" y="372" width="1" height="15" fill="rgb(231,217,43)"/><text x="702.00" y="382.50"></text></g><g><title>0x7f723c7a2e6d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="700" y="372" width="2" height="15" fill="rgb(212,93,8)"/><text x="703.00" y="382.50"></text></g><g><title>0x7f723c7a2e7e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="702" y="372" width="1" height="15" fill="rgb(224,218,23)"/><text x="705.00" y="382.50"></text></g><g><title>0x7f723c7a2e92 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="703" y="372" width="1" height="15" fill="rgb(205,202,16)"/><text x="706.00" y="382.50"></text></g><g><title>0x7f723c7a2e96 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="704" y="372" width="4" height="15" fill="rgb(224,3,44)"/><text x="707.00" y="382.50"></text></g><g><title>0x7f723c7a2e9e (libm-2.29.so) (2 samples, 0.20%)</title><rect x="708" y="372" width="2" height="15" fill="rgb(251,211,11)"/><text x="711.00" y="382.50"></text></g><g><title>0x7f723c7a2ea2 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="710" y="372" width="5" height="15" fill="rgb(210,197,24)"/><text x="713.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 7.85%)</title><rect x="626" y="340" width="92" height="15" fill="rgb(233,183,36)"/><text x="629.00" y="350.50">onnxruntim..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 4.93%)</title><rect x="660" y="356" width="58" height="15" fill="rgb(211,189,16)"/><text x="663.00" y="366.50">onnxru..</text></g><g><title>0x7f723c7a2ea6 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="715" y="372" width="3" height="15" fill="rgb(216,106,36)"/><text x="718.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.92%)</title><rect x="718" y="340" width="35" height="15" fill="rgb(229,154,15)"/><text x="721.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.92%)</title><rect x="718" y="356" width="35" height="15" fill="rgb(254,217,20)"/><text x="721.00" y="366.50">on..</text></g><g><title>0x7f722c0efd50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="779" y="372" width="1" height="15" fill="rgb(208,56,32)"/><text x="782.00" y="382.50"></text></g><g><title>0x7f723c624b1c (libc-2.29.so) (2 samples, 0.20%)</title><rect x="867" y="388" width="2" height="15" fill="rgb(235,140,36)"/><text x="870.00" y="398.50"></text></g><g><title>0x7f723c624b24 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="869" y="388" width="1" height="15" fill="rgb(233,182,24)"/><text x="872.00" y="398.50"></text></g><g><title>0x7f723c624b39 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="870" y="388" width="4" height="15" fill="rgb(218,151,28)"/><text x="873.00" y="398.50"></text></g><g><title>0x7f723c624b61 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="874" y="388" width="1" height="15" fill="rgb(210,183,16)"/><text x="877.00" y="398.50"></text></g><g><title>0x7f723c624d27 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="875" y="388" width="1" height="15" fill="rgb(252,115,39)"/><text x="878.00" y="398.50"></text></g><g><title>0x7f723c624d54 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="876" y="388" width="2" height="15" fill="rgb(247,82,13)"/><text x="879.00" y="398.50"></text></g><g><title>0x7f723c624db4 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="878" y="388" width="3" height="15" fill="rgb(254,163,11)"/><text x="881.00" y="398.50"></text></g><g><title>0x7f723c624dd2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="881" y="388" width="1" height="15" fill="rgb(238,94,10)"/><text x="884.00" y="398.50"></text></g><g><title>0x7f723c624dec (libc-2.29.so) (1 samples, 0.10%)</title><rect x="882" y="388" width="1" height="15" fill="rgb(239,107,9)"/><text x="885.00" y="398.50"></text></g><g><title>0x7f723c624e07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="883" y="388" width="1" height="15" fill="rgb(225,77,18)"/><text x="886.00" y="398.50"></text></g><g><title>0x7f723c624fde (libc-2.29.so) (1 samples, 0.10%)</title><rect x="884" y="388" width="2" height="15" fill="rgb(232,163,54)"/><text x="887.00" y="398.50"></text></g><g><title>0x7f723c624fe6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="886" y="388" width="1" height="15" fill="rgb(224,178,14)"/><text x="889.00" y="398.50"></text></g><g><title>0x7f723c625040 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="887" y="388" width="1" height="15" fill="rgb(221,104,5)"/><text x="890.00" y="398.50"></text></g><g><title>0x7f723c625050 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="888" y="388" width="2" height="15" fill="rgb(249,81,24)"/><text x="891.00" y="398.50"></text></g><g><title>0x7f723c625064 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="890" y="388" width="4" height="15" fill="rgb(228,205,29)"/><text x="893.00" y="398.50"></text></g><g><title>0x7f723c625097 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="894" y="388" width="3" height="15" fill="rgb(236,116,13)"/><text x="897.00" y="398.50"></text></g><g><title>0x7f723c625384 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="897" y="388" width="2" height="15" fill="rgb(235,78,28)"/><text x="900.00" y="398.50"></text></g><g><title>0x7f723c625395 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="899" y="388" width="1" height="15" fill="rgb(247,192,25)"/><text x="902.00" y="398.50"></text></g><g><title>0x7f723c6253ae (libc-2.29.so) (1 samples, 0.10%)</title><rect x="900" y="388" width="1" height="15" fill="rgb(240,15,54)"/><text x="903.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (105 samples, 10.56%)</title><rect x="779" y="356" width="124" height="15" fill="rgb(247,222,53)"/><text x="782.00" y="366.50">operator new (l..</text></g><g><title>malloc (libc-2.29.so) (104 samples, 10.46%)</title><rect x="780" y="372" width="123" height="15" fill="rgb(249,229,49)"/><text x="783.00" y="382.50">malloc (libc-2...</text></g><g><title>0x7f723c6253c4 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="901" y="388" width="2" height="15" fill="rgb(211,82,46)"/><text x="904.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="903" y="356" width="3" height="15" fill="rgb(242,25,37)"/><text x="906.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.21%)</title><rect x="906" y="356" width="14" height="15" fill="rgb(234,148,48)"/><text x="909.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="916" y="372" width="4" height="15" fill="rgb(218,124,6)"/><text x="919.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.70%)</title><rect x="920" y="356" width="8" height="15" fill="rgb(236,154,3)"/><text x="923.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 27.06%)</title><rect x="615" y="276" width="319" height="15" fill="rgb(248,144,18)"/><text x="618.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 26.96%)</title><rect x="616" y="292" width="318" height="15" fill="rgb(221,173,25)"/><text x="619.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 26.96%)</title><rect x="616" y="308" width="318" height="15" fill="rgb(252,62,10)"/><text x="619.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (266 samples, 26.76%)</title><rect x="618" y="324" width="316" height="15" fill="rgb(208,41,28)"/><text x="621.00" y="334.50">onnxruntime::SequentialExecutor::Execute (..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (153 samples, 15.39%)</title><rect x="753" y="340" width="181" height="15" fill="rgb(254,12,17)"/><text x="756.00" y="350.50">onnxruntime::ml::ZipMap..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.50%)</title><rect x="928" y="356" width="6" height="15" fill="rgb(207,174,14)"/><text x="931.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (270 samples, 27.16%)</title><rect x="615" y="260" width="320" height="15" fill="rgb(215,22,8)"/><text x="618.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="934" y="276" width="1" height="15" fill="rgb(209,180,0)"/><text x="937.00" y="286.50"></text></g><g><title>onnxruntime::SequenceType&lt;onnxruntime::TensorSeq&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="935" y="260" width="2" height="15" fill="rgb(247,191,23)"/><text x="938.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="937" y="276" width="1" height="15" fill="rgb(230,42,31)"/><text x="940.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="937" y="260" width="2" height="15" fill="rgb(243,33,12)"/><text x="940.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="938" y="276" width="1" height="15" fill="rgb(230,211,15)"/><text x="941.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="938" y="292" width="1" height="15" fill="rgb(251,99,46)"/><text x="941.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="938" y="308" width="1" height="15" fill="rgb(233,182,7)"/><text x="941.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="938" y="324" width="1" height="15" fill="rgb(246,71,53)"/><text x="941.00" y="334.50"></text></g><g><title>0x7f723c622b9b (libc-2.29.so) (2 samples, 0.20%)</title><rect x="941" y="388" width="3" height="15" fill="rgb(223,115,38)"/><text x="944.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (4 samples, 0.40%)</title><rect x="940" y="324" width="5" height="15" fill="rgb(254,167,31)"/><text x="943.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (4 samples, 0.40%)</title><rect x="940" y="340" width="5" height="15" fill="rgb(233,12,41)"/><text x="943.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.40%)</title><rect x="940" y="356" width="5" height="15" fill="rgb(230,115,35)"/><text x="943.00" y="366.50"></text></g><g><title>0x7f723c625028 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="941" y="372" width="4" height="15" fill="rgb(224,102,36)"/><text x="944.00" y="382.50"></text></g><g><title>0x7f723c622bc6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="944" y="388" width="1" height="15" fill="rgb(231,214,6)"/><text x="947.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (5 samples, 0.50%)</title><rect x="940" y="292" width="6" height="15" fill="rgb(219,200,14)"/><text x="943.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (5 samples, 0.50%)</title><rect x="940" y="308" width="6" height="15" fill="rgb(209,224,18)"/><text x="943.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.10%)</title><rect x="945" y="324" width="1" height="15" fill="rgb(205,69,36)"/><text x="948.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.70%)</title><rect x="939" y="260" width="8" height="15" fill="rgb(218,30,14)"/><text x="942.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (6 samples, 0.60%)</title><rect x="940" y="276" width="7" height="15" fill="rgb(207,195,13)"/><text x="943.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="946" y="292" width="1" height="15" fill="rgb(208,76,43)"/><text x="949.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="946" y="308" width="1" height="15" fill="rgb(228,115,21)"/><text x="949.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="946" y="324" width="1" height="15" fill="rgb(218,20,1)"/><text x="949.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.10%)</title><rect x="946" y="340" width="1" height="15" fill="rgb(207,217,18)"/><text x="949.00" y="350.50"></text></g><g><title>0x7f71fce54870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1074" y="276" width="2" height="15" fill="rgb(220,222,9)"/><text x="1077.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 3.02%)</title><rect x="1076" y="276" width="35" height="15" fill="rgb(213,136,33)"/><text x="1079.00" y="286.50">py..</text></g><g><title>0x7f71fce54310 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1110" y="292" width="1" height="15" fill="rgb(213,29,29)"/><text x="1113.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 14.29%)</title><rect x="947" y="260" width="169" height="15" fill="rgb(228,130,33)"/><text x="950.00" y="270.50">pybind11::detail::map..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (4 samples, 0.40%)</title><rect x="1111" y="276" width="5" height="15" fill="rgb(229,3,22)"/><text x="1114.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="276" width="1" height="15" fill="rgb(249,20,15)"/><text x="1119.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="292" width="1" height="15" fill="rgb(237,100,2)"/><text x="1119.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="308" width="1" height="15" fill="rgb(243,130,22)"/><text x="1119.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="324" width="1" height="15" fill="rgb(234,65,53)"/><text x="1119.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="340" width="1" height="15" fill="rgb(217,83,8)"/><text x="1119.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="356" width="1" height="15" fill="rgb(208,96,2)"/><text x="1119.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="372" width="1" height="15" fill="rgb(242,177,24)"/><text x="1119.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1116" y="388" width="1" height="15" fill="rgb(237,144,5)"/><text x="1119.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1116" y="404" width="1" height="15" fill="rgb(237,183,4)"/><text x="1119.00" y="414.50"></text></g><g><title>0x7f71fce540f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1117" y="292" width="1" height="15" fill="rgb(244,33,21)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f723c62391e (libc-2.29.so) (3 samples, 0.30%)</title><rect x="1118" y="292" width="4" height="15" fill="rgb(235,211,43)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7f723c62392c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1122" y="292" width="1" height="15" fill="rgb(230,145,18)"/><text x="1125.00" y="302.50"></text></g><g><title>0x7f723c623945 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1123" y="292" width="1" height="15" fill="rgb(220,83,53)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7f723c623961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1124" y="292" width="1" height="15" fill="rgb(220,137,22)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f723c62399b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1125" y="292" width="2" height="15" fill="rgb(248,80,6)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f723c6239b3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1127" y="292" width="1" height="15" fill="rgb(220,29,39)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7f723c6239d3 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="1128" y="292" width="3" height="15" fill="rgb(206,7,16)"/><text x="1131.00" y="302.50"></text></g><g><title>0x7f723c623a4b (libc-2.29.so) (3 samples, 0.30%)</title><rect x="1131" y="292" width="4" height="15" fill="rgb(209,201,0)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7f723c623a51 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1135" y="292" width="1" height="15" fill="rgb(218,201,0)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f723c623cf0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1136" y="292" width="1" height="15" fill="rgb(238,207,14)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f723c623d07 (libc-2.29.so) (18 samples, 1.81%)</title><rect x="1137" y="292" width="22" height="15" fill="rgb(210,190,10)"/><text x="1140.00" y="302.50">0..</text></g><g><title>0x7f723c623d13 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(210,157,8)"/><text x="1162.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 0.60%)</title><rect x="1160" y="292" width="7" height="15" fill="rgb(245,210,20)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f723c62392c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1169" y="308" width="2" height="15" fill="rgb(251,17,48)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f723c623991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1171" y="308" width="1" height="15" fill="rgb(233,155,15)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7f723c623a33 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(206,180,16)"/><text x="1175.00" y="318.50"></text></g><g><title>0x7f723c623d07 (libc-2.29.so) (6 samples, 0.60%)</title><rect x="1174" y="308" width="7" height="15" fill="rgb(234,192,29)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (480 samples, 48.29%)</title><rect x="614" y="244" width="570" height="15" fill="rgb(232,40,3)"/><text x="617.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 5.73%)</title><rect x="1116" y="260" width="68" height="15" fill="rgb(236,187,33)"/><text x="1119.00" y="270.50">std::ve..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 5.63%)</title><rect x="1117" y="276" width="67" height="15" fill="rgb(225,96,0)"/><text x="1120.00" y="286.50">onnxrun..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.41%)</title><rect x="1167" y="292" width="17" height="15" fill="rgb(230,189,36)"/><text x="1170.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="1181" y="308" width="3" height="15" fill="rgb(212,33,47)"/><text x="1184.00" y="318.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(218,157,50)"/><text x="1187.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1185" y="260" width="1" height="15" fill="rgb(246,106,51)"/><text x="1188.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(241,151,1)"/><text x="1189.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(221,32,32)"/><text x="1189.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(242,52,12)"/><text x="1189.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (492 samples, 49.50%)</title><rect x="604" y="164" width="584" height="15" fill="rgb(223,145,12)"/><text x="607.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (491 samples, 49.40%)</title><rect x="605" y="180" width="583" height="15" fill="rgb(249,192,25)"/><text x="608.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (487 samples, 48.99%)</title><rect x="610" y="196" width="578" height="15" fill="rgb(230,164,4)"/><text x="613.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (485 samples, 48.79%)</title><rect x="613" y="212" width="575" height="15" fill="rgb(235,180,16)"/><text x="616.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (484 samples, 48.69%)</title><rect x="614" y="228" width="574" height="15" fill="rgb(241,215,1)"/><text x="617.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(215,10,10)"/><text x="1190.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(231,48,20)"/><text x="1190.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(208,106,2)"/><text x="1190.00" y="286.50"></text></g><g><title>all (994 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,142,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:52) (587 samples, 59.05%)</title><rect x="493" y="52" width="697" height="15" fill="rgb(242,203,46)"/><text x="496.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:51) (587 samples, 59.05%)</title><rect x="493" y="68" width="697" height="15" fill="rgb(207,222,34)"/><text x="496.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (587 samples, 59.05%)</title><rect x="493" y="84" width="697" height="15" fill="rgb(239,58,12)"/><text x="496.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (578 samples, 58.15%)</title><rect x="503" y="100" width="687" height="15" fill="rgb(249,226,30)"/><text x="506.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (501 samples, 50.40%)</title><rect x="595" y="116" width="595" height="15" fill="rgb(228,21,36)"/><text x="598.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (498 samples, 50.10%)</title><rect x="598" y="132" width="592" height="15" fill="rgb(218,3,42)"/><text x="601.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (493 samples, 49.60%)</title><rect x="604" y="148" width="586" height="15" fill="rgb(207,17,51)"/><text x="607.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.10%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(235,182,53)"/><text x="1191.00" y="174.50"></text></g></g></svg>