<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2726" onload="init(evt)" viewBox="0 0 1200 2726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2726" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2709.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2709.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:28) (1 samples, 0.51%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(207,102,15)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.51%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(209,58,0)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.51%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(210,34,32)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.51%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(225,7,34)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(241,60,51)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(207,77,47)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(238,73,3)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(254,211,44)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(245,96,15)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.51%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(241,120,9)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(240,16,1)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(215,175,26)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(238,195,11)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(236,37,54)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(241,144,41)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:402) (1 samples, 0.51%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(235,87,48)"/><text x="13.00" y="334.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.51%)</title><rect x="21" y="148" width="6" height="15" fill="rgb(206,102,18)"/><text x="24.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.51%)</title><rect x="21" y="164" width="6" height="15" fill="rgb(249,190,11)"/><text x="24.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.51%)</title><rect x="21" y="180" width="6" height="15" fill="rgb(235,168,39)"/><text x="24.00" y="190.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.51%)</title><rect x="27" y="164" width="6" height="15" fill="rgb(205,106,7)"/><text x="30.00" y="174.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:18) (5 samples, 2.53%)</title><rect x="15" y="100" width="30" height="15" fill="rgb(231,213,21)"/><text x="18.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 2.53%)</title><rect x="15" y="116" width="30" height="15" fill="rgb(208,172,29)"/><text x="18.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 2.02%)</title><rect x="21" y="132" width="24" height="15" fill="rgb(235,173,34)"/><text x="24.00" y="142.50">&lt;..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 1.52%)</title><rect x="27" y="148" width="18" height="15" fill="rgb(211,209,28)"/><text x="30.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 1.01%)</title><rect x="33" y="164" width="12" height="15" fill="rgb(216,126,40)"/><text x="36.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.51%)</title><rect x="39" y="180" width="6" height="15" fill="rgb(220,121,16)"/><text x="42.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.51%)</title><rect x="39" y="196" width="6" height="15" fill="rgb(210,195,7)"/><text x="42.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.51%)</title><rect x="39" y="212" width="6" height="15" fill="rgb(219,72,21)"/><text x="42.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.51%)</title><rect x="39" y="228" width="6" height="15" fill="rgb(250,2,6)"/><text x="42.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.51%)</title><rect x="39" y="244" width="6" height="15" fill="rgb(234,29,4)"/><text x="42.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.51%)</title><rect x="39" y="260" width="6" height="15" fill="rgb(251,53,23)"/><text x="42.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.51%)</title><rect x="39" y="276" width="6" height="15" fill="rgb(232,46,25)"/><text x="42.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.51%)</title><rect x="39" y="292" width="6" height="15" fill="rgb(214,128,50)"/><text x="42.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.51%)</title><rect x="39" y="308" width="6" height="15" fill="rgb(243,160,44)"/><text x="42.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.51%)</title><rect x="39" y="324" width="6" height="15" fill="rgb(222,125,13)"/><text x="42.00" y="334.50"></text></g><g><title>0x7f1a9a0db762 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="39" y="340" width="6" height="15" fill="rgb(233,211,7)"/><text x="42.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:22) (1 samples, 0.51%)</title><rect x="45" y="100" width="6" height="15" fill="rgb(253,19,12)"/><text x="48.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.51%)</title><rect x="81" y="164" width="6" height="15" fill="rgb(207,207,11)"/><text x="84.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.51%)</title><rect x="81" y="180" width="6" height="15" fill="rgb(231,202,6)"/><text x="84.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.51%)</title><rect x="99" y="180" width="6" height="15" fill="rgb(238,38,51)"/><text x="102.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.01%)</title><rect x="129" y="196" width="12" height="15" fill="rgb(205,199,51)"/><text x="132.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 3.54%)</title><rect x="105" y="180" width="42" height="15" fill="rgb(239,124,16)"/><text x="108.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.51%)</title><rect x="141" y="196" width="6" height="15" fill="rgb(209,211,46)"/><text x="144.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (13 samples, 6.57%)</title><rect x="75" y="148" width="78" height="15" fill="rgb(230,116,29)"/><text x="78.00" y="158.50">predict_p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 5.56%)</title><rect x="87" y="164" width="66" height="15" fill="rgb(231,182,0)"/><text x="90.00" y="174.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.51%)</title><rect x="147" y="180" width="6" height="15" fill="rgb(221,23,11)"/><text x="150.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.51%)</title><rect x="153" y="148" width="5" height="15" fill="rgb(206,123,31)"/><text x="156.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (1 samples, 0.51%)</title><rect x="158" y="148" width="6" height="15" fill="rgb(252,9,39)"/><text x="161.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:247) (1 samples, 0.51%)</title><rect x="176" y="180" width="6" height="15" fill="rgb(235,227,5)"/><text x="179.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.51%)</title><rect x="182" y="196" width="6" height="15" fill="rgb(211,168,5)"/><text x="185.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.51%)</title><rect x="182" y="212" width="6" height="15" fill="rgb(250,32,15)"/><text x="185.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.51%)</title><rect x="212" y="212" width="6" height="15" fill="rgb(218,157,39)"/><text x="215.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.01%)</title><rect x="218" y="228" width="12" height="15" fill="rgb(206,195,7)"/><text x="221.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 2.02%)</title><rect x="218" y="212" width="24" height="15" fill="rgb(241,118,20)"/><text x="221.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.01%)</title><rect x="230" y="228" width="12" height="15" fill="rgb(235,170,44)"/><text x="233.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (11 samples, 5.56%)</title><rect x="182" y="180" width="66" height="15" fill="rgb(236,82,49)"/><text x="185.00" y="190.50">decisio..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 5.05%)</title><rect x="188" y="196" width="60" height="15" fill="rgb(246,146,26)"/><text x="191.00" y="206.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.51%)</title><rect x="242" y="212" width="6" height="15" fill="rgb(227,9,18)"/><text x="245.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.51%)</title><rect x="242" y="228" width="6" height="15" fill="rgb(249,206,17)"/><text x="245.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.51%)</title><rect x="254" y="196" width="6" height="15" fill="rgb(244,6,54)"/><text x="257.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.51%)</title><rect x="254" y="212" width="6" height="15" fill="rgb(206,2,43)"/><text x="257.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.51%)</title><rect x="260" y="196" width="6" height="15" fill="rgb(225,189,27)"/><text x="263.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.52%)</title><rect x="272" y="228" width="18" height="15" fill="rgb(220,148,53)"/><text x="275.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 2.53%)</title><rect x="266" y="196" width="30" height="15" fill="rgb(229,97,26)"/><text x="269.00" y="206.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 2.02%)</title><rect x="272" y="212" width="24" height="15" fill="rgb(209,4,26)"/><text x="275.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.51%)</title><rect x="290" y="228" width="6" height="15" fill="rgb(243,2,45)"/><text x="293.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 1.01%)</title><rect x="296" y="196" width="11" height="15" fill="rgb(237,39,41)"/><text x="299.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.51%)</title><rect x="302" y="212" width="5" height="15" fill="rgb(224,171,5)"/><text x="305.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.51%)</title><rect x="307" y="196" width="6" height="15" fill="rgb(228,122,37)"/><text x="310.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.51%)</title><rect x="313" y="196" width="6" height="15" fill="rgb(219,208,46)"/><text x="316.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.51%)</title><rect x="313" y="212" width="6" height="15" fill="rgb(226,88,35)"/><text x="316.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.51%)</title><rect x="313" y="228" width="6" height="15" fill="rgb(219,39,9)"/><text x="316.00" y="238.50"></text></g><g><title>0x7f1a9a139e7a (libc-2.29.so) (1 samples, 0.51%)</title><rect x="313" y="244" width="6" height="15" fill="rgb(229,201,13)"/><text x="316.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.51%)</title><rect x="343" y="228" width="6" height="15" fill="rgb(233,62,23)"/><text x="346.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 3.03%)</title><rect x="319" y="212" width="36" height="15" fill="rgb(242,81,39)"/><text x="322.00" y="222.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.51%)</title><rect x="349" y="228" width="6" height="15" fill="rgb(219,189,35)"/><text x="352.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (9 samples, 4.55%)</title><rect x="319" y="196" width="54" height="15" fill="rgb(226,159,41)"/><text x="322.00" y="206.50">check..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 1.52%)</title><rect x="355" y="212" width="18" height="15" fill="rgb(232,97,40)"/><text x="358.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (3 samples, 1.52%)</title><rect x="355" y="228" width="18" height="15" fill="rgb(218,12,41)"/><text x="358.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.52%)</title><rect x="373" y="196" width="18" height="15" fill="rgb(224,182,38)"/><text x="376.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.52%)</title><rect x="373" y="212" width="18" height="15" fill="rgb(231,183,25)"/><text x="376.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.51%)</title><rect x="385" y="228" width="6" height="15" fill="rgb(243,43,13)"/><text x="388.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.51%)</title><rect x="385" y="244" width="6" height="15" fill="rgb(214,106,3)"/><text x="388.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (25 samples, 12.63%)</title><rect x="248" y="180" width="149" height="15" fill="rgb(212,23,39)"/><text x="251.00" y="190.50">decision_function (..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.51%)</title><rect x="391" y="196" width="6" height="15" fill="rgb(226,4,1)"/><text x="394.00" y="206.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.51%)</title><rect x="391" y="212" width="6" height="15" fill="rgb(205,174,0)"/><text x="394.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.51%)</title><rect x="397" y="180" width="6" height="15" fill="rgb(229,107,6)"/><text x="400.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.51%)</title><rect x="397" y="196" width="6" height="15" fill="rgb(206,190,53)"/><text x="400.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.51%)</title><rect x="409" y="212" width="6" height="15" fill="rgb(250,193,25)"/><text x="412.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.51%)</title><rect x="409" y="228" width="6" height="15" fill="rgb(231,215,17)"/><text x="412.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.51%)</title><rect x="409" y="244" width="6" height="15" fill="rgb(238,99,32)"/><text x="412.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:30) (1 samples, 0.51%)</title><rect x="409" y="260" width="6" height="15" fill="rgb(238,78,51)"/><text x="412.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.51%)</title><rect x="415" y="228" width="6" height="15" fill="rgb(237,1,0)"/><text x="418.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.51%)</title><rect x="415" y="244" width="6" height="15" fill="rgb(211,214,39)"/><text x="418.00" y="254.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.51%)</title><rect x="421" y="244" width="6" height="15" fill="rgb(251,14,15)"/><text x="424.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 1.01%)</title><rect x="421" y="228" width="12" height="15" fill="rgb(218,145,19)"/><text x="424.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.51%)</title><rect x="427" y="244" width="6" height="15" fill="rgb(219,200,34)"/><text x="430.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.51%)</title><rect x="427" y="260" width="6" height="15" fill="rgb(222,142,35)"/><text x="430.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.51%)</title><rect x="427" y="276" width="6" height="15" fill="rgb(236,93,48)"/><text x="430.00" y="286.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.51%)</title><rect x="427" y="292" width="6" height="15" fill="rgb(233,201,41)"/><text x="430.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.51%)</title><rect x="433" y="228" width="6" height="15" fill="rgb(242,44,42)"/><text x="436.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.51%)</title><rect x="433" y="244" width="6" height="15" fill="rgb(237,63,52)"/><text x="436.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.51%)</title><rect x="439" y="276" width="6" height="15" fill="rgb(226,35,35)"/><text x="442.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1459) (1 samples, 0.51%)</title><rect x="439" y="292" width="6" height="15" fill="rgb(209,68,18)"/><text x="442.00" y="302.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.51%)</title><rect x="439" y="308" width="6" height="15" fill="rgb(236,62,23)"/><text x="442.00" y="318.50"></text></g><g><title>array_add (number.c:330) (7 samples, 3.54%)</title><rect x="409" y="196" width="42" height="15" fill="rgb(249,27,14)"/><text x="412.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 3.03%)</title><rect x="415" y="212" width="36" height="15" fill="rgb(208,32,1)"/><text x="418.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 1.01%)</title><rect x="439" y="228" width="12" height="15" fill="rgb(252,16,4)"/><text x="442.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 1.01%)</title><rect x="439" y="244" width="12" height="15" fill="rgb(248,155,45)"/><text x="442.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 1.01%)</title><rect x="439" y="260" width="12" height="15" fill="rgb(208,29,1)"/><text x="442.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.51%)</title><rect x="445" y="276" width="6" height="15" fill="rgb(222,144,39)"/><text x="448.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2835) (1 samples, 0.51%)</title><rect x="445" y="292" width="6" height="15" fill="rgb(240,8,32)"/><text x="448.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.51%)</title><rect x="451" y="196" width="5" height="15" fill="rgb(226,223,1)"/><text x="454.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.51%)</title><rect x="451" y="212" width="5" height="15" fill="rgb(226,139,2)"/><text x="454.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.51%)</title><rect x="456" y="244" width="6" height="15" fill="rgb(242,163,6)"/><text x="459.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.51%)</title><rect x="456" y="260" width="6" height="15" fill="rgb(253,217,6)"/><text x="459.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.51%)</title><rect x="456" y="276" width="6" height="15" fill="rgb(225,135,41)"/><text x="459.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.51%)</title><rect x="456" y="292" width="6" height="15" fill="rgb(243,155,29)"/><text x="459.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.51%)</title><rect x="456" y="308" width="6" height="15" fill="rgb(227,176,35)"/><text x="459.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.51%)</title><rect x="456" y="324" width="6" height="15" fill="rgb(223,125,21)"/><text x="459.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.51%)</title><rect x="456" y="340" width="6" height="15" fill="rgb(230,143,15)"/><text x="459.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.51%)</title><rect x="462" y="244" width="6" height="15" fill="rgb(207,189,33)"/><text x="465.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.51%)</title><rect x="462" y="260" width="6" height="15" fill="rgb(237,198,39)"/><text x="465.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.51%)</title><rect x="462" y="276" width="6" height="15" fill="rgb(243,2,30)"/><text x="465.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.51%)</title><rect x="462" y="292" width="6" height="15" fill="rgb(252,191,37)"/><text x="465.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.51%)</title><rect x="462" y="308" width="6" height="15" fill="rgb(220,111,48)"/><text x="465.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2880) (1 samples, 0.51%)</title><rect x="468" y="244" width="6" height="15" fill="rgb(223,152,27)"/><text x="471.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2994) (1 samples, 0.51%)</title><rect x="474" y="244" width="6" height="15" fill="rgb(206,103,49)"/><text x="477.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.51%)</title><rect x="480" y="260" width="6" height="15" fill="rgb(211,174,27)"/><text x="483.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 1.01%)</title><rect x="486" y="260" width="12" height="15" fill="rgb(232,158,4)"/><text x="489.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 1.01%)</title><rect x="486" y="276" width="12" height="15" fill="rgb(207,222,46)"/><text x="489.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 1.01%)</title><rect x="486" y="292" width="12" height="15" fill="rgb(228,64,26)"/><text x="489.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 1.01%)</title><rect x="486" y="308" width="12" height="15" fill="rgb(207,94,40)"/><text x="489.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (17 samples, 8.59%)</title><rect x="403" y="180" width="101" height="15" fill="rgb(251,195,53)"/><text x="406.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (8 samples, 4.04%)</title><rect x="456" y="196" width="48" height="15" fill="rgb(205,126,6)"/><text x="459.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 4.04%)</title><rect x="456" y="212" width="48" height="15" fill="rgb(214,26,26)"/><text x="459.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 4.04%)</title><rect x="456" y="228" width="48" height="15" fill="rgb(211,134,38)"/><text x="459.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (4 samples, 2.02%)</title><rect x="480" y="244" width="24" height="15" fill="rgb(222,145,12)"/><text x="483.00" y="254.50">P..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.51%)</title><rect x="498" y="260" width="6" height="15" fill="rgb(249,158,10)"/><text x="501.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (59 samples, 29.80%)</title><rect x="164" y="164" width="352" height="15" fill="rgb(254,26,46)"/><text x="167.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.p..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 1.01%)</title><rect x="504" y="180" width="12" height="15" fill="rgb(236,215,36)"/><text x="507.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.51%)</title><rect x="522" y="196" width="6" height="15" fill="rgb(224,15,35)"/><text x="525.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.51%)</title><rect x="528" y="196" width="6" height="15" fill="rgb(212,94,47)"/><text x="531.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1255) (1 samples, 0.51%)</title><rect x="528" y="212" width="6" height="15" fill="rgb(238,75,27)"/><text x="531.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.51%)</title><rect x="534" y="196" width="6" height="15" fill="rgb(253,122,34)"/><text x="537.00" y="206.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.51%)</title><rect x="534" y="212" width="6" height="15" fill="rgb(216,174,1)"/><text x="537.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 1.01%)</title><rect x="540" y="196" width="12" height="15" fill="rgb(242,9,5)"/><text x="543.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (2 samples, 1.01%)</title><rect x="540" y="212" width="12" height="15" fill="rgb(232,174,53)"/><text x="543.00" y="222.50"></text></g><g><title>0x7f1a9a1441ef (libc-2.29.so) (1 samples, 0.51%)</title><rect x="546" y="228" width="6" height="15" fill="rgb(227,100,16)"/><text x="549.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.51%)</title><rect x="552" y="244" width="6" height="15" fill="rgb(221,221,8)"/><text x="555.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.51%)</title><rect x="552" y="260" width="6" height="15" fill="rgb(242,206,19)"/><text x="555.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.51%)</title><rect x="552" y="276" width="6" height="15" fill="rgb(206,43,31)"/><text x="555.00" y="286.50"></text></g><g><title>0x7f1a9a0db7a5 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="552" y="292" width="6" height="15" fill="rgb(251,205,25)"/><text x="555.00" y="302.50"></text></g><g><title>0x7f1a9a0db8b8 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="552" y="308" width="6" height="15" fill="rgb(234,145,42)"/><text x="555.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 1.01%)</title><rect x="552" y="212" width="12" height="15" fill="rgb(221,155,42)"/><text x="555.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 1.01%)</title><rect x="552" y="228" width="12" height="15" fill="rgb(223,7,30)"/><text x="555.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.51%)</title><rect x="558" y="244" width="6" height="15" fill="rgb(233,43,23)"/><text x="561.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.51%)</title><rect x="558" y="260" width="6" height="15" fill="rgb(212,186,5)"/><text x="561.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.51%)</title><rect x="558" y="276" width="6" height="15" fill="rgb(205,220,4)"/><text x="561.00" y="286.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.51%)</title><rect x="558" y="292" width="6" height="15" fill="rgb(220,19,32)"/><text x="561.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h:153) (1 samples, 0.51%)</title><rect x="558" y="308" width="6" height="15" fill="rgb(252,95,44)"/><text x="561.00" y="318.50"></text></g><g><title>0x7f1a853eafe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="564" y="276" width="6" height="15" fill="rgb(239,31,45)"/><text x="567.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (10 samples, 5.05%)</title><rect x="516" y="164" width="60" height="15" fill="rgb(237,38,41)"/><text x="519.00" y="174.50">_predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 4.55%)</title><rect x="522" y="180" width="54" height="15" fill="rgb(213,220,34)"/><text x="525.00" y="190.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 2.02%)</title><rect x="552" y="196" width="24" height="15" fill="rgb(214,116,49)"/><text x="555.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 1.01%)</title><rect x="564" y="212" width="12" height="15" fill="rgb(239,79,31)"/><text x="567.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 1.01%)</title><rect x="564" y="228" width="12" height="15" fill="rgb(229,38,13)"/><text x="567.00" y="238.50"></text></g><g><title>0x7f1a8540c9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="564" y="244" width="12" height="15" fill="rgb(235,53,18)"/><text x="567.00" y="254.50"></text></g><g><title>0x7f1a8542d265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.01%)</title><rect x="564" y="260" width="12" height="15" fill="rgb(251,163,13)"/><text x="567.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.51%)</title><rect x="570" y="276" width="6" height="15" fill="rgb(254,175,28)"/><text x="573.00" y="286.50"></text></g><g><title>0x7f1a9a2f5bcb (libm-2.29.so) (1 samples, 0.51%)</title><rect x="570" y="292" width="6" height="15" fill="rgb(243,94,13)"/><text x="573.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.51%)</title><rect x="576" y="164" width="6" height="15" fill="rgb(214,203,3)"/><text x="579.00" y="174.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 1.01%)</title><rect x="605" y="228" width="12" height="15" fill="rgb(213,29,8)"/><text x="608.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 1.01%)</title><rect x="605" y="244" width="12" height="15" fill="rgb(246,162,2)"/><text x="608.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 1.01%)</title><rect x="605" y="260" width="12" height="15" fill="rgb(226,89,21)"/><text x="608.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 1.01%)</title><rect x="605" y="276" width="12" height="15" fill="rgb(250,90,46)"/><text x="608.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 1.01%)</title><rect x="605" y="292" width="12" height="15" fill="rgb(234,208,28)"/><text x="608.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 1.01%)</title><rect x="605" y="308" width="12" height="15" fill="rgb(239,168,7)"/><text x="608.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 1.52%)</title><rect x="617" y="260" width="18" height="15" fill="rgb(243,82,25)"/><text x="620.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (3 samples, 1.52%)</title><rect x="617" y="276" width="18" height="15" fill="rgb(225,5,14)"/><text x="620.00" y="286.50"></text></g><g><title>0x7f1a9a14414a (libc-2.29.so) (1 samples, 0.51%)</title><rect x="629" y="292" width="6" height="15" fill="rgb(253,68,13)"/><text x="632.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.51%)</title><rect x="635" y="276" width="6" height="15" fill="rgb(205,183,36)"/><text x="638.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.51%)</title><rect x="635" y="292" width="6" height="15" fill="rgb(230,145,44)"/><text x="638.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.51%)</title><rect x="635" y="308" width="6" height="15" fill="rgb(234,152,52)"/><text x="638.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.51%)</title><rect x="635" y="324" width="6" height="15" fill="rgb(241,155,49)"/><text x="638.00" y="334.50"></text></g><g><title>0x7f1a9a0dba19 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="635" y="340" width="6" height="15" fill="rgb(228,99,13)"/><text x="638.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.51%)</title><rect x="635" y="356" width="6" height="15" fill="rgb(229,70,0)"/><text x="638.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.51%)</title><rect x="641" y="276" width="6" height="15" fill="rgb(214,214,39)"/><text x="644.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.51%)</title><rect x="641" y="292" width="6" height="15" fill="rgb(221,70,27)"/><text x="644.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.51%)</title><rect x="641" y="308" width="6" height="15" fill="rgb(229,191,10)"/><text x="644.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.51%)</title><rect x="641" y="324" width="6" height="15" fill="rgb(239,228,0)"/><text x="644.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.51%)</title><rect x="641" y="340" width="6" height="15" fill="rgb(228,45,0)"/><text x="644.00" y="350.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.51%)</title><rect x="641" y="356" width="6" height="15" fill="rgb(244,139,10)"/><text x="644.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.51%)</title><rect x="647" y="276" width="6" height="15" fill="rgb(225,52,11)"/><text x="650.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.51%)</title><rect x="647" y="292" width="6" height="15" fill="rgb(249,193,20)"/><text x="650.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.51%)</title><rect x="647" y="308" width="6" height="15" fill="rgb(232,65,48)"/><text x="650.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.51%)</title><rect x="647" y="324" width="6" height="15" fill="rgb(209,54,6)"/><text x="650.00" y="334.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 5.56%)</title><rect x="594" y="196" width="65" height="15" fill="rgb(233,101,0)"/><text x="597.00" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 5.56%)</title><rect x="594" y="212" width="65" height="15" fill="rgb(231,184,3)"/><text x="597.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 3.54%)</title><rect x="617" y="228" width="42" height="15" fill="rgb(249,37,52)"/><text x="620.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 3.54%)</title><rect x="617" y="244" width="42" height="15" fill="rgb(223,166,22)"/><text x="620.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 2.02%)</title><rect x="635" y="260" width="24" height="15" fill="rgb(217,10,29)"/><text x="638.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.51%)</title><rect x="653" y="276" width="6" height="15" fill="rgb(246,53,50)"/><text x="656.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.51%)</title><rect x="653" y="292" width="6" height="15" fill="rgb(239,71,15)"/><text x="656.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.51%)</title><rect x="653" y="308" width="6" height="15" fill="rgb(219,221,36)"/><text x="656.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 6.06%)</title><rect x="594" y="180" width="71" height="15" fill="rgb(232,47,8)"/><text x="597.00" y="190.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:93) (1 samples, 0.51%)</title><rect x="659" y="196" width="6" height="15" fill="rgb(239,67,9)"/><text x="662.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.51%)</title><rect x="665" y="196" width="6" height="15" fill="rgb(249,155,16)"/><text x="668.00" y="206.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1323) (1 samples, 0.51%)</title><rect x="665" y="212" width="6" height="15" fill="rgb(210,182,41)"/><text x="668.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.51%)</title><rect x="671" y="196" width="6" height="15" fill="rgb(232,54,31)"/><text x="674.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.51%)</title><rect x="671" y="212" width="6" height="15" fill="rgb(234,116,19)"/><text x="674.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (104 samples, 52.53%)</title><rect x="63" y="132" width="620" height="15" fill="rgb(218,164,0)"/><text x="66.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (87 samples, 43.94%)</title><rect x="164" y="148" width="519" height="15" fill="rgb(253,110,39)"/><text x="167.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (17 samples, 8.59%)</title><rect x="582" y="164" width="101" height="15" fill="rgb(249,132,8)"/><text x="585.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.52%)</title><rect x="665" y="180" width="18" height="15" fill="rgb(249,149,48)"/><text x="668.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.51%)</title><rect x="677" y="196" width="6" height="15" fill="rgb(208,109,50)"/><text x="680.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.51%)</title><rect x="677" y="212" width="6" height="15" fill="rgb(217,44,5)"/><text x="680.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.51%)</title><rect x="677" y="228" width="6" height="15" fill="rgb(247,199,3)"/><text x="680.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.51%)</title><rect x="677" y="244" width="6" height="15" fill="rgb(209,127,9)"/><text x="680.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2038) (1 samples, 0.51%)</title><rect x="677" y="260" width="6" height="15" fill="rgb(238,137,46)"/><text x="680.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:38) (114 samples, 57.58%)</title><rect x="10" y="52" width="679" height="15" fill="rgb(231,162,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:38)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:37) (114 samples, 57.58%)</title><rect x="10" y="68" width="679" height="15" fill="rgb(247,33,1)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (113 samples, 57.07%)</title><rect x="15" y="84" width="674" height="15" fill="rgb(236,136,13)"/><text x="18.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap...</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (107 samples, 54.04%)</title><rect x="51" y="100" width="638" height="15" fill="rgb(218,82,47)"/><text x="54.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 53.54%)</title><rect x="57" y="116" width="632" height="15" fill="rgb(238,12,13)"/><text x="60.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.51%)</title><rect x="683" y="132" width="6" height="15" fill="rgb(216,198,13)"/><text x="686.00" y="142.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.51%)</title><rect x="689" y="916" width="6" height="15" fill="rgb(227,222,29)"/><text x="692.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.51%)</title><rect x="689" y="932" width="6" height="15" fill="rgb(233,143,3)"/><text x="692.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.51%)</title><rect x="689" y="948" width="6" height="15" fill="rgb(214,123,5)"/><text x="692.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.51%)</title><rect x="689" y="964" width="6" height="15" fill="rgb(211,139,5)"/><text x="692.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.51%)</title><rect x="689" y="980" width="6" height="15" fill="rgb(228,118,29)"/><text x="692.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 1.01%)</title><rect x="689" y="852" width="12" height="15" fill="rgb(218,157,28)"/><text x="692.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 1.01%)</title><rect x="689" y="868" width="12" height="15" fill="rgb(246,65,10)"/><text x="692.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 1.01%)</title><rect x="689" y="884" width="12" height="15" fill="rgb(235,104,15)"/><text x="692.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 1.01%)</title><rect x="689" y="900" width="12" height="15" fill="rgb(216,136,11)"/><text x="692.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.51%)</title><rect x="695" y="916" width="6" height="15" fill="rgb(222,152,52)"/><text x="698.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.51%)</title><rect x="695" y="932" width="6" height="15" fill="rgb(251,183,37)"/><text x="698.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.51%)</title><rect x="695" y="948" width="6" height="15" fill="rgb(207,77,46)"/><text x="698.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.51%)</title><rect x="695" y="964" width="6" height="15" fill="rgb(215,223,5)"/><text x="698.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.51%)</title><rect x="695" y="980" width="6" height="15" fill="rgb(208,173,13)"/><text x="698.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.51%)</title><rect x="701" y="852" width="6" height="15" fill="rgb(247,139,18)"/><text x="704.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.51%)</title><rect x="701" y="868" width="6" height="15" fill="rgb(238,33,19)"/><text x="704.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.51%)</title><rect x="701" y="884" width="6" height="15" fill="rgb(238,83,48)"/><text x="704.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.51%)</title><rect x="701" y="900" width="6" height="15" fill="rgb(220,139,39)"/><text x="704.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.51%)</title><rect x="701" y="916" width="6" height="15" fill="rgb(241,75,54)"/><text x="704.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.51%)</title><rect x="701" y="932" width="6" height="15" fill="rgb(253,143,35)"/><text x="704.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.51%)</title><rect x="701" y="948" width="6" height="15" fill="rgb(244,155,14)"/><text x="704.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1363) (1 samples, 0.51%)</title><rect x="701" y="964" width="6" height="15" fill="rgb(233,116,26)"/><text x="704.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (4 samples, 2.02%)</title><rect x="689" y="148" width="24" height="15" fill="rgb(225,29,31)"/><text x="692.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="164" width="24" height="15" fill="rgb(222,106,6)"/><text x="692.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.02%)</title><rect x="689" y="180" width="24" height="15" fill="rgb(251,56,38)"/><text x="692.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="196" width="24" height="15" fill="rgb(242,50,28)"/><text x="692.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="212" width="24" height="15" fill="rgb(205,194,53)"/><text x="692.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="228" width="24" height="15" fill="rgb(239,119,28)"/><text x="692.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="244" width="24" height="15" fill="rgb(249,170,26)"/><text x="692.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="260" width="24" height="15" fill="rgb(229,125,47)"/><text x="692.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="276" width="24" height="15" fill="rgb(228,91,44)"/><text x="692.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 2.02%)</title><rect x="689" y="292" width="24" height="15" fill="rgb(234,43,0)"/><text x="692.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="308" width="24" height="15" fill="rgb(211,121,16)"/><text x="692.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="324" width="24" height="15" fill="rgb(231,101,23)"/><text x="692.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="340" width="24" height="15" fill="rgb(248,102,44)"/><text x="692.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="356" width="24" height="15" fill="rgb(250,190,8)"/><text x="692.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="372" width="24" height="15" fill="rgb(248,29,44)"/><text x="692.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 2.02%)</title><rect x="689" y="388" width="24" height="15" fill="rgb(232,121,20)"/><text x="692.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="404" width="24" height="15" fill="rgb(225,157,43)"/><text x="692.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="420" width="24" height="15" fill="rgb(227,180,27)"/><text x="692.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="436" width="24" height="15" fill="rgb(209,40,19)"/><text x="692.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="452" width="24" height="15" fill="rgb(241,134,36)"/><text x="692.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="468" width="24" height="15" fill="rgb(218,78,25)"/><text x="692.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 2.02%)</title><rect x="689" y="484" width="24" height="15" fill="rgb(214,38,38)"/><text x="692.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="500" width="24" height="15" fill="rgb(218,187,25)"/><text x="692.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="516" width="24" height="15" fill="rgb(245,149,0)"/><text x="692.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="532" width="24" height="15" fill="rgb(223,175,28)"/><text x="692.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="548" width="24" height="15" fill="rgb(248,222,36)"/><text x="692.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="564" width="24" height="15" fill="rgb(205,188,20)"/><text x="692.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 2.02%)</title><rect x="689" y="580" width="24" height="15" fill="rgb(238,34,41)"/><text x="692.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="596" width="24" height="15" fill="rgb(244,26,54)"/><text x="692.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.02%)</title><rect x="689" y="612" width="24" height="15" fill="rgb(253,219,44)"/><text x="692.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="628" width="24" height="15" fill="rgb(249,132,6)"/><text x="692.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="644" width="24" height="15" fill="rgb(221,79,19)"/><text x="692.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="660" width="24" height="15" fill="rgb(208,33,8)"/><text x="692.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="676" width="24" height="15" fill="rgb(214,140,37)"/><text x="692.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="692" width="24" height="15" fill="rgb(207,50,26)"/><text x="692.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="708" width="24" height="15" fill="rgb(230,228,17)"/><text x="692.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 2.02%)</title><rect x="689" y="724" width="24" height="15" fill="rgb(244,191,33)"/><text x="692.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.02%)</title><rect x="689" y="740" width="24" height="15" fill="rgb(232,58,6)"/><text x="692.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.02%)</title><rect x="689" y="756" width="24" height="15" fill="rgb(221,207,30)"/><text x="692.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.02%)</title><rect x="689" y="772" width="24" height="15" fill="rgb(220,221,29)"/><text x="692.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.02%)</title><rect x="689" y="788" width="24" height="15" fill="rgb(207,223,52)"/><text x="692.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.02%)</title><rect x="689" y="804" width="24" height="15" fill="rgb(224,39,17)"/><text x="692.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 2.02%)</title><rect x="689" y="820" width="24" height="15" fill="rgb(209,11,8)"/><text x="692.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 2.02%)</title><rect x="689" y="836" width="24" height="15" fill="rgb(247,156,30)"/><text x="692.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.51%)</title><rect x="707" y="852" width="6" height="15" fill="rgb(241,61,4)"/><text x="710.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.51%)</title><rect x="707" y="868" width="6" height="15" fill="rgb(209,200,38)"/><text x="710.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.51%)</title><rect x="707" y="884" width="6" height="15" fill="rgb(240,122,48)"/><text x="710.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.51%)</title><rect x="707" y="900" width="6" height="15" fill="rgb(250,146,20)"/><text x="710.00" y="910.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:24) (1 samples, 0.51%)</title><rect x="713" y="900" width="6" height="15" fill="rgb(226,195,50)"/><text x="716.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.51%)</title><rect x="713" y="916" width="6" height="15" fill="rgb(251,107,46)"/><text x="716.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="713" y="932" width="6" height="15" fill="rgb(237,33,29)"/><text x="716.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="713" y="948" width="6" height="15" fill="rgb(214,168,42)"/><text x="716.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="713" y="964" width="6" height="15" fill="rgb(241,43,21)"/><text x="716.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="713" y="980" width="6" height="15" fill="rgb(214,156,51)"/><text x="716.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="713" y="996" width="6" height="15" fill="rgb(209,164,3)"/><text x="716.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="713" y="1012" width="6" height="15" fill="rgb(251,93,13)"/><text x="716.00" y="1022.50"></text></g><g><title>&lt;module&gt; (requests/certs.py:15) (1 samples, 0.51%)</title><rect x="713" y="1028" width="6" height="15" fill="rgb(240,129,11)"/><text x="716.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="713" y="1044" width="6" height="15" fill="rgb(221,14,10)"/><text x="716.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.51%)</title><rect x="713" y="1060" width="6" height="15" fill="rgb(243,157,8)"/><text x="716.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.51%)</title><rect x="713" y="1076" width="6" height="15" fill="rgb(231,68,36)"/><text x="716.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.51%)</title><rect x="713" y="1092" width="6" height="15" fill="rgb(216,155,47)"/><text x="716.00" y="1102.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.51%)</title><rect x="713" y="1108" width="6" height="15" fill="rgb(250,7,37)"/><text x="716.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.51%)</title><rect x="713" y="1124" width="6" height="15" fill="rgb(246,154,47)"/><text x="716.00" y="1134.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.51%)</title><rect x="713" y="1140" width="6" height="15" fill="rgb(210,4,15)"/><text x="716.00" y="1150.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.51%)</title><rect x="713" y="1156" width="6" height="15" fill="rgb(213,166,28)"/><text x="716.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 1.01%)</title><rect x="713" y="484" width="12" height="15" fill="rgb(208,150,8)"/><text x="716.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="713" y="500" width="12" height="15" fill="rgb(239,102,5)"/><text x="716.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="713" y="516" width="12" height="15" fill="rgb(234,189,17)"/><text x="716.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="713" y="532" width="12" height="15" fill="rgb(209,218,34)"/><text x="716.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="713" y="548" width="12" height="15" fill="rgb(228,140,30)"/><text x="716.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="713" y="564" width="12" height="15" fill="rgb(254,84,18)"/><text x="716.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 1.01%)</title><rect x="713" y="580" width="12" height="15" fill="rgb(242,87,44)"/><text x="716.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="713" y="596" width="12" height="15" fill="rgb(225,38,2)"/><text x="716.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="713" y="612" width="12" height="15" fill="rgb(251,17,7)"/><text x="716.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="713" y="628" width="12" height="15" fill="rgb(254,221,16)"/><text x="716.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="713" y="644" width="12" height="15" fill="rgb(229,118,13)"/><text x="716.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="713" y="660" width="12" height="15" fill="rgb(218,36,49)"/><text x="716.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 1.01%)</title><rect x="713" y="676" width="12" height="15" fill="rgb(235,15,22)"/><text x="716.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="713" y="692" width="12" height="15" fill="rgb(234,124,26)"/><text x="716.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="713" y="708" width="12" height="15" fill="rgb(205,168,53)"/><text x="716.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="713" y="724" width="12" height="15" fill="rgb(254,178,1)"/><text x="716.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="713" y="740" width="12" height="15" fill="rgb(235,160,12)"/><text x="716.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="713" y="756" width="12" height="15" fill="rgb(215,122,24)"/><text x="716.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (2 samples, 1.01%)</title><rect x="713" y="772" width="12" height="15" fill="rgb(228,53,14)"/><text x="716.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.01%)</title><rect x="713" y="788" width="12" height="15" fill="rgb(208,222,7)"/><text x="716.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="713" y="804" width="12" height="15" fill="rgb(249,47,37)"/><text x="716.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="713" y="820" width="12" height="15" fill="rgb(231,34,53)"/><text x="716.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="713" y="836" width="12" height="15" fill="rgb(221,218,41)"/><text x="716.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="713" y="852" width="12" height="15" fill="rgb(230,145,13)"/><text x="716.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="713" y="868" width="12" height="15" fill="rgb(212,73,48)"/><text x="716.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="713" y="884" width="12" height="15" fill="rgb(230,152,42)"/><text x="716.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.51%)</title><rect x="719" y="900" width="6" height="15" fill="rgb(247,104,16)"/><text x="722.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="719" y="916" width="6" height="15" fill="rgb(220,133,21)"/><text x="722.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="719" y="932" width="6" height="15" fill="rgb(226,23,9)"/><text x="722.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="719" y="948" width="6" height="15" fill="rgb(245,204,19)"/><text x="722.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="719" y="964" width="6" height="15" fill="rgb(236,199,28)"/><text x="722.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="719" y="980" width="6" height="15" fill="rgb(249,47,34)"/><text x="722.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.51%)</title><rect x="719" y="996" width="6" height="15" fill="rgb(218,32,35)"/><text x="722.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="719" y="1012" width="6" height="15" fill="rgb(235,90,38)"/><text x="722.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="719" y="1028" width="6" height="15" fill="rgb(221,170,46)"/><text x="722.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="719" y="1044" width="6" height="15" fill="rgb(244,195,1)"/><text x="722.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="719" y="1060" width="6" height="15" fill="rgb(249,37,50)"/><text x="722.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="719" y="1076" width="6" height="15" fill="rgb(216,179,7)"/><text x="722.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:29) (1 samples, 0.51%)</title><rect x="719" y="1092" width="6" height="15" fill="rgb(232,106,2)"/><text x="722.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="719" y="1108" width="6" height="15" fill="rgb(231,91,40)"/><text x="722.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="719" y="1124" width="6" height="15" fill="rgb(234,155,26)"/><text x="722.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="719" y="1140" width="6" height="15" fill="rgb(241,122,50)"/><text x="722.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="719" y="1156" width="6" height="15" fill="rgb(220,37,38)"/><text x="722.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="719" y="1172" width="6" height="15" fill="rgb(248,121,34)"/><text x="722.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py:135) (1 samples, 0.51%)</title><rect x="719" y="1188" width="6" height="15" fill="rgb(246,159,31)"/><text x="722.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="719" y="1204" width="6" height="15" fill="rgb(214,42,26)"/><text x="722.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="719" y="1220" width="6" height="15" fill="rgb(241,18,13)"/><text x="722.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="719" y="1236" width="6" height="15" fill="rgb(245,142,35)"/><text x="722.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.51%)</title><rect x="719" y="1252" width="6" height="15" fill="rgb(214,28,44)"/><text x="722.00" y="1262.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.51%)</title><rect x="719" y="1268" width="6" height="15" fill="rgb(205,219,54)"/><text x="722.00" y="1278.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.51%)</title><rect x="719" y="1284" width="6" height="15" fill="rgb(216,144,20)"/><text x="722.00" y="1294.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="719" y="1300" width="6" height="15" fill="rgb(217,212,49)"/><text x="722.00" y="1310.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 1.52%)</title><rect x="713" y="244" width="18" height="15" fill="rgb(246,47,0)"/><text x="716.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.52%)</title><rect x="713" y="260" width="18" height="15" fill="rgb(207,12,46)"/><text x="716.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.52%)</title><rect x="713" y="276" width="18" height="15" fill="rgb(209,181,3)"/><text x="716.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.52%)</title><rect x="713" y="292" width="18" height="15" fill="rgb(206,221,19)"/><text x="716.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.52%)</title><rect x="713" y="308" width="18" height="15" fill="rgb(234,156,6)"/><text x="716.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.52%)</title><rect x="713" y="324" width="18" height="15" fill="rgb(209,31,34)"/><text x="716.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 1.52%)</title><rect x="713" y="340" width="18" height="15" fill="rgb(235,98,4)"/><text x="716.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.52%)</title><rect x="713" y="356" width="18" height="15" fill="rgb(246,13,45)"/><text x="716.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.52%)</title><rect x="713" y="372" width="18" height="15" fill="rgb(241,223,54)"/><text x="716.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.52%)</title><rect x="713" y="388" width="18" height="15" fill="rgb(247,27,9)"/><text x="716.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.52%)</title><rect x="713" y="404" width="18" height="15" fill="rgb(232,155,7)"/><text x="716.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.52%)</title><rect x="713" y="420" width="18" height="15" fill="rgb(244,55,43)"/><text x="716.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.52%)</title><rect x="713" y="436" width="18" height="15" fill="rgb(213,113,46)"/><text x="716.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.52%)</title><rect x="713" y="452" width="18" height="15" fill="rgb(251,22,34)"/><text x="716.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.52%)</title><rect x="713" y="468" width="18" height="15" fill="rgb(230,69,19)"/><text x="716.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.51%)</title><rect x="725" y="484" width="6" height="15" fill="rgb(215,129,21)"/><text x="728.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="725" y="500" width="6" height="15" fill="rgb(252,58,14)"/><text x="728.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="725" y="516" width="6" height="15" fill="rgb(218,211,37)"/><text x="728.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="725" y="532" width="6" height="15" fill="rgb(211,152,16)"/><text x="728.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="725" y="548" width="6" height="15" fill="rgb(244,175,50)"/><text x="728.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="725" y="564" width="6" height="15" fill="rgb(213,52,9)"/><text x="728.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.51%)</title><rect x="725" y="580" width="6" height="15" fill="rgb(208,192,54)"/><text x="728.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="725" y="596" width="6" height="15" fill="rgb(249,78,19)"/><text x="728.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="725" y="612" width="6" height="15" fill="rgb(246,209,16)"/><text x="728.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="725" y="628" width="6" height="15" fill="rgb(216,86,1)"/><text x="728.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="725" y="644" width="6" height="15" fill="rgb(232,106,31)"/><text x="728.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="725" y="660" width="6" height="15" fill="rgb(207,123,28)"/><text x="728.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.51%)</title><rect x="725" y="676" width="6" height="15" fill="rgb(236,43,5)"/><text x="728.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="725" y="692" width="6" height="15" fill="rgb(221,145,21)"/><text x="728.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="725" y="708" width="6" height="15" fill="rgb(245,31,11)"/><text x="728.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="725" y="724" width="6" height="15" fill="rgb(209,121,40)"/><text x="728.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.51%)</title><rect x="725" y="740" width="6" height="15" fill="rgb(231,170,36)"/><text x="728.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.51%)</title><rect x="725" y="756" width="6" height="15" fill="rgb(209,194,20)"/><text x="728.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.51%)</title><rect x="725" y="772" width="6" height="15" fill="rgb(218,214,22)"/><text x="728.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.51%)</title><rect x="731" y="340" width="6" height="15" fill="rgb(249,101,17)"/><text x="734.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="731" y="356" width="6" height="15" fill="rgb(208,202,17)"/><text x="734.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="731" y="372" width="6" height="15" fill="rgb(211,194,47)"/><text x="734.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="731" y="388" width="6" height="15" fill="rgb(208,48,41)"/><text x="734.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="731" y="404" width="6" height="15" fill="rgb(221,81,21)"/><text x="734.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="731" y="420" width="6" height="15" fill="rgb(215,214,27)"/><text x="734.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.51%)</title><rect x="731" y="436" width="6" height="15" fill="rgb(221,210,12)"/><text x="734.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="731" y="452" width="6" height="15" fill="rgb(245,13,42)"/><text x="734.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="731" y="468" width="6" height="15" fill="rgb(214,170,11)"/><text x="734.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="731" y="484" width="6" height="15" fill="rgb(253,117,28)"/><text x="734.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="731" y="500" width="6" height="15" fill="rgb(229,42,9)"/><text x="734.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="731" y="516" width="6" height="15" fill="rgb(216,120,21)"/><text x="734.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.51%)</title><rect x="731" y="532" width="6" height="15" fill="rgb(250,215,50)"/><text x="734.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="731" y="548" width="6" height="15" fill="rgb(218,49,5)"/><text x="734.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="731" y="564" width="6" height="15" fill="rgb(230,37,1)"/><text x="734.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="731" y="580" width="6" height="15" fill="rgb(237,222,51)"/><text x="734.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="731" y="596" width="6" height="15" fill="rgb(231,205,38)"/><text x="734.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="731" y="612" width="6" height="15" fill="rgb(241,11,49)"/><text x="734.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.51%)</title><rect x="731" y="628" width="6" height="15" fill="rgb(216,219,28)"/><text x="734.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="731" y="644" width="6" height="15" fill="rgb(252,139,16)"/><text x="734.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="731" y="660" width="6" height="15" fill="rgb(224,185,3)"/><text x="734.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="731" y="676" width="6" height="15" fill="rgb(251,192,7)"/><text x="734.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="731" y="692" width="6" height="15" fill="rgb(251,92,32)"/><text x="734.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="731" y="708" width="6" height="15" fill="rgb(217,127,31)"/><text x="734.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:1341) (1 samples, 0.51%)</title><rect x="731" y="724" width="6" height="15" fill="rgb(254,180,27)"/><text x="734.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="731" y="740" width="6" height="15" fill="rgb(249,87,17)"/><text x="734.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="731" y="756" width="6" height="15" fill="rgb(249,47,2)"/><text x="734.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="731" y="772" width="6" height="15" fill="rgb(247,112,11)"/><text x="734.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="731" y="788" width="6" height="15" fill="rgb(240,179,28)"/><text x="734.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="731" y="804" width="6" height="15" fill="rgb(214,15,18)"/><text x="734.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py:372) (1 samples, 0.51%)</title><rect x="731" y="820" width="6" height="15" fill="rgb(221,122,40)"/><text x="734.00" y="830.50"></text></g><g><title>Purpose (ssl.py:375) (1 samples, 0.51%)</title><rect x="731" y="836" width="6" height="15" fill="rgb(228,126,35)"/><text x="734.00" y="846.50"></text></g><g><title>__setitem__ (enum.py:95) (1 samples, 0.51%)</title><rect x="731" y="852" width="6" height="15" fill="rgb(210,146,13)"/><text x="734.00" y="862.50"></text></g><g><title>_is_dunder (enum.py:28) (1 samples, 0.51%)</title><rect x="731" y="868" width="6" height="15" fill="rgb(253,66,19)"/><text x="734.00" y="878.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.51%)</title><rect x="731" y="884" width="6" height="15" fill="rgb(205,28,2)"/><text x="734.00" y="894.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:22) (1 samples, 0.51%)</title><rect x="737" y="628" width="6" height="15" fill="rgb(251,67,45)"/><text x="740.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="737" y="644" width="6" height="15" fill="rgb(239,207,42)"/><text x="740.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.51%)</title><rect x="737" y="660" width="6" height="15" fill="rgb(215,189,20)"/><text x="740.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.51%)</title><rect x="737" y="676" width="6" height="15" fill="rgb(234,39,23)"/><text x="740.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.51%)</title><rect x="737" y="692" width="6" height="15" fill="rgb(251,94,42)"/><text x="740.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.51%)</title><rect x="737" y="708" width="6" height="15" fill="rgb(233,218,11)"/><text x="740.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (1 samples, 0.51%)</title><rect x="737" y="724" width="6" height="15" fill="rgb(253,159,51)"/><text x="740.00" y="734.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.51%)</title><rect x="737" y="740" width="6" height="15" fill="rgb(243,36,25)"/><text x="740.00" y="750.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 1.01%)</title><rect x="737" y="436" width="11" height="15" fill="rgb(233,214,26)"/><text x="740.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="737" y="452" width="11" height="15" fill="rgb(216,147,31)"/><text x="740.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="737" y="468" width="11" height="15" fill="rgb(207,60,50)"/><text x="740.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="737" y="484" width="11" height="15" fill="rgb(254,1,18)"/><text x="740.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="737" y="500" width="11" height="15" fill="rgb(254,28,35)"/><text x="740.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="737" y="516" width="11" height="15" fill="rgb(217,145,13)"/><text x="740.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 1.01%)</title><rect x="737" y="532" width="11" height="15" fill="rgb(222,221,6)"/><text x="740.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="737" y="548" width="11" height="15" fill="rgb(244,211,21)"/><text x="740.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="737" y="564" width="11" height="15" fill="rgb(212,158,2)"/><text x="740.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="737" y="580" width="11" height="15" fill="rgb(235,139,8)"/><text x="740.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="737" y="596" width="11" height="15" fill="rgb(239,140,39)"/><text x="740.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="737" y="612" width="11" height="15" fill="rgb(250,81,36)"/><text x="740.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.51%)</title><rect x="743" y="628" width="5" height="15" fill="rgb(249,174,29)"/><text x="746.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="743" y="644" width="5" height="15" fill="rgb(219,36,22)"/><text x="746.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="743" y="660" width="5" height="15" fill="rgb(235,86,37)"/><text x="746.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="743" y="676" width="5" height="15" fill="rgb(207,185,4)"/><text x="746.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="743" y="692" width="5" height="15" fill="rgb(231,70,44)"/><text x="746.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="743" y="708" width="5" height="15" fill="rgb(217,216,9)"/><text x="746.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.51%)</title><rect x="743" y="724" width="5" height="15" fill="rgb(224,124,47)"/><text x="746.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="743" y="740" width="5" height="15" fill="rgb(226,221,23)"/><text x="746.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="743" y="756" width="5" height="15" fill="rgb(229,131,3)"/><text x="746.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="743" y="772" width="5" height="15" fill="rgb(234,158,0)"/><text x="746.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="743" y="788" width="5" height="15" fill="rgb(225,78,10)"/><text x="746.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="743" y="804" width="5" height="15" fill="rgb(213,16,26)"/><text x="746.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.51%)</title><rect x="743" y="820" width="5" height="15" fill="rgb(242,127,52)"/><text x="746.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="743" y="836" width="5" height="15" fill="rgb(224,43,41)"/><text x="746.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="743" y="852" width="5" height="15" fill="rgb(241,7,1)"/><text x="746.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="743" y="868" width="5" height="15" fill="rgb(250,220,42)"/><text x="746.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="743" y="884" width="5" height="15" fill="rgb(206,3,0)"/><text x="746.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="743" y="900" width="5" height="15" fill="rgb(210,18,23)"/><text x="746.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:738) (1 samples, 0.51%)</title><rect x="743" y="916" width="5" height="15" fill="rgb(230,162,23)"/><text x="746.00" y="926.50"></text></g><g><title>SeriesGroupBy (pandas/core/groupby/generic.py:811) (1 samples, 0.51%)</title><rect x="743" y="932" width="5" height="15" fill="rgb(238,36,3)"/><text x="746.00" y="942.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.51%)</title><rect x="743" y="948" width="5" height="15" fill="rgb(213,117,50)"/><text x="746.00" y="958.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.51%)</title><rect x="743" y="964" width="5" height="15" fill="rgb(232,156,52)"/><text x="746.00" y="974.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.51%)</title><rect x="743" y="980" width="5" height="15" fill="rgb(222,30,44)"/><text x="746.00" y="990.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.51%)</title><rect x="743" y="996" width="5" height="15" fill="rgb(223,100,18)"/><text x="746.00" y="1006.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.51%)</title><rect x="743" y="1012" width="5" height="15" fill="rgb(231,57,14)"/><text x="746.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.51%)</title><rect x="743" y="1028" width="5" height="15" fill="rgb(223,116,14)"/><text x="746.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.51%)</title><rect x="748" y="1204" width="6" height="15" fill="rgb(226,148,25)"/><text x="751.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="748" y="1220" width="6" height="15" fill="rgb(248,80,20)"/><text x="751.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.51%)</title><rect x="748" y="1236" width="6" height="15" fill="rgb(244,19,38)"/><text x="751.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="748" y="1252" width="6" height="15" fill="rgb(238,188,13)"/><text x="751.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="748" y="1268" width="6" height="15" fill="rgb(215,46,9)"/><text x="751.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="748" y="1284" width="6" height="15" fill="rgb(220,129,48)"/><text x="751.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="748" y="1300" width="6" height="15" fill="rgb(209,229,33)"/><text x="751.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="748" y="1316" width="6" height="15" fill="rgb(243,174,29)"/><text x="751.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="748" y="1332" width="6" height="15" fill="rgb(216,213,13)"/><text x="751.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:27) (1 samples, 0.51%)</title><rect x="748" y="1348" width="6" height="15" fill="rgb(243,106,12)"/><text x="751.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="748" y="1364" width="6" height="15" fill="rgb(251,182,5)"/><text x="751.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.51%)</title><rect x="748" y="1380" width="6" height="15" fill="rgb(214,73,15)"/><text x="751.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.51%)</title><rect x="748" y="1396" width="6" height="15" fill="rgb(225,38,51)"/><text x="751.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.51%)</title><rect x="748" y="1412" width="6" height="15" fill="rgb(230,110,36)"/><text x="751.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.51%)</title><rect x="748" y="1428" width="6" height="15" fill="rgb(214,60,20)"/><text x="751.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.51%)</title><rect x="748" y="1444" width="6" height="15" fill="rgb(239,116,9)"/><text x="751.00" y="1454.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.51%)</title><rect x="748" y="1460" width="6" height="15" fill="rgb(250,86,19)"/><text x="751.00" y="1470.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.51%)</title><rect x="748" y="1476" width="6" height="15" fill="rgb(236,229,34)"/><text x="751.00" y="1486.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:373) (1 samples, 0.51%)</title><rect x="748" y="1492" width="6" height="15" fill="rgb(220,148,46)"/><text x="751.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 1.01%)</title><rect x="748" y="1108" width="12" height="15" fill="rgb(232,81,50)"/><text x="751.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="748" y="1124" width="12" height="15" fill="rgb(235,30,49)"/><text x="751.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="748" y="1140" width="12" height="15" fill="rgb(211,189,13)"/><text x="751.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="748" y="1156" width="12" height="15" fill="rgb(238,83,27)"/><text x="751.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="748" y="1172" width="12" height="15" fill="rgb(206,106,52)"/><text x="751.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="748" y="1188" width="12" height="15" fill="rgb(215,188,19)"/><text x="751.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.51%)</title><rect x="754" y="1204" width="6" height="15" fill="rgb(248,7,44)"/><text x="757.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="754" y="1220" width="6" height="15" fill="rgb(248,5,38)"/><text x="757.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="754" y="1236" width="6" height="15" fill="rgb(238,203,32)"/><text x="757.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="754" y="1252" width="6" height="15" fill="rgb(225,18,52)"/><text x="757.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="754" y="1268" width="6" height="15" fill="rgb(221,117,44)"/><text x="757.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="754" y="1284" width="6" height="15" fill="rgb(234,150,30)"/><text x="757.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.51%)</title><rect x="754" y="1300" width="6" height="15" fill="rgb(217,179,0)"/><text x="757.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.51%)</title><rect x="754" y="1316" width="6" height="15" fill="rgb(207,190,39)"/><text x="757.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.51%)</title><rect x="754" y="1332" width="6" height="15" fill="rgb(214,138,19)"/><text x="757.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.51%)</title><rect x="754" y="1348" width="6" height="15" fill="rgb(237,143,29)"/><text x="757.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.51%)</title><rect x="754" y="1364" width="6" height="15" fill="rgb(214,56,23)"/><text x="757.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.51%)</title><rect x="760" y="1108" width="6" height="15" fill="rgb(249,28,12)"/><text x="763.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1124" width="6" height="15" fill="rgb(209,42,39)"/><text x="763.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1140" width="6" height="15" fill="rgb(222,47,49)"/><text x="763.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1156" width="6" height="15" fill="rgb(230,52,31)"/><text x="763.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1172" width="6" height="15" fill="rgb(208,36,12)"/><text x="763.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1188" width="6" height="15" fill="rgb(207,12,41)"/><text x="763.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.51%)</title><rect x="760" y="1204" width="6" height="15" fill="rgb(234,76,52)"/><text x="763.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1220" width="6" height="15" fill="rgb(236,29,45)"/><text x="763.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1236" width="6" height="15" fill="rgb(244,215,4)"/><text x="763.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1252" width="6" height="15" fill="rgb(237,12,14)"/><text x="763.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1268" width="6" height="15" fill="rgb(244,19,47)"/><text x="763.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1284" width="6" height="15" fill="rgb(206,180,39)"/><text x="763.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.51%)</title><rect x="760" y="1300" width="6" height="15" fill="rgb(216,121,42)"/><text x="763.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1316" width="6" height="15" fill="rgb(211,148,49)"/><text x="763.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1332" width="6" height="15" fill="rgb(209,84,51)"/><text x="763.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1348" width="6" height="15" fill="rgb(252,26,49)"/><text x="763.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1364" width="6" height="15" fill="rgb(217,183,40)"/><text x="763.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1380" width="6" height="15" fill="rgb(220,219,15)"/><text x="763.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.51%)</title><rect x="760" y="1396" width="6" height="15" fill="rgb(214,28,21)"/><text x="763.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1412" width="6" height="15" fill="rgb(221,194,45)"/><text x="763.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1428" width="6" height="15" fill="rgb(215,186,0)"/><text x="763.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1444" width="6" height="15" fill="rgb(252,132,1)"/><text x="763.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1460" width="6" height="15" fill="rgb(206,2,2)"/><text x="763.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1476" width="6" height="15" fill="rgb(248,197,16)"/><text x="763.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.51%)</title><rect x="760" y="1492" width="6" height="15" fill="rgb(207,178,28)"/><text x="763.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.51%)</title><rect x="760" y="1508" width="6" height="15" fill="rgb(240,171,18)"/><text x="763.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1524" width="6" height="15" fill="rgb(246,120,29)"/><text x="763.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1540" width="6" height="15" fill="rgb(252,122,3)"/><text x="763.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1556" width="6" height="15" fill="rgb(236,70,28)"/><text x="763.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1572" width="6" height="15" fill="rgb(234,121,34)"/><text x="763.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1588" width="6" height="15" fill="rgb(230,60,51)"/><text x="763.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1604" width="6" height="15" fill="rgb(213,43,13)"/><text x="763.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.51%)</title><rect x="760" y="1620" width="6" height="15" fill="rgb(219,196,43)"/><text x="763.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1636" width="6" height="15" fill="rgb(254,176,30)"/><text x="763.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1652" width="6" height="15" fill="rgb(235,57,4)"/><text x="763.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1668" width="6" height="15" fill="rgb(238,8,37)"/><text x="763.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1684" width="6" height="15" fill="rgb(238,220,41)"/><text x="763.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1700" width="6" height="15" fill="rgb(221,161,39)"/><text x="763.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.51%)</title><rect x="760" y="1716" width="6" height="15" fill="rgb(232,149,31)"/><text x="763.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1732" width="6" height="15" fill="rgb(239,116,26)"/><text x="763.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1748" width="6" height="15" fill="rgb(233,24,36)"/><text x="763.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1764" width="6" height="15" fill="rgb(250,123,6)"/><text x="763.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1780" width="6" height="15" fill="rgb(222,93,37)"/><text x="763.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1796" width="6" height="15" fill="rgb(249,194,45)"/><text x="763.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.51%)</title><rect x="760" y="1812" width="6" height="15" fill="rgb(225,204,41)"/><text x="763.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1828" width="6" height="15" fill="rgb(232,186,52)"/><text x="763.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1844" width="6" height="15" fill="rgb(206,39,43)"/><text x="763.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1860" width="6" height="15" fill="rgb(214,8,4)"/><text x="763.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="1876" width="6" height="15" fill="rgb(245,198,37)"/><text x="763.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1892" width="6" height="15" fill="rgb(207,178,8)"/><text x="763.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.51%)</title><rect x="760" y="1908" width="6" height="15" fill="rgb(235,130,35)"/><text x="763.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.51%)</title><rect x="760" y="1924" width="6" height="15" fill="rgb(229,102,12)"/><text x="763.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="1940" width="6" height="15" fill="rgb(233,91,8)"/><text x="763.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="1956" width="6" height="15" fill="rgb(216,45,47)"/><text x="763.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="1972" width="6" height="15" fill="rgb(251,129,38)"/><text x="763.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="1988" width="6" height="15" fill="rgb(250,224,23)"/><text x="763.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.51%)</title><rect x="760" y="2004" width="6" height="15" fill="rgb(215,229,14)"/><text x="763.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2020" width="6" height="15" fill="rgb(238,151,47)"/><text x="763.00" y="2030.50"></text></g><g><title>0x7f1a68529d1a (?) (1 samples, 0.51%)</title><rect x="760" y="2036" width="6" height="15" fill="rgb(241,146,38)"/><text x="763.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2052" width="6" height="15" fill="rgb(224,82,16)"/><text x="763.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2068" width="6" height="15" fill="rgb(226,151,25)"/><text x="763.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2084" width="6" height="15" fill="rgb(252,70,50)"/><text x="763.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.51%)</title><rect x="760" y="2100" width="6" height="15" fill="rgb(209,59,44)"/><text x="763.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2116" width="6" height="15" fill="rgb(217,117,48)"/><text x="763.00" y="2126.50"></text></g><g><title>0x7f1a682ec195 (?) (1 samples, 0.51%)</title><rect x="760" y="2132" width="6" height="15" fill="rgb(240,124,36)"/><text x="763.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2148" width="6" height="15" fill="rgb(249,204,54)"/><text x="763.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.51%)</title><rect x="760" y="2164" width="6" height="15" fill="rgb(249,86,36)"/><text x="763.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2180" width="6" height="15" fill="rgb(228,26,45)"/><text x="763.00" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2196" width="6" height="15" fill="rgb(211,195,33)"/><text x="763.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2212" width="6" height="15" fill="rgb(247,50,4)"/><text x="763.00" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2228" width="6" height="15" fill="rgb(219,102,5)"/><text x="763.00" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="2244" width="6" height="15" fill="rgb(237,35,15)"/><text x="763.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2260" width="6" height="15" fill="rgb(225,79,15)"/><text x="763.00" y="2270.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.51%)</title><rect x="760" y="2276" width="6" height="15" fill="rgb(228,118,4)"/><text x="763.00" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2292" width="6" height="15" fill="rgb(225,82,5)"/><text x="763.00" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2308" width="6" height="15" fill="rgb(237,141,16)"/><text x="763.00" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2324" width="6" height="15" fill="rgb(231,209,41)"/><text x="763.00" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.51%)</title><rect x="760" y="2340" width="6" height="15" fill="rgb(207,133,31)"/><text x="763.00" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2356" width="6" height="15" fill="rgb(215,149,53)"/><text x="763.00" y="2366.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.51%)</title><rect x="760" y="2372" width="6" height="15" fill="rgb(207,92,24)"/><text x="763.00" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2388" width="6" height="15" fill="rgb(244,1,46)"/><text x="763.00" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2404" width="6" height="15" fill="rgb(225,125,42)"/><text x="763.00" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2420" width="6" height="15" fill="rgb(218,115,34)"/><text x="763.00" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.51%)</title><rect x="760" y="2436" width="6" height="15" fill="rgb(252,147,30)"/><text x="763.00" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2452" width="6" height="15" fill="rgb(234,15,39)"/><text x="763.00" y="2462.50"></text></g><g><title>0x7f1a680b4373 (?) (1 samples, 0.51%)</title><rect x="760" y="2468" width="6" height="15" fill="rgb(210,145,4)"/><text x="763.00" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2484" width="6" height="15" fill="rgb(239,67,19)"/><text x="763.00" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2500" width="6" height="15" fill="rgb(241,123,35)"/><text x="763.00" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2516" width="6" height="15" fill="rgb(218,50,6)"/><text x="763.00" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.51%)</title><rect x="760" y="2532" width="6" height="15" fill="rgb(251,133,20)"/><text x="763.00" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2548" width="6" height="15" fill="rgb(231,169,6)"/><text x="763.00" y="2558.50"></text></g><g><title>0x7f1a67e77eea (?) (1 samples, 0.51%)</title><rect x="760" y="2564" width="6" height="15" fill="rgb(220,74,38)"/><text x="763.00" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.51%)</title><rect x="760" y="2580" width="6" height="15" fill="rgb(207,66,9)"/><text x="763.00" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.51%)</title><rect x="760" y="2596" width="6" height="15" fill="rgb(225,132,15)"/><text x="763.00" y="2606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.51%)</title><rect x="760" y="2612" width="6" height="15" fill="rgb(237,150,5)"/><text x="763.00" y="2622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.51%)</title><rect x="760" y="2628" width="6" height="15" fill="rgb(233,171,34)"/><text x="763.00" y="2638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.51%)</title><rect x="760" y="2644" width="6" height="15" fill="rgb(243,105,32)"/><text x="763.00" y="2654.50"></text></g><g><title>0x7f1a67c10bfa (?) (1 samples, 0.51%)</title><rect x="760" y="2660" width="6" height="15" fill="rgb(218,200,21)"/><text x="763.00" y="2670.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:202) (1 samples, 0.51%)</title><rect x="760" y="2676" width="6" height="15" fill="rgb(209,82,46)"/><text x="763.00" y="2686.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/pyparsing.py:3439) (1 samples, 0.51%)</title><rect x="766" y="1556" width="6" height="15" fill="rgb(221,149,0)"/><text x="769.00" y="1566.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.51%)</title><rect x="766" y="1572" width="6" height="15" fill="rgb(231,95,33)"/><text x="769.00" y="1582.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:3788) (1 samples, 0.51%)</title><rect x="766" y="1588" width="6" height="15" fill="rgb(223,27,23)"/><text x="769.00" y="1598.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="766" y="1604" width="6" height="15" fill="rgb(242,184,38)"/><text x="769.00" y="1614.50"></text></g><g><title>0x7f1a9a1258a4 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="766" y="1620" width="6" height="15" fill="rgb(220,153,7)"/><text x="769.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:4) (15 samples, 7.58%)</title><rect x="689" y="52" width="89" height="15" fill="rgb(220,173,4)"/><text x="692.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 7.58%)</title><rect x="689" y="68" width="89" height="15" fill="rgb(208,77,33)"/><text x="692.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 7.58%)</title><rect x="689" y="84" width="89" height="15" fill="rgb(239,158,13)"/><text x="692.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 7.58%)</title><rect x="689" y="100" width="89" height="15" fill="rgb(209,125,54)"/><text x="692.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 7.58%)</title><rect x="689" y="116" width="89" height="15" fill="rgb(253,137,6)"/><text x="692.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 7.58%)</title><rect x="689" y="132" width="89" height="15" fill="rgb(231,194,43)"/><text x="692.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (11 samples, 5.56%)</title><rect x="713" y="148" width="65" height="15" fill="rgb(219,193,17)"/><text x="716.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 5.56%)</title><rect x="713" y="164" width="65" height="15" fill="rgb(209,197,28)"/><text x="716.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 5.56%)</title><rect x="713" y="180" width="65" height="15" fill="rgb(208,101,37)"/><text x="716.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 5.56%)</title><rect x="713" y="196" width="65" height="15" fill="rgb(250,23,52)"/><text x="716.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 5.56%)</title><rect x="713" y="212" width="65" height="15" fill="rgb(233,89,48)"/><text x="716.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 5.56%)</title><rect x="713" y="228" width="65" height="15" fill="rgb(241,57,34)"/><text x="716.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 4.04%)</title><rect x="731" y="244" width="47" height="15" fill="rgb(205,207,22)"/><text x="734.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 4.04%)</title><rect x="731" y="260" width="47" height="15" fill="rgb(237,70,35)"/><text x="734.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 4.04%)</title><rect x="731" y="276" width="47" height="15" fill="rgb(233,159,41)"/><text x="734.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 4.04%)</title><rect x="731" y="292" width="47" height="15" fill="rgb(232,162,19)"/><text x="734.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 4.04%)</title><rect x="731" y="308" width="47" height="15" fill="rgb(215,26,47)"/><text x="734.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 4.04%)</title><rect x="731" y="324" width="47" height="15" fill="rgb(222,155,36)"/><text x="734.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 3.54%)</title><rect x="737" y="340" width="41" height="15" fill="rgb(206,72,3)"/><text x="740.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.54%)</title><rect x="737" y="356" width="41" height="15" fill="rgb(219,143,13)"/><text x="740.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.54%)</title><rect x="737" y="372" width="41" height="15" fill="rgb(223,93,23)"/><text x="740.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.54%)</title><rect x="737" y="388" width="41" height="15" fill="rgb(247,75,24)"/><text x="740.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.54%)</title><rect x="737" y="404" width="41" height="15" fill="rgb(235,134,4)"/><text x="740.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.54%)</title><rect x="737" y="420" width="41" height="15" fill="rgb(222,4,7)"/><text x="740.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 2.53%)</title><rect x="748" y="436" width="30" height="15" fill="rgb(254,165,53)"/><text x="751.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="452" width="30" height="15" fill="rgb(214,20,51)"/><text x="751.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.53%)</title><rect x="748" y="468" width="30" height="15" fill="rgb(244,21,22)"/><text x="751.00" y="478.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="484" width="30" height="15" fill="rgb(250,61,29)"/><text x="751.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="500" width="30" height="15" fill="rgb(224,30,14)"/><text x="751.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="516" width="30" height="15" fill="rgb(221,99,46)"/><text x="751.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="532" width="30" height="15" fill="rgb(244,130,13)"/><text x="751.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="548" width="30" height="15" fill="rgb(243,226,39)"/><text x="751.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="564" width="30" height="15" fill="rgb(252,145,7)"/><text x="751.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 2.53%)</title><rect x="748" y="580" width="30" height="15" fill="rgb(212,191,39)"/><text x="751.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="596" width="30" height="15" fill="rgb(250,35,45)"/><text x="751.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="612" width="30" height="15" fill="rgb(253,174,24)"/><text x="751.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="628" width="30" height="15" fill="rgb(234,168,26)"/><text x="751.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="644" width="30" height="15" fill="rgb(249,35,35)"/><text x="751.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="660" width="30" height="15" fill="rgb(252,27,24)"/><text x="751.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 2.53%)</title><rect x="748" y="676" width="30" height="15" fill="rgb(210,148,54)"/><text x="751.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="692" width="30" height="15" fill="rgb(229,122,52)"/><text x="751.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="708" width="30" height="15" fill="rgb(212,183,33)"/><text x="751.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="724" width="30" height="15" fill="rgb(242,204,34)"/><text x="751.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="740" width="30" height="15" fill="rgb(207,25,0)"/><text x="751.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="756" width="30" height="15" fill="rgb(249,210,32)"/><text x="751.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 2.53%)</title><rect x="748" y="772" width="30" height="15" fill="rgb(248,224,11)"/><text x="751.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="788" width="30" height="15" fill="rgb(235,140,30)"/><text x="751.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="804" width="30" height="15" fill="rgb(226,45,36)"/><text x="751.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="820" width="30" height="15" fill="rgb(225,167,9)"/><text x="751.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="836" width="30" height="15" fill="rgb(245,83,30)"/><text x="751.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="852" width="30" height="15" fill="rgb(221,45,43)"/><text x="751.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 2.53%)</title><rect x="748" y="868" width="30" height="15" fill="rgb(226,200,49)"/><text x="751.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="884" width="30" height="15" fill="rgb(230,9,44)"/><text x="751.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.53%)</title><rect x="748" y="900" width="30" height="15" fill="rgb(240,79,54)"/><text x="751.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="916" width="30" height="15" fill="rgb(206,121,4)"/><text x="751.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="932" width="30" height="15" fill="rgb(232,216,50)"/><text x="751.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="948" width="30" height="15" fill="rgb(212,14,17)"/><text x="751.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="964" width="30" height="15" fill="rgb(233,93,31)"/><text x="751.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="980" width="30" height="15" fill="rgb(236,33,12)"/><text x="751.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="996" width="30" height="15" fill="rgb(241,18,16)"/><text x="751.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 2.53%)</title><rect x="748" y="1012" width="30" height="15" fill="rgb(223,27,33)"/><text x="751.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.53%)</title><rect x="748" y="1028" width="30" height="15" fill="rgb(221,202,50)"/><text x="751.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.53%)</title><rect x="748" y="1044" width="30" height="15" fill="rgb(227,38,19)"/><text x="751.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.53%)</title><rect x="748" y="1060" width="30" height="15" fill="rgb(225,86,20)"/><text x="751.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.53%)</title><rect x="748" y="1076" width="30" height="15" fill="rgb(212,138,12)"/><text x="751.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.53%)</title><rect x="748" y="1092" width="30" height="15" fill="rgb(242,203,17)"/><text x="751.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:9) (2 samples, 1.01%)</title><rect x="766" y="1108" width="12" height="15" fill="rgb(209,142,20)"/><text x="769.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.01%)</title><rect x="766" y="1124" width="12" height="15" fill="rgb(206,38,48)"/><text x="769.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.01%)</title><rect x="766" y="1140" width="12" height="15" fill="rgb(253,23,36)"/><text x="769.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.01%)</title><rect x="766" y="1156" width="12" height="15" fill="rgb(254,210,20)"/><text x="769.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.01%)</title><rect x="766" y="1172" width="12" height="15" fill="rgb(254,42,48)"/><text x="769.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.01%)</title><rect x="766" y="1188" width="12" height="15" fill="rgb(241,63,35)"/><text x="769.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py:34) (2 samples, 1.01%)</title><rect x="766" y="1204" width="12" height="15" fill="rgb(207,47,54)"/><text x="769.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py:29) (2 samples, 1.01%)</title><rect x="766" y="1220" width="12" height="15" fill="rgb(253,229,29)"/><text x="769.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py:479) (2 samples, 1.01%)</title><rect x="766" y="1236" width="12" height="15" fill="rgb(214,194,4)"/><text x="769.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py:3148) (2 samples, 1.01%)</title><rect x="766" y="1252" width="12" height="15" fill="rgb(239,171,49)"/><text x="769.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py:3094) (2 samples, 1.01%)</title><rect x="766" y="1268" width="12" height="15" fill="rgb(229,140,29)"/><text x="769.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:3101) (2 samples, 1.01%)</title><rect x="766" y="1284" width="12" height="15" fill="rgb(254,97,41)"/><text x="769.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py:90) (2 samples, 1.01%)</title><rect x="766" y="1300" width="12" height="15" fill="rgb(244,15,44)"/><text x="769.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py:1637) (2 samples, 1.01%)</title><rect x="766" y="1316" width="12" height="15" fill="rgb(246,74,47)"/><text x="769.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1332" width="12" height="15" fill="rgb(215,72,21)"/><text x="769.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1348" width="12" height="15" fill="rgb(225,168,41)"/><text x="769.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1364" width="12" height="15" fill="rgb(207,109,39)"/><text x="769.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1380" width="12" height="15" fill="rgb(211,174,5)"/><text x="769.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1396" width="12" height="15" fill="rgb(240,53,30)"/><text x="769.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1412" width="12" height="15" fill="rgb(236,126,21)"/><text x="769.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1428" width="12" height="15" fill="rgb(224,153,19)"/><text x="769.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3765) (2 samples, 1.01%)</title><rect x="766" y="1444" width="12" height="15" fill="rgb(237,108,21)"/><text x="769.00" y="1454.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1460" width="12" height="15" fill="rgb(252,144,17)"/><text x="769.00" y="1470.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (2 samples, 1.01%)</title><rect x="766" y="1476" width="12" height="15" fill="rgb(231,197,54)"/><text x="769.00" y="1486.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3349) (2 samples, 1.01%)</title><rect x="766" y="1492" width="12" height="15" fill="rgb(229,114,31)"/><text x="769.00" y="1502.50"></text></g><g><title>unicode_new (python3.7) (2 samples, 1.01%)</title><rect x="766" y="1508" width="12" height="15" fill="rgb(213,92,54)"/><text x="769.00" y="1518.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:3439) (2 samples, 1.01%)</title><rect x="766" y="1524" width="12" height="15" fill="rgb(238,114,16)"/><text x="769.00" y="1534.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 1.01%)</title><rect x="766" y="1540" width="12" height="15" fill="rgb(247,2,47)"/><text x="769.00" y="1550.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="772" y="1556" width="6" height="15" fill="rgb(235,168,17)"/><text x="775.00" y="1566.50"></text></g><g><title>0x7f1a9a1258a4 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="772" y="1572" width="6" height="15" fill="rgb(232,62,16)"/><text x="775.00" y="1582.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.51%)</title><rect x="796" y="116" width="6" height="15" fill="rgb(218,204,37)"/><text x="799.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.51%)</title><rect x="796" y="132" width="6" height="15" fill="rgb(225,60,5)"/><text x="799.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.51%)</title><rect x="796" y="148" width="6" height="15" fill="rgb(224,184,46)"/><text x="799.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.51%)</title><rect x="808" y="164" width="6" height="15" fill="rgb(253,158,29)"/><text x="811.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.51%)</title><rect x="814" y="164" width="6" height="15" fill="rgb(222,191,39)"/><text x="817.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 1.01%)</title><rect x="838" y="180" width="12" height="15" fill="rgb(219,157,46)"/><text x="841.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.51%)</title><rect x="862" y="212" width="6" height="15" fill="rgb(229,21,49)"/><text x="865.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.51%)</title><rect x="886" y="260" width="6" height="15" fill="rgb(243,50,4)"/><text x="889.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.51%)</title><rect x="886" y="276" width="6" height="15" fill="rgb(247,36,0)"/><text x="889.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.51%)</title><rect x="886" y="292" width="6" height="15" fill="rgb(250,146,30)"/><text x="889.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.51%)</title><rect x="892" y="260" width="5" height="15" fill="rgb(246,61,49)"/><text x="895.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.51%)</title><rect x="892" y="276" width="5" height="15" fill="rgb(211,184,3)"/><text x="895.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.51%)</title><rect x="892" y="292" width="5" height="15" fill="rgb(213,45,42)"/><text x="895.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.51%)</title><rect x="892" y="308" width="5" height="15" fill="rgb(222,209,47)"/><text x="895.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:231) (1 samples, 0.51%)</title><rect x="892" y="324" width="5" height="15" fill="rgb(206,17,25)"/><text x="895.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.51%)</title><rect x="897" y="308" width="6" height="15" fill="rgb(242,197,22)"/><text x="900.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.51%)</title><rect x="897" y="324" width="6" height="15" fill="rgb(240,199,21)"/><text x="900.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.51%)</title><rect x="897" y="340" width="6" height="15" fill="rgb(246,142,18)"/><text x="900.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.51%)</title><rect x="897" y="356" width="6" height="15" fill="rgb(240,105,25)"/><text x="900.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.51%)</title><rect x="897" y="372" width="6" height="15" fill="rgb(235,58,33)"/><text x="900.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.51%)</title><rect x="897" y="388" width="6" height="15" fill="rgb(208,164,34)"/><text x="900.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.51%)</title><rect x="903" y="324" width="6" height="15" fill="rgb(230,42,43)"/><text x="906.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.51%)</title><rect x="903" y="340" width="6" height="15" fill="rgb(234,187,1)"/><text x="906.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.51%)</title><rect x="909" y="356" width="6" height="15" fill="rgb(221,105,1)"/><text x="912.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.51%)</title><rect x="909" y="372" width="6" height="15" fill="rgb(242,116,41)"/><text x="912.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.51%)</title><rect x="909" y="388" width="6" height="15" fill="rgb(231,66,33)"/><text x="912.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.51%)</title><rect x="915" y="356" width="6" height="15" fill="rgb(237,139,28)"/><text x="918.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.51%)</title><rect x="915" y="372" width="6" height="15" fill="rgb(212,139,17)"/><text x="918.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.51%)</title><rect x="915" y="388" width="6" height="15" fill="rgb(224,125,20)"/><text x="918.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.52%)</title><rect x="909" y="324" width="18" height="15" fill="rgb(233,123,28)"/><text x="912.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.52%)</title><rect x="909" y="340" width="18" height="15" fill="rgb(211,21,51)"/><text x="912.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.51%)</title><rect x="921" y="356" width="6" height="15" fill="rgb(249,144,25)"/><text x="924.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.51%)</title><rect x="921" y="372" width="6" height="15" fill="rgb(242,109,33)"/><text x="924.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (6 samples, 3.03%)</title><rect x="897" y="260" width="36" height="15" fill="rgb(225,129,31)"/><text x="900.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 3.03%)</title><rect x="897" y="276" width="36" height="15" fill="rgb(217,48,37)"/><text x="900.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 3.03%)</title><rect x="897" y="292" width="36" height="15" fill="rgb(208,120,10)"/><text x="900.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 2.53%)</title><rect x="903" y="308" width="30" height="15" fill="rgb(238,123,6)"/><text x="906.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.51%)</title><rect x="927" y="324" width="6" height="15" fill="rgb(214,147,52)"/><text x="930.00" y="334.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.51%)</title><rect x="927" y="340" width="6" height="15" fill="rgb(228,88,39)"/><text x="930.00" y="350.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (11 samples, 5.56%)</title><rect x="874" y="244" width="65" height="15" fill="rgb(223,220,36)"/><text x="877.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.51%)</title><rect x="933" y="260" width="6" height="15" fill="rgb(252,165,10)"/><text x="936.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.51%)</title><rect x="933" y="276" width="6" height="15" fill="rgb(240,74,10)"/><text x="936.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.51%)</title><rect x="939" y="276" width="6" height="15" fill="rgb(241,182,30)"/><text x="942.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1120) (1 samples, 0.51%)</title><rect x="939" y="292" width="6" height="15" fill="rgb(218,2,44)"/><text x="942.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.51%)</title><rect x="945" y="276" width="6" height="15" fill="rgb(229,151,3)"/><text x="948.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.51%)</title><rect x="945" y="292" width="6" height="15" fill="rgb(229,32,3)"/><text x="948.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.51%)</title><rect x="945" y="308" width="6" height="15" fill="rgb(208,182,38)"/><text x="948.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.51%)</title><rect x="945" y="324" width="6" height="15" fill="rgb(236,116,7)"/><text x="948.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.51%)</title><rect x="945" y="340" width="6" height="15" fill="rgb(220,57,29)"/><text x="948.00" y="350.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.51%)</title><rect x="945" y="356" width="6" height="15" fill="rgb(226,26,10)"/><text x="948.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (16 samples, 8.08%)</title><rect x="862" y="196" width="95" height="15" fill="rgb(206,110,7)"/><text x="865.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (15 samples, 7.58%)</title><rect x="868" y="212" width="89" height="15" fill="rgb(210,41,52)"/><text x="871.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (15 samples, 7.58%)</title><rect x="868" y="228" width="89" height="15" fill="rgb(222,37,34)"/><text x="871.00" y="238.50">_run (mlpr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (3 samples, 1.52%)</title><rect x="939" y="244" width="18" height="15" fill="rgb(208,57,12)"/><text x="942.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.52%)</title><rect x="939" y="260" width="18" height="15" fill="rgb(218,48,53)"/><text x="942.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.51%)</title><rect x="951" y="276" width="6" height="15" fill="rgb(245,220,53)"/><text x="954.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.51%)</title><rect x="951" y="292" width="6" height="15" fill="rgb(243,213,26)"/><text x="954.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.51%)</title><rect x="951" y="308" width="6" height="15" fill="rgb(215,204,39)"/><text x="954.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.51%)</title><rect x="951" y="324" width="6" height="15" fill="rgb(247,34,43)"/><text x="954.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2063) (1 samples, 0.51%)</title><rect x="951" y="340" width="6" height="15" fill="rgb(218,219,50)"/><text x="954.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.51%)</title><rect x="969" y="324" width="6" height="15" fill="rgb(244,195,25)"/><text x="972.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="969" y="340" width="6" height="15" fill="rgb(214,56,0)"/><text x="972.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.51%)</title><rect x="975" y="324" width="6" height="15" fill="rgb(243,13,14)"/><text x="978.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.51%)</title><rect x="975" y="340" width="6" height="15" fill="rgb(206,22,13)"/><text x="978.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.51%)</title><rect x="975" y="356" width="6" height="15" fill="rgb(239,2,14)"/><text x="978.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (4 samples, 2.02%)</title><rect x="963" y="228" width="24" height="15" fill="rgb(219,76,6)"/><text x="966.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (3 samples, 1.52%)</title><rect x="969" y="244" width="18" height="15" fill="rgb(247,129,40)"/><text x="972.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 1.52%)</title><rect x="969" y="260" width="18" height="15" fill="rgb(250,204,34)"/><text x="972.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.52%)</title><rect x="969" y="276" width="18" height="15" fill="rgb(233,222,13)"/><text x="972.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 1.52%)</title><rect x="969" y="292" width="18" height="15" fill="rgb(241,60,33)"/><text x="972.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.52%)</title><rect x="969" y="308" width="18" height="15" fill="rgb(238,17,39)"/><text x="972.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.51%)</title><rect x="981" y="324" width="6" height="15" fill="rgb(216,165,53)"/><text x="984.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.51%)</title><rect x="981" y="340" width="6" height="15" fill="rgb(218,11,31)"/><text x="984.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.51%)</title><rect x="987" y="228" width="6" height="15" fill="rgb(227,191,19)"/><text x="990.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.51%)</title><rect x="993" y="228" width="6" height="15" fill="rgb(226,217,27)"/><text x="996.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.51%)</title><rect x="993" y="244" width="6" height="15" fill="rgb(247,206,9)"/><text x="996.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.51%)</title><rect x="993" y="260" width="6" height="15" fill="rgb(230,152,15)"/><text x="996.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.51%)</title><rect x="993" y="276" width="6" height="15" fill="rgb(238,90,33)"/><text x="996.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.51%)</title><rect x="999" y="276" width="6" height="15" fill="rgb(230,54,40)"/><text x="1002.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.51%)</title><rect x="999" y="292" width="6" height="15" fill="rgb(241,222,12)"/><text x="1002.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 1.01%)</title><rect x="999" y="244" width="12" height="15" fill="rgb(253,213,15)"/><text x="1002.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 1.01%)</title><rect x="999" y="260" width="12" height="15" fill="rgb(244,227,40)"/><text x="1002.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.51%)</title><rect x="1005" y="276" width="6" height="15" fill="rgb(226,187,39)"/><text x="1008.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.51%)</title><rect x="1005" y="292" width="6" height="15" fill="rgb(245,71,21)"/><text x="1008.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.51%)</title><rect x="1011" y="260" width="6" height="15" fill="rgb(223,34,40)"/><text x="1014.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.51%)</title><rect x="1011" y="276" width="6" height="15" fill="rgb(254,165,46)"/><text x="1014.00" y="286.50"></text></g><g><title>0x7f1a9a0db9e8 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1017" y="372" width="6" height="15" fill="rgb(243,130,6)"/><text x="1020.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 1.01%)</title><rect x="1017" y="276" width="12" height="15" fill="rgb(254,92,0)"/><text x="1020.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 1.01%)</title><rect x="1017" y="292" width="12" height="15" fill="rgb(210,137,20)"/><text x="1020.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 1.01%)</title><rect x="1017" y="308" width="12" height="15" fill="rgb(228,148,36)"/><text x="1020.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 1.01%)</title><rect x="1017" y="324" width="12" height="15" fill="rgb(219,190,50)"/><text x="1020.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 1.01%)</title><rect x="1017" y="340" width="12" height="15" fill="rgb(226,129,54)"/><text x="1020.00" y="350.50"></text></g><g><title>0x7f1a9a0db7a5 (libc-2.29.so) (2 samples, 1.01%)</title><rect x="1017" y="356" width="12" height="15" fill="rgb(230,155,27)"/><text x="1020.00" y="366.50"></text></g><g><title>0x7f1a9a143d50 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1023" y="372" width="6" height="15" fill="rgb(210,225,43)"/><text x="1026.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 2.02%)</title><rect x="1011" y="244" width="24" height="15" fill="rgb(224,36,50)"/><text x="1014.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.52%)</title><rect x="1017" y="260" width="18" height="15" fill="rgb(232,221,18)"/><text x="1020.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.51%)</title><rect x="1029" y="276" width="6" height="15" fill="rgb(211,176,9)"/><text x="1032.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.51%)</title><rect x="1029" y="292" width="6" height="15" fill="rgb(218,30,11)"/><text x="1032.00" y="302.50"></text></g><g><title>0x7f1a8540b302 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="1029" y="308" width="6" height="15" fill="rgb(221,179,43)"/><text x="1032.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (7 samples, 3.54%)</title><rect x="999" y="228" width="42" height="15" fill="rgb(236,204,2)"/><text x="1002.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.51%)</title><rect x="1035" y="244" width="6" height="15" fill="rgb(234,214,11)"/><text x="1038.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (16 samples, 8.08%)</title><rect x="957" y="196" width="95" height="15" fill="rgb(219,81,13)"/><text x="960.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (16 samples, 8.08%)</title><rect x="957" y="212" width="95" height="15" fill="rgb(207,171,30)"/><text x="960.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (2 samples, 1.01%)</title><rect x="1041" y="228" width="11" height="15" fill="rgb(227,55,15)"/><text x="1044.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 1.01%)</title><rect x="1041" y="244" width="11" height="15" fill="rgb(242,183,2)"/><text x="1044.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 1.01%)</title><rect x="1041" y="260" width="11" height="15" fill="rgb(240,179,17)"/><text x="1044.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 1.01%)</title><rect x="1041" y="276" width="11" height="15" fill="rgb(245,167,18)"/><text x="1044.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (35 samples, 17.68%)</title><rect x="850" y="180" width="208" height="15" fill="rgb(207,94,32)"/><text x="853.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.51%)</title><rect x="1052" y="196" width="6" height="15" fill="rgb(247,116,6)"/><text x="1055.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.51%)</title><rect x="1058" y="180" width="6" height="15" fill="rgb(234,25,30)"/><text x="1061.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.51%)</title><rect x="1064" y="180" width="6" height="15" fill="rgb(233,125,36)"/><text x="1067.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (43 samples, 21.72%)</title><rect x="820" y="164" width="256" height="15" fill="rgb(239,124,19)"/><text x="823.00" y="174.50">_run_sequence_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.51%)</title><rect x="1070" y="180" width="6" height="15" fill="rgb(229,55,24)"/><text x="1073.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:45) (51 samples, 25.76%)</title><rect x="778" y="52" width="304" height="15" fill="rgb(224,24,22)"/><text x="781.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:44) (51 samples, 25.76%)</title><rect x="778" y="68" width="304" height="15" fill="rgb(231,176,27)"/><text x="781.00" y="78.50">profile_pyrt (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (51 samples, 25.76%)</title><rect x="778" y="84" width="304" height="15" fill="rgb(234,108,0)"/><text x="781.00" y="94.50">setup_profile (bench_LogisticRegression_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (51 samples, 25.76%)</title><rect x="778" y="100" width="304" height="15" fill="rgb(208,213,36)"/><text x="781.00" y="110.50">profile (bench_LogisticRegression_liblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (47 samples, 23.74%)</title><rect x="802" y="116" width="280" height="15" fill="rgb(239,20,34)"/><text x="805.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (47 samples, 23.74%)</title><rect x="802" y="132" width="280" height="15" fill="rgb(214,218,16)"/><text x="805.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (47 samples, 23.74%)</title><rect x="802" y="148" width="280" height="15" fill="rgb(219,84,47)"/><text x="805.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.51%)</title><rect x="1076" y="164" width="6" height="15" fill="rgb(242,45,36)"/><text x="1079.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.51%)</title><rect x="1076" y="180" width="6" height="15" fill="rgb(232,86,54)"/><text x="1079.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.51%)</title><rect x="1094" y="196" width="6" height="15" fill="rgb(247,15,37)"/><text x="1097.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.51%)</title><rect x="1094" y="212" width="6" height="15" fill="rgb(245,181,16)"/><text x="1097.00" y="222.50"></text></g><g><title>0x7f1a5a193ff9 (?) (1 samples, 0.51%)</title><rect x="1100" y="212" width="6" height="15" fill="rgb(249,164,43)"/><text x="1103.00" y="222.50"></text></g><g><title>0x7f1a5a18eef6 (?) (1 samples, 0.51%)</title><rect x="1100" y="228" width="6" height="15" fill="rgb(245,172,24)"/><text x="1103.00" y="238.50"></text></g><g><title>0x7f1a5a18396a (?) (1 samples, 0.51%)</title><rect x="1100" y="244" width="6" height="15" fill="rgb(221,222,12)"/><text x="1103.00" y="254.50"></text></g><g><title>0x7f1a5a1993eb (?) (1 samples, 0.51%)</title><rect x="1100" y="260" width="6" height="15" fill="rgb(219,208,42)"/><text x="1103.00" y="270.50"></text></g><g><title>0x7f1a5a679392 (?) (1 samples, 0.51%)</title><rect x="1100" y="276" width="6" height="15" fill="rgb(218,50,16)"/><text x="1103.00" y="286.50"></text></g><g><title>0x7ffcd016ba01 ([vdso]) (1 samples, 0.51%)</title><rect x="1106" y="212" width="6" height="15" fill="rgb(228,215,2)"/><text x="1109.00" y="222.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="1118" y="308" width="6" height="15" fill="rgb(212,91,54)"/><text x="1121.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1118" y="324" width="6" height="15" fill="rgb(253,210,26)"/><text x="1121.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="1118" y="292" width="12" height="15" fill="rgb(230,142,42)"/><text x="1121.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1124" y="308" width="6" height="15" fill="rgb(213,199,19)"/><text x="1127.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="1124" y="324" width="6" height="15" fill="rgb(237,86,24)"/><text x="1127.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1124" y="340" width="6" height="15" fill="rgb(229,35,36)"/><text x="1127.00" y="350.50"></text></g><g><title>0x7f1a9a124c38 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1124" y="356" width="6" height="15" fill="rgb(248,174,40)"/><text x="1127.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1130" y="292" width="6" height="15" fill="rgb(228,81,48)"/><text x="1133.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1130" y="308" width="6" height="15" fill="rgb(217,49,12)"/><text x="1133.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1136" y="340" width="6" height="15" fill="rgb(210,132,2)"/><text x="1139.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1136" y="356" width="6" height="15" fill="rgb(215,7,25)"/><text x="1139.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1136" y="372" width="6" height="15" fill="rgb(232,220,13)"/><text x="1139.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1136" y="388" width="6" height="15" fill="rgb(213,222,11)"/><text x="1139.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1142" y="340" width="6" height="15" fill="rgb(250,22,21)"/><text x="1145.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1142" y="356" width="6" height="15" fill="rgb(246,151,51)"/><text x="1145.00" y="366.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.01%)</title><rect x="1148" y="340" width="12" height="15" fill="rgb(239,195,47)"/><text x="1151.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="356" width="6" height="15" fill="rgb(233,82,22)"/><text x="1157.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="372" width="6" height="15" fill="rgb(207,32,28)"/><text x="1157.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="388" width="6" height="15" fill="rgb(222,62,27)"/><text x="1157.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="404" width="6" height="15" fill="rgb(222,170,19)"/><text x="1157.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="420" width="6" height="15" fill="rgb(219,161,31)"/><text x="1157.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="436" width="6" height="15" fill="rgb(207,97,24)"/><text x="1157.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="452" width="6" height="15" fill="rgb(213,180,13)"/><text x="1157.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="468" width="6" height="15" fill="rgb(242,82,22)"/><text x="1157.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="484" width="6" height="15" fill="rgb(232,214,9)"/><text x="1157.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="500" width="6" height="15" fill="rgb(220,59,52)"/><text x="1157.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1154" y="516" width="6" height="15" fill="rgb(210,55,11)"/><text x="1157.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.04%)</title><rect x="1118" y="260" width="48" height="15" fill="rgb(235,140,54)"/><text x="1121.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.04%)</title><rect x="1118" y="276" width="48" height="15" fill="rgb(222,1,19)"/><text x="1121.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.53%)</title><rect x="1136" y="292" width="30" height="15" fill="rgb(211,3,50)"/><text x="1139.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.53%)</title><rect x="1136" y="308" width="30" height="15" fill="rgb(221,179,6)"/><text x="1139.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.53%)</title><rect x="1136" y="324" width="30" height="15" fill="rgb(220,177,36)"/><text x="1139.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="340" width="6" height="15" fill="rgb(222,100,36)"/><text x="1163.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="356" width="6" height="15" fill="rgb(212,146,5)"/><text x="1163.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="372" width="6" height="15" fill="rgb(226,197,31)"/><text x="1163.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="388" width="6" height="15" fill="rgb(247,26,47)"/><text x="1163.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="404" width="6" height="15" fill="rgb(253,24,40)"/><text x="1163.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="420" width="6" height="15" fill="rgb(230,28,12)"/><text x="1163.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="436" width="6" height="15" fill="rgb(209,67,50)"/><text x="1163.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1160" y="452" width="6" height="15" fill="rgb(247,161,50)"/><text x="1163.00" y="462.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1166" y="260" width="6" height="15" fill="rgb(227,220,10)"/><text x="1169.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 5.05%)</title><rect x="1118" y="244" width="60" height="15" fill="rgb(238,165,40)"/><text x="1121.00" y="254.50">onnxru..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1172" y="260" width="6" height="15" fill="rgb(251,207,34)"/><text x="1175.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (15 samples, 7.58%)</title><rect x="1094" y="164" width="90" height="15" fill="rgb(232,98,25)"/><text x="1097.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (15 samples, 7.58%)</title><rect x="1094" y="180" width="90" height="15" fill="rgb(239,167,6)"/><text x="1097.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (14 samples, 7.07%)</title><rect x="1100" y="196" width="84" height="15" fill="rgb(221,103,30)"/><text x="1103.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.06%)</title><rect x="1112" y="212" width="72" height="15" fill="rgb(215,163,44)"/><text x="1115.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.06%)</title><rect x="1112" y="228" width="72" height="15" fill="rgb(222,75,46)"/><text x="1115.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1178" y="244" width="6" height="15" fill="rgb(238,68,37)"/><text x="1181.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="1178" y="260" width="6" height="15" fill="rgb(207,67,37)"/><text x="1181.00" y="270.50"></text></g><g><title>all (198 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,183,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:52) (18 samples, 9.09%)</title><rect x="1082" y="52" width="108" height="15" fill="rgb(232,130,26)"/><text x="1085.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:51) (18 samples, 9.09%)</title><rect x="1082" y="68" width="108" height="15" fill="rgb(220,143,20)"/><text x="1085.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (18 samples, 9.09%)</title><rect x="1082" y="84" width="108" height="15" fill="rgb(237,118,30)"/><text x="1085.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (18 samples, 9.09%)</title><rect x="1082" y="100" width="108" height="15" fill="rgb(226,145,52)"/><text x="1085.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (17 samples, 8.59%)</title><rect x="1088" y="116" width="102" height="15" fill="rgb(214,229,17)"/><text x="1091.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (17 samples, 8.59%)</title><rect x="1088" y="132" width="102" height="15" fill="rgb(224,188,36)"/><text x="1091.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (16 samples, 8.08%)</title><rect x="1094" y="148" width="96" height="15" fill="rgb(239,66,8)"/><text x="1097.00" y="158.50">run (mlprod..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.51%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(247,113,53)"/><text x="1187.00" y="174.50"></text></g></g></svg>