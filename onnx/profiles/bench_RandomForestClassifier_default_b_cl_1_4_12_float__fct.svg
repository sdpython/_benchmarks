<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1462" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1445.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1445.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(252,137,17)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(242,65,47)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(226,103,18)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(210,42,51)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(213,117,51)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(241,61,35)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(237,44,5)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(247,227,46)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(253,229,8)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(207,125,27)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(208,128,31)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.32%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(218,169,44)"/><text x="13.00" y="1054.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(254,120,11)"/><text x="16.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.96%)</title><rect x="10" y="292" width="11" height="15" fill="rgb(244,177,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="308" width="11" height="15" fill="rgb(225,97,18)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="324" width="11" height="15" fill="rgb(220,228,48)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="340" width="11" height="15" fill="rgb(236,96,14)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="10" y="356" width="11" height="15" fill="rgb(245,167,36)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="372" width="11" height="15" fill="rgb(237,97,20)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.96%)</title><rect x="10" y="388" width="11" height="15" fill="rgb(214,170,32)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="404" width="11" height="15" fill="rgb(218,97,13)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="420" width="11" height="15" fill="rgb(254,181,43)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="436" width="11" height="15" fill="rgb(248,179,14)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="10" y="452" width="11" height="15" fill="rgb(228,177,25)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="468" width="11" height="15" fill="rgb(229,155,4)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.96%)</title><rect x="10" y="484" width="11" height="15" fill="rgb(205,222,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="500" width="11" height="15" fill="rgb(245,35,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="516" width="11" height="15" fill="rgb(205,27,12)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="532" width="11" height="15" fill="rgb(242,127,34)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="10" y="548" width="11" height="15" fill="rgb(242,160,13)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="564" width="11" height="15" fill="rgb(209,184,38)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.96%)</title><rect x="10" y="580" width="11" height="15" fill="rgb(212,151,28)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(214,93,46)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(251,135,21)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(246,146,12)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(206,2,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(230,104,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(205,229,36)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(215,175,53)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(211,8,19)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.96%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(210,137,41)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(217,188,30)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(205,187,3)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(228,108,40)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(219,67,43)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(210,145,25)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(217,165,49)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(219,21,33)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(211,8,19)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="868" width="8" height="15" fill="rgb(229,228,47)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(238,39,3)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(221,153,46)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="916" width="8" height="15" fill="rgb(221,164,9)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="932" width="8" height="15" fill="rgb(248,170,16)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="948" width="8" height="15" fill="rgb(210,79,48)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="13" y="964" width="8" height="15" fill="rgb(246,9,38)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.64%)</title><rect x="13" y="980" width="8" height="15" fill="rgb(238,26,33)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.64%)</title><rect x="13" y="996" width="8" height="15" fill="rgb(245,196,34)"/><text x="16.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.32%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(251,182,52)"/><text x="20.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.32%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(210,75,49)"/><text x="20.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(234,74,35)"/><text x="20.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(208,161,22)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(213,215,11)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(241,17,23)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(218,186,5)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.28%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(254,190,5)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(225,45,38)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.32%)</title><rect x="21" y="292" width="4" height="15" fill="rgb(253,142,5)"/><text x="24.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="308" width="4" height="15" fill="rgb(238,219,2)"/><text x="24.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="324" width="4" height="15" fill="rgb(245,32,18)"/><text x="24.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="340" width="4" height="15" fill="rgb(224,5,30)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="356" width="4" height="15" fill="rgb(244,61,48)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="372" width="4" height="15" fill="rgb(211,118,45)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.32%)</title><rect x="21" y="388" width="4" height="15" fill="rgb(250,126,37)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="404" width="4" height="15" fill="rgb(225,26,43)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="420" width="4" height="15" fill="rgb(238,93,50)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="436" width="4" height="15" fill="rgb(234,182,27)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="452" width="4" height="15" fill="rgb(241,77,20)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="468" width="4" height="15" fill="rgb(229,204,36)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.32%)</title><rect x="21" y="484" width="4" height="15" fill="rgb(205,145,47)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="500" width="4" height="15" fill="rgb(231,57,53)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="516" width="4" height="15" fill="rgb(229,176,35)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="532" width="4" height="15" fill="rgb(215,212,12)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="548" width="4" height="15" fill="rgb(238,49,18)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="564" width="4" height="15" fill="rgb(234,191,48)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.32%)</title><rect x="21" y="580" width="4" height="15" fill="rgb(240,122,10)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="596" width="4" height="15" fill="rgb(244,170,49)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="612" width="4" height="15" fill="rgb(238,33,34)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="628" width="4" height="15" fill="rgb(210,220,13)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="644" width="4" height="15" fill="rgb(215,13,53)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="660" width="4" height="15" fill="rgb(246,187,45)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.32%)</title><rect x="21" y="676" width="4" height="15" fill="rgb(209,211,12)"/><text x="24.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="692" width="4" height="15" fill="rgb(240,67,45)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="708" width="4" height="15" fill="rgb(210,33,8)"/><text x="24.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="724" width="4" height="15" fill="rgb(245,130,10)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="740" width="4" height="15" fill="rgb(229,151,17)"/><text x="24.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="756" width="4" height="15" fill="rgb(227,127,45)"/><text x="24.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="772" width="4" height="15" fill="rgb(206,182,11)"/><text x="24.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="788" width="4" height="15" fill="rgb(222,24,54)"/><text x="24.00" y="798.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats.py) (1 samples, 0.32%)</title><rect x="21" y="804" width="4" height="15" fill="rgb(224,25,18)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="820" width="4" height="15" fill="rgb(226,79,34)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(221,200,6)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(244,144,50)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(248,11,12)"/><text x="24.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(250,218,29)"/><text x="24.00" y="894.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(246,174,11)"/><text x="24.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1124" width="3" height="15" fill="rgb(218,190,2)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1140" width="3" height="15" fill="rgb(227,43,53)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1156" width="3" height="15" fill="rgb(241,169,19)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1172" width="3" height="15" fill="rgb(254,105,36)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1188" width="3" height="15" fill="rgb(205,54,5)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.32%)</title><rect x="25" y="1204" width="3" height="15" fill="rgb(212,57,6)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1220" width="3" height="15" fill="rgb(206,35,0)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1236" width="3" height="15" fill="rgb(238,99,44)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1252" width="3" height="15" fill="rgb(221,47,36)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1268" width="3" height="15" fill="rgb(206,20,43)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1284" width="3" height="15" fill="rgb(225,194,49)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.32%)</title><rect x="25" y="1300" width="3" height="15" fill="rgb(216,152,25)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.32%)</title><rect x="25" y="1316" width="3" height="15" fill="rgb(241,221,26)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.32%)</title><rect x="25" y="1332" width="3" height="15" fill="rgb(251,134,6)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.32%)</title><rect x="25" y="1348" width="3" height="15" fill="rgb(211,83,6)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.32%)</title><rect x="25" y="1364" width="3" height="15" fill="rgb(239,113,9)"/><text x="28.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.32%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(214,224,20)"/><text x="28.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.32%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(239,52,0)"/><text x="28.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="25" y="1412" width="3" height="15" fill="rgb(229,71,22)"/><text x="28.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="484" width="7" height="15" fill="rgb(249,24,34)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="500" width="7" height="15" fill="rgb(214,71,10)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="516" width="7" height="15" fill="rgb(223,138,32)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="532" width="7" height="15" fill="rgb(250,121,14)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="548" width="7" height="15" fill="rgb(251,185,28)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="564" width="7" height="15" fill="rgb(230,165,2)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.64%)</title><rect x="25" y="580" width="7" height="15" fill="rgb(206,26,51)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="596" width="7" height="15" fill="rgb(207,33,54)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="612" width="7" height="15" fill="rgb(253,108,52)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="628" width="7" height="15" fill="rgb(250,11,13)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="644" width="7" height="15" fill="rgb(209,139,38)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="660" width="7" height="15" fill="rgb(214,18,11)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.64%)</title><rect x="25" y="676" width="7" height="15" fill="rgb(215,65,11)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="692" width="7" height="15" fill="rgb(222,171,29)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="708" width="7" height="15" fill="rgb(250,46,11)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="724" width="7" height="15" fill="rgb(223,154,46)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="740" width="7" height="15" fill="rgb(220,53,22)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="756" width="7" height="15" fill="rgb(236,128,35)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.64%)</title><rect x="25" y="772" width="7" height="15" fill="rgb(223,27,16)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="788" width="7" height="15" fill="rgb(251,11,20)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="804" width="7" height="15" fill="rgb(213,19,36)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="820" width="7" height="15" fill="rgb(247,178,23)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="836" width="7" height="15" fill="rgb(212,165,27)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="852" width="7" height="15" fill="rgb(218,104,1)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.64%)</title><rect x="25" y="868" width="7" height="15" fill="rgb(210,138,34)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="884" width="7" height="15" fill="rgb(222,78,28)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="900" width="7" height="15" fill="rgb(212,45,48)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="916" width="7" height="15" fill="rgb(235,224,37)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="932" width="7" height="15" fill="rgb(207,199,5)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="948" width="7" height="15" fill="rgb(221,118,34)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="964" width="7" height="15" fill="rgb(214,135,34)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="980" width="7" height="15" fill="rgb(239,142,34)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="996" width="7" height="15" fill="rgb(248,60,31)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.64%)</title><rect x="25" y="1012" width="7" height="15" fill="rgb(235,75,50)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="1028" width="7" height="15" fill="rgb(249,117,1)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="1044" width="7" height="15" fill="rgb(214,229,14)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="1060" width="7" height="15" fill="rgb(206,168,54)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="25" y="1076" width="7" height="15" fill="rgb(212,47,48)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="25" y="1092" width="7" height="15" fill="rgb(223,138,3)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.64%)</title><rect x="25" y="1108" width="7" height="15" fill="rgb(216,82,27)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1124" width="4" height="15" fill="rgb(206,147,52)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1140" width="4" height="15" fill="rgb(237,103,9)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1156" width="4" height="15" fill="rgb(208,133,33)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1172" width="4" height="15" fill="rgb(209,141,1)"/><text x="31.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1188" width="4" height="15" fill="rgb(215,54,45)"/><text x="31.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1204" width="4" height="15" fill="rgb(248,57,17)"/><text x="31.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1220" width="4" height="15" fill="rgb(242,14,6)"/><text x="31.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.32%)</title><rect x="28" y="1236" width="4" height="15" fill="rgb(222,172,41)"/><text x="31.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1252" width="4" height="15" fill="rgb(225,87,47)"/><text x="31.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1268" width="4" height="15" fill="rgb(228,153,24)"/><text x="31.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1284" width="4" height="15" fill="rgb(225,217,49)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1300" width="4" height="15" fill="rgb(247,40,53)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1316" width="4" height="15" fill="rgb(252,50,10)"/><text x="31.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1332" width="4" height="15" fill="rgb(209,222,20)"/><text x="31.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1348" width="4" height="15" fill="rgb(233,220,12)"/><text x="31.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1364" width="4" height="15" fill="rgb(228,165,52)"/><text x="31.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1380" width="4" height="15" fill="rgb(220,30,43)"/><text x="31.00" y="1390.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1396" width="4" height="15" fill="rgb(215,24,19)"/><text x="31.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.96%)</title><rect x="25" y="340" width="11" height="15" fill="rgb(249,173,41)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="356" width="11" height="15" fill="rgb(245,146,47)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="372" width="11" height="15" fill="rgb(207,194,20)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="388" width="11" height="15" fill="rgb(226,164,28)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="25" y="404" width="11" height="15" fill="rgb(247,134,11)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="420" width="11" height="15" fill="rgb(249,174,33)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.96%)</title><rect x="25" y="436" width="11" height="15" fill="rgb(227,227,49)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="452" width="11" height="15" fill="rgb(240,204,35)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="25" y="468" width="11" height="15" fill="rgb(225,147,38)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(243,75,12)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(249,116,37)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(215,189,46)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.32%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(227,33,47)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(245,157,32)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(228,57,37)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(236,182,54)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(210,148,44)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(244,219,24)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.32%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(208,76,19)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(254,121,46)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(219,62,51)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(226,76,17)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(254,121,47)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(214,163,35)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.32%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(244,108,45)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(249,12,54)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(217,180,53)"/><text x="35.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(218,222,21)"/><text x="35.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(234,92,53)"/><text x="35.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(228,174,19)"/><text x="35.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(236,166,39)"/><text x="35.00" y="830.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(207,58,22)"/><text x="35.00" y="846.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.32%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(237,59,9)"/><text x="35.00" y="862.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(223,55,12)"/><text x="35.00" y="878.50"></text></g><g><title>0x7f4fa4b04237 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(222,67,53)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.32%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(251,167,53)"/><text x="39.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(215,44,39)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(241,209,33)"/><text x="39.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(226,196,43)"/><text x="39.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(239,224,20)"/><text x="39.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(251,36,31)"/><text x="39.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.32%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(229,99,10)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(251,199,34)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(207,153,48)"/><text x="39.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(205,73,34)"/><text x="39.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(209,117,27)"/><text x="39.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(218,120,43)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.32%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(231,176,29)"/><text x="39.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(205,226,51)"/><text x="39.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(236,153,47)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(220,104,5)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(205,49,2)"/><text x="39.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(220,52,33)"/><text x="39.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(253,47,5)"/><text x="39.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(232,169,37)"/><text x="39.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py) (1 samples, 0.32%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(209,222,48)"/><text x="39.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.32%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(232,120,54)"/><text x="39.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.32%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(253,60,22)"/><text x="39.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.32%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(227,105,40)"/><text x="39.00" y="1278.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.32%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(249,225,46)"/><text x="39.00" y="1294.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.32%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(230,2,22)"/><text x="39.00" y="1310.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.32%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(253,11,42)"/><text x="39.00" y="1326.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.32%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(220,171,6)"/><text x="39.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 1.60%)</title><rect x="25" y="244" width="19" height="15" fill="rgb(220,195,54)"/><text x="28.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="25" y="260" width="19" height="15" fill="rgb(251,206,7)"/><text x="28.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="25" y="276" width="19" height="15" fill="rgb(235,154,13)"/><text x="28.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="25" y="292" width="19" height="15" fill="rgb(229,92,24)"/><text x="28.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="25" y="308" width="19" height="15" fill="rgb(215,137,47)"/><text x="28.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="25" y="324" width="19" height="15" fill="rgb(237,185,8)"/><text x="28.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.64%)</title><rect x="36" y="340" width="8" height="15" fill="rgb(206,135,13)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="356" width="8" height="15" fill="rgb(246,122,6)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="372" width="8" height="15" fill="rgb(226,63,41)"/><text x="39.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="388" width="8" height="15" fill="rgb(240,107,28)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="404" width="8" height="15" fill="rgb(232,201,49)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="420" width="8" height="15" fill="rgb(226,90,50)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="436" width="8" height="15" fill="rgb(238,114,41)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="36" y="452" width="8" height="15" fill="rgb(251,201,53)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="468" width="8" height="15" fill="rgb(240,199,12)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.64%)</title><rect x="36" y="484" width="8" height="15" fill="rgb(212,226,45)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="500" width="8" height="15" fill="rgb(222,45,19)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="516" width="8" height="15" fill="rgb(222,218,13)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="532" width="8" height="15" fill="rgb(249,90,31)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="36" y="548" width="8" height="15" fill="rgb(215,109,54)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="564" width="8" height="15" fill="rgb(212,151,5)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.64%)</title><rect x="36" y="580" width="8" height="15" fill="rgb(215,164,13)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="596" width="8" height="15" fill="rgb(230,45,10)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="612" width="8" height="15" fill="rgb(253,78,3)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="628" width="8" height="15" fill="rgb(245,20,47)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="36" y="644" width="8" height="15" fill="rgb(215,165,21)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="660" width="8" height="15" fill="rgb(206,129,32)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.64%)</title><rect x="36" y="676" width="8" height="15" fill="rgb(219,39,11)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="692" width="8" height="15" fill="rgb(245,180,25)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="708" width="8" height="15" fill="rgb(215,76,42)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="724" width="8" height="15" fill="rgb(240,140,46)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="36" y="740" width="8" height="15" fill="rgb(252,189,16)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="756" width="8" height="15" fill="rgb(209,140,16)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.64%)</title><rect x="36" y="772" width="8" height="15" fill="rgb(217,104,24)"/><text x="39.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="788" width="8" height="15" fill="rgb(213,218,46)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="804" width="8" height="15" fill="rgb(213,0,9)"/><text x="39.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="820" width="8" height="15" fill="rgb(208,13,40)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="836" width="8" height="15" fill="rgb(222,156,16)"/><text x="39.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="852" width="8" height="15" fill="rgb(239,199,10)"/><text x="39.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="36" y="868" width="8" height="15" fill="rgb(237,4,29)"/><text x="39.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="36" y="884" width="8" height="15" fill="rgb(233,57,19)"/><text x="39.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.32%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(215,125,40)"/><text x="43.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(254,133,53)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(251,167,38)"/><text x="43.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(243,227,26)"/><text x="43.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(230,3,22)"/><text x="43.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(247,183,53)"/><text x="43.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.32%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(226,97,39)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(245,126,5)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1028" width="4" height="15" fill="rgb(237,21,46)"/><text x="43.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1044" width="4" height="15" fill="rgb(223,205,29)"/><text x="43.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1060" width="4" height="15" fill="rgb(206,63,6)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1076" width="4" height="15" fill="rgb(212,152,41)"/><text x="43.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.32%)</title><rect x="40" y="1092" width="4" height="15" fill="rgb(222,203,37)"/><text x="43.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1108" width="4" height="15" fill="rgb(253,223,21)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1124" width="4" height="15" fill="rgb(235,5,51)"/><text x="43.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1140" width="4" height="15" fill="rgb(214,130,15)"/><text x="43.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1156" width="4" height="15" fill="rgb(230,171,28)"/><text x="43.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1172" width="4" height="15" fill="rgb(226,153,30)"/><text x="43.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py) (1 samples, 0.32%)</title><rect x="40" y="1188" width="4" height="15" fill="rgb(219,94,32)"/><text x="43.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.32%)</title><rect x="40" y="1204" width="4" height="15" fill="rgb(208,160,52)"/><text x="43.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.32%)</title><rect x="40" y="1220" width="4" height="15" fill="rgb(231,56,15)"/><text x="43.00" y="1230.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.32%)</title><rect x="40" y="1236" width="4" height="15" fill="rgb(250,109,1)"/><text x="43.00" y="1246.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.32%)</title><rect x="40" y="1252" width="4" height="15" fill="rgb(213,90,45)"/><text x="43.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.32%)</title><rect x="40" y="1268" width="4" height="15" fill="rgb(218,213,21)"/><text x="43.00" y="1278.50"></text></g><g><title>unwrap (inspect.py) (1 samples, 0.32%)</title><rect x="40" y="1284" width="4" height="15" fill="rgb(215,31,9)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.32%)</title><rect x="44" y="500" width="3" height="15" fill="rgb(240,209,23)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="516" width="3" height="15" fill="rgb(229,74,13)"/><text x="47.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="532" width="3" height="15" fill="rgb(237,27,32)"/><text x="47.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="548" width="3" height="15" fill="rgb(231,175,44)"/><text x="47.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="44" y="564" width="3" height="15" fill="rgb(231,81,3)"/><text x="47.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="580" width="3" height="15" fill="rgb(214,114,5)"/><text x="47.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.32%)</title><rect x="44" y="596" width="3" height="15" fill="rgb(207,194,9)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="612" width="3" height="15" fill="rgb(225,209,52)"/><text x="47.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="628" width="3" height="15" fill="rgb(221,125,19)"/><text x="47.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="644" width="3" height="15" fill="rgb(216,16,7)"/><text x="47.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="44" y="660" width="3" height="15" fill="rgb(242,88,33)"/><text x="47.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="676" width="3" height="15" fill="rgb(247,31,14)"/><text x="47.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.32%)</title><rect x="44" y="692" width="3" height="15" fill="rgb(247,183,47)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="708" width="3" height="15" fill="rgb(248,123,15)"/><text x="47.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="724" width="3" height="15" fill="rgb(244,7,2)"/><text x="47.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="740" width="3" height="15" fill="rgb(248,25,47)"/><text x="47.00" y="750.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="756" width="3" height="15" fill="rgb(217,50,52)"/><text x="47.00" y="766.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="44" y="772" width="3" height="15" fill="rgb(216,220,23)"/><text x="47.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="44" y="788" width="3" height="15" fill="rgb(220,14,48)"/><text x="47.00" y="798.50"></text></g><g><title>PyInit_select (selectmodule.c) (1 samples, 0.32%)</title><rect x="44" y="804" width="3" height="15" fill="rgb(248,67,0)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.64%)</title><rect x="44" y="372" width="7" height="15" fill="rgb(239,84,49)"/><text x="47.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="388" width="7" height="15" fill="rgb(240,40,36)"/><text x="47.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="404" width="7" height="15" fill="rgb(239,103,4)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="420" width="7" height="15" fill="rgb(248,197,37)"/><text x="47.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="436" width="7" height="15" fill="rgb(226,113,17)"/><text x="47.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="452" width="7" height="15" fill="rgb(233,30,3)"/><text x="47.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="44" y="468" width="7" height="15" fill="rgb(231,210,15)"/><text x="47.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="484" width="7" height="15" fill="rgb(236,96,21)"/><text x="47.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.32%)</title><rect x="47" y="500" width="4" height="15" fill="rgb(246,221,8)"/><text x="50.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="516" width="4" height="15" fill="rgb(245,184,10)"/><text x="50.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="532" width="4" height="15" fill="rgb(254,59,35)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="548" width="4" height="15" fill="rgb(219,158,53)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="564" width="4" height="15" fill="rgb(223,161,14)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="580" width="4" height="15" fill="rgb(212,189,21)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="596" width="4" height="15" fill="rgb(252,106,37)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="612" width="4" height="15" fill="rgb(217,31,24)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.32%)</title><rect x="47" y="628" width="4" height="15" fill="rgb(229,92,15)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="644" width="4" height="15" fill="rgb(237,202,8)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="660" width="4" height="15" fill="rgb(231,171,21)"/><text x="50.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="676" width="4" height="15" fill="rgb(232,81,9)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="692" width="4" height="15" fill="rgb(230,118,2)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="708" width="4" height="15" fill="rgb(237,16,37)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="724" width="4" height="15" fill="rgb(206,32,48)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="740" width="4" height="15" fill="rgb(205,39,7)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="756" width="4" height="15" fill="rgb(252,3,11)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.32%)</title><rect x="47" y="772" width="4" height="15" fill="rgb(218,140,41)"/><text x="50.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="788" width="4" height="15" fill="rgb(233,45,40)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="804" width="4" height="15" fill="rgb(224,202,38)"/><text x="50.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="820" width="4" height="15" fill="rgb(227,56,1)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="836" width="4" height="15" fill="rgb(207,210,28)"/><text x="50.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="852" width="4" height="15" fill="rgb(227,35,4)"/><text x="50.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="868" width="4" height="15" fill="rgb(215,125,51)"/><text x="50.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="884" width="4" height="15" fill="rgb(220,106,14)"/><text x="50.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.32%)</title><rect x="47" y="900" width="4" height="15" fill="rgb(232,65,0)"/><text x="50.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="916" width="4" height="15" fill="rgb(211,211,50)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="932" width="4" height="15" fill="rgb(243,37,49)"/><text x="50.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="948" width="4" height="15" fill="rgb(232,175,12)"/><text x="50.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="964" width="4" height="15" fill="rgb(228,229,22)"/><text x="50.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="980" width="4" height="15" fill="rgb(212,149,10)"/><text x="50.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py) (1 samples, 0.32%)</title><rect x="47" y="996" width="4" height="15" fill="rgb(241,175,38)"/><text x="50.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1012" width="4" height="15" fill="rgb(220,117,42)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1028" width="4" height="15" fill="rgb(236,88,47)"/><text x="50.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1044" width="4" height="15" fill="rgb(254,66,5)"/><text x="50.00" y="1054.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1060" width="4" height="15" fill="rgb(231,212,21)"/><text x="50.00" y="1070.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1076" width="4" height="15" fill="rgb(232,154,0)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1092" width="4" height="15" fill="rgb(226,59,0)"/><text x="50.00" y="1102.50"></text></g><g><title>0x7f4f99b27bf4 (?) (1 samples, 0.32%)</title><rect x="47" y="1108" width="4" height="15" fill="rgb(206,189,35)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="68" width="45" height="15" fill="rgb(232,26,8)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="84" width="45" height="15" fill="rgb(253,23,48)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="100" width="45" height="15" fill="rgb(215,179,22)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.85%)</title><rect x="10" y="116" width="45" height="15" fill="rgb(245,141,53)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="132" width="45" height="15" fill="rgb(206,175,36)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (12 samples, 3.85%)</title><rect x="10" y="148" width="45" height="15" fill="rgb(214,36,13)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="164" width="45" height="15" fill="rgb(243,125,35)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.85%)</title><rect x="10" y="180" width="45" height="15" fill="rgb(239,81,13)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.56%)</title><rect x="25" y="196" width="30" height="15" fill="rgb(240,163,18)"/><text x="28.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.56%)</title><rect x="25" y="212" width="30" height="15" fill="rgb(244,138,42)"/><text x="28.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.56%)</title><rect x="25" y="228" width="30" height="15" fill="rgb(249,199,41)"/><text x="28.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.96%)</title><rect x="44" y="244" width="11" height="15" fill="rgb(221,74,48)"/><text x="47.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="260" width="11" height="15" fill="rgb(211,221,37)"/><text x="47.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="276" width="11" height="15" fill="rgb(245,34,29)"/><text x="47.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="292" width="11" height="15" fill="rgb(231,196,41)"/><text x="47.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="308" width="11" height="15" fill="rgb(210,55,49)"/><text x="47.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="324" width="11" height="15" fill="rgb(244,172,22)"/><text x="47.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="44" y="340" width="11" height="15" fill="rgb(216,200,15)"/><text x="47.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="44" y="356" width="11" height="15" fill="rgb(244,20,48)"/><text x="47.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.32%)</title><rect x="51" y="372" width="4" height="15" fill="rgb(236,97,0)"/><text x="54.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="388" width="4" height="15" fill="rgb(245,164,23)"/><text x="54.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="404" width="4" height="15" fill="rgb(217,152,24)"/><text x="54.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="420" width="4" height="15" fill="rgb(235,84,20)"/><text x="54.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="436" width="4" height="15" fill="rgb(254,89,19)"/><text x="54.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="452" width="4" height="15" fill="rgb(220,144,27)"/><text x="54.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="51" y="468" width="4" height="15" fill="rgb(229,191,26)"/><text x="54.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="51" y="484" width="4" height="15" fill="rgb(224,188,48)"/><text x="54.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py) (1 samples, 0.32%)</title><rect x="51" y="500" width="4" height="15" fill="rgb(248,101,3)"/><text x="54.00" y="510.50"></text></g><g><title>__init__ (numpy/ma/core.py) (1 samples, 0.32%)</title><rect x="51" y="516" width="4" height="15" fill="rgb(254,154,13)"/><text x="54.00" y="526.50"></text></g><g><title>__init__ (numpy/ma/core.py) (1 samples, 0.32%)</title><rect x="51" y="532" width="4" height="15" fill="rgb(240,38,19)"/><text x="54.00" y="542.50"></text></g><g><title>ufunc_get_doc (ufunc_object.c) (1 samples, 0.32%)</title><rect x="51" y="548" width="4" height="15" fill="rgb(234,35,31)"/><text x="54.00" y="558.50"></text></g><g><title>_ufunc_doc_signature_formatter (numpy/core/_internal.py) (1 samples, 0.32%)</title><rect x="51" y="564" width="4" height="15" fill="rgb(240,89,51)"/><text x="54.00" y="574.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.32%)</title><rect x="51" y="580" width="4" height="15" fill="rgb(252,93,29)"/><text x="54.00" y="590.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.32%)</title><rect x="55" y="68" width="4" height="15" fill="rgb(235,229,42)"/><text x="58.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.32%)</title><rect x="55" y="84" width="4" height="15" fill="rgb(225,116,4)"/><text x="58.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.32%)</title><rect x="55" y="100" width="4" height="15" fill="rgb(216,212,50)"/><text x="58.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.32%)</title><rect x="55" y="116" width="4" height="15" fill="rgb(231,78,44)"/><text x="58.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.32%)</title><rect x="55" y="132" width="4" height="15" fill="rgb(212,155,29)"/><text x="58.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.32%)</title><rect x="55" y="148" width="4" height="15" fill="rgb(228,228,12)"/><text x="58.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.32%)</title><rect x="55" y="164" width="4" height="15" fill="rgb(253,36,31)"/><text x="58.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.32%)</title><rect x="55" y="180" width="4" height="15" fill="rgb(244,63,7)"/><text x="58.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.32%)</title><rect x="55" y="196" width="4" height="15" fill="rgb(222,50,20)"/><text x="58.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.32%)</title><rect x="55" y="212" width="4" height="15" fill="rgb(251,123,30)"/><text x="58.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.32%)</title><rect x="55" y="228" width="4" height="15" fill="rgb(231,135,32)"/><text x="58.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="55" y="244" width="4" height="15" fill="rgb(218,56,47)"/><text x="58.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.32%)</title><rect x="55" y="260" width="4" height="15" fill="rgb(226,82,14)"/><text x="58.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.32%)</title><rect x="55" y="276" width="4" height="15" fill="rgb(249,219,35)"/><text x="58.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.32%)</title><rect x="55" y="292" width="4" height="15" fill="rgb(229,104,19)"/><text x="58.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.32%)</title><rect x="55" y="308" width="4" height="15" fill="rgb(244,214,24)"/><text x="58.00" y="318.50"></text></g><g><title>0x7f4f65762422 (?) (1 samples, 0.32%)</title><rect x="59" y="244" width="3" height="15" fill="rgb(211,181,22)"/><text x="62.00" y="254.50"></text></g><g><title>0x7f4f6576889e (?) (1 samples, 0.32%)</title><rect x="59" y="260" width="3" height="15" fill="rgb(232,75,41)"/><text x="62.00" y="270.50"></text></g><g><title>0x7f4f6576874f (?) (1 samples, 0.32%)</title><rect x="59" y="276" width="3" height="15" fill="rgb(216,184,1)"/><text x="62.00" y="286.50"></text></g><g><title>0x7f4f6576ea3a (?) (1 samples, 0.32%)</title><rect x="59" y="292" width="3" height="15" fill="rgb(220,59,33)"/><text x="62.00" y="302.50"></text></g><g><title>0x7f4f6ea8aab9 (?) (1 samples, 0.32%)</title><rect x="59" y="308" width="3" height="15" fill="rgb(221,121,54)"/><text x="62.00" y="318.50"></text></g><g><title>0x7f4f6ea8bead (?) (1 samples, 0.32%)</title><rect x="59" y="324" width="3" height="15" fill="rgb(223,186,41)"/><text x="62.00" y="334.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (2 samples, 0.64%)</title><rect x="59" y="100" width="7" height="15" fill="rgb(241,185,2)"/><text x="62.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.64%)</title><rect x="59" y="116" width="7" height="15" fill="rgb(232,157,42)"/><text x="62.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.64%)</title><rect x="59" y="132" width="7" height="15" fill="rgb(228,76,49)"/><text x="62.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.64%)</title><rect x="59" y="148" width="7" height="15" fill="rgb(208,25,48)"/><text x="62.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.64%)</title><rect x="59" y="164" width="7" height="15" fill="rgb(235,15,42)"/><text x="62.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.64%)</title><rect x="59" y="180" width="7" height="15" fill="rgb(206,175,25)"/><text x="62.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.64%)</title><rect x="59" y="196" width="7" height="15" fill="rgb(254,211,17)"/><text x="62.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.64%)</title><rect x="59" y="212" width="7" height="15" fill="rgb(234,121,31)"/><text x="62.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (2 samples, 0.64%)</title><rect x="59" y="228" width="7" height="15" fill="rgb(246,148,25)"/><text x="62.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (1 samples, 0.32%)</title><rect x="62" y="244" width="4" height="15" fill="rgb(241,174,4)"/><text x="65.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (1 samples, 0.32%)</title><rect x="62" y="260" width="4" height="15" fill="rgb(222,87,7)"/><text x="65.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (1 samples, 0.32%)</title><rect x="62" y="276" width="4" height="15" fill="rgb(231,143,41)"/><text x="65.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (1 samples, 0.32%)</title><rect x="62" y="292" width="4" height="15" fill="rgb(243,48,22)"/><text x="65.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (1 samples, 0.32%)</title><rect x="62" y="308" width="4" height="15" fill="rgb(214,183,4)"/><text x="65.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (1 samples, 0.32%)</title><rect x="62" y="324" width="4" height="15" fill="rgb(254,118,3)"/><text x="65.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (1 samples, 0.32%)</title><rect x="62" y="340" width="4" height="15" fill="rgb(247,103,11)"/><text x="65.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 0.32%)</title><rect x="62" y="356" width="4" height="15" fill="rgb(212,26,30)"/><text x="65.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 0.32%)</title><rect x="62" y="372" width="4" height="15" fill="rgb(251,219,7)"/><text x="65.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.32%)</title><rect x="62" y="388" width="4" height="15" fill="rgb(239,55,8)"/><text x="65.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.32%)</title><rect x="62" y="404" width="4" height="15" fill="rgb(231,9,30)"/><text x="65.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.32%)</title><rect x="62" y="420" width="4" height="15" fill="rgb(237,144,31)"/><text x="65.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (1 samples, 0.32%)</title><rect x="62" y="436" width="4" height="15" fill="rgb(211,36,48)"/><text x="65.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="62" y="452" width="4" height="15" fill="rgb(236,159,46)"/><text x="65.00" y="462.50"></text></g><g><title>0x7f4f6ea89daa (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="62" y="468" width="4" height="15" fill="rgb(243,167,14)"/><text x="65.00" y="478.50"></text></g><g><title>0x7f4f6ea8bcfb (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="62" y="484" width="4" height="15" fill="rgb(246,16,19)"/><text x="65.00" y="494.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.32%)</title><rect x="66" y="180" width="4" height="15" fill="rgb(215,26,27)"/><text x="69.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.32%)</title><rect x="66" y="196" width="4" height="15" fill="rgb(245,11,46)"/><text x="69.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="212" width="4" height="15" fill="rgb(246,122,19)"/><text x="69.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="228" width="4" height="15" fill="rgb(226,14,49)"/><text x="69.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="244" width="4" height="15" fill="rgb(229,15,20)"/><text x="69.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="66" y="260" width="4" height="15" fill="rgb(254,157,23)"/><text x="69.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="276" width="4" height="15" fill="rgb(250,219,47)"/><text x="69.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.32%)</title><rect x="66" y="292" width="4" height="15" fill="rgb(230,223,47)"/><text x="69.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="308" width="4" height="15" fill="rgb(245,204,9)"/><text x="69.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="324" width="4" height="15" fill="rgb(218,58,41)"/><text x="69.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="340" width="4" height="15" fill="rgb(217,88,47)"/><text x="69.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="66" y="356" width="4" height="15" fill="rgb(243,204,5)"/><text x="69.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="372" width="4" height="15" fill="rgb(243,111,22)"/><text x="69.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.32%)</title><rect x="66" y="388" width="4" height="15" fill="rgb(224,118,53)"/><text x="69.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.32%)</title><rect x="66" y="404" width="4" height="15" fill="rgb(245,199,37)"/><text x="69.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.32%)</title><rect x="66" y="420" width="4" height="15" fill="rgb(205,223,23)"/><text x="69.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.32%)</title><rect x="66" y="436" width="4" height="15" fill="rgb(222,10,38)"/><text x="69.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.32%)</title><rect x="66" y="452" width="4" height="15" fill="rgb(220,176,37)"/><text x="69.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.32%)</title><rect x="66" y="468" width="4" height="15" fill="rgb(243,12,32)"/><text x="69.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.32%)</title><rect x="66" y="484" width="4" height="15" fill="rgb(223,78,21)"/><text x="69.00" y="494.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.64%)</title><rect x="66" y="132" width="8" height="15" fill="rgb(226,94,44)"/><text x="69.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.64%)</title><rect x="66" y="148" width="8" height="15" fill="rgb(250,156,51)"/><text x="69.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.64%)</title><rect x="66" y="164" width="8" height="15" fill="rgb(209,158,29)"/><text x="69.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.32%)</title><rect x="70" y="180" width="4" height="15" fill="rgb(251,25,8)"/><text x="73.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.32%)</title><rect x="70" y="196" width="4" height="15" fill="rgb(220,184,19)"/><text x="73.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.32%)</title><rect x="70" y="212" width="4" height="15" fill="rgb(206,77,3)"/><text x="73.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.32%)</title><rect x="70" y="228" width="4" height="15" fill="rgb(222,72,38)"/><text x="73.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="70" y="244" width="4" height="15" fill="rgb(232,118,35)"/><text x="73.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.32%)</title><rect x="70" y="260" width="4" height="15" fill="rgb(227,218,18)"/><text x="73.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.32%)</title><rect x="70" y="276" width="4" height="15" fill="rgb(207,54,37)"/><text x="73.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.32%)</title><rect x="70" y="292" width="4" height="15" fill="rgb(234,189,36)"/><text x="73.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.32%)</title><rect x="70" y="308" width="4" height="15" fill="rgb(214,165,4)"/><text x="73.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.32%)</title><rect x="70" y="324" width="4" height="15" fill="rgb(245,211,51)"/><text x="73.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.32%)</title><rect x="70" y="340" width="4" height="15" fill="rgb(231,209,40)"/><text x="73.00" y="350.50"></text></g><g><title>0x7f4fa3ce70a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="70" y="356" width="4" height="15" fill="rgb(234,91,23)"/><text x="73.00" y="366.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (5 samples, 1.60%)</title><rect x="59" y="68" width="19" height="15" fill="rgb(238,213,43)"/><text x="62.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (5 samples, 1.60%)</title><rect x="59" y="84" width="19" height="15" fill="rgb(239,48,39)"/><text x="62.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.96%)</title><rect x="66" y="100" width="12" height="15" fill="rgb(224,126,48)"/><text x="69.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.96%)</title><rect x="66" y="116" width="12" height="15" fill="rgb(254,167,49)"/><text x="69.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.32%)</title><rect x="74" y="132" width="4" height="15" fill="rgb(220,39,40)"/><text x="77.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.32%)</title><rect x="74" y="148" width="4" height="15" fill="rgb(213,194,27)"/><text x="77.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.32%)</title><rect x="74" y="164" width="4" height="15" fill="rgb(216,76,23)"/><text x="77.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.32%)</title><rect x="74" y="180" width="4" height="15" fill="rgb(220,40,49)"/><text x="77.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.32%)</title><rect x="74" y="196" width="4" height="15" fill="rgb(254,72,36)"/><text x="77.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.32%)</title><rect x="74" y="212" width="4" height="15" fill="rgb(243,224,1)"/><text x="77.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.32%)</title><rect x="74" y="228" width="4" height="15" fill="rgb(231,60,38)"/><text x="77.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (8 samples, 2.56%)</title><rect x="161" y="196" width="30" height="15" fill="rgb(225,222,22)"/><text x="164.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py) (6 samples, 1.92%)</title><rect x="168" y="212" width="23" height="15" fill="rgb(232,11,3)"/><text x="171.00" y="222.50">d..</text></g><g><title>update_wrapper (functools.py) (4 samples, 1.28%)</title><rect x="176" y="228" width="15" height="15" fill="rgb(211,79,4)"/><text x="179.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.64%)</title><rect x="191" y="196" width="8" height="15" fill="rgb(224,165,28)"/><text x="194.00" y="206.50"></text></g><g><title>0x7fffb59fca01 ([vdso]) (1 samples, 0.32%)</title><rect x="240" y="212" width="4" height="15" fill="rgb(231,18,17)"/><text x="243.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (11 samples, 3.53%)</title><rect x="248" y="228" width="41" height="15" fill="rgb(233,151,23)"/><text x="251.00" y="238.50">__c..</text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.32%)</title><rect x="286" y="244" width="3" height="15" fill="rgb(239,129,36)"/><text x="289.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="350" y="308" width="4" height="15" fill="rgb(215,181,23)"/><text x="353.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.96%)</title><rect x="350" y="292" width="11" height="15" fill="rgb(233,121,51)"/><text x="353.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.64%)</title><rect x="354" y="308" width="7" height="15" fill="rgb(215,14,24)"/><text x="357.00" y="318.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.32%)</title><rect x="361" y="292" width="4" height="15" fill="rgb(216,134,30)"/><text x="364.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.32%)</title><rect x="361" y="308" width="4" height="15" fill="rgb(235,11,49)"/><text x="364.00" y="318.50"></text></g><g><title>0x7f4f7e507f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="399" y="324" width="4" height="15" fill="rgb(212,148,46)"/><text x="402.00" y="334.50"></text></g><g><title>0x7f4f7e4f7d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="399" y="340" width="4" height="15" fill="rgb(243,92,0)"/><text x="402.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.32%)</title><rect x="399" y="356" width="4" height="15" fill="rgb(206,127,4)"/><text x="402.00" y="366.50"></text></g><g><title>0x7f4f7e516225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="403" y="356" width="7" height="15" fill="rgb(220,55,27)"/><text x="406.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.64%)</title><rect x="403" y="372" width="7" height="15" fill="rgb(236,216,49)"/><text x="406.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.64%)</title><rect x="403" y="388" width="7" height="15" fill="rgb(229,18,20)"/><text x="406.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.64%)</title><rect x="403" y="404" width="7" height="15" fill="rgb(242,101,2)"/><text x="406.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.64%)</title><rect x="403" y="420" width="7" height="15" fill="rgb(245,180,37)"/><text x="406.00" y="430.50"></text></g><g><title>0x7f4f7e4f00e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="410" y="404" width="4" height="15" fill="rgb(207,48,10)"/><text x="413.00" y="414.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.32%)</title><rect x="414" y="468" width="4" height="15" fill="rgb(231,138,14)"/><text x="417.00" y="478.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.32%)</title><rect x="414" y="484" width="4" height="15" fill="rgb(231,14,9)"/><text x="417.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="414" y="500" width="4" height="15" fill="rgb(235,96,47)"/><text x="417.00" y="510.50"></text></g><g><title>0x7f4f7e4fad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.96%)</title><rect x="410" y="372" width="12" height="15" fill="rgb(214,26,43)"/><text x="413.00" y="382.50"></text></g><g><title>0x7f4f7e4fa666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.96%)</title><rect x="410" y="388" width="12" height="15" fill="rgb(225,167,37)"/><text x="413.00" y="398.50"></text></g><g><title>0x7f4f7e4f02fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="414" y="404" width="8" height="15" fill="rgb(223,90,45)"/><text x="417.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.64%)</title><rect x="414" y="420" width="8" height="15" fill="rgb(210,49,47)"/><text x="417.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.64%)</title><rect x="414" y="436" width="8" height="15" fill="rgb(252,6,6)"/><text x="417.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.64%)</title><rect x="414" y="452" width="8" height="15" fill="rgb(207,4,46)"/><text x="417.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="418" y="468" width="4" height="15" fill="rgb(227,194,51)"/><text x="421.00" y="478.50"></text></g><g><title>0x7f4f7e5162df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="410" y="356" width="16" height="15" fill="rgb(248,154,13)"/><text x="413.00" y="366.50"></text></g><g><title>0x7f4f7e4fad19 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="422" y="372" width="4" height="15" fill="rgb(229,139,17)"/><text x="425.00" y="382.50"></text></g><g><title>0x7f4f7e516456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="426" y="356" width="7" height="15" fill="rgb(209,161,49)"/><text x="429.00" y="366.50"></text></g><g><title>0x7f4f7e5164a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="433" y="356" width="4" height="15" fill="rgb(248,219,39)"/><text x="436.00" y="366.50"></text></g><g><title>0x7f4f7e516511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="437" y="356" width="4" height="15" fill="rgb(243,165,26)"/><text x="440.00" y="366.50"></text></g><g><title>0x7f4fa4ada757 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="448" y="388" width="4" height="15" fill="rgb(253,16,22)"/><text x="451.00" y="398.50"></text></g><g><title>0x7f4f7e516592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="441" y="356" width="15" height="15" fill="rgb(238,90,21)"/><text x="444.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 1.28%)</title><rect x="441" y="372" width="15" height="15" fill="rgb(234,125,0)"/><text x="444.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.32%)</title><rect x="452" y="388" width="4" height="15" fill="rgb(221,161,46)"/><text x="455.00" y="398.50"></text></g><g><title>0x7f4f7e516644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="456" y="356" width="4" height="15" fill="rgb(205,146,54)"/><text x="459.00" y="366.50"></text></g><g><title>0x7f4f7e51674e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(246,213,17)"/><text x="463.00" y="366.50"></text></g><g><title>0x7f4f7e5168aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="463" y="356" width="4" height="15" fill="rgb(225,89,32)"/><text x="466.00" y="366.50"></text></g><g><title>0x7f4f7e4eda77 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="467" y="404" width="4" height="15" fill="rgb(243,47,11)"/><text x="470.00" y="414.50"></text></g><g><title>0x7f4f7e517405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 6.09%)</title><rect x="403" y="340" width="72" height="15" fill="rgb(226,1,19)"/><text x="406.00" y="350.50">0x7f4f7e..</text></g><g><title>0x7f4f7e516c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="467" y="356" width="8" height="15" fill="rgb(218,82,2)"/><text x="470.00" y="366.50"></text></g><g><title>0x7f4f7e4ee5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="467" y="372" width="8" height="15" fill="rgb(223,91,46)"/><text x="470.00" y="382.50"></text></g><g><title>0x7f4f7e4ee2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="467" y="388" width="8" height="15" fill="rgb(245,62,31)"/><text x="470.00" y="398.50"></text></g><g><title>0x7f4f7e4edb94 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="471" y="404" width="4" height="15" fill="rgb(209,84,4)"/><text x="474.00" y="414.50"></text></g><g><title>0x7f4f7e507fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 6.73%)</title><rect x="403" y="324" width="79" height="15" fill="rgb(226,86,33)"/><text x="406.00" y="334.50">0x7f4f7e5..</text></g><g><title>0x7f4f7e517540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="475" y="340" width="7" height="15" fill="rgb(251,54,37)"/><text x="478.00" y="350.50"></text></g><g><title>0x7f4f7e4ec2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="475" y="356" width="7" height="15" fill="rgb(221,90,52)"/><text x="478.00" y="366.50"></text></g><g><title>0x7f4f7e4eb530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="475" y="372" width="7" height="15" fill="rgb(236,190,46)"/><text x="478.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.64%)</title><rect x="475" y="388" width="7" height="15" fill="rgb(237,190,40)"/><text x="478.00" y="398.50"></text></g><g><title>0x7f4fa4ada730 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="509" y="356" width="4" height="15" fill="rgb(240,203,43)"/><text x="512.00" y="366.50"></text></g><g><title>0x7f4f7e50805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.53%)</title><rect x="482" y="324" width="42" height="15" fill="rgb(236,16,35)"/><text x="485.00" y="334.50">0x7..</text></g><g><title>array_take (methods.c) (11 samples, 3.53%)</title><rect x="482" y="340" width="42" height="15" fill="rgb(215,173,42)"/><text x="485.00" y="350.50">arr..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.96%)</title><rect x="513" y="356" width="11" height="15" fill="rgb(237,178,22)"/><text x="516.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.32%)</title><rect x="520" y="372" width="4" height="15" fill="rgb(231,134,34)"/><text x="523.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="520" y="388" width="4" height="15" fill="rgb(222,107,20)"/><text x="523.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.32%)</title><rect x="520" y="404" width="4" height="15" fill="rgb(251,9,7)"/><text x="523.00" y="414.50"></text></g><g><title>0x7f4f7e50813a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="524" y="324" width="4" height="15" fill="rgb(227,109,49)"/><text x="527.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="524" y="340" width="4" height="15" fill="rgb(248,82,9)"/><text x="527.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="524" y="356" width="4" height="15" fill="rgb(244,202,52)"/><text x="527.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.32%)</title><rect x="524" y="372" width="4" height="15" fill="rgb(254,101,3)"/><text x="527.00" y="382.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.32%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(229,180,28)"/><text x="531.00" y="366.50"></text></g><g><title>0x7f4fa4ada757 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="528" y="372" width="3" height="15" fill="rgb(231,208,46)"/><text x="531.00" y="382.50"></text></g><g><title>0x7f4f7e508328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="528" y="324" width="7" height="15" fill="rgb(241,105,5)"/><text x="531.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.64%)</title><rect x="528" y="340" width="7" height="15" fill="rgb(234,13,43)"/><text x="531.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.32%)</title><rect x="531" y="356" width="4" height="15" fill="rgb(247,0,48)"/><text x="534.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.32%)</title><rect x="531" y="372" width="4" height="15" fill="rgb(234,75,36)"/><text x="534.00" y="382.50"></text></g><g><title>0x7f4f7e508577 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="535" y="324" width="4" height="15" fill="rgb(228,171,39)"/><text x="538.00" y="334.50"></text></g><g><title>0x7f4f7e5085f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="539" y="324" width="4" height="15" fill="rgb(241,192,31)"/><text x="542.00" y="334.50"></text></g><g><title>0x7f4f7e508d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 12.50%)</title><rect x="399" y="308" width="148" height="15" fill="rgb(232,24,54)"/><text x="402.00" y="318.50">0x7f4f7e508d2e (sk..</text></g><g><title>0x7f4f7e5088d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="543" y="324" width="4" height="15" fill="rgb(250,89,15)"/><text x="546.00" y="334.50"></text></g><g><title>0x7f4f7e4e4be9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="543" y="340" width="4" height="15" fill="rgb(226,114,32)"/><text x="546.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.32%)</title><rect x="547" y="324" width="3" height="15" fill="rgb(248,102,48)"/><text x="550.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="547" y="340" width="3" height="15" fill="rgb(217,94,1)"/><text x="550.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(220,193,3)"/><text x="550.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.96%)</title><rect x="547" y="308" width="11" height="15" fill="rgb(208,190,15)"/><text x="550.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.64%)</title><rect x="550" y="324" width="8" height="15" fill="rgb(222,151,42)"/><text x="553.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.32%)</title><rect x="554" y="340" width="4" height="15" fill="rgb(244,228,22)"/><text x="557.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.32%)</title><rect x="554" y="356" width="4" height="15" fill="rgb(246,145,34)"/><text x="557.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="558" y="308" width="4" height="15" fill="rgb(242,5,34)"/><text x="561.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="558" y="324" width="4" height="15" fill="rgb(228,177,48)"/><text x="561.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.32%)</title><rect x="558" y="340" width="4" height="15" fill="rgb(218,147,15)"/><text x="561.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="569" y="356" width="4" height="15" fill="rgb(230,60,9)"/><text x="572.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="569" y="372" width="4" height="15" fill="rgb(207,101,1)"/><text x="572.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="573" y="356" width="4" height="15" fill="rgb(239,59,35)"/><text x="576.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="573" y="372" width="4" height="15" fill="rgb(208,153,4)"/><text x="576.00" y="382.50"></text></g><g><title>array_richcompare (arrayobject.c) (5 samples, 1.60%)</title><rect x="562" y="308" width="19" height="15" fill="rgb(226,30,21)"/><text x="565.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.96%)</title><rect x="569" y="324" width="12" height="15" fill="rgb(249,169,4)"/><text x="572.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.96%)</title><rect x="569" y="340" width="12" height="15" fill="rgb(243,87,1)"/><text x="572.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.32%)</title><rect x="577" y="356" width="4" height="15" fill="rgb(224,89,0)"/><text x="580.00" y="366.50"></text></g><g><title>0x7f4fa3ce7490 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="577" y="372" width="4" height="15" fill="rgb(246,221,54)"/><text x="580.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.96%)</title><rect x="581" y="308" width="11" height="15" fill="rgb(252,86,51)"/><text x="584.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.96%)</title><rect x="581" y="324" width="11" height="15" fill="rgb(216,32,7)"/><text x="584.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.32%)</title><rect x="588" y="340" width="4" height="15" fill="rgb(214,41,42)"/><text x="591.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="588" y="356" width="4" height="15" fill="rgb(243,27,30)"/><text x="591.00" y="366.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.32%)</title><rect x="588" y="372" width="4" height="15" fill="rgb(235,189,50)"/><text x="591.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (8 samples, 2.56%)</title><rect x="603" y="372" width="31" height="15" fill="rgb(205,23,44)"/><text x="606.00" y="382.50">Py..</text></g><g><title>get_array_ufunc_overrides (override.c) (8 samples, 2.56%)</title><rect x="603" y="388" width="31" height="15" fill="rgb(227,143,53)"/><text x="606.00" y="398.50">ge..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (8 samples, 2.56%)</title><rect x="603" y="404" width="31" height="15" fill="rgb(233,111,0)"/><text x="606.00" y="414.50">Py..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (8 samples, 2.56%)</title><rect x="603" y="420" width="31" height="15" fill="rgb(250,226,42)"/><text x="606.00" y="430.50">Py..</text></g><g><title>maybe_get_attr (get_attr_string.h) (8 samples, 2.56%)</title><rect x="603" y="436" width="31" height="15" fill="rgb(251,98,39)"/><text x="606.00" y="446.50">ma..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.64%)</title><rect x="645" y="436" width="7" height="15" fill="rgb(215,36,31)"/><text x="648.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.28%)</title><rect x="641" y="420" width="15" height="15" fill="rgb(212,103,3)"/><text x="644.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.32%)</title><rect x="652" y="436" width="4" height="15" fill="rgb(231,163,32)"/><text x="655.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.32%)</title><rect x="656" y="420" width="4" height="15" fill="rgb(237,54,39)"/><text x="659.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="656" y="436" width="4" height="15" fill="rgb(241,80,46)"/><text x="659.00" y="446.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.32%)</title><rect x="660" y="420" width="4" height="15" fill="rgb(209,129,34)"/><text x="663.00" y="430.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.32%)</title><rect x="664" y="420" width="4" height="15" fill="rgb(251,39,29)"/><text x="667.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.64%)</title><rect x="668" y="420" width="7" height="15" fill="rgb(233,81,0)"/><text x="671.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.64%)</title><rect x="668" y="436" width="7" height="15" fill="rgb(254,14,5)"/><text x="671.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.64%)</title><rect x="668" y="452" width="7" height="15" fill="rgb(210,48,11)"/><text x="671.00" y="462.50"></text></g><g><title>0x7f4fa4a7c8b8 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="671" y="468" width="4" height="15" fill="rgb(232,15,40)"/><text x="674.00" y="478.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="675" y="452" width="4" height="15" fill="rgb(233,102,46)"/><text x="678.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 1.28%)</title><rect x="675" y="420" width="15" height="15" fill="rgb(246,151,42)"/><text x="678.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 1.28%)</title><rect x="675" y="436" width="15" height="15" fill="rgb(243,120,47)"/><text x="678.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.96%)</title><rect x="679" y="452" width="11" height="15" fill="rgb(240,147,1)"/><text x="682.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (3 samples, 0.96%)</title><rect x="679" y="468" width="11" height="15" fill="rgb(248,66,19)"/><text x="682.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (2 samples, 0.64%)</title><rect x="683" y="484" width="7" height="15" fill="rgb(212,171,1)"/><text x="686.00" y="494.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (2 samples, 0.64%)</title><rect x="683" y="500" width="7" height="15" fill="rgb(227,190,18)"/><text x="686.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (16 samples, 5.13%)</title><rect x="637" y="404" width="61" height="15" fill="rgb(209,108,53)"/><text x="640.00" y="414.50">PyUFun..</text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.64%)</title><rect x="690" y="420" width="8" height="15" fill="rgb(237,22,28)"/><text x="693.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.32%)</title><rect x="694" y="436" width="4" height="15" fill="rgb(219,48,2)"/><text x="697.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.32%)</title><rect x="694" y="452" width="4" height="15" fill="rgb(217,99,26)"/><text x="697.00" y="462.50"></text></g><g><title>array_sum (methods.c) (30 samples, 9.62%)</title><rect x="592" y="308" width="113" height="15" fill="rgb(230,18,25)"/><text x="595.00" y="318.50">array_sum (me..</text></g><g><title>forward_ndarray_method (methods.c) (30 samples, 9.62%)</title><rect x="592" y="324" width="113" height="15" fill="rgb(220,64,1)"/><text x="595.00" y="334.50">forward_ndarr..</text></g><g><title>_sum (numpy/core/_methods.py) (27 samples, 8.65%)</title><rect x="603" y="340" width="102" height="15" fill="rgb(231,77,42)"/><text x="606.00" y="350.50">_sum (numpy/..</text></g><g><title>ufunc_reduce (ufunc_object.c) (27 samples, 8.65%)</title><rect x="603" y="356" width="102" height="15" fill="rgb(234,143,16)"/><text x="606.00" y="366.50">ufunc_reduce..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (19 samples, 6.09%)</title><rect x="634" y="372" width="71" height="15" fill="rgb(212,14,22)"/><text x="637.00" y="382.50">PyUFunc_..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (18 samples, 5.77%)</title><rect x="637" y="388" width="68" height="15" fill="rgb(227,110,46)"/><text x="640.00" y="398.50">PyUFunc..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.64%)</title><rect x="698" y="404" width="7" height="15" fill="rgb(249,39,30)"/><text x="701.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="702" y="420" width="3" height="15" fill="rgb(227,85,0)"/><text x="705.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="702" y="436" width="3" height="15" fill="rgb(217,221,42)"/><text x="705.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="702" y="452" width="3" height="15" fill="rgb(238,149,47)"/><text x="705.00" y="462.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.64%)</title><rect x="721" y="340" width="7" height="15" fill="rgb(208,60,45)"/><text x="724.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.60%)</title><rect x="721" y="324" width="18" height="15" fill="rgb(235,151,35)"/><text x="724.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.96%)</title><rect x="728" y="340" width="11" height="15" fill="rgb(209,145,54)"/><text x="731.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 3.85%)</title><rect x="705" y="308" width="46" height="15" fill="rgb(227,187,23)"/><text x="708.00" y="318.50">chec..</text></g><g><title>isclass (inspect.py) (3 samples, 0.96%)</title><rect x="739" y="324" width="12" height="15" fill="rgb(239,115,32)"/><text x="742.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.32%)</title><rect x="758" y="340" width="4" height="15" fill="rgb(223,7,49)"/><text x="761.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.32%)</title><rect x="758" y="356" width="4" height="15" fill="rgb(238,223,21)"/><text x="761.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.32%)</title><rect x="758" y="372" width="4" height="15" fill="rgb(223,71,34)"/><text x="761.00" y="382.50"></text></g><g><title>0x7f4fa4ae5120 (libc-2.29.so) (2 samples, 0.64%)</title><rect x="762" y="388" width="8" height="15" fill="rgb(215,36,10)"/><text x="765.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.32%)</title><rect x="770" y="388" width="3" height="15" fill="rgb(221,98,17)"/><text x="773.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.28%)</title><rect x="762" y="372" width="15" height="15" fill="rgb(233,31,37)"/><text x="765.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.32%)</title><rect x="773" y="388" width="4" height="15" fill="rgb(226,119,53)"/><text x="776.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.32%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(222,104,25)"/><text x="780.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.64%)</title><rect x="777" y="372" width="8" height="15" fill="rgb(214,89,42)"/><text x="780.00" y="382.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.32%)</title><rect x="781" y="388" width="4" height="15" fill="rgb(241,126,30)"/><text x="784.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.24%)</title><rect x="762" y="340" width="27" height="15" fill="rgb(223,110,22)"/><text x="765.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.24%)</title><rect x="762" y="356" width="27" height="15" fill="rgb(208,79,12)"/><text x="765.00" y="366.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.32%)</title><rect x="785" y="372" width="4" height="15" fill="rgb(217,18,2)"/><text x="788.00" y="382.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.32%)</title><rect x="785" y="388" width="4" height="15" fill="rgb(241,65,26)"/><text x="788.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (113 samples, 36.22%)</title><rect x="365" y="292" width="427" height="15" fill="rgb(231,90,10)"/><text x="368.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.53%)</title><rect x="751" y="308" width="41" height="15" fill="rgb(227,90,18)"/><text x="754.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.53%)</title><rect x="751" y="324" width="41" height="15" fill="rgb(240,150,6)"/><text x="754.00" y="334.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="789" y="340" width="3" height="15" fill="rgb(239,222,48)"/><text x="792.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="789" y="356" width="3" height="15" fill="rgb(226,78,9)"/><text x="792.00" y="366.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (2 samples, 0.64%)</title><rect x="796" y="340" width="8" height="15" fill="rgb(227,114,39)"/><text x="799.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="804" y="356" width="4" height="15" fill="rgb(244,79,31)"/><text x="807.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.64%)</title><rect x="804" y="340" width="7" height="15" fill="rgb(238,185,37)"/><text x="807.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.32%)</title><rect x="808" y="356" width="3" height="15" fill="rgb(226,207,42)"/><text x="811.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.32%)</title><rect x="808" y="372" width="3" height="15" fill="rgb(218,158,20)"/><text x="811.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.32%)</title><rect x="808" y="388" width="3" height="15" fill="rgb(230,106,14)"/><text x="811.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.32%)</title><rect x="808" y="404" width="3" height="15" fill="rgb(251,224,9)"/><text x="811.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.32%)</title><rect x="808" y="420" width="3" height="15" fill="rgb(209,167,36)"/><text x="811.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (127 samples, 40.71%)</title><rect x="335" y="276" width="480" height="15" fill="rgb(249,87,26)"/><text x="338.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.92%)</title><rect x="792" y="292" width="23" height="15" fill="rgb(241,165,29)"/><text x="795.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.92%)</title><rect x="792" y="308" width="23" height="15" fill="rgb(237,164,53)"/><text x="795.00" y="318.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.92%)</title><rect x="792" y="324" width="23" height="15" fill="rgb(232,36,47)"/><text x="795.00" y="334.50">e..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="811" y="340" width="4" height="15" fill="rgb(208,159,26)"/><text x="814.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.32%)</title><rect x="811" y="356" width="4" height="15" fill="rgb(247,135,3)"/><text x="814.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (128 samples, 41.03%)</title><rect x="335" y="260" width="484" height="15" fill="rgb(252,224,31)"/><text x="338.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="815" y="276" width="4" height="15" fill="rgb(226,203,6)"/><text x="818.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="815" y="292" width="4" height="15" fill="rgb(234,133,6)"/><text x="818.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.32%)</title><rect x="815" y="308" width="4" height="15" fill="rgb(236,208,19)"/><text x="818.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (1 samples, 0.32%)</title><rect x="819" y="260" width="4" height="15" fill="rgb(230,122,46)"/><text x="822.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (1 samples, 0.32%)</title><rect x="819" y="276" width="4" height="15" fill="rgb(232,103,3)"/><text x="822.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (171 samples, 54.81%)</title><rect x="199" y="196" width="646" height="15" fill="rgb(244,55,38)"/><text x="202.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (159 samples, 50.96%)</title><rect x="244" y="212" width="601" height="15" fill="rgb(211,142,20)"/><text x="247.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (147 samples, 47.12%)</title><rect x="289" y="228" width="556" height="15" fill="rgb(250,160,13)"/><text x="292.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (142 samples, 45.51%)</title><rect x="308" y="244" width="537" height="15" fill="rgb(229,207,10)"/><text x="311.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (6 samples, 1.92%)</title><rect x="823" y="260" width="22" height="15" fill="rgb(218,45,8)"/><text x="826.00" y="270.50">_..</text></g><g><title>__enter__ (threading.py) (2 samples, 0.64%)</title><rect x="872" y="212" width="7" height="15" fill="rgb(244,13,39)"/><text x="875.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.64%)</title><rect x="872" y="228" width="7" height="15" fill="rgb(226,172,24)"/><text x="875.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.32%)</title><rect x="876" y="244" width="3" height="15" fill="rgb(236,197,32)"/><text x="879.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="876" y="260" width="3" height="15" fill="rgb(211,217,18)"/><text x="879.00" y="270.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.32%)</title><rect x="879" y="212" width="4" height="15" fill="rgb(215,30,12)"/><text x="882.00" y="222.50"></text></g><g><title>_get (queue.py) (1 samples, 0.32%)</title><rect x="883" y="212" width="4" height="15" fill="rgb(212,7,12)"/><text x="886.00" y="222.50"></text></g><g><title>_qsize (queue.py) (3 samples, 0.96%)</title><rect x="887" y="212" width="11" height="15" fill="rgb(230,64,54)"/><text x="890.00" y="222.50"></text></g><g><title>get (queue.py) (16 samples, 5.13%)</title><rect x="845" y="196" width="61" height="15" fill="rgb(223,1,39)"/><text x="848.00" y="206.50">get (q..</text></g><g><title>notify (threading.py) (2 samples, 0.64%)</title><rect x="898" y="212" width="8" height="15" fill="rgb(205,156,48)"/><text x="901.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="940" y="212" width="19" height="15" fill="rgb(231,3,4)"/><text x="943.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (20 samples, 6.41%)</title><rect x="959" y="212" width="75" height="15" fill="rgb(251,83,3)"/><text x="962.00" y="222.50">get_acti..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (5 samples, 1.60%)</title><rect x="1016" y="228" width="18" height="15" fill="rgb(250,76,21)"/><text x="1019.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.32%)</title><rect x="1031" y="244" width="3" height="15" fill="rgb(215,159,13)"/><text x="1034.00" y="254.50"></text></g><g><title>0x7f4fa4ad56d0 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1042" y="228" width="4" height="15" fill="rgb(233,213,37)"/><text x="1045.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (38 samples, 12.18%)</title><rect x="906" y="196" width="144" height="15" fill="rgb(206,90,35)"/><text x="909.00" y="206.50">get_nested_backend..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="1034" y="212" width="16" height="15" fill="rgb(214,57,8)"/><text x="1037.00" y="222.50"></text></g><g><title>0x7f4fa4ad56d4 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1046" y="228" width="4" height="15" fill="rgb(244,58,0)"/><text x="1049.00" y="238.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.32%)</title><rect x="1072" y="212" width="4" height="15" fill="rgb(252,71,3)"/><text x="1075.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (270 samples, 86.54%)</title><rect x="85" y="180" width="1021" height="15" fill="rgb(235,22,38)"/><text x="88.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (15 samples, 4.81%)</title><rect x="1050" y="196" width="56" height="15" fill="rgb(250,140,1)"/><text x="1053.00" y="206.50">put (..</text></g><g><title>notify (threading.py) (8 samples, 2.56%)</title><rect x="1076" y="212" width="30" height="15" fill="rgb(209,73,26)"/><text x="1079.00" y="222.50">no..</text></g><g><title>_is_owned (threading.py) (4 samples, 1.28%)</title><rect x="1091" y="228" width="15" height="15" fill="rgb(236,117,28)"/><text x="1094.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (4 samples, 1.28%)</title><rect x="1091" y="244" width="15" height="15" fill="rgb(254,62,43)"/><text x="1094.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (2 samples, 0.64%)</title><rect x="1099" y="260" width="7" height="15" fill="rgb(219,131,30)"/><text x="1102.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (2 samples, 0.64%)</title><rect x="1099" y="276" width="7" height="15" fill="rgb(252,126,29)"/><text x="1102.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py) (277 samples, 88.78%)</title><rect x="78" y="164" width="1047" height="15" fill="rgb(213,141,45)"/><text x="81.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (5 samples, 1.60%)</title><rect x="1106" y="180" width="19" height="15" fill="rgb(238,86,35)"/><text x="1109.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.32%)</title><rect x="1125" y="164" width="4" height="15" fill="rgb(249,78,21)"/><text x="1128.00" y="174.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (2 samples, 0.64%)</title><rect x="1129" y="164" width="8" height="15" fill="rgb(247,79,47)"/><text x="1132.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.32%)</title><rect x="1133" y="180" width="4" height="15" fill="rgb(228,8,19)"/><text x="1136.00" y="190.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (1 samples, 0.32%)</title><rect x="1133" y="196" width="4" height="15" fill="rgb(237,54,28)"/><text x="1136.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.32%)</title><rect x="1137" y="212" width="3" height="15" fill="rgb(235,151,36)"/><text x="1140.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.64%)</title><rect x="1137" y="180" width="7" height="15" fill="rgb(206,116,18)"/><text x="1140.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.64%)</title><rect x="1137" y="196" width="7" height="15" fill="rgb(249,160,2)"/><text x="1140.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.32%)</title><rect x="1140" y="212" width="4" height="15" fill="rgb(222,120,53)"/><text x="1143.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (3 samples, 0.96%)</title><rect x="1137" y="164" width="11" height="15" fill="rgb(238,14,40)"/><text x="1140.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.32%)</title><rect x="1144" y="180" width="4" height="15" fill="rgb(249,132,40)"/><text x="1147.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.32%)</title><rect x="1144" y="196" width="4" height="15" fill="rgb(247,110,42)"/><text x="1147.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (284 samples, 91.03%)</title><rect x="78" y="100" width="1074" height="15" fill="rgb(221,106,5)"/><text x="81.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (284 samples, 91.03%)</title><rect x="78" y="116" width="1074" height="15" fill="rgb(243,163,11)"/><text x="81.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (284 samples, 91.03%)</title><rect x="78" y="132" width="1074" height="15" fill="rgb(232,83,51)"/><text x="81.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (284 samples, 91.03%)</title><rect x="78" y="148" width="1074" height="15" fill="rgb(251,51,32)"/><text x="81.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;) (1 samples, 0.32%)</title><rect x="1148" y="164" width="4" height="15" fill="rgb(248,38,20)"/><text x="1151.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.32%)</title><rect x="1148" y="180" width="4" height="15" fill="rgb(219,153,17)"/><text x="1151.00" y="190.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py) (1 samples, 0.32%)</title><rect x="1148" y="196" width="4" height="15" fill="rgb(215,175,52)"/><text x="1151.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (2 samples, 0.64%)</title><rect x="1152" y="228" width="7" height="15" fill="rgb(241,209,51)"/><text x="1155.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.32%)</title><rect x="1155" y="244" width="4" height="15" fill="rgb(213,87,54)"/><text x="1158.00" y="254.50"></text></g><g><title>float_arrtype_new (scalartypes.c.src) (1 samples, 0.32%)</title><rect x="1155" y="260" width="4" height="15" fill="rgb(251,81,38)"/><text x="1158.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.32%)</title><rect x="1155" y="276" width="4" height="15" fill="rgb(250,212,39)"/><text x="1158.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.32%)</title><rect x="1155" y="292" width="4" height="15" fill="rgb(248,170,32)"/><text x="1158.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.32%)</title><rect x="1159" y="228" width="4" height="15" fill="rgb(252,201,32)"/><text x="1162.00" y="238.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.32%)</title><rect x="1159" y="244" width="4" height="15" fill="rgb(212,104,29)"/><text x="1162.00" y="254.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.32%)</title><rect x="1159" y="260" width="4" height="15" fill="rgb(253,188,34)"/><text x="1162.00" y="270.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (288 samples, 92.31%)</title><rect x="78" y="68" width="1089" height="15" fill="rgb(216,206,4)"/><text x="81.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (288 samples, 92.31%)</title><rect x="78" y="84" width="1089" height="15" fill="rgb(217,213,1)"/><text x="81.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.28%)</title><rect x="1152" y="100" width="15" height="15" fill="rgb(206,32,11)"/><text x="1155.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.28%)</title><rect x="1152" y="116" width="15" height="15" fill="rgb(235,59,45)"/><text x="1155.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.28%)</title><rect x="1152" y="132" width="15" height="15" fill="rgb(253,40,31)"/><text x="1155.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (4 samples, 1.28%)</title><rect x="1152" y="148" width="15" height="15" fill="rgb(210,10,12)"/><text x="1155.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (4 samples, 1.28%)</title><rect x="1152" y="164" width="15" height="15" fill="rgb(211,127,36)"/><text x="1155.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (4 samples, 1.28%)</title><rect x="1152" y="180" width="15" height="15" fill="rgb(242,24,6)"/><text x="1155.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (4 samples, 1.28%)</title><rect x="1152" y="196" width="15" height="15" fill="rgb(249,139,8)"/><text x="1155.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (4 samples, 1.28%)</title><rect x="1152" y="212" width="15" height="15" fill="rgb(232,178,17)"/><text x="1155.00" y="222.50"></text></g><g><title>long_richcompare (scalarmath.c.src) (1 samples, 0.32%)</title><rect x="1163" y="228" width="4" height="15" fill="rgb(223,114,50)"/><text x="1166.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.32%)</title><rect x="1163" y="244" width="4" height="15" fill="rgb(219,185,0)"/><text x="1166.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="1163" y="260" width="4" height="15" fill="rgb(251,3,49)"/><text x="1166.00" y="270.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.32%)</title><rect x="1163" y="276" width="4" height="15" fill="rgb(210,224,27)"/><text x="1166.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.32%)</title><rect x="1163" y="292" width="4" height="15" fill="rgb(246,6,11)"/><text x="1166.00" y="302.50"></text></g><g><title>_Pickle_FastCall (_pickle.c) (1 samples, 0.32%)</title><rect x="1167" y="436" width="4" height="15" fill="rgb(205,193,0)"/><text x="1170.00" y="446.50"></text></g><g><title>0x7f4f7e503334 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1167" y="452" width="4" height="15" fill="rgb(237,42,25)"/><text x="1170.00" y="462.50"></text></g><g><title>0x7f4f7b8f8f5d (sklearn/tree/_utils.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1167" y="468" width="4" height="15" fill="rgb(217,51,5)"/><text x="1170.00" y="478.50"></text></g><g><title>0x7f4f7b8ea88f (sklearn/tree/_utils.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1167" y="484" width="4" height="15" fill="rgb(210,148,19)"/><text x="1170.00" y="494.50"></text></g><g><title>array_copy (methods.c) (1 samples, 0.32%)</title><rect x="1167" y="500" width="4" height="15" fill="rgb(231,86,34)"/><text x="1170.00" y="510.50"></text></g><g><title>PyArray_NewCopy (convert.c) (1 samples, 0.32%)</title><rect x="1167" y="516" width="4" height="15" fill="rgb(209,103,18)"/><text x="1170.00" y="526.50"></text></g><g><title>_pickle_dump (_pickle.c.h) (2 samples, 0.64%)</title><rect x="1167" y="116" width="7" height="15" fill="rgb(225,71,26)"/><text x="1170.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="132" width="7" height="15" fill="rgb(233,191,4)"/><text x="1170.00" y="142.50"></text></g><g><title>dump (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="148" width="7" height="15" fill="rgb(237,152,3)"/><text x="1170.00" y="158.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="164" width="7" height="15" fill="rgb(214,114,31)"/><text x="1170.00" y="174.50"></text></g><g><title>save_dict (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="180" width="7" height="15" fill="rgb(218,13,54)"/><text x="1170.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="196" width="7" height="15" fill="rgb(232,35,46)"/><text x="1170.00" y="206.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="212" width="7" height="15" fill="rgb(228,186,46)"/><text x="1170.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="228" width="7" height="15" fill="rgb(223,142,20)"/><text x="1170.00" y="238.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="244" width="7" height="15" fill="rgb(250,187,51)"/><text x="1170.00" y="254.50"></text></g><g><title>save_dict (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="260" width="7" height="15" fill="rgb(220,112,24)"/><text x="1170.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="276" width="7" height="15" fill="rgb(248,200,18)"/><text x="1170.00" y="286.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="292" width="7" height="15" fill="rgb(222,20,34)"/><text x="1170.00" y="302.50"></text></g><g><title>save_list (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="308" width="7" height="15" fill="rgb(247,169,50)"/><text x="1170.00" y="318.50"></text></g><g><title>batch_list_exact (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="324" width="7" height="15" fill="rgb(229,217,20)"/><text x="1170.00" y="334.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="340" width="7" height="15" fill="rgb(223,35,13)"/><text x="1170.00" y="350.50"></text></g><g><title>save_reduce (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="356" width="7" height="15" fill="rgb(216,84,12)"/><text x="1170.00" y="366.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="372" width="7" height="15" fill="rgb(218,142,13)"/><text x="1170.00" y="382.50"></text></g><g><title>save_dict (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="388" width="7" height="15" fill="rgb(250,57,18)"/><text x="1170.00" y="398.50"></text></g><g><title>batch_dict_exact (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="404" width="7" height="15" fill="rgb(230,162,3)"/><text x="1170.00" y="414.50"></text></g><g><title>save (_pickle.c) (2 samples, 0.64%)</title><rect x="1167" y="420" width="7" height="15" fill="rgb(224,195,36)"/><text x="1170.00" y="430.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="436" width="3" height="15" fill="rgb(222,78,16)"/><text x="1174.00" y="446.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="452" width="3" height="15" fill="rgb(246,62,12)"/><text x="1174.00" y="462.50"></text></g><g><title>save_tuple (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="468" width="3" height="15" fill="rgb(224,17,10)"/><text x="1174.00" y="478.50"></text></g><g><title>store_tuple_elements (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="484" width="3" height="15" fill="rgb(242,187,27)"/><text x="1174.00" y="494.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="500" width="3" height="15" fill="rgb(244,15,45)"/><text x="1174.00" y="510.50"></text></g><g><title>_Pickle_FastCall (_pickle.c) (1 samples, 0.32%)</title><rect x="1171" y="516" width="3" height="15" fill="rgb(237,191,48)"/><text x="1174.00" y="526.50"></text></g><g><title>array_reduce_ex (methods.c) (1 samples, 0.32%)</title><rect x="1171" y="532" width="3" height="15" fill="rgb(231,63,25)"/><text x="1174.00" y="542.50"></text></g><g><title>array_reduce_ex_picklebuffer (methods.c) (1 samples, 0.32%)</title><rect x="1171" y="548" width="3" height="15" fill="rgb(212,62,22)"/><text x="1174.00" y="558.50"></text></g><g><title>array_reduce_ex_regular (methods.c) (1 samples, 0.32%)</title><rect x="1171" y="564" width="3" height="15" fill="rgb(217,101,44)"/><text x="1174.00" y="574.50"></text></g><g><title>array_reduce (methods.c) (1 samples, 0.32%)</title><rect x="1171" y="580" width="3" height="15" fill="rgb(218,19,13)"/><text x="1174.00" y="590.50"></text></g><g><title>0x7f4f9739fa66 (?) (1 samples, 0.32%)</title><rect x="1174" y="308" width="4" height="15" fill="rgb(214,133,8)"/><text x="1177.00" y="318.50"></text></g><g><title>0x7f4f97391579 (?) (1 samples, 0.32%)</title><rect x="1174" y="324" width="4" height="15" fill="rgb(219,74,51)"/><text x="1177.00" y="334.50"></text></g><g><title>0x7f4f96cd2713 (?) (1 samples, 0.32%)</title><rect x="1174" y="340" width="4" height="15" fill="rgb(220,110,18)"/><text x="1177.00" y="350.50"></text></g><g><title>0x7f4f96ccb884 (?) (1 samples, 0.32%)</title><rect x="1174" y="356" width="4" height="15" fill="rgb(241,115,16)"/><text x="1177.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.32%)</title><rect x="1174" y="372" width="4" height="15" fill="rgb(206,62,25)"/><text x="1177.00" y="382.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.32%)</title><rect x="1174" y="388" width="4" height="15" fill="rgb(208,37,33)"/><text x="1177.00" y="398.50"></text></g><g><title>__Pyx_GetItemInt_Fast (mt19937.c) (1 samples, 0.32%)</title><rect x="1178" y="388" width="4" height="15" fill="rgb(214,11,40)"/><text x="1181.00" y="398.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.32%)</title><rect x="1178" y="404" width="4" height="15" fill="rgb(234,110,41)"/><text x="1181.00" y="414.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.32%)</title><rect x="1178" y="420" width="4" height="15" fill="rgb(235,225,22)"/><text x="1181.00" y="430.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (mt19937.c) (1 samples, 0.32%)</title><rect x="1182" y="388" width="4" height="15" fill="rgb(242,117,17)"/><text x="1185.00" y="398.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (mt19937.c) (1 samples, 0.32%)</title><rect x="1182" y="404" width="4" height="15" fill="rgb(238,47,29)"/><text x="1185.00" y="414.50"></text></g><g><title>all (312 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(219,126,23)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (312 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,28,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (6 samples, 1.92%)</title><rect x="1167" y="68" width="23" height="15" fill="rgb(233,136,14)"/><text x="1170.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (6 samples, 1.92%)</title><rect x="1167" y="84" width="23" height="15" fill="rgb(236,176,21)"/><text x="1170.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.92%)</title><rect x="1167" y="100" width="23" height="15" fill="rgb(241,183,19)"/><text x="1170.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py) (4 samples, 1.28%)</title><rect x="1174" y="116" width="16" height="15" fill="rgb(250,22,30)"/><text x="1177.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.28%)</title><rect x="1174" y="132" width="16" height="15" fill="rgb(252,42,31)"/><text x="1177.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 1.28%)</title><rect x="1174" y="148" width="16" height="15" fill="rgb(213,48,11)"/><text x="1177.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.28%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(226,20,5)"/><text x="1177.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.28%)</title><rect x="1174" y="180" width="16" height="15" fill="rgb(238,44,1)"/><text x="1177.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.28%)</title><rect x="1174" y="196" width="16" height="15" fill="rgb(241,89,40)"/><text x="1177.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.28%)</title><rect x="1174" y="212" width="16" height="15" fill="rgb(249,18,40)"/><text x="1177.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.28%)</title><rect x="1174" y="228" width="16" height="15" fill="rgb(250,165,54)"/><text x="1177.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.28%)</title><rect x="1174" y="244" width="16" height="15" fill="rgb(251,107,50)"/><text x="1177.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 1.28%)</title><rect x="1174" y="260" width="16" height="15" fill="rgb(226,155,7)"/><text x="1177.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 1.28%)</title><rect x="1174" y="276" width="16" height="15" fill="rgb(224,180,3)"/><text x="1177.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (4 samples, 1.28%)</title><rect x="1174" y="292" width="16" height="15" fill="rgb(252,40,50)"/><text x="1177.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (3 samples, 0.96%)</title><rect x="1178" y="308" width="12" height="15" fill="rgb(247,148,14)"/><text x="1181.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (3 samples, 0.96%)</title><rect x="1178" y="324" width="12" height="15" fill="rgb(254,15,37)"/><text x="1181.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (3 samples, 0.96%)</title><rect x="1178" y="340" width="12" height="15" fill="rgb(210,139,53)"/><text x="1181.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (3 samples, 0.96%)</title><rect x="1178" y="356" width="12" height="15" fill="rgb(236,66,54)"/><text x="1181.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (3 samples, 0.96%)</title><rect x="1178" y="372" width="12" height="15" fill="rgb(248,77,54)"/><text x="1181.00" y="382.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.32%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(236,212,10)"/><text x="1189.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(208,31,53)"/><text x="1189.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.32%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(205,157,40)"/><text x="1189.00" y="430.50"></text></g></g></svg>