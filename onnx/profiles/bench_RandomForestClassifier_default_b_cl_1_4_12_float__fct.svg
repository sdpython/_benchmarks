<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(249,17,34)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(232,115,31)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(237,217,35)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(215,223,45)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(240,93,11)"/><text x="13.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(215,41,1)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(249,229,28)"/><text x="16.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(217,120,41)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(206,83,50)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(216,54,18)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(218,23,1)"/><text x="20.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(223,146,14)"/><text x="20.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(250,85,12)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(248,105,28)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(254,23,41)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(238,226,42)"/><text x="20.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(224,14,29)"/><text x="20.00" y="1022.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(229,172,0)"/><text x="23.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(245,108,23)"/><text x="23.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(208,222,37)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(221,173,28)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(247,48,26)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(247,192,32)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(221,229,45)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(253,168,9)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.53%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(218,184,15)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(238,140,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(231,178,26)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(250,157,14)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(239,0,49)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(248,60,25)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.53%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(221,76,12)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(242,110,45)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(245,81,35)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(236,1,4)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(226,37,28)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(223,112,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.53%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(251,32,21)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(211,78,43)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(231,227,43)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(247,35,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(205,122,29)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(206,17,11)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(209,164,12)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(228,141,51)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(249,38,39)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(210,128,48)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(206,160,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(223,155,22)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(249,52,35)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(247,206,19)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(228,159,45)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(246,164,31)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(219,153,5)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(233,133,45)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="20" y="868" width="8" height="15" fill="rgb(247,198,2)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="20" y="884" width="8" height="15" fill="rgb(249,31,36)"/><text x="23.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="20" y="900" width="8" height="15" fill="rgb(234,65,28)"/><text x="23.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(206,6,32)"/><text x="27.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(228,89,51)"/><text x="27.00" y="942.50"></text></g><g><title>0x7f26cd137237 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(219,46,27)"/><text x="27.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(226,43,7)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(228,47,13)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(205,191,22)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(228,91,5)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.14%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(235,33,2)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(233,3,10)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="292" width="7" height="15" fill="rgb(243,136,30)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="308" width="7" height="15" fill="rgb(209,77,19)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="324" width="7" height="15" fill="rgb(230,74,0)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="340" width="7" height="15" fill="rgb(243,63,22)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="356" width="7" height="15" fill="rgb(251,5,44)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="372" width="7" height="15" fill="rgb(205,59,52)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.61%)</title><rect x="28" y="388" width="7" height="15" fill="rgb(229,68,35)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="404" width="7" height="15" fill="rgb(254,52,3)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="420" width="7" height="15" fill="rgb(210,206,18)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="436" width="7" height="15" fill="rgb(236,150,24)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="452" width="7" height="15" fill="rgb(234,210,41)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="468" width="7" height="15" fill="rgb(253,24,32)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="484" width="7" height="15" fill="rgb(228,218,16)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="500" width="7" height="15" fill="rgb(218,4,7)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="516" width="7" height="15" fill="rgb(213,163,34)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="532" width="7" height="15" fill="rgb(220,91,53)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="548" width="7" height="15" fill="rgb(241,65,4)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="564" width="7" height="15" fill="rgb(239,163,8)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.61%)</title><rect x="28" y="580" width="7" height="15" fill="rgb(252,107,54)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="596" width="7" height="15" fill="rgb(205,65,39)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="612" width="7" height="15" fill="rgb(219,187,17)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="628" width="7" height="15" fill="rgb(246,10,46)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="644" width="7" height="15" fill="rgb(245,188,40)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="660" width="7" height="15" fill="rgb(250,77,11)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="676" width="7" height="15" fill="rgb(219,29,43)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="692" width="7" height="15" fill="rgb(225,51,24)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="708" width="7" height="15" fill="rgb(226,135,25)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="724" width="7" height="15" fill="rgb(213,10,29)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="740" width="7" height="15" fill="rgb(234,168,11)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="756" width="7" height="15" fill="rgb(207,209,23)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.61%)</title><rect x="28" y="772" width="7" height="15" fill="rgb(239,167,43)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="788" width="7" height="15" fill="rgb(228,224,46)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="804" width="7" height="15" fill="rgb(213,123,20)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="820" width="7" height="15" fill="rgb(237,89,18)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="836" width="7" height="15" fill="rgb(241,136,33)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="852" width="7" height="15" fill="rgb(241,187,2)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="868" width="7" height="15" fill="rgb(254,77,0)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="884" width="7" height="15" fill="rgb(205,157,40)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.61%)</title><rect x="28" y="900" width="7" height="15" fill="rgb(242,143,53)"/><text x="31.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="916" width="7" height="15" fill="rgb(232,58,0)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="932" width="7" height="15" fill="rgb(239,126,46)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="948" width="7" height="15" fill="rgb(243,162,34)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="964" width="7" height="15" fill="rgb(251,150,52)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="980" width="7" height="15" fill="rgb(209,64,34)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (2 samples, 0.61%)</title><rect x="28" y="996" width="7" height="15" fill="rgb(209,2,20)"/><text x="31.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1012" width="7" height="15" fill="rgb(212,192,4)"/><text x="31.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1028" width="7" height="15" fill="rgb(243,37,15)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1044" width="7" height="15" fill="rgb(250,94,20)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1060" width="7" height="15" fill="rgb(217,98,9)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1076" width="7" height="15" fill="rgb(211,75,44)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="1092" width="7" height="15" fill="rgb(245,185,17)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1108" width="7" height="15" fill="rgb(246,50,53)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="1124" width="7" height="15" fill="rgb(229,59,30)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1140" width="7" height="15" fill="rgb(218,3,32)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1156" width="7" height="15" fill="rgb(211,16,41)"/><text x="31.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1172" width="7" height="15" fill="rgb(248,40,17)"/><text x="31.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="1188" width="7" height="15" fill="rgb(249,29,22)"/><text x="31.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="1204" width="7" height="15" fill="rgb(254,15,3)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_dual_annealing.py) (2 samples, 0.61%)</title><rect x="28" y="1220" width="7" height="15" fill="rgb(252,183,24)"/><text x="31.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="484" width="11" height="15" fill="rgb(215,86,10)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="500" width="11" height="15" fill="rgb(230,134,12)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="516" width="11" height="15" fill="rgb(234,107,47)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="532" width="11" height="15" fill="rgb(221,112,8)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="548" width="11" height="15" fill="rgb(229,72,14)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="564" width="11" height="15" fill="rgb(209,34,20)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="580" width="11" height="15" fill="rgb(230,105,1)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="596" width="11" height="15" fill="rgb(218,206,37)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="612" width="11" height="15" fill="rgb(231,37,31)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="628" width="11" height="15" fill="rgb(242,183,53)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="644" width="11" height="15" fill="rgb(241,120,36)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="660" width="11" height="15" fill="rgb(220,214,33)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.92%)</title><rect x="35" y="676" width="11" height="15" fill="rgb(205,223,37)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="692" width="11" height="15" fill="rgb(250,112,18)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="708" width="11" height="15" fill="rgb(244,208,3)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="724" width="11" height="15" fill="rgb(233,129,41)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="740" width="11" height="15" fill="rgb(220,84,15)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="756" width="11" height="15" fill="rgb(245,163,30)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="772" width="11" height="15" fill="rgb(224,25,45)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="788" width="11" height="15" fill="rgb(241,12,33)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="804" width="11" height="15" fill="rgb(254,68,2)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="820" width="11" height="15" fill="rgb(238,15,23)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="836" width="11" height="15" fill="rgb(246,6,36)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="852" width="11" height="15" fill="rgb(230,12,50)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.92%)</title><rect x="35" y="868" width="11" height="15" fill="rgb(220,216,48)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="884" width="11" height="15" fill="rgb(253,225,32)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="900" width="11" height="15" fill="rgb(231,25,28)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="916" width="11" height="15" fill="rgb(231,168,41)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="932" width="11" height="15" fill="rgb(246,116,36)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="948" width="11" height="15" fill="rgb(223,215,21)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="964" width="11" height="15" fill="rgb(220,171,27)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="980" width="11" height="15" fill="rgb(235,86,43)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="996" width="11" height="15" fill="rgb(218,58,18)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="1012" width="11" height="15" fill="rgb(241,16,20)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1028" width="11" height="15" fill="rgb(221,76,16)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1044" width="11" height="15" fill="rgb(222,1,15)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1060" width="11" height="15" fill="rgb(237,129,13)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1076" width="11" height="15" fill="rgb(233,153,46)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1092" width="11" height="15" fill="rgb(220,153,48)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.92%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(248,223,1)"/><text x="38.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1124" width="11" height="15" fill="rgb(234,152,31)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1140" width="11" height="15" fill="rgb(209,100,42)"/><text x="38.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1156" width="11" height="15" fill="rgb(231,127,32)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1172" width="11" height="15" fill="rgb(213,225,12)"/><text x="38.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1188" width="11" height="15" fill="rgb(207,122,18)"/><text x="38.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1204" width="11" height="15" fill="rgb(238,92,39)"/><text x="38.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1220" width="11" height="15" fill="rgb(235,209,6)"/><text x="38.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="1236" width="11" height="15" fill="rgb(254,13,50)"/><text x="38.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1252" width="11" height="15" fill="rgb(233,179,30)"/><text x="38.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1268" width="11" height="15" fill="rgb(215,28,10)"/><text x="38.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1284" width="11" height="15" fill="rgb(244,121,10)"/><text x="38.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1300" width="11" height="15" fill="rgb(218,186,39)"/><text x="38.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1316" width="11" height="15" fill="rgb(233,55,44)"/><text x="38.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1332" width="11" height="15" fill="rgb(246,91,21)"/><text x="38.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1348" width="11" height="15" fill="rgb(236,111,36)"/><text x="38.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.92%)</title><rect x="35" y="1364" width="11" height="15" fill="rgb(209,144,54)"/><text x="38.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1380" width="11" height="15" fill="rgb(223,181,14)"/><text x="38.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1396" width="11" height="15" fill="rgb(221,143,17)"/><text x="38.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1412" width="11" height="15" fill="rgb(236,162,53)"/><text x="38.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1428" width="11" height="15" fill="rgb(208,23,35)"/><text x="38.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1444" width="11" height="15" fill="rgb(214,213,43)"/><text x="38.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.92%)</title><rect x="35" y="1460" width="11" height="15" fill="rgb(225,171,50)"/><text x="38.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.92%)</title><rect x="35" y="1476" width="11" height="15" fill="rgb(241,204,25)"/><text x="38.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.92%)</title><rect x="35" y="1492" width="11" height="15" fill="rgb(227,190,11)"/><text x="38.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.92%)</title><rect x="35" y="1508" width="11" height="15" fill="rgb(214,113,19)"/><text x="38.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.61%)</title><rect x="38" y="1524" width="8" height="15" fill="rgb(226,181,54)"/><text x="41.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.61%)</title><rect x="38" y="1540" width="8" height="15" fill="rgb(214,215,45)"/><text x="41.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.61%)</title><rect x="38" y="1556" width="8" height="15" fill="rgb(245,75,19)"/><text x="41.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.61%)</title><rect x="38" y="1572" width="8" height="15" fill="rgb(223,118,20)"/><text x="41.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="42" y="1588" width="4" height="15" fill="rgb(231,84,23)"/><text x="45.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="42" y="1604" width="4" height="15" fill="rgb(207,15,51)"/><text x="45.00" y="1614.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="42" y="1620" width="4" height="15" fill="rgb(213,23,8)"/><text x="45.00" y="1630.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="42" y="1636" width="4" height="15" fill="rgb(230,101,4)"/><text x="45.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="724" width="3" height="15" fill="rgb(248,222,30)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="740" width="3" height="15" fill="rgb(238,169,2)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="756" width="3" height="15" fill="rgb(234,221,0)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(223,206,36)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(228,69,43)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(221,192,9)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(234,142,38)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="836" width="3" height="15" fill="rgb(241,23,8)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="852" width="3" height="15" fill="rgb(223,133,18)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="868" width="3" height="15" fill="rgb(207,95,35)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="884" width="3" height="15" fill="rgb(207,33,2)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="900" width="3" height="15" fill="rgb(241,225,50)"/><text x="49.00" y="910.50"></text></g><g><title>0x7f26a262840e (?) (1 samples, 0.31%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(223,167,32)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(244,83,14)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(216,192,17)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(243,19,42)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(205,224,14)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(209,27,13)"/><text x="49.00" y="1006.50"></text></g><g><title>0x7f26a23e1cd2 (?) (1 samples, 0.31%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(251,212,41)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(207,86,12)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(224,63,10)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(223,43,37)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(240,221,0)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(216,140,26)"/><text x="49.00" y="1102.50"></text></g><g><title>0x7f26a1ad70e5 (?) (1 samples, 0.31%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(227,196,50)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(235,72,5)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(246,57,40)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(220,198,3)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1172" width="3" height="15" fill="rgb(231,4,41)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1188" width="3" height="15" fill="rgb(225,55,31)"/><text x="49.00" y="1198.50"></text></g><g><title>0x7f26a185be68 (?) (1 samples, 0.31%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(252,101,34)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(225,185,51)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(216,114,15)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(229,201,42)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1268" width="3" height="15" fill="rgb(234,82,34)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1284" width="3" height="15" fill="rgb(252,23,52)"/><text x="49.00" y="1294.50"></text></g><g><title>0x7f26a15ec6be (?) (1 samples, 0.31%)</title><rect x="46" y="1300" width="3" height="15" fill="rgb(224,55,24)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1316" width="3" height="15" fill="rgb(221,115,50)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1332" width="3" height="15" fill="rgb(218,128,48)"/><text x="49.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1348" width="3" height="15" fill="rgb(214,175,43)"/><text x="49.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1364" width="3" height="15" fill="rgb(247,195,41)"/><text x="49.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1380" width="3" height="15" fill="rgb(234,99,35)"/><text x="49.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1396" width="3" height="15" fill="rgb(212,66,53)"/><text x="49.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.31%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(210,209,36)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(207,23,10)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(252,97,5)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(226,75,53)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(254,170,23)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(205,207,4)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.31%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(247,214,9)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(243,26,13)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(241,77,52)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(228,71,7)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(254,48,38)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(241,74,26)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.31%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(221,45,19)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(237,227,2)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(248,111,37)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(244,94,16)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(231,88,17)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(233,102,47)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.31%)</title><rect x="49" y="1396" width="4" height="15" fill="rgb(213,135,33)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1412" width="4" height="15" fill="rgb(210,100,7)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1428" width="4" height="15" fill="rgb(231,59,45)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1444" width="4" height="15" fill="rgb(226,171,42)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1460" width="4" height="15" fill="rgb(220,36,1)"/><text x="52.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(235,191,10)"/><text x="52.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(215,174,39)"/><text x="52.00" y="1502.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.31%)</title><rect x="53" y="1124" width="3" height="15" fill="rgb(247,27,47)"/><text x="56.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1140" width="3" height="15" fill="rgb(239,182,39)"/><text x="56.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1156" width="3" height="15" fill="rgb(232,46,41)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1172" width="3" height="15" fill="rgb(249,10,42)"/><text x="56.00" y="1182.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1188" width="3" height="15" fill="rgb(241,224,3)"/><text x="56.00" y="1198.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1204" width="3" height="15" fill="rgb(228,122,0)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="49" y="1028" width="11" height="15" fill="rgb(228,7,49)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="49" y="1044" width="11" height="15" fill="rgb(229,107,47)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="49" y="1060" width="11" height="15" fill="rgb(207,102,7)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="49" y="1076" width="11" height="15" fill="rgb(223,81,25)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="49" y="1092" width="11" height="15" fill="rgb(230,179,35)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.61%)</title><rect x="53" y="1108" width="7" height="15" fill="rgb(252,205,6)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1124" width="4" height="15" fill="rgb(206,4,21)"/><text x="59.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1140" width="4" height="15" fill="rgb(233,75,1)"/><text x="59.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1156" width="4" height="15" fill="rgb(212,189,1)"/><text x="59.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1172" width="4" height="15" fill="rgb(211,167,1)"/><text x="59.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1188" width="4" height="15" fill="rgb(234,226,8)"/><text x="59.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.31%)</title><rect x="56" y="1204" width="4" height="15" fill="rgb(208,206,8)"/><text x="59.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1220" width="4" height="15" fill="rgb(245,68,48)"/><text x="59.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1236" width="4" height="15" fill="rgb(223,226,42)"/><text x="59.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1252" width="4" height="15" fill="rgb(212,194,4)"/><text x="59.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1268" width="4" height="15" fill="rgb(214,69,52)"/><text x="59.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1284" width="4" height="15" fill="rgb(220,156,13)"/><text x="59.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.31%)</title><rect x="56" y="1300" width="4" height="15" fill="rgb(231,197,25)"/><text x="59.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1316" width="4" height="15" fill="rgb(223,115,51)"/><text x="59.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1332" width="4" height="15" fill="rgb(215,138,36)"/><text x="59.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1348" width="4" height="15" fill="rgb(212,0,46)"/><text x="59.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1364" width="4" height="15" fill="rgb(206,148,25)"/><text x="59.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1380" width="4" height="15" fill="rgb(249,208,42)"/><text x="59.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="56" y="1396" width="4" height="15" fill="rgb(241,189,2)"/><text x="59.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1412" width="4" height="15" fill="rgb(239,48,5)"/><text x="59.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1428" width="4" height="15" fill="rgb(237,98,28)"/><text x="59.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1444" width="4" height="15" fill="rgb(220,139,28)"/><text x="59.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1460" width="4" height="15" fill="rgb(208,205,43)"/><text x="59.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1476" width="4" height="15" fill="rgb(233,33,42)"/><text x="59.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.31%)</title><rect x="56" y="1492" width="4" height="15" fill="rgb(246,1,29)"/><text x="59.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1508" width="4" height="15" fill="rgb(234,212,29)"/><text x="59.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1524" width="4" height="15" fill="rgb(224,110,8)"/><text x="59.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1540" width="4" height="15" fill="rgb(239,19,31)"/><text x="59.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1556" width="4" height="15" fill="rgb(207,225,2)"/><text x="59.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1572" width="4" height="15" fill="rgb(213,90,27)"/><text x="59.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1588" width="4" height="15" fill="rgb(207,125,43)"/><text x="59.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1604" width="4" height="15" fill="rgb(248,109,51)"/><text x="59.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1620" width="4" height="15" fill="rgb(249,54,21)"/><text x="59.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="56" y="1636" width="4" height="15" fill="rgb(246,202,20)"/><text x="59.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1652" width="4" height="15" fill="rgb(243,190,50)"/><text x="59.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1668" width="4" height="15" fill="rgb(226,197,1)"/><text x="59.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1684" width="4" height="15" fill="rgb(251,225,38)"/><text x="59.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1700" width="4" height="15" fill="rgb(234,160,44)"/><text x="59.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1716" width="4" height="15" fill="rgb(226,66,28)"/><text x="59.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1732" width="4" height="15" fill="rgb(232,152,8)"/><text x="59.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1748" width="4" height="15" fill="rgb(235,114,12)"/><text x="59.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.31%)</title><rect x="56" y="1764" width="4" height="15" fill="rgb(244,88,34)"/><text x="59.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1780" width="4" height="15" fill="rgb(232,196,6)"/><text x="59.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1796" width="4" height="15" fill="rgb(226,108,36)"/><text x="59.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1812" width="4" height="15" fill="rgb(221,20,13)"/><text x="59.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1828" width="4" height="15" fill="rgb(218,173,3)"/><text x="59.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1844" width="4" height="15" fill="rgb(218,198,22)"/><text x="59.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.31%)</title><rect x="56" y="1860" width="4" height="15" fill="rgb(217,177,40)"/><text x="59.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1876" width="4" height="15" fill="rgb(241,51,48)"/><text x="59.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1892" width="4" height="15" fill="rgb(230,15,10)"/><text x="59.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1908" width="4" height="15" fill="rgb(210,25,2)"/><text x="59.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1924" width="4" height="15" fill="rgb(211,151,46)"/><text x="59.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1940" width="4" height="15" fill="rgb(251,189,50)"/><text x="59.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.31%)</title><rect x="56" y="1956" width="4" height="15" fill="rgb(227,227,11)"/><text x="59.00" y="1966.50"></text></g><g><title>Each (pyparsing.py) (1 samples, 0.31%)</title><rect x="56" y="1972" width="4" height="15" fill="rgb(245,117,38)"/><text x="59.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="68" width="54" height="15" fill="rgb(213,109,24)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="84" width="54" height="15" fill="rgb(239,181,2)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="100" width="54" height="15" fill="rgb(234,125,25)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.59%)</title><rect x="10" y="116" width="54" height="15" fill="rgb(226,26,42)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="132" width="54" height="15" fill="rgb(234,214,8)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (15 samples, 4.59%)</title><rect x="10" y="148" width="54" height="15" fill="rgb(245,175,39)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="164" width="54" height="15" fill="rgb(246,93,40)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.59%)</title><rect x="10" y="180" width="54" height="15" fill="rgb(220,216,39)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="196" width="29" height="15" fill="rgb(239,66,11)"/><text x="38.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.45%)</title><rect x="35" y="212" width="29" height="15" fill="rgb(225,34,1)"/><text x="38.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="228" width="29" height="15" fill="rgb(248,67,51)"/><text x="38.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.45%)</title><rect x="35" y="244" width="29" height="15" fill="rgb(219,52,15)"/><text x="38.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="260" width="29" height="15" fill="rgb(254,87,24)"/><text x="38.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="276" width="29" height="15" fill="rgb(242,160,53)"/><text x="38.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="292" width="29" height="15" fill="rgb(233,26,28)"/><text x="38.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.45%)</title><rect x="35" y="308" width="29" height="15" fill="rgb(234,31,28)"/><text x="38.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="324" width="29" height="15" fill="rgb(233,64,39)"/><text x="38.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.45%)</title><rect x="35" y="340" width="29" height="15" fill="rgb(221,65,0)"/><text x="38.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="356" width="29" height="15" fill="rgb(224,195,6)"/><text x="38.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="372" width="29" height="15" fill="rgb(215,6,1)"/><text x="38.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="388" width="29" height="15" fill="rgb(228,100,34)"/><text x="38.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.45%)</title><rect x="35" y="404" width="29" height="15" fill="rgb(251,220,34)"/><text x="38.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="420" width="29" height="15" fill="rgb(210,158,19)"/><text x="38.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.45%)</title><rect x="35" y="436" width="29" height="15" fill="rgb(239,46,33)"/><text x="38.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="452" width="29" height="15" fill="rgb(251,107,1)"/><text x="38.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.45%)</title><rect x="35" y="468" width="29" height="15" fill="rgb(213,95,40)"/><text x="38.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="484" width="18" height="15" fill="rgb(252,183,2)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="46" y="500" width="18" height="15" fill="rgb(229,142,9)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="516" width="18" height="15" fill="rgb(207,210,35)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.53%)</title><rect x="46" y="532" width="18" height="15" fill="rgb(237,70,42)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="548" width="18" height="15" fill="rgb(248,147,35)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="564" width="18" height="15" fill="rgb(226,88,44)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="580" width="18" height="15" fill="rgb(251,78,8)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="46" y="596" width="18" height="15" fill="rgb(241,12,43)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="612" width="18" height="15" fill="rgb(212,161,18)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.53%)</title><rect x="46" y="628" width="18" height="15" fill="rgb(206,164,25)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="644" width="18" height="15" fill="rgb(226,24,29)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="660" width="18" height="15" fill="rgb(224,147,9)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="676" width="18" height="15" fill="rgb(219,171,54)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="46" y="692" width="18" height="15" fill="rgb(236,2,43)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="46" y="708" width="18" height="15" fill="rgb(250,66,15)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.22%)</title><rect x="49" y="724" width="15" height="15" fill="rgb(235,125,48)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="740" width="15" height="15" fill="rgb(235,32,28)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="756" width="15" height="15" fill="rgb(246,19,9)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="772" width="15" height="15" fill="rgb(222,209,28)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.22%)</title><rect x="49" y="788" width="15" height="15" fill="rgb(210,106,26)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="804" width="15" height="15" fill="rgb(243,66,0)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.22%)</title><rect x="49" y="820" width="15" height="15" fill="rgb(207,192,9)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="836" width="15" height="15" fill="rgb(221,139,8)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="852" width="15" height="15" fill="rgb(224,127,51)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="868" width="15" height="15" fill="rgb(241,66,43)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.22%)</title><rect x="49" y="884" width="15" height="15" fill="rgb(246,202,41)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="900" width="15" height="15" fill="rgb(245,7,24)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.22%)</title><rect x="49" y="916" width="15" height="15" fill="rgb(208,77,54)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="932" width="15" height="15" fill="rgb(253,215,13)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="948" width="15" height="15" fill="rgb(208,163,15)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="964" width="15" height="15" fill="rgb(239,213,31)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.22%)</title><rect x="49" y="980" width="15" height="15" fill="rgb(224,203,5)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.22%)</title><rect x="49" y="996" width="15" height="15" fill="rgb(234,192,15)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.22%)</title><rect x="49" y="1012" width="15" height="15" fill="rgb(252,130,45)"/><text x="52.00" y="1022.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.31%)</title><rect x="60" y="1028" width="4" height="15" fill="rgb(242,221,46)"/><text x="63.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.31%)</title><rect x="60" y="1044" width="4" height="15" fill="rgb(219,95,23)"/><text x="63.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.31%)</title><rect x="60" y="1060" width="4" height="15" fill="rgb(224,32,12)"/><text x="63.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.31%)</title><rect x="60" y="1076" width="4" height="15" fill="rgb(211,113,23)"/><text x="63.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="60" y="1092" width="4" height="15" fill="rgb(209,57,7)"/><text x="63.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1108" width="4" height="15" fill="rgb(237,107,25)"/><text x="63.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1124" width="4" height="15" fill="rgb(233,219,0)"/><text x="63.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1140" width="4" height="15" fill="rgb(223,192,37)"/><text x="63.00" y="1150.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="64" y="68" width="3" height="15" fill="rgb(207,162,10)"/><text x="67.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="64" y="84" width="3" height="15" fill="rgb(248,102,30)"/><text x="67.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="64" y="100" width="3" height="15" fill="rgb(245,136,5)"/><text x="67.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="64" y="116" width="3" height="15" fill="rgb(236,188,12)"/><text x="67.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="64" y="132" width="3" height="15" fill="rgb(226,106,24)"/><text x="67.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="64" y="148" width="3" height="15" fill="rgb(207,32,25)"/><text x="67.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="64" y="164" width="3" height="15" fill="rgb(249,71,21)"/><text x="67.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.31%)</title><rect x="64" y="180" width="3" height="15" fill="rgb(242,190,46)"/><text x="67.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py) (1 samples, 0.31%)</title><rect x="64" y="196" width="3" height="15" fill="rgb(248,117,52)"/><text x="67.00" y="206.50"></text></g><g><title>0x7f268d0f5ff9 (?) (1 samples, 0.31%)</title><rect x="64" y="212" width="3" height="15" fill="rgb(252,1,17)"/><text x="67.00" y="222.50"></text></g><g><title>0x7f268d0f0ef6 (?) (1 samples, 0.31%)</title><rect x="64" y="228" width="3" height="15" fill="rgb(215,192,39)"/><text x="67.00" y="238.50"></text></g><g><title>0x7f268d0e5962 (?) (1 samples, 0.31%)</title><rect x="64" y="244" width="3" height="15" fill="rgb(211,33,29)"/><text x="67.00" y="254.50"></text></g><g><title>0x7f268d1197a7 (?) (1 samples, 0.31%)</title><rect x="64" y="260" width="3" height="15" fill="rgb(246,95,44)"/><text x="67.00" y="270.50"></text></g><g><title>0x7f268d119379 (?) (1 samples, 0.31%)</title><rect x="64" y="276" width="3" height="15" fill="rgb(240,110,37)"/><text x="67.00" y="286.50"></text></g><g><title>0x7f268d5778b8 (?) (1 samples, 0.31%)</title><rect x="64" y="292" width="3" height="15" fill="rgb(232,82,49)"/><text x="67.00" y="302.50"></text></g><g><title>0x7f268d575c7f (?) (1 samples, 0.31%)</title><rect x="64" y="308" width="3" height="15" fill="rgb(225,172,30)"/><text x="67.00" y="318.50"></text></g><g><title>0x7f268d58899c (?) (1 samples, 0.31%)</title><rect x="64" y="324" width="3" height="15" fill="rgb(212,105,47)"/><text x="67.00" y="334.50"></text></g><g><title>0x7f268d2a619e (?) (1 samples, 0.31%)</title><rect x="64" y="340" width="3" height="15" fill="rgb(227,139,49)"/><text x="67.00" y="350.50"></text></g><g><title>0x7f268d2a2ed7 (?) (1 samples, 0.31%)</title><rect x="64" y="356" width="3" height="15" fill="rgb(250,89,30)"/><text x="67.00" y="366.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="67" y="68" width="4" height="15" fill="rgb(213,109,35)"/><text x="70.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="67" y="84" width="4" height="15" fill="rgb(218,216,52)"/><text x="70.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="67" y="100" width="4" height="15" fill="rgb(207,79,25)"/><text x="70.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="67" y="116" width="4" height="15" fill="rgb(212,202,8)"/><text x="70.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="67" y="132" width="4" height="15" fill="rgb(218,129,34)"/><text x="70.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.31%)</title><rect x="67" y="148" width="4" height="15" fill="rgb(245,76,29)"/><text x="70.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.31%)</title><rect x="67" y="164" width="4" height="15" fill="rgb(216,209,53)"/><text x="70.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="67" y="180" width="4" height="15" fill="rgb(237,57,20)"/><text x="70.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.31%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(225,122,29)"/><text x="70.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="67" y="212" width="4" height="15" fill="rgb(211,162,46)"/><text x="70.00" y="222.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="67" y="228" width="4" height="15" fill="rgb(249,166,51)"/><text x="70.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="67" y="244" width="4" height="15" fill="rgb(223,9,52)"/><text x="70.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="67" y="260" width="4" height="15" fill="rgb(220,5,46)"/><text x="70.00" y="270.50"></text></g><g><title>update_wrapper (functools.py) (14 samples, 4.28%)</title><rect x="201" y="228" width="50" height="15" fill="rgb(213,86,38)"/><text x="204.00" y="238.50">updat..</text></g><g><title>delayed (joblib/parallel.py) (20 samples, 6.12%)</title><rect x="190" y="212" width="72" height="15" fill="rgb(221,224,52)"/><text x="193.00" y="222.50">delayed ..</text></g><g><title>wraps (functools.py) (3 samples, 0.92%)</title><rect x="251" y="228" width="11" height="15" fill="rgb(236,138,40)"/><text x="254.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (28 samples, 8.56%)</title><rect x="165" y="196" width="101" height="15" fill="rgb(226,17,8)"/><text x="168.00" y="206.50">&lt;genexpr&gt; (s..</text></g><g><title>delayed_function (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="262" y="212" width="4" height="15" fill="rgb(216,4,44)"/><text x="265.00" y="222.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="266" y="196" width="3" height="15" fill="rgb(245,4,16)"/><text x="269.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="266" y="212" width="3" height="15" fill="rgb(225,167,13)"/><text x="269.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="269" y="196" width="11" height="15" fill="rgb(220,102,37)"/><text x="272.00" y="206.50"></text></g><g><title>0x55a85e7c99c0 (?) (1 samples, 0.31%)</title><rect x="338" y="244" width="3" height="15" fill="rgb(223,212,48)"/><text x="341.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="338" y="260" width="3" height="15" fill="rgb(234,58,8)"/><text x="341.00" y="270.50"></text></g><g><title>0x7ffd97ca2a5e ([vdso]) (1 samples, 0.31%)</title><rect x="338" y="276" width="3" height="15" fill="rgb(219,53,6)"/><text x="341.00" y="286.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="341" y="244" width="4" height="15" fill="rgb(209,153,45)"/><text x="344.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="345" y="244" width="4" height="15" fill="rgb(215,141,38)"/><text x="348.00" y="254.50"></text></g><g><title>0x7ffd97ca2bb2 ([vdso]) (1 samples, 0.31%)</title><rect x="345" y="260" width="4" height="15" fill="rgb(221,8,7)"/><text x="348.00" y="270.50"></text></g><g><title>0x7ffd97ca2950 ([vdso]) (1 samples, 0.31%)</title><rect x="345" y="276" width="4" height="15" fill="rgb(247,143,47)"/><text x="348.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 3.06%)</title><rect x="320" y="228" width="36" height="15" fill="rgb(243,51,34)"/><text x="323.00" y="238.50">__c..</text></g><g><title>time_time (python3.7) (2 samples, 0.61%)</title><rect x="349" y="244" width="7" height="15" fill="rgb(243,34,20)"/><text x="352.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="352" y="260" width="4" height="15" fill="rgb(221,215,18)"/><text x="355.00" y="270.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="410" y="308" width="4" height="15" fill="rgb(230,28,26)"/><text x="413.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="414" y="308" width="3" height="15" fill="rgb(236,122,27)"/><text x="417.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="414" y="324" width="3" height="15" fill="rgb(221,99,42)"/><text x="417.00" y="334.50"></text></g><g><title>0x7f26cc319f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="414" y="340" width="3" height="15" fill="rgb(238,207,10)"/><text x="417.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.92%)</title><rect x="410" y="292" width="11" height="15" fill="rgb(234,226,40)"/><text x="413.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="417" y="308" width="4" height="15" fill="rgb(252,77,50)"/><text x="420.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.31%)</title><rect x="417" y="324" width="4" height="15" fill="rgb(230,188,25)"/><text x="420.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="421" y="292" width="3" height="15" fill="rgb(242,106,4)"/><text x="424.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="443" y="372" width="3" height="15" fill="rgb(254,73,30)"/><text x="446.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.31%)</title><rect x="443" y="388" width="3" height="15" fill="rgb(208,162,9)"/><text x="446.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="450" y="388" width="3" height="15" fill="rgb(228,175,35)"/><text x="453.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.31%)</title><rect x="450" y="404" width="3" height="15" fill="rgb(233,145,12)"/><text x="453.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="450" y="420" width="3" height="15" fill="rgb(209,10,44)"/><text x="453.00" y="430.50"></text></g><g><title>memcpy (libc-2.29.so) (2 samples, 0.61%)</title><rect x="453" y="388" width="8" height="15" fill="rgb(208,104,47)"/><text x="456.00" y="398.50"></text></g><g><title>0x7f26a6b2ad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.83%)</title><rect x="443" y="340" width="21" height="15" fill="rgb(218,40,42)"/><text x="446.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (6 samples, 1.83%)</title><rect x="443" y="356" width="21" height="15" fill="rgb(208,62,29)"/><text x="446.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (5 samples, 1.53%)</title><rect x="446" y="372" width="18" height="15" fill="rgb(253,105,10)"/><text x="449.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="461" y="388" width="3" height="15" fill="rgb(207,216,4)"/><text x="464.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="461" y="404" width="3" height="15" fill="rgb(221,27,16)"/><text x="464.00" y="414.50"></text></g><g><title>0x7f26a6b3af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.14%)</title><rect x="443" y="324" width="25" height="15" fill="rgb(247,191,19)"/><text x="446.00" y="334.50">0..</text></g><g><title>0x7f26a6b2ad7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="464" y="340" width="4" height="15" fill="rgb(248,22,20)"/><text x="467.00" y="350.50"></text></g><g><title>0x7f26a6b17be4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="464" y="356" width="4" height="15" fill="rgb(215,57,17)"/><text x="467.00" y="366.50"></text></g><g><title>0x7f26a6b49225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="468" y="356" width="3" height="15" fill="rgb(206,63,51)"/><text x="471.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.31%)</title><rect x="468" y="372" width="3" height="15" fill="rgb(239,163,7)"/><text x="471.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="468" y="388" width="3" height="15" fill="rgb(231,160,2)"/><text x="471.00" y="398.50"></text></g><g><title>0x7f26a6b2310c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="475" y="404" width="4" height="15" fill="rgb(252,75,50)"/><text x="478.00" y="414.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.31%)</title><rect x="486" y="452" width="3" height="15" fill="rgb(234,175,38)"/><text x="489.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="486" y="468" width="3" height="15" fill="rgb(229,98,15)"/><text x="489.00" y="478.50"></text></g><g><title>0x7f26a6b2dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.83%)</title><rect x="471" y="372" width="22" height="15" fill="rgb(223,208,9)"/><text x="474.00" y="382.50">0..</text></g><g><title>0x7f26a6b2d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.83%)</title><rect x="471" y="388" width="22" height="15" fill="rgb(244,216,25)"/><text x="474.00" y="398.50">0..</text></g><g><title>0x7f26a6b232fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.22%)</title><rect x="479" y="404" width="14" height="15" fill="rgb(239,57,17)"/><text x="482.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.22%)</title><rect x="479" y="420" width="14" height="15" fill="rgb(218,158,38)"/><text x="482.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.22%)</title><rect x="479" y="436" width="14" height="15" fill="rgb(245,42,44)"/><text x="482.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.31%)</title><rect x="489" y="452" width="4" height="15" fill="rgb(246,44,39)"/><text x="492.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.31%)</title><rect x="489" y="468" width="4" height="15" fill="rgb(216,62,48)"/><text x="492.00" y="478.50"></text></g><g><title>0x7f26a6b20f4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="493" y="388" width="4" height="15" fill="rgb(236,78,28)"/><text x="496.00" y="398.50"></text></g><g><title>0x7f26a6b492df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.45%)</title><rect x="471" y="356" width="29" height="15" fill="rgb(206,29,36)"/><text x="474.00" y="366.50">0x..</text></g><g><title>0x7f26a6b2de72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="493" y="372" width="7" height="15" fill="rgb(247,197,28)"/><text x="496.00" y="382.50"></text></g><g><title>0x7f26a6b212bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="497" y="388" width="3" height="15" fill="rgb(253,101,1)"/><text x="500.00" y="398.50"></text></g><g><title>0x7f26a6b20ae3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="497" y="404" width="3" height="15" fill="rgb(242,5,38)"/><text x="500.00" y="414.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="500" y="372" width="4" height="15" fill="rgb(247,92,17)"/><text x="503.00" y="382.50"></text></g><g><title>0x7f26a6b49364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="500" y="356" width="7" height="15" fill="rgb(224,54,33)"/><text x="503.00" y="366.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.31%)</title><rect x="504" y="372" width="3" height="15" fill="rgb(217,159,20)"/><text x="507.00" y="382.50"></text></g><g><title>0x7f26cd1d5134 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="507" y="372" width="4" height="15" fill="rgb(236,102,53)"/><text x="510.00" y="382.50"></text></g><g><title>0x7f26cd1d5151 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="511" y="372" width="4" height="15" fill="rgb(250,136,47)"/><text x="514.00" y="382.50"></text></g><g><title>0x7f26a6b49511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.92%)</title><rect x="507" y="356" width="11" height="15" fill="rgb(229,205,17)"/><text x="510.00" y="366.50"></text></g><g><title>0x7f26cd1d5d21 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="515" y="372" width="3" height="15" fill="rgb(229,126,19)"/><text x="518.00" y="382.50"></text></g><g><title>0x7f26a6b49592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="518" y="356" width="4" height="15" fill="rgb(226,0,33)"/><text x="521.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="518" y="372" width="4" height="15" fill="rgb(227,166,3)"/><text x="521.00" y="382.50"></text></g><g><title>0x7f26cd10d757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="518" y="388" width="4" height="15" fill="rgb(218,87,24)"/><text x="521.00" y="398.50"></text></g><g><title>0x7f26a6b49644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="522" y="356" width="4" height="15" fill="rgb(243,149,38)"/><text x="525.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="522" y="372" width="4" height="15" fill="rgb(237,59,19)"/><text x="525.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.61%)</title><rect x="529" y="436" width="7" height="15" fill="rgb(249,67,35)"/><text x="532.00" y="446.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.31%)</title><rect x="533" y="452" width="3" height="15" fill="rgb(243,90,54)"/><text x="536.00" y="462.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="533" y="468" width="3" height="15" fill="rgb(232,88,29)"/><text x="536.00" y="478.50"></text></g><g><title>0x7f26a6b21529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.22%)</title><rect x="526" y="372" width="14" height="15" fill="rgb(228,21,31)"/><text x="529.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.22%)</title><rect x="526" y="388" width="14" height="15" fill="rgb(225,78,2)"/><text x="529.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.22%)</title><rect x="526" y="404" width="14" height="15" fill="rgb(216,67,42)"/><text x="529.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (3 samples, 0.92%)</title><rect x="529" y="420" width="11" height="15" fill="rgb(245,17,49)"/><text x="532.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="536" y="436" width="4" height="15" fill="rgb(228,58,41)"/><text x="539.00" y="446.50"></text></g><g><title>0x7f26a6b4a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 6.42%)</title><rect x="468" y="340" width="76" height="15" fill="rgb(235,109,53)"/><text x="471.00" y="350.50">0x7f26a6..</text></g><g><title>0x7f26a6b49c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.53%)</title><rect x="526" y="356" width="18" height="15" fill="rgb(243,201,30)"/><text x="529.00" y="366.50"></text></g><g><title>0x7f26a6b215f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="540" y="372" width="4" height="15" fill="rgb(207,74,34)"/><text x="543.00" y="382.50"></text></g><g><title>0x7f26a6b212bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="540" y="388" width="4" height="15" fill="rgb(226,98,46)"/><text x="543.00" y="398.50"></text></g><g><title>0x7f26a6b20c73 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="540" y="404" width="4" height="15" fill="rgb(213,38,11)"/><text x="543.00" y="414.50"></text></g><g><title>0x7f26a6b1e4c7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(218,57,43)"/><text x="547.00" y="382.50"></text></g><g><title>0x7f26a6b3afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 7.03%)</title><rect x="468" y="324" width="83" height="15" fill="rgb(234,194,26)"/><text x="471.00" y="334.50">0x7f26a6b..</text></g><g><title>0x7f26a6b4a540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="544" y="340" width="7" height="15" fill="rgb(208,151,21)"/><text x="547.00" y="350.50"></text></g><g><title>0x7f26a6b1f2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="544" y="356" width="7" height="15" fill="rgb(226,208,26)"/><text x="547.00" y="366.50"></text></g><g><title>0x7f26a6b1e4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="547" y="372" width="4" height="15" fill="rgb(234,159,17)"/><text x="550.00" y="382.50"></text></g><g><title>0x7f26a6b3afa9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="551" y="324" width="3" height="15" fill="rgb(229,55,36)"/><text x="554.00" y="334.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="558" y="356" width="4" height="15" fill="rgb(234,73,2)"/><text x="561.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="558" y="372" width="4" height="15" fill="rgb(254,8,18)"/><text x="561.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="558" y="388" width="4" height="15" fill="rgb(233,150,25)"/><text x="561.00" y="398.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.31%)</title><rect x="562" y="356" width="3" height="15" fill="rgb(243,215,15)"/><text x="565.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="562" y="372" width="3" height="15" fill="rgb(238,67,18)"/><text x="565.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="562" y="388" width="3" height="15" fill="rgb(230,52,38)"/><text x="565.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="562" y="404" width="3" height="15" fill="rgb(224,53,29)"/><text x="565.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="562" y="420" width="3" height="15" fill="rgb(207,76,43)"/><text x="565.00" y="430.50"></text></g><g><title>0x7f26a6b3b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.22%)</title><rect x="554" y="324" width="15" height="15" fill="rgb(229,227,22)"/><text x="557.00" y="334.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.22%)</title><rect x="554" y="340" width="15" height="15" fill="rgb(230,73,0)"/><text x="557.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="565" y="356" width="4" height="15" fill="rgb(238,104,23)"/><text x="568.00" y="366.50"></text></g><g><title>0x7f26a6b3b13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="569" y="324" width="3" height="15" fill="rgb(245,100,33)"/><text x="572.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="569" y="340" width="3" height="15" fill="rgb(245,215,35)"/><text x="572.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(224,187,17)"/><text x="572.00" y="366.50"></text></g><g><title>0x7f26a6b3b30c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="572" y="324" width="4" height="15" fill="rgb(244,53,28)"/><text x="575.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.31%)</title><rect x="576" y="356" width="4" height="15" fill="rgb(207,97,44)"/><text x="579.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="583" y="388" width="4" height="15" fill="rgb(228,221,36)"/><text x="586.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="583" y="404" width="4" height="15" fill="rgb(231,161,32)"/><text x="586.00" y="414.50"></text></g><g><title>0x7f26a6b3bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 12.54%)</title><rect x="443" y="308" width="147" height="15" fill="rgb(233,167,13)"/><text x="446.00" y="318.50">0x7f26a6b3bd2e (sk..</text></g><g><title>0x7f26a6b3b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.22%)</title><rect x="576" y="324" width="14" height="15" fill="rgb(235,53,43)"/><text x="579.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.22%)</title><rect x="576" y="340" width="14" height="15" fill="rgb(223,48,10)"/><text x="579.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.92%)</title><rect x="580" y="356" width="10" height="15" fill="rgb(239,28,4)"/><text x="583.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.61%)</title><rect x="583" y="372" width="7" height="15" fill="rgb(207,192,10)"/><text x="586.00" y="382.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.31%)</title><rect x="587" y="388" width="3" height="15" fill="rgb(218,228,0)"/><text x="590.00" y="398.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (3 samples, 0.92%)</title><rect x="590" y="308" width="11" height="15" fill="rgb(219,8,26)"/><text x="593.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="598" y="324" width="3" height="15" fill="rgb(227,56,19)"/><text x="601.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.31%)</title><rect x="601" y="308" width="4" height="15" fill="rgb(253,40,29)"/><text x="604.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.31%)</title><rect x="601" y="324" width="4" height="15" fill="rgb(220,79,29)"/><text x="604.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.31%)</title><rect x="601" y="340" width="4" height="15" fill="rgb(230,136,38)"/><text x="604.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="601" y="356" width="4" height="15" fill="rgb(234,61,10)"/><text x="604.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="601" y="372" width="4" height="15" fill="rgb(223,77,53)"/><text x="604.00" y="382.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.31%)</title><rect x="605" y="324" width="4" height="15" fill="rgb(253,65,22)"/><text x="608.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="605" y="340" width="4" height="15" fill="rgb(214,98,44)"/><text x="608.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (2 samples, 0.61%)</title><rect x="612" y="356" width="7" height="15" fill="rgb(209,73,54)"/><text x="615.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="616" y="372" width="3" height="15" fill="rgb(224,49,54)"/><text x="619.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.31%)</title><rect x="616" y="388" width="3" height="15" fill="rgb(245,56,7)"/><text x="619.00" y="398.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.31%)</title><rect x="616" y="404" width="3" height="15" fill="rgb(246,189,9)"/><text x="619.00" y="414.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (2 samples, 0.61%)</title><rect x="619" y="356" width="8" height="15" fill="rgb(222,118,40)"/><text x="622.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.31%)</title><rect x="623" y="372" width="4" height="15" fill="rgb(218,207,35)"/><text x="626.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.92%)</title><rect x="627" y="356" width="10" height="15" fill="rgb(228,117,8)"/><text x="630.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.61%)</title><rect x="630" y="372" width="7" height="15" fill="rgb(245,76,27)"/><text x="633.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="634" y="388" width="3" height="15" fill="rgb(212,116,8)"/><text x="637.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="641" y="388" width="4" height="15" fill="rgb(236,212,53)"/><text x="644.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c) (12 samples, 3.67%)</title><rect x="605" y="308" width="43" height="15" fill="rgb(252,185,28)"/><text x="608.00" y="318.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.36%)</title><rect x="609" y="324" width="39" height="15" fill="rgb(227,101,20)"/><text x="612.00" y="334.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.36%)</title><rect x="609" y="340" width="39" height="15" fill="rgb(207,97,22)"/><text x="612.00" y="350.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.92%)</title><rect x="637" y="356" width="11" height="15" fill="rgb(231,89,29)"/><text x="640.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.61%)</title><rect x="641" y="372" width="7" height="15" fill="rgb(235,87,37)"/><text x="644.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="645" y="388" width="3" height="15" fill="rgb(213,83,3)"/><text x="648.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="645" y="404" width="3" height="15" fill="rgb(226,115,39)"/><text x="648.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="645" y="420" width="3" height="15" fill="rgb(231,201,23)"/><text x="648.00" y="430.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.92%)</title><rect x="648" y="324" width="11" height="15" fill="rgb(238,79,34)"/><text x="651.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.31%)</title><rect x="655" y="340" width="4" height="15" fill="rgb(238,92,0)"/><text x="658.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="655" y="356" width="4" height="15" fill="rgb(233,82,49)"/><text x="658.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="655" y="372" width="4" height="15" fill="rgb(208,48,52)"/><text x="658.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 1.53%)</title><rect x="648" y="308" width="18" height="15" fill="rgb(215,167,52)"/><text x="651.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.61%)</title><rect x="659" y="324" width="7" height="15" fill="rgb(240,211,39)"/><text x="662.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.31%)</title><rect x="663" y="340" width="3" height="15" fill="rgb(254,78,47)"/><text x="666.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.61%)</title><rect x="677" y="372" width="7" height="15" fill="rgb(226,17,38)"/><text x="680.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.61%)</title><rect x="677" y="388" width="7" height="15" fill="rgb(252,130,26)"/><text x="680.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.61%)</title><rect x="677" y="404" width="7" height="15" fill="rgb(254,108,0)"/><text x="680.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.61%)</title><rect x="677" y="420" width="7" height="15" fill="rgb(222,54,32)"/><text x="680.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.61%)</title><rect x="677" y="436" width="7" height="15" fill="rgb(238,68,32)"/><text x="680.00" y="446.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.31%)</title><rect x="684" y="388" width="4" height="15" fill="rgb(213,74,42)"/><text x="687.00" y="398.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.31%)</title><rect x="699" y="436" width="3" height="15" fill="rgb(206,184,43)"/><text x="702.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.53%)</title><rect x="692" y="420" width="18" height="15" fill="rgb(234,162,14)"/><text x="695.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.61%)</title><rect x="702" y="436" width="8" height="15" fill="rgb(229,189,25)"/><text x="705.00" y="446.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (2 samples, 0.61%)</title><rect x="702" y="452" width="8" height="15" fill="rgb(210,219,26)"/><text x="705.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.31%)</title><rect x="710" y="420" width="3" height="15" fill="rgb(208,114,42)"/><text x="713.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="710" y="436" width="3" height="15" fill="rgb(225,96,52)"/><text x="713.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="710" y="452" width="3" height="15" fill="rgb(232,18,5)"/><text x="713.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="710" y="468" width="3" height="15" fill="rgb(220,204,49)"/><text x="713.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.31%)</title><rect x="710" y="484" width="3" height="15" fill="rgb(248,68,9)"/><text x="713.00" y="494.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.31%)</title><rect x="713" y="420" width="4" height="15" fill="rgb(222,1,14)"/><text x="716.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="713" y="436" width="4" height="15" fill="rgb(225,143,25)"/><text x="716.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="713" y="452" width="4" height="15" fill="rgb(218,129,3)"/><text x="716.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.75%)</title><rect x="688" y="404" width="32" height="15" fill="rgb(238,160,42)"/><text x="691.00" y="414.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="717" y="420" width="3" height="15" fill="rgb(240,194,11)"/><text x="720.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.31%)</title><rect x="717" y="436" width="3" height="15" fill="rgb(213,201,50)"/><text x="720.00" y="446.50"></text></g><g><title>array_sum (methods.c) (16 samples, 4.89%)</title><rect x="666" y="308" width="58" height="15" fill="rgb(236,152,41)"/><text x="669.00" y="318.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (16 samples, 4.89%)</title><rect x="666" y="324" width="58" height="15" fill="rgb(226,129,38)"/><text x="669.00" y="334.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 4.59%)</title><rect x="670" y="340" width="54" height="15" fill="rgb(208,14,53)"/><text x="673.00" y="350.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 3.98%)</title><rect x="677" y="356" width="47" height="15" fill="rgb(246,25,5)"/><text x="680.00" y="366.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 3.36%)</title><rect x="684" y="372" width="40" height="15" fill="rgb(210,154,31)"/><text x="687.00" y="382.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.06%)</title><rect x="688" y="388" width="36" height="15" fill="rgb(224,159,50)"/><text x="691.00" y="398.50">PyU..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.31%)</title><rect x="720" y="404" width="4" height="15" fill="rgb(238,100,35)"/><text x="723.00" y="414.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.53%)</title><rect x="753" y="340" width="18" height="15" fill="rgb(212,85,7)"/><text x="756.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (17 samples, 5.20%)</title><rect x="724" y="324" width="61" height="15" fill="rgb(220,52,44)"/><text x="727.00" y="334.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.22%)</title><rect x="771" y="340" width="14" height="15" fill="rgb(246,50,26)"/><text x="774.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 5.50%)</title><rect x="724" y="308" width="65" height="15" fill="rgb(213,198,15)"/><text x="727.00" y="318.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="785" y="324" width="4" height="15" fill="rgb(238,58,22)"/><text x="788.00" y="334.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(224,34,53)"/><text x="796.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.61%)</title><rect x="796" y="388" width="7" height="15" fill="rgb(242,104,11)"/><text x="799.00" y="398.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="800" y="404" width="3" height="15" fill="rgb(218,36,37)"/><text x="803.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.22%)</title><rect x="796" y="340" width="15" height="15" fill="rgb(235,54,18)"/><text x="799.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.22%)</title><rect x="796" y="356" width="15" height="15" fill="rgb(213,102,9)"/><text x="799.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.22%)</title><rect x="796" y="372" width="15" height="15" fill="rgb(228,160,5)"/><text x="799.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.61%)</title><rect x="803" y="388" width="8" height="15" fill="rgb(213,22,22)"/><text x="806.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="811" y="340" width="3" height="15" fill="rgb(245,42,54)"/><text x="814.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (109 samples, 33.33%)</title><rect x="424" y="292" width="394" height="15" fill="rgb(233,149,34)"/><text x="427.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.45%)</title><rect x="789" y="308" width="29" height="15" fill="rgb(235,165,3)"/><text x="792.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.14%)</title><rect x="793" y="324" width="25" height="15" fill="rgb(252,9,50)"/><text x="796.00" y="334.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="814" y="340" width="4" height="15" fill="rgb(227,61,25)"/><text x="817.00" y="350.50"></text></g><g><title>0x7f26cd11814a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="814" y="356" width="4" height="15" fill="rgb(253,39,28)"/><text x="817.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.61%)</title><rect x="818" y="308" width="7" height="15" fill="rgb(215,99,32)"/><text x="821.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.61%)</title><rect x="818" y="324" width="7" height="15" fill="rgb(214,132,41)"/><text x="821.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="825" y="324" width="4" height="15" fill="rgb(246,62,27)"/><text x="828.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="825" y="340" width="4" height="15" fill="rgb(225,2,43)"/><text x="828.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.31%)</title><rect x="825" y="356" width="4" height="15" fill="rgb(234,129,32)"/><text x="828.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.31%)</title><rect x="825" y="372" width="4" height="15" fill="rgb(221,2,18)"/><text x="828.00" y="382.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="825" y="388" width="4" height="15" fill="rgb(240,22,54)"/><text x="828.00" y="398.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (2 samples, 0.61%)</title><rect x="829" y="324" width="7" height="15" fill="rgb(210,171,27)"/><text x="832.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="832" y="340" width="4" height="15" fill="rgb(206,142,41)"/><text x="835.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="832" y="356" width="4" height="15" fill="rgb(213,45,8)"/><text x="835.00" y="366.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="836" y="340" width="3" height="15" fill="rgb(242,144,13)"/><text x="839.00" y="350.50"></text></g><g><title>0x7f26cd0afa19 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="839" y="420" width="4" height="15" fill="rgb(250,76,35)"/><text x="842.00" y="430.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.31%)</title><rect x="839" y="436" width="4" height="15" fill="rgb(249,21,29)"/><text x="842.00" y="446.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.61%)</title><rect x="839" y="372" width="8" height="15" fill="rgb(218,163,33)"/><text x="842.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.61%)</title><rect x="839" y="388" width="8" height="15" fill="rgb(252,128,53)"/><text x="842.00" y="398.50"></text></g><g><title>0x7f26cd0af7a5 (libc-2.29.so) (2 samples, 0.61%)</title><rect x="839" y="404" width="8" height="15" fill="rgb(218,84,25)"/><text x="842.00" y="414.50"></text></g><g><title>0x7f26cd117d53 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="843" y="420" width="4" height="15" fill="rgb(225,90,19)"/><text x="846.00" y="430.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.31%)</title><rect x="847" y="372" width="3" height="15" fill="rgb(239,187,41)"/><text x="850.00" y="382.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.31%)</title><rect x="847" y="388" width="3" height="15" fill="rgb(211,161,12)"/><text x="850.00" y="398.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="854" y="404" width="4" height="15" fill="rgb(209,228,30)"/><text x="857.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="854" y="420" width="4" height="15" fill="rgb(217,197,30)"/><text x="857.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.92%)</title><rect x="850" y="388" width="11" height="15" fill="rgb(208,159,15)"/><text x="853.00" y="398.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="858" y="404" width="3" height="15" fill="rgb(243,41,29)"/><text x="861.00" y="414.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="858" y="420" width="3" height="15" fill="rgb(237,70,12)"/><text x="861.00" y="430.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (7 samples, 2.14%)</title><rect x="839" y="340" width="26" height="15" fill="rgb(231,65,9)"/><text x="842.00" y="350.50">P..</text></g><g><title>solve_may_share_memory (mem_overlap.c) (7 samples, 2.14%)</title><rect x="839" y="356" width="26" height="15" fill="rgb(242,1,40)"/><text x="842.00" y="366.50">s..</text></g><g><title>solve_diophantine (mem_overlap.c) (4 samples, 1.22%)</title><rect x="850" y="372" width="15" height="15" fill="rgb(207,127,14)"/><text x="853.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="861" y="388" width="4" height="15" fill="rgb(244,56,20)"/><text x="864.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (139 samples, 42.51%)</title><rect x="367" y="260" width="501" height="15" fill="rgb(238,216,33)"/><text x="370.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (136 samples, 41.59%)</title><rect x="378" y="276" width="490" height="15" fill="rgb(251,80,46)"/><text x="381.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.28%)</title><rect x="818" y="292" width="50" height="15" fill="rgb(235,82,24)"/><text x="821.00" y="302.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.67%)</title><rect x="825" y="308" width="43" height="15" fill="rgb(215,20,12)"/><text x="828.00" y="318.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 2.75%)</title><rect x="836" y="324" width="32" height="15" fill="rgb(222,168,34)"/><text x="839.00" y="334.50">ex..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="865" y="340" width="3" height="15" fill="rgb(232,170,42)"/><text x="868.00" y="350.50"></text></g><g><title>__enter__ (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="868" y="260" width="4" height="15" fill="rgb(240,177,44)"/><text x="871.00" y="270.50"></text></g><g><title>__exit__ (joblib/parallel.py) (6 samples, 1.83%)</title><rect x="872" y="260" width="22" height="15" fill="rgb(244,129,22)"/><text x="875.00" y="270.50">_..</text></g><g><title>unregister (joblib/parallel.py) (5 samples, 1.53%)</title><rect x="876" y="276" width="18" height="15" fill="rgb(225,74,49)"/><text x="879.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (166 samples, 50.76%)</title><rect x="320" y="212" width="599" height="15" fill="rgb(210,132,52)"/><text x="323.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (156 samples, 47.71%)</title><rect x="356" y="228" width="563" height="15" fill="rgb(242,66,31)"/><text x="359.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (156 samples, 47.71%)</title><rect x="356" y="244" width="563" height="15" fill="rgb(238,195,42)"/><text x="359.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (7 samples, 2.14%)</title><rect x="894" y="260" width="25" height="15" fill="rgb(208,147,32)"/><text x="897.00" y="270.50">_..</text></g><g><title>0x7f26cd10de7e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="915" y="276" width="4" height="15" fill="rgb(226,50,48)"/><text x="918.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (178 samples, 54.43%)</title><rect x="280" y="196" width="642" height="15" fill="rgb(224,51,1)"/><text x="283.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.31%)</title><rect x="919" y="212" width="3" height="15" fill="rgb(220,78,15)"/><text x="922.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="919" y="228" width="3" height="15" fill="rgb(242,144,19)"/><text x="922.00" y="238.50"></text></g><g><title>compute_batch_size (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="922" y="196" width="4" height="15" fill="rgb(206,8,6)"/><text x="925.00" y="206.50"></text></g><g><title>__exit__ (threading.py) (4 samples, 1.22%)</title><rect x="955" y="212" width="14" height="15" fill="rgb(239,39,53)"/><text x="958.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="966" y="228" width="3" height="15" fill="rgb(219,216,6)"/><text x="969.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="966" y="244" width="3" height="15" fill="rgb(246,7,13)"/><text x="969.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="966" y="260" width="3" height="15" fill="rgb(221,2,33)"/><text x="969.00" y="270.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.61%)</title><rect x="969" y="212" width="8" height="15" fill="rgb(231,140,17)"/><text x="972.00" y="222.50"></text></g><g><title>get (queue.py) (15 samples, 4.59%)</title><rect x="926" y="196" width="54" height="15" fill="rgb(231,99,35)"/><text x="929.00" y="206.50">get (..</text></g><g><title>notify (threading.py) (1 samples, 0.31%)</title><rect x="977" y="212" width="3" height="15" fill="rgb(217,102,28)"/><text x="980.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.83%)</title><rect x="998" y="212" width="22" height="15" fill="rgb(211,41,33)"/><text x="1001.00" y="222.50">_..</text></g><g><title>get_active_backend (joblib/parallel.py) (16 samples, 4.89%)</title><rect x="1020" y="212" width="58" height="15" fill="rgb(251,173,12)"/><text x="1023.00" y="222.50">get_ac..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.22%)</title><rect x="1063" y="228" width="15" height="15" fill="rgb(238,38,33)"/><text x="1066.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="1074" y="244" width="4" height="15" fill="rgb(251,1,8)"/><text x="1077.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="1078" y="212" width="7" height="15" fill="rgb(242,147,13)"/><text x="1081.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="1085" y="212" width="3" height="15" fill="rgb(214,165,8)"/><text x="1088.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (32 samples, 9.79%)</title><rect x="980" y="196" width="116" height="15" fill="rgb(246,211,29)"/><text x="983.00" y="206.50">get_nested_bac..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.61%)</title><rect x="1088" y="212" width="8" height="15" fill="rgb(219,198,3)"/><text x="1091.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.31%)</title><rect x="1114" y="212" width="3" height="15" fill="rgb(224,34,44)"/><text x="1117.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.31%)</title><rect x="1117" y="212" width="4" height="15" fill="rgb(240,163,23)"/><text x="1120.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (293 samples, 89.60%)</title><rect x="82" y="180" width="1057" height="15" fill="rgb(216,115,4)"/><text x="85.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (12 samples, 3.67%)</title><rect x="1096" y="196" width="43" height="15" fill="rgb(221,23,26)"/><text x="1099.00" y="206.50">put ..</text></g><g><title>notify (threading.py) (5 samples, 1.53%)</title><rect x="1121" y="212" width="18" height="15" fill="rgb(208,128,13)"/><text x="1124.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (3 samples, 0.92%)</title><rect x="1128" y="228" width="11" height="15" fill="rgb(225,68,53)"/><text x="1131.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="1135" y="244" width="4" height="15" fill="rgb(223,25,33)"/><text x="1138.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (300 samples, 91.74%)</title><rect x="71" y="164" width="1082" height="15" fill="rgb(232,198,20)"/><text x="74.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (4 samples, 1.22%)</title><rect x="1139" y="180" width="14" height="15" fill="rgb(214,88,15)"/><text x="1142.00" y="190.50"></text></g><g><title>get (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="1150" y="196" width="3" height="15" fill="rgb(226,136,4)"/><text x="1153.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.61%)</title><rect x="1153" y="164" width="8" height="15" fill="rgb(251,178,3)"/><text x="1156.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.31%)</title><rect x="1161" y="164" width="3" height="15" fill="rgb(232,228,44)"/><text x="1164.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="1161" y="180" width="3" height="15" fill="rgb(228,164,21)"/><text x="1164.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="1161" y="196" width="3" height="15" fill="rgb(210,13,37)"/><text x="1164.00" y="206.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.31%)</title><rect x="1161" y="212" width="3" height="15" fill="rgb(213,26,14)"/><text x="1164.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.31%)</title><rect x="1161" y="228" width="3" height="15" fill="rgb(217,139,43)"/><text x="1164.00" y="238.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (304 samples, 92.97%)</title><rect x="71" y="100" width="1097" height="15" fill="rgb(211,119,28)"/><text x="74.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (304 samples, 92.97%)</title><rect x="71" y="116" width="1097" height="15" fill="rgb(207,151,35)"/><text x="74.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (304 samples, 92.97%)</title><rect x="71" y="132" width="1097" height="15" fill="rgb(221,53,24)"/><text x="74.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (304 samples, 92.97%)</title><rect x="71" y="148" width="1097" height="15" fill="rgb(219,174,22)"/><text x="74.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="1164" y="164" width="4" height="15" fill="rgb(233,208,25)"/><text x="1167.00" y="174.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="1168" y="212" width="3" height="15" fill="rgb(247,23,22)"/><text x="1171.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1168" y="228" width="3" height="15" fill="rgb(218,1,38)"/><text x="1171.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1168" y="244" width="3" height="15" fill="rgb(214,217,33)"/><text x="1171.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1168" y="260" width="3" height="15" fill="rgb(248,142,54)"/><text x="1171.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1168" y="276" width="3" height="15" fill="rgb(236,93,26)"/><text x="1171.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.31%)</title><rect x="1168" y="292" width="3" height="15" fill="rgb(242,19,6)"/><text x="1171.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.31%)</title><rect x="1168" y="308" width="3" height="15" fill="rgb(238,214,12)"/><text x="1171.00" y="318.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (307 samples, 93.88%)</title><rect x="71" y="68" width="1108" height="15" fill="rgb(224,7,0)"/><text x="74.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (307 samples, 93.88%)</title><rect x="71" y="84" width="1108" height="15" fill="rgb(209,123,12)"/><text x="74.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.92%)</title><rect x="1168" y="100" width="11" height="15" fill="rgb(236,134,19)"/><text x="1171.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.92%)</title><rect x="1168" y="116" width="11" height="15" fill="rgb(238,95,48)"/><text x="1171.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.92%)</title><rect x="1168" y="132" width="11" height="15" fill="rgb(238,38,31)"/><text x="1171.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.92%)</title><rect x="1168" y="148" width="11" height="15" fill="rgb(205,14,3)"/><text x="1171.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.92%)</title><rect x="1168" y="164" width="11" height="15" fill="rgb(238,11,45)"/><text x="1171.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.92%)</title><rect x="1168" y="180" width="11" height="15" fill="rgb(252,181,32)"/><text x="1171.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (3 samples, 0.92%)</title><rect x="1168" y="196" width="11" height="15" fill="rgb(239,202,5)"/><text x="1171.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (2 samples, 0.61%)</title><rect x="1171" y="212" width="8" height="15" fill="rgb(205,177,49)"/><text x="1174.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(220,228,37)"/><text x="1178.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(205,166,10)"/><text x="1178.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src) (1 samples, 0.31%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(211,114,52)"/><text x="1178.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(229,108,13)"/><text x="1178.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.31%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(224,69,6)"/><text x="1178.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(217,19,38)"/><text x="1178.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="1175" y="324" width="4" height="15" fill="rgb(244,176,21)"/><text x="1178.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="1175" y="340" width="4" height="15" fill="rgb(243,79,28)"/><text x="1178.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.31%)</title><rect x="1175" y="356" width="4" height="15" fill="rgb(235,20,22)"/><text x="1178.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.31%)</title><rect x="1175" y="372" width="4" height="15" fill="rgb(223,171,18)"/><text x="1178.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.31%)</title><rect x="1175" y="388" width="4" height="15" fill="rgb(208,146,6)"/><text x="1178.00" y="398.50"></text></g><g><title>0x7f26cd10de7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1175" y="404" width="4" height="15" fill="rgb(254,196,28)"/><text x="1178.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="372" width="3" height="15" fill="rgb(223,133,49)"/><text x="1182.00" y="382.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="388" width="3" height="15" fill="rgb(212,50,23)"/><text x="1182.00" y="398.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="404" width="3" height="15" fill="rgb(206,172,26)"/><text x="1182.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="420" width="3" height="15" fill="rgb(209,90,52)"/><text x="1182.00" y="430.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="436" width="3" height="15" fill="rgb(233,60,32)"/><text x="1182.00" y="446.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="452" width="3" height="15" fill="rgb(235,138,5)"/><text x="1182.00" y="462.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="468" width="3" height="15" fill="rgb(252,112,16)"/><text x="1182.00" y="478.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="484" width="3" height="15" fill="rgb(242,34,11)"/><text x="1182.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="500" width="3" height="15" fill="rgb(246,167,7)"/><text x="1182.00" y="510.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="516" width="3" height="15" fill="rgb(211,123,40)"/><text x="1182.00" y="526.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="532" width="3" height="15" fill="rgb(248,218,50)"/><text x="1182.00" y="542.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c) (1 samples, 0.31%)</title><rect x="1179" y="548" width="3" height="15" fill="rgb(227,11,28)"/><text x="1182.00" y="558.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1179" y="564" width="3" height="15" fill="rgb(234,71,12)"/><text x="1182.00" y="574.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.31%)</title><rect x="1179" y="580" width="3" height="15" fill="rgb(230,139,46)"/><text x="1182.00" y="590.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="1179" y="596" width="3" height="15" fill="rgb(221,83,36)"/><text x="1182.00" y="606.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.31%)</title><rect x="1179" y="612" width="3" height="15" fill="rgb(243,19,4)"/><text x="1182.00" y="622.50"></text></g><g><title>PyArray_FromStructInterface (ctors.c) (1 samples, 0.31%)</title><rect x="1179" y="628" width="3" height="15" fill="rgb(221,71,28)"/><text x="1182.00" y="638.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.31%)</title><rect x="1179" y="644" width="3" height="15" fill="rgb(233,85,20)"/><text x="1182.00" y="654.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.31%)</title><rect x="1179" y="660" width="3" height="15" fill="rgb(250,118,46)"/><text x="1182.00" y="670.50"></text></g><g><title>UINT_setitem (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="1182" y="436" width="4" height="15" fill="rgb(223,144,48)"/><text x="1185.00" y="446.50"></text></g><g><title>MyPyLong_AsUnsignedLong (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="1182" y="452" width="4" height="15" fill="rgb(217,37,0)"/><text x="1185.00" y="462.50"></text></g><g><title>all (327 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,219,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (327 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,215,6)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py) (3 samples, 0.92%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(240,83,54)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (3 samples, 0.92%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(226,209,44)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.92%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(221,166,5)"/><text x="1182.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (3 samples, 0.92%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(214,70,35)"/><text x="1182.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(249,152,20)"/><text x="1182.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(206,201,35)"/><text x="1182.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(253,132,25)"/><text x="1182.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (3 samples, 0.92%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(221,204,39)"/><text x="1182.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.92%)</title><rect x="1179" y="196" width="11" height="15" fill="rgb(252,158,26)"/><text x="1182.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="1179" y="212" width="11" height="15" fill="rgb(236,23,13)"/><text x="1182.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 0.92%)</title><rect x="1179" y="228" width="11" height="15" fill="rgb(222,67,1)"/><text x="1182.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (3 samples, 0.92%)</title><rect x="1179" y="244" width="11" height="15" fill="rgb(250,6,49)"/><text x="1182.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (3 samples, 0.92%)</title><rect x="1179" y="260" width="11" height="15" fill="rgb(238,110,52)"/><text x="1182.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (3 samples, 0.92%)</title><rect x="1179" y="276" width="11" height="15" fill="rgb(217,178,54)"/><text x="1182.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (3 samples, 0.92%)</title><rect x="1179" y="292" width="11" height="15" fill="rgb(232,168,48)"/><text x="1182.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (3 samples, 0.92%)</title><rect x="1179" y="308" width="11" height="15" fill="rgb(210,174,11)"/><text x="1182.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (3 samples, 0.92%)</title><rect x="1179" y="324" width="11" height="15" fill="rgb(249,163,24)"/><text x="1182.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (3 samples, 0.92%)</title><rect x="1179" y="340" width="11" height="15" fill="rgb(207,36,33)"/><text x="1182.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (3 samples, 0.92%)</title><rect x="1179" y="356" width="11" height="15" fill="rgb(215,63,1)"/><text x="1182.00" y="366.50"></text></g><g><title>inner (contextlib.py) (2 samples, 0.61%)</title><rect x="1182" y="372" width="8" height="15" fill="rgb(207,4,10)"/><text x="1185.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.61%)</title><rect x="1182" y="388" width="8" height="15" fill="rgb(239,106,30)"/><text x="1185.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.61%)</title><rect x="1182" y="404" width="8" height="15" fill="rgb(235,29,26)"/><text x="1185.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.61%)</title><rect x="1182" y="420" width="8" height="15" fill="rgb(246,153,42)"/><text x="1185.00" y="430.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.31%)</title><rect x="1186" y="436" width="4" height="15" fill="rgb(237,84,54)"/><text x="1189.00" y="446.50"></text></g></g></svg>