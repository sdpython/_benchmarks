<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(224,198,39)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(220,51,41)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(225,24,7)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(215,168,4)"/><text x="13.00" y="926.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.38%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(209,183,44)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(253,91,10)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(252,25,47)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(214,19,37)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.38%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(216,168,47)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.38%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(235,189,5)"/><text x="17.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.38%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(233,91,24)"/><text x="17.00" y="1022.50"></text></g><g><title>unicode_compare (python3.7) (1 samples, 0.38%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(225,63,3)"/><text x="17.00" y="1038.50"></text></g><g><title>0x7ffb8fc17ee0 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="14" y="1044" width="5" height="15" fill="rgb(210,139,44)"/><text x="17.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.15%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(217,138,42)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.15%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(216,44,52)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.77%)</title><rect x="14" y="868" width="9" height="15" fill="rgb(216,68,11)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.77%)</title><rect x="14" y="884" width="9" height="15" fill="rgb(252,143,32)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.77%)</title><rect x="14" y="900" width="9" height="15" fill="rgb(211,134,27)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.77%)</title><rect x="14" y="916" width="9" height="15" fill="rgb(240,30,33)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(208,44,22)"/><text x="22.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.54%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(217,181,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(211,187,18)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(247,103,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(206,144,51)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.54%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(243,191,6)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(240,112,23)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.54%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(235,178,53)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(218,101,51)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(219,26,25)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(210,73,34)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.54%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(220,67,53)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(229,94,17)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.54%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(214,184,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(223,12,12)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(217,119,50)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(221,11,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.54%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(243,127,36)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(209,67,37)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.54%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(227,219,10)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(254,159,25)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(234,117,3)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(217,175,7)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(237,102,37)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(212,34,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(253,183,45)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.54%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(207,10,36)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(207,54,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.54%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(252,7,5)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(249,184,7)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(252,101,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(207,145,40)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.54%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(253,171,15)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.54%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(220,75,23)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.54%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(246,177,6)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="836" width="5" height="15" fill="rgb(219,162,32)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="852" width="5" height="15" fill="rgb(235,120,23)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="868" width="5" height="15" fill="rgb(218,35,18)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="23" y="884" width="5" height="15" fill="rgb(211,182,4)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="900" width="5" height="15" fill="rgb(242,7,30)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.38%)</title><rect x="23" y="916" width="5" height="15" fill="rgb(251,129,19)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="932" width="5" height="15" fill="rgb(215,97,36)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="948" width="5" height="15" fill="rgb(214,227,25)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="964" width="5" height="15" fill="rgb(242,126,52)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="23" y="980" width="5" height="15" fill="rgb(232,127,6)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="996" width="5" height="15" fill="rgb(243,92,0)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (dis.py) (1 samples, 0.38%)</title><rect x="23" y="1012" width="5" height="15" fill="rgb(217,27,53)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1028" width="5" height="15" fill="rgb(214,111,38)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1044" width="5" height="15" fill="rgb(232,95,51)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1060" width="5" height="15" fill="rgb(231,15,43)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="23" y="1076" width="5" height="15" fill="rgb(253,36,24)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1092" width="5" height="15" fill="rgb(232,79,6)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (opcode.py) (1 samples, 0.38%)</title><rect x="23" y="1108" width="5" height="15" fill="rgb(208,21,19)"/><text x="26.00" y="1118.50"></text></g><g><title>&lt;listcomp&gt; (opcode.py) (1 samples, 0.38%)</title><rect x="23" y="1124" width="5" height="15" fill="rgb(206,73,26)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="28" y="1012" width="4" height="15" fill="rgb(230,131,12)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.38%)</title><rect x="28" y="1028" width="4" height="15" fill="rgb(231,194,54)"/><text x="31.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="28" y="1044" width="4" height="15" fill="rgb(219,127,49)"/><text x="31.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="28" y="1060" width="4" height="15" fill="rgb(252,79,21)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.31%)</title><rect x="10" y="196" width="27" height="15" fill="rgb(207,177,36)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.31%)</title><rect x="10" y="212" width="27" height="15" fill="rgb(223,46,51)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.31%)</title><rect x="10" y="228" width="27" height="15" fill="rgb(226,140,31)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.31%)</title><rect x="10" y="244" width="27" height="15" fill="rgb(207,128,7)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.31%)</title><rect x="10" y="260" width="27" height="15" fill="rgb(254,3,39)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.31%)</title><rect x="10" y="276" width="27" height="15" fill="rgb(211,23,34)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.77%)</title><rect x="28" y="292" width="9" height="15" fill="rgb(239,95,5)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="308" width="9" height="15" fill="rgb(226,168,51)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="324" width="9" height="15" fill="rgb(218,190,0)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="340" width="9" height="15" fill="rgb(233,75,4)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="356" width="9" height="15" fill="rgb(237,86,45)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="372" width="9" height="15" fill="rgb(239,118,17)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.77%)</title><rect x="28" y="388" width="9" height="15" fill="rgb(241,202,35)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="404" width="9" height="15" fill="rgb(235,13,48)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="420" width="9" height="15" fill="rgb(216,167,6)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="436" width="9" height="15" fill="rgb(224,7,39)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="452" width="9" height="15" fill="rgb(221,152,16)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="468" width="9" height="15" fill="rgb(214,229,39)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.77%)</title><rect x="28" y="484" width="9" height="15" fill="rgb(215,212,52)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="500" width="9" height="15" fill="rgb(253,76,11)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="516" width="9" height="15" fill="rgb(239,220,3)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="532" width="9" height="15" fill="rgb(251,113,6)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="548" width="9" height="15" fill="rgb(238,85,37)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="564" width="9" height="15" fill="rgb(224,21,10)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.77%)</title><rect x="28" y="580" width="9" height="15" fill="rgb(252,73,46)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="596" width="9" height="15" fill="rgb(222,7,12)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="612" width="9" height="15" fill="rgb(227,154,54)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="628" width="9" height="15" fill="rgb(206,64,42)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="644" width="9" height="15" fill="rgb(213,46,44)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="660" width="9" height="15" fill="rgb(218,92,28)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.77%)</title><rect x="28" y="676" width="9" height="15" fill="rgb(211,158,6)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="692" width="9" height="15" fill="rgb(228,149,53)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="708" width="9" height="15" fill="rgb(214,173,22)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="724" width="9" height="15" fill="rgb(209,191,52)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="740" width="9" height="15" fill="rgb(205,10,39)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="756" width="9" height="15" fill="rgb(239,123,39)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.77%)</title><rect x="28" y="772" width="9" height="15" fill="rgb(214,90,44)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="788" width="9" height="15" fill="rgb(240,164,4)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="804" width="9" height="15" fill="rgb(224,41,32)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="820" width="9" height="15" fill="rgb(216,83,0)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="836" width="9" height="15" fill="rgb(242,117,41)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="852" width="9" height="15" fill="rgb(249,19,53)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="868" width="9" height="15" fill="rgb(205,120,0)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="884" width="9" height="15" fill="rgb(215,4,24)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.77%)</title><rect x="28" y="900" width="9" height="15" fill="rgb(254,55,36)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="916" width="9" height="15" fill="rgb(209,104,31)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="932" width="9" height="15" fill="rgb(221,65,19)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="948" width="9" height="15" fill="rgb(236,131,36)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="964" width="9" height="15" fill="rgb(227,168,28)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="28" y="980" width="9" height="15" fill="rgb(220,191,15)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="28" y="996" width="9" height="15" fill="rgb(235,63,30)"/><text x="31.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1012" width="5" height="15" fill="rgb(234,104,42)"/><text x="35.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1028" width="5" height="15" fill="rgb(239,183,29)"/><text x="35.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.38%)</title><rect x="37" y="1204" width="4" height="15" fill="rgb(221,194,42)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1220" width="4" height="15" fill="rgb(224,213,49)"/><text x="40.00" y="1230.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1236" width="4" height="15" fill="rgb(250,67,28)"/><text x="40.00" y="1246.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1252" width="4" height="15" fill="rgb(239,14,25)"/><text x="40.00" y="1262.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1268" width="4" height="15" fill="rgb(224,146,53)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="37" y="1124" width="9" height="15" fill="rgb(218,158,31)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="37" y="1140" width="9" height="15" fill="rgb(209,127,54)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="37" y="1156" width="9" height="15" fill="rgb(216,12,5)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="37" y="1172" width="9" height="15" fill="rgb(207,1,3)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="37" y="1188" width="9" height="15" fill="rgb(253,226,7)"/><text x="40.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.38%)</title><rect x="41" y="1204" width="5" height="15" fill="rgb(228,23,2)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="1220" width="5" height="15" fill="rgb(211,92,4)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="1236" width="5" height="15" fill="rgb(244,143,43)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="1252" width="5" height="15" fill="rgb(248,78,26)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="41" y="1268" width="5" height="15" fill="rgb(219,61,49)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="1284" width="5" height="15" fill="rgb(213,123,1)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="41" y="1300" width="5" height="15" fill="rgb(236,169,24)"/><text x="44.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="41" y="1316" width="5" height="15" fill="rgb(244,37,44)"/><text x="44.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.38%)</title><rect x="41" y="1332" width="5" height="15" fill="rgb(221,163,42)"/><text x="44.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.38%)</title><rect x="41" y="1348" width="5" height="15" fill="rgb(219,124,35)"/><text x="44.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.38%)</title><rect x="41" y="1364" width="5" height="15" fill="rgb(250,7,39)"/><text x="44.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.38%)</title><rect x="41" y="1380" width="5" height="15" fill="rgb(208,229,38)"/><text x="44.00" y="1390.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="46" y="1860" width="4" height="15" fill="rgb(234,117,46)"/><text x="49.00" y="1870.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="46" y="1876" width="4" height="15" fill="rgb(249,173,12)"/><text x="49.00" y="1886.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="46" y="1892" width="4" height="15" fill="rgb(231,206,0)"/><text x="49.00" y="1902.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="46" y="1908" width="4" height="15" fill="rgb(249,222,52)"/><text x="49.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="46" y="1476" width="9" height="15" fill="rgb(209,120,46)"/><text x="49.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="46" y="1492" width="9" height="15" fill="rgb(218,226,31)"/><text x="49.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="46" y="1508" width="9" height="15" fill="rgb(231,73,45)"/><text x="49.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="46" y="1524" width="9" height="15" fill="rgb(205,22,1)"/><text x="49.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="46" y="1540" width="9" height="15" fill="rgb(218,10,21)"/><text x="49.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.77%)</title><rect x="46" y="1556" width="9" height="15" fill="rgb(228,70,28)"/><text x="49.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py) (2 samples, 0.77%)</title><rect x="46" y="1572" width="9" height="15" fill="rgb(217,177,52)"/><text x="49.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.77%)</title><rect x="46" y="1588" width="9" height="15" fill="rgb(244,4,17)"/><text x="49.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.77%)</title><rect x="46" y="1604" width="9" height="15" fill="rgb(249,112,23)"/><text x="49.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.77%)</title><rect x="46" y="1620" width="9" height="15" fill="rgb(251,113,41)"/><text x="49.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (2 samples, 0.77%)</title><rect x="46" y="1636" width="9" height="15" fill="rgb(251,20,45)"/><text x="49.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1652" width="9" height="15" fill="rgb(241,20,47)"/><text x="49.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1668" width="9" height="15" fill="rgb(214,167,28)"/><text x="49.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1684" width="9" height="15" fill="rgb(205,224,7)"/><text x="49.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1700" width="9" height="15" fill="rgb(211,19,11)"/><text x="49.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1716" width="9" height="15" fill="rgb(245,6,3)"/><text x="49.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1732" width="9" height="15" fill="rgb(207,172,15)"/><text x="49.00" y="1742.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1748" width="9" height="15" fill="rgb(216,212,19)"/><text x="49.00" y="1758.50"></text></g><g><title>parse_expression (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1764" width="9" height="15" fill="rgb(231,137,41)"/><text x="49.00" y="1774.50"></text></g><g><title>parse_condexpr (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1780" width="9" height="15" fill="rgb(253,27,49)"/><text x="49.00" y="1790.50"></text></g><g><title>parse_or (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1796" width="9" height="15" fill="rgb(243,2,30)"/><text x="49.00" y="1806.50"></text></g><g><title>parse_and (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1812" width="9" height="15" fill="rgb(222,73,16)"/><text x="49.00" y="1822.50"></text></g><g><title>parse_not (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1828" width="9" height="15" fill="rgb(222,198,52)"/><text x="49.00" y="1838.50"></text></g><g><title>parse_compare (jinja2/parser.py) (2 samples, 0.77%)</title><rect x="46" y="1844" width="9" height="15" fill="rgb(244,80,54)"/><text x="49.00" y="1854.50"></text></g><g><title>test (jinja2/lexer.py) (1 samples, 0.38%)</title><rect x="50" y="1860" width="5" height="15" fill="rgb(238,131,31)"/><text x="53.00" y="1870.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.38%)</title><rect x="55" y="1508" width="4" height="15" fill="rgb(246,55,49)"/><text x="58.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.38%)</title><rect x="55" y="1524" width="4" height="15" fill="rgb(218,97,2)"/><text x="58.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="55" y="1540" width="4" height="15" fill="rgb(229,159,8)"/><text x="58.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.38%)</title><rect x="55" y="1556" width="4" height="15" fill="rgb(233,156,22)"/><text x="58.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.38%)</title><rect x="55" y="1572" width="4" height="15" fill="rgb(243,185,21)"/><text x="58.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="55" y="1588" width="4" height="15" fill="rgb(217,209,6)"/><text x="58.00" y="1598.50"></text></g><g><title>0x7ffb7fbf50e9 (?) (1 samples, 0.38%)</title><rect x="55" y="1604" width="4" height="15" fill="rgb(251,168,27)"/><text x="58.00" y="1614.50"></text></g><g><title>0x7ffb7fbf922e (?) (1 samples, 0.38%)</title><rect x="55" y="1620" width="4" height="15" fill="rgb(220,33,16)"/><text x="58.00" y="1630.50"></text></g><g><title>0x7ffb7fbf90e8 (?) (1 samples, 0.38%)</title><rect x="55" y="1636" width="4" height="15" fill="rgb(212,29,35)"/><text x="58.00" y="1646.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="59" y="1524" width="5" height="15" fill="rgb(226,186,20)"/><text x="62.00" y="1534.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="59" y="1540" width="5" height="15" fill="rgb(211,11,15)"/><text x="62.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="484" width="32" height="15" fill="rgb(228,69,43)"/><text x="40.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="500" width="32" height="15" fill="rgb(249,165,10)"/><text x="40.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="516" width="32" height="15" fill="rgb(242,44,5)"/><text x="40.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="532" width="32" height="15" fill="rgb(213,84,0)"/><text x="40.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="548" width="32" height="15" fill="rgb(252,20,39)"/><text x="40.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="564" width="32" height="15" fill="rgb(227,86,21)"/><text x="40.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 2.69%)</title><rect x="37" y="580" width="32" height="15" fill="rgb(207,98,22)"/><text x="40.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="596" width="32" height="15" fill="rgb(205,94,47)"/><text x="40.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="612" width="32" height="15" fill="rgb(248,178,9)"/><text x="40.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="628" width="32" height="15" fill="rgb(224,151,43)"/><text x="40.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="644" width="32" height="15" fill="rgb(211,137,7)"/><text x="40.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="660" width="32" height="15" fill="rgb(208,123,50)"/><text x="40.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 2.69%)</title><rect x="37" y="676" width="32" height="15" fill="rgb(236,105,37)"/><text x="40.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="692" width="32" height="15" fill="rgb(230,59,2)"/><text x="40.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="708" width="32" height="15" fill="rgb(252,52,28)"/><text x="40.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="724" width="32" height="15" fill="rgb(248,202,0)"/><text x="40.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="740" width="32" height="15" fill="rgb(218,59,35)"/><text x="40.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="756" width="32" height="15" fill="rgb(241,210,6)"/><text x="40.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 2.69%)</title><rect x="37" y="772" width="32" height="15" fill="rgb(225,15,36)"/><text x="40.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="788" width="32" height="15" fill="rgb(218,161,27)"/><text x="40.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="804" width="32" height="15" fill="rgb(205,111,31)"/><text x="40.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="820" width="32" height="15" fill="rgb(230,94,52)"/><text x="40.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="836" width="32" height="15" fill="rgb(222,101,52)"/><text x="40.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="852" width="32" height="15" fill="rgb(243,202,36)"/><text x="40.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 2.69%)</title><rect x="37" y="868" width="32" height="15" fill="rgb(247,72,27)"/><text x="40.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="884" width="32" height="15" fill="rgb(228,113,34)"/><text x="40.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="900" width="32" height="15" fill="rgb(246,4,11)"/><text x="40.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="916" width="32" height="15" fill="rgb(231,226,8)"/><text x="40.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="932" width="32" height="15" fill="rgb(241,18,29)"/><text x="40.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="948" width="32" height="15" fill="rgb(246,195,15)"/><text x="40.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="964" width="32" height="15" fill="rgb(216,83,35)"/><text x="40.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="980" width="32" height="15" fill="rgb(230,139,48)"/><text x="40.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="996" width="32" height="15" fill="rgb(249,75,15)"/><text x="40.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 2.69%)</title><rect x="37" y="1012" width="32" height="15" fill="rgb(254,89,47)"/><text x="40.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="1028" width="32" height="15" fill="rgb(249,190,25)"/><text x="40.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="1044" width="32" height="15" fill="rgb(206,120,54)"/><text x="40.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="1060" width="32" height="15" fill="rgb(219,145,14)"/><text x="40.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.69%)</title><rect x="37" y="1076" width="32" height="15" fill="rgb(238,20,46)"/><text x="40.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.69%)</title><rect x="37" y="1092" width="32" height="15" fill="rgb(246,78,48)"/><text x="40.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 2.69%)</title><rect x="37" y="1108" width="32" height="15" fill="rgb(225,94,13)"/><text x="40.00" y="1118.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1124" width="23" height="15" fill="rgb(240,126,45)"/><text x="49.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1140" width="23" height="15" fill="rgb(250,50,44)"/><text x="49.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1156" width="23" height="15" fill="rgb(208,2,20)"/><text x="49.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1172" width="23" height="15" fill="rgb(253,89,11)"/><text x="49.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1188" width="23" height="15" fill="rgb(239,120,5)"/><text x="49.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.92%)</title><rect x="46" y="1204" width="23" height="15" fill="rgb(230,16,7)"/><text x="49.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1220" width="23" height="15" fill="rgb(213,122,15)"/><text x="49.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.92%)</title><rect x="46" y="1236" width="23" height="15" fill="rgb(211,47,2)"/><text x="49.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1252" width="23" height="15" fill="rgb(248,205,16)"/><text x="49.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1268" width="23" height="15" fill="rgb(242,216,17)"/><text x="49.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1284" width="23" height="15" fill="rgb(242,52,23)"/><text x="49.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1300" width="23" height="15" fill="rgb(252,206,6)"/><text x="49.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1316" width="23" height="15" fill="rgb(228,110,46)"/><text x="49.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.92%)</title><rect x="46" y="1332" width="23" height="15" fill="rgb(236,94,12)"/><text x="49.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1348" width="23" height="15" fill="rgb(216,76,54)"/><text x="49.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.92%)</title><rect x="46" y="1364" width="23" height="15" fill="rgb(222,5,32)"/><text x="49.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1380" width="23" height="15" fill="rgb(243,170,9)"/><text x="49.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1396" width="23" height="15" fill="rgb(251,103,14)"/><text x="49.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1412" width="23" height="15" fill="rgb(229,98,46)"/><text x="49.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.92%)</title><rect x="46" y="1428" width="23" height="15" fill="rgb(250,174,34)"/><text x="49.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.92%)</title><rect x="46" y="1444" width="23" height="15" fill="rgb(240,192,13)"/><text x="49.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.92%)</title><rect x="46" y="1460" width="23" height="15" fill="rgb(238,101,53)"/><text x="49.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.15%)</title><rect x="55" y="1476" width="14" height="15" fill="rgb(211,32,41)"/><text x="58.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.15%)</title><rect x="55" y="1492" width="14" height="15" fill="rgb(227,183,48)"/><text x="58.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="59" y="1508" width="10" height="15" fill="rgb(237,0,18)"/><text x="62.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="64" y="1524" width="5" height="15" fill="rgb(241,7,9)"/><text x="67.00" y="1534.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="64" y="1540" width="5" height="15" fill="rgb(250,110,4)"/><text x="67.00" y="1550.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="64" y="1556" width="5" height="15" fill="rgb(208,163,6)"/><text x="67.00" y="1566.50"></text></g><g><title>pybind11::detail::keep_alive_impl (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="64" y="1572" width="5" height="15" fill="rgb(237,91,4)"/><text x="67.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.38%)</title><rect x="69" y="724" width="4" height="15" fill="rgb(236,68,48)"/><text x="72.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="740" width="4" height="15" fill="rgb(224,158,3)"/><text x="72.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="756" width="4" height="15" fill="rgb(250,99,12)"/><text x="72.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="772" width="4" height="15" fill="rgb(243,97,12)"/><text x="72.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="788" width="4" height="15" fill="rgb(212,157,39)"/><text x="72.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="804" width="4" height="15" fill="rgb(246,97,14)"/><text x="72.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.38%)</title><rect x="69" y="820" width="4" height="15" fill="rgb(237,223,0)"/><text x="72.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="836" width="4" height="15" fill="rgb(249,162,49)"/><text x="72.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="852" width="4" height="15" fill="rgb(254,126,25)"/><text x="72.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="868" width="4" height="15" fill="rgb(218,101,29)"/><text x="72.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="884" width="4" height="15" fill="rgb(230,62,48)"/><text x="72.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="900" width="4" height="15" fill="rgb(244,101,35)"/><text x="72.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.38%)</title><rect x="69" y="916" width="4" height="15" fill="rgb(239,188,10)"/><text x="72.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="932" width="4" height="15" fill="rgb(218,70,1)"/><text x="72.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="948" width="4" height="15" fill="rgb(248,80,3)"/><text x="72.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="964" width="4" height="15" fill="rgb(238,80,43)"/><text x="72.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="980" width="4" height="15" fill="rgb(241,134,15)"/><text x="72.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="996" width="4" height="15" fill="rgb(249,33,3)"/><text x="72.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.38%)</title><rect x="69" y="1012" width="4" height="15" fill="rgb(233,214,19)"/><text x="72.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="1028" width="4" height="15" fill="rgb(210,139,44)"/><text x="72.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="1044" width="4" height="15" fill="rgb(238,71,32)"/><text x="72.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="69" y="1060" width="4" height="15" fill="rgb(230,35,5)"/><text x="72.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="1076" width="4" height="15" fill="rgb(253,100,48)"/><text x="72.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="1092" width="4" height="15" fill="rgb(247,175,2)"/><text x="72.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="69" y="1108" width="4" height="15" fill="rgb(218,69,39)"/><text x="72.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 3.46%)</title><rect x="37" y="340" width="41" height="15" fill="rgb(206,177,8)"/><text x="40.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="356" width="41" height="15" fill="rgb(207,116,19)"/><text x="40.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="372" width="41" height="15" fill="rgb(214,212,18)"/><text x="40.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="388" width="41" height="15" fill="rgb(215,13,38)"/><text x="40.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.46%)</title><rect x="37" y="404" width="41" height="15" fill="rgb(246,200,48)"/><text x="40.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="420" width="41" height="15" fill="rgb(244,83,8)"/><text x="40.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 3.46%)</title><rect x="37" y="436" width="41" height="15" fill="rgb(207,223,11)"/><text x="40.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="452" width="41" height="15" fill="rgb(242,193,41)"/><text x="40.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.46%)</title><rect x="37" y="468" width="41" height="15" fill="rgb(249,63,37)"/><text x="40.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="484" width="9" height="15" fill="rgb(244,7,51)"/><text x="72.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="69" y="500" width="9" height="15" fill="rgb(222,149,27)"/><text x="72.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="516" width="9" height="15" fill="rgb(222,142,6)"/><text x="72.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.77%)</title><rect x="69" y="532" width="9" height="15" fill="rgb(223,74,29)"/><text x="72.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="548" width="9" height="15" fill="rgb(250,224,40)"/><text x="72.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="564" width="9" height="15" fill="rgb(224,69,0)"/><text x="72.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="580" width="9" height="15" fill="rgb(215,128,33)"/><text x="72.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="69" y="596" width="9" height="15" fill="rgb(222,208,31)"/><text x="72.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="612" width="9" height="15" fill="rgb(216,90,30)"/><text x="72.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.77%)</title><rect x="69" y="628" width="9" height="15" fill="rgb(219,61,27)"/><text x="72.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="644" width="9" height="15" fill="rgb(253,117,0)"/><text x="72.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="660" width="9" height="15" fill="rgb(252,124,2)"/><text x="72.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="676" width="9" height="15" fill="rgb(222,36,39)"/><text x="72.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="69" y="692" width="9" height="15" fill="rgb(247,131,10)"/><text x="72.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="69" y="708" width="9" height="15" fill="rgb(228,132,25)"/><text x="72.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.38%)</title><rect x="73" y="724" width="5" height="15" fill="rgb(229,138,20)"/><text x="76.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="740" width="5" height="15" fill="rgb(231,166,39)"/><text x="76.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="756" width="5" height="15" fill="rgb(249,169,37)"/><text x="76.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="772" width="5" height="15" fill="rgb(245,113,44)"/><text x="76.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="73" y="788" width="5" height="15" fill="rgb(207,214,13)"/><text x="76.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="804" width="5" height="15" fill="rgb(232,217,49)"/><text x="76.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.38%)</title><rect x="73" y="820" width="5" height="15" fill="rgb(234,171,0)"/><text x="76.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="836" width="5" height="15" fill="rgb(205,112,28)"/><text x="76.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="852" width="5" height="15" fill="rgb(241,195,8)"/><text x="76.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="868" width="5" height="15" fill="rgb(227,127,15)"/><text x="76.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="73" y="884" width="5" height="15" fill="rgb(224,40,9)"/><text x="76.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="900" width="5" height="15" fill="rgb(238,1,28)"/><text x="76.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (1 samples, 0.38%)</title><rect x="73" y="916" width="5" height="15" fill="rgb(222,24,41)"/><text x="76.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="932" width="5" height="15" fill="rgb(209,155,30)"/><text x="76.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="948" width="5" height="15" fill="rgb(213,212,34)"/><text x="76.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="964" width="5" height="15" fill="rgb(217,222,32)"/><text x="76.00" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="980" width="5" height="15" fill="rgb(225,116,28)"/><text x="76.00" y="990.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="996" width="5" height="15" fill="rgb(217,209,18)"/><text x="76.00" y="1006.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="73" y="1012" width="5" height="15" fill="rgb(251,186,38)"/><text x="76.00" y="1022.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="73" y="1028" width="5" height="15" fill="rgb(234,207,46)"/><text x="76.00" y="1038.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="73" y="1044" width="5" height="15" fill="rgb(217,18,16)"/><text x="76.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.38%)</title><rect x="78" y="580" width="4" height="15" fill="rgb(240,177,42)"/><text x="81.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="596" width="4" height="15" fill="rgb(216,7,35)"/><text x="81.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="612" width="4" height="15" fill="rgb(215,201,8)"/><text x="81.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="628" width="4" height="15" fill="rgb(218,173,32)"/><text x="81.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="644" width="4" height="15" fill="rgb(251,157,40)"/><text x="81.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="660" width="4" height="15" fill="rgb(222,28,22)"/><text x="81.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="676" width="4" height="15" fill="rgb(249,107,0)"/><text x="81.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="78" y="692" width="4" height="15" fill="rgb(248,43,14)"/><text x="81.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="708" width="4" height="15" fill="rgb(220,27,10)"/><text x="81.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.38%)</title><rect x="78" y="724" width="4" height="15" fill="rgb(235,145,51)"/><text x="81.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="740" width="4" height="15" fill="rgb(236,206,13)"/><text x="81.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="756" width="4" height="15" fill="rgb(235,117,53)"/><text x="81.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="78" y="772" width="4" height="15" fill="rgb(240,109,30)"/><text x="81.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="78" y="788" width="4" height="15" fill="rgb(241,135,50)"/><text x="81.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="78" y="804" width="4" height="15" fill="rgb(206,186,5)"/><text x="81.00" y="814.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="78" y="820" width="4" height="15" fill="rgb(213,25,14)"/><text x="81.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 4.23%)</title><rect x="37" y="244" width="50" height="15" fill="rgb(220,107,1)"/><text x="40.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.23%)</title><rect x="37" y="260" width="50" height="15" fill="rgb(237,112,2)"/><text x="40.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.23%)</title><rect x="37" y="276" width="50" height="15" fill="rgb(244,220,18)"/><text x="40.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.23%)</title><rect x="37" y="292" width="50" height="15" fill="rgb(240,115,36)"/><text x="40.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.23%)</title><rect x="37" y="308" width="50" height="15" fill="rgb(223,7,1)"/><text x="40.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.23%)</title><rect x="37" y="324" width="50" height="15" fill="rgb(221,39,3)"/><text x="40.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.77%)</title><rect x="78" y="340" width="9" height="15" fill="rgb(245,61,17)"/><text x="81.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="356" width="9" height="15" fill="rgb(232,115,17)"/><text x="81.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="372" width="9" height="15" fill="rgb(235,76,15)"/><text x="81.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="388" width="9" height="15" fill="rgb(226,198,24)"/><text x="81.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="404" width="9" height="15" fill="rgb(220,139,49)"/><text x="81.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="420" width="9" height="15" fill="rgb(208,107,51)"/><text x="81.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="436" width="9" height="15" fill="rgb(248,111,14)"/><text x="81.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="78" y="452" width="9" height="15" fill="rgb(235,49,51)"/><text x="81.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="468" width="9" height="15" fill="rgb(240,6,20)"/><text x="81.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.77%)</title><rect x="78" y="484" width="9" height="15" fill="rgb(250,52,10)"/><text x="81.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="500" width="9" height="15" fill="rgb(216,217,34)"/><text x="81.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="516" width="9" height="15" fill="rgb(226,97,16)"/><text x="81.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="532" width="9" height="15" fill="rgb(226,216,9)"/><text x="81.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.77%)</title><rect x="78" y="548" width="9" height="15" fill="rgb(251,105,4)"/><text x="81.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="78" y="564" width="9" height="15" fill="rgb(206,151,10)"/><text x="81.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.38%)</title><rect x="82" y="580" width="5" height="15" fill="rgb(241,108,5)"/><text x="85.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="596" width="5" height="15" fill="rgb(234,100,47)"/><text x="85.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="612" width="5" height="15" fill="rgb(251,87,37)"/><text x="85.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="628" width="5" height="15" fill="rgb(253,106,44)"/><text x="85.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="644" width="5" height="15" fill="rgb(222,52,18)"/><text x="85.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="660" width="5" height="15" fill="rgb(245,65,24)"/><text x="85.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.38%)</title><rect x="82" y="676" width="5" height="15" fill="rgb(229,135,52)"/><text x="85.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="692" width="5" height="15" fill="rgb(216,10,47)"/><text x="85.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="708" width="5" height="15" fill="rgb(222,108,8)"/><text x="85.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="724" width="5" height="15" fill="rgb(251,15,25)"/><text x="85.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="740" width="5" height="15" fill="rgb(234,148,35)"/><text x="85.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="756" width="5" height="15" fill="rgb(248,118,51)"/><text x="85.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.38%)</title><rect x="82" y="772" width="5" height="15" fill="rgb(212,136,17)"/><text x="85.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="788" width="5" height="15" fill="rgb(249,159,30)"/><text x="85.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="804" width="5" height="15" fill="rgb(250,128,11)"/><text x="85.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="820" width="5" height="15" fill="rgb(250,138,45)"/><text x="85.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="836" width="5" height="15" fill="rgb(229,32,5)"/><text x="85.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="852" width="5" height="15" fill="rgb(248,49,21)"/><text x="85.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="868" width="5" height="15" fill="rgb(208,146,37)"/><text x="85.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="884" width="5" height="15" fill="rgb(242,80,27)"/><text x="85.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.38%)</title><rect x="82" y="900" width="5" height="15" fill="rgb(216,49,10)"/><text x="85.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="916" width="5" height="15" fill="rgb(245,161,52)"/><text x="85.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="932" width="5" height="15" fill="rgb(234,150,9)"/><text x="85.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="948" width="5" height="15" fill="rgb(208,101,11)"/><text x="85.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="964" width="5" height="15" fill="rgb(233,25,48)"/><text x="85.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="980" width="5" height="15" fill="rgb(208,91,26)"/><text x="85.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.38%)</title><rect x="82" y="996" width="5" height="15" fill="rgb(211,55,1)"/><text x="85.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1012" width="5" height="15" fill="rgb(222,139,14)"/><text x="85.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1028" width="5" height="15" fill="rgb(235,124,23)"/><text x="85.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1044" width="5" height="15" fill="rgb(219,192,15)"/><text x="85.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="1060" width="5" height="15" fill="rgb(250,222,20)"/><text x="85.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1076" width="5" height="15" fill="rgb(243,192,51)"/><text x="85.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.38%)</title><rect x="82" y="1092" width="5" height="15" fill="rgb(216,118,3)"/><text x="85.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1108" width="5" height="15" fill="rgb(211,91,37)"/><text x="85.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1124" width="5" height="15" fill="rgb(233,122,45)"/><text x="85.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1140" width="5" height="15" fill="rgb(254,26,14)"/><text x="85.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="1156" width="5" height="15" fill="rgb(222,193,35)"/><text x="85.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="1172" width="5" height="15" fill="rgb(245,119,42)"/><text x="85.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py) (1 samples, 0.38%)</title><rect x="82" y="1188" width="5" height="15" fill="rgb(224,221,0)"/><text x="85.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.38%)</title><rect x="82" y="1204" width="5" height="15" fill="rgb(207,96,43)"/><text x="85.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.38%)</title><rect x="82" y="1220" width="5" height="15" fill="rgb(242,192,42)"/><text x="85.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="68" width="81" height="15" fill="rgb(243,109,7)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="84" width="81" height="15" fill="rgb(206,76,20)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="100" width="81" height="15" fill="rgb(213,59,14)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 6.92%)</title><rect x="10" y="116" width="81" height="15" fill="rgb(250,102,7)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="132" width="81" height="15" fill="rgb(224,147,13)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py) (18 samples, 6.92%)</title><rect x="10" y="148" width="81" height="15" fill="rgb(224,221,14)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="164" width="81" height="15" fill="rgb(205,103,52)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.92%)</title><rect x="10" y="180" width="81" height="15" fill="rgb(234,140,9)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.62%)</title><rect x="37" y="196" width="54" height="15" fill="rgb(221,163,5)"/><text x="40.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.62%)</title><rect x="37" y="212" width="54" height="15" fill="rgb(213,87,7)"/><text x="40.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.62%)</title><rect x="37" y="228" width="54" height="15" fill="rgb(252,97,23)"/><text x="40.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (1 samples, 0.38%)</title><rect x="87" y="244" width="4" height="15" fill="rgb(213,24,19)"/><text x="90.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="260" width="4" height="15" fill="rgb(248,112,20)"/><text x="90.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="276" width="4" height="15" fill="rgb(219,82,30)"/><text x="90.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="292" width="4" height="15" fill="rgb(227,180,53)"/><text x="90.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="308" width="4" height="15" fill="rgb(247,13,38)"/><text x="90.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="324" width="4" height="15" fill="rgb(249,59,10)"/><text x="90.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (1 samples, 0.38%)</title><rect x="87" y="340" width="4" height="15" fill="rgb(236,61,47)"/><text x="90.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="356" width="4" height="15" fill="rgb(212,156,40)"/><text x="90.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="372" width="4" height="15" fill="rgb(218,226,44)"/><text x="90.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="388" width="4" height="15" fill="rgb(216,69,7)"/><text x="90.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="404" width="4" height="15" fill="rgb(218,54,6)"/><text x="90.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="420" width="4" height="15" fill="rgb(212,21,33)"/><text x="90.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="436" width="4" height="15" fill="rgb(221,134,12)"/><text x="90.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="452" width="4" height="15" fill="rgb(235,3,18)"/><text x="90.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="468" width="4" height="15" fill="rgb(242,63,12)"/><text x="90.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.38%)</title><rect x="87" y="484" width="4" height="15" fill="rgb(229,29,11)"/><text x="90.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="500" width="4" height="15" fill="rgb(215,54,13)"/><text x="90.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="516" width="4" height="15" fill="rgb(243,41,54)"/><text x="90.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="87" y="532" width="4" height="15" fill="rgb(241,212,30)"/><text x="90.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="548" width="4" height="15" fill="rgb(223,194,39)"/><text x="90.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="564" width="4" height="15" fill="rgb(237,116,32)"/><text x="90.00" y="574.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="580" width="4" height="15" fill="rgb(235,221,34)"/><text x="90.00" y="590.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="87" y="596" width="4" height="15" fill="rgb(240,103,34)"/><text x="90.00" y="606.50"></text></g><g><title>0x7ffb4fba9ff9 (?) (1 samples, 0.38%)</title><rect x="132" y="212" width="5" height="15" fill="rgb(213,66,31)"/><text x="135.00" y="222.50"></text></g><g><title>0x7ffb4fba4ef6 (?) (1 samples, 0.38%)</title><rect x="132" y="228" width="5" height="15" fill="rgb(231,65,45)"/><text x="135.00" y="238.50"></text></g><g><title>0x7ffb4fb99962 (?) (1 samples, 0.38%)</title><rect x="132" y="244" width="5" height="15" fill="rgb(212,96,49)"/><text x="135.00" y="254.50"></text></g><g><title>0x7ffb4fbcd7a7 (?) (1 samples, 0.38%)</title><rect x="132" y="260" width="5" height="15" fill="rgb(230,204,41)"/><text x="135.00" y="270.50"></text></g><g><title>0x7ffb4fbcd379 (?) (1 samples, 0.38%)</title><rect x="132" y="276" width="5" height="15" fill="rgb(229,169,29)"/><text x="135.00" y="286.50"></text></g><g><title>0x7ffb5002b8b8 (?) (1 samples, 0.38%)</title><rect x="132" y="292" width="5" height="15" fill="rgb(221,185,5)"/><text x="135.00" y="302.50"></text></g><g><title>0x7ffb50029c7f (?) (1 samples, 0.38%)</title><rect x="132" y="308" width="5" height="15" fill="rgb(216,6,42)"/><text x="135.00" y="318.50"></text></g><g><title>0x7ffb5003c99c (?) (1 samples, 0.38%)</title><rect x="132" y="324" width="5" height="15" fill="rgb(252,142,12)"/><text x="135.00" y="334.50"></text></g><g><title>0x7ffb4fd4140d (?) (1 samples, 0.38%)</title><rect x="132" y="340" width="5" height="15" fill="rgb(247,58,17)"/><text x="135.00" y="350.50"></text></g><g><title>0x7ffb4fff85e6 (?) (1 samples, 0.38%)</title><rect x="132" y="356" width="5" height="15" fill="rgb(222,112,52)"/><text x="135.00" y="366.50"></text></g><g><title>0x7ffb4fff8486 (?) (1 samples, 0.38%)</title><rect x="132" y="372" width="5" height="15" fill="rgb(235,163,4)"/><text x="135.00" y="382.50"></text></g><g><title>0x7ffb4ffe2c8d (?) (1 samples, 0.38%)</title><rect x="132" y="388" width="5" height="15" fill="rgb(210,64,9)"/><text x="135.00" y="398.50"></text></g><g><title>0x7ffb4ffe2202 (?) (1 samples, 0.38%)</title><rect x="132" y="404" width="5" height="15" fill="rgb(220,58,46)"/><text x="135.00" y="414.50"></text></g><g><title>0x7ffb4ffe1913 (?) (1 samples, 0.38%)</title><rect x="132" y="420" width="5" height="15" fill="rgb(251,44,38)"/><text x="135.00" y="430.50"></text></g><g><title>0x7ffb4ffe042d (?) (1 samples, 0.38%)</title><rect x="132" y="436" width="5" height="15" fill="rgb(226,226,27)"/><text x="135.00" y="446.50"></text></g><g><title>0x7ffb4ffcc640 (?) (1 samples, 0.38%)</title><rect x="132" y="452" width="5" height="15" fill="rgb(249,141,43)"/><text x="135.00" y="462.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="146" y="260" width="4" height="15" fill="rgb(211,55,40)"/><text x="149.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="146" y="276" width="4" height="15" fill="rgb(252,3,11)"/><text x="149.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="150" y="260" width="9" height="15" fill="rgb(230,73,30)"/><text x="153.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (6 samples, 2.31%)</title><rect x="137" y="212" width="27" height="15" fill="rgb(208,217,40)"/><text x="140.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.54%)</title><rect x="146" y="228" width="18" height="15" fill="rgb(228,174,23)"/><text x="149.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.54%)</title><rect x="146" y="244" width="18" height="15" fill="rgb(247,179,36)"/><text x="149.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="159" y="260" width="5" height="15" fill="rgb(239,166,37)"/><text x="162.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="159" y="276" width="5" height="15" fill="rgb(219,225,12)"/><text x="162.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="159" y="292" width="5" height="15" fill="rgb(235,220,13)"/><text x="162.00" y="302.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="168" y="260" width="5" height="15" fill="rgb(235,10,27)"/><text x="171.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="173" y="292" width="4" height="15" fill="rgb(232,28,30)"/><text x="176.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="173" y="308" width="4" height="15" fill="rgb(208,31,2)"/><text x="176.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="177" y="292" width="5" height="15" fill="rgb(245,53,18)"/><text x="180.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="177" y="308" width="5" height="15" fill="rgb(242,22,37)"/><text x="180.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="182" y="292" width="5" height="15" fill="rgb(206,85,16)"/><text x="185.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="340" width="4" height="15" fill="rgb(249,59,2)"/><text x="199.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="356" width="4" height="15" fill="rgb(244,61,0)"/><text x="199.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="372" width="4" height="15" fill="rgb(241,131,1)"/><text x="199.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="388" width="4" height="15" fill="rgb(214,32,9)"/><text x="199.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="404" width="4" height="15" fill="rgb(223,38,4)"/><text x="199.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="420" width="4" height="15" fill="rgb(238,228,10)"/><text x="199.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="436" width="4" height="15" fill="rgb(241,121,51)"/><text x="199.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceAllocate (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="196" y="452" width="4" height="15" fill="rgb(251,73,0)"/><text x="199.00" y="462.50"></text></g><g><title>0x7ffb8fb3996a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="200" y="356" width="5" height="15" fill="rgb(208,19,16)"/><text x="203.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="205" y="356" width="4" height="15" fill="rgb(230,195,52)"/><text x="208.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="205" y="372" width="4" height="15" fill="rgb(253,143,44)"/><text x="208.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="205" y="388" width="4" height="15" fill="rgb(250,143,13)"/><text x="208.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.15%)</title><rect x="200" y="340" width="14" height="15" fill="rgb(207,223,47)"/><text x="203.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="209" y="356" width="5" height="15" fill="rgb(250,169,29)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="209" y="372" width="5" height="15" fill="rgb(254,21,2)"/><text x="212.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="209" y="388" width="5" height="15" fill="rgb(208,35,42)"/><text x="212.00" y="398.50"></text></g><g><title>0x7ffb8fb486af (libc-2.29.so) (1 samples, 0.38%)</title><rect x="209" y="404" width="5" height="15" fill="rgb(230,129,29)"/><text x="212.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="214" y="340" width="4" height="15" fill="rgb(213,110,40)"/><text x="217.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="214" y="356" width="4" height="15" fill="rgb(208,92,37)"/><text x="217.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="214" y="372" width="4" height="15" fill="rgb(245,23,10)"/><text x="217.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="218" y="340" width="5" height="15" fill="rgb(218,4,2)"/><text x="221.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="223" y="340" width="4" height="15" fill="rgb(226,112,19)"/><text x="226.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="223" y="356" width="4" height="15" fill="rgb(208,106,8)"/><text x="226.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="356" width="5" height="15" fill="rgb(228,32,8)"/><text x="239.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="372" width="5" height="15" fill="rgb(234,125,41)"/><text x="239.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="388" width="5" height="15" fill="rgb(238,56,17)"/><text x="239.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="404" width="5" height="15" fill="rgb(231,28,16)"/><text x="239.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="420" width="5" height="15" fill="rgb(213,35,5)"/><text x="239.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="436" width="5" height="15" fill="rgb(249,181,45)"/><text x="239.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="452" width="5" height="15" fill="rgb(212,33,3)"/><text x="239.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="468" width="5" height="15" fill="rgb(213,72,53)"/><text x="239.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="484" width="5" height="15" fill="rgb(207,223,4)"/><text x="239.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="236" y="500" width="5" height="15" fill="rgb(254,83,42)"/><text x="239.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="236" y="516" width="5" height="15" fill="rgb(218,200,27)"/><text x="239.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="236" y="532" width="5" height="15" fill="rgb(209,128,9)"/><text x="239.00" y="542.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="241" y="356" width="5" height="15" fill="rgb(250,221,17)"/><text x="244.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="241" y="372" width="5" height="15" fill="rgb(252,201,41)"/><text x="244.00" y="382.50"></text></g><g><title>0x7ffb8fb3b00a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="241" y="388" width="5" height="15" fill="rgb(241,198,44)"/><text x="244.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.92%)</title><rect x="227" y="340" width="23" height="15" fill="rgb(245,66,39)"/><text x="230.00" y="350.50">o..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="246" y="356" width="4" height="15" fill="rgb(222,104,54)"/><text x="249.00" y="366.50"></text></g><g><title>0x7ffb8fb3990e (libc-2.29.so) (1 samples, 0.38%)</title><rect x="246" y="372" width="4" height="15" fill="rgb(247,178,2)"/><text x="249.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="250" y="356" width="5" height="15" fill="rgb(235,9,53)"/><text x="253.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 7.31%)</title><rect x="173" y="276" width="86" height="15" fill="rgb(214,84,34)"/><text x="176.00" y="286.50">onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 6.15%)</title><rect x="187" y="292" width="72" height="15" fill="rgb(236,33,16)"/><text x="190.00" y="302.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 6.15%)</title><rect x="187" y="308" width="72" height="15" fill="rgb(245,181,53)"/><text x="190.00" y="318.50">onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.77%)</title><rect x="191" y="324" width="68" height="15" fill="rgb(237,139,51)"/><text x="194.00" y="334.50">onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="250" y="340" width="9" height="15" fill="rgb(208,129,44)"/><text x="253.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="255" y="356" width="4" height="15" fill="rgb(217,125,34)"/><text x="258.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="255" y="372" width="4" height="15" fill="rgb(251,96,13)"/><text x="258.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.69%)</title><rect x="173" y="260" width="91" height="15" fill="rgb(247,27,43)"/><text x="176.00" y="270.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="259" y="276" width="5" height="15" fill="rgb(248,95,37)"/><text x="262.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="259" y="292" width="5" height="15" fill="rgb(251,195,48)"/><text x="262.00" y="302.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="264" y="260" width="4" height="15" fill="rgb(226,138,47)"/><text x="267.00" y="270.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, long&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="268" y="260" width="5" height="15" fill="rgb(208,42,45)"/><text x="271.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="273" y="260" width="4" height="15" fill="rgb(248,114,48)"/><text x="276.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.38%)</title><rect x="273" y="276" width="4" height="15" fill="rgb(224,130,43)"/><text x="276.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="273" y="292" width="4" height="15" fill="rgb(234,24,24)"/><text x="276.00" y="302.50"></text></g><g><title>0x7ffb8fb59dae (libc-2.29.so) (1 samples, 0.38%)</title><rect x="273" y="308" width="4" height="15" fill="rgb(237,97,17)"/><text x="276.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(250,29,8)"/><text x="280.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="277" y="276" width="5" height="15" fill="rgb(253,176,21)"/><text x="280.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 10.77%)</title><rect x="164" y="244" width="127" height="15" fill="rgb(250,156,3)"/><text x="167.00" y="254.50">onnxruntime::py..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="260" width="9" height="15" fill="rgb(234,221,14)"/><text x="285.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="276" width="9" height="15" fill="rgb(245,34,17)"/><text x="285.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="292" width="9" height="15" fill="rgb(212,28,8)"/><text x="285.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="308" width="9" height="15" fill="rgb(232,216,46)"/><text x="285.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="324" width="9" height="15" fill="rgb(240,184,47)"/><text x="285.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="340" width="9" height="15" fill="rgb(219,138,54)"/><text x="285.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="282" y="356" width="9" height="15" fill="rgb(206,151,49)"/><text x="285.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="286" y="372" width="5" height="15" fill="rgb(207,33,23)"/><text x="289.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="286" y="388" width="5" height="15" fill="rgb(223,212,17)"/><text x="289.00" y="398.50"></text></g><g><title>0x7ffb8fb3991c (libc-2.29.so) (1 samples, 0.38%)</title><rect x="286" y="404" width="5" height="15" fill="rgb(248,65,48)"/><text x="289.00" y="414.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 16.54%)</title><rect x="100" y="132" width="195" height="15" fill="rgb(248,36,27)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (43 samples, 16.54%)</title><rect x="100" y="148" width="195" height="15" fill="rgb(217,66,38)"/><text x="103.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 15.38%)</title><rect x="114" y="164" width="181" height="15" fill="rgb(214,128,25)"/><text x="117.00" y="174.50">_run_whole_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (38 samples, 14.62%)</title><rect x="123" y="180" width="172" height="15" fill="rgb(228,93,29)"/><text x="126.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (38 samples, 14.62%)</title><rect x="123" y="196" width="172" height="15" fill="rgb(205,183,32)"/><text x="126.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 11.15%)</title><rect x="164" y="212" width="131" height="15" fill="rgb(213,145,49)"/><text x="167.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 11.15%)</title><rect x="164" y="228" width="131" height="15" fill="rgb(211,149,54)"/><text x="167.00" y="238.50">void pybind11::c..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="291" y="244" width="4" height="15" fill="rgb(226,199,37)"/><text x="294.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.38%)</title><rect x="295" y="132" width="5" height="15" fill="rgb(205,26,49)"/><text x="298.00" y="142.50"></text></g><g><title>profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (47 samples, 18.08%)</title><rect x="91" y="68" width="214" height="15" fill="rgb(245,96,8)"/><text x="94.00" y="78.50">profile_ort (bench_SVC_linea..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (47 samples, 18.08%)</title><rect x="91" y="84" width="214" height="15" fill="rgb(211,146,9)"/><text x="94.00" y="94.50">setup_profile (bench_SVC_lin..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (47 samples, 18.08%)</title><rect x="91" y="100" width="214" height="15" fill="rgb(239,141,33)"/><text x="94.00" y="110.50">profile (bench_SVC_linear_b_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 17.69%)</title><rect x="96" y="116" width="209" height="15" fill="rgb(206,105,7)"/><text x="99.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="300" y="132" width="5" height="15" fill="rgb(209,91,40)"/><text x="303.00" y="142.50"></text></g><g><title>0x7ffb8fc17151 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="300" y="148" width="5" height="15" fill="rgb(215,8,45)"/><text x="303.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.38%)</title><rect x="382" y="180" width="4" height="15" fill="rgb(236,105,35)"/><text x="385.00" y="190.50"></text></g><g><title>0x7ffb8fb5a1ef (libc-2.29.so) (1 samples, 0.38%)</title><rect x="463" y="196" width="5" height="15" fill="rgb(209,57,34)"/><text x="466.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.38%)</title><rect x="468" y="196" width="4" height="15" fill="rgb(251,92,44)"/><text x="471.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.77%)</title><rect x="491" y="212" width="9" height="15" fill="rgb(250,149,14)"/><text x="494.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.77%)</title><rect x="491" y="228" width="9" height="15" fill="rgb(206,169,26)"/><text x="494.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.38%)</title><rect x="495" y="244" width="5" height="15" fill="rgb(231,98,6)"/><text x="498.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.38%)</title><rect x="495" y="260" width="5" height="15" fill="rgb(236,161,15)"/><text x="498.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="495" y="276" width="5" height="15" fill="rgb(235,218,9)"/><text x="498.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.38%)</title><rect x="495" y="292" width="5" height="15" fill="rgb(214,27,33)"/><text x="498.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="495" y="308" width="5" height="15" fill="rgb(246,202,32)"/><text x="498.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.38%)</title><rect x="495" y="324" width="5" height="15" fill="rgb(227,143,24)"/><text x="498.00" y="334.50"></text></g><g><title>0x7ffb50ca8c29 (?) (1 samples, 0.38%)</title><rect x="504" y="244" width="5" height="15" fill="rgb(215,51,7)"/><text x="507.00" y="254.50"></text></g><g><title>0x7ffb50cafd9e (?) (1 samples, 0.38%)</title><rect x="504" y="260" width="5" height="15" fill="rgb(234,168,41)"/><text x="507.00" y="270.50"></text></g><g><title>0x7ffb50cafc56 (?) (1 samples, 0.38%)</title><rect x="504" y="276" width="5" height="15" fill="rgb(232,5,37)"/><text x="507.00" y="286.50"></text></g><g><title>0x7ffb50cb5ac7 (?) (1 samples, 0.38%)</title><rect x="504" y="292" width="5" height="15" fill="rgb(221,77,4)"/><text x="507.00" y="302.50"></text></g><g><title>0x7ffb50cb5328 (?) (1 samples, 0.38%)</title><rect x="504" y="308" width="5" height="15" fill="rgb(206,103,48)"/><text x="507.00" y="318.50"></text></g><g><title>0x7ffb50cad48e (?) (1 samples, 0.38%)</title><rect x="504" y="324" width="5" height="15" fill="rgb(254,195,36)"/><text x="507.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.38%)</title><rect x="509" y="244" width="4" height="15" fill="rgb(214,64,1)"/><text x="512.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (3 samples, 1.15%)</title><rect x="513" y="260" width="14" height="15" fill="rgb(239,160,34)"/><text x="516.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.92%)</title><rect x="513" y="244" width="23" height="15" fill="rgb(224,207,48)"/><text x="516.00" y="254.50">a..</text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.77%)</title><rect x="527" y="260" width="9" height="15" fill="rgb(236,197,5)"/><text x="530.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.38%)</title><rect x="531" y="276" width="5" height="15" fill="rgb(232,195,23)"/><text x="534.00" y="286.50"></text></g><g><title>PyArray_CHKFLAGS (ndarraytypes.h) (1 samples, 0.38%)</title><rect x="531" y="292" width="5" height="15" fill="rgb(246,96,42)"/><text x="534.00" y="302.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h) (1 samples, 0.38%)</title><rect x="531" y="308" width="5" height="15" fill="rgb(217,156,47)"/><text x="534.00" y="318.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.38%)</title><rect x="536" y="436" width="5" height="15" fill="rgb(223,129,7)"/><text x="539.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.38%)</title><rect x="536" y="452" width="5" height="15" fill="rgb(233,85,25)"/><text x="539.00" y="462.50"></text></g><g><title>0x7ffb8fb39902 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="536" y="468" width="5" height="15" fill="rgb(249,144,50)"/><text x="539.00" y="478.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (2 samples, 0.77%)</title><rect x="536" y="292" width="9" height="15" fill="rgb(237,196,9)"/><text x="539.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (2 samples, 0.77%)</title><rect x="536" y="308" width="9" height="15" fill="rgb(207,106,13)"/><text x="539.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (2 samples, 0.77%)</title><rect x="536" y="324" width="9" height="15" fill="rgb(206,203,35)"/><text x="539.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple) (2 samples, 0.77%)</title><rect x="536" y="340" width="9" height="15" fill="rgb(222,109,6)"/><text x="539.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h) (2 samples, 0.77%)</title><rect x="536" y="356" width="9" height="15" fill="rgb(240,131,9)"/><text x="539.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (2 samples, 0.77%)</title><rect x="536" y="372" width="9" height="15" fill="rgb(246,2,18)"/><text x="539.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (2 samples, 0.77%)</title><rect x="536" y="388" width="9" height="15" fill="rgb(212,20,49)"/><text x="539.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (2 samples, 0.77%)</title><rect x="536" y="404" width="9" height="15" fill="rgb(208,199,29)"/><text x="539.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (2 samples, 0.77%)</title><rect x="536" y="420" width="9" height="15" fill="rgb(254,15,42)"/><text x="539.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.38%)</title><rect x="541" y="436" width="4" height="15" fill="rgb(220,131,12)"/><text x="544.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.38%)</title><rect x="541" y="452" width="4" height="15" fill="rgb(243,8,9)"/><text x="544.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.38%)</title><rect x="541" y="468" width="4" height="15" fill="rgb(217,187,45)"/><text x="544.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.38%)</title><rect x="541" y="484" width="4" height="15" fill="rgb(210,185,41)"/><text x="544.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="541" y="500" width="4" height="15" fill="rgb(225,119,54)"/><text x="544.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="541" y="516" width="4" height="15" fill="rgb(228,40,45)"/><text x="544.00" y="526.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="545" y="436" width="5" height="15" fill="rgb(253,85,21)"/><text x="548.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.77%)</title><rect x="554" y="468" width="9" height="15" fill="rgb(237,206,11)"/><text x="557.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (1 samples, 0.38%)</title><rect x="559" y="484" width="4" height="15" fill="rgb(244,24,11)"/><text x="562.00" y="494.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (4 samples, 1.54%)</title><rect x="550" y="436" width="18" height="15" fill="rgb(208,97,34)"/><text x="553.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (3 samples, 1.15%)</title><rect x="554" y="452" width="14" height="15" fill="rgb(220,103,48)"/><text x="557.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.38%)</title><rect x="563" y="468" width="5" height="15" fill="rgb(234,141,2)"/><text x="566.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (1 samples, 0.38%)</title><rect x="563" y="484" width="5" height="15" fill="rgb(208,148,30)"/><text x="566.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (1 samples, 0.38%)</title><rect x="563" y="500" width="5" height="15" fill="rgb(238,228,2)"/><text x="566.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.38%)</title><rect x="563" y="516" width="5" height="15" fill="rgb(217,115,45)"/><text x="566.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.38%)</title><rect x="563" y="532" width="5" height="15" fill="rgb(225,109,42)"/><text x="566.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.38%)</title><rect x="563" y="548" width="5" height="15" fill="rgb(212,63,17)"/><text x="566.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="563" y="564" width="5" height="15" fill="rgb(218,87,25)"/><text x="566.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="563" y="580" width="5" height="15" fill="rgb(206,181,2)"/><text x="566.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.38%)</title><rect x="568" y="436" width="4" height="15" fill="rgb(225,14,49)"/><text x="571.00" y="446.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.38%)</title><rect x="572" y="468" width="5" height="15" fill="rgb(215,194,47)"/><text x="575.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.38%)</title><rect x="572" y="484" width="5" height="15" fill="rgb(212,196,53)"/><text x="575.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.38%)</title><rect x="572" y="500" width="5" height="15" fill="rgb(207,136,14)"/><text x="575.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="572" y="516" width="5" height="15" fill="rgb(226,117,38)"/><text x="575.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="572" y="532" width="5" height="15" fill="rgb(221,80,52)"/><text x="575.00" y="542.50"></text></g><g><title>profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (61 samples, 23.46%)</title><rect x="305" y="68" width="276" height="15" fill="rgb(238,132,54)"/><text x="308.00" y="78.50">profile_pyrt (bench_SVC_linear_b_cl_..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (61 samples, 23.46%)</title><rect x="305" y="84" width="276" height="15" fill="rgb(219,171,12)"/><text x="308.00" y="94.50">setup_profile (bench_SVC_linear_b_cl..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (61 samples, 23.46%)</title><rect x="305" y="100" width="276" height="15" fill="rgb(241,164,19)"/><text x="308.00" y="110.50">profile (bench_SVC_linear_b_cl_proba..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (58 samples, 22.31%)</title><rect x="318" y="116" width="263" height="15" fill="rgb(230,157,15)"/><text x="321.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (57 samples, 21.92%)</title><rect x="323" y="132" width="258" height="15" fill="rgb(242,48,20)"/><text x="326.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (57 samples, 21.92%)</title><rect x="323" y="148" width="258" height="15" fill="rgb(216,50,17)"/><text x="326.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (53 samples, 20.38%)</title><rect x="341" y="164" width="240" height="15" fill="rgb(226,116,24)"/><text x="344.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (43 samples, 16.54%)</title><rect x="386" y="180" width="195" height="15" fill="rgb(244,171,49)"/><text x="389.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (24 samples, 9.23%)</title><rect x="472" y="196" width="109" height="15" fill="rgb(228,177,38)"/><text x="475.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (18 samples, 6.92%)</title><rect x="500" y="212" width="81" height="15" fill="rgb(220,157,14)"/><text x="503.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (18 samples, 6.92%)</title><rect x="500" y="228" width="81" height="15" fill="rgb(214,41,51)"/><text x="503.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (10 samples, 3.85%)</title><rect x="536" y="244" width="45" height="15" fill="rgb(242,216,6)"/><text x="539.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (10 samples, 3.85%)</title><rect x="536" y="260" width="45" height="15" fill="rgb(228,196,2)"/><text x="539.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (10 samples, 3.85%)</title><rect x="536" y="276" width="45" height="15" fill="rgb(234,11,51)"/><text x="539.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (8 samples, 3.08%)</title><rect x="545" y="292" width="36" height="15" fill="rgb(250,166,1)"/><text x="548.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (8 samples, 3.08%)</title><rect x="545" y="308" width="36" height="15" fill="rgb(210,199,16)"/><text x="548.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (8 samples, 3.08%)</title><rect x="545" y="324" width="36" height="15" fill="rgb(232,89,26)"/><text x="548.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (8 samples, 3.08%)</title><rect x="545" y="340" width="36" height="15" fill="rgb(216,190,35)"/><text x="548.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h) (8 samples, 3.08%)</title><rect x="545" y="356" width="36" height="15" fill="rgb(215,118,1)"/><text x="548.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (8 samples, 3.08%)</title><rect x="545" y="372" width="36" height="15" fill="rgb(232,222,18)"/><text x="548.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h) (8 samples, 3.08%)</title><rect x="545" y="388" width="36" height="15" fill="rgb(212,76,34)"/><text x="548.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (8 samples, 3.08%)</title><rect x="545" y="404" width="36" height="15" fill="rgb(206,96,36)"/><text x="548.00" y="414.50">pyb..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (8 samples, 3.08%)</title><rect x="545" y="420" width="36" height="15" fill="rgb(237,160,6)"/><text x="548.00" y="430.50">Run..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (2 samples, 0.77%)</title><rect x="572" y="436" width="9" height="15" fill="rgb(251,25,44)"/><text x="575.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_default_append (vector.tcc) (2 samples, 0.77%)</title><rect x="572" y="452" width="9" height="15" fill="rgb(225,157,1)"/><text x="575.00" y="462.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.38%)</title><rect x="577" y="468" width="4" height="15" fill="rgb(211,50,16)"/><text x="580.00" y="478.50"></text></g><g><title>0x7ffb8fb5a14e (libc-2.29.so) (1 samples, 0.38%)</title><rect x="577" y="484" width="4" height="15" fill="rgb(253,203,52)"/><text x="580.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.77%)</title><rect x="586" y="116" width="9" height="15" fill="rgb(232,149,6)"/><text x="589.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.77%)</title><rect x="586" y="132" width="9" height="15" fill="rgb(218,62,38)"/><text x="589.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.77%)</title><rect x="586" y="148" width="9" height="15" fill="rgb(245,164,2)"/><text x="589.00" y="158.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.38%)</title><rect x="590" y="164" width="5" height="15" fill="rgb(254,177,33)"/><text x="593.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="590" y="180" width="5" height="15" fill="rgb(252,101,39)"/><text x="593.00" y="190.50"></text></g><g><title>0x7ffb6a62a2ee (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="627" y="180" width="4" height="15" fill="rgb(251,117,2)"/><text x="630.00" y="190.50"></text></g><g><title>0x7ffb6a627d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="631" y="196" width="9" height="15" fill="rgb(215,38,53)"/><text x="634.00" y="206.50"></text></g><g><title>0x7ffb6a611e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="631" y="212" width="9" height="15" fill="rgb(231,146,6)"/><text x="634.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.77%)</title><rect x="631" y="228" width="9" height="15" fill="rgb(234,31,5)"/><text x="634.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.77%)</title><rect x="631" y="244" width="9" height="15" fill="rgb(245,9,43)"/><text x="634.00" y="254.50"></text></g><g><title>0x7ffb6a627d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="640" y="196" width="5" height="15" fill="rgb(218,67,50)"/><text x="643.00" y="206.50"></text></g><g><title>0x7ffb6a6115ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="640" y="212" width="5" height="15" fill="rgb(237,214,13)"/><text x="643.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="640" y="228" width="5" height="15" fill="rgb(221,225,33)"/><text x="643.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.38%)</title><rect x="640" y="244" width="5" height="15" fill="rgb(205,195,21)"/><text x="643.00" y="254.50"></text></g><g><title>0x7ffb6a627d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="645" y="196" width="4" height="15" fill="rgb(205,0,53)"/><text x="648.00" y="206.50"></text></g><g><title>0x7ffb6a611e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="645" y="212" width="4" height="15" fill="rgb(252,30,34)"/><text x="648.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="645" y="228" width="4" height="15" fill="rgb(207,66,7)"/><text x="648.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.38%)</title><rect x="645" y="244" width="4" height="15" fill="rgb(220,82,51)"/><text x="648.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.38%)</title><rect x="645" y="260" width="4" height="15" fill="rgb(231,4,28)"/><text x="648.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.38%)</title><rect x="645" y="276" width="4" height="15" fill="rgb(214,29,14)"/><text x="648.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.38%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(236,144,40)"/><text x="648.00" y="302.50"></text></g><g><title>0x7ffb6a627de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="649" y="196" width="5" height="15" fill="rgb(237,204,32)"/><text x="652.00" y="206.50"></text></g><g><title>0x7ffb6a6115ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="649" y="212" width="5" height="15" fill="rgb(241,105,2)"/><text x="652.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="649" y="228" width="5" height="15" fill="rgb(254,64,52)"/><text x="652.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.38%)</title><rect x="649" y="244" width="5" height="15" fill="rgb(235,202,5)"/><text x="652.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.38%)</title><rect x="649" y="260" width="5" height="15" fill="rgb(208,122,52)"/><text x="652.00" y="270.50"></text></g><g><title>0x7ffb8fb39be4 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="649" y="276" width="5" height="15" fill="rgb(254,60,9)"/><text x="652.00" y="286.50"></text></g><g><title>0x7ffb6a627e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="654" y="196" width="5" height="15" fill="rgb(230,83,46)"/><text x="657.00" y="206.50"></text></g><g><title>0x7ffb6a611f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="654" y="212" width="5" height="15" fill="rgb(238,151,44)"/><text x="657.00" y="222.50"></text></g><g><title>0x7ffb6a61133c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="654" y="228" width="5" height="15" fill="rgb(249,3,51)"/><text x="657.00" y="238.50"></text></g><g><title>0x7ffb6a610e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="654" y="244" width="5" height="15" fill="rgb(222,138,47)"/><text x="657.00" y="254.50"></text></g><g><title>0x7ffb6a627e66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="659" y="196" width="4" height="15" fill="rgb(206,106,29)"/><text x="662.00" y="206.50"></text></g><g><title>0x7ffb6a611e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="659" y="212" width="4" height="15" fill="rgb(226,186,28)"/><text x="662.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="659" y="228" width="4" height="15" fill="rgb(249,12,8)"/><text x="662.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.38%)</title><rect x="659" y="244" width="4" height="15" fill="rgb(220,37,42)"/><text x="662.00" y="254.50"></text></g><g><title>0x7ffb6a627eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="663" y="196" width="5" height="15" fill="rgb(251,219,35)"/><text x="666.00" y="206.50"></text></g><g><title>0x7ffb6a611e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="663" y="212" width="5" height="15" fill="rgb(219,167,10)"/><text x="666.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="663" y="228" width="5" height="15" fill="rgb(222,21,34)"/><text x="666.00" y="238.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.38%)</title><rect x="668" y="260" width="4" height="15" fill="rgb(252,32,15)"/><text x="671.00" y="270.50"></text></g><g><title>0x7ffb6a627f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="668" y="196" width="9" height="15" fill="rgb(224,186,47)"/><text x="671.00" y="206.50"></text></g><g><title>0x7ffb6a611e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="668" y="212" width="9" height="15" fill="rgb(242,136,45)"/><text x="671.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.77%)</title><rect x="668" y="228" width="9" height="15" fill="rgb(219,220,19)"/><text x="671.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.77%)</title><rect x="668" y="244" width="9" height="15" fill="rgb(221,43,0)"/><text x="671.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.38%)</title><rect x="672" y="260" width="5" height="15" fill="rgb(236,7,40)"/><text x="675.00" y="270.50"></text></g><g><title>0x7ffb6a6280a2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="677" y="196" width="4" height="15" fill="rgb(251,131,28)"/><text x="680.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="686" y="244" width="4" height="15" fill="rgb(228,195,3)"/><text x="689.00" y="254.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.77%)</title><rect x="686" y="228" width="9" height="15" fill="rgb(213,80,32)"/><text x="689.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.38%)</title><rect x="690" y="244" width="5" height="15" fill="rgb(239,155,40)"/><text x="693.00" y="254.50"></text></g><g><title>0x7ffb6a62812f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.54%)</title><rect x="681" y="196" width="18" height="15" fill="rgb(211,195,5)"/><text x="684.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (4 samples, 1.54%)</title><rect x="681" y="212" width="18" height="15" fill="rgb(228,37,33)"/><text x="684.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="695" y="228" width="4" height="15" fill="rgb(207,91,28)"/><text x="698.00" y="238.50"></text></g><g><title>0x7ffb6a612a7a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="699" y="212" width="5" height="15" fill="rgb(232,211,33)"/><text x="702.00" y="222.50"></text></g><g><title>0x7ffb6a628237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.15%)</title><rect x="699" y="196" width="14" height="15" fill="rgb(222,107,37)"/><text x="702.00" y="206.50"></text></g><g><title>0x7ffb6a612ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="704" y="212" width="9" height="15" fill="rgb(244,214,37)"/><text x="707.00" y="222.50"></text></g><g><title>0x7ffb8fc17130 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="708" y="228" width="5" height="15" fill="rgb(245,167,27)"/><text x="711.00" y="238.50"></text></g><g><title>0x7ffb8fb59d97 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="713" y="228" width="5" height="15" fill="rgb(229,162,54)"/><text x="716.00" y="238.50"></text></g><g><title>0x7ffb6a6282b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="713" y="196" width="9" height="15" fill="rgb(211,132,23)"/><text x="716.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="713" y="212" width="9" height="15" fill="rgb(242,72,35)"/><text x="716.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="718" y="228" width="4" height="15" fill="rgb(213,173,34)"/><text x="721.00" y="238.50"></text></g><g><title>0x7ffb8fb3b003 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="718" y="244" width="4" height="15" fill="rgb(234,62,4)"/><text x="721.00" y="254.50"></text></g><g><title>0x7ffb6a628314 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="722" y="196" width="5" height="15" fill="rgb(217,164,1)"/><text x="725.00" y="206.50"></text></g><g><title>0x7ffb6a62846c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="727" y="196" width="4" height="15" fill="rgb(229,94,19)"/><text x="730.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.38%)</title><rect x="727" y="212" width="4" height="15" fill="rgb(227,116,31)"/><text x="730.00" y="222.50"></text></g><g><title>0x7ffb6a628528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="731" y="196" width="5" height="15" fill="rgb(205,20,20)"/><text x="734.00" y="206.50"></text></g><g><title>0x7ffb6a611f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="731" y="212" width="5" height="15" fill="rgb(248,134,53)"/><text x="734.00" y="222.50"></text></g><g><title>0x7ffb6a610fcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="731" y="228" width="5" height="15" fill="rgb(240,46,13)"/><text x="734.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.38%)</title><rect x="740" y="244" width="5" height="15" fill="rgb(210,192,36)"/><text x="743.00" y="254.50"></text></g><g><title>0x7ffb8fd0bc3a (libm-2.29.so) (1 samples, 0.38%)</title><rect x="740" y="260" width="5" height="15" fill="rgb(254,119,16)"/><text x="743.00" y="270.50"></text></g><g><title>0x7ffb6a628553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.15%)</title><rect x="736" y="196" width="13" height="15" fill="rgb(228,86,6)"/><text x="739.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.15%)</title><rect x="736" y="212" width="13" height="15" fill="rgb(254,157,20)"/><text x="739.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.15%)</title><rect x="736" y="228" width="13" height="15" fill="rgb(230,95,9)"/><text x="739.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="745" y="244" width="4" height="15" fill="rgb(209,40,52)"/><text x="748.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="745" y="260" width="4" height="15" fill="rgb(209,10,30)"/><text x="748.00" y="270.50"></text></g><g><title>0x7ffb6a6287b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.15%)</title><rect x="749" y="196" width="14" height="15" fill="rgb(231,62,1)"/><text x="752.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.15%)</title><rect x="749" y="212" width="14" height="15" fill="rgb(210,15,52)"/><text x="752.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.15%)</title><rect x="749" y="228" width="14" height="15" fill="rgb(228,49,42)"/><text x="752.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.15%)</title><rect x="749" y="244" width="14" height="15" fill="rgb(241,52,5)"/><text x="752.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.38%)</title><rect x="758" y="260" width="5" height="15" fill="rgb(239,149,31)"/><text x="761.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="758" y="276" width="5" height="15" fill="rgb(210,102,31)"/><text x="761.00" y="286.50"></text></g><g><title>0x7ffb6a628baa (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="763" y="196" width="4" height="15" fill="rgb(231,29,19)"/><text x="766.00" y="206.50"></text></g><g><title>0x7ffb6a628c20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="767" y="196" width="5" height="15" fill="rgb(233,225,54)"/><text x="770.00" y="206.50"></text></g><g><title>0x7ffb6a629cd7 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="772" y="196" width="5" height="15" fill="rgb(246,135,46)"/><text x="775.00" y="206.50"></text></g><g><title>0x7ffb6a60bb30 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="772" y="212" width="5" height="15" fill="rgb(235,142,29)"/><text x="775.00" y="222.50"></text></g><g><title>0x7ffb6a610270 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="772" y="228" width="5" height="15" fill="rgb(236,66,53)"/><text x="775.00" y="238.50"></text></g><g><title>0x7ffb6a60b030 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="777" y="228" width="4" height="15" fill="rgb(212,141,9)"/><text x="780.00" y="238.50"></text></g><g><title>0x7ffb6a62a3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (34 samples, 13.08%)</title><rect x="631" y="180" width="155" height="15" fill="rgb(221,34,28)"/><text x="634.00" y="190.50">0x7ffb6a62a3fd (skl..</text></g><g><title>0x7ffb6a629d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="777" y="196" width="9" height="15" fill="rgb(224,197,26)"/><text x="780.00" y="206.50"></text></g><g><title>0x7ffb6a6115ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.77%)</title><rect x="777" y="212" width="9" height="15" fill="rgb(208,68,38)"/><text x="780.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.38%)</title><rect x="781" y="228" width="5" height="15" fill="rgb(224,106,48)"/><text x="784.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.38%)</title><rect x="781" y="244" width="5" height="15" fill="rgb(240,60,49)"/><text x="784.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.38%)</title><rect x="781" y="260" width="5" height="15" fill="rgb(230,6,34)"/><text x="784.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.38%)</title><rect x="781" y="276" width="5" height="15" fill="rgb(229,28,36)"/><text x="784.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.38%)</title><rect x="781" y="292" width="5" height="15" fill="rgb(253,14,50)"/><text x="784.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="781" y="308" width="5" height="15" fill="rgb(213,45,24)"/><text x="784.00" y="318.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (40 samples, 15.38%)</title><rect x="609" y="164" width="181" height="15" fill="rgb(238,197,31)"/><text x="612.00" y="174.50">_dense_predict_proba (s..</text></g><g><title>0x7ffb6a62b231 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="786" y="180" width="4" height="15" fill="rgb(234,176,17)"/><text x="789.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.54%)</title><rect x="876" y="196" width="19" height="15" fill="rgb(211,20,48)"/><text x="879.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.38%)</title><rect x="895" y="196" width="4" height="15" fill="rgb(216,183,44)"/><text x="898.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.38%)</title><rect x="899" y="196" width="5" height="15" fill="rgb(251,206,10)"/><text x="902.00" y="206.50"></text></g><g><title>0x7ffb8fb5a180 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="899" y="212" width="5" height="15" fill="rgb(207,146,52)"/><text x="902.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="922" y="212" width="13" height="15" fill="rgb(249,55,27)"/><text x="925.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.38%)</title><rect x="931" y="228" width="4" height="15" fill="rgb(248,40,9)"/><text x="934.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.38%)</title><rect x="935" y="212" width="5" height="15" fill="rgb(233,145,48)"/><text x="938.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 3.85%)</title><rect x="904" y="196" width="45" height="15" fill="rgb(212,18,31)"/><text x="907.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.77%)</title><rect x="940" y="212" width="9" height="15" fill="rgb(208,131,53)"/><text x="943.00" y="222.50"></text></g><g><title>0x7ffb8fb4fb60 (libc-2.29.so) (2 samples, 0.77%)</title><rect x="981" y="212" width="9" height="15" fill="rgb(216,145,33)"/><text x="984.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 4.62%)</title><rect x="949" y="196" width="54" height="15" fill="rgb(237,189,2)"/><text x="952.00" y="206.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.15%)</title><rect x="990" y="212" width="13" height="15" fill="rgb(253,185,43)"/><text x="993.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.38%)</title><rect x="999" y="228" width="4" height="15" fill="rgb(251,178,31)"/><text x="1002.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.38%)</title><rect x="1003" y="196" width="5" height="15" fill="rgb(235,216,54)"/><text x="1006.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.38%)</title><rect x="1003" y="212" width="5" height="15" fill="rgb(210,214,45)"/><text x="1006.00" y="222.50"></text></g><g><title>0x7ffb8fb4fe6d (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1017" y="228" width="5" height="15" fill="rgb(217,72,21)"/><text x="1020.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.38%)</title><rect x="1022" y="276" width="4" height="15" fill="rgb(212,1,43)"/><text x="1025.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.38%)</title><rect x="1022" y="292" width="4" height="15" fill="rgb(228,194,17)"/><text x="1025.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.38%)</title><rect x="1022" y="308" width="4" height="15" fill="rgb(240,113,29)"/><text x="1025.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.92%)</title><rect x="1008" y="196" width="23" height="15" fill="rgb(221,142,7)"/><text x="1011.00" y="206.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 1.54%)</title><rect x="1013" y="212" width="18" height="15" fill="rgb(211,76,26)"/><text x="1016.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.77%)</title><rect x="1022" y="228" width="9" height="15" fill="rgb(248,58,16)"/><text x="1025.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.77%)</title><rect x="1022" y="244" width="9" height="15" fill="rgb(215,69,50)"/><text x="1025.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.77%)</title><rect x="1022" y="260" width="9" height="15" fill="rgb(216,118,1)"/><text x="1025.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.38%)</title><rect x="1026" y="276" width="5" height="15" fill="rgb(238,10,48)"/><text x="1029.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="1026" y="292" width="5" height="15" fill="rgb(239,106,41)"/><text x="1029.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.38%)</title><rect x="1026" y="308" width="5" height="15" fill="rgb(248,144,21)"/><text x="1029.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="1026" y="324" width="5" height="15" fill="rgb(240,39,23)"/><text x="1029.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1026" y="340" width="5" height="15" fill="rgb(249,183,37)"/><text x="1029.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (60 samples, 23.08%)</title><rect x="817" y="180" width="273" height="15" fill="rgb(234,138,19)"/><text x="820.00" y="190.50">check_array (sklearn/utils/validatio..</text></g><g><title>simplefilter (warnings.py) (13 samples, 5.00%)</title><rect x="1031" y="196" width="59" height="15" fill="rgb(208,46,35)"/><text x="1034.00" y="206.50">simple..</text></g><g><title>_add_filter (warnings.py) (11 samples, 4.23%)</title><rect x="1040" y="212" width="50" height="15" fill="rgb(213,191,13)"/><text x="1043.00" y="222.50">_add_..</text></g><g><title>0x7ffb8fb4fe50 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1085" y="228" width="5" height="15" fill="rgb(205,140,1)"/><text x="1088.00" y="238.50"></text></g><g><title>0x7ffb8fb5a120 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1158" y="212" width="4" height="15" fill="rgb(240,8,38)"/><text x="1161.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.77%)</title><rect x="1162" y="212" width="9" height="15" fill="rgb(250,34,26)"/><text x="1165.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (126 samples, 48.46%)</title><rect x="609" y="148" width="571" height="15" fill="rgb(237,223,10)"/><text x="612.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (86 samples, 33.08%)</title><rect x="790" y="164" width="390" height="15" fill="rgb(240,178,34)"/><text x="793.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 7.69%)</title><rect x="1090" y="180" width="90" height="15" fill="rgb(243,73,23)"/><text x="1093.00" y="190.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (18 samples, 6.92%)</title><rect x="1099" y="196" width="81" height="15" fill="rgb(236,177,37)"/><text x="1102.00" y="206.50">&lt;listcomp..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.77%)</title><rect x="1171" y="212" width="9" height="15" fill="rgb(213,62,13)"/><text x="1174.00" y="222.50"></text></g><g><title>all (260 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,177,39)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (260 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,177,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (134 samples, 51.54%)</title><rect x="581" y="68" width="609" height="15" fill="rgb(214,126,6)"/><text x="584.00" y="78.50">profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (134 samples, 51.54%)</title><rect x="581" y="84" width="609" height="15" fill="rgb(226,190,12)"/><text x="584.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (134 samples, 51.54%)</title><rect x="581" y="100" width="609" height="15" fill="rgb(228,79,41)"/><text x="584.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 50.38%)</title><rect x="595" y="116" width="595" height="15" fill="rgb(243,116,51)"/><text x="598.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 50.00%)</title><rect x="600" y="132" width="590" height="15" fill="rgb(219,12,8)"/><text x="603.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (2 samples, 0.77%)</title><rect x="1180" y="148" width="10" height="15" fill="rgb(251,191,40)"/><text x="1183.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (1 samples, 0.38%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(244,13,20)"/><text x="1188.00" y="174.50"></text></g></g></svg>