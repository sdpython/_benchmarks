<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:18) (1 samples, 0.30%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(227,144,25)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.30%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(253,178,45)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.30%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(249,65,33)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.30%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(214,226,23)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.30%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(221,187,38)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.30%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(253,217,27)"/><text x="13.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.30%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(216,139,45)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(242,82,40)"/><text x="13.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.30%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(226,191,15)"/><text x="13.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.30%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(245,14,31)"/><text x="13.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(214,139,50)"/><text x="13.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.30%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(210,207,30)"/><text x="13.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.30%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(218,204,33)"/><text x="13.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.30%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(247,164,35)"/><text x="13.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(216,18,48)"/><text x="13.00" y="334.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:22) (1 samples, 0.30%)</title><rect x="13" y="100" width="4" height="15" fill="rgb(219,210,34)"/><text x="16.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.30%)</title><rect x="27" y="164" width="4" height="15" fill="rgb(218,171,33)"/><text x="30.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 1.20%)</title><rect x="31" y="164" width="14" height="15" fill="rgb(220,217,8)"/><text x="34.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (3 samples, 0.90%)</title><rect x="34" y="180" width="11" height="15" fill="rgb(236,76,8)"/><text x="37.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.60%)</title><rect x="45" y="164" width="7" height="15" fill="rgb(225,7,45)"/><text x="48.00" y="174.50"></text></g><g><title>0x7f61205851ea (libc-2.29.so) (1 samples, 0.30%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(226,165,30)"/><text x="76.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="77" y="196" width="4" height="15" fill="rgb(245,132,21)"/><text x="80.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.31%)</title><rect x="52" y="164" width="39" height="15" fill="rgb(240,83,19)"/><text x="55.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.71%)</title><rect x="59" y="180" width="32" height="15" fill="rgb(206,10,54)"/><text x="62.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.90%)</title><rect x="81" y="196" width="10" height="15" fill="rgb(219,35,42)"/><text x="84.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (19 samples, 5.72%)</title><rect x="27" y="148" width="68" height="15" fill="rgb(220,215,53)"/><text x="30.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.30%)</title><rect x="91" y="164" width="4" height="15" fill="rgb(221,52,30)"/><text x="94.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.30%)</title><rect x="95" y="148" width="3" height="15" fill="rgb(208,188,30)"/><text x="98.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.30%)</title><rect x="109" y="196" width="4" height="15" fill="rgb(248,74,6)"/><text x="112.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.30%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(215,31,9)"/><text x="116.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(213,129,13)"/><text x="119.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.41%)</title><rect x="120" y="212" width="28" height="15" fill="rgb(241,142,24)"/><text x="123.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="141" y="228" width="7" height="15" fill="rgb(228,87,3)"/><text x="144.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (12 samples, 3.61%)</title><rect x="109" y="180" width="43" height="15" fill="rgb(217,211,18)"/><text x="112.00" y="190.50">deci..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 3.01%)</title><rect x="116" y="196" width="36" height="15" fill="rgb(208,156,20)"/><text x="119.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.30%)</title><rect x="148" y="212" width="4" height="15" fill="rgb(209,42,46)"/><text x="151.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.30%)</title><rect x="152" y="196" width="3" height="15" fill="rgb(217,23,15)"/><text x="155.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.30%)</title><rect x="155" y="196" width="4" height="15" fill="rgb(216,7,22)"/><text x="158.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.30%)</title><rect x="159" y="212" width="3" height="15" fill="rgb(241,49,12)"/><text x="162.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.30%)</title><rect x="162" y="212" width="4" height="15" fill="rgb(220,144,54)"/><text x="165.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.30%)</title><rect x="166" y="212" width="3" height="15" fill="rgb(248,132,34)"/><text x="169.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.20%)</title><rect x="159" y="196" width="14" height="15" fill="rgb(245,211,51)"/><text x="162.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.30%)</title><rect x="169" y="212" width="4" height="15" fill="rgb(251,166,29)"/><text x="172.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.30%)</title><rect x="173" y="228" width="4" height="15" fill="rgb(254,17,24)"/><text x="176.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 1.51%)</title><rect x="177" y="228" width="17" height="15" fill="rgb(215,90,24)"/><text x="180.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.30%)</title><rect x="194" y="228" width="4" height="15" fill="rgb(251,31,41)"/><text x="197.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 2.41%)</title><rect x="173" y="196" width="28" height="15" fill="rgb(209,167,14)"/><text x="176.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (8 samples, 2.41%)</title><rect x="173" y="212" width="28" height="15" fill="rgb(242,65,16)"/><text x="176.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.30%)</title><rect x="198" y="228" width="3" height="15" fill="rgb(213,82,0)"/><text x="201.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.20%)</title><rect x="201" y="196" width="15" height="15" fill="rgb(250,187,11)"/><text x="204.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.60%)</title><rect x="209" y="212" width="7" height="15" fill="rgb(208,115,54)"/><text x="212.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.30%)</title><rect x="212" y="228" width="4" height="15" fill="rgb(253,77,47)"/><text x="215.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.60%)</title><rect x="219" y="212" width="7" height="15" fill="rgb(218,171,25)"/><text x="222.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 1.20%)</title><rect x="216" y="196" width="14" height="15" fill="rgb(250,173,32)"/><text x="219.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.30%)</title><rect x="226" y="212" width="4" height="15" fill="rgb(246,123,30)"/><text x="229.00" y="222.50"></text></g><g><title>0x7f6120642130 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="226" y="228" width="4" height="15" fill="rgb(231,57,5)"/><text x="229.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.30%)</title><rect x="237" y="212" width="4" height="15" fill="rgb(235,37,5)"/><text x="240.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.30%)</title><rect x="237" y="228" width="4" height="15" fill="rgb(218,156,26)"/><text x="240.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 1.20%)</title><rect x="230" y="196" width="14" height="15" fill="rgb(234,164,46)"/><text x="233.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.30%)</title><rect x="241" y="212" width="3" height="15" fill="rgb(234,223,42)"/><text x="244.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (2 samples, 0.60%)</title><rect x="244" y="196" width="7" height="15" fill="rgb(244,109,36)"/><text x="247.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.30%)</title><rect x="280" y="228" width="3" height="15" fill="rgb(214,186,15)"/><text x="283.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 2.41%)</title><rect x="258" y="212" width="29" height="15" fill="rgb(233,197,3)"/><text x="261.00" y="222.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.30%)</title><rect x="283" y="228" width="4" height="15" fill="rgb(220,11,51)"/><text x="286.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (11 samples, 3.31%)</title><rect x="251" y="196" width="39" height="15" fill="rgb(244,7,12)"/><text x="254.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.30%)</title><rect x="287" y="212" width="3" height="15" fill="rgb(236,106,9)"/><text x="290.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.60%)</title><rect x="294" y="212" width="7" height="15" fill="rgb(227,148,3)"/><text x="297.00" y="222.50"></text></g><g><title>0x7f6120642dfe (libc-2.29.so) (1 samples, 0.30%)</title><rect x="297" y="228" width="4" height="15" fill="rgb(210,137,15)"/><text x="300.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.90%)</title><rect x="301" y="212" width="11" height="15" fill="rgb(239,151,3)"/><text x="304.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.60%)</title><rect x="305" y="228" width="7" height="15" fill="rgb(218,155,27)"/><text x="308.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.60%)</title><rect x="305" y="244" width="7" height="15" fill="rgb(220,7,20)"/><text x="308.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.11%)</title><rect x="290" y="196" width="25" height="15" fill="rgb(207,18,48)"/><text x="293.00" y="206.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.30%)</title><rect x="312" y="212" width="3" height="15" fill="rgb(223,134,19)"/><text x="315.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.30%)</title><rect x="312" y="228" width="3" height="15" fill="rgb(220,178,7)"/><text x="315.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.30%)</title><rect x="315" y="196" width="4" height="15" fill="rgb(226,131,3)"/><text x="318.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (48 samples, 14.46%)</title><rect x="152" y="180" width="170" height="15" fill="rgb(252,76,23)"/><text x="155.00" y="190.50">decision_function (skl..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.30%)</title><rect x="319" y="196" width="3" height="15" fill="rgb(232,91,28)"/><text x="322.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (2 samples, 0.60%)</title><rect x="322" y="180" width="7" height="15" fill="rgb(246,206,42)"/><text x="325.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="344" y="228" width="3" height="15" fill="rgb(245,153,9)"/><text x="347.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.30%)</title><rect x="344" y="244" width="3" height="15" fill="rgb(214,16,15)"/><text x="347.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.30%)</title><rect x="344" y="260" width="3" height="15" fill="rgb(254,95,4)"/><text x="347.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="347" y="276" width="4" height="15" fill="rgb(236,9,24)"/><text x="350.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1676) (1 samples, 0.30%)</title><rect x="347" y="292" width="4" height="15" fill="rgb(247,53,50)"/><text x="350.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.60%)</title><rect x="347" y="228" width="7" height="15" fill="rgb(239,36,28)"/><text x="350.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.60%)</title><rect x="347" y="244" width="7" height="15" fill="rgb(249,81,52)"/><text x="350.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.60%)</title><rect x="347" y="260" width="7" height="15" fill="rgb(223,89,28)"/><text x="350.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.30%)</title><rect x="351" y="276" width="3" height="15" fill="rgb(236,119,23)"/><text x="354.00" y="286.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.51%)</title><rect x="340" y="196" width="18" height="15" fill="rgb(224,68,34)"/><text x="343.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.20%)</title><rect x="344" y="212" width="14" height="15" fill="rgb(207,19,39)"/><text x="347.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3279) (1 samples, 0.30%)</title><rect x="354" y="228" width="4" height="15" fill="rgb(211,133,28)"/><text x="357.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="358" y="196" width="3" height="15" fill="rgb(210,38,15)"/><text x="361.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:949) (1 samples, 0.30%)</title><rect x="358" y="212" width="3" height="15" fill="rgb(205,196,0)"/><text x="361.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.30%)</title><rect x="361" y="260" width="4" height="15" fill="rgb(209,170,14)"/><text x="364.00" y="270.50"></text></g><g><title>0x7f612058514a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="361" y="276" width="4" height="15" fill="rgb(250,135,3)"/><text x="364.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (2 samples, 0.60%)</title><rect x="361" y="244" width="7" height="15" fill="rgb(206,25,25)"/><text x="364.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.30%)</title><rect x="365" y="260" width="3" height="15" fill="rgb(225,131,7)"/><text x="368.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="368" y="260" width="4" height="15" fill="rgb(231,138,31)"/><text x="371.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="372" y="260" width="4" height="15" fill="rgb(215,43,6)"/><text x="375.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.30%)</title><rect x="372" y="276" width="4" height="15" fill="rgb(233,215,31)"/><text x="375.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.30%)</title><rect x="372" y="292" width="4" height="15" fill="rgb(254,97,4)"/><text x="375.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.60%)</title><rect x="376" y="276" width="7" height="15" fill="rgb(235,40,31)"/><text x="379.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.60%)</title><rect x="376" y="292" width="7" height="15" fill="rgb(210,79,32)"/><text x="379.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.60%)</title><rect x="376" y="308" width="7" height="15" fill="rgb(230,136,11)"/><text x="379.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.60%)</title><rect x="376" y="324" width="7" height="15" fill="rgb(236,93,17)"/><text x="379.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.60%)</title><rect x="376" y="340" width="7" height="15" fill="rgb(207,32,24)"/><text x="379.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.60%)</title><rect x="376" y="356" width="7" height="15" fill="rgb(228,130,20)"/><text x="379.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.60%)</title><rect x="376" y="372" width="7" height="15" fill="rgb(249,75,4)"/><text x="379.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.30%)</title><rect x="383" y="308" width="3" height="15" fill="rgb(218,153,15)"/><text x="386.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="383" y="324" width="3" height="15" fill="rgb(252,183,38)"/><text x="386.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 1.81%)</title><rect x="368" y="244" width="22" height="15" fill="rgb(222,212,2)"/><text x="371.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.20%)</title><rect x="376" y="260" width="14" height="15" fill="rgb(244,46,13)"/><text x="379.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.60%)</title><rect x="383" y="276" width="7" height="15" fill="rgb(244,130,6)"/><text x="386.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.60%)</title><rect x="383" y="292" width="7" height="15" fill="rgb(239,148,48)"/><text x="386.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.30%)</title><rect x="386" y="308" width="4" height="15" fill="rgb(250,23,40)"/><text x="389.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3974) (1 samples, 0.30%)</title><rect x="386" y="324" width="4" height="15" fill="rgb(222,33,12)"/><text x="389.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.30%)</title><rect x="390" y="244" width="3" height="15" fill="rgb(230,175,46)"/><text x="393.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.30%)</title><rect x="390" y="260" width="3" height="15" fill="rgb(205,186,36)"/><text x="393.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.30%)</title><rect x="390" y="276" width="3" height="15" fill="rgb(205,138,46)"/><text x="393.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.30%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(235,25,46)"/><text x="396.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.30%)</title><rect x="393" y="260" width="4" height="15" fill="rgb(236,25,15)"/><text x="396.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.30%)</title><rect x="393" y="276" width="4" height="15" fill="rgb(236,163,14)"/><text x="396.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="393" y="292" width="4" height="15" fill="rgb(212,155,37)"/><text x="396.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.30%)</title><rect x="397" y="260" width="3" height="15" fill="rgb(206,7,48)"/><text x="400.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="400" y="308" width="4" height="15" fill="rgb(235,150,41)"/><text x="403.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="404" y="308" width="4" height="15" fill="rgb(252,132,38)"/><text x="407.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 4.22%)</title><rect x="361" y="212" width="50" height="15" fill="rgb(220,39,54)"/><text x="364.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (14 samples, 4.22%)</title><rect x="361" y="228" width="50" height="15" fill="rgb(217,152,14)"/><text x="364.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (4 samples, 1.20%)</title><rect x="397" y="244" width="14" height="15" fill="rgb(230,208,23)"/><text x="400.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (3 samples, 0.90%)</title><rect x="400" y="260" width="11" height="15" fill="rgb(216,208,45)"/><text x="403.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.90%)</title><rect x="400" y="276" width="11" height="15" fill="rgb(214,99,14)"/><text x="403.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.90%)</title><rect x="400" y="292" width="11" height="15" fill="rgb(247,53,38)"/><text x="403.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.30%)</title><rect x="408" y="308" width="3" height="15" fill="rgb(230,160,10)"/><text x="411.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (15 samples, 4.52%)</title><rect x="361" y="196" width="54" height="15" fill="rgb(214,79,44)"/><text x="364.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4763) (1 samples, 0.30%)</title><rect x="411" y="212" width="4" height="15" fill="rgb(221,20,35)"/><text x="414.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.30%)</title><rect x="415" y="196" width="3" height="15" fill="rgb(232,40,21)"/><text x="418.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.30%)</title><rect x="415" y="212" width="3" height="15" fill="rgb(234,205,16)"/><text x="418.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (26 samples, 7.83%)</title><rect x="329" y="180" width="93" height="15" fill="rgb(209,191,34)"/><text x="332.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:156) (1 samples, 0.30%)</title><rect x="418" y="196" width="4" height="15" fill="rgb(217,88,26)"/><text x="421.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (90 samples, 27.11%)</title><rect x="105" y="164" width="320" height="15" fill="rgb(205,124,47)"/><text x="108.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_ba..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.30%)</title><rect x="422" y="180" width="3" height="15" fill="rgb(240,176,13)"/><text x="425.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.30%)</title><rect x="422" y="196" width="3" height="15" fill="rgb(218,81,24)"/><text x="425.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="425" y="180" width="4" height="15" fill="rgb(219,216,1)"/><text x="428.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="425" y="196" width="4" height="15" fill="rgb(216,105,44)"/><text x="428.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="425" y="212" width="4" height="15" fill="rgb(238,87,10)"/><text x="428.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.30%)</title><rect x="425" y="228" width="4" height="15" fill="rgb(241,39,10)"/><text x="428.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="429" y="196" width="3" height="15" fill="rgb(214,176,0)"/><text x="432.00" y="206.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.30%)</title><rect x="429" y="212" width="3" height="15" fill="rgb(249,71,26)"/><text x="432.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.30%)</title><rect x="432" y="244" width="4" height="15" fill="rgb(207,14,49)"/><text x="435.00" y="254.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.30%)</title><rect x="432" y="260" width="4" height="15" fill="rgb(212,93,35)"/><text x="435.00" y="270.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:675) (1 samples, 0.30%)</title><rect x="432" y="276" width="4" height="15" fill="rgb(227,212,19)"/><text x="435.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.90%)</title><rect x="429" y="180" width="11" height="15" fill="rgb(250,196,13)"/><text x="432.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.60%)</title><rect x="432" y="196" width="8" height="15" fill="rgb(221,158,2)"/><text x="435.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.60%)</title><rect x="432" y="212" width="8" height="15" fill="rgb(227,123,16)"/><text x="435.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.60%)</title><rect x="432" y="228" width="8" height="15" fill="rgb(215,85,11)"/><text x="435.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.30%)</title><rect x="436" y="244" width="4" height="15" fill="rgb(218,192,32)"/><text x="439.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.30%)</title><rect x="436" y="260" width="4" height="15" fill="rgb(252,201,14)"/><text x="439.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:266) (1 samples, 0.30%)</title><rect x="436" y="276" width="4" height="15" fill="rgb(216,187,0)"/><text x="439.00" y="286.50"></text></g><g><title>euclid (mem_overlap.c:224) (1 samples, 0.30%)</title><rect x="436" y="292" width="4" height="15" fill="rgb(213,85,39)"/><text x="439.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.51%)</title><rect x="425" y="164" width="18" height="15" fill="rgb(250,55,25)"/><text x="428.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.30%)</title><rect x="440" y="180" width="3" height="15" fill="rgb(211,74,22)"/><text x="443.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="440" y="196" width="3" height="15" fill="rgb(208,181,19)"/><text x="443.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.30%)</title><rect x="443" y="180" width="4" height="15" fill="rgb(239,17,11)"/><text x="446.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.30%)</title><rect x="443" y="196" width="4" height="15" fill="rgb(252,158,48)"/><text x="446.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.30%)</title><rect x="447" y="180" width="3" height="15" fill="rgb(209,216,28)"/><text x="450.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.30%)</title><rect x="447" y="196" width="3" height="15" fill="rgb(228,88,52)"/><text x="450.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.30%)</title><rect x="447" y="212" width="3" height="15" fill="rgb(244,57,28)"/><text x="450.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.30%)</title><rect x="447" y="228" width="3" height="15" fill="rgb(240,223,24)"/><text x="450.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.30%)</title><rect x="447" y="244" width="3" height="15" fill="rgb(219,122,43)"/><text x="450.00" y="254.50"></text></g><g><title>0x7f611f786600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="447" y="260" width="3" height="15" fill="rgb(239,204,7)"/><text x="450.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.90%)</title><rect x="457" y="228" width="11" height="15" fill="rgb(242,27,10)"/><text x="460.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.90%)</title><rect x="457" y="244" width="11" height="15" fill="rgb(214,96,42)"/><text x="460.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.90%)</title><rect x="457" y="260" width="11" height="15" fill="rgb(238,23,30)"/><text x="460.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.90%)</title><rect x="457" y="276" width="11" height="15" fill="rgb(211,22,35)"/><text x="460.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.90%)</title><rect x="457" y="292" width="11" height="15" fill="rgb(245,72,25)"/><text x="460.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.90%)</title><rect x="457" y="308" width="11" height="15" fill="rgb(249,116,19)"/><text x="460.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.30%)</title><rect x="468" y="244" width="4" height="15" fill="rgb(222,183,6)"/><text x="471.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.30%)</title><rect x="468" y="260" width="4" height="15" fill="rgb(221,48,20)"/><text x="471.00" y="270.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.30%)</title><rect x="475" y="308" width="4" height="15" fill="rgb(232,141,8)"/><text x="478.00" y="318.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.30%)</title><rect x="475" y="324" width="4" height="15" fill="rgb(234,162,49)"/><text x="478.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.60%)</title><rect x="475" y="260" width="7" height="15" fill="rgb(218,61,30)"/><text x="478.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.60%)</title><rect x="475" y="276" width="7" height="15" fill="rgb(242,210,23)"/><text x="478.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.60%)</title><rect x="475" y="292" width="7" height="15" fill="rgb(224,91,35)"/><text x="478.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.30%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(238,166,7)"/><text x="482.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.30%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(230,168,21)"/><text x="482.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.30%)</title><rect x="482" y="276" width="4" height="15" fill="rgb(253,172,32)"/><text x="485.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.30%)</title><rect x="482" y="292" width="4" height="15" fill="rgb(208,185,38)"/><text x="485.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.30%)</title><rect x="482" y="308" width="4" height="15" fill="rgb(242,69,28)"/><text x="485.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(220,178,13)"/><text x="485.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="482" y="340" width="4" height="15" fill="rgb(229,92,31)"/><text x="485.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.30%)</title><rect x="482" y="356" width="4" height="15" fill="rgb(214,51,12)"/><text x="485.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.51%)</title><rect x="472" y="244" width="17" height="15" fill="rgb(214,142,47)"/><text x="475.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.60%)</title><rect x="482" y="260" width="7" height="15" fill="rgb(228,5,20)"/><text x="485.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.30%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(239,150,53)"/><text x="489.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.30%)</title><rect x="486" y="292" width="3" height="15" fill="rgb(245,31,22)"/><text x="489.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.30%)</title><rect x="486" y="308" width="3" height="15" fill="rgb(248,70,45)"/><text x="489.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.61%)</title><rect x="450" y="180" width="43" height="15" fill="rgb(218,17,9)"/><text x="453.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.61%)</title><rect x="450" y="196" width="43" height="15" fill="rgb(214,100,22)"/><text x="453.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 3.31%)</title><rect x="454" y="212" width="39" height="15" fill="rgb(241,37,23)"/><text x="457.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.11%)</title><rect x="468" y="228" width="25" height="15" fill="rgb(242,154,24)"/><text x="471.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4688) (1 samples, 0.30%)</title><rect x="489" y="244" width="4" height="15" fill="rgb(234,42,52)"/><text x="492.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.30%)</title><rect x="493" y="196" width="3" height="15" fill="rgb(220,186,18)"/><text x="496.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(231,214,49)"/><text x="499.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="496" y="244" width="4" height="15" fill="rgb(242,16,47)"/><text x="499.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1475) (1 samples, 0.30%)</title><rect x="496" y="260" width="4" height="15" fill="rgb(237,97,5)"/><text x="499.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="500" y="228" width="4" height="15" fill="rgb(216,157,22)"/><text x="503.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.30%)</title><rect x="500" y="244" width="4" height="15" fill="rgb(228,80,44)"/><text x="503.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.30%)</title><rect x="500" y="260" width="4" height="15" fill="rgb(252,189,6)"/><text x="503.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (135 samples, 40.66%)</title><rect x="27" y="132" width="480" height="15" fill="rgb(213,103,1)"/><text x="30.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (115 samples, 34.64%)</title><rect x="98" y="148" width="409" height="15" fill="rgb(239,71,25)"/><text x="101.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (18 samples, 5.42%)</title><rect x="443" y="164" width="64" height="15" fill="rgb(239,207,54)"/><text x="446.00" y="174.50">_predic..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.20%)</title><rect x="493" y="180" width="14" height="15" fill="rgb(224,202,13)"/><text x="496.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.90%)</title><rect x="496" y="196" width="11" height="15" fill="rgb(226,84,31)"/><text x="499.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.90%)</title><rect x="496" y="212" width="11" height="15" fill="rgb(216,0,32)"/><text x="499.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.30%)</title><rect x="504" y="228" width="3" height="15" fill="rgb(219,99,12)"/><text x="507.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.30%)</title><rect x="504" y="244" width="3" height="15" fill="rgb(231,179,4)"/><text x="507.00" y="254.50"></text></g><g><title>0x7f6120564be0 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="504" y="260" width="3" height="15" fill="rgb(223,217,35)"/><text x="507.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:38) (141 samples, 42.47%)</title><rect x="10" y="52" width="501" height="15" fill="rgb(205,111,38)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_on..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:37) (141 samples, 42.47%)</title><rect x="10" y="68" width="501" height="15" fill="rgb(253,194,46)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:29) (141 samples, 42.47%)</title><rect x="10" y="84" width="501" height="15" fill="rgb(219,77,0)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverlibline..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:23) (139 samples, 41.87%)</title><rect x="17" y="100" width="494" height="15" fill="rgb(214,62,8)"/><text x="20.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_on..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 41.57%)</title><rect x="20" y="116" width="491" height="15" fill="rgb(230,159,33)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="507" y="132" width="4" height="15" fill="rgb(237,7,21)"/><text x="510.00" y="142.50"></text></g><g><title>0x7f6120642130 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="507" y="148" width="4" height="15" fill="rgb(234,193,18)"/><text x="510.00" y="158.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.30%)</title><rect x="511" y="916" width="3" height="15" fill="rgb(213,124,28)"/><text x="514.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.30%)</title><rect x="511" y="932" width="3" height="15" fill="rgb(252,209,19)"/><text x="514.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="511" y="948" width="3" height="15" fill="rgb(229,1,3)"/><text x="514.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="511" y="964" width="3" height="15" fill="rgb(253,110,47)"/><text x="514.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.30%)</title><rect x="511" y="980" width="3" height="15" fill="rgb(242,164,44)"/><text x="514.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.30%)</title><rect x="511" y="996" width="3" height="15" fill="rgb(219,164,26)"/><text x="514.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.30%)</title><rect x="511" y="1012" width="3" height="15" fill="rgb(244,53,5)"/><text x="514.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.30%)</title><rect x="511" y="1028" width="3" height="15" fill="rgb(209,206,18)"/><text x="514.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.60%)</title><rect x="511" y="852" width="7" height="15" fill="rgb(230,175,39)"/><text x="514.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.60%)</title><rect x="511" y="868" width="7" height="15" fill="rgb(220,108,54)"/><text x="514.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.60%)</title><rect x="511" y="884" width="7" height="15" fill="rgb(221,111,17)"/><text x="514.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.60%)</title><rect x="511" y="900" width="7" height="15" fill="rgb(227,40,26)"/><text x="514.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.30%)</title><rect x="514" y="916" width="4" height="15" fill="rgb(235,72,30)"/><text x="517.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="514" y="932" width="4" height="15" fill="rgb(209,85,11)"/><text x="517.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.30%)</title><rect x="514" y="948" width="4" height="15" fill="rgb(228,56,11)"/><text x="517.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.30%)</title><rect x="514" y="964" width="4" height="15" fill="rgb(240,48,41)"/><text x="517.00" y="974.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="514" y="980" width="4" height="15" fill="rgb(211,197,53)"/><text x="517.00" y="990.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="514" y="996" width="4" height="15" fill="rgb(214,186,38)"/><text x="517.00" y="1006.50"></text></g><g><title>0x7f6120566293 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="514" y="1012" width="4" height="15" fill="rgb(226,196,27)"/><text x="517.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.30%)</title><rect x="518" y="852" width="3" height="15" fill="rgb(254,114,45)"/><text x="521.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.30%)</title><rect x="518" y="868" width="3" height="15" fill="rgb(205,209,38)"/><text x="521.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.30%)</title><rect x="518" y="884" width="3" height="15" fill="rgb(251,14,43)"/><text x="521.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.30%)</title><rect x="518" y="900" width="3" height="15" fill="rgb(244,222,24)"/><text x="521.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.30%)</title><rect x="518" y="916" width="3" height="15" fill="rgb(233,105,32)"/><text x="521.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.30%)</title><rect x="518" y="932" width="3" height="15" fill="rgb(228,12,29)"/><text x="521.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.30%)</title><rect x="518" y="948" width="3" height="15" fill="rgb(230,21,47)"/><text x="521.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.30%)</title><rect x="518" y="964" width="3" height="15" fill="rgb(220,66,29)"/><text x="521.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:98) (1 samples, 0.30%)</title><rect x="518" y="980" width="3" height="15" fill="rgb(225,104,9)"/><text x="521.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.30%)</title><rect x="521" y="884" width="4" height="15" fill="rgb(243,135,23)"/><text x="524.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.30%)</title><rect x="521" y="900" width="4" height="15" fill="rgb(252,162,5)"/><text x="524.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="521" y="916" width="4" height="15" fill="rgb(239,165,48)"/><text x="524.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="521" y="932" width="4" height="15" fill="rgb(231,229,38)"/><text x="524.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.30%)</title><rect x="521" y="948" width="4" height="15" fill="rgb(242,4,1)"/><text x="524.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.30%)</title><rect x="521" y="964" width="4" height="15" fill="rgb(241,47,7)"/><text x="524.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.30%)</title><rect x="525" y="900" width="3" height="15" fill="rgb(253,108,22)"/><text x="528.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.30%)</title><rect x="525" y="916" width="3" height="15" fill="rgb(248,41,19)"/><text x="528.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="525" y="932" width="3" height="15" fill="rgb(213,53,1)"/><text x="528.00" y="942.50"></text></g><g><title>0x7f61205a4237 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="525" y="948" width="3" height="15" fill="rgb(235,147,10)"/><text x="528.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (6 samples, 1.81%)</title><rect x="511" y="148" width="21" height="15" fill="rgb(243,153,15)"/><text x="514.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="164" width="21" height="15" fill="rgb(250,39,27)"/><text x="514.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.81%)</title><rect x="511" y="180" width="21" height="15" fill="rgb(224,112,10)"/><text x="514.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="196" width="21" height="15" fill="rgb(226,62,37)"/><text x="514.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="212" width="21" height="15" fill="rgb(233,211,19)"/><text x="514.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="228" width="21" height="15" fill="rgb(206,92,6)"/><text x="514.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="244" width="21" height="15" fill="rgb(217,96,54)"/><text x="514.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="260" width="21" height="15" fill="rgb(245,17,34)"/><text x="514.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="276" width="21" height="15" fill="rgb(207,25,12)"/><text x="514.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.81%)</title><rect x="511" y="292" width="21" height="15" fill="rgb(254,83,16)"/><text x="514.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="308" width="21" height="15" fill="rgb(248,186,53)"/><text x="514.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="324" width="21" height="15" fill="rgb(219,189,18)"/><text x="514.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="340" width="21" height="15" fill="rgb(215,129,6)"/><text x="514.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="356" width="21" height="15" fill="rgb(230,3,13)"/><text x="514.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="372" width="21" height="15" fill="rgb(225,181,6)"/><text x="514.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.81%)</title><rect x="511" y="388" width="21" height="15" fill="rgb(229,106,19)"/><text x="514.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="404" width="21" height="15" fill="rgb(220,117,5)"/><text x="514.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="420" width="21" height="15" fill="rgb(207,31,7)"/><text x="514.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="436" width="21" height="15" fill="rgb(232,175,27)"/><text x="514.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="452" width="21" height="15" fill="rgb(239,172,14)"/><text x="514.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="468" width="21" height="15" fill="rgb(233,89,51)"/><text x="514.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.81%)</title><rect x="511" y="484" width="21" height="15" fill="rgb(253,52,26)"/><text x="514.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="500" width="21" height="15" fill="rgb(221,142,11)"/><text x="514.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="516" width="21" height="15" fill="rgb(223,191,34)"/><text x="514.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="532" width="21" height="15" fill="rgb(252,129,30)"/><text x="514.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="548" width="21" height="15" fill="rgb(218,217,22)"/><text x="514.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="564" width="21" height="15" fill="rgb(223,143,22)"/><text x="514.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.81%)</title><rect x="511" y="580" width="21" height="15" fill="rgb(253,188,17)"/><text x="514.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="596" width="21" height="15" fill="rgb(232,109,1)"/><text x="514.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.81%)</title><rect x="511" y="612" width="21" height="15" fill="rgb(252,141,25)"/><text x="514.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="628" width="21" height="15" fill="rgb(248,37,6)"/><text x="514.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="644" width="21" height="15" fill="rgb(231,200,29)"/><text x="514.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="660" width="21" height="15" fill="rgb(221,198,49)"/><text x="514.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="676" width="21" height="15" fill="rgb(254,54,20)"/><text x="514.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="692" width="21" height="15" fill="rgb(253,166,4)"/><text x="514.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="708" width="21" height="15" fill="rgb(208,61,22)"/><text x="514.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.81%)</title><rect x="511" y="724" width="21" height="15" fill="rgb(223,185,20)"/><text x="514.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.81%)</title><rect x="511" y="740" width="21" height="15" fill="rgb(254,38,18)"/><text x="514.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.81%)</title><rect x="511" y="756" width="21" height="15" fill="rgb(225,210,22)"/><text x="514.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.81%)</title><rect x="511" y="772" width="21" height="15" fill="rgb(226,72,38)"/><text x="514.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.81%)</title><rect x="511" y="788" width="21" height="15" fill="rgb(210,56,34)"/><text x="514.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.81%)</title><rect x="511" y="804" width="21" height="15" fill="rgb(242,228,38)"/><text x="514.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.81%)</title><rect x="511" y="820" width="21" height="15" fill="rgb(206,180,17)"/><text x="514.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.81%)</title><rect x="511" y="836" width="21" height="15" fill="rgb(216,109,20)"/><text x="514.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.90%)</title><rect x="521" y="852" width="11" height="15" fill="rgb(222,65,31)"/><text x="524.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.90%)</title><rect x="521" y="868" width="11" height="15" fill="rgb(233,163,49)"/><text x="524.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.60%)</title><rect x="525" y="884" width="7" height="15" fill="rgb(248,107,41)"/><text x="528.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="528" y="900" width="4" height="15" fill="rgb(248,105,17)"/><text x="531.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.30%)</title><rect x="528" y="916" width="4" height="15" fill="rgb(229,118,38)"/><text x="531.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.30%)</title><rect x="528" y="932" width="4" height="15" fill="rgb(236,218,28)"/><text x="531.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.30%)</title><rect x="528" y="948" width="4" height="15" fill="rgb(220,83,17)"/><text x="531.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.30%)</title><rect x="528" y="964" width="4" height="15" fill="rgb(245,156,42)"/><text x="531.00" y="974.50"></text></g><g><title>linspace (numpy/core/function_base.py:136) (1 samples, 0.30%)</title><rect x="532" y="1716" width="4" height="15" fill="rgb(215,120,1)"/><text x="535.00" y="1726.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.30%)</title><rect x="532" y="1732" width="4" height="15" fill="rgb(212,144,22)"/><text x="535.00" y="1742.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="532" y="1748" width="4" height="15" fill="rgb(246,10,13)"/><text x="535.00" y="1758.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="532" y="1764" width="4" height="15" fill="rgb(239,109,19)"/><text x="535.00" y="1774.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.30%)</title><rect x="532" y="1780" width="4" height="15" fill="rgb(205,70,2)"/><text x="535.00" y="1790.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.30%)</title><rect x="532" y="1796" width="4" height="15" fill="rgb(225,90,27)"/><text x="535.00" y="1806.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.30%)</title><rect x="532" y="1812" width="4" height="15" fill="rgb(205,195,14)"/><text x="535.00" y="1822.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:218) (1 samples, 0.30%)</title><rect x="532" y="1828" width="4" height="15" fill="rgb(221,154,31)"/><text x="535.00" y="1838.50"></text></g><g><title>0x7f611f7867c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="532" y="1844" width="4" height="15" fill="rgb(240,173,30)"/><text x="535.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py:143) (1 samples, 0.30%)</title><rect x="536" y="1716" width="3" height="15" fill="rgb(226,203,44)"/><text x="539.00" y="1726.50"></text></g><g><title>array_arange (multiarraymodule.c:2749) (1 samples, 0.30%)</title><rect x="536" y="1732" width="3" height="15" fill="rgb(246,170,46)"/><text x="539.00" y="1742.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (3 samples, 0.90%)</title><rect x="532" y="1444" width="11" height="15" fill="rgb(236,206,26)"/><text x="535.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="532" y="1460" width="11" height="15" fill="rgb(226,76,26)"/><text x="535.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="532" y="1476" width="11" height="15" fill="rgb(242,202,11)"/><text x="535.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="532" y="1492" width="11" height="15" fill="rgb(238,65,54)"/><text x="535.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="532" y="1508" width="11" height="15" fill="rgb(206,155,27)"/><text x="535.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="532" y="1524" width="11" height="15" fill="rgb(232,202,13)"/><text x="535.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (3 samples, 0.90%)</title><rect x="532" y="1540" width="11" height="15" fill="rgb(244,88,8)"/><text x="535.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="532" y="1556" width="11" height="15" fill="rgb(254,25,21)"/><text x="535.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="532" y="1572" width="11" height="15" fill="rgb(246,138,23)"/><text x="535.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="532" y="1588" width="11" height="15" fill="rgb(212,199,23)"/><text x="535.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="532" y="1604" width="11" height="15" fill="rgb(226,48,40)"/><text x="535.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="532" y="1620" width="11" height="15" fill="rgb(224,156,27)"/><text x="535.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (3 samples, 0.90%)</title><rect x="532" y="1636" width="11" height="15" fill="rgb(251,190,22)"/><text x="535.00" y="1646.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (3 samples, 0.90%)</title><rect x="532" y="1652" width="11" height="15" fill="rgb(212,19,15)"/><text x="535.00" y="1662.50"></text></g><g><title>from_list (matplotlib/colors.py:748) (3 samples, 0.90%)</title><rect x="532" y="1668" width="11" height="15" fill="rgb(246,146,52)"/><text x="535.00" y="1678.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;:6) (3 samples, 0.90%)</title><rect x="532" y="1684" width="11" height="15" fill="rgb(216,150,41)"/><text x="535.00" y="1694.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.90%)</title><rect x="532" y="1700" width="11" height="15" fill="rgb(252,24,11)"/><text x="535.00" y="1710.50"></text></g><g><title>linspace (numpy/core/function_base.py:150) (1 samples, 0.30%)</title><rect x="539" y="1716" width="4" height="15" fill="rgb(224,119,47)"/><text x="542.00" y="1726.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:4) (1 samples, 0.30%)</title><rect x="539" y="1732" width="4" height="15" fill="rgb(213,108,54)"/><text x="542.00" y="1742.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.20%)</title><rect x="532" y="292" width="14" height="15" fill="rgb(232,24,42)"/><text x="535.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="308" width="14" height="15" fill="rgb(211,189,10)"/><text x="535.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="324" width="14" height="15" fill="rgb(226,198,31)"/><text x="535.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="340" width="14" height="15" fill="rgb(218,30,21)"/><text x="535.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="356" width="14" height="15" fill="rgb(212,21,53)"/><text x="535.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="372" width="14" height="15" fill="rgb(225,203,37)"/><text x="535.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.20%)</title><rect x="532" y="388" width="14" height="15" fill="rgb(223,203,48)"/><text x="535.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="404" width="14" height="15" fill="rgb(206,184,45)"/><text x="535.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="420" width="14" height="15" fill="rgb(235,137,23)"/><text x="535.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="436" width="14" height="15" fill="rgb(248,7,30)"/><text x="535.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="452" width="14" height="15" fill="rgb(249,79,3)"/><text x="535.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="468" width="14" height="15" fill="rgb(244,50,27)"/><text x="535.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.20%)</title><rect x="532" y="484" width="14" height="15" fill="rgb(215,123,20)"/><text x="535.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="500" width="14" height="15" fill="rgb(244,222,16)"/><text x="535.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="516" width="14" height="15" fill="rgb(238,108,22)"/><text x="535.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="532" width="14" height="15" fill="rgb(220,29,36)"/><text x="535.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="548" width="14" height="15" fill="rgb(236,0,22)"/><text x="535.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="564" width="14" height="15" fill="rgb(232,140,1)"/><text x="535.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.20%)</title><rect x="532" y="580" width="14" height="15" fill="rgb(224,62,13)"/><text x="535.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="596" width="14" height="15" fill="rgb(219,106,25)"/><text x="535.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="612" width="14" height="15" fill="rgb(223,209,43)"/><text x="535.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="628" width="14" height="15" fill="rgb(240,2,8)"/><text x="535.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="644" width="14" height="15" fill="rgb(234,113,7)"/><text x="535.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="660" width="14" height="15" fill="rgb(239,81,36)"/><text x="535.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 1.20%)</title><rect x="532" y="676" width="14" height="15" fill="rgb(239,29,15)"/><text x="535.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="692" width="14" height="15" fill="rgb(228,159,41)"/><text x="535.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="708" width="14" height="15" fill="rgb(214,45,6)"/><text x="535.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="724" width="14" height="15" fill="rgb(250,198,0)"/><text x="535.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="740" width="14" height="15" fill="rgb(250,153,34)"/><text x="535.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="756" width="14" height="15" fill="rgb(252,131,21)"/><text x="535.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (4 samples, 1.20%)</title><rect x="532" y="772" width="14" height="15" fill="rgb(240,217,29)"/><text x="535.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="788" width="14" height="15" fill="rgb(215,192,25)"/><text x="535.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="804" width="14" height="15" fill="rgb(244,183,4)"/><text x="535.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="820" width="14" height="15" fill="rgb(231,131,46)"/><text x="535.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="836" width="14" height="15" fill="rgb(219,81,32)"/><text x="535.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="852" width="14" height="15" fill="rgb(205,60,31)"/><text x="535.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (4 samples, 1.20%)</title><rect x="532" y="868" width="14" height="15" fill="rgb(245,72,28)"/><text x="535.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="884" width="14" height="15" fill="rgb(249,137,48)"/><text x="535.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="900" width="14" height="15" fill="rgb(251,221,13)"/><text x="535.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="916" width="14" height="15" fill="rgb(243,131,34)"/><text x="535.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="932" width="14" height="15" fill="rgb(224,151,8)"/><text x="535.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="948" width="14" height="15" fill="rgb(217,64,54)"/><text x="535.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (4 samples, 1.20%)</title><rect x="532" y="964" width="14" height="15" fill="rgb(207,207,18)"/><text x="535.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="980" width="14" height="15" fill="rgb(234,171,52)"/><text x="535.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="996" width="14" height="15" fill="rgb(214,110,49)"/><text x="535.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="1012" width="14" height="15" fill="rgb(226,223,25)"/><text x="535.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="1028" width="14" height="15" fill="rgb(236,9,49)"/><text x="535.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="1044" width="14" height="15" fill="rgb(245,139,46)"/><text x="535.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (4 samples, 1.20%)</title><rect x="532" y="1060" width="14" height="15" fill="rgb(251,153,5)"/><text x="535.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="1076" width="14" height="15" fill="rgb(251,5,41)"/><text x="535.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="1092" width="14" height="15" fill="rgb(207,142,17)"/><text x="535.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="1108" width="14" height="15" fill="rgb(233,181,20)"/><text x="535.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="1124" width="14" height="15" fill="rgb(216,124,54)"/><text x="535.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="1140" width="14" height="15" fill="rgb(210,208,37)"/><text x="535.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (4 samples, 1.20%)</title><rect x="532" y="1156" width="14" height="15" fill="rgb(210,200,49)"/><text x="535.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="1172" width="14" height="15" fill="rgb(213,27,18)"/><text x="535.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="1188" width="14" height="15" fill="rgb(238,154,51)"/><text x="535.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="1204" width="14" height="15" fill="rgb(251,89,39)"/><text x="535.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="1220" width="14" height="15" fill="rgb(233,54,28)"/><text x="535.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="1236" width="14" height="15" fill="rgb(217,223,8)"/><text x="535.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (4 samples, 1.20%)</title><rect x="532" y="1252" width="14" height="15" fill="rgb(213,214,52)"/><text x="535.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="1268" width="14" height="15" fill="rgb(213,78,29)"/><text x="535.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="1284" width="14" height="15" fill="rgb(220,146,39)"/><text x="535.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="1300" width="14" height="15" fill="rgb(247,59,39)"/><text x="535.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="1316" width="14" height="15" fill="rgb(222,196,8)"/><text x="535.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="1332" width="14" height="15" fill="rgb(215,139,14)"/><text x="535.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (4 samples, 1.20%)</title><rect x="532" y="1348" width="14" height="15" fill="rgb(227,141,18)"/><text x="535.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="532" y="1364" width="14" height="15" fill="rgb(208,226,3)"/><text x="535.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="532" y="1380" width="14" height="15" fill="rgb(244,98,49)"/><text x="535.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="532" y="1396" width="14" height="15" fill="rgb(229,66,3)"/><text x="535.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="532" y="1412" width="14" height="15" fill="rgb(206,113,43)"/><text x="535.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="532" y="1428" width="14" height="15" fill="rgb(233,217,47)"/><text x="535.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.30%)</title><rect x="543" y="1444" width="3" height="15" fill="rgb(237,103,40)"/><text x="546.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="543" y="1460" width="3" height="15" fill="rgb(213,212,1)"/><text x="546.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="543" y="1476" width="3" height="15" fill="rgb(253,184,14)"/><text x="546.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="543" y="1492" width="3" height="15" fill="rgb(217,57,25)"/><text x="546.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="543" y="1508" width="3" height="15" fill="rgb(228,26,8)"/><text x="546.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="543" y="1524" width="3" height="15" fill="rgb(233,188,7)"/><text x="546.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.30%)</title><rect x="543" y="1540" width="3" height="15" fill="rgb(241,106,30)"/><text x="546.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="543" y="1556" width="3" height="15" fill="rgb(249,189,34)"/><text x="546.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="543" y="1572" width="3" height="15" fill="rgb(251,34,50)"/><text x="546.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="543" y="1588" width="3" height="15" fill="rgb(226,169,42)"/><text x="546.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="543" y="1604" width="3" height="15" fill="rgb(217,182,26)"/><text x="546.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="543" y="1620" width="3" height="15" fill="rgb(239,226,37)"/><text x="546.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.30%)</title><rect x="543" y="1636" width="3" height="15" fill="rgb(205,156,3)"/><text x="546.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="543" y="1652" width="3" height="15" fill="rgb(237,27,42)"/><text x="546.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="543" y="1668" width="3" height="15" fill="rgb(240,195,32)"/><text x="546.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="543" y="1684" width="3" height="15" fill="rgb(212,73,35)"/><text x="546.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="543" y="1700" width="3" height="15" fill="rgb(252,154,16)"/><text x="546.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="543" y="1716" width="3" height="15" fill="rgb(208,29,7)"/><text x="546.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:932) (1 samples, 0.30%)</title><rect x="543" y="1732" width="3" height="15" fill="rgb(205,76,17)"/><text x="546.00" y="1742.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.30%)</title><rect x="546" y="820" width="4" height="15" fill="rgb(227,192,29)"/><text x="549.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="546" y="836" width="4" height="15" fill="rgb(207,83,31)"/><text x="549.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="852" width="4" height="15" fill="rgb(217,44,12)"/><text x="549.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="868" width="4" height="15" fill="rgb(254,102,15)"/><text x="549.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="884" width="4" height="15" fill="rgb(229,13,22)"/><text x="549.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="900" width="4" height="15" fill="rgb(212,33,20)"/><text x="549.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="916" width="4" height="15" fill="rgb(209,80,1)"/><text x="549.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="932" width="4" height="15" fill="rgb(209,85,39)"/><text x="549.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.30%)</title><rect x="546" y="948" width="4" height="15" fill="rgb(217,222,29)"/><text x="549.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="964" width="4" height="15" fill="rgb(211,137,9)"/><text x="549.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="980" width="4" height="15" fill="rgb(222,64,15)"/><text x="549.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="996" width="4" height="15" fill="rgb(231,126,20)"/><text x="549.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="1012" width="4" height="15" fill="rgb(207,191,41)"/><text x="549.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1028" width="4" height="15" fill="rgb(227,70,24)"/><text x="549.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.30%)</title><rect x="546" y="1044" width="4" height="15" fill="rgb(225,56,12)"/><text x="549.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1060" width="4" height="15" fill="rgb(253,42,22)"/><text x="549.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="1076" width="4" height="15" fill="rgb(215,32,26)"/><text x="549.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="1092" width="4" height="15" fill="rgb(238,57,37)"/><text x="549.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="1108" width="4" height="15" fill="rgb(244,105,4)"/><text x="549.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1124" width="4" height="15" fill="rgb(249,175,4)"/><text x="549.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.30%)</title><rect x="546" y="1140" width="4" height="15" fill="rgb(244,80,9)"/><text x="549.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1156" width="4" height="15" fill="rgb(241,41,29)"/><text x="549.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="1172" width="4" height="15" fill="rgb(230,223,52)"/><text x="549.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="1188" width="4" height="15" fill="rgb(212,137,29)"/><text x="549.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="1204" width="4" height="15" fill="rgb(216,216,10)"/><text x="549.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1220" width="4" height="15" fill="rgb(239,205,43)"/><text x="549.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.30%)</title><rect x="546" y="1236" width="4" height="15" fill="rgb(238,151,26)"/><text x="549.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1252" width="4" height="15" fill="rgb(225,128,49)"/><text x="549.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="1268" width="4" height="15" fill="rgb(209,93,33)"/><text x="549.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="1284" width="4" height="15" fill="rgb(244,102,14)"/><text x="549.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="1300" width="4" height="15" fill="rgb(213,228,50)"/><text x="549.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1316" width="4" height="15" fill="rgb(218,8,53)"/><text x="549.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.30%)</title><rect x="546" y="1332" width="4" height="15" fill="rgb(216,143,14)"/><text x="549.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1348" width="4" height="15" fill="rgb(215,49,0)"/><text x="549.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="546" y="1364" width="4" height="15" fill="rgb(220,95,8)"/><text x="549.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1380" width="4" height="15" fill="rgb(240,170,16)"/><text x="549.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1396" width="4" height="15" fill="rgb(211,24,32)"/><text x="549.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="1412" width="4" height="15" fill="rgb(242,220,10)"/><text x="549.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="1428" width="4" height="15" fill="rgb(251,208,3)"/><text x="549.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="546" y="1444" width="4" height="15" fill="rgb(226,163,11)"/><text x="549.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="546" y="1460" width="4" height="15" fill="rgb(236,182,33)"/><text x="549.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (1 samples, 0.30%)</title><rect x="546" y="1476" width="4" height="15" fill="rgb(253,151,39)"/><text x="549.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="546" y="1492" width="4" height="15" fill="rgb(241,185,39)"/><text x="549.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="546" y="1508" width="4" height="15" fill="rgb(231,92,21)"/><text x="549.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="546" y="1524" width="4" height="15" fill="rgb(207,211,9)"/><text x="549.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="546" y="1540" width="4" height="15" fill="rgb(241,56,2)"/><text x="549.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="546" y="1556" width="4" height="15" fill="rgb(236,93,31)"/><text x="549.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="546" y="1572" width="4" height="15" fill="rgb(214,170,54)"/><text x="549.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:1478) (1 samples, 0.30%)</title><rect x="550" y="1108" width="3" height="15" fill="rgb(244,81,17)"/><text x="553.00" y="1118.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.30%)</title><rect x="550" y="1124" width="3" height="15" fill="rgb(244,126,15)"/><text x="553.00" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.30%)</title><rect x="553" y="1364" width="4" height="15" fill="rgb(232,210,1)"/><text x="556.00" y="1374.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="553" y="1380" width="4" height="15" fill="rgb(216,71,20)"/><text x="556.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="553" y="1396" width="4" height="15" fill="rgb(234,204,12)"/><text x="556.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="553" y="1412" width="4" height="15" fill="rgb(217,89,38)"/><text x="556.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="553" y="1428" width="4" height="15" fill="rgb(253,229,50)"/><text x="556.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="553" y="1444" width="4" height="15" fill="rgb(248,153,52)"/><text x="556.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="553" y="1460" width="4" height="15" fill="rgb(220,102,38)"/><text x="556.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="553" y="1476" width="4" height="15" fill="rgb(234,207,40)"/><text x="556.00" y="1486.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.30%)</title><rect x="553" y="1492" width="4" height="15" fill="rgb(253,204,22)"/><text x="556.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="553" y="1508" width="4" height="15" fill="rgb(247,53,33)"/><text x="556.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="553" y="1524" width="4" height="15" fill="rgb(212,14,43)"/><text x="556.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="553" y="1540" width="4" height="15" fill="rgb(239,33,10)"/><text x="556.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="553" y="1556" width="4" height="15" fill="rgb(225,176,35)"/><text x="556.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="553" y="1572" width="4" height="15" fill="rgb(229,132,37)"/><text x="556.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:25) (1 samples, 0.30%)</title><rect x="553" y="1588" width="4" height="15" fill="rgb(223,164,25)"/><text x="556.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="553" y="1604" width="4" height="15" fill="rgb(215,6,42)"/><text x="556.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="553" y="1620" width="4" height="15" fill="rgb(210,175,4)"/><text x="556.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="553" y="1636" width="4" height="15" fill="rgb(216,87,6)"/><text x="556.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="553" y="1652" width="4" height="15" fill="rgb(245,165,13)"/><text x="556.00" y="1662.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="553" y="1668" width="4" height="15" fill="rgb(254,170,10)"/><text x="556.00" y="1678.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="553" y="1684" width="4" height="15" fill="rgb(234,47,4)"/><text x="556.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 1.20%)</title><rect x="546" y="532" width="14" height="15" fill="rgb(213,117,41)"/><text x="549.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="546" y="548" width="14" height="15" fill="rgb(240,36,34)"/><text x="549.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="546" y="564" width="14" height="15" fill="rgb(207,169,21)"/><text x="549.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="546" y="580" width="14" height="15" fill="rgb(226,197,8)"/><text x="549.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="546" y="596" width="14" height="15" fill="rgb(250,223,22)"/><text x="549.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="546" y="612" width="14" height="15" fill="rgb(218,196,19)"/><text x="549.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.20%)</title><rect x="546" y="628" width="14" height="15" fill="rgb(207,198,47)"/><text x="549.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="546" y="644" width="14" height="15" fill="rgb(236,202,22)"/><text x="549.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="546" y="660" width="14" height="15" fill="rgb(218,187,27)"/><text x="549.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="546" y="676" width="14" height="15" fill="rgb(251,142,40)"/><text x="549.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="546" y="692" width="14" height="15" fill="rgb(239,12,2)"/><text x="549.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="546" y="708" width="14" height="15" fill="rgb(212,151,42)"/><text x="549.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.20%)</title><rect x="546" y="724" width="14" height="15" fill="rgb(209,35,15)"/><text x="549.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="546" y="740" width="14" height="15" fill="rgb(227,99,43)"/><text x="549.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="546" y="756" width="14" height="15" fill="rgb(223,226,22)"/><text x="549.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="546" y="772" width="14" height="15" fill="rgb(243,136,25)"/><text x="549.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="546" y="788" width="14" height="15" fill="rgb(234,183,1)"/><text x="549.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="546" y="804" width="14" height="15" fill="rgb(234,63,41)"/><text x="549.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.90%)</title><rect x="550" y="820" width="10" height="15" fill="rgb(231,185,18)"/><text x="553.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="550" y="836" width="10" height="15" fill="rgb(224,63,35)"/><text x="553.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="550" y="852" width="10" height="15" fill="rgb(254,160,30)"/><text x="553.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="550" y="868" width="10" height="15" fill="rgb(226,83,53)"/><text x="553.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="550" y="884" width="10" height="15" fill="rgb(233,168,14)"/><text x="553.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="550" y="900" width="10" height="15" fill="rgb(212,190,48)"/><text x="553.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.90%)</title><rect x="550" y="916" width="10" height="15" fill="rgb(214,162,0)"/><text x="553.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="550" y="932" width="10" height="15" fill="rgb(212,193,25)"/><text x="553.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="550" y="948" width="10" height="15" fill="rgb(233,53,11)"/><text x="553.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="550" y="964" width="10" height="15" fill="rgb(221,49,27)"/><text x="553.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="550" y="980" width="10" height="15" fill="rgb(214,192,20)"/><text x="553.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="550" y="996" width="10" height="15" fill="rgb(216,30,37)"/><text x="553.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.90%)</title><rect x="550" y="1012" width="10" height="15" fill="rgb(211,73,32)"/><text x="553.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="550" y="1028" width="10" height="15" fill="rgb(250,177,33)"/><text x="553.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="550" y="1044" width="10" height="15" fill="rgb(207,199,54)"/><text x="553.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="550" y="1060" width="10" height="15" fill="rgb(223,205,16)"/><text x="553.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="550" y="1076" width="10" height="15" fill="rgb(230,91,37)"/><text x="553.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="550" y="1092" width="10" height="15" fill="rgb(218,119,9)"/><text x="553.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.60%)</title><rect x="553" y="1108" width="7" height="15" fill="rgb(231,218,38)"/><text x="556.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="553" y="1124" width="7" height="15" fill="rgb(233,138,24)"/><text x="556.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="553" y="1140" width="7" height="15" fill="rgb(237,43,37)"/><text x="556.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="553" y="1156" width="7" height="15" fill="rgb(252,26,51)"/><text x="556.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="553" y="1172" width="7" height="15" fill="rgb(236,166,2)"/><text x="556.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="553" y="1188" width="7" height="15" fill="rgb(254,142,14)"/><text x="556.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="553" y="1204" width="7" height="15" fill="rgb(250,116,51)"/><text x="556.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="553" y="1220" width="7" height="15" fill="rgb(220,210,37)"/><text x="556.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.60%)</title><rect x="553" y="1236" width="7" height="15" fill="rgb(247,223,53)"/><text x="556.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="553" y="1252" width="7" height="15" fill="rgb(235,47,32)"/><text x="556.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="553" y="1268" width="7" height="15" fill="rgb(230,173,39)"/><text x="556.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="553" y="1284" width="7" height="15" fill="rgb(217,177,48)"/><text x="556.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="553" y="1300" width="7" height="15" fill="rgb(242,68,53)"/><text x="556.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="553" y="1316" width="7" height="15" fill="rgb(245,62,51)"/><text x="556.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="553" y="1332" width="7" height="15" fill="rgb(213,34,40)"/><text x="556.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="553" y="1348" width="7" height="15" fill="rgb(209,142,8)"/><text x="556.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3569) (1 samples, 0.30%)</title><rect x="557" y="1364" width="3" height="15" fill="rgb(205,70,49)"/><text x="560.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.30%)</title><rect x="557" y="1380" width="3" height="15" fill="rgb(205,177,10)"/><text x="560.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:737) (1 samples, 0.30%)</title><rect x="557" y="1396" width="3" height="15" fill="rgb(242,85,31)"/><text x="560.00" y="1406.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.30%)</title><rect x="557" y="1412" width="3" height="15" fill="rgb(245,139,2)"/><text x="560.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.30%)</title><rect x="560" y="964" width="4" height="15" fill="rgb(239,1,35)"/><text x="563.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="560" y="980" width="4" height="15" fill="rgb(247,145,53)"/><text x="563.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="560" y="996" width="4" height="15" fill="rgb(223,204,51)"/><text x="563.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="560" y="1012" width="4" height="15" fill="rgb(218,65,38)"/><text x="563.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="560" y="1028" width="4" height="15" fill="rgb(235,54,32)"/><text x="563.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="560" y="1044" width="4" height="15" fill="rgb(254,105,17)"/><text x="563.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.30%)</title><rect x="560" y="1060" width="4" height="15" fill="rgb(245,135,4)"/><text x="563.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="560" y="1076" width="4" height="15" fill="rgb(208,173,44)"/><text x="563.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="560" y="1092" width="4" height="15" fill="rgb(244,145,1)"/><text x="563.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="560" y="1108" width="4" height="15" fill="rgb(223,182,38)"/><text x="563.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="560" y="1124" width="4" height="15" fill="rgb(242,107,34)"/><text x="563.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="560" y="1140" width="4" height="15" fill="rgb(221,108,44)"/><text x="563.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.30%)</title><rect x="560" y="1156" width="4" height="15" fill="rgb(230,49,14)"/><text x="563.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.30%)</title><rect x="560" y="1172" width="4" height="15" fill="rgb(209,67,37)"/><text x="563.00" y="1182.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.30%)</title><rect x="560" y="1188" width="4" height="15" fill="rgb(212,218,43)"/><text x="563.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.30%)</title><rect x="560" y="1204" width="4" height="15" fill="rgb(205,206,28)"/><text x="563.00" y="1214.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.30%)</title><rect x="560" y="1220" width="4" height="15" fill="rgb(223,53,6)"/><text x="563.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py:648) (1 samples, 0.30%)</title><rect x="560" y="1236" width="4" height="15" fill="rgb(245,66,23)"/><text x="563.00" y="1246.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.30%)</title><rect x="560" y="1252" width="4" height="15" fill="rgb(226,18,33)"/><text x="563.00" y="1262.50"></text></g><g><title>root (&lt;template&gt;:22) (1 samples, 0.30%)</title><rect x="564" y="1428" width="4" height="15" fill="rgb(234,92,15)"/><text x="567.00" y="1438.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.60%)</title><rect x="564" y="1348" width="7" height="15" fill="rgb(217,110,7)"/><text x="567.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.60%)</title><rect x="564" y="1364" width="7" height="15" fill="rgb(210,161,1)"/><text x="567.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.60%)</title><rect x="564" y="1380" width="7" height="15" fill="rgb(241,138,28)"/><text x="567.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.60%)</title><rect x="564" y="1396" width="7" height="15" fill="rgb(218,151,46)"/><text x="567.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.60%)</title><rect x="564" y="1412" width="7" height="15" fill="rgb(235,117,16)"/><text x="567.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.30%)</title><rect x="568" y="1428" width="3" height="15" fill="rgb(231,97,26)"/><text x="571.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.30%)</title><rect x="568" y="1444" width="3" height="15" fill="rgb(251,104,1)"/><text x="571.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:203) (1 samples, 0.30%)</title><rect x="568" y="1460" width="3" height="15" fill="rgb(253,171,49)"/><text x="571.00" y="1470.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.30%)</title><rect x="568" y="1476" width="3" height="15" fill="rgb(234,73,19)"/><text x="571.00" y="1486.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.20%)</title><rect x="560" y="532" width="15" height="15" fill="rgb(210,219,19)"/><text x="563.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="560" y="548" width="15" height="15" fill="rgb(223,114,54)"/><text x="563.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="560" y="564" width="15" height="15" fill="rgb(208,73,46)"/><text x="563.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="560" y="580" width="15" height="15" fill="rgb(239,25,8)"/><text x="563.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="560" y="596" width="15" height="15" fill="rgb(220,37,51)"/><text x="563.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="560" y="612" width="15" height="15" fill="rgb(227,91,43)"/><text x="563.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.20%)</title><rect x="560" y="628" width="15" height="15" fill="rgb(211,157,22)"/><text x="563.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="560" y="644" width="15" height="15" fill="rgb(205,199,32)"/><text x="563.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="560" y="660" width="15" height="15" fill="rgb(246,205,13)"/><text x="563.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="560" y="676" width="15" height="15" fill="rgb(205,7,18)"/><text x="563.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="560" y="692" width="15" height="15" fill="rgb(207,131,28)"/><text x="563.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="560" y="708" width="15" height="15" fill="rgb(207,30,4)"/><text x="563.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.20%)</title><rect x="560" y="724" width="15" height="15" fill="rgb(236,6,46)"/><text x="563.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="560" y="740" width="15" height="15" fill="rgb(246,147,12)"/><text x="563.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.20%)</title><rect x="560" y="756" width="15" height="15" fill="rgb(239,38,16)"/><text x="563.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="560" y="772" width="15" height="15" fill="rgb(239,204,11)"/><text x="563.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="560" y="788" width="15" height="15" fill="rgb(229,188,44)"/><text x="563.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="560" y="804" width="15" height="15" fill="rgb(241,184,7)"/><text x="563.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="560" y="820" width="15" height="15" fill="rgb(226,76,51)"/><text x="563.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="560" y="836" width="15" height="15" fill="rgb(224,205,26)"/><text x="563.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="560" y="852" width="15" height="15" fill="rgb(229,74,41)"/><text x="563.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.20%)</title><rect x="560" y="868" width="15" height="15" fill="rgb(234,172,33)"/><text x="563.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="560" y="884" width="15" height="15" fill="rgb(206,164,23)"/><text x="563.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="560" y="900" width="15" height="15" fill="rgb(217,175,41)"/><text x="563.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="560" y="916" width="15" height="15" fill="rgb(250,71,19)"/><text x="563.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="560" y="932" width="15" height="15" fill="rgb(249,189,11)"/><text x="563.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="560" y="948" width="15" height="15" fill="rgb(210,51,24)"/><text x="563.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.90%)</title><rect x="564" y="964" width="11" height="15" fill="rgb(250,30,50)"/><text x="567.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.90%)</title><rect x="564" y="980" width="11" height="15" fill="rgb(223,199,13)"/><text x="567.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="564" y="996" width="11" height="15" fill="rgb(227,131,36)"/><text x="567.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="564" y="1012" width="11" height="15" fill="rgb(252,22,42)"/><text x="567.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="564" y="1028" width="11" height="15" fill="rgb(228,8,50)"/><text x="567.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="564" y="1044" width="11" height="15" fill="rgb(242,143,10)"/><text x="567.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="564" y="1060" width="11" height="15" fill="rgb(221,70,8)"/><text x="567.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="564" y="1076" width="11" height="15" fill="rgb(221,56,36)"/><text x="567.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.90%)</title><rect x="564" y="1092" width="11" height="15" fill="rgb(238,196,3)"/><text x="567.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.90%)</title><rect x="564" y="1108" width="11" height="15" fill="rgb(248,139,53)"/><text x="567.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="564" y="1124" width="11" height="15" fill="rgb(218,66,37)"/><text x="567.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="564" y="1140" width="11" height="15" fill="rgb(249,115,31)"/><text x="567.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="564" y="1156" width="11" height="15" fill="rgb(254,112,6)"/><text x="567.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="564" y="1172" width="11" height="15" fill="rgb(248,7,54)"/><text x="567.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="564" y="1188" width="11" height="15" fill="rgb(236,5,26)"/><text x="567.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="564" y="1204" width="11" height="15" fill="rgb(251,217,14)"/><text x="567.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.90%)</title><rect x="564" y="1220" width="11" height="15" fill="rgb(220,148,34)"/><text x="567.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="564" y="1236" width="11" height="15" fill="rgb(244,162,22)"/><text x="567.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="564" y="1252" width="11" height="15" fill="rgb(254,171,20)"/><text x="567.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="564" y="1268" width="11" height="15" fill="rgb(231,190,36)"/><text x="567.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="564" y="1284" width="11" height="15" fill="rgb(221,181,8)"/><text x="567.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="564" y="1300" width="11" height="15" fill="rgb(234,172,3)"/><text x="567.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.90%)</title><rect x="564" y="1316" width="11" height="15" fill="rgb(224,2,40)"/><text x="567.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.90%)</title><rect x="564" y="1332" width="11" height="15" fill="rgb(219,146,51)"/><text x="567.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.30%)</title><rect x="571" y="1348" width="4" height="15" fill="rgb(246,55,22)"/><text x="574.00" y="1358.50"></text></g><g><title>0x7f61106200e9 (?) (1 samples, 0.30%)</title><rect x="571" y="1364" width="4" height="15" fill="rgb(250,68,48)"/><text x="574.00" y="1374.50"></text></g><g><title>0x7f6110606c02 (?) (1 samples, 0.30%)</title><rect x="571" y="1380" width="4" height="15" fill="rgb(251,171,6)"/><text x="574.00" y="1390.50"></text></g><g><title>0x7f611062d62f (?) (1 samples, 0.30%)</title><rect x="571" y="1396" width="4" height="15" fill="rgb(239,45,7)"/><text x="574.00" y="1406.50"></text></g><g><title>0x7f61106a6be0 (?) (1 samples, 0.30%)</title><rect x="571" y="1412" width="4" height="15" fill="rgb(206,57,45)"/><text x="574.00" y="1422.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.30%)</title><rect x="575" y="724" width="3" height="15" fill="rgb(232,134,2)"/><text x="578.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="575" y="740" width="3" height="15" fill="rgb(206,22,9)"/><text x="578.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="575" y="756" width="3" height="15" fill="rgb(205,131,53)"/><text x="578.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="575" y="772" width="3" height="15" fill="rgb(248,38,21)"/><text x="578.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="575" y="788" width="3" height="15" fill="rgb(240,38,54)"/><text x="578.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="575" y="804" width="3" height="15" fill="rgb(227,209,15)"/><text x="578.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (1 samples, 0.30%)</title><rect x="575" y="820" width="3" height="15" fill="rgb(234,49,44)"/><text x="578.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="575" y="836" width="3" height="15" fill="rgb(225,178,50)"/><text x="578.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="575" y="852" width="3" height="15" fill="rgb(243,44,7)"/><text x="578.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="575" y="868" width="3" height="15" fill="rgb(220,114,36)"/><text x="578.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="575" y="884" width="3" height="15" fill="rgb(241,195,14)"/><text x="578.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="575" y="900" width="3" height="15" fill="rgb(220,26,6)"/><text x="578.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="575" y="916" width="3" height="15" fill="rgb(216,91,30)"/><text x="578.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="575" y="932" width="3" height="15" fill="rgb(249,133,21)"/><text x="578.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:223) (1 samples, 0.30%)</title><rect x="575" y="948" width="3" height="15" fill="rgb(231,146,41)"/><text x="578.00" y="958.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py:219) (1 samples, 0.30%)</title><rect x="575" y="964" width="3" height="15" fill="rgb(238,227,26)"/><text x="578.00" y="974.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="575" y="980" width="3" height="15" fill="rgb(228,19,20)"/><text x="578.00" y="990.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="575" y="996" width="3" height="15" fill="rgb(229,198,46)"/><text x="578.00" y="1006.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.30%)</title><rect x="575" y="1012" width="3" height="15" fill="rgb(209,3,4)"/><text x="578.00" y="1022.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.30%)</title><rect x="575" y="1028" width="3" height="15" fill="rgb(211,12,13)"/><text x="578.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.30%)</title><rect x="575" y="1044" width="3" height="15" fill="rgb(217,27,37)"/><text x="578.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.30%)</title><rect x="575" y="1060" width="3" height="15" fill="rgb(247,217,45)"/><text x="578.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.30%)</title><rect x="575" y="1076" width="3" height="15" fill="rgb(217,90,14)"/><text x="578.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.30%)</title><rect x="575" y="1092" width="3" height="15" fill="rgb(254,58,18)"/><text x="578.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.30%)</title><rect x="575" y="1108" width="3" height="15" fill="rgb(247,115,7)"/><text x="578.00" y="1118.50"></text></g><g><title>_optimize_charset (sre_compile.py:364) (1 samples, 0.30%)</title><rect x="575" y="1124" width="3" height="15" fill="rgb(214,172,22)"/><text x="578.00" y="1134.50"></text></g><g><title>_mk_bitmap (sre_compile.py:414) (1 samples, 0.30%)</title><rect x="575" y="1140" width="3" height="15" fill="rgb(236,130,28)"/><text x="578.00" y="1150.50"></text></g><g><title>&lt;listcomp&gt; (sre_compile.py:414) (1 samples, 0.30%)</title><rect x="575" y="1156" width="3" height="15" fill="rgb(208,38,44)"/><text x="578.00" y="1166.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:4) (20 samples, 6.02%)</title><rect x="511" y="52" width="71" height="15" fill="rgb(231,193,52)"/><text x="514.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 6.02%)</title><rect x="511" y="68" width="71" height="15" fill="rgb(249,145,11)"/><text x="514.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 6.02%)</title><rect x="511" y="84" width="71" height="15" fill="rgb(220,120,32)"/><text x="514.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 6.02%)</title><rect x="511" y="100" width="71" height="15" fill="rgb(240,51,25)"/><text x="514.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 6.02%)</title><rect x="511" y="116" width="71" height="15" fill="rgb(251,195,49)"/><text x="514.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 6.02%)</title><rect x="511" y="132" width="71" height="15" fill="rgb(239,57,23)"/><text x="514.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (14 samples, 4.22%)</title><rect x="532" y="148" width="50" height="15" fill="rgb(238,61,7)"/><text x="535.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.22%)</title><rect x="532" y="164" width="50" height="15" fill="rgb(214,54,14)"/><text x="535.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (14 samples, 4.22%)</title><rect x="532" y="180" width="50" height="15" fill="rgb(239,21,36)"/><text x="535.00" y="190.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.22%)</title><rect x="532" y="196" width="50" height="15" fill="rgb(214,93,25)"/><text x="535.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.22%)</title><rect x="532" y="212" width="50" height="15" fill="rgb(226,210,35)"/><text x="535.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.22%)</title><rect x="532" y="228" width="50" height="15" fill="rgb(240,44,7)"/><text x="535.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.22%)</title><rect x="532" y="244" width="50" height="15" fill="rgb(213,95,45)"/><text x="535.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.22%)</title><rect x="532" y="260" width="50" height="15" fill="rgb(222,172,36)"/><text x="535.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.22%)</title><rect x="532" y="276" width="50" height="15" fill="rgb(210,220,2)"/><text x="535.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (10 samples, 3.01%)</title><rect x="546" y="292" width="36" height="15" fill="rgb(243,61,54)"/><text x="549.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.01%)</title><rect x="546" y="308" width="36" height="15" fill="rgb(227,219,47)"/><text x="549.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.01%)</title><rect x="546" y="324" width="36" height="15" fill="rgb(209,36,25)"/><text x="549.00" y="334.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.01%)</title><rect x="546" y="340" width="36" height="15" fill="rgb(249,206,43)"/><text x="549.00" y="350.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.01%)</title><rect x="546" y="356" width="36" height="15" fill="rgb(240,131,14)"/><text x="549.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.01%)</title><rect x="546" y="372" width="36" height="15" fill="rgb(234,18,14)"/><text x="549.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.01%)</title><rect x="546" y="388" width="36" height="15" fill="rgb(205,203,41)"/><text x="549.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.01%)</title><rect x="546" y="404" width="36" height="15" fill="rgb(207,80,51)"/><text x="549.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.01%)</title><rect x="546" y="420" width="36" height="15" fill="rgb(250,46,28)"/><text x="549.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (10 samples, 3.01%)</title><rect x="546" y="436" width="36" height="15" fill="rgb(235,24,47)"/><text x="549.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.01%)</title><rect x="546" y="452" width="36" height="15" fill="rgb(233,146,0)"/><text x="549.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.01%)</title><rect x="546" y="468" width="36" height="15" fill="rgb(254,84,3)"/><text x="549.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.01%)</title><rect x="546" y="484" width="36" height="15" fill="rgb(215,9,43)"/><text x="549.00" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.01%)</title><rect x="546" y="500" width="36" height="15" fill="rgb(252,72,9)"/><text x="549.00" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.01%)</title><rect x="546" y="516" width="36" height="15" fill="rgb(248,133,26)"/><text x="549.00" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (2 samples, 0.60%)</title><rect x="575" y="532" width="7" height="15" fill="rgb(249,142,16)"/><text x="578.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="575" y="548" width="7" height="15" fill="rgb(229,39,7)"/><text x="578.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="575" y="564" width="7" height="15" fill="rgb(231,18,52)"/><text x="578.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="575" y="580" width="7" height="15" fill="rgb(240,114,30)"/><text x="578.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="575" y="596" width="7" height="15" fill="rgb(224,102,38)"/><text x="578.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="575" y="612" width="7" height="15" fill="rgb(219,40,47)"/><text x="578.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py:12) (2 samples, 0.60%)</title><rect x="575" y="628" width="7" height="15" fill="rgb(208,97,46)"/><text x="578.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="575" y="644" width="7" height="15" fill="rgb(210,122,32)"/><text x="578.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="575" y="660" width="7" height="15" fill="rgb(205,144,28)"/><text x="578.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="575" y="676" width="7" height="15" fill="rgb(245,87,21)"/><text x="578.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="575" y="692" width="7" height="15" fill="rgb(231,111,8)"/><text x="578.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="575" y="708" width="7" height="15" fill="rgb(206,99,43)"/><text x="578.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.30%)</title><rect x="578" y="724" width="4" height="15" fill="rgb(228,80,6)"/><text x="581.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="578" y="740" width="4" height="15" fill="rgb(208,219,20)"/><text x="581.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="578" y="756" width="4" height="15" fill="rgb(224,128,1)"/><text x="581.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="578" y="772" width="4" height="15" fill="rgb(245,144,46)"/><text x="581.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="578" y="788" width="4" height="15" fill="rgb(246,62,43)"/><text x="581.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="578" y="804" width="4" height="15" fill="rgb(250,179,0)"/><text x="581.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.30%)</title><rect x="578" y="820" width="4" height="15" fill="rgb(205,220,29)"/><text x="581.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="578" y="836" width="4" height="15" fill="rgb(239,11,42)"/><text x="581.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="578" y="852" width="4" height="15" fill="rgb(239,127,11)"/><text x="581.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="578" y="868" width="4" height="15" fill="rgb(212,4,51)"/><text x="581.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="578" y="884" width="4" height="15" fill="rgb(244,156,11)"/><text x="581.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="578" y="900" width="4" height="15" fill="rgb(224,165,31)"/><text x="581.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="578" y="916" width="4" height="15" fill="rgb(224,45,4)"/><text x="581.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="578" y="932" width="4" height="15" fill="rgb(249,30,44)"/><text x="581.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="578" y="948" width="4" height="15" fill="rgb(218,126,18)"/><text x="581.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:106) (1 samples, 0.30%)</title><rect x="578" y="964" width="4" height="15" fill="rgb(239,187,16)"/><text x="581.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="578" y="980" width="4" height="15" fill="rgb(245,215,5)"/><text x="581.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="578" y="996" width="4" height="15" fill="rgb(241,62,53)"/><text x="581.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="578" y="1012" width="4" height="15" fill="rgb(240,84,9)"/><text x="581.00" y="1022.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.30%)</title><rect x="578" y="1028" width="4" height="15" fill="rgb(241,208,6)"/><text x="581.00" y="1038.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:561) (1 samples, 0.30%)</title><rect x="578" y="1044" width="4" height="15" fill="rgb(236,154,43)"/><text x="581.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.30%)</title><rect x="582" y="388" width="3" height="15" fill="rgb(242,172,31)"/><text x="585.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="582" y="404" width="3" height="15" fill="rgb(218,5,50)"/><text x="585.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="582" y="420" width="3" height="15" fill="rgb(234,13,34)"/><text x="585.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="582" y="436" width="3" height="15" fill="rgb(231,169,47)"/><text x="585.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="582" y="452" width="3" height="15" fill="rgb(217,221,41)"/><text x="585.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="582" y="468" width="3" height="15" fill="rgb(251,182,2)"/><text x="585.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.30%)</title><rect x="582" y="484" width="3" height="15" fill="rgb(210,83,1)"/><text x="585.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.30%)</title><rect x="582" y="500" width="3" height="15" fill="rgb(232,18,0)"/><text x="585.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.30%)</title><rect x="582" y="516" width="3" height="15" fill="rgb(237,56,19)"/><text x="585.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.30%)</title><rect x="582" y="532" width="3" height="15" fill="rgb(217,155,0)"/><text x="585.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.30%)</title><rect x="582" y="548" width="3" height="15" fill="rgb(229,53,28)"/><text x="585.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.30%)</title><rect x="582" y="564" width="3" height="15" fill="rgb(241,146,4)"/><text x="585.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.30%)</title><rect x="582" y="580" width="3" height="15" fill="rgb(236,11,10)"/><text x="585.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.30%)</title><rect x="582" y="596" width="3" height="15" fill="rgb(219,181,10)"/><text x="585.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.30%)</title><rect x="582" y="612" width="3" height="15" fill="rgb(219,41,20)"/><text x="585.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.30%)</title><rect x="582" y="628" width="3" height="15" fill="rgb(208,142,17)"/><text x="585.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.30%)</title><rect x="582" y="644" width="3" height="15" fill="rgb(227,157,12)"/><text x="585.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.30%)</title><rect x="582" y="660" width="3" height="15" fill="rgb(242,145,51)"/><text x="585.00" y="670.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.30%)</title><rect x="582" y="676" width="3" height="15" fill="rgb(217,150,47)"/><text x="585.00" y="686.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.30%)</title><rect x="582" y="692" width="3" height="15" fill="rgb(231,7,48)"/><text x="585.00" y="702.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.30%)</title><rect x="582" y="708" width="3" height="15" fill="rgb(240,174,2)"/><text x="585.00" y="718.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.30%)</title><rect x="582" y="724" width="3" height="15" fill="rgb(247,201,25)"/><text x="585.00" y="734.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.30%)</title><rect x="582" y="740" width="3" height="15" fill="rgb(225,166,48)"/><text x="585.00" y="750.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.30%)</title><rect x="582" y="756" width="3" height="15" fill="rgb(225,14,5)"/><text x="585.00" y="766.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.30%)</title><rect x="582" y="772" width="3" height="15" fill="rgb(225,213,35)"/><text x="585.00" y="782.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.30%)</title><rect x="582" y="788" width="3" height="15" fill="rgb(211,215,26)"/><text x="585.00" y="798.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.30%)</title><rect x="582" y="804" width="3" height="15" fill="rgb(250,0,42)"/><text x="585.00" y="814.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.30%)</title><rect x="582" y="820" width="3" height="15" fill="rgb(232,188,49)"/><text x="585.00" y="830.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.30%)</title><rect x="582" y="836" width="3" height="15" fill="rgb(227,152,45)"/><text x="585.00" y="846.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.30%)</title><rect x="582" y="852" width="3" height="15" fill="rgb(222,177,40)"/><text x="585.00" y="862.50"></text></g><g><title>parse_postfix (jinja2/parser.py:676) (1 samples, 0.30%)</title><rect x="582" y="868" width="3" height="15" fill="rgb(220,84,7)"/><text x="585.00" y="878.50"></text></g><g><title>parse_call (jinja2/parser.py:798) (1 samples, 0.30%)</title><rect x="582" y="884" width="3" height="15" fill="rgb(226,49,10)"/><text x="585.00" y="894.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:28) (2 samples, 0.60%)</title><rect x="582" y="84" width="7" height="15" fill="rgb(224,170,13)"/><text x="585.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.60%)</title><rect x="582" y="100" width="7" height="15" fill="rgb(235,105,23)"/><text x="585.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.60%)</title><rect x="582" y="116" width="7" height="15" fill="rgb(238,28,14)"/><text x="585.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.60%)</title><rect x="582" y="132" width="7" height="15" fill="rgb(230,159,28)"/><text x="585.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.60%)</title><rect x="582" y="148" width="7" height="15" fill="rgb(238,50,24)"/><text x="585.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.60%)</title><rect x="582" y="164" width="7" height="15" fill="rgb(218,206,14)"/><text x="585.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.60%)</title><rect x="582" y="180" width="7" height="15" fill="rgb(246,210,7)"/><text x="585.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.60%)</title><rect x="582" y="196" width="7" height="15" fill="rgb(219,129,19)"/><text x="585.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="582" y="212" width="7" height="15" fill="rgb(242,228,6)"/><text x="585.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="582" y="228" width="7" height="15" fill="rgb(232,186,52)"/><text x="585.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="582" y="244" width="7" height="15" fill="rgb(232,129,24)"/><text x="585.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="582" y="260" width="7" height="15" fill="rgb(205,85,4)"/><text x="585.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="582" y="276" width="7" height="15" fill="rgb(243,202,25)"/><text x="585.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.60%)</title><rect x="582" y="292" width="7" height="15" fill="rgb(244,61,30)"/><text x="585.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="582" y="308" width="7" height="15" fill="rgb(214,11,25)"/><text x="585.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="582" y="324" width="7" height="15" fill="rgb(221,24,15)"/><text x="585.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="582" y="340" width="7" height="15" fill="rgb(212,136,50)"/><text x="585.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="582" y="356" width="7" height="15" fill="rgb(241,60,12)"/><text x="585.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="582" y="372" width="7" height="15" fill="rgb(217,154,7)"/><text x="585.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.30%)</title><rect x="585" y="388" width="4" height="15" fill="rgb(243,166,48)"/><text x="588.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.30%)</title><rect x="585" y="404" width="4" height="15" fill="rgb(240,43,23)"/><text x="588.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="585" y="420" width="4" height="15" fill="rgb(244,88,44)"/><text x="588.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="585" y="436" width="4" height="15" fill="rgb(209,58,34)"/><text x="588.00" y="446.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.30%)</title><rect x="585" y="452" width="4" height="15" fill="rgb(210,89,32)"/><text x="588.00" y="462.50"></text></g><g><title>new_context (jinja2/runtime.py:67) (1 samples, 0.30%)</title><rect x="585" y="468" width="4" height="15" fill="rgb(228,152,19)"/><text x="588.00" y="478.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.30%)</title><rect x="610" y="164" width="4" height="15" fill="rgb(214,142,7)"/><text x="613.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.30%)</title><rect x="614" y="164" width="3" height="15" fill="rgb(245,60,50)"/><text x="617.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.30%)</title><rect x="617" y="164" width="4" height="15" fill="rgb(227,144,35)"/><text x="620.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (2 samples, 0.60%)</title><rect x="631" y="180" width="8" height="15" fill="rgb(210,184,27)"/><text x="634.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 2.71%)</title><rect x="639" y="180" width="32" height="15" fill="rgb(229,134,9)"/><text x="642.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.90%)</title><rect x="660" y="196" width="11" height="15" fill="rgb(243,70,53)"/><text x="663.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.30%)</title><rect x="688" y="244" width="4" height="15" fill="rgb(240,55,23)"/><text x="691.00" y="254.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.30%)</title><rect x="692" y="244" width="3" height="15" fill="rgb(217,177,42)"/><text x="695.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.30%)</title><rect x="692" y="260" width="3" height="15" fill="rgb(226,56,40)"/><text x="695.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.30%)</title><rect x="695" y="244" width="4" height="15" fill="rgb(221,49,38)"/><text x="698.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1246) (1 samples, 0.30%)</title><rect x="695" y="260" width="4" height="15" fill="rgb(247,223,15)"/><text x="698.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.30%)</title><rect x="699" y="260" width="4" height="15" fill="rgb(245,78,40)"/><text x="702.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.30%)</title><rect x="699" y="276" width="4" height="15" fill="rgb(219,214,14)"/><text x="702.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.30%)</title><rect x="699" y="292" width="4" height="15" fill="rgb(227,4,1)"/><text x="702.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (5 samples, 1.51%)</title><rect x="688" y="212" width="18" height="15" fill="rgb(249,169,15)"/><text x="691.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (5 samples, 1.51%)</title><rect x="688" y="228" width="18" height="15" fill="rgb(223,92,13)"/><text x="691.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.60%)</title><rect x="699" y="244" width="7" height="15" fill="rgb(231,12,42)"/><text x="702.00" y="254.50"></text></g><g><title>PyArray_CopyInto (ctors.c:2980) (1 samples, 0.30%)</title><rect x="703" y="260" width="3" height="15" fill="rgb(225,137,22)"/><text x="706.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.81%)</title><rect x="688" y="196" width="22" height="15" fill="rgb(219,76,39)"/><text x="691.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.30%)</title><rect x="706" y="212" width="4" height="15" fill="rgb(246,153,10)"/><text x="709.00" y="222.50"></text></g><g><title>0x7f612057a74d (libc-2.29.so) (1 samples, 0.30%)</title><rect x="731" y="292" width="4" height="15" fill="rgb(237,190,16)"/><text x="734.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (3 samples, 0.90%)</title><rect x="727" y="260" width="11" height="15" fill="rgb(247,168,7)"/><text x="730.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (3 samples, 0.90%)</title><rect x="727" y="276" width="11" height="15" fill="rgb(236,187,48)"/><text x="730.00" y="286.50"></text></g><g><title>0x7f612057a763 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="735" y="292" width="3" height="15" fill="rgb(238,135,36)"/><text x="738.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.60%)</title><rect x="738" y="260" width="7" height="15" fill="rgb(224,191,5)"/><text x="741.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (3 samples, 0.90%)</title><rect x="745" y="388" width="11" height="15" fill="rgb(210,136,5)"/><text x="748.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="752" y="404" width="4" height="15" fill="rgb(225,204,48)"/><text x="755.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (7 samples, 2.11%)</title><rect x="745" y="308" width="25" height="15" fill="rgb(234,0,28)"/><text x="748.00" y="318.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (7 samples, 2.11%)</title><rect x="745" y="324" width="25" height="15" fill="rgb(235,144,19)"/><text x="748.00" y="334.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (7 samples, 2.11%)</title><rect x="745" y="340" width="25" height="15" fill="rgb(214,64,38)"/><text x="748.00" y="350.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (7 samples, 2.11%)</title><rect x="745" y="356" width="25" height="15" fill="rgb(210,101,54)"/><text x="748.00" y="366.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (7 samples, 2.11%)</title><rect x="745" y="372" width="25" height="15" fill="rgb(218,22,39)"/><text x="748.00" y="382.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (4 samples, 1.20%)</title><rect x="756" y="388" width="14" height="15" fill="rgb(236,20,29)"/><text x="759.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.30%)</title><rect x="770" y="324" width="4" height="15" fill="rgb(239,31,14)"/><text x="773.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.60%)</title><rect x="774" y="340" width="7" height="15" fill="rgb(228,227,2)"/><text x="777.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.60%)</title><rect x="774" y="356" width="7" height="15" fill="rgb(215,132,35)"/><text x="777.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.30%)</title><rect x="777" y="372" width="4" height="15" fill="rgb(246,138,9)"/><text x="780.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.30%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(219,209,12)"/><text x="780.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.30%)</title><rect x="777" y="404" width="4" height="15" fill="rgb(237,212,14)"/><text x="780.00" y="414.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.30%)</title><rect x="781" y="388" width="3" height="15" fill="rgb(217,211,0)"/><text x="784.00" y="398.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.30%)</title><rect x="784" y="388" width="4" height="15" fill="rgb(229,219,45)"/><text x="787.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.30%)</title><rect x="784" y="404" width="4" height="15" fill="rgb(249,87,31)"/><text x="787.00" y="414.50"></text></g><g><title>0x7f6120584d53 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="784" y="420" width="4" height="15" fill="rgb(211,199,47)"/><text x="787.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.30%)</title><rect x="788" y="420" width="3" height="15" fill="rgb(211,122,47)"/><text x="791.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.30%)</title><rect x="788" y="436" width="3" height="15" fill="rgb(242,228,34)"/><text x="791.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.30%)</title><rect x="788" y="452" width="3" height="15" fill="rgb(253,203,48)"/><text x="791.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (4 samples, 1.20%)</title><rect x="781" y="356" width="14" height="15" fill="rgb(231,200,41)"/><text x="784.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (4 samples, 1.20%)</title><rect x="781" y="372" width="14" height="15" fill="rgb(217,24,23)"/><text x="784.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.60%)</title><rect x="788" y="388" width="7" height="15" fill="rgb(209,71,24)"/><text x="791.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.60%)</title><rect x="788" y="404" width="7" height="15" fill="rgb(223,69,37)"/><text x="791.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.30%)</title><rect x="791" y="420" width="4" height="15" fill="rgb(211,78,29)"/><text x="794.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:490) (1 samples, 0.30%)</title><rect x="795" y="356" width="4" height="15" fill="rgb(246,112,28)"/><text x="798.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:390) (1 samples, 0.30%)</title><rect x="799" y="372" width="3" height="15" fill="rgb(229,134,43)"/><text x="802.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.30%)</title><rect x="802" y="404" width="4" height="15" fill="rgb(230,225,23)"/><text x="805.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3896) (1 samples, 0.30%)</title><rect x="802" y="420" width="4" height="15" fill="rgb(218,138,42)"/><text x="805.00" y="430.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 5.42%)</title><rect x="745" y="276" width="64" height="15" fill="rgb(224,147,17)"/><text x="748.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 5.42%)</title><rect x="745" y="292" width="64" height="15" fill="rgb(230,211,23)"/><text x="748.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 3.31%)</title><rect x="770" y="308" width="39" height="15" fill="rgb(205,196,19)"/><text x="773.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 3.01%)</title><rect x="774" y="324" width="35" height="15" fill="rgb(239,46,19)"/><text x="777.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.41%)</title><rect x="781" y="340" width="28" height="15" fill="rgb(222,53,10)"/><text x="784.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.90%)</title><rect x="799" y="356" width="10" height="15" fill="rgb(247,196,47)"/><text x="802.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.60%)</title><rect x="802" y="372" width="7" height="15" fill="rgb(214,108,16)"/><text x="805.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.60%)</title><rect x="802" y="388" width="7" height="15" fill="rgb(238,16,26)"/><text x="805.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.30%)</title><rect x="806" y="404" width="3" height="15" fill="rgb(213,204,45)"/><text x="809.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.30%)</title><rect x="806" y="420" width="3" height="15" fill="rgb(217,154,22)"/><text x="809.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.30%)</title><rect x="806" y="436" width="3" height="15" fill="rgb(216,118,3)"/><text x="809.00" y="446.50"></text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.72%)</title><rect x="745" y="260" width="68" height="15" fill="rgb(213,51,52)"/><text x="748.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.30%)</title><rect x="809" y="276" width="4" height="15" fill="rgb(209,228,41)"/><text x="812.00" y="286.50"></text></g><g><title>0x7f6120585134 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="809" y="292" width="4" height="15" fill="rgb(206,171,27)"/><text x="812.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="813" y="276" width="3" height="15" fill="rgb(249,73,26)"/><text x="816.00" y="286.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c:589) (1 samples, 0.30%)</title><rect x="813" y="292" width="3" height="15" fill="rgb(225,191,46)"/><text x="816.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (28 samples, 8.43%)</title><rect x="720" y="244" width="100" height="15" fill="rgb(229,178,22)"/><text x="723.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.60%)</title><rect x="813" y="260" width="7" height="15" fill="rgb(233,3,24)"/><text x="816.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="816" y="276" width="4" height="15" fill="rgb(219,210,30)"/><text x="819.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.30%)</title><rect x="816" y="292" width="4" height="15" fill="rgb(252,173,50)"/><text x="819.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="816" y="308" width="4" height="15" fill="rgb(214,15,12)"/><text x="819.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="816" y="324" width="4" height="15" fill="rgb(225,154,22)"/><text x="819.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.30%)</title><rect x="816" y="340" width="4" height="15" fill="rgb(218,141,25)"/><text x="819.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.30%)</title><rect x="816" y="356" width="4" height="15" fill="rgb(208,208,49)"/><text x="819.00" y="366.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.30%)</title><rect x="816" y="372" width="4" height="15" fill="rgb(213,156,10)"/><text x="819.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="823" y="260" width="4" height="15" fill="rgb(232,127,48)"/><text x="826.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(250,97,53)"/><text x="826.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="823" y="292" width="4" height="15" fill="rgb(250,10,51)"/><text x="826.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:39) (1 samples, 0.30%)</title><rect x="823" y="308" width="4" height="15" fill="rgb(229,119,53)"/><text x="826.00" y="318.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.30%)</title><rect x="827" y="292" width="4" height="15" fill="rgb(250,61,39)"/><text x="830.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.30%)</title><rect x="827" y="308" width="4" height="15" fill="rgb(219,54,36)"/><text x="830.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.30%)</title><rect x="827" y="324" width="4" height="15" fill="rgb(213,3,9)"/><text x="830.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.60%)</title><rect x="827" y="276" width="7" height="15" fill="rgb(233,132,34)"/><text x="830.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.30%)</title><rect x="831" y="292" width="3" height="15" fill="rgb(241,21,17)"/><text x="834.00" y="302.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.30%)</title><rect x="831" y="308" width="3" height="15" fill="rgb(246,82,34)"/><text x="834.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.30%)</title><rect x="834" y="276" width="4" height="15" fill="rgb(213,101,37)"/><text x="837.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.30%)</title><rect x="834" y="292" width="4" height="15" fill="rgb(218,36,25)"/><text x="837.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.30%)</title><rect x="834" y="308" width="4" height="15" fill="rgb(213,65,17)"/><text x="837.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.30%)</title><rect x="838" y="324" width="3" height="15" fill="rgb(244,127,46)"/><text x="841.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="841" y="324" width="4" height="15" fill="rgb(205,177,28)"/><text x="844.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.30%)</title><rect x="845" y="324" width="3" height="15" fill="rgb(220,52,40)"/><text x="848.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.20%)</title><rect x="838" y="308" width="14" height="15" fill="rgb(241,212,38)"/><text x="841.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="848" y="324" width="4" height="15" fill="rgb(221,24,48)"/><text x="851.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.30%)</title><rect x="848" y="340" width="4" height="15" fill="rgb(222,35,26)"/><text x="851.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.51%)</title><rect x="838" y="276" width="17" height="15" fill="rgb(250,178,8)"/><text x="841.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.51%)</title><rect x="838" y="292" width="17" height="15" fill="rgb(216,134,18)"/><text x="841.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1558) (1 samples, 0.30%)</title><rect x="852" y="308" width="3" height="15" fill="rgb(248,83,29)"/><text x="855.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.71%)</title><rect x="827" y="260" width="32" height="15" fill="rgb(245,95,6)"/><text x="830.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3279) (1 samples, 0.30%)</title><rect x="855" y="276" width="4" height="15" fill="rgb(242,28,26)"/><text x="858.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.30%)</title><rect x="859" y="260" width="4" height="15" fill="rgb(220,6,13)"/><text x="862.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.30%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(225,185,16)"/><text x="866.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.30%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(215,42,10)"/><text x="866.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (45 samples, 13.55%)</title><rect x="710" y="196" width="160" height="15" fill="rgb(245,208,23)"/><text x="713.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 13.55%)</title><rect x="710" y="212" width="160" height="15" fill="rgb(205,143,54)"/><text x="713.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (45 samples, 13.55%)</title><rect x="710" y="228" width="160" height="15" fill="rgb(221,153,41)"/><text x="713.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (14 samples, 4.22%)</title><rect x="820" y="244" width="50" height="15" fill="rgb(207,88,12)"/><text x="823.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.30%)</title><rect x="866" y="260" width="4" height="15" fill="rgb(212,175,50)"/><text x="869.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.30%)</title><rect x="884" y="276" width="3" height="15" fill="rgb(252,206,12)"/><text x="887.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.30%)</title><rect x="884" y="292" width="3" height="15" fill="rgb(209,129,52)"/><text x="887.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.30%)</title><rect x="884" y="308" width="3" height="15" fill="rgb(244,51,41)"/><text x="887.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.30%)</title><rect x="884" y="324" width="3" height="15" fill="rgb(245,73,44)"/><text x="887.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.30%)</title><rect x="884" y="340" width="3" height="15" fill="rgb(252,121,47)"/><text x="887.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.30%)</title><rect x="887" y="324" width="4" height="15" fill="rgb(235,215,15)"/><text x="890.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.30%)</title><rect x="887" y="340" width="4" height="15" fill="rgb(215,65,19)"/><text x="890.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="887" y="356" width="4" height="15" fill="rgb(248,147,8)"/><text x="890.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.30%)</title><rect x="887" y="372" width="4" height="15" fill="rgb(243,223,50)"/><text x="890.00" y="382.50"></text></g><g><title>gemv (cblasfuncs.c:68) (1 samples, 0.30%)</title><rect x="891" y="340" width="4" height="15" fill="rgb(226,90,10)"/><text x="894.00" y="350.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.51%)</title><rect x="887" y="292" width="18" height="15" fill="rgb(221,44,53)"/><text x="890.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.51%)</title><rect x="887" y="308" width="18" height="15" fill="rgb(216,61,3)"/><text x="890.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (4 samples, 1.20%)</title><rect x="891" y="324" width="14" height="15" fill="rgb(211,200,32)"/><text x="894.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (3 samples, 0.90%)</title><rect x="895" y="340" width="10" height="15" fill="rgb(241,92,28)"/><text x="898.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="895" y="356" width="10" height="15" fill="rgb(214,215,42)"/><text x="898.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="902" y="372" width="3" height="15" fill="rgb(247,142,19)"/><text x="905.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="902" y="388" width="3" height="15" fill="rgb(223,73,18)"/><text x="905.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (11 samples, 3.31%)</title><rect x="870" y="228" width="39" height="15" fill="rgb(240,188,35)"/><text x="873.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 3.01%)</title><rect x="873" y="244" width="36" height="15" fill="rgb(206,47,41)"/><text x="876.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 2.41%)</title><rect x="880" y="260" width="29" height="15" fill="rgb(241,142,49)"/><text x="883.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.81%)</title><rect x="887" y="276" width="22" height="15" fill="rgb(231,179,8)"/><text x="890.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2233) (1 samples, 0.30%)</title><rect x="905" y="292" width="4" height="15" fill="rgb(206,159,35)"/><text x="908.00" y="302.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.30%)</title><rect x="905" y="308" width="4" height="15" fill="rgb(209,2,29)"/><text x="908.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3147) (1 samples, 0.30%)</title><rect x="909" y="260" width="3" height="15" fill="rgb(231,2,33)"/><text x="912.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.30%)</title><rect x="912" y="260" width="4" height="15" fill="rgb(229,193,48)"/><text x="915.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.60%)</title><rect x="916" y="292" width="7" height="15" fill="rgb(230,212,7)"/><text x="919.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (2 samples, 0.60%)</title><rect x="916" y="308" width="7" height="15" fill="rgb(226,43,9)"/><text x="919.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 1.51%)</title><rect x="909" y="228" width="17" height="15" fill="rgb(212,6,6)"/><text x="912.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.51%)</title><rect x="909" y="244" width="17" height="15" fill="rgb(222,12,34)"/><text x="912.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.90%)</title><rect x="916" y="260" width="10" height="15" fill="rgb(247,173,40)"/><text x="919.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.90%)</title><rect x="916" y="276" width="10" height="15" fill="rgb(237,146,23)"/><text x="919.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="923" y="292" width="3" height="15" fill="rgb(241,75,54)"/><text x="926.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="923" y="308" width="3" height="15" fill="rgb(248,84,8)"/><text x="926.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="923" y="324" width="3" height="15" fill="rgb(218,180,6)"/><text x="926.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:587) (1 samples, 0.30%)</title><rect x="923" y="340" width="3" height="15" fill="rgb(246,180,50)"/><text x="926.00" y="350.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h:439) (1 samples, 0.30%)</title><rect x="923" y="356" width="3" height="15" fill="rgb(216,190,40)"/><text x="926.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="926" y="244" width="4" height="15" fill="rgb(230,29,14)"/><text x="929.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="926" y="260" width="4" height="15" fill="rgb(220,209,17)"/><text x="929.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="926" y="276" width="4" height="15" fill="rgb(253,170,43)"/><text x="929.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.30%)</title><rect x="926" y="292" width="4" height="15" fill="rgb(210,136,28)"/><text x="929.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="930" y="260" width="4" height="15" fill="rgb(223,18,12)"/><text x="933.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.30%)</title><rect x="930" y="276" width="4" height="15" fill="rgb(238,0,7)"/><text x="933.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:818) (1 samples, 0.30%)</title><rect x="930" y="292" width="4" height="15" fill="rgb(212,76,35)"/><text x="933.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (3 samples, 0.90%)</title><rect x="926" y="228" width="11" height="15" fill="rgb(232,135,42)"/><text x="929.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.60%)</title><rect x="930" y="244" width="7" height="15" fill="rgb(228,61,32)"/><text x="933.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="934" y="260" width="3" height="15" fill="rgb(216,51,17)"/><text x="937.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.30%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(209,89,25)"/><text x="937.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.30%)</title><rect x="934" y="292" width="3" height="15" fill="rgb(241,146,20)"/><text x="937.00" y="302.50"></text></g><g><title>0x7f610296933d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="934" y="308" width="3" height="15" fill="rgb(243,151,46)"/><text x="937.00" y="318.50"></text></g><g><title>0x7f610298b214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="934" y="324" width="3" height="15" fill="rgb(248,20,37)"/><text x="937.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.30%)</title><rect x="934" y="340" width="3" height="15" fill="rgb(209,106,25)"/><text x="937.00" y="350.50"></text></g><g><title>0x7f61206e3e2f (libm-2.29.so) (1 samples, 0.30%)</title><rect x="934" y="356" width="3" height="15" fill="rgb(214,81,25)"/><text x="937.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.60%)</title><rect x="941" y="244" width="7" height="15" fill="rgb(230,34,11)"/><text x="944.00" y="254.50"></text></g><g><title>array_argmax (methods.c:297) (3 samples, 0.90%)</title><rect x="955" y="308" width="11" height="15" fill="rgb(230,30,38)"/><text x="958.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="962" y="324" width="4" height="15" fill="rgb(238,58,39)"/><text x="965.00" y="334.50"></text></g><g><title>0x7f612064213a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="962" y="340" width="4" height="15" fill="rgb(212,1,17)"/><text x="965.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.81%)</title><rect x="948" y="260" width="21" height="15" fill="rgb(254,91,15)"/><text x="951.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.51%)</title><rect x="951" y="276" width="18" height="15" fill="rgb(236,158,42)"/><text x="954.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.20%)</title><rect x="955" y="292" width="14" height="15" fill="rgb(246,129,9)"/><text x="958.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.30%)</title><rect x="966" y="308" width="3" height="15" fill="rgb(206,222,25)"/><text x="969.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.30%)</title><rect x="966" y="324" width="3" height="15" fill="rgb(234,86,52)"/><text x="969.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="966" y="340" width="3" height="15" fill="rgb(242,209,8)"/><text x="969.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="966" y="356" width="3" height="15" fill="rgb(231,90,3)"/><text x="969.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.30%)</title><rect x="966" y="372" width="3" height="15" fill="rgb(212,189,3)"/><text x="969.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (29 samples, 8.73%)</title><rect x="870" y="196" width="103" height="15" fill="rgb(249,56,29)"/><text x="873.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 8.73%)</title><rect x="870" y="212" width="103" height="15" fill="rgb(205,131,47)"/><text x="873.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (10 samples, 3.01%)</title><rect x="937" y="228" width="36" height="15" fill="rgb(245,147,43)"/><text x="940.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 2.11%)</title><rect x="948" y="244" width="25" height="15" fill="rgb(221,126,42)"/><text x="951.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:317) (1 samples, 0.30%)</title><rect x="969" y="260" width="4" height="15" fill="rgb(250,228,51)"/><text x="972.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.30%)</title><rect x="980" y="228" width="3" height="15" fill="rgb(239,6,0)"/><text x="983.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (89 samples, 26.81%)</title><rect x="671" y="180" width="316" height="15" fill="rgb(219,126,13)"/><text x="674.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 1.20%)</title><rect x="973" y="196" width="14" height="15" fill="rgb(212,19,17)"/><text x="976.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (2 samples, 0.60%)</title><rect x="980" y="212" width="7" height="15" fill="rgb(230,87,46)"/><text x="983.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.30%)</title><rect x="983" y="228" width="4" height="15" fill="rgb(228,12,17)"/><text x="986.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (4 samples, 1.20%)</title><rect x="987" y="180" width="14" height="15" fill="rgb(226,13,17)"/><text x="990.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.30%)</title><rect x="1001" y="180" width="4" height="15" fill="rgb(214,152,34)"/><text x="1004.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.90%)</title><rect x="1005" y="180" width="10" height="15" fill="rgb(250,120,17)"/><text x="1008.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (113 samples, 34.04%)</title><rect x="621" y="164" width="401" height="15" fill="rgb(248,114,47)"/><text x="624.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.60%)</title><rect x="1015" y="180" width="7" height="15" fill="rgb(211,18,46)"/><text x="1018.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:45) (130 samples, 39.16%)</title><rect x="582" y="52" width="462" height="15" fill="rgb(215,57,36)"/><text x="585.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverlibline..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:44) (130 samples, 39.16%)</title><rect x="582" y="68" width="462" height="15" fill="rgb(221,13,23)"/><text x="585.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:29) (128 samples, 38.55%)</title><rect x="589" y="84" width="455" height="15" fill="rgb(230,123,41)"/><text x="592.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:23) (128 samples, 38.55%)</title><rect x="589" y="100" width="455" height="15" fill="rgb(245,206,31)"/><text x="592.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlibline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (128 samples, 38.55%)</title><rect x="589" y="116" width="455" height="15" fill="rgb(212,154,50)"/><text x="592.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (127 samples, 38.25%)</title><rect x="592" y="132" width="452" height="15" fill="rgb(249,54,34)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (124 samples, 37.35%)</title><rect x="603" y="148" width="441" height="15" fill="rgb(222,21,43)"/><text x="606.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (6 samples, 1.81%)</title><rect x="1022" y="164" width="22" height="15" fill="rgb(205,46,43)"/><text x="1025.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.60%)</title><rect x="1037" y="180" width="7" height="15" fill="rgb(220,71,32)"/><text x="1040.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="1051" y="116" width="3" height="15" fill="rgb(242,70,51)"/><text x="1054.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.30%)</title><rect x="1051" y="132" width="3" height="15" fill="rgb(232,72,54)"/><text x="1054.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.30%)</title><rect x="1054" y="116" width="4" height="15" fill="rgb(233,42,19)"/><text x="1057.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.30%)</title><rect x="1054" y="132" width="4" height="15" fill="rgb(234,179,1)"/><text x="1057.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.30%)</title><rect x="1054" y="148" width="4" height="15" fill="rgb(218,187,11)"/><text x="1057.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.30%)</title><rect x="1072" y="196" width="4" height="15" fill="rgb(250,182,47)"/><text x="1075.00" y="206.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1083" y="244" width="3" height="15" fill="rgb(235,206,40)"/><text x="1086.00" y="254.50"></text></g><g><title>0x7f6120564900 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1083" y="260" width="3" height="15" fill="rgb(221,140,45)"/><text x="1086.00" y="270.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1086" y="244" width="4" height="15" fill="rgb(235,82,1)"/><text x="1089.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1090" y="260" width="4" height="15" fill="rgb(224,114,46)"/><text x="1093.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1090" y="276" width="4" height="15" fill="rgb(243,179,31)"/><text x="1093.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1090" y="292" width="4" height="15" fill="rgb(229,190,21)"/><text x="1093.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 1.81%)</title><rect x="1076" y="196" width="21" height="15" fill="rgb(205,196,8)"/><text x="1079.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.51%)</title><rect x="1079" y="212" width="18" height="15" fill="rgb(213,32,42)"/><text x="1082.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.20%)</title><rect x="1083" y="228" width="14" height="15" fill="rgb(225,66,48)"/><text x="1086.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1090" y="244" width="7" height="15" fill="rgb(253,179,52)"/><text x="1093.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1094" y="260" width="3" height="15" fill="rgb(211,118,36)"/><text x="1097.00" y="270.50"></text></g><g><title>0x7f60e0dcdff9 (?) (1 samples, 0.30%)</title><rect x="1108" y="212" width="3" height="15" fill="rgb(244,87,43)"/><text x="1111.00" y="222.50"></text></g><g><title>0x7f60e0dc8ef6 (?) (1 samples, 0.30%)</title><rect x="1108" y="228" width="3" height="15" fill="rgb(228,71,14)"/><text x="1111.00" y="238.50"></text></g><g><title>0x7f60e0dbd962 (?) (1 samples, 0.30%)</title><rect x="1108" y="244" width="3" height="15" fill="rgb(252,127,54)"/><text x="1111.00" y="254.50"></text></g><g><title>0x7f60e0df17a7 (?) (1 samples, 0.30%)</title><rect x="1108" y="260" width="3" height="15" fill="rgb(254,76,30)"/><text x="1111.00" y="270.50"></text></g><g><title>0x7f60e0df0f8a (?) (1 samples, 0.30%)</title><rect x="1108" y="276" width="3" height="15" fill="rgb(238,209,36)"/><text x="1111.00" y="286.50"></text></g><g><title>0x7f60e0de9f11 (?) (1 samples, 0.30%)</title><rect x="1108" y="292" width="3" height="15" fill="rgb(244,117,3)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f60e120b0ad (?) (1 samples, 0.30%)</title><rect x="1108" y="308" width="3" height="15" fill="rgb(230,78,36)"/><text x="1111.00" y="318.50"></text></g><g><title>0x7f60e120ad94 (?) (1 samples, 0.30%)</title><rect x="1108" y="324" width="3" height="15" fill="rgb(243,110,17)"/><text x="1111.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1108" y="340" width="3" height="15" fill="rgb(223,118,14)"/><text x="1111.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1108" y="356" width="3" height="15" fill="rgb(228,224,42)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1111" y="292" width="4" height="15" fill="rgb(230,203,26)"/><text x="1114.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1111" y="308" width="4" height="15" fill="rgb(233,166,35)"/><text x="1114.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1115" y="292" width="7" height="15" fill="rgb(231,169,8)"/><text x="1118.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1122" y="340" width="7" height="15" fill="rgb(238,78,15)"/><text x="1125.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1122" y="356" width="7" height="15" fill="rgb(212,222,43)"/><text x="1125.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1122" y="372" width="7" height="15" fill="rgb(211,20,13)"/><text x="1125.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1122" y="388" width="7" height="15" fill="rgb(248,73,49)"/><text x="1125.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1122" y="404" width="7" height="15" fill="rgb(240,174,13)"/><text x="1125.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1126" y="420" width="3" height="15" fill="rgb(249,139,26)"/><text x="1129.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1126" y="436" width="3" height="15" fill="rgb(222,199,7)"/><text x="1129.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1126" y="452" width="3" height="15" fill="rgb(251,181,37)"/><text x="1129.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1126" y="468" width="3" height="15" fill="rgb(252,24,47)"/><text x="1129.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1126" y="484" width="3" height="15" fill="rgb(232,3,46)"/><text x="1129.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1129" y="356" width="4" height="15" fill="rgb(247,123,7)"/><text x="1132.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1129" y="372" width="4" height="15" fill="rgb(213,42,7)"/><text x="1132.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1129" y="388" width="4" height="15" fill="rgb(233,218,5)"/><text x="1132.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1129" y="340" width="7" height="15" fill="rgb(233,15,29)"/><text x="1132.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1133" y="356" width="3" height="15" fill="rgb(254,67,14)"/><text x="1136.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1136" y="340" width="4" height="15" fill="rgb(237,43,19)"/><text x="1139.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1136" y="356" width="4" height="15" fill="rgb(207,108,10)"/><text x="1139.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1136" y="372" width="4" height="15" fill="rgb(236,55,54)"/><text x="1139.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="356" width="3" height="15" fill="rgb(235,120,13)"/><text x="1143.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="372" width="3" height="15" fill="rgb(226,135,35)"/><text x="1143.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="388" width="3" height="15" fill="rgb(211,78,21)"/><text x="1143.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="404" width="3" height="15" fill="rgb(218,73,3)"/><text x="1143.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="420" width="3" height="15" fill="rgb(206,101,52)"/><text x="1143.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="436" width="3" height="15" fill="rgb(250,32,28)"/><text x="1143.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::GetAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1140" y="452" width="3" height="15" fill="rgb(216,142,31)"/><text x="1143.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.01%)</title><rect x="1111" y="260" width="36" height="15" fill="rgb(215,193,43)"/><text x="1114.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.01%)</title><rect x="1111" y="276" width="36" height="15" fill="rgb(249,191,25)"/><text x="1114.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.11%)</title><rect x="1122" y="292" width="25" height="15" fill="rgb(226,63,47)"/><text x="1125.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.11%)</title><rect x="1122" y="308" width="25" height="15" fill="rgb(249,89,13)"/><text x="1125.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.11%)</title><rect x="1122" y="324" width="25" height="15" fill="rgb(248,201,47)"/><text x="1125.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1140" y="340" width="7" height="15" fill="rgb(234,208,2)"/><text x="1143.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1143" y="356" width="4" height="15" fill="rgb(233,38,48)"/><text x="1146.00" y="366.50"></text></g><g><title>0x7f61206e3e2f (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1143" y="372" width="4" height="15" fill="rgb(243,201,21)"/><text x="1146.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="1147" y="292" width="3" height="15" fill="rgb(222,109,17)"/><text x="1150.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="1147" y="308" width="3" height="15" fill="rgb(237,152,27)"/><text x="1150.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.60%)</title><rect x="1147" y="260" width="7" height="15" fill="rgb(211,55,2)"/><text x="1150.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.60%)</title><rect x="1147" y="276" width="7" height="15" fill="rgb(220,200,47)"/><text x="1150.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="1150" y="292" width="4" height="15" fill="rgb(225,57,20)"/><text x="1153.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.30%)</title><rect x="1150" y="308" width="4" height="15" fill="rgb(253,229,20)"/><text x="1153.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.30%)</title><rect x="1150" y="324" width="4" height="15" fill="rgb(226,3,51)"/><text x="1153.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.30%)</title><rect x="1150" y="340" width="4" height="15" fill="rgb(241,194,16)"/><text x="1153.00" y="350.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="260" width="4" height="15" fill="rgb(214,157,31)"/><text x="1157.00" y="270.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1158" y="260" width="3" height="15" fill="rgb(206,68,4)"/><text x="1161.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.52%)</title><rect x="1111" y="244" width="54" height="15" fill="rgb(224,69,24)"/><text x="1114.00" y="254.50">onnxr..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1161" y="260" width="4" height="15" fill="rgb(250,59,54)"/><text x="1164.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(226,72,31)"/><text x="1168.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(218,194,19)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(234,225,31)"/><text x="1171.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1168" y="276" width="4" height="15" fill="rgb(211,18,45)"/><text x="1171.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (29 samples, 8.73%)</title><rect x="1072" y="164" width="103" height="15" fill="rgb(240,154,13)"/><text x="1075.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (29 samples, 8.73%)</title><rect x="1072" y="180" width="103" height="15" fill="rgb(210,175,14)"/><text x="1075.00" y="190.50">run (mlprodi..</text></g><g><title>run (onnxruntime/capi/session.py:136) (22 samples, 6.63%)</title><rect x="1097" y="196" width="78" height="15" fill="rgb(250,5,51)"/><text x="1100.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.42%)</title><rect x="1111" y="212" width="64" height="15" fill="rgb(234,69,26)"/><text x="1114.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.42%)</title><rect x="1111" y="228" width="64" height="15" fill="rgb(218,149,38)"/><text x="1114.00" y="238.50">void py..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1172" y="244" width="3" height="15" fill="rgb(211,56,29)"/><text x="1175.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(222,53,18)"/><text x="1175.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (34 samples, 10.24%)</title><rect x="1065" y="132" width="121" height="15" fill="rgb(245,30,38)"/><text x="1068.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (33 samples, 9.94%)</title><rect x="1069" y="148" width="117" height="15" fill="rgb(229,195,9)"/><text x="1072.00" y="158.50">run (mlprodict..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.90%)</title><rect x="1175" y="164" width="11" height="15" fill="rgb(247,145,23)"/><text x="1178.00" y="174.50"></text></g><g><title>all (332 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,133,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:52) (41 samples, 12.35%)</title><rect x="1044" y="52" width="146" height="15" fill="rgb(221,39,40)"/><text x="1047.00" y="62.50">&lt;module&gt; (bench_Lo..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:51) (41 samples, 12.35%)</title><rect x="1044" y="68" width="146" height="15" fill="rgb(247,31,28)"/><text x="1047.00" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:29) (41 samples, 12.35%)</title><rect x="1044" y="84" width="146" height="15" fill="rgb(246,88,19)"/><text x="1047.00" y="94.50">setup_profile (ben..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py:23) (41 samples, 12.35%)</title><rect x="1044" y="100" width="146" height="15" fill="rgb(235,115,0)"/><text x="1047.00" y="110.50">profile (bench_Log..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (37 samples, 11.14%)</title><rect x="1058" y="116" width="132" height="15" fill="rgb(249,105,44)"/><text x="1061.00" y="126.50">time_predict (ml..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(247,123,22)"/><text x="1189.00" y="142.50"></text></g><g><title>0x7f6120642151 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(216,71,6)"/><text x="1189.00" y="158.50"></text></g></g></svg>