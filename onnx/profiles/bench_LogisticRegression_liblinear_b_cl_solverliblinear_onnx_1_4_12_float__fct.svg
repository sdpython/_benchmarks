<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(220,90,0)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(224,184,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(217,105,48)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(224,219,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(252,114,16)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(251,161,1)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.32%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(247,124,2)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(232,212,2)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(210,40,10)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(207,107,34)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(211,128,11)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(244,56,38)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(254,17,8)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(208,132,41)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(209,68,20)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(232,122,33)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(205,92,27)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(211,24,24)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(220,99,6)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(245,199,19)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(232,221,51)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.32%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(212,28,24)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(211,144,23)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(224,13,36)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(231,79,50)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(240,98,50)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(220,19,8)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(210,101,0)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(213,171,10)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(241,33,43)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(223,17,48)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(214,184,5)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(239,96,26)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(229,167,51)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(233,21,37)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(231,110,21)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(208,151,28)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.32%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(254,116,7)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(220,59,41)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1252" width="3" height="15" fill="rgb(231,216,44)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1268" width="3" height="15" fill="rgb(237,76,42)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1284" width="3" height="15" fill="rgb(209,145,50)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1300" width="3" height="15" fill="rgb(253,65,40)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.32%)</title><rect x="10" y="1316" width="3" height="15" fill="rgb(251,86,12)"/><text x="13.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1332" width="3" height="15" fill="rgb(212,87,30)"/><text x="13.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1348" width="3" height="15" fill="rgb(233,29,12)"/><text x="13.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1364" width="3" height="15" fill="rgb(212,12,36)"/><text x="13.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1380" width="3" height="15" fill="rgb(214,129,50)"/><text x="13.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1396" width="3" height="15" fill="rgb(222,123,46)"/><text x="13.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="10" y="1412" width="3" height="15" fill="rgb(218,119,26)"/><text x="13.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="10" y="1428" width="3" height="15" fill="rgb(214,64,48)"/><text x="13.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1444" width="3" height="15" fill="rgb(221,179,41)"/><text x="13.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1460" width="3" height="15" fill="rgb(212,212,51)"/><text x="13.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1476" width="3" height="15" fill="rgb(237,65,20)"/><text x="13.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1492" width="3" height="15" fill="rgb(245,103,54)"/><text x="13.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1508" width="3" height="15" fill="rgb(228,1,46)"/><text x="13.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="1524" width="3" height="15" fill="rgb(213,111,7)"/><text x="13.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1540" width="3" height="15" fill="rgb(220,4,35)"/><text x="13.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1556" width="3" height="15" fill="rgb(248,62,37)"/><text x="13.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1572" width="3" height="15" fill="rgb(209,157,14)"/><text x="13.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1588" width="3" height="15" fill="rgb(217,135,12)"/><text x="13.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1604" width="3" height="15" fill="rgb(233,151,8)"/><text x="13.00" y="1614.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.32%)</title><rect x="10" y="1620" width="3" height="15" fill="rgb(231,207,8)"/><text x="13.00" y="1630.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1636" width="3" height="15" fill="rgb(217,20,13)"/><text x="13.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1652" width="3" height="15" fill="rgb(244,170,35)"/><text x="13.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1668" width="3" height="15" fill="rgb(232,51,13)"/><text x="13.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1684" width="3" height="15" fill="rgb(227,27,45)"/><text x="13.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1700" width="3" height="15" fill="rgb(239,39,9)"/><text x="13.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1716" width="3" height="15" fill="rgb(254,24,33)"/><text x="13.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1732" width="3" height="15" fill="rgb(238,1,44)"/><text x="13.00" y="1742.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py) (1 samples, 0.32%)</title><rect x="10" y="1748" width="3" height="15" fill="rgb(249,188,28)"/><text x="13.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1764" width="3" height="15" fill="rgb(228,43,13)"/><text x="13.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1780" width="3" height="15" fill="rgb(213,182,16)"/><text x="13.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1796" width="3" height="15" fill="rgb(246,220,40)"/><text x="13.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="1812" width="3" height="15" fill="rgb(237,229,15)"/><text x="13.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="10" y="1828" width="3" height="15" fill="rgb(248,135,38)"/><text x="13.00" y="1838.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py) (1 samples, 0.32%)</title><rect x="10" y="1844" width="3" height="15" fill="rgb(224,173,53)"/><text x="13.00" y="1854.50"></text></g><g><title>compile (re.py) (1 samples, 0.32%)</title><rect x="10" y="1860" width="3" height="15" fill="rgb(234,194,18)"/><text x="13.00" y="1870.50"></text></g><g><title>_compile (re.py) (1 samples, 0.32%)</title><rect x="10" y="1876" width="3" height="15" fill="rgb(218,180,17)"/><text x="13.00" y="1886.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.32%)</title><rect x="10" y="1892" width="3" height="15" fill="rgb(207,60,41)"/><text x="13.00" y="1902.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1908" width="3" height="15" fill="rgb(224,176,3)"/><text x="13.00" y="1918.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1924" width="3" height="15" fill="rgb(212,100,44)"/><text x="13.00" y="1934.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1940" width="3" height="15" fill="rgb(239,43,33)"/><text x="13.00" y="1950.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1956" width="3" height="15" fill="rgb(242,149,40)"/><text x="13.00" y="1966.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1972" width="3" height="15" fill="rgb(232,204,17)"/><text x="13.00" y="1982.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="1988" width="3" height="15" fill="rgb(207,188,47)"/><text x="13.00" y="1998.50"></text></g><g><title>__len__ (sre_parse.py) (1 samples, 0.32%)</title><rect x="10" y="2004" width="3" height="15" fill="rgb(214,23,51)"/><text x="13.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1124" width="4" height="15" fill="rgb(217,221,49)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1140" width="4" height="15" fill="rgb(229,112,24)"/><text x="16.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1156" width="4" height="15" fill="rgb(233,217,24)"/><text x="16.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1172" width="4" height="15" fill="rgb(232,19,19)"/><text x="16.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1188" width="4" height="15" fill="rgb(254,124,22)"/><text x="16.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.32%)</title><rect x="13" y="1204" width="4" height="15" fill="rgb(230,16,52)"/><text x="16.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1220" width="4" height="15" fill="rgb(225,101,12)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1236" width="4" height="15" fill="rgb(208,75,48)"/><text x="16.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1252" width="4" height="15" fill="rgb(248,49,24)"/><text x="16.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1268" width="4" height="15" fill="rgb(211,128,23)"/><text x="16.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1284" width="4" height="15" fill="rgb(248,12,40)"/><text x="16.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.32%)</title><rect x="13" y="1300" width="4" height="15" fill="rgb(227,227,16)"/><text x="16.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1316" width="4" height="15" fill="rgb(211,160,25)"/><text x="16.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1332" width="4" height="15" fill="rgb(247,128,6)"/><text x="16.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1348" width="4" height="15" fill="rgb(226,147,54)"/><text x="16.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1364" width="4" height="15" fill="rgb(234,28,32)"/><text x="16.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1380" width="4" height="15" fill="rgb(243,62,31)"/><text x="16.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1396" width="4" height="15" fill="rgb(215,137,20)"/><text x="16.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1412" width="4" height="15" fill="rgb(229,25,7)"/><text x="16.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.32%)</title><rect x="13" y="1428" width="4" height="15" fill="rgb(221,209,11)"/><text x="16.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1444" width="4" height="15" fill="rgb(237,83,28)"/><text x="16.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1460" width="4" height="15" fill="rgb(226,153,17)"/><text x="16.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1476" width="4" height="15" fill="rgb(238,92,12)"/><text x="16.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1492" width="4" height="15" fill="rgb(243,225,15)"/><text x="16.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1508" width="4" height="15" fill="rgb(237,117,1)"/><text x="16.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1524" width="4" height="15" fill="rgb(233,68,53)"/><text x="16.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1540" width="4" height="15" fill="rgb(253,84,53)"/><text x="16.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.32%)</title><rect x="13" y="1556" width="4" height="15" fill="rgb(232,120,5)"/><text x="16.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1572" width="4" height="15" fill="rgb(241,148,7)"/><text x="16.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1588" width="4" height="15" fill="rgb(207,187,14)"/><text x="16.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1604" width="4" height="15" fill="rgb(229,6,10)"/><text x="16.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1620" width="4" height="15" fill="rgb(242,57,29)"/><text x="16.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1636" width="4" height="15" fill="rgb(220,202,26)"/><text x="16.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/basic.py) (1 samples, 0.32%)</title><rect x="13" y="1652" width="4" height="15" fill="rgb(244,153,1)"/><text x="16.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1668" width="4" height="15" fill="rgb(231,129,35)"/><text x="16.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1684" width="4" height="15" fill="rgb(207,228,25)"/><text x="16.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1700" width="4" height="15" fill="rgb(205,182,1)"/><text x="16.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="13" y="1716" width="4" height="15" fill="rgb(247,126,32)"/><text x="16.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="13" y="1732" width="4" height="15" fill="rgb(217,215,53)"/><text x="16.00" y="1742.50"></text></g><g><title>0x7f3abadc7101 (?) (1 samples, 0.32%)</title><rect x="13" y="1748" width="4" height="15" fill="rgb(208,196,4)"/><text x="16.00" y="1758.50"></text></g><g><title>0x7f3abadc4f89 (?) (1 samples, 0.32%)</title><rect x="13" y="1764" width="4" height="15" fill="rgb(242,91,41)"/><text x="16.00" y="1774.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py) (1 samples, 0.32%)</title><rect x="17" y="1556" width="4" height="15" fill="rgb(210,175,29)"/><text x="20.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1572" width="4" height="15" fill="rgb(230,3,34)"/><text x="20.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1588" width="4" height="15" fill="rgb(245,123,54)"/><text x="20.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1604" width="4" height="15" fill="rgb(216,175,50)"/><text x="20.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="17" y="1620" width="4" height="15" fill="rgb(233,56,5)"/><text x="20.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1636" width="4" height="15" fill="rgb(235,26,43)"/><text x="20.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog_ip.py) (1 samples, 0.32%)</title><rect x="17" y="1652" width="4" height="15" fill="rgb(212,56,16)"/><text x="20.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1668" width="4" height="15" fill="rgb(222,112,29)"/><text x="20.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1684" width="4" height="15" fill="rgb(213,195,25)"/><text x="20.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="17" y="1700" width="4" height="15" fill="rgb(215,120,31)"/><text x="20.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="17" y="1716" width="4" height="15" fill="rgb(218,147,44)"/><text x="20.00" y="1726.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="17" y="1732" width="4" height="15" fill="rgb(246,121,28)"/><text x="20.00" y="1742.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="17" y="1748" width="4" height="15" fill="rgb(209,10,10)"/><text x="20.00" y="1758.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="17" y="1764" width="4" height="15" fill="rgb(227,35,13)"/><text x="20.00" y="1774.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (2 samples, 0.65%)</title><rect x="21" y="1556" width="8" height="15" fill="rgb(230,47,24)"/><text x="24.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1572" width="4" height="15" fill="rgb(208,203,15)"/><text x="28.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1588" width="4" height="15" fill="rgb(210,200,53)"/><text x="28.00" y="1598.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="25" y="1604" width="4" height="15" fill="rgb(210,156,50)"/><text x="28.00" y="1614.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1620" width="4" height="15" fill="rgb(223,123,9)"/><text x="28.00" y="1630.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1636" width="4" height="15" fill="rgb(223,209,14)"/><text x="28.00" y="1646.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1652" width="4" height="15" fill="rgb(210,61,12)"/><text x="28.00" y="1662.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1668" width="4" height="15" fill="rgb(235,151,40)"/><text x="28.00" y="1678.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="25" y="1684" width="4" height="15" fill="rgb(249,54,49)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1252" width="15" height="15" fill="rgb(216,40,36)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1268" width="15" height="15" fill="rgb(226,118,6)"/><text x="20.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1284" width="15" height="15" fill="rgb(237,211,17)"/><text x="20.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="17" y="1300" width="15" height="15" fill="rgb(237,2,43)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1316" width="15" height="15" fill="rgb(242,32,33)"/><text x="20.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (4 samples, 1.29%)</title><rect x="17" y="1332" width="15" height="15" fill="rgb(216,55,3)"/><text x="20.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1348" width="15" height="15" fill="rgb(221,73,10)"/><text x="20.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1364" width="15" height="15" fill="rgb(214,199,20)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1380" width="15" height="15" fill="rgb(227,209,34)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1396" width="15" height="15" fill="rgb(248,35,17)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1412" width="15" height="15" fill="rgb(218,215,31)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="17" y="1428" width="15" height="15" fill="rgb(219,152,51)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1444" width="15" height="15" fill="rgb(242,130,34)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (4 samples, 1.29%)</title><rect x="17" y="1460" width="15" height="15" fill="rgb(220,17,33)"/><text x="20.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1476" width="15" height="15" fill="rgb(246,71,20)"/><text x="20.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1492" width="15" height="15" fill="rgb(254,185,26)"/><text x="20.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1508" width="15" height="15" fill="rgb(213,76,52)"/><text x="20.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="17" y="1524" width="15" height="15" fill="rgb(219,68,38)"/><text x="20.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="17" y="1540" width="15" height="15" fill="rgb(251,152,31)"/><text x="20.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.32%)</title><rect x="29" y="1556" width="3" height="15" fill="rgb(212,193,7)"/><text x="32.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1572" width="3" height="15" fill="rgb(221,61,32)"/><text x="32.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1588" width="3" height="15" fill="rgb(235,225,9)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1604" width="3" height="15" fill="rgb(222,76,38)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1620" width="3" height="15" fill="rgb(218,119,16)"/><text x="32.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1636" width="3" height="15" fill="rgb(219,22,7)"/><text x="32.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="29" y="1652" width="3" height="15" fill="rgb(252,17,24)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1668" width="3" height="15" fill="rgb(251,188,46)"/><text x="32.00" y="1678.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py) (1 samples, 0.32%)</title><rect x="29" y="1684" width="3" height="15" fill="rgb(242,227,14)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1700" width="3" height="15" fill="rgb(206,184,25)"/><text x="32.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1716" width="3" height="15" fill="rgb(237,146,1)"/><text x="32.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="29" y="1732" width="3" height="15" fill="rgb(209,1,32)"/><text x="32.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="29" y="1748" width="3" height="15" fill="rgb(250,63,4)"/><text x="32.00" y="1758.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="29" y="1764" width="3" height="15" fill="rgb(253,24,34)"/><text x="32.00" y="1774.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="29" y="1780" width="3" height="15" fill="rgb(217,218,16)"/><text x="32.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="340" width="26" height="15" fill="rgb(221,229,49)"/><text x="13.00" y="350.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="356" width="26" height="15" fill="rgb(227,167,9)"/><text x="13.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="372" width="26" height="15" fill="rgb(206,38,21)"/><text x="13.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="388" width="26" height="15" fill="rgb(208,126,10)"/><text x="13.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.27%)</title><rect x="10" y="404" width="26" height="15" fill="rgb(246,119,11)"/><text x="13.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="420" width="26" height="15" fill="rgb(226,143,7)"/><text x="13.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 2.27%)</title><rect x="10" y="436" width="26" height="15" fill="rgb(253,113,20)"/><text x="13.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="452" width="26" height="15" fill="rgb(213,88,15)"/><text x="13.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="468" width="26" height="15" fill="rgb(220,193,27)"/><text x="13.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="484" width="26" height="15" fill="rgb(222,5,11)"/><text x="13.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.27%)</title><rect x="10" y="500" width="26" height="15" fill="rgb(252,2,11)"/><text x="13.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="516" width="26" height="15" fill="rgb(237,76,22)"/><text x="13.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 2.27%)</title><rect x="10" y="532" width="26" height="15" fill="rgb(247,224,13)"/><text x="13.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="548" width="26" height="15" fill="rgb(209,66,52)"/><text x="13.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="564" width="26" height="15" fill="rgb(229,13,4)"/><text x="13.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="580" width="26" height="15" fill="rgb(229,83,34)"/><text x="13.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.27%)</title><rect x="10" y="596" width="26" height="15" fill="rgb(246,104,36)"/><text x="13.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.27%)</title><rect x="10" y="612" width="26" height="15" fill="rgb(241,0,7)"/><text x="13.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (6 samples, 1.94%)</title><rect x="13" y="628" width="23" height="15" fill="rgb(214,121,27)"/><text x="16.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="644" width="23" height="15" fill="rgb(253,150,9)"/><text x="16.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="660" width="23" height="15" fill="rgb(235,202,30)"/><text x="16.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="676" width="23" height="15" fill="rgb(217,13,16)"/><text x="16.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.94%)</title><rect x="13" y="692" width="23" height="15" fill="rgb(210,127,18)"/><text x="16.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="708" width="23" height="15" fill="rgb(232,214,13)"/><text x="16.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py) (6 samples, 1.94%)</title><rect x="13" y="724" width="23" height="15" fill="rgb(207,164,27)"/><text x="16.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="740" width="23" height="15" fill="rgb(249,56,15)"/><text x="16.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="756" width="23" height="15" fill="rgb(253,83,8)"/><text x="16.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="772" width="23" height="15" fill="rgb(246,11,20)"/><text x="16.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.94%)</title><rect x="13" y="788" width="23" height="15" fill="rgb(232,66,41)"/><text x="16.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="804" width="23" height="15" fill="rgb(206,93,26)"/><text x="16.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (6 samples, 1.94%)</title><rect x="13" y="820" width="23" height="15" fill="rgb(217,106,2)"/><text x="16.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="836" width="23" height="15" fill="rgb(235,17,19)"/><text x="16.00" y="846.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="852" width="23" height="15" fill="rgb(233,55,8)"/><text x="16.00" y="862.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="868" width="23" height="15" fill="rgb(251,18,33)"/><text x="16.00" y="878.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.94%)</title><rect x="13" y="884" width="23" height="15" fill="rgb(233,165,51)"/><text x="16.00" y="894.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="900" width="23" height="15" fill="rgb(216,79,0)"/><text x="16.00" y="910.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (6 samples, 1.94%)</title><rect x="13" y="916" width="23" height="15" fill="rgb(241,118,9)"/><text x="16.00" y="926.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="932" width="23" height="15" fill="rgb(246,83,26)"/><text x="16.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="948" width="23" height="15" fill="rgb(222,115,23)"/><text x="16.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="964" width="23" height="15" fill="rgb(210,222,19)"/><text x="16.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.94%)</title><rect x="13" y="980" width="23" height="15" fill="rgb(227,80,49)"/><text x="16.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="996" width="23" height="15" fill="rgb(240,141,43)"/><text x="16.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (6 samples, 1.94%)</title><rect x="13" y="1012" width="23" height="15" fill="rgb(242,122,9)"/><text x="16.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="1028" width="23" height="15" fill="rgb(235,178,37)"/><text x="16.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="1044" width="23" height="15" fill="rgb(248,211,16)"/><text x="16.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="1060" width="23" height="15" fill="rgb(214,170,46)"/><text x="16.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.94%)</title><rect x="13" y="1076" width="23" height="15" fill="rgb(207,228,0)"/><text x="16.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.94%)</title><rect x="13" y="1092" width="23" height="15" fill="rgb(233,216,20)"/><text x="16.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (6 samples, 1.94%)</title><rect x="13" y="1108" width="23" height="15" fill="rgb(210,96,53)"/><text x="16.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1124" width="19" height="15" fill="rgb(243,167,20)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1140" width="19" height="15" fill="rgb(234,118,30)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1156" width="19" height="15" fill="rgb(227,184,36)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1172" width="19" height="15" fill="rgb(249,115,30)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1188" width="19" height="15" fill="rgb(244,207,53)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.62%)</title><rect x="17" y="1204" width="19" height="15" fill="rgb(216,224,12)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.62%)</title><rect x="17" y="1220" width="19" height="15" fill="rgb(212,197,47)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (5 samples, 1.62%)</title><rect x="17" y="1236" width="19" height="15" fill="rgb(235,136,48)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(209,185,38)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1268" width="4" height="15" fill="rgb(252,137,4)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1284" width="4" height="15" fill="rgb(210,162,39)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1300" width="4" height="15" fill="rgb(211,33,5)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1316" width="4" height="15" fill="rgb(242,152,41)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1332" width="4" height="15" fill="rgb(225,9,50)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1348" width="4" height="15" fill="rgb(221,191,4)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.32%)</title><rect x="32" y="1364" width="4" height="15" fill="rgb(249,47,26)"/><text x="35.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.32%)</title><rect x="32" y="1380" width="4" height="15" fill="rgb(235,32,49)"/><text x="35.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.32%)</title><rect x="32" y="1396" width="4" height="15" fill="rgb(219,54,6)"/><text x="35.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.32%)</title><rect x="32" y="1412" width="4" height="15" fill="rgb(243,27,47)"/><text x="35.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.59%)</title><rect x="10" y="292" width="30" height="15" fill="rgb(208,222,39)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.59%)</title><rect x="10" y="308" width="30" height="15" fill="rgb(241,30,34)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.59%)</title><rect x="10" y="324" width="30" height="15" fill="rgb(246,30,25)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="340" width="4" height="15" fill="rgb(251,139,19)"/><text x="39.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="356" width="4" height="15" fill="rgb(234,167,42)"/><text x="39.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="372" width="4" height="15" fill="rgb(246,182,28)"/><text x="39.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.32%)</title><rect x="36" y="388" width="4" height="15" fill="rgb(250,180,37)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="404" width="4" height="15" fill="rgb(239,216,54)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="420" width="4" height="15" fill="rgb(253,229,13)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="436" width="4" height="15" fill="rgb(230,218,32)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="452" width="4" height="15" fill="rgb(241,48,49)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="468" width="4" height="15" fill="rgb(219,103,0)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.32%)</title><rect x="36" y="484" width="4" height="15" fill="rgb(218,71,34)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="500" width="4" height="15" fill="rgb(219,126,22)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="516" width="4" height="15" fill="rgb(221,171,32)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="532" width="4" height="15" fill="rgb(231,219,43)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="548" width="4" height="15" fill="rgb(231,34,54)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="564" width="4" height="15" fill="rgb(242,8,16)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.32%)</title><rect x="36" y="580" width="4" height="15" fill="rgb(254,228,41)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="596" width="4" height="15" fill="rgb(238,4,14)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="612" width="4" height="15" fill="rgb(231,146,5)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(213,199,5)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(244,191,21)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(240,97,31)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.32%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(223,61,44)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(240,113,13)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(240,92,29)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(238,21,27)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(224,147,35)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(238,115,23)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.32%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(223,153,21)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(229,152,10)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(222,190,4)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(208,161,40)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(247,214,6)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(237,34,27)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.32%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(205,67,36)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(233,43,38)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(209,138,14)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(211,22,1)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(231,203,38)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(254,138,9)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.32%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(239,114,18)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(236,111,8)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(242,71,11)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(228,161,24)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(227,75,2)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(228,9,34)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.32%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(233,23,34)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(228,162,25)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(211,119,8)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(216,156,54)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(253,107,6)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(225,171,18)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.32%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(248,208,23)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(225,122,38)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(225,192,46)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(214,92,17)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(219,120,36)"/><text x="39.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(246,0,6)"/><text x="39.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.32%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(238,72,53)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(216,207,14)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(243,224,48)"/><text x="39.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(218,124,49)"/><text x="39.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(217,83,38)"/><text x="39.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(236,50,3)"/><text x="39.00" y="1342.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(209,56,9)"/><text x="39.00" y="1358.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(254,199,14)"/><text x="39.00" y="1374.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.32%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(210,76,51)"/><text x="43.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.32%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(226,11,3)"/><text x="43.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="868" width="8" height="15" fill="rgb(227,221,0)"/><text x="43.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="884" width="8" height="15" fill="rgb(213,163,20)"/><text x="43.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="900" width="8" height="15" fill="rgb(220,194,46)"/><text x="43.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="916" width="8" height="15" fill="rgb(235,153,23)"/><text x="43.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="932" width="8" height="15" fill="rgb(250,84,0)"/><text x="43.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="44" y="948" width="4" height="15" fill="rgb(207,201,43)"/><text x="47.00" y="958.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="48" y="916" width="4" height="15" fill="rgb(235,106,40)"/><text x="51.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="48" y="932" width="4" height="15" fill="rgb(207,48,52)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="68" width="45" height="15" fill="rgb(241,1,43)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="84" width="45" height="15" fill="rgb(224,113,10)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="100" width="45" height="15" fill="rgb(205,83,15)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.88%)</title><rect x="10" y="116" width="45" height="15" fill="rgb(253,6,26)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="132" width="45" height="15" fill="rgb(208,192,23)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (12 samples, 3.88%)</title><rect x="10" y="148" width="45" height="15" fill="rgb(247,148,17)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="164" width="45" height="15" fill="rgb(242,156,15)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="180" width="45" height="15" fill="rgb(253,110,29)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="196" width="45" height="15" fill="rgb(229,59,23)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="212" width="45" height="15" fill="rgb(230,160,29)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="228" width="45" height="15" fill="rgb(248,107,43)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="244" width="45" height="15" fill="rgb(216,117,52)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.88%)</title><rect x="10" y="260" width="45" height="15" fill="rgb(220,136,14)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.88%)</title><rect x="10" y="276" width="45" height="15" fill="rgb(211,122,31)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.29%)</title><rect x="40" y="292" width="15" height="15" fill="rgb(236,27,52)"/><text x="43.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="308" width="15" height="15" fill="rgb(227,204,16)"/><text x="43.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="324" width="15" height="15" fill="rgb(249,57,40)"/><text x="43.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="340" width="15" height="15" fill="rgb(244,194,54)"/><text x="43.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="40" y="356" width="15" height="15" fill="rgb(213,221,39)"/><text x="43.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="372" width="15" height="15" fill="rgb(251,53,43)"/><text x="43.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.29%)</title><rect x="40" y="388" width="15" height="15" fill="rgb(223,48,7)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="404" width="15" height="15" fill="rgb(248,43,49)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="420" width="15" height="15" fill="rgb(207,53,52)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="436" width="15" height="15" fill="rgb(235,223,2)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="40" y="452" width="15" height="15" fill="rgb(212,129,25)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="468" width="15" height="15" fill="rgb(208,112,42)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.29%)</title><rect x="40" y="484" width="15" height="15" fill="rgb(229,96,9)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="500" width="15" height="15" fill="rgb(249,212,19)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="516" width="15" height="15" fill="rgb(225,83,24)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="532" width="15" height="15" fill="rgb(241,170,15)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="40" y="548" width="15" height="15" fill="rgb(212,23,52)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="564" width="15" height="15" fill="rgb(222,151,38)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.29%)</title><rect x="40" y="580" width="15" height="15" fill="rgb(237,36,39)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="596" width="15" height="15" fill="rgb(235,191,39)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="612" width="15" height="15" fill="rgb(249,146,11)"/><text x="43.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="628" width="15" height="15" fill="rgb(208,206,28)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="644" width="15" height="15" fill="rgb(230,18,54)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="660" width="15" height="15" fill="rgb(218,156,18)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="676" width="15" height="15" fill="rgb(231,187,26)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="40" y="692" width="15" height="15" fill="rgb(220,186,28)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="708" width="15" height="15" fill="rgb(237,217,38)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.29%)</title><rect x="40" y="724" width="15" height="15" fill="rgb(213,106,44)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="740" width="15" height="15" fill="rgb(219,93,39)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="756" width="15" height="15" fill="rgb(251,119,27)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="772" width="15" height="15" fill="rgb(220,126,12)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.29%)</title><rect x="40" y="788" width="15" height="15" fill="rgb(247,122,22)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.29%)</title><rect x="40" y="804" width="15" height="15" fill="rgb(251,92,27)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.29%)</title><rect x="40" y="820" width="15" height="15" fill="rgb(235,11,42)"/><text x="43.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.29%)</title><rect x="40" y="836" width="15" height="15" fill="rgb(251,138,20)"/><text x="43.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.29%)</title><rect x="40" y="852" width="15" height="15" fill="rgb(223,204,14)"/><text x="43.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="48" y="868" width="7" height="15" fill="rgb(236,124,25)"/><text x="51.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="48" y="884" width="7" height="15" fill="rgb(239,194,21)"/><text x="51.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="48" y="900" width="7" height="15" fill="rgb(244,108,3)"/><text x="51.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(205,127,10)"/><text x="55.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.32%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(218,58,26)"/><text x="55.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.32%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(230,26,50)"/><text x="55.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.32%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(215,149,26)"/><text x="55.00" y="974.50"></text></g><g><title>0x7f3ae173c8e5 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(212,129,14)"/><text x="55.00" y="990.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.65%)</title><rect x="63" y="116" width="8" height="15" fill="rgb(237,170,5)"/><text x="66.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.65%)</title><rect x="63" y="132" width="8" height="15" fill="rgb(208,215,42)"/><text x="66.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.65%)</title><rect x="63" y="148" width="8" height="15" fill="rgb(207,43,34)"/><text x="66.00" y="158.50"></text></g><g><title>0x7f3aa1f94ff9 (?) (1 samples, 0.32%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(236,38,6)"/><text x="119.00" y="222.50"></text></g><g><title>0x7f3aa1f8fcf5 (?) (1 samples, 0.32%)</title><rect x="116" y="228" width="4" height="15" fill="rgb(206,83,23)"/><text x="119.00" y="238.50"></text></g><g><title>0x7f3aa1fa1c9f (?) (1 samples, 0.32%)</title><rect x="116" y="244" width="4" height="15" fill="rgb(209,124,7)"/><text x="119.00" y="254.50"></text></g><g><title>0x7f3aa1fa1c41 (?) (1 samples, 0.32%)</title><rect x="116" y="260" width="4" height="15" fill="rgb(208,93,37)"/><text x="119.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="116" y="276" width="4" height="15" fill="rgb(241,33,8)"/><text x="119.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="128" y="260" width="4" height="15" fill="rgb(251,20,16)"/><text x="131.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.29%)</title><rect x="120" y="212" width="16" height="15" fill="rgb(228,78,2)"/><text x="123.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.97%)</title><rect x="124" y="228" width="12" height="15" fill="rgb(247,12,44)"/><text x="127.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.97%)</title><rect x="124" y="244" width="12" height="15" fill="rgb(217,186,32)"/><text x="127.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="132" y="260" width="4" height="15" fill="rgb(206,190,32)"/><text x="135.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="132" y="276" width="4" height="15" fill="rgb(206,129,15)"/><text x="135.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="136" y="292" width="3" height="15" fill="rgb(247,105,49)"/><text x="139.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="136" y="308" width="3" height="15" fill="rgb(210,56,26)"/><text x="139.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="136" y="324" width="3" height="15" fill="rgb(247,95,19)"/><text x="139.00" y="334.50"></text></g><g><title>0x7f3ae172cc38 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="136" y="340" width="3" height="15" fill="rgb(206,2,38)"/><text x="139.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="139" y="292" width="4" height="15" fill="rgb(210,27,3)"/><text x="142.00" y="302.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="139" y="308" width="4" height="15" fill="rgb(217,218,22)"/><text x="142.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="340" width="4" height="15" fill="rgb(223,205,6)"/><text x="150.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="356" width="4" height="15" fill="rgb(228,186,3)"/><text x="150.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="372" width="4" height="15" fill="rgb(205,59,21)"/><text x="150.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="388" width="4" height="15" fill="rgb(252,138,18)"/><text x="150.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="404" width="4" height="15" fill="rgb(247,33,17)"/><text x="150.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="420" width="4" height="15" fill="rgb(252,208,24)"/><text x="150.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="436" width="4" height="15" fill="rgb(205,93,10)"/><text x="150.00" y="446.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="147" y="452" width="4" height="15" fill="rgb(214,210,10)"/><text x="150.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="151" y="340" width="7" height="15" fill="rgb(226,156,11)"/><text x="154.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="155" y="356" width="3" height="15" fill="rgb(240,36,19)"/><text x="158.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="155" y="372" width="3" height="15" fill="rgb(239,160,12)"/><text x="158.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="155" y="388" width="3" height="15" fill="rgb(217,35,38)"/><text x="158.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="356" width="4" height="15" fill="rgb(234,80,45)"/><text x="165.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="372" width="4" height="15" fill="rgb(228,1,42)"/><text x="165.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="388" width="4" height="15" fill="rgb(248,64,1)"/><text x="165.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="404" width="4" height="15" fill="rgb(212,190,24)"/><text x="165.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="420" width="4" height="15" fill="rgb(240,228,42)"/><text x="165.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="436" width="4" height="15" fill="rgb(230,167,44)"/><text x="165.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="452" width="4" height="15" fill="rgb(249,142,45)"/><text x="165.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="468" width="4" height="15" fill="rgb(240,195,4)"/><text x="165.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="162" y="484" width="4" height="15" fill="rgb(232,182,31)"/><text x="165.00" y="494.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.97%)</title><rect x="158" y="340" width="12" height="15" fill="rgb(215,128,4)"/><text x="161.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="166" y="356" width="4" height="15" fill="rgb(216,153,40)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="170" y="340" width="4" height="15" fill="rgb(244,137,38)"/><text x="173.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="170" y="356" width="4" height="15" fill="rgb(221,129,27)"/><text x="173.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.56%)</title><rect x="136" y="276" width="42" height="15" fill="rgb(243,9,14)"/><text x="139.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.91%)</title><rect x="143" y="292" width="35" height="15" fill="rgb(215,203,12)"/><text x="146.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.59%)</title><rect x="147" y="308" width="31" height="15" fill="rgb(230,72,53)"/><text x="150.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.59%)</title><rect x="147" y="324" width="31" height="15" fill="rgb(222,106,19)"/><text x="150.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="174" y="340" width="4" height="15" fill="rgb(226,25,32)"/><text x="177.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.88%)</title><rect x="136" y="260" width="45" height="15" fill="rgb(205,145,49)"/><text x="139.00" y="270.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="178" y="276" width="3" height="15" fill="rgb(225,93,17)"/><text x="181.00" y="286.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="181" y="260" width="4" height="15" fill="rgb(219,194,12)"/><text x="184.00" y="270.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="185" y="260" width="4" height="15" fill="rgb(240,172,36)"/><text x="188.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.18%)</title><rect x="136" y="244" width="61" height="15" fill="rgb(234,191,51)"/><text x="139.00" y="254.50">onnxru..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="189" y="260" width="8" height="15" fill="rgb(211,31,2)"/><text x="192.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="193" y="276" width="4" height="15" fill="rgb(208,6,46)"/><text x="196.00" y="286.50"></text></g><g><title>0x7f3ae172b94f (libc-2.29.so) (1 samples, 0.32%)</title><rect x="193" y="292" width="4" height="15" fill="rgb(226,92,15)"/><text x="196.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (33 samples, 10.68%)</title><rect x="74" y="132" width="126" height="15" fill="rgb(240,102,17)"/><text x="77.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 10.03%)</title><rect x="82" y="148" width="118" height="15" fill="rgb(236,69,18)"/><text x="85.00" y="158.50">run (mlprodict..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 9.39%)</title><rect x="90" y="164" width="110" height="15" fill="rgb(227,149,43)"/><text x="93.00" y="174.50">_run_whole_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (24 samples, 7.77%)</title><rect x="109" y="180" width="91" height="15" fill="rgb(241,177,13)"/><text x="112.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py) (23 samples, 7.44%)</title><rect x="113" y="196" width="87" height="15" fill="rgb(244,95,27)"/><text x="116.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.50%)</title><rect x="136" y="212" width="64" height="15" fill="rgb(244,173,30)"/><text x="139.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.50%)</title><rect x="136" y="228" width="64" height="15" fill="rgb(244,174,51)"/><text x="139.00" y="238.50">void py..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="197" y="244" width="3" height="15" fill="rgb(237,188,5)"/><text x="200.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (39 samples, 12.62%)</title><rect x="55" y="68" width="149" height="15" fill="rgb(222,35,2)"/><text x="58.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (39 samples, 12.62%)</title><rect x="55" y="84" width="149" height="15" fill="rgb(231,220,42)"/><text x="58.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (39 samples, 12.62%)</title><rect x="55" y="100" width="149" height="15" fill="rgb(247,171,23)"/><text x="58.00" y="110.50">profile (bench_Logi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 11.33%)</title><rect x="71" y="116" width="133" height="15" fill="rgb(246,158,18)"/><text x="74.00" y="126.50">time_predict (ml..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.32%)</title><rect x="200" y="132" width="4" height="15" fill="rgb(224,4,53)"/><text x="203.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="242" y="180" width="8" height="15" fill="rgb(254,41,14)"/><text x="245.00" y="190.50"></text></g><g><title>0x7f3ae174c12b (libc-2.29.so) (1 samples, 0.32%)</title><rect x="323" y="196" width="3" height="15" fill="rgb(235,11,40)"/><text x="326.00" y="206.50"></text></g><g><title>0x7f3ae174c1ef (libc-2.29.so) (1 samples, 0.32%)</title><rect x="326" y="196" width="4" height="15" fill="rgb(230,60,26)"/><text x="329.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="338" y="292" width="4" height="15" fill="rgb(206,14,50)"/><text x="341.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.97%)</title><rect x="334" y="212" width="12" height="15" fill="rgb(240,215,6)"/><text x="337.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.97%)</title><rect x="334" y="228" width="12" height="15" fill="rgb(236,210,7)"/><text x="337.00" y="238.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.97%)</title><rect x="334" y="244" width="12" height="15" fill="rgb(221,32,30)"/><text x="337.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.97%)</title><rect x="334" y="260" width="12" height="15" fill="rgb(245,182,25)"/><text x="337.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.97%)</title><rect x="334" y="276" width="12" height="15" fill="rgb(252,207,49)"/><text x="337.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.32%)</title><rect x="342" y="292" width="4" height="15" fill="rgb(223,35,43)"/><text x="345.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.32%)</title><rect x="346" y="212" width="3" height="15" fill="rgb(234,216,47)"/><text x="349.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.32%)</title><rect x="349" y="212" width="4" height="15" fill="rgb(247,27,31)"/><text x="352.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.32%)</title><rect x="349" y="228" width="4" height="15" fill="rgb(235,25,39)"/><text x="352.00" y="238.50"></text></g><g><title>0x7f3ae174c124 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="368" y="244" width="4" height="15" fill="rgb(238,156,8)"/><text x="371.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.32%)</title><rect x="384" y="340" width="4" height="15" fill="rgb(217,174,7)"/><text x="387.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="384" y="356" width="4" height="15" fill="rgb(231,115,6)"/><text x="387.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="384" y="372" width="4" height="15" fill="rgb(208,2,9)"/><text x="387.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.62%)</title><rect x="372" y="244" width="19" height="15" fill="rgb(253,212,45)"/><text x="375.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.29%)</title><rect x="376" y="260" width="15" height="15" fill="rgb(251,43,38)"/><text x="379.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.97%)</title><rect x="380" y="276" width="11" height="15" fill="rgb(211,85,49)"/><text x="383.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.65%)</title><rect x="384" y="292" width="7" height="15" fill="rgb(221,127,35)"/><text x="387.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.65%)</title><rect x="384" y="308" width="7" height="15" fill="rgb(215,151,34)"/><text x="387.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.65%)</title><rect x="384" y="324" width="7" height="15" fill="rgb(240,178,8)"/><text x="387.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="388" y="340" width="3" height="15" fill="rgb(207,145,54)"/><text x="391.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.32%)</title><rect x="422" y="340" width="4" height="15" fill="rgb(221,189,50)"/><text x="425.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="422" y="356" width="4" height="15" fill="rgb(237,162,33)"/><text x="425.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="422" y="372" width="4" height="15" fill="rgb(217,178,21)"/><text x="425.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="422" y="388" width="4" height="15" fill="rgb(238,12,14)"/><text x="425.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 3.24%)</title><rect x="391" y="244" width="39" height="15" fill="rgb(217,68,11)"/><text x="394.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 1.62%)</title><rect x="410" y="260" width="20" height="15" fill="rgb(238,72,17)"/><text x="413.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.29%)</title><rect x="414" y="276" width="16" height="15" fill="rgb(206,116,1)"/><text x="417.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 0.97%)</title><rect x="418" y="292" width="12" height="15" fill="rgb(253,13,29)"/><text x="421.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.65%)</title><rect x="422" y="308" width="8" height="15" fill="rgb(221,85,11)"/><text x="425.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.65%)</title><rect x="422" y="324" width="8" height="15" fill="rgb(219,128,18)"/><text x="425.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.32%)</title><rect x="426" y="340" width="4" height="15" fill="rgb(244,45,24)"/><text x="429.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.32%)</title><rect x="426" y="356" width="4" height="15" fill="rgb(250,204,7)"/><text x="429.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="426" y="372" width="4" height="15" fill="rgb(217,109,0)"/><text x="429.00" y="382.50"></text></g><g><title>0x7f3ae174c14a (libc-2.29.so) (1 samples, 0.32%)</title><rect x="445" y="276" width="4" height="15" fill="rgb(210,177,3)"/><text x="448.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.65%)</title><rect x="449" y="292" width="7" height="15" fill="rgb(239,20,10)"/><text x="452.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.65%)</title><rect x="449" y="308" width="7" height="15" fill="rgb(242,172,1)"/><text x="452.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.65%)</title><rect x="449" y="324" width="7" height="15" fill="rgb(206,108,39)"/><text x="452.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="452" y="340" width="4" height="15" fill="rgb(206,202,40)"/><text x="455.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="456" y="292" width="4" height="15" fill="rgb(227,188,48)"/><text x="459.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.32%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(227,191,15)"/><text x="463.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.32%)</title><rect x="460" y="324" width="4" height="15" fill="rgb(231,12,3)"/><text x="463.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.32%)</title><rect x="460" y="340" width="4" height="15" fill="rgb(208,173,20)"/><text x="463.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.32%)</title><rect x="464" y="324" width="4" height="15" fill="rgb(251,80,22)"/><text x="467.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.65%)</title><rect x="464" y="308" width="8" height="15" fill="rgb(209,183,37)"/><text x="467.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.32%)</title><rect x="468" y="324" width="4" height="15" fill="rgb(205,35,45)"/><text x="471.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.32%)</title><rect x="468" y="340" width="4" height="15" fill="rgb(222,144,40)"/><text x="471.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.32%)</title><rect x="472" y="308" width="3" height="15" fill="rgb(209,78,14)"/><text x="475.00" y="318.50"></text></g><g><title>0x7f3ae172b902 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="472" y="324" width="3" height="15" fill="rgb(230,215,23)"/><text x="475.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.59%)</title><rect x="449" y="276" width="30" height="15" fill="rgb(205,166,16)"/><text x="452.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.62%)</title><rect x="460" y="292" width="19" height="15" fill="rgb(207,215,49)"/><text x="463.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.32%)</title><rect x="475" y="308" width="4" height="15" fill="rgb(246,6,49)"/><text x="478.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.88%)</title><rect x="441" y="260" width="46" height="15" fill="rgb(216,98,30)"/><text x="444.00" y="270.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.65%)</title><rect x="479" y="276" width="8" height="15" fill="rgb(207,154,0)"/><text x="482.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (34 samples, 11.00%)</title><rect x="361" y="228" width="130" height="15" fill="rgb(249,129,0)"/><text x="364.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 5.18%)</title><rect x="430" y="244" width="61" height="15" fill="rgb(243,217,4)"/><text x="433.00" y="254.50">ufunc_..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.32%)</title><rect x="487" y="260" width="4" height="15" fill="rgb(213,158,39)"/><text x="490.00" y="270.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.32%)</title><rect x="487" y="276" width="4" height="15" fill="rgb(251,45,37)"/><text x="490.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="521" y="260" width="4" height="15" fill="rgb(226,69,20)"/><text x="524.00" y="270.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.32%)</title><rect x="521" y="276" width="4" height="15" fill="rgb(208,90,39)"/><text x="524.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.32%)</title><rect x="521" y="292" width="4" height="15" fill="rgb(219,0,5)"/><text x="524.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.65%)</title><rect x="529" y="324" width="7" height="15" fill="rgb(243,42,26)"/><text x="532.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.65%)</title><rect x="529" y="340" width="7" height="15" fill="rgb(227,49,26)"/><text x="532.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.65%)</title><rect x="529" y="356" width="7" height="15" fill="rgb(237,228,47)"/><text x="532.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.65%)</title><rect x="529" y="372" width="7" height="15" fill="rgb(248,90,46)"/><text x="532.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.65%)</title><rect x="529" y="388" width="7" height="15" fill="rgb(229,127,15)"/><text x="532.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.32%)</title><rect x="544" y="388" width="4" height="15" fill="rgb(223,199,49)"/><text x="547.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.32%)</title><rect x="544" y="404" width="4" height="15" fill="rgb(234,180,31)"/><text x="547.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.32%)</title><rect x="544" y="420" width="4" height="15" fill="rgb(207,49,31)"/><text x="547.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.65%)</title><rect x="544" y="372" width="8" height="15" fill="rgb(245,150,37)"/><text x="547.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.32%)</title><rect x="548" y="388" width="4" height="15" fill="rgb(220,162,49)"/><text x="551.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.32%)</title><rect x="552" y="372" width="4" height="15" fill="rgb(210,139,30)"/><text x="555.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="556" y="436" width="3" height="15" fill="rgb(227,198,23)"/><text x="559.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.65%)</title><rect x="556" y="404" width="7" height="15" fill="rgb(248,40,22)"/><text x="559.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.65%)</title><rect x="556" y="420" width="7" height="15" fill="rgb(249,96,27)"/><text x="559.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.32%)</title><rect x="559" y="436" width="4" height="15" fill="rgb(221,89,4)"/><text x="562.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.32%)</title><rect x="559" y="452" width="4" height="15" fill="rgb(250,180,30)"/><text x="562.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="559" y="468" width="4" height="15" fill="rgb(212,62,15)"/><text x="562.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.97%)</title><rect x="556" y="372" width="11" height="15" fill="rgb(235,132,26)"/><text x="559.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.97%)</title><rect x="556" y="388" width="11" height="15" fill="rgb(220,116,34)"/><text x="559.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="563" y="404" width="4" height="15" fill="rgb(210,60,27)"/><text x="566.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="563" y="420" width="4" height="15" fill="rgb(235,27,11)"/><text x="566.00" y="430.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.32%)</title><rect x="567" y="420" width="4" height="15" fill="rgb(227,34,27)"/><text x="570.00" y="430.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.32%)</title><rect x="567" y="436" width="4" height="15" fill="rgb(250,108,12)"/><text x="570.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.65%)</title><rect x="567" y="372" width="8" height="15" fill="rgb(230,194,35)"/><text x="570.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.65%)</title><rect x="567" y="388" width="8" height="15" fill="rgb(247,56,10)"/><text x="570.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.65%)</title><rect x="567" y="404" width="8" height="15" fill="rgb(207,149,49)"/><text x="570.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.32%)</title><rect x="571" y="420" width="4" height="15" fill="rgb(221,20,16)"/><text x="574.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.32%)</title><rect x="571" y="436" width="4" height="15" fill="rgb(253,73,42)"/><text x="574.00" y="446.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(233,220,50)"/><text x="578.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(237,50,28)"/><text x="578.00" y="398.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.32%)</title><rect x="578" y="372" width="4" height="15" fill="rgb(247,146,2)"/><text x="581.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 3.56%)</title><rect x="544" y="356" width="42" height="15" fill="rgb(214,154,44)"/><text x="547.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="582" y="372" width="4" height="15" fill="rgb(210,172,15)"/><text x="585.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.32%)</title><rect x="582" y="388" width="4" height="15" fill="rgb(206,46,52)"/><text x="585.00" y="398.50"></text></g><g><title>array_sum (methods.c) (17 samples, 5.50%)</title><rect x="525" y="260" width="65" height="15" fill="rgb(242,210,6)"/><text x="528.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (17 samples, 5.50%)</title><rect x="525" y="276" width="65" height="15" fill="rgb(235,184,51)"/><text x="528.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (16 samples, 5.18%)</title><rect x="529" y="292" width="61" height="15" fill="rgb(216,42,18)"/><text x="532.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (16 samples, 5.18%)</title><rect x="529" y="308" width="61" height="15" fill="rgb(247,207,42)"/><text x="532.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (14 samples, 4.53%)</title><rect x="536" y="324" width="54" height="15" fill="rgb(211,67,7)"/><text x="539.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 3.88%)</title><rect x="544" y="340" width="46" height="15" fill="rgb(220,145,31)"/><text x="547.00" y="350.50">PyUF..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.32%)</title><rect x="586" y="356" width="4" height="15" fill="rgb(215,133,42)"/><text x="589.00" y="366.50"></text></g><g><title>0x7f3ae094dd50 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="586" y="372" width="4" height="15" fill="rgb(250,45,23)"/><text x="589.00" y="382.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="590" y="292" width="4" height="15" fill="rgb(241,31,49)"/><text x="593.00" y="302.50"></text></g><g><title>0x7f3ae174c14a (libc-2.29.so) (1 samples, 0.32%)</title><rect x="594" y="340" width="4" height="15" fill="rgb(243,210,24)"/><text x="597.00" y="350.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.32%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(227,96,15)"/><text x="601.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.97%)</title><rect x="594" y="324" width="11" height="15" fill="rgb(228,115,30)"/><text x="597.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.32%)</title><rect x="601" y="340" width="4" height="15" fill="rgb(207,25,37)"/><text x="604.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.94%)</title><rect x="590" y="276" width="23" height="15" fill="rgb(215,141,26)"/><text x="593.00" y="286.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.62%)</title><rect x="594" y="292" width="19" height="15" fill="rgb(236,141,6)"/><text x="597.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.62%)</title><rect x="594" y="308" width="19" height="15" fill="rgb(227,70,35)"/><text x="597.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.65%)</title><rect x="605" y="324" width="8" height="15" fill="rgb(230,139,54)"/><text x="608.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (108 samples, 34.95%)</title><rect x="204" y="68" width="413" height="15" fill="rgb(249,101,3)"/><text x="207.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (108 samples, 34.95%)</title><rect x="204" y="84" width="413" height="15" fill="rgb(253,186,29)"/><text x="207.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (108 samples, 34.95%)</title><rect x="204" y="100" width="413" height="15" fill="rgb(236,10,25)"/><text x="207.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 34.63%)</title><rect x="208" y="116" width="409" height="15" fill="rgb(212,120,18)"/><text x="211.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (106 samples, 34.30%)</title><rect x="212" y="132" width="405" height="15" fill="rgb(238,23,13)"/><text x="215.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (106 samples, 34.30%)</title><rect x="212" y="148" width="405" height="15" fill="rgb(239,15,43)"/><text x="215.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (104 samples, 33.66%)</title><rect x="220" y="164" width="397" height="15" fill="rgb(227,55,43)"/><text x="223.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (96 samples, 31.07%)</title><rect x="250" y="180" width="367" height="15" fill="rgb(219,69,48)"/><text x="253.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (75 samples, 24.27%)</title><rect x="330" y="196" width="287" height="15" fill="rgb(210,100,4)"/><text x="333.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (69 samples, 22.33%)</title><rect x="353" y="212" width="264" height="15" fill="rgb(208,169,38)"/><text x="356.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 10.68%)</title><rect x="491" y="228" width="126" height="15" fill="rgb(238,125,52)"/><text x="494.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (31 samples, 10.03%)</title><rect x="498" y="244" width="119" height="15" fill="rgb(212,62,38)"/><text x="501.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.27%)</title><rect x="590" y="260" width="27" height="15" fill="rgb(221,56,19)"/><text x="593.00" y="270.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.32%)</title><rect x="613" y="276" width="4" height="15" fill="rgb(231,226,34)"/><text x="616.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="617" y="116" width="4" height="15" fill="rgb(233,94,31)"/><text x="620.00" y="126.50"></text></g><g><title>0x7f3ae174c14e (libc-2.29.so) (1 samples, 0.32%)</title><rect x="659" y="180" width="4" height="15" fill="rgb(230,201,32)"/><text x="662.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.97%)</title><rect x="663" y="180" width="11" height="15" fill="rgb(239,152,6)"/><text x="666.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.65%)</title><rect x="666" y="196" width="8" height="15" fill="rgb(238,161,49)"/><text x="669.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.65%)</title><rect x="666" y="212" width="8" height="15" fill="rgb(224,210,29)"/><text x="669.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="670" y="228" width="4" height="15" fill="rgb(227,213,18)"/><text x="673.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="670" y="244" width="4" height="15" fill="rgb(211,43,42)"/><text x="673.00" y="254.50"></text></g><g><title>0x7f3ae1741e50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="689" y="324" width="4" height="15" fill="rgb(248,183,22)"/><text x="692.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (6 samples, 1.94%)</title><rect x="674" y="244" width="23" height="15" fill="rgb(252,227,13)"/><text x="677.00" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c) (6 samples, 1.94%)</title><rect x="674" y="260" width="23" height="15" fill="rgb(246,199,20)"/><text x="677.00" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (6 samples, 1.94%)</title><rect x="674" y="276" width="23" height="15" fill="rgb(242,140,37)"/><text x="677.00" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (6 samples, 1.94%)</title><rect x="674" y="292" width="23" height="15" fill="rgb(237,28,23)"/><text x="677.00" y="302.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h) (6 samples, 1.94%)</title><rect x="674" y="308" width="23" height="15" fill="rgb(206,214,26)"/><text x="677.00" y="318.50">m..</text></g><g><title>0x7f3ae1741e7a (libc-2.29.so) (1 samples, 0.32%)</title><rect x="693" y="324" width="4" height="15" fill="rgb(247,119,44)"/><text x="696.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.29%)</title><rect x="701" y="292" width="15" height="15" fill="rgb(238,8,49)"/><text x="704.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.32%)</title><rect x="712" y="308" width="4" height="15" fill="rgb(249,102,51)"/><text x="715.00" y="318.50"></text></g><g><title>array_sum (methods.c) (13 samples, 4.21%)</title><rect x="674" y="180" width="50" height="15" fill="rgb(252,90,23)"/><text x="677.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 4.21%)</title><rect x="674" y="196" width="50" height="15" fill="rgb(216,80,32)"/><text x="677.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 4.21%)</title><rect x="674" y="212" width="50" height="15" fill="rgb(235,13,53)"/><text x="677.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.21%)</title><rect x="674" y="228" width="50" height="15" fill="rgb(239,76,52)"/><text x="677.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 2.27%)</title><rect x="697" y="244" width="27" height="15" fill="rgb(208,5,13)"/><text x="700.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.94%)</title><rect x="701" y="260" width="23" height="15" fill="rgb(241,87,9)"/><text x="704.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 1.94%)</title><rect x="701" y="276" width="23" height="15" fill="rgb(235,157,9)"/><text x="704.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.65%)</title><rect x="716" y="292" width="8" height="15" fill="rgb(251,133,1)"/><text x="719.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.65%)</title><rect x="716" y="308" width="8" height="15" fill="rgb(209,73,36)"/><text x="719.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.32%)</title><rect x="720" y="324" width="4" height="15" fill="rgb(206,178,21)"/><text x="723.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.32%)</title><rect x="720" y="340" width="4" height="15" fill="rgb(246,5,2)"/><text x="723.00" y="350.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.32%)</title><rect x="750" y="196" width="4" height="15" fill="rgb(222,107,22)"/><text x="753.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="750" y="212" width="4" height="15" fill="rgb(253,91,25)"/><text x="753.00" y="222.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="750" y="228" width="4" height="15" fill="rgb(216,122,37)"/><text x="753.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.32%)</title><rect x="758" y="244" width="4" height="15" fill="rgb(222,226,12)"/><text x="761.00" y="254.50"></text></g><g><title>array_add (number.c) (4 samples, 1.29%)</title><rect x="754" y="196" width="15" height="15" fill="rgb(206,175,41)"/><text x="757.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.29%)</title><rect x="754" y="212" width="15" height="15" fill="rgb(242,66,29)"/><text x="757.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.29%)</title><rect x="754" y="228" width="15" height="15" fill="rgb(223,197,42)"/><text x="757.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.65%)</title><rect x="762" y="244" width="7" height="15" fill="rgb(205,48,21)"/><text x="765.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.65%)</title><rect x="762" y="260" width="7" height="15" fill="rgb(235,105,6)"/><text x="765.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.32%)</title><rect x="766" y="276" width="3" height="15" fill="rgb(240,99,25)"/><text x="769.00" y="286.50"></text></g><g><title>0x7f3ae172b902 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="766" y="292" width="3" height="15" fill="rgb(216,212,52)"/><text x="769.00" y="302.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.29%)</title><rect x="811" y="212" width="16" height="15" fill="rgb(225,189,5)"/><text x="814.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.32%)</title><rect x="827" y="212" width="4" height="15" fill="rgb(250,197,45)"/><text x="830.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.65%)</title><rect x="831" y="212" width="7" height="15" fill="rgb(241,138,32)"/><text x="834.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.91%)</title><rect x="838" y="212" width="35" height="15" fill="rgb(223,201,1)"/><text x="841.00" y="222.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="865" y="228" width="8" height="15" fill="rgb(212,155,27)"/><text x="868.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.32%)</title><rect x="873" y="212" width="3" height="15" fill="rgb(214,210,34)"/><text x="876.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 3.88%)</title><rect x="876" y="212" width="46" height="15" fill="rgb(241,141,54)"/><text x="879.00" y="222.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 1.62%)</title><rect x="903" y="228" width="19" height="15" fill="rgb(221,167,5)"/><text x="906.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.65%)</title><rect x="915" y="244" width="7" height="15" fill="rgb(253,219,4)"/><text x="918.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.65%)</title><rect x="922" y="212" width="8" height="15" fill="rgb(235,175,23)"/><text x="925.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.32%)</title><rect x="926" y="228" width="4" height="15" fill="rgb(206,170,46)"/><text x="929.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.65%)</title><rect x="930" y="212" width="7" height="15" fill="rgb(252,6,20)"/><text x="933.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.62%)</title><rect x="937" y="212" width="20" height="15" fill="rgb(211,143,31)"/><text x="940.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 0.97%)</title><rect x="945" y="228" width="12" height="15" fill="rgb(215,33,20)"/><text x="948.00" y="238.50"></text></g><g><title>0x7f3ae1741e7a (libc-2.29.so) (1 samples, 0.32%)</title><rect x="953" y="244" width="4" height="15" fill="rgb(238,187,27)"/><text x="956.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (53 samples, 17.15%)</title><rect x="769" y="196" width="203" height="15" fill="rgb(239,102,5)"/><text x="772.00" y="206.50">check_array (sklearn/utils..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.29%)</title><rect x="957" y="212" width="15" height="15" fill="rgb(212,70,13)"/><text x="960.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.97%)</title><rect x="960" y="228" width="12" height="15" fill="rgb(223,169,7)"/><text x="963.00" y="238.50"></text></g><g><title>0x7f3ae174c1d6 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="999" y="228" width="3" height="15" fill="rgb(235,55,51)"/><text x="1002.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 2.91%)</title><rect x="972" y="196" width="34" height="15" fill="rgb(236,151,35)"/><text x="975.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 2.91%)</title><rect x="972" y="212" width="34" height="15" fill="rgb(213,210,6)"/><text x="975.00" y="222.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.32%)</title><rect x="1002" y="228" width="4" height="15" fill="rgb(235,36,22)"/><text x="1005.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.65%)</title><rect x="1014" y="212" width="7" height="15" fill="rgb(226,181,2)"/><text x="1017.00" y="222.50"></text></g><g><title>0x7f3ae094d7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1021" y="260" width="4" height="15" fill="rgb(234,141,32)"/><text x="1024.00" y="270.50"></text></g><g><title>0x7f3ae174bd50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1033" y="356" width="4" height="15" fill="rgb(219,65,3)"/><text x="1036.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.65%)</title><rect x="1033" y="292" width="8" height="15" fill="rgb(212,58,9)"/><text x="1036.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.65%)</title><rect x="1033" y="308" width="8" height="15" fill="rgb(243,12,52)"/><text x="1036.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.65%)</title><rect x="1033" y="324" width="8" height="15" fill="rgb(239,124,1)"/><text x="1036.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.65%)</title><rect x="1033" y="340" width="8" height="15" fill="rgb(243,17,0)"/><text x="1036.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1037" y="356" width="4" height="15" fill="rgb(229,17,10)"/><text x="1040.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.94%)</title><rect x="1025" y="260" width="23" height="15" fill="rgb(209,117,21)"/><text x="1028.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.62%)</title><rect x="1029" y="276" width="19" height="15" fill="rgb(252,153,46)"/><text x="1032.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.65%)</title><rect x="1041" y="292" width="7" height="15" fill="rgb(225,20,9)"/><text x="1044.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.65%)</title><rect x="1041" y="308" width="7" height="15" fill="rgb(215,115,51)"/><text x="1044.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.65%)</title><rect x="1041" y="324" width="7" height="15" fill="rgb(217,76,32)"/><text x="1044.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.32%)</title><rect x="1044" y="340" width="4" height="15" fill="rgb(242,78,27)"/><text x="1047.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.32%)</title><rect x="1044" y="356" width="4" height="15" fill="rgb(219,207,31)"/><text x="1047.00" y="366.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.32%)</title><rect x="1048" y="260" width="4" height="15" fill="rgb(243,137,54)"/><text x="1051.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.32%)</title><rect x="1048" y="276" width="4" height="15" fill="rgb(227,11,35)"/><text x="1051.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="1052" y="260" width="4" height="15" fill="rgb(225,211,42)"/><text x="1055.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="1056" y="260" width="4" height="15" fill="rgb(205,104,54)"/><text x="1059.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (89 samples, 28.80%)</title><rect x="724" y="180" width="339" height="15" fill="rgb(228,216,41)"/><text x="727.00" y="190.50">decision_function (sklearn/linear_model/_base..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (15 samples, 4.85%)</title><rect x="1006" y="196" width="57" height="15" fill="rgb(214,162,4)"/><text x="1009.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.56%)</title><rect x="1021" y="212" width="42" height="15" fill="rgb(219,53,37)"/><text x="1024.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.56%)</title><rect x="1021" y="228" width="42" height="15" fill="rgb(233,28,20)"/><text x="1024.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 3.56%)</title><rect x="1021" y="244" width="42" height="15" fill="rgb(242,15,14)"/><text x="1024.00" y="254.50">PyU..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1060" y="260" width="3" height="15" fill="rgb(253,37,25)"/><text x="1063.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.32%)</title><rect x="1063" y="212" width="4" height="15" fill="rgb(214,44,28)"/><text x="1066.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.32%)</title><rect x="1063" y="228" width="4" height="15" fill="rgb(231,193,28)"/><text x="1066.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.32%)</title><rect x="1067" y="212" width="4" height="15" fill="rgb(237,38,35)"/><text x="1070.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (2 samples, 0.65%)</title><rect x="1071" y="212" width="8" height="15" fill="rgb(205,96,0)"/><text x="1074.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.32%)</title><rect x="1079" y="260" width="4" height="15" fill="rgb(214,223,21)"/><text x="1082.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1079" y="276" width="4" height="15" fill="rgb(214,8,14)"/><text x="1082.00" y="286.50"></text></g><g><title>0x7f3ae16e3a19 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1079" y="292" width="4" height="15" fill="rgb(215,124,13)"/><text x="1082.00" y="302.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.32%)</title><rect x="1079" y="308" width="4" height="15" fill="rgb(217,228,27)"/><text x="1082.00" y="318.50"></text></g><g><title>0x7f3ae172b902 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1086" y="276" width="4" height="15" fill="rgb(251,62,17)"/><text x="1089.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.29%)</title><rect x="1079" y="228" width="15" height="15" fill="rgb(208,80,51)"/><text x="1082.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.29%)</title><rect x="1079" y="244" width="15" height="15" fill="rgb(222,20,45)"/><text x="1082.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.97%)</title><rect x="1083" y="260" width="11" height="15" fill="rgb(240,85,25)"/><text x="1086.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1090" y="276" width="4" height="15" fill="rgb(253,98,17)"/><text x="1093.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.62%)</title><rect x="1079" y="212" width="19" height="15" fill="rgb(248,192,33)"/><text x="1082.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.32%)</title><rect x="1094" y="228" width="4" height="15" fill="rgb(216,94,16)"/><text x="1097.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.32%)</title><rect x="1094" y="244" width="4" height="15" fill="rgb(240,149,1)"/><text x="1097.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1094" y="260" width="4" height="15" fill="rgb(239,85,16)"/><text x="1097.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (119 samples, 38.51%)</title><rect x="651" y="164" width="454" height="15" fill="rgb(228,219,54)"/><text x="654.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.56%)</title><rect x="1063" y="180" width="42" height="15" fill="rgb(239,107,27)"/><text x="1066.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.56%)</title><rect x="1063" y="196" width="42" height="15" fill="rgb(234,146,3)"/><text x="1066.00" y="206.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.65%)</title><rect x="1098" y="212" width="7" height="15" fill="rgb(209,199,4)"/><text x="1101.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="1102" y="228" width="3" height="15" fill="rgb(210,138,24)"/><text x="1105.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.32%)</title><rect x="1102" y="244" width="3" height="15" fill="rgb(244,164,39)"/><text x="1105.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.29%)</title><rect x="1159" y="196" width="15" height="15" fill="rgb(228,168,33)"/><text x="1162.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 4.53%)</title><rect x="1128" y="180" width="54" height="15" fill="rgb(219,26,38)"/><text x="1131.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.65%)</title><rect x="1174" y="196" width="8" height="15" fill="rgb(246,176,34)"/><text x="1177.00" y="206.50"></text></g><g><title>all (309 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,205,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (309 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(207,124,22)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (150 samples, 48.54%)</title><rect x="617" y="68" width="573" height="15" fill="rgb(206,155,35)"/><text x="620.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (150 samples, 48.54%)</title><rect x="617" y="84" width="573" height="15" fill="rgb(253,207,40)"/><text x="620.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py) (150 samples, 48.54%)</title><rect x="617" y="100" width="573" height="15" fill="rgb(213,12,3)"/><text x="620.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (149 samples, 48.22%)</title><rect x="621" y="116" width="569" height="15" fill="rgb(238,80,16)"/><text x="624.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 47.57%)</title><rect x="628" y="132" width="562" height="15" fill="rgb(229,74,53)"/><text x="631.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (145 samples, 46.93%)</title><rect x="636" y="148" width="554" height="15" fill="rgb(239,194,25)"/><text x="639.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (22 samples, 7.12%)</title><rect x="1105" y="164" width="85" height="15" fill="rgb(216,187,6)"/><text x="1108.00" y="174.50">check_is_f..</text></g><g><title>isclass (inspect.py) (2 samples, 0.65%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(245,149,15)"/><text x="1185.00" y="190.50"></text></g></g></svg>