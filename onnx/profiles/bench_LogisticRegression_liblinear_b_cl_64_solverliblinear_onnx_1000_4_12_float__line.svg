<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.15%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(220,49,49)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.15%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(208,16,8)"/><text x="13.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.15%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(246,193,39)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(218,26,30)"/><text x="13.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.15%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(254,133,1)"/><text x="13.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.15%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(232,31,2)"/><text x="13.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.15%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(213,210,23)"/><text x="13.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(221,136,0)"/><text x="13.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.15%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(208,226,49)"/><text x="14.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(211,12,22)"/><text x="14.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(220,32,26)"/><text x="14.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.15%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(224,169,5)"/><text x="14.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.15%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(226,157,39)"/><text x="14.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="11" y="244" width="2" height="15" fill="rgb(222,99,42)"/><text x="14.00" y="254.50"></text></g><g><title>array_inplace_true_divide (number.c:839) (1 samples, 0.15%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(251,207,4)"/><text x="16.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:18) (4 samples, 0.62%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(219,199,53)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.62%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(216,156,37)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.62%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(226,76,31)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (4 samples, 0.62%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(233,190,6)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.31%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(219,163,22)"/><text x="16.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.15%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(238,216,0)"/><text x="18.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.15%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(233,58,17)"/><text x="18.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.15%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(220,229,10)"/><text x="18.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.15%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(208,92,50)"/><text x="18.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(241,224,48)"/><text x="18.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.15%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(247,120,30)"/><text x="18.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.15%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(242,3,17)"/><text x="18.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.15%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(211,28,14)"/><text x="18.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.15%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(212,90,13)"/><text x="18.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.77%)</title><rect x="26" y="180" width="9" height="15" fill="rgb(209,159,31)"/><text x="29.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.62%)</title><rect x="28" y="196" width="7" height="15" fill="rgb(233,24,22)"/><text x="31.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 0.93%)</title><rect x="26" y="148" width="11" height="15" fill="rgb(221,176,17)"/><text x="29.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.93%)</title><rect x="26" y="164" width="11" height="15" fill="rgb(254,38,43)"/><text x="29.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.15%)</title><rect x="35" y="180" width="2" height="15" fill="rgb(207,47,34)"/><text x="38.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.15%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(207,131,32)"/><text x="40.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.15%)</title><rect x="39" y="148" width="1" height="15" fill="rgb(207,207,29)"/><text x="42.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 0.62%)</title><rect x="46" y="180" width="7" height="15" fill="rgb(245,57,25)"/><text x="49.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.62%)</title><rect x="46" y="196" width="7" height="15" fill="rgb(208,219,13)"/><text x="49.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.62%)</title><rect x="46" y="212" width="7" height="15" fill="rgb(249,122,47)"/><text x="49.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="51" y="228" width="2" height="15" fill="rgb(210,82,50)"/><text x="54.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.15%)</title><rect x="55" y="196" width="2" height="15" fill="rgb(221,60,19)"/><text x="58.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.15%)</title><rect x="57" y="196" width="2" height="15" fill="rgb(209,102,46)"/><text x="60.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.15%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(222,214,34)"/><text x="60.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.15%)</title><rect x="59" y="228" width="1" height="15" fill="rgb(249,117,0)"/><text x="62.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.31%)</title><rect x="59" y="196" width="3" height="15" fill="rgb(240,134,29)"/><text x="62.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.31%)</title><rect x="59" y="212" width="3" height="15" fill="rgb(246,94,54)"/><text x="62.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.15%)</title><rect x="60" y="228" width="2" height="15" fill="rgb(254,170,38)"/><text x="63.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.15%)</title><rect x="62" y="196" width="2" height="15" fill="rgb(213,168,1)"/><text x="65.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.15%)</title><rect x="62" y="212" width="2" height="15" fill="rgb(229,83,54)"/><text x="65.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.15%)</title><rect x="66" y="212" width="2" height="15" fill="rgb(247,178,36)"/><text x="69.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.46%)</title><rect x="64" y="196" width="6" height="15" fill="rgb(208,218,18)"/><text x="67.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.15%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(238,218,25)"/><text x="71.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.46%)</title><rect x="70" y="196" width="5" height="15" fill="rgb(225,196,43)"/><text x="73.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.15%)</title><rect x="73" y="212" width="2" height="15" fill="rgb(208,221,54)"/><text x="76.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.62%)</title><rect x="75" y="196" width="7" height="15" fill="rgb(225,148,50)"/><text x="78.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.31%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(210,211,39)"/><text x="82.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:329) (1 samples, 0.15%)</title><rect x="81" y="228" width="1" height="15" fill="rgb(234,219,3)"/><text x="84.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.15%)</title><rect x="82" y="196" width="2" height="15" fill="rgb(243,19,0)"/><text x="85.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.31%)</title><rect x="84" y="212" width="4" height="15" fill="rgb(240,216,37)"/><text x="87.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.15%)</title><rect x="86" y="228" width="2" height="15" fill="rgb(242,185,25)"/><text x="89.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.62%)</title><rect x="84" y="196" width="7" height="15" fill="rgb(221,43,14)"/><text x="87.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.31%)</title><rect x="88" y="212" width="3" height="15" fill="rgb(207,148,27)"/><text x="91.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.31%)</title><rect x="88" y="228" width="3" height="15" fill="rgb(226,94,14)"/><text x="91.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.15%)</title><rect x="91" y="212" width="2" height="15" fill="rgb(222,130,15)"/><text x="94.00" y="222.50"></text></g><g><title>0x7fa288157e50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="91" y="228" width="2" height="15" fill="rgb(214,53,14)"/><text x="94.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.15%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(206,129,36)"/><text x="96.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (24 samples, 3.70%)</title><rect x="53" y="180" width="44" height="15" fill="rgb(213,186,54)"/><text x="56.00" y="190.50">deci..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.46%)</title><rect x="91" y="196" width="6" height="15" fill="rgb(253,13,54)"/><text x="94.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.15%)</title><rect x="95" y="212" width="2" height="15" fill="rgb(219,56,42)"/><text x="98.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.15%)</title><rect x="95" y="228" width="2" height="15" fill="rgb(209,225,19)"/><text x="98.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.15%)</title><rect x="97" y="180" width="2" height="15" fill="rgb(248,140,27)"/><text x="100.00" y="190.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.15%)</title><rect x="101" y="308" width="1" height="15" fill="rgb(248,190,7)"/><text x="104.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="102" y="308" width="2" height="15" fill="rgb(233,83,32)"/><text x="105.00" y="318.50"></text></g><g><title>0x7fa2873642b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="104" y="324" width="2" height="15" fill="rgb(218,47,9)"/><text x="107.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.31%)</title><rect x="104" y="308" width="4" height="15" fill="rgb(232,100,12)"/><text x="107.00" y="318.50"></text></g><g><title>0x7fa288161d6f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(240,142,40)"/><text x="109.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.77%)</title><rect x="101" y="260" width="9" height="15" fill="rgb(227,10,0)"/><text x="104.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.77%)</title><rect x="101" y="276" width="9" height="15" fill="rgb(241,7,40)"/><text x="104.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.77%)</title><rect x="101" y="292" width="9" height="15" fill="rgb(206,217,44)"/><text x="104.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.15%)</title><rect x="108" y="308" width="2" height="15" fill="rgb(234,133,54)"/><text x="111.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.15%)</title><rect x="110" y="260" width="1" height="15" fill="rgb(210,55,48)"/><text x="113.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.15%)</title><rect x="110" y="276" width="1" height="15" fill="rgb(223,195,35)"/><text x="113.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.15%)</title><rect x="110" y="292" width="1" height="15" fill="rgb(243,40,35)"/><text x="113.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="110" y="308" width="1" height="15" fill="rgb(239,99,51)"/><text x="113.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="110" y="324" width="1" height="15" fill="rgb(240,49,6)"/><text x="113.00" y="334.50"></text></g><g><title>array_add (number.c:330) (8 samples, 1.23%)</title><rect x="99" y="196" width="14" height="15" fill="rgb(206,191,28)"/><text x="102.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.08%)</title><rect x="101" y="212" width="12" height="15" fill="rgb(242,149,5)"/><text x="104.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.08%)</title><rect x="101" y="228" width="12" height="15" fill="rgb(245,141,5)"/><text x="104.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.08%)</title><rect x="101" y="244" width="12" height="15" fill="rgb(215,57,4)"/><text x="104.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.15%)</title><rect x="111" y="260" width="2" height="15" fill="rgb(233,66,42)"/><text x="114.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.15%)</title><rect x="111" y="276" width="2" height="15" fill="rgb(246,184,36)"/><text x="114.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="115" y="212" width="2" height="15" fill="rgb(253,189,42)"/><text x="118.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="117" y="212" width="2" height="15" fill="rgb(235,151,49)"/><text x="120.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.15%)</title><rect x="119" y="244" width="2" height="15" fill="rgb(254,17,35)"/><text x="122.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.15%)</title><rect x="119" y="260" width="2" height="15" fill="rgb(231,75,22)"/><text x="122.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.15%)</title><rect x="119" y="276" width="2" height="15" fill="rgb(247,84,10)"/><text x="122.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.15%)</title><rect x="121" y="260" width="1" height="15" fill="rgb(218,54,32)"/><text x="124.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.15%)</title><rect x="121" y="276" width="1" height="15" fill="rgb(217,103,36)"/><text x="124.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.15%)</title><rect x="122" y="276" width="2" height="15" fill="rgb(230,117,7)"/><text x="125.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.15%)</title><rect x="122" y="292" width="2" height="15" fill="rgb(207,91,5)"/><text x="125.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.31%)</title><rect x="122" y="260" width="4" height="15" fill="rgb(249,148,17)"/><text x="125.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.15%)</title><rect x="124" y="276" width="2" height="15" fill="rgb(208,105,6)"/><text x="127.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.15%)</title><rect x="124" y="292" width="2" height="15" fill="rgb(245,228,40)"/><text x="127.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:153) (1 samples, 0.15%)</title><rect x="124" y="308" width="2" height="15" fill="rgb(252,121,45)"/><text x="127.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.15%)</title><rect x="126" y="308" width="2" height="15" fill="rgb(250,116,9)"/><text x="129.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="126" y="324" width="2" height="15" fill="rgb(238,164,39)"/><text x="129.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 0.77%)</title><rect x="121" y="244" width="9" height="15" fill="rgb(223,85,7)"/><text x="124.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.31%)</title><rect x="126" y="260" width="4" height="15" fill="rgb(248,34,9)"/><text x="129.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.31%)</title><rect x="126" y="276" width="4" height="15" fill="rgb(211,212,35)"/><text x="129.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.31%)</title><rect x="126" y="292" width="4" height="15" fill="rgb(221,208,7)"/><text x="129.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.15%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(246,72,35)"/><text x="131.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.15%)</title><rect x="128" y="324" width="2" height="15" fill="rgb(253,34,31)"/><text x="131.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.15%)</title><rect x="130" y="244" width="2" height="15" fill="rgb(237,65,0)"/><text x="133.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:134) (1 samples, 0.15%)</title><rect x="130" y="260" width="2" height="15" fill="rgb(244,157,31)"/><text x="133.00" y="270.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.15%)</title><rect x="130" y="276" width="2" height="15" fill="rgb(240,6,25)"/><text x="133.00" y="286.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:129) (1 samples, 0.15%)</title><rect x="132" y="276" width="1" height="15" fill="rgb(219,103,26)"/><text x="135.00" y="286.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.15%)</title><rect x="132" y="292" width="1" height="15" fill="rgb(237,177,5)"/><text x="135.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (15 samples, 2.31%)</title><rect x="113" y="196" width="28" height="15" fill="rgb(209,155,26)"/><text x="116.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.85%)</title><rect x="119" y="212" width="22" height="15" fill="rgb(241,215,20)"/><text x="122.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 1.85%)</title><rect x="119" y="228" width="22" height="15" fill="rgb(242,124,1)"/><text x="122.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 0.77%)</title><rect x="132" y="244" width="9" height="15" fill="rgb(213,222,52)"/><text x="135.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (5 samples, 0.77%)</title><rect x="132" y="260" width="9" height="15" fill="rgb(249,201,33)"/><text x="135.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.62%)</title><rect x="133" y="276" width="8" height="15" fill="rgb(206,72,23)"/><text x="136.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="137" y="292" width="4" height="15" fill="rgb(252,165,41)"/><text x="140.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="137" y="308" width="4" height="15" fill="rgb(239,92,46)"/><text x="140.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (24 samples, 3.70%)</title><rect x="99" y="180" width="43" height="15" fill="rgb(223,226,43)"/><text x="102.00" y="190.50">deci..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.15%)</title><rect x="141" y="196" width="1" height="15" fill="rgb(234,167,44)"/><text x="144.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.15%)</title><rect x="141" y="212" width="1" height="15" fill="rgb(248,38,7)"/><text x="144.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (55 samples, 8.49%)</title><rect x="44" y="164" width="100" height="15" fill="rgb(250,134,54)"/><text x="47.00" y="174.50">_predict_pro..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.15%)</title><rect x="142" y="180" width="2" height="15" fill="rgb(235,41,42)"/><text x="145.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.15%)</title><rect x="146" y="196" width="2" height="15" fill="rgb(245,73,52)"/><text x="149.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.15%)</title><rect x="146" y="212" width="2" height="15" fill="rgb(222,51,20)"/><text x="149.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.15%)</title><rect x="148" y="244" width="2" height="15" fill="rgb(242,228,49)"/><text x="151.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.15%)</title><rect x="148" y="260" width="2" height="15" fill="rgb(243,33,42)"/><text x="151.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="148" y="276" width="2" height="15" fill="rgb(231,216,13)"/><text x="151.00" y="286.50"></text></g><g><title>0x7fa288161ddd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(228,112,42)"/><text x="151.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.31%)</title><rect x="148" y="212" width="4" height="15" fill="rgb(214,37,1)"/><text x="151.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.31%)</title><rect x="148" y="228" width="4" height="15" fill="rgb(254,201,38)"/><text x="151.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.15%)</title><rect x="150" y="244" width="2" height="15" fill="rgb(240,99,47)"/><text x="153.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.15%)</title><rect x="150" y="260" width="2" height="15" fill="rgb(237,70,26)"/><text x="153.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.15%)</title><rect x="150" y="276" width="2" height="15" fill="rgb(215,224,19)"/><text x="153.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.15%)</title><rect x="150" y="292" width="2" height="15" fill="rgb(224,229,33)"/><text x="153.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.15%)</title><rect x="150" y="308" width="2" height="15" fill="rgb(228,229,39)"/><text x="153.00" y="318.50"></text></g><g><title>0x7fa26a5479dd (?) (1 samples, 0.15%)</title><rect x="152" y="244" width="1" height="15" fill="rgb(232,188,30)"/><text x="155.00" y="254.50"></text></g><g><title>0x7fa26a568265 (?) (1 samples, 0.15%)</title><rect x="152" y="260" width="1" height="15" fill="rgb(207,146,19)"/><text x="155.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.15%)</title><rect x="152" y="276" width="1" height="15" fill="rgb(209,122,46)"/><text x="155.00" y="286.50"></text></g><g><title>0x7fa288313bf9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="152" y="292" width="1" height="15" fill="rgb(233,39,34)"/><text x="155.00" y="302.50"></text></g><g><title>0x7fa26a568254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="153" y="260" width="4" height="15" fill="rgb(248,68,39)"/><text x="156.00" y="270.50"></text></g><g><title>0x7fa26a525fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="157" y="276" width="4" height="15" fill="rgb(249,42,42)"/><text x="160.00" y="286.50"></text></g><g><title>0x7fa28828d1b0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="164" y="292" width="2" height="15" fill="rgb(211,171,3)"/><text x="167.00" y="302.50"></text></g><g><title>0x7fa288313bb4 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="166" y="292" width="4" height="15" fill="rgb(208,133,23)"/><text x="169.00" y="302.50"></text></g><g><title>0x7fa288313bd3 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="170" y="292" width="2" height="15" fill="rgb(252,226,30)"/><text x="173.00" y="302.50"></text></g><g><title>0x7fa288313bf9 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="172" y="292" width="3" height="15" fill="rgb(218,155,7)"/><text x="175.00" y="302.50"></text></g><g><title>0x7fa288313c07 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="175" y="292" width="2" height="15" fill="rgb(234,204,11)"/><text x="178.00" y="302.50"></text></g><g><title>0x7fa288313c2e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="177" y="292" width="2" height="15" fill="rgb(239,19,6)"/><text x="180.00" y="302.50"></text></g><g><title>0x7fa288313c3e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="179" y="292" width="2" height="15" fill="rgb(244,124,11)"/><text x="182.00" y="302.50"></text></g><g><title>0x7fa288313c56 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="181" y="292" width="3" height="15" fill="rgb(239,59,10)"/><text x="184.00" y="302.50"></text></g><g><title>0x7fa26a568265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.47%)</title><rect x="157" y="260" width="29" height="15" fill="rgb(233,119,27)"/><text x="160.00" y="270.50">0x..</text></g><g><title>exp (libm-2.29.so) (14 samples, 2.16%)</title><rect x="161" y="276" width="25" height="15" fill="rgb(246,153,24)"/><text x="164.00" y="286.50">e..</text></g><g><title>0x7fa288313c6a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="184" y="292" width="2" height="15" fill="rgb(254,150,44)"/><text x="187.00" y="302.50"></text></g><g><title>0x7fa26a568275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="186" y="260" width="4" height="15" fill="rgb(236,216,8)"/><text x="189.00" y="270.50"></text></g><g><title>0x7fa26a5479dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.70%)</title><rect x="153" y="244" width="44" height="15" fill="rgb(228,92,11)"/><text x="156.00" y="254.50">0x7f..</text></g><g><title>0x7fa26a568279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.62%)</title><rect x="190" y="260" width="7" height="15" fill="rgb(252,138,3)"/><text x="193.00" y="270.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (26 samples, 4.01%)</title><rect x="152" y="228" width="47" height="15" fill="rgb(242,204,24)"/><text x="155.00" y="238.50">triv..</text></g><g><title>0x7fa26a5479e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="197" y="244" width="2" height="15" fill="rgb(207,116,0)"/><text x="200.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (31 samples, 4.78%)</title><rect x="144" y="164" width="57" height="15" fill="rgb(235,98,45)"/><text x="147.00" y="174.50">_predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 4.63%)</title><rect x="146" y="180" width="55" height="15" fill="rgb(234,192,37)"/><text x="149.00" y="190.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (29 samples, 4.48%)</title><rect x="148" y="196" width="53" height="15" fill="rgb(247,184,7)"/><text x="151.00" y="206.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (27 samples, 4.17%)</title><rect x="152" y="212" width="49" height="15" fill="rgb(216,145,37)"/><text x="155.00" y="222.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.15%)</title><rect x="199" y="228" width="2" height="15" fill="rgb(225,27,46)"/><text x="202.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.15%)</title><rect x="201" y="164" width="2" height="15" fill="rgb(231,172,48)"/><text x="204.00" y="174.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.15%)</title><rect x="204" y="180" width="2" height="15" fill="rgb(208,89,38)"/><text x="207.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.15%)</title><rect x="204" y="196" width="2" height="15" fill="rgb(239,142,22)"/><text x="207.00" y="206.50"></text></g><g><title>0x7fa287364020 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="204" y="212" width="2" height="15" fill="rgb(238,53,50)"/><text x="207.00" y="222.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.15%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(206,179,50)"/><text x="209.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.15%)</title><rect x="208" y="276" width="2" height="15" fill="rgb(219,121,28)"/><text x="211.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.15%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(225,183,11)"/><text x="211.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.15%)</title><rect x="208" y="308" width="2" height="15" fill="rgb(205,147,15)"/><text x="211.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.15%)</title><rect x="208" y="324" width="2" height="15" fill="rgb(241,1,19)"/><text x="211.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.15%)</title><rect x="208" y="340" width="2" height="15" fill="rgb(253,200,32)"/><text x="211.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.46%)</title><rect x="206" y="260" width="6" height="15" fill="rgb(210,211,8)"/><text x="209.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.15%)</title><rect x="210" y="276" width="2" height="15" fill="rgb(237,59,34)"/><text x="213.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.15%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(226,167,7)"/><text x="213.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.15%)</title><rect x="212" y="292" width="1" height="15" fill="rgb(222,204,22)"/><text x="215.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:231) (1 samples, 0.15%)</title><rect x="213" y="308" width="2" height="15" fill="rgb(240,24,2)"/><text x="216.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.46%)</title><rect x="212" y="276" width="5" height="15" fill="rgb(252,195,28)"/><text x="215.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.31%)</title><rect x="213" y="292" width="4" height="15" fill="rgb(240,211,22)"/><text x="216.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.15%)</title><rect x="215" y="308" width="2" height="15" fill="rgb(233,136,34)"/><text x="218.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.15%)</title><rect x="215" y="324" width="2" height="15" fill="rgb(243,22,46)"/><text x="218.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.15%)</title><rect x="215" y="340" width="2" height="15" fill="rgb(210,183,24)"/><text x="218.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.15%)</title><rect x="215" y="356" width="2" height="15" fill="rgb(234,162,4)"/><text x="218.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.15%)</title><rect x="215" y="372" width="2" height="15" fill="rgb(229,31,26)"/><text x="218.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:233) (1 samples, 0.15%)</title><rect x="217" y="292" width="2" height="15" fill="rgb(232,213,48)"/><text x="220.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.31%)</title><rect x="217" y="276" width="4" height="15" fill="rgb(226,223,11)"/><text x="220.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:452) (1 samples, 0.15%)</title><rect x="219" y="292" width="2" height="15" fill="rgb(243,209,5)"/><text x="222.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.15%)</title><rect x="221" y="292" width="2" height="15" fill="rgb(230,3,44)"/><text x="224.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.15%)</title><rect x="223" y="292" width="1" height="15" fill="rgb(213,100,14)"/><text x="226.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.15%)</title><rect x="224" y="292" width="2" height="15" fill="rgb(230,106,34)"/><text x="227.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.15%)</title><rect x="226" y="292" width="2" height="15" fill="rgb(220,137,44)"/><text x="229.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (2 samples, 0.31%)</title><rect x="228" y="292" width="4" height="15" fill="rgb(235,154,28)"/><text x="231.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.15%)</title><rect x="232" y="292" width="1" height="15" fill="rgb(222,152,27)"/><text x="235.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.31%)</title><rect x="235" y="308" width="4" height="15" fill="rgb(223,227,36)"/><text x="238.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.15%)</title><rect x="239" y="308" width="2" height="15" fill="rgb(224,73,15)"/><text x="242.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.46%)</title><rect x="241" y="308" width="5" height="15" fill="rgb(228,176,21)"/><text x="244.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.31%)</title><rect x="243" y="324" width="3" height="15" fill="rgb(233,87,7)"/><text x="246.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (23 samples, 3.55%)</title><rect x="206" y="180" width="42" height="15" fill="rgb(212,134,33)"/><text x="209.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (23 samples, 3.55%)</title><rect x="206" y="196" width="42" height="15" fill="rgb(254,183,16)"/><text x="209.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (23 samples, 3.55%)</title><rect x="206" y="212" width="42" height="15" fill="rgb(243,29,0)"/><text x="209.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (23 samples, 3.55%)</title><rect x="206" y="228" width="42" height="15" fill="rgb(221,191,39)"/><text x="209.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 3.55%)</title><rect x="206" y="244" width="42" height="15" fill="rgb(213,133,42)"/><text x="209.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 3.09%)</title><rect x="212" y="260" width="36" height="15" fill="rgb(216,94,40)"/><text x="215.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (15 samples, 2.31%)</title><rect x="221" y="276" width="27" height="15" fill="rgb(232,113,35)"/><text x="224.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 1.23%)</title><rect x="233" y="292" width="15" height="15" fill="rgb(229,138,34)"/><text x="236.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.15%)</title><rect x="246" y="308" width="2" height="15" fill="rgb(235,83,40)"/><text x="249.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.31%)</title><rect x="250" y="276" width="4" height="15" fill="rgb(217,170,24)"/><text x="253.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.31%)</title><rect x="254" y="292" width="3" height="15" fill="rgb(217,22,39)"/><text x="257.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 1.23%)</title><rect x="248" y="228" width="15" height="15" fill="rgb(232,164,44)"/><text x="251.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.23%)</title><rect x="248" y="244" width="15" height="15" fill="rgb(205,111,5)"/><text x="251.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 1.23%)</title><rect x="248" y="260" width="15" height="15" fill="rgb(242,205,14)"/><text x="251.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.77%)</title><rect x="254" y="276" width="9" height="15" fill="rgb(214,101,0)"/><text x="257.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (3 samples, 0.46%)</title><rect x="257" y="292" width="6" height="15" fill="rgb(223,85,51)"/><text x="260.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.15%)</title><rect x="263" y="244" width="1" height="15" fill="rgb(234,85,35)"/><text x="266.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.15%)</title><rect x="263" y="260" width="1" height="15" fill="rgb(250,137,27)"/><text x="266.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="263" y="276" width="1" height="15" fill="rgb(240,196,7)"/><text x="266.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="263" y="292" width="1" height="15" fill="rgb(205,45,31)"/><text x="266.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.54%)</title><rect x="248" y="180" width="18" height="15" fill="rgb(233,141,50)"/><text x="251.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.54%)</title><rect x="248" y="196" width="18" height="15" fill="rgb(247,69,46)"/><text x="251.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.54%)</title><rect x="248" y="212" width="18" height="15" fill="rgb(248,198,19)"/><text x="251.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.31%)</title><rect x="263" y="228" width="3" height="15" fill="rgb(247,208,10)"/><text x="266.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.15%)</title><rect x="264" y="244" width="2" height="15" fill="rgb(207,80,40)"/><text x="267.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.15%)</title><rect x="264" y="260" width="2" height="15" fill="rgb(218,163,31)"/><text x="267.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (36 samples, 5.56%)</title><rect x="203" y="164" width="65" height="15" fill="rgb(253,164,51)"/><text x="206.00" y="174.50">_predic..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.15%)</title><rect x="266" y="180" width="2" height="15" fill="rgb(220,139,38)"/><text x="269.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.15%)</title><rect x="266" y="196" width="2" height="15" fill="rgb(235,69,48)"/><text x="269.00" y="206.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.15%)</title><rect x="266" y="212" width="2" height="15" fill="rgb(205,199,26)"/><text x="269.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:38) (143 samples, 22.07%)</title><rect x="10" y="52" width="260" height="15" fill="rgb(221,176,28)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:37) (143 samples, 22.07%)</title><rect x="10" y="68" width="260" height="15" fill="rgb(207,81,26)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegress..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:29) (143 samples, 22.07%)</title><rect x="10" y="84" width="260" height="15" fill="rgb(209,19,54)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:23) (139 samples, 21.45%)</title><rect x="17" y="100" width="253" height="15" fill="rgb(247,105,9)"/><text x="20.00" y="110.50">profile (bench_LogisticRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (136 samples, 20.99%)</title><rect x="22" y="116" width="248" height="15" fill="rgb(238,62,10)"/><text x="25.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (135 samples, 20.83%)</title><rect x="24" y="132" width="246" height="15" fill="rgb(234,213,48)"/><text x="27.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (126 samples, 19.44%)</title><rect x="40" y="148" width="230" height="15" fill="rgb(219,56,6)"/><text x="43.00" y="158.50">predict_proba (sklearn/linear_..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:314) (1 samples, 0.15%)</title><rect x="268" y="164" width="2" height="15" fill="rgb(243,168,5)"/><text x="271.00" y="174.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.15%)</title><rect x="270" y="388" width="2" height="15" fill="rgb(209,43,4)"/><text x="273.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="404" width="2" height="15" fill="rgb(207,28,42)"/><text x="273.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="420" width="2" height="15" fill="rgb(205,116,16)"/><text x="273.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="436" width="2" height="15" fill="rgb(221,206,7)"/><text x="273.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="452" width="2" height="15" fill="rgb(253,91,43)"/><text x="273.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="468" width="2" height="15" fill="rgb(252,159,11)"/><text x="273.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.15%)</title><rect x="270" y="484" width="2" height="15" fill="rgb(221,46,11)"/><text x="273.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="500" width="2" height="15" fill="rgb(249,26,18)"/><text x="273.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="516" width="2" height="15" fill="rgb(234,80,7)"/><text x="273.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="532" width="2" height="15" fill="rgb(253,143,38)"/><text x="273.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="548" width="2" height="15" fill="rgb(233,89,44)"/><text x="273.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="564" width="2" height="15" fill="rgb(240,161,39)"/><text x="273.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.15%)</title><rect x="270" y="580" width="2" height="15" fill="rgb(212,117,15)"/><text x="273.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="596" width="2" height="15" fill="rgb(242,73,53)"/><text x="273.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="270" y="612" width="2" height="15" fill="rgb(238,214,8)"/><text x="273.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="628" width="2" height="15" fill="rgb(213,161,40)"/><text x="273.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="644" width="2" height="15" fill="rgb(242,11,14)"/><text x="273.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="660" width="2" height="15" fill="rgb(244,202,29)"/><text x="273.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="676" width="2" height="15" fill="rgb(222,199,9)"/><text x="273.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="692" width="2" height="15" fill="rgb(220,34,13)"/><text x="273.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="708" width="2" height="15" fill="rgb(240,143,10)"/><text x="273.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.15%)</title><rect x="270" y="724" width="2" height="15" fill="rgb(254,228,6)"/><text x="273.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="740" width="2" height="15" fill="rgb(217,129,11)"/><text x="273.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="756" width="2" height="15" fill="rgb(225,46,48)"/><text x="273.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="772" width="2" height="15" fill="rgb(229,6,28)"/><text x="273.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="788" width="2" height="15" fill="rgb(209,18,36)"/><text x="273.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="804" width="2" height="15" fill="rgb(238,220,34)"/><text x="273.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.15%)</title><rect x="270" y="820" width="2" height="15" fill="rgb(210,105,14)"/><text x="273.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.15%)</title><rect x="270" y="836" width="2" height="15" fill="rgb(239,184,47)"/><text x="273.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.15%)</title><rect x="270" y="852" width="2" height="15" fill="rgb(216,209,31)"/><text x="273.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.15%)</title><rect x="270" y="868" width="2" height="15" fill="rgb(239,184,18)"/><text x="273.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.15%)</title><rect x="270" y="884" width="2" height="15" fill="rgb(220,191,29)"/><text x="273.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.15%)</title><rect x="270" y="900" width="2" height="15" fill="rgb(249,195,50)"/><text x="273.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.15%)</title><rect x="270" y="916" width="2" height="15" fill="rgb(247,175,16)"/><text x="273.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.15%)</title><rect x="270" y="932" width="2" height="15" fill="rgb(208,145,1)"/><text x="273.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.15%)</title><rect x="270" y="948" width="2" height="15" fill="rgb(224,130,7)"/><text x="273.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.15%)</title><rect x="270" y="964" width="2" height="15" fill="rgb(224,66,52)"/><text x="273.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.15%)</title><rect x="270" y="980" width="2" height="15" fill="rgb(237,160,31)"/><text x="273.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.15%)</title><rect x="270" y="996" width="2" height="15" fill="rgb(240,130,49)"/><text x="273.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (2 samples, 0.31%)</title><rect x="270" y="148" width="4" height="15" fill="rgb(231,27,24)"/><text x="273.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="270" y="164" width="4" height="15" fill="rgb(212,0,5)"/><text x="273.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="270" y="180" width="4" height="15" fill="rgb(218,137,41)"/><text x="273.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="270" y="196" width="4" height="15" fill="rgb(206,126,13)"/><text x="273.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="270" y="212" width="4" height="15" fill="rgb(210,7,5)"/><text x="273.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="270" y="228" width="4" height="15" fill="rgb(246,117,54)"/><text x="273.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="270" y="244" width="4" height="15" fill="rgb(246,30,35)"/><text x="273.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="270" y="260" width="4" height="15" fill="rgb(218,74,53)"/><text x="273.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="270" y="276" width="4" height="15" fill="rgb(254,49,24)"/><text x="273.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.31%)</title><rect x="270" y="292" width="4" height="15" fill="rgb(229,9,2)"/><text x="273.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="270" y="308" width="4" height="15" fill="rgb(213,70,46)"/><text x="273.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="270" y="324" width="4" height="15" fill="rgb(247,0,12)"/><text x="273.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="270" y="340" width="4" height="15" fill="rgb(251,171,51)"/><text x="273.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="270" y="356" width="4" height="15" fill="rgb(234,22,34)"/><text x="273.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="270" y="372" width="4" height="15" fill="rgb(236,111,21)"/><text x="273.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:9) (1 samples, 0.15%)</title><rect x="272" y="388" width="2" height="15" fill="rgb(243,197,17)"/><text x="275.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="272" y="404" width="2" height="15" fill="rgb(237,194,1)"/><text x="275.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="272" y="420" width="2" height="15" fill="rgb(254,89,13)"/><text x="275.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="272" y="436" width="2" height="15" fill="rgb(229,173,13)"/><text x="275.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="272" y="452" width="2" height="15" fill="rgb(224,138,13)"/><text x="275.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="272" y="468" width="2" height="15" fill="rgb(208,156,30)"/><text x="275.00" y="478.50"></text></g><g><title>&lt;module&gt; (typing.py:399) (1 samples, 0.15%)</title><rect x="272" y="484" width="2" height="15" fill="rgb(230,198,19)"/><text x="275.00" y="494.50"></text></g><g><title>__new__ (typing.py:308) (1 samples, 0.15%)</title><rect x="272" y="500" width="2" height="15" fill="rgb(221,187,29)"/><text x="275.00" y="510.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.15%)</title><rect x="274" y="292" width="1" height="15" fill="rgb(233,114,52)"/><text x="277.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="308" width="1" height="15" fill="rgb(242,168,22)"/><text x="277.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="324" width="1" height="15" fill="rgb(212,111,18)"/><text x="277.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="340" width="1" height="15" fill="rgb(238,47,11)"/><text x="277.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="356" width="1" height="15" fill="rgb(225,147,3)"/><text x="277.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="372" width="1" height="15" fill="rgb(251,10,6)"/><text x="277.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.15%)</title><rect x="274" y="388" width="1" height="15" fill="rgb(244,61,38)"/><text x="277.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="404" width="1" height="15" fill="rgb(214,96,28)"/><text x="277.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="420" width="1" height="15" fill="rgb(248,34,41)"/><text x="277.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="436" width="1" height="15" fill="rgb(237,133,46)"/><text x="277.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="452" width="1" height="15" fill="rgb(242,102,3)"/><text x="277.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="468" width="1" height="15" fill="rgb(227,147,38)"/><text x="277.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.15%)</title><rect x="274" y="484" width="1" height="15" fill="rgb(226,80,12)"/><text x="277.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="500" width="1" height="15" fill="rgb(247,74,51)"/><text x="277.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="516" width="1" height="15" fill="rgb(220,17,22)"/><text x="277.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="532" width="1" height="15" fill="rgb(218,116,19)"/><text x="277.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="548" width="1" height="15" fill="rgb(205,157,53)"/><text x="277.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="564" width="1" height="15" fill="rgb(222,55,29)"/><text x="277.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.15%)</title><rect x="274" y="580" width="1" height="15" fill="rgb(229,3,45)"/><text x="277.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="596" width="1" height="15" fill="rgb(233,227,16)"/><text x="277.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="612" width="1" height="15" fill="rgb(219,109,23)"/><text x="277.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="628" width="1" height="15" fill="rgb(253,197,54)"/><text x="277.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="644" width="1" height="15" fill="rgb(232,125,49)"/><text x="277.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="660" width="1" height="15" fill="rgb(233,97,37)"/><text x="277.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.15%)</title><rect x="274" y="676" width="1" height="15" fill="rgb(215,144,30)"/><text x="277.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="692" width="1" height="15" fill="rgb(213,49,0)"/><text x="277.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="708" width="1" height="15" fill="rgb(245,49,15)"/><text x="277.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="724" width="1" height="15" fill="rgb(233,59,33)"/><text x="277.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="740" width="1" height="15" fill="rgb(206,85,12)"/><text x="277.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="756" width="1" height="15" fill="rgb(212,51,52)"/><text x="277.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.15%)</title><rect x="274" y="772" width="1" height="15" fill="rgb(230,205,3)"/><text x="277.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="788" width="1" height="15" fill="rgb(244,182,14)"/><text x="277.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="804" width="1" height="15" fill="rgb(222,75,48)"/><text x="277.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="820" width="1" height="15" fill="rgb(205,134,26)"/><text x="277.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="836" width="1" height="15" fill="rgb(229,120,4)"/><text x="277.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="852" width="1" height="15" fill="rgb(208,19,4)"/><text x="277.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.15%)</title><rect x="274" y="868" width="1" height="15" fill="rgb(219,160,28)"/><text x="277.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="884" width="1" height="15" fill="rgb(228,218,34)"/><text x="277.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="900" width="1" height="15" fill="rgb(252,14,31)"/><text x="277.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="916" width="1" height="15" fill="rgb(243,1,15)"/><text x="277.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="932" width="1" height="15" fill="rgb(236,89,12)"/><text x="277.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="948" width="1" height="15" fill="rgb(250,45,18)"/><text x="277.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.15%)</title><rect x="274" y="964" width="1" height="15" fill="rgb(213,125,15)"/><text x="277.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="980" width="1" height="15" fill="rgb(222,87,25)"/><text x="277.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="996" width="1" height="15" fill="rgb(235,88,17)"/><text x="277.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="1012" width="1" height="15" fill="rgb(207,136,39)"/><text x="277.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="1028" width="1" height="15" fill="rgb(238,196,15)"/><text x="277.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="1044" width="1" height="15" fill="rgb(235,46,44)"/><text x="277.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.15%)</title><rect x="274" y="1060" width="1" height="15" fill="rgb(239,119,31)"/><text x="277.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="1076" width="1" height="15" fill="rgb(233,75,43)"/><text x="277.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="1092" width="1" height="15" fill="rgb(210,14,15)"/><text x="277.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="1108" width="1" height="15" fill="rgb(226,228,0)"/><text x="277.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="1124" width="1" height="15" fill="rgb(234,71,38)"/><text x="277.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="1140" width="1" height="15" fill="rgb(215,149,53)"/><text x="277.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.15%)</title><rect x="274" y="1156" width="1" height="15" fill="rgb(222,156,4)"/><text x="277.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="1172" width="1" height="15" fill="rgb(235,180,23)"/><text x="277.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="1188" width="1" height="15" fill="rgb(217,75,19)"/><text x="277.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="1204" width="1" height="15" fill="rgb(217,2,49)"/><text x="277.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="1220" width="1" height="15" fill="rgb(244,36,29)"/><text x="277.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="1236" width="1" height="15" fill="rgb(236,118,44)"/><text x="277.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.15%)</title><rect x="274" y="1252" width="1" height="15" fill="rgb(216,132,41)"/><text x="277.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="1268" width="1" height="15" fill="rgb(244,188,32)"/><text x="277.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="1284" width="1" height="15" fill="rgb(215,164,12)"/><text x="277.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="1300" width="1" height="15" fill="rgb(216,129,32)"/><text x="277.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="1316" width="1" height="15" fill="rgb(242,29,4)"/><text x="277.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="1332" width="1" height="15" fill="rgb(247,83,18)"/><text x="277.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.15%)</title><rect x="274" y="1348" width="1" height="15" fill="rgb(228,209,9)"/><text x="277.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="274" y="1364" width="1" height="15" fill="rgb(210,38,26)"/><text x="277.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="274" y="1380" width="1" height="15" fill="rgb(242,133,38)"/><text x="277.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="274" y="1396" width="1" height="15" fill="rgb(223,46,2)"/><text x="277.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="274" y="1412" width="1" height="15" fill="rgb(232,229,11)"/><text x="277.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="274" y="1428" width="1" height="15" fill="rgb(227,214,35)"/><text x="277.00" y="1438.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.15%)</title><rect x="274" y="1444" width="1" height="15" fill="rgb(233,89,47)"/><text x="277.00" y="1454.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.15%)</title><rect x="274" y="1460" width="1" height="15" fill="rgb(210,33,17)"/><text x="277.00" y="1470.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.15%)</title><rect x="274" y="1476" width="1" height="15" fill="rgb(236,128,17)"/><text x="277.00" y="1486.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.15%)</title><rect x="274" y="1492" width="1" height="15" fill="rgb(254,125,29)"/><text x="277.00" y="1502.50"></text></g><g><title>search (re.py:183) (1 samples, 0.15%)</title><rect x="274" y="1508" width="1" height="15" fill="rgb(249,108,10)"/><text x="277.00" y="1518.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="274" y="1524" width="1" height="15" fill="rgb(220,15,47)"/><text x="277.00" y="1534.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.15%)</title><rect x="274" y="1540" width="1" height="15" fill="rgb(225,69,19)"/><text x="277.00" y="1550.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.15%)</title><rect x="274" y="1556" width="1" height="15" fill="rgb(249,191,43)"/><text x="277.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="274" y="1572" width="1" height="15" fill="rgb(239,80,49)"/><text x="277.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:662) (1 samples, 0.15%)</title><rect x="274" y="1588" width="1" height="15" fill="rgb(217,214,15)"/><text x="277.00" y="1598.50"></text></g><g><title>__setitem__ (sre_parse.py:169) (1 samples, 0.15%)</title><rect x="274" y="1604" width="1" height="15" fill="rgb(237,195,5)"/><text x="277.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.15%)</title><rect x="275" y="820" width="2" height="15" fill="rgb(246,170,27)"/><text x="278.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="275" y="836" width="2" height="15" fill="rgb(251,140,30)"/><text x="278.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="852" width="2" height="15" fill="rgb(211,109,37)"/><text x="278.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="868" width="2" height="15" fill="rgb(221,79,42)"/><text x="278.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="884" width="2" height="15" fill="rgb(229,48,54)"/><text x="278.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="900" width="2" height="15" fill="rgb(223,178,42)"/><text x="278.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="916" width="2" height="15" fill="rgb(237,195,50)"/><text x="278.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="932" width="2" height="15" fill="rgb(208,134,51)"/><text x="278.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.15%)</title><rect x="275" y="948" width="2" height="15" fill="rgb(238,87,10)"/><text x="278.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="964" width="2" height="15" fill="rgb(221,83,34)"/><text x="278.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="980" width="2" height="15" fill="rgb(227,67,4)"/><text x="278.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="996" width="2" height="15" fill="rgb(216,222,19)"/><text x="278.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1012" width="2" height="15" fill="rgb(216,176,5)"/><text x="278.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1028" width="2" height="15" fill="rgb(233,36,7)"/><text x="278.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.15%)</title><rect x="275" y="1044" width="2" height="15" fill="rgb(237,194,1)"/><text x="278.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1060" width="2" height="15" fill="rgb(235,79,29)"/><text x="278.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1076" width="2" height="15" fill="rgb(239,0,17)"/><text x="278.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1092" width="2" height="15" fill="rgb(221,200,1)"/><text x="278.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1108" width="2" height="15" fill="rgb(252,178,25)"/><text x="278.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1124" width="2" height="15" fill="rgb(240,15,39)"/><text x="278.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.15%)</title><rect x="275" y="1140" width="2" height="15" fill="rgb(225,1,1)"/><text x="278.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1156" width="2" height="15" fill="rgb(209,39,4)"/><text x="278.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1172" width="2" height="15" fill="rgb(213,87,22)"/><text x="278.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1188" width="2" height="15" fill="rgb(215,121,7)"/><text x="278.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1204" width="2" height="15" fill="rgb(213,91,20)"/><text x="278.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1220" width="2" height="15" fill="rgb(218,100,10)"/><text x="278.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.15%)</title><rect x="275" y="1236" width="2" height="15" fill="rgb(208,136,50)"/><text x="278.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1252" width="2" height="15" fill="rgb(217,167,31)"/><text x="278.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1268" width="2" height="15" fill="rgb(209,174,7)"/><text x="278.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1284" width="2" height="15" fill="rgb(212,144,7)"/><text x="278.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1300" width="2" height="15" fill="rgb(220,202,4)"/><text x="278.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1316" width="2" height="15" fill="rgb(236,68,2)"/><text x="278.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.15%)</title><rect x="275" y="1332" width="2" height="15" fill="rgb(240,119,45)"/><text x="278.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1348" width="2" height="15" fill="rgb(208,136,49)"/><text x="278.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="275" y="1364" width="2" height="15" fill="rgb(229,84,9)"/><text x="278.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1380" width="2" height="15" fill="rgb(207,7,44)"/><text x="278.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1396" width="2" height="15" fill="rgb(237,225,14)"/><text x="278.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1412" width="2" height="15" fill="rgb(246,152,11)"/><text x="278.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1428" width="2" height="15" fill="rgb(216,90,5)"/><text x="278.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1444" width="2" height="15" fill="rgb(205,221,6)"/><text x="278.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1460" width="2" height="15" fill="rgb(248,225,2)"/><text x="278.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:11) (1 samples, 0.15%)</title><rect x="275" y="1476" width="2" height="15" fill="rgb(211,89,19)"/><text x="278.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1492" width="2" height="15" fill="rgb(225,116,22)"/><text x="278.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="275" y="1508" width="2" height="15" fill="rgb(211,144,22)"/><text x="278.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1524" width="2" height="15" fill="rgb(220,192,54)"/><text x="278.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1540" width="2" height="15" fill="rgb(249,127,3)"/><text x="278.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1556" width="2" height="15" fill="rgb(241,221,39)"/><text x="278.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1572" width="2" height="15" fill="rgb(224,17,53)"/><text x="278.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1588" width="2" height="15" fill="rgb(224,149,52)"/><text x="278.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1604" width="2" height="15" fill="rgb(231,148,6)"/><text x="278.00" y="1614.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/__init__.py:4) (1 samples, 0.15%)</title><rect x="275" y="1620" width="2" height="15" fill="rgb(236,36,34)"/><text x="278.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1636" width="2" height="15" fill="rgb(219,229,17)"/><text x="278.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1652" width="2" height="15" fill="rgb(208,159,14)"/><text x="278.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1668" width="2" height="15" fill="rgb(244,24,54)"/><text x="278.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1684" width="2" height="15" fill="rgb(206,184,37)"/><text x="278.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1700" width="2" height="15" fill="rgb(244,114,27)"/><text x="278.00" y="1710.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/context.py:21) (1 samples, 0.15%)</title><rect x="275" y="1716" width="2" height="15" fill="rgb(210,217,16)"/><text x="278.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1732" width="2" height="15" fill="rgb(216,41,5)"/><text x="278.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1748" width="2" height="15" fill="rgb(233,157,12)"/><text x="278.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1764" width="2" height="15" fill="rgb(234,39,3)"/><text x="278.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1780" width="2" height="15" fill="rgb(210,89,20)"/><text x="278.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1796" width="2" height="15" fill="rgb(229,193,23)"/><text x="278.00" y="1806.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/process.py:11) (1 samples, 0.15%)</title><rect x="275" y="1812" width="2" height="15" fill="rgb(252,59,34)"/><text x="278.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1828" width="2" height="15" fill="rgb(251,202,33)"/><text x="278.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1844" width="2" height="15" fill="rgb(209,10,38)"/><text x="278.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1860" width="2" height="15" fill="rgb(248,225,5)"/><text x="278.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1876" width="2" height="15" fill="rgb(209,91,1)"/><text x="278.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1892" width="2" height="15" fill="rgb(249,194,11)"/><text x="278.00" y="1902.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat.py:25) (1 samples, 0.15%)</title><rect x="275" y="1908" width="2" height="15" fill="rgb(227,77,30)"/><text x="278.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="1924" width="2" height="15" fill="rgb(218,97,51)"/><text x="278.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="1940" width="2" height="15" fill="rgb(243,176,18)"/><text x="278.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="1956" width="2" height="15" fill="rgb(224,181,17)"/><text x="278.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="275" y="1972" width="2" height="15" fill="rgb(207,161,21)"/><text x="278.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="275" y="1988" width="2" height="15" fill="rgb(225,134,28)"/><text x="278.00" y="1998.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat_posix.py:13) (1 samples, 0.15%)</title><rect x="275" y="2004" width="2" height="15" fill="rgb(215,226,27)"/><text x="278.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="275" y="2020" width="2" height="15" fill="rgb(252,124,44)"/><text x="278.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="275" y="2036" width="2" height="15" fill="rgb(227,226,9)"/><text x="278.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="275" y="2052" width="2" height="15" fill="rgb(217,184,21)"/><text x="278.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="275" y="2068" width="2" height="15" fill="rgb(212,15,54)"/><text x="278.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="275" y="2084" width="2" height="15" fill="rgb(218,12,26)"/><text x="278.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="275" y="2100" width="2" height="15" fill="rgb(209,203,6)"/><text x="278.00" y="2110.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4345) (1 samples, 0.15%)</title><rect x="277" y="1364" width="2" height="15" fill="rgb(247,156,50)"/><text x="280.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.15%)</title><rect x="277" y="1380" width="2" height="15" fill="rgb(218,163,29)"/><text x="280.00" y="1390.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.31%)</title><rect x="277" y="1236" width="4" height="15" fill="rgb(247,72,21)"/><text x="280.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.31%)</title><rect x="277" y="1252" width="4" height="15" fill="rgb(231,143,6)"/><text x="280.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="277" y="1268" width="4" height="15" fill="rgb(214,34,45)"/><text x="280.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="277" y="1284" width="4" height="15" fill="rgb(243,104,17)"/><text x="280.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="277" y="1300" width="4" height="15" fill="rgb(219,39,8)"/><text x="280.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="277" y="1316" width="4" height="15" fill="rgb(217,222,18)"/><text x="280.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="277" y="1332" width="4" height="15" fill="rgb(246,44,11)"/><text x="280.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="277" y="1348" width="4" height="15" fill="rgb(220,191,5)"/><text x="280.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5755) (1 samples, 0.15%)</title><rect x="279" y="1364" width="2" height="15" fill="rgb(247,132,49)"/><text x="282.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.15%)</title><rect x="279" y="1380" width="2" height="15" fill="rgb(237,12,7)"/><text x="282.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.15%)</title><rect x="279" y="1396" width="2" height="15" fill="rgb(236,15,19)"/><text x="282.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.15%)</title><rect x="279" y="1412" width="2" height="15" fill="rgb(241,161,25)"/><text x="282.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 0.62%)</title><rect x="275" y="532" width="8" height="15" fill="rgb(236,73,53)"/><text x="278.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="275" y="548" width="8" height="15" fill="rgb(208,113,45)"/><text x="278.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="275" y="564" width="8" height="15" fill="rgb(237,202,3)"/><text x="278.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="275" y="580" width="8" height="15" fill="rgb(234,69,33)"/><text x="278.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="275" y="596" width="8" height="15" fill="rgb(232,185,26)"/><text x="278.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="275" y="612" width="8" height="15" fill="rgb(243,115,24)"/><text x="278.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 0.62%)</title><rect x="275" y="628" width="8" height="15" fill="rgb(246,7,23)"/><text x="278.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="275" y="644" width="8" height="15" fill="rgb(236,197,19)"/><text x="278.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="275" y="660" width="8" height="15" fill="rgb(245,212,11)"/><text x="278.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="275" y="676" width="8" height="15" fill="rgb(239,81,24)"/><text x="278.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="275" y="692" width="8" height="15" fill="rgb(227,182,9)"/><text x="278.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="275" y="708" width="8" height="15" fill="rgb(237,158,2)"/><text x="278.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 0.62%)</title><rect x="275" y="724" width="8" height="15" fill="rgb(221,109,29)"/><text x="278.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="275" y="740" width="8" height="15" fill="rgb(219,208,50)"/><text x="278.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="275" y="756" width="8" height="15" fill="rgb(245,175,14)"/><text x="278.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="275" y="772" width="8" height="15" fill="rgb(209,66,21)"/><text x="278.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="275" y="788" width="8" height="15" fill="rgb(216,85,12)"/><text x="278.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="275" y="804" width="8" height="15" fill="rgb(252,64,30)"/><text x="278.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.46%)</title><rect x="277" y="820" width="6" height="15" fill="rgb(234,157,22)"/><text x="280.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="277" y="836" width="6" height="15" fill="rgb(244,125,26)"/><text x="280.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="277" y="852" width="6" height="15" fill="rgb(225,64,24)"/><text x="280.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="277" y="868" width="6" height="15" fill="rgb(244,66,24)"/><text x="280.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="277" y="884" width="6" height="15" fill="rgb(235,74,6)"/><text x="280.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="277" y="900" width="6" height="15" fill="rgb(254,93,40)"/><text x="280.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.46%)</title><rect x="277" y="916" width="6" height="15" fill="rgb(241,165,6)"/><text x="280.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="277" y="932" width="6" height="15" fill="rgb(243,51,27)"/><text x="280.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="277" y="948" width="6" height="15" fill="rgb(228,228,50)"/><text x="280.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="277" y="964" width="6" height="15" fill="rgb(220,193,41)"/><text x="280.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="277" y="980" width="6" height="15" fill="rgb(243,73,39)"/><text x="280.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="277" y="996" width="6" height="15" fill="rgb(227,30,53)"/><text x="280.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.46%)</title><rect x="277" y="1012" width="6" height="15" fill="rgb(251,154,41)"/><text x="280.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="277" y="1028" width="6" height="15" fill="rgb(216,61,7)"/><text x="280.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="277" y="1044" width="6" height="15" fill="rgb(226,52,25)"/><text x="280.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="277" y="1060" width="6" height="15" fill="rgb(250,197,29)"/><text x="280.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="277" y="1076" width="6" height="15" fill="rgb(221,189,2)"/><text x="280.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="277" y="1092" width="6" height="15" fill="rgb(205,97,22)"/><text x="280.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.46%)</title><rect x="277" y="1108" width="6" height="15" fill="rgb(233,32,7)"/><text x="280.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.46%)</title><rect x="277" y="1124" width="6" height="15" fill="rgb(251,199,40)"/><text x="280.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="277" y="1140" width="6" height="15" fill="rgb(228,153,5)"/><text x="280.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="277" y="1156" width="6" height="15" fill="rgb(228,12,20)"/><text x="280.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="277" y="1172" width="6" height="15" fill="rgb(242,38,37)"/><text x="280.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="277" y="1188" width="6" height="15" fill="rgb(212,110,26)"/><text x="280.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="277" y="1204" width="6" height="15" fill="rgb(225,119,12)"/><text x="280.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="277" y="1220" width="6" height="15" fill="rgb(220,18,1)"/><text x="280.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.15%)</title><rect x="281" y="1236" width="2" height="15" fill="rgb(221,0,43)"/><text x="284.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="281" y="1252" width="2" height="15" fill="rgb(219,164,51)"/><text x="284.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="281" y="1268" width="2" height="15" fill="rgb(238,36,3)"/><text x="284.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="281" y="1284" width="2" height="15" fill="rgb(222,58,10)"/><text x="284.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="281" y="1300" width="2" height="15" fill="rgb(244,36,49)"/><text x="284.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="281" y="1316" width="2" height="15" fill="rgb(244,220,38)"/><text x="284.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="281" y="1332" width="2" height="15" fill="rgb(229,25,6)"/><text x="284.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="281" y="1348" width="2" height="15" fill="rgb(229,194,27)"/><text x="284.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:996) (1 samples, 0.15%)</title><rect x="281" y="1364" width="2" height="15" fill="rgb(252,13,41)"/><text x="284.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.15%)</title><rect x="281" y="1380" width="2" height="15" fill="rgb(241,133,52)"/><text x="284.00" y="1390.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.15%)</title><rect x="281" y="1396" width="2" height="15" fill="rgb(215,159,30)"/><text x="284.00" y="1406.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.15%)</title><rect x="281" y="1412" width="2" height="15" fill="rgb(230,20,16)"/><text x="284.00" y="1422.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:62) (1 samples, 0.15%)</title><rect x="281" y="1428" width="2" height="15" fill="rgb(216,217,43)"/><text x="284.00" y="1438.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="281" y="1444" width="2" height="15" fill="rgb(221,28,43)"/><text x="284.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.15%)</title><rect x="283" y="1060" width="1" height="15" fill="rgb(229,11,9)"/><text x="286.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1076" width="1" height="15" fill="rgb(252,193,4)"/><text x="286.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1092" width="1" height="15" fill="rgb(241,159,34)"/><text x="286.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1108" width="1" height="15" fill="rgb(248,24,32)"/><text x="286.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1124" width="1" height="15" fill="rgb(246,96,4)"/><text x="286.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1140" width="1" height="15" fill="rgb(252,166,39)"/><text x="286.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.15%)</title><rect x="283" y="1156" width="1" height="15" fill="rgb(234,103,31)"/><text x="286.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1172" width="1" height="15" fill="rgb(242,203,50)"/><text x="286.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1188" width="1" height="15" fill="rgb(233,149,5)"/><text x="286.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1204" width="1" height="15" fill="rgb(227,159,14)"/><text x="286.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1220" width="1" height="15" fill="rgb(238,189,5)"/><text x="286.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1236" width="1" height="15" fill="rgb(206,178,19)"/><text x="286.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.15%)</title><rect x="283" y="1252" width="1" height="15" fill="rgb(237,179,19)"/><text x="286.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1268" width="1" height="15" fill="rgb(253,104,19)"/><text x="286.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1284" width="1" height="15" fill="rgb(206,209,11)"/><text x="286.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1300" width="1" height="15" fill="rgb(237,126,44)"/><text x="286.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1316" width="1" height="15" fill="rgb(251,186,3)"/><text x="286.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1332" width="1" height="15" fill="rgb(239,207,13)"/><text x="286.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.15%)</title><rect x="283" y="1348" width="1" height="15" fill="rgb(239,44,32)"/><text x="286.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1364" width="1" height="15" fill="rgb(208,71,24)"/><text x="286.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.15%)</title><rect x="283" y="1380" width="1" height="15" fill="rgb(239,146,26)"/><text x="286.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.15%)</title><rect x="283" y="1396" width="1" height="15" fill="rgb(221,137,21)"/><text x="286.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.15%)</title><rect x="283" y="1412" width="1" height="15" fill="rgb(238,18,10)"/><text x="286.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.15%)</title><rect x="283" y="1428" width="1" height="15" fill="rgb(253,194,29)"/><text x="286.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.15%)</title><rect x="283" y="1444" width="1" height="15" fill="rgb(223,146,28)"/><text x="286.00" y="1454.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.15%)</title><rect x="283" y="1460" width="1" height="15" fill="rgb(219,89,36)"/><text x="286.00" y="1470.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.15%)</title><rect x="283" y="1476" width="1" height="15" fill="rgb(206,164,20)"/><text x="286.00" y="1486.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.31%)</title><rect x="283" y="964" width="3" height="15" fill="rgb(216,30,0)"/><text x="286.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="283" y="980" width="3" height="15" fill="rgb(235,163,53)"/><text x="286.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="283" y="996" width="3" height="15" fill="rgb(235,157,39)"/><text x="286.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="283" y="1012" width="3" height="15" fill="rgb(217,108,31)"/><text x="286.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="283" y="1028" width="3" height="15" fill="rgb(244,150,29)"/><text x="286.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="1044" width="3" height="15" fill="rgb(210,171,3)"/><text x="286.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.15%)</title><rect x="284" y="1060" width="2" height="15" fill="rgb(205,87,31)"/><text x="287.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="284" y="1076" width="2" height="15" fill="rgb(213,225,16)"/><text x="287.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="284" y="1092" width="2" height="15" fill="rgb(227,86,53)"/><text x="287.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="284" y="1108" width="2" height="15" fill="rgb(205,195,50)"/><text x="287.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="284" y="1124" width="2" height="15" fill="rgb(244,98,36)"/><text x="287.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="284" y="1140" width="2" height="15" fill="rgb(235,139,52)"/><text x="287.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:120) (1 samples, 0.15%)</title><rect x="284" y="1156" width="2" height="15" fill="rgb(252,169,18)"/><text x="287.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="284" y="1172" width="2" height="15" fill="rgb(206,119,7)"/><text x="287.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="284" y="1188" width="2" height="15" fill="rgb(252,101,38)"/><text x="287.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="284" y="1204" width="2" height="15" fill="rgb(219,112,51)"/><text x="287.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="284" y="1220" width="2" height="15" fill="rgb(243,94,42)"/><text x="287.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="284" y="1236" width="2" height="15" fill="rgb(251,63,35)"/><text x="287.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py:4) (1 samples, 0.15%)</title><rect x="284" y="1252" width="2" height="15" fill="rgb(250,219,31)"/><text x="287.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="284" y="1268" width="2" height="15" fill="rgb(222,172,23)"/><text x="287.00" y="1278.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;:177) (1 samples, 0.15%)</title><rect x="284" y="1284" width="2" height="15" fill="rgb(229,154,10)"/><text x="287.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:4) (10 samples, 1.54%)</title><rect x="270" y="52" width="18" height="15" fill="rgb(209,217,35)"/><text x="273.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.54%)</title><rect x="270" y="68" width="18" height="15" fill="rgb(222,198,11)"/><text x="273.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.54%)</title><rect x="270" y="84" width="18" height="15" fill="rgb(213,25,32)"/><text x="273.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.54%)</title><rect x="270" y="100" width="18" height="15" fill="rgb(242,208,9)"/><text x="273.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.54%)</title><rect x="270" y="116" width="18" height="15" fill="rgb(214,42,27)"/><text x="273.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.54%)</title><rect x="270" y="132" width="18" height="15" fill="rgb(217,55,16)"/><text x="273.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (8 samples, 1.23%)</title><rect x="274" y="148" width="14" height="15" fill="rgb(215,130,10)"/><text x="277.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.23%)</title><rect x="274" y="164" width="14" height="15" fill="rgb(239,217,10)"/><text x="277.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.23%)</title><rect x="274" y="180" width="14" height="15" fill="rgb(251,91,24)"/><text x="277.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.23%)</title><rect x="274" y="196" width="14" height="15" fill="rgb(254,12,15)"/><text x="277.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.23%)</title><rect x="274" y="212" width="14" height="15" fill="rgb(227,177,24)"/><text x="277.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.23%)</title><rect x="274" y="228" width="14" height="15" fill="rgb(231,229,45)"/><text x="277.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.23%)</title><rect x="274" y="244" width="14" height="15" fill="rgb(245,23,44)"/><text x="277.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.23%)</title><rect x="274" y="260" width="14" height="15" fill="rgb(240,111,12)"/><text x="277.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.23%)</title><rect x="274" y="276" width="14" height="15" fill="rgb(245,107,50)"/><text x="277.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 1.08%)</title><rect x="275" y="292" width="13" height="15" fill="rgb(234,211,32)"/><text x="278.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="275" y="308" width="13" height="15" fill="rgb(252,139,31)"/><text x="278.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.08%)</title><rect x="275" y="324" width="13" height="15" fill="rgb(221,52,18)"/><text x="278.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="275" y="340" width="13" height="15" fill="rgb(248,145,40)"/><text x="278.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="275" y="356" width="13" height="15" fill="rgb(229,187,29)"/><text x="278.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.08%)</title><rect x="275" y="372" width="13" height="15" fill="rgb(212,8,1)"/><text x="278.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.08%)</title><rect x="275" y="388" width="13" height="15" fill="rgb(251,190,41)"/><text x="278.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.08%)</title><rect x="275" y="404" width="13" height="15" fill="rgb(215,89,12)"/><text x="278.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="275" y="420" width="13" height="15" fill="rgb(248,216,46)"/><text x="278.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 1.08%)</title><rect x="275" y="436" width="13" height="15" fill="rgb(239,213,26)"/><text x="278.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="275" y="452" width="13" height="15" fill="rgb(231,113,21)"/><text x="278.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.08%)</title><rect x="275" y="468" width="13" height="15" fill="rgb(233,36,34)"/><text x="278.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.08%)</title><rect x="275" y="484" width="13" height="15" fill="rgb(252,205,31)"/><text x="278.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.08%)</title><rect x="275" y="500" width="13" height="15" fill="rgb(223,136,28)"/><text x="278.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="275" y="516" width="13" height="15" fill="rgb(236,227,17)"/><text x="278.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.46%)</title><rect x="283" y="532" width="5" height="15" fill="rgb(237,113,22)"/><text x="286.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="283" y="548" width="5" height="15" fill="rgb(212,101,39)"/><text x="286.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="283" y="564" width="5" height="15" fill="rgb(209,141,13)"/><text x="286.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="283" y="580" width="5" height="15" fill="rgb(215,181,51)"/><text x="286.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="283" y="596" width="5" height="15" fill="rgb(252,58,10)"/><text x="286.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="283" y="612" width="5" height="15" fill="rgb(219,111,3)"/><text x="286.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.46%)</title><rect x="283" y="628" width="5" height="15" fill="rgb(241,1,43)"/><text x="286.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="283" y="644" width="5" height="15" fill="rgb(222,162,12)"/><text x="286.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="283" y="660" width="5" height="15" fill="rgb(236,112,9)"/><text x="286.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="283" y="676" width="5" height="15" fill="rgb(209,159,50)"/><text x="286.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="283" y="692" width="5" height="15" fill="rgb(220,196,36)"/><text x="286.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="283" y="708" width="5" height="15" fill="rgb(237,110,12)"/><text x="286.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.46%)</title><rect x="283" y="724" width="5" height="15" fill="rgb(242,54,13)"/><text x="286.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="283" y="740" width="5" height="15" fill="rgb(211,104,18)"/><text x="286.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="283" y="756" width="5" height="15" fill="rgb(242,215,10)"/><text x="286.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="283" y="772" width="5" height="15" fill="rgb(210,37,18)"/><text x="286.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="283" y="788" width="5" height="15" fill="rgb(254,178,48)"/><text x="286.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="283" y="804" width="5" height="15" fill="rgb(238,95,10)"/><text x="286.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="283" y="820" width="5" height="15" fill="rgb(207,131,7)"/><text x="286.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="283" y="836" width="5" height="15" fill="rgb(250,163,10)"/><text x="286.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="283" y="852" width="5" height="15" fill="rgb(226,176,38)"/><text x="286.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.46%)</title><rect x="283" y="868" width="5" height="15" fill="rgb(230,80,54)"/><text x="286.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="283" y="884" width="5" height="15" fill="rgb(238,25,48)"/><text x="286.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="283" y="900" width="5" height="15" fill="rgb(209,220,14)"/><text x="286.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="283" y="916" width="5" height="15" fill="rgb(205,10,45)"/><text x="286.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="283" y="932" width="5" height="15" fill="rgb(231,132,22)"/><text x="286.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="283" y="948" width="5" height="15" fill="rgb(211,42,4)"/><text x="286.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.15%)</title><rect x="286" y="964" width="2" height="15" fill="rgb(251,93,49)"/><text x="289.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="286" y="980" width="2" height="15" fill="rgb(215,92,14)"/><text x="289.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="996" width="2" height="15" fill="rgb(213,29,6)"/><text x="289.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="286" y="1012" width="2" height="15" fill="rgb(225,203,44)"/><text x="289.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="286" y="1028" width="2" height="15" fill="rgb(216,90,14)"/><text x="289.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="286" y="1044" width="2" height="15" fill="rgb(231,163,17)"/><text x="289.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="286" y="1060" width="2" height="15" fill="rgb(213,104,50)"/><text x="289.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="1076" width="2" height="15" fill="rgb(214,47,26)"/><text x="289.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.15%)</title><rect x="286" y="1092" width="2" height="15" fill="rgb(243,114,13)"/><text x="289.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="286" y="1108" width="2" height="15" fill="rgb(220,199,28)"/><text x="289.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="1124" width="2" height="15" fill="rgb(219,209,6)"/><text x="289.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="286" y="1140" width="2" height="15" fill="rgb(208,40,37)"/><text x="289.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="286" y="1156" width="2" height="15" fill="rgb(216,170,53)"/><text x="289.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="286" y="1172" width="2" height="15" fill="rgb(252,153,8)"/><text x="289.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="286" y="1188" width="2" height="15" fill="rgb(224,175,15)"/><text x="289.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="1204" width="2" height="15" fill="rgb(226,175,48)"/><text x="289.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.15%)</title><rect x="286" y="1220" width="2" height="15" fill="rgb(219,93,4)"/><text x="289.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="286" y="1236" width="2" height="15" fill="rgb(208,7,1)"/><text x="289.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="286" y="1252" width="2" height="15" fill="rgb(223,50,44)"/><text x="289.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="286" y="1268" width="2" height="15" fill="rgb(247,48,13)"/><text x="289.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="286" y="1284" width="2" height="15" fill="rgb(212,150,43)"/><text x="289.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="1300" width="2" height="15" fill="rgb(210,8,14)"/><text x="289.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.15%)</title><rect x="286" y="1316" width="2" height="15" fill="rgb(250,45,32)"/><text x="289.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="286" y="1332" width="2" height="15" fill="rgb(233,7,46)"/><text x="289.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="286" y="1348" width="2" height="15" fill="rgb(228,50,40)"/><text x="289.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="286" y="1364" width="2" height="15" fill="rgb(229,163,6)"/><text x="289.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="286" y="1380" width="2" height="15" fill="rgb(222,6,24)"/><text x="289.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="286" y="1396" width="2" height="15" fill="rgb(220,119,31)"/><text x="289.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.15%)</title><rect x="286" y="1412" width="2" height="15" fill="rgb(247,107,35)"/><text x="289.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.15%)</title><rect x="286" y="1428" width="2" height="15" fill="rgb(242,186,30)"/><text x="289.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.15%)</title><rect x="286" y="1444" width="2" height="15" fill="rgb(224,80,18)"/><text x="289.00" y="1454.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.15%)</title><rect x="286" y="1460" width="2" height="15" fill="rgb(213,61,16)"/><text x="289.00" y="1470.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.15%)</title><rect x="286" y="1476" width="2" height="15" fill="rgb(244,17,21)"/><text x="289.00" y="1486.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:28) (1 samples, 0.15%)</title><rect x="288" y="84" width="2" height="15" fill="rgb(234,126,10)"/><text x="291.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.15%)</title><rect x="288" y="100" width="2" height="15" fill="rgb(251,177,19)"/><text x="291.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.15%)</title><rect x="288" y="116" width="2" height="15" fill="rgb(234,53,10)"/><text x="291.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.15%)</title><rect x="288" y="132" width="2" height="15" fill="rgb(232,16,30)"/><text x="291.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.15%)</title><rect x="288" y="148" width="2" height="15" fill="rgb(214,73,43)"/><text x="291.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.15%)</title><rect x="288" y="164" width="2" height="15" fill="rgb(213,61,15)"/><text x="291.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.15%)</title><rect x="288" y="180" width="2" height="15" fill="rgb(233,113,43)"/><text x="291.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.15%)</title><rect x="288" y="196" width="2" height="15" fill="rgb(230,0,21)"/><text x="291.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="288" y="212" width="2" height="15" fill="rgb(210,165,5)"/><text x="291.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="288" y="228" width="2" height="15" fill="rgb(225,161,28)"/><text x="291.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="288" y="244" width="2" height="15" fill="rgb(205,142,23)"/><text x="291.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="288" y="260" width="2" height="15" fill="rgb(208,3,36)"/><text x="291.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="288" y="276" width="2" height="15" fill="rgb(235,84,21)"/><text x="291.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.15%)</title><rect x="288" y="292" width="2" height="15" fill="rgb(239,63,29)"/><text x="291.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="288" y="308" width="2" height="15" fill="rgb(246,4,28)"/><text x="291.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="288" y="324" width="2" height="15" fill="rgb(228,211,29)"/><text x="291.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="288" y="340" width="2" height="15" fill="rgb(239,112,31)"/><text x="291.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="288" y="356" width="2" height="15" fill="rgb(245,153,18)"/><text x="291.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="288" y="372" width="2" height="15" fill="rgb(225,148,37)"/><text x="291.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.15%)</title><rect x="288" y="388" width="2" height="15" fill="rgb(247,61,28)"/><text x="291.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.15%)</title><rect x="288" y="404" width="2" height="15" fill="rgb(250,13,53)"/><text x="291.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.15%)</title><rect x="288" y="420" width="2" height="15" fill="rgb(240,133,28)"/><text x="291.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.15%)</title><rect x="288" y="436" width="2" height="15" fill="rgb(251,229,8)"/><text x="291.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="288" y="452" width="2" height="15" fill="rgb(240,23,23)"/><text x="291.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.15%)</title><rect x="288" y="468" width="2" height="15" fill="rgb(235,64,45)"/><text x="291.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.15%)</title><rect x="288" y="484" width="2" height="15" fill="rgb(231,196,6)"/><text x="291.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py:201) (1 samples, 0.15%)</title><rect x="288" y="500" width="2" height="15" fill="rgb(228,146,21)"/><text x="291.00" y="510.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.31%)</title><rect x="290" y="164" width="4" height="15" fill="rgb(224,121,29)"/><text x="293.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.15%)</title><rect x="295" y="180" width="2" height="15" fill="rgb(230,198,48)"/><text x="298.00" y="190.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.15%)</title><rect x="306" y="244" width="2" height="15" fill="rgb(220,62,3)"/><text x="309.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.62%)</title><rect x="303" y="196" width="7" height="15" fill="rgb(217,89,47)"/><text x="306.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.31%)</title><rect x="306" y="212" width="4" height="15" fill="rgb(235,38,35)"/><text x="309.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.31%)</title><rect x="306" y="228" width="4" height="15" fill="rgb(232,222,11)"/><text x="309.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.15%)</title><rect x="308" y="244" width="2" height="15" fill="rgb(215,168,12)"/><text x="311.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.15%)</title><rect x="308" y="260" width="2" height="15" fill="rgb(230,175,18)"/><text x="311.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.15%)</title><rect x="308" y="276" width="2" height="15" fill="rgb(242,164,50)"/><text x="311.00" y="286.50"></text></g><g><title>0x7fa288161d94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="308" y="292" width="2" height="15" fill="rgb(231,24,17)"/><text x="311.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.31%)</title><rect x="312" y="324" width="3" height="15" fill="rgb(234,225,19)"/><text x="315.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.15%)</title><rect x="315" y="340" width="2" height="15" fill="rgb(245,26,7)"/><text x="318.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.15%)</title><rect x="315" y="356" width="2" height="15" fill="rgb(240,92,5)"/><text x="318.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.15%)</title><rect x="315" y="372" width="2" height="15" fill="rgb(250,210,35)"/><text x="318.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2199) (1 samples, 0.15%)</title><rect x="315" y="388" width="2" height="15" fill="rgb(248,146,4)"/><text x="318.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.15%)</title><rect x="317" y="356" width="2" height="15" fill="rgb(228,123,42)"/><text x="320.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.15%)</title><rect x="317" y="372" width="2" height="15" fill="rgb(229,220,2)"/><text x="320.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:263) (1 samples, 0.15%)</title><rect x="317" y="388" width="2" height="15" fill="rgb(224,119,9)"/><text x="320.00" y="398.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.15%)</title><rect x="317" y="404" width="2" height="15" fill="rgb(235,42,20)"/><text x="320.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.15%)</title><rect x="319" y="372" width="2" height="15" fill="rgb(243,228,19)"/><text x="322.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.15%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(227,202,24)"/><text x="324.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.15%)</title><rect x="321" y="388" width="2" height="15" fill="rgb(253,173,8)"/><text x="324.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.15%)</title><rect x="321" y="404" width="2" height="15" fill="rgb(230,19,5)"/><text x="324.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.46%)</title><rect x="319" y="356" width="6" height="15" fill="rgb(227,142,38)"/><text x="322.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.15%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(205,190,27)"/><text x="326.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.15%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(228,104,9)"/><text x="326.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.15%)</title><rect x="323" y="404" width="2" height="15" fill="rgb(238,116,32)"/><text x="326.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.15%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(251,107,3)"/><text x="328.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.31%)</title><rect x="328" y="388" width="4" height="15" fill="rgb(233,50,21)"/><text x="331.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (4 samples, 0.62%)</title><rect x="332" y="388" width="7" height="15" fill="rgb(226,112,10)"/><text x="335.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (3 samples, 0.46%)</title><rect x="341" y="404" width="5" height="15" fill="rgb(231,161,17)"/><text x="344.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (6 samples, 0.93%)</title><rect x="339" y="388" width="11" height="15" fill="rgb(240,71,51)"/><text x="342.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (2 samples, 0.31%)</title><rect x="346" y="404" width="4" height="15" fill="rgb(224,72,5)"/><text x="349.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.15%)</title><rect x="350" y="388" width="2" height="15" fill="rgb(251,24,19)"/><text x="353.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (24 samples, 3.70%)</title><rect x="312" y="260" width="43" height="15" fill="rgb(212,99,33)"/><text x="315.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 3.70%)</title><rect x="312" y="276" width="43" height="15" fill="rgb(210,83,4)"/><text x="315.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 3.70%)</title><rect x="312" y="292" width="43" height="15" fill="rgb(232,29,24)"/><text x="315.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 3.70%)</title><rect x="312" y="308" width="43" height="15" fill="rgb(232,101,46)"/><text x="315.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (22 samples, 3.40%)</title><rect x="315" y="324" width="40" height="15" fill="rgb(244,109,43)"/><text x="318.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (21 samples, 3.24%)</title><rect x="317" y="340" width="38" height="15" fill="rgb(215,44,27)"/><text x="320.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 2.62%)</title><rect x="325" y="356" width="30" height="15" fill="rgb(235,125,34)"/><text x="328.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 2.47%)</title><rect x="326" y="372" width="29" height="15" fill="rgb(240,221,27)"/><text x="329.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.31%)</title><rect x="352" y="388" width="3" height="15" fill="rgb(243,41,32)"/><text x="355.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (27 samples, 4.17%)</title><rect x="310" y="244" width="49" height="15" fill="rgb(249,216,33)"/><text x="313.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.31%)</title><rect x="355" y="260" width="4" height="15" fill="rgb(223,180,48)"/><text x="358.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.31%)</title><rect x="355" y="276" width="4" height="15" fill="rgb(214,23,24)"/><text x="358.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.31%)</title><rect x="355" y="292" width="4" height="15" fill="rgb(206,4,26)"/><text x="358.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.31%)</title><rect x="355" y="308" width="4" height="15" fill="rgb(235,142,25)"/><text x="358.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (2 samples, 0.31%)</title><rect x="355" y="324" width="4" height="15" fill="rgb(241,202,52)"/><text x="358.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (2 samples, 0.31%)</title><rect x="355" y="340" width="4" height="15" fill="rgb(252,152,7)"/><text x="358.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (2 samples, 0.31%)</title><rect x="355" y="356" width="4" height="15" fill="rgb(240,201,1)"/><text x="358.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.31%)</title><rect x="355" y="372" width="4" height="15" fill="rgb(241,15,47)"/><text x="358.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.15%)</title><rect x="359" y="260" width="2" height="15" fill="rgb(220,227,29)"/><text x="362.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="359" y="276" width="2" height="15" fill="rgb(217,17,40)"/><text x="362.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="359" y="292" width="2" height="15" fill="rgb(223,129,9)"/><text x="362.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="359" y="308" width="2" height="15" fill="rgb(245,151,17)"/><text x="362.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.15%)</title><rect x="359" y="324" width="2" height="15" fill="rgb(208,98,47)"/><text x="362.00" y="334.50"></text></g><g><title>0x7fa288141dfb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="359" y="340" width="2" height="15" fill="rgb(209,2,30)"/><text x="362.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="361" y="276" width="2" height="15" fill="rgb(215,141,44)"/><text x="364.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.15%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(222,30,37)"/><text x="364.00" y="302.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1745) (1 samples, 0.15%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(247,185,29)"/><text x="364.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.15%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(228,23,51)"/><text x="366.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.15%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(207,50,48)"/><text x="366.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.15%)</title><rect x="365" y="324" width="1" height="15" fill="rgb(210,131,13)"/><text x="368.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.15%)</title><rect x="365" y="340" width="1" height="15" fill="rgb(208,198,48)"/><text x="368.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.31%)</title><rect x="365" y="308" width="3" height="15" fill="rgb(223,5,41)"/><text x="368.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.15%)</title><rect x="366" y="324" width="2" height="15" fill="rgb(240,176,17)"/><text x="369.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3241) (1 samples, 0.15%)</title><rect x="366" y="340" width="2" height="15" fill="rgb(213,223,27)"/><text x="369.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.15%)</title><rect x="368" y="324" width="2" height="15" fill="rgb(240,200,48)"/><text x="371.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.15%)</title><rect x="368" y="340" width="2" height="15" fill="rgb(241,200,25)"/><text x="371.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="368" y="356" width="2" height="15" fill="rgb(245,144,22)"/><text x="371.00" y="366.50"></text></g><g><title>0x7fa288143707 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="368" y="372" width="2" height="15" fill="rgb(228,183,24)"/><text x="371.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="370" y="356" width="2" height="15" fill="rgb(228,199,6)"/><text x="373.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.15%)</title><rect x="372" y="356" width="2" height="15" fill="rgb(230,7,45)"/><text x="375.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.15%)</title><rect x="372" y="372" width="2" height="15" fill="rgb(241,52,50)"/><text x="375.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.62%)</title><rect x="368" y="308" width="8" height="15" fill="rgb(238,146,16)"/><text x="371.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.46%)</title><rect x="370" y="324" width="6" height="15" fill="rgb(225,90,37)"/><text x="373.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.46%)</title><rect x="370" y="340" width="6" height="15" fill="rgb(235,199,49)"/><text x="373.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1078) (1 samples, 0.15%)</title><rect x="374" y="356" width="2" height="15" fill="rgb(231,92,20)"/><text x="377.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.15%)</title><rect x="374" y="372" width="2" height="15" fill="rgb(207,117,18)"/><text x="377.00" y="382.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:603) (1 samples, 0.15%)</title><rect x="376" y="356" width="1" height="15" fill="rgb(240,149,45)"/><text x="379.00" y="366.50"></text></g><g><title>_mm_div_ps (xmmintrin.h:175) (1 samples, 0.15%)</title><rect x="376" y="372" width="1" height="15" fill="rgb(229,214,16)"/><text x="379.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.85%)</title><rect x="361" y="260" width="22" height="15" fill="rgb(211,105,0)"/><text x="364.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.70%)</title><rect x="363" y="276" width="20" height="15" fill="rgb(230,48,23)"/><text x="366.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.54%)</title><rect x="365" y="292" width="18" height="15" fill="rgb(220,197,33)"/><text x="368.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.62%)</title><rect x="376" y="308" width="7" height="15" fill="rgb(245,210,41)"/><text x="379.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (4 samples, 0.62%)</title><rect x="376" y="324" width="7" height="15" fill="rgb(206,148,46)"/><text x="379.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (4 samples, 0.62%)</title><rect x="376" y="340" width="7" height="15" fill="rgb(208,69,52)"/><text x="379.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (3 samples, 0.46%)</title><rect x="377" y="356" width="6" height="15" fill="rgb(221,116,18)"/><text x="380.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.46%)</title><rect x="377" y="372" width="6" height="15" fill="rgb(234,215,4)"/><text x="380.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (41 samples, 6.33%)</title><rect x="310" y="196" width="75" height="15" fill="rgb(237,13,47)"/><text x="313.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (41 samples, 6.33%)</title><rect x="310" y="212" width="75" height="15" fill="rgb(241,13,42)"/><text x="313.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (41 samples, 6.33%)</title><rect x="310" y="228" width="75" height="15" fill="rgb(237,29,21)"/><text x="313.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (14 samples, 2.16%)</title><rect x="359" y="244" width="26" height="15" fill="rgb(248,140,26)"/><text x="362.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.15%)</title><rect x="383" y="260" width="2" height="15" fill="rgb(241,229,12)"/><text x="386.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.15%)</title><rect x="383" y="276" width="2" height="15" fill="rgb(233,44,1)"/><text x="386.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.15%)</title><rect x="385" y="196" width="1" height="15" fill="rgb(248,175,23)"/><text x="388.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.15%)</title><rect x="386" y="276" width="2" height="15" fill="rgb(243,65,42)"/><text x="389.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.15%)</title><rect x="386" y="292" width="2" height="15" fill="rgb(228,84,21)"/><text x="389.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:355) (1 samples, 0.15%)</title><rect x="388" y="324" width="2" height="15" fill="rgb(246,208,41)"/><text x="391.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.15%)</title><rect x="390" y="324" width="2" height="15" fill="rgb(215,62,13)"/><text x="393.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.15%)</title><rect x="390" y="340" width="2" height="15" fill="rgb(238,42,14)"/><text x="393.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.62%)</title><rect x="388" y="276" width="8" height="15" fill="rgb(209,194,48)"/><text x="391.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.62%)</title><rect x="388" y="292" width="8" height="15" fill="rgb(248,203,21)"/><text x="391.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.62%)</title><rect x="388" y="308" width="8" height="15" fill="rgb(244,167,29)"/><text x="391.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (2 samples, 0.31%)</title><rect x="392" y="324" width="4" height="15" fill="rgb(220,68,53)"/><text x="395.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (2 samples, 0.31%)</title><rect x="392" y="340" width="4" height="15" fill="rgb(237,127,35)"/><text x="395.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="392" y="356" width="4" height="15" fill="rgb(235,161,42)"/><text x="395.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="392" y="372" width="4" height="15" fill="rgb(227,226,48)"/><text x="395.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="392" y="388" width="4" height="15" fill="rgb(232,84,3)"/><text x="395.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="396" y="276" width="1" height="15" fill="rgb(210,184,2)"/><text x="399.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (13 samples, 2.01%)</title><rect x="386" y="228" width="24" height="15" fill="rgb(238,136,0)"/><text x="389.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (13 samples, 2.01%)</title><rect x="386" y="244" width="24" height="15" fill="rgb(230,161,27)"/><text x="389.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (13 samples, 2.01%)</title><rect x="386" y="260" width="24" height="15" fill="rgb(235,15,53)"/><text x="389.00" y="270.50">d..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.08%)</title><rect x="397" y="276" width="13" height="15" fill="rgb(242,194,9)"/><text x="400.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="410" y="292" width="2" height="15" fill="rgb(208,113,21)"/><text x="413.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.15%)</title><rect x="410" y="308" width="2" height="15" fill="rgb(233,11,34)"/><text x="413.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.15%)</title><rect x="410" y="324" width="2" height="15" fill="rgb(235,220,46)"/><text x="413.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.15%)</title><rect x="410" y="340" width="2" height="15" fill="rgb(245,155,0)"/><text x="413.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.15%)</title><rect x="412" y="340" width="2" height="15" fill="rgb(248,95,46)"/><text x="415.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.15%)</title><rect x="414" y="340" width="2" height="15" fill="rgb(225,224,49)"/><text x="417.00" y="350.50"></text></g><g><title>0x7fa288161dbb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="416" y="356" width="1" height="15" fill="rgb(238,51,5)"/><text x="419.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.62%)</title><rect x="412" y="292" width="7" height="15" fill="rgb(238,4,29)"/><text x="415.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.62%)</title><rect x="412" y="308" width="7" height="15" fill="rgb(211,223,11)"/><text x="415.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.62%)</title><rect x="412" y="324" width="7" height="15" fill="rgb(226,92,21)"/><text x="415.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.31%)</title><rect x="416" y="340" width="3" height="15" fill="rgb(216,115,51)"/><text x="419.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.15%)</title><rect x="417" y="356" width="2" height="15" fill="rgb(207,229,41)"/><text x="420.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 0.93%)</title><rect x="410" y="228" width="11" height="15" fill="rgb(217,165,10)"/><text x="413.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.93%)</title><rect x="410" y="244" width="11" height="15" fill="rgb(249,167,28)"/><text x="413.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.93%)</title><rect x="410" y="260" width="11" height="15" fill="rgb(237,80,29)"/><text x="413.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.93%)</title><rect x="410" y="276" width="11" height="15" fill="rgb(245,20,43)"/><text x="413.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.15%)</title><rect x="419" y="292" width="2" height="15" fill="rgb(218,228,0)"/><text x="422.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="419" y="308" width="2" height="15" fill="rgb(211,169,37)"/><text x="422.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (2 samples, 0.31%)</title><rect x="421" y="228" width="4" height="15" fill="rgb(234,212,8)"/><text x="424.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.15%)</title><rect x="425" y="276" width="2" height="15" fill="rgb(235,82,25)"/><text x="428.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="425" y="292" width="2" height="15" fill="rgb(243,50,17)"/><text x="428.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.15%)</title><rect x="425" y="308" width="2" height="15" fill="rgb(254,189,50)"/><text x="428.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.15%)</title><rect x="425" y="324" width="2" height="15" fill="rgb(211,137,21)"/><text x="428.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:266) (1 samples, 0.15%)</title><rect x="425" y="340" width="2" height="15" fill="rgb(239,226,17)"/><text x="428.00" y="350.50"></text></g><g><title>euclid (mem_overlap.c:224) (1 samples, 0.15%)</title><rect x="425" y="356" width="2" height="15" fill="rgb(227,193,43)"/><text x="428.00" y="366.50"></text></g><g><title>0x7fa26a54633a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="427" y="308" width="1" height="15" fill="rgb(222,126,15)"/><text x="430.00" y="318.50"></text></g><g><title>0x7fa26a568204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="428" y="324" width="6" height="15" fill="rgb(226,70,18)"/><text x="431.00" y="334.50"></text></g><g><title>0x7fa26a526890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="437" y="340" width="2" height="15" fill="rgb(222,216,25)"/><text x="440.00" y="350.50"></text></g><g><title>0x7fa26a671c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="439" y="340" width="2" height="15" fill="rgb(239,220,29)"/><text x="442.00" y="350.50"></text></g><g><title>0x7fa28828d1a0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="443" y="356" width="2" height="15" fill="rgb(253,166,22)"/><text x="446.00" y="366.50"></text></g><g><title>0x7fa2882c0e00 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="445" y="356" width="2" height="15" fill="rgb(210,150,21)"/><text x="448.00" y="366.50"></text></g><g><title>0x7fa2882c0e17 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="447" y="356" width="1" height="15" fill="rgb(242,210,34)"/><text x="450.00" y="366.50"></text></g><g><title>0x7fa2882c0e7e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="448" y="356" width="2" height="15" fill="rgb(221,225,43)"/><text x="451.00" y="366.50"></text></g><g><title>0x7fa2882c0e96 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="450" y="356" width="2" height="15" fill="rgb(241,136,30)"/><text x="453.00" y="366.50"></text></g><g><title>0x7fa2882c0ea2 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="452" y="356" width="2" height="15" fill="rgb(229,7,53)"/><text x="455.00" y="366.50"></text></g><g><title>0x7fa26a568214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.31%)</title><rect x="434" y="324" width="27" height="15" fill="rgb(234,107,15)"/><text x="437.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (11 samples, 1.70%)</title><rect x="441" y="340" width="20" height="15" fill="rgb(241,177,18)"/><text x="444.00" y="350.50"></text></g><g><title>0x7fa2882c0ea6 (libm-2.29.so) (4 samples, 0.62%)</title><rect x="454" y="356" width="7" height="15" fill="rgb(209,112,6)"/><text x="457.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (27 samples, 4.17%)</title><rect x="425" y="228" width="49" height="15" fill="rgb(245,136,54)"/><text x="428.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (27 samples, 4.17%)</title><rect x="425" y="244" width="49" height="15" fill="rgb(210,118,9)"/><text x="428.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (27 samples, 4.17%)</title><rect x="425" y="260" width="49" height="15" fill="rgb(215,225,40)"/><text x="428.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (26 samples, 4.01%)</title><rect x="427" y="276" width="47" height="15" fill="rgb(247,120,3)"/><text x="430.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (26 samples, 4.01%)</title><rect x="427" y="292" width="47" height="15" fill="rgb(241,171,46)"/><text x="430.00" y="302.50">triv..</text></g><g><title>0x7fa26a54633d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 3.86%)</title><rect x="428" y="308" width="46" height="15" fill="rgb(248,70,25)"/><text x="431.00" y="318.50">0x7f..</text></g><g><title>0x7fa26a568228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.08%)</title><rect x="461" y="324" width="13" height="15" fill="rgb(248,164,49)"/><text x="464.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.15%)</title><rect x="474" y="228" width="2" height="15" fill="rgb(240,111,12)"/><text x="477.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:2) (1 samples, 0.15%)</title><rect x="477" y="244" width="2" height="15" fill="rgb(243,16,2)"/><text x="480.00" y="254.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.15%)</title><rect x="481" y="308" width="2" height="15" fill="rgb(238,95,43)"/><text x="484.00" y="318.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.15%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(220,16,45)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (3 samples, 0.46%)</title><rect x="483" y="324" width="5" height="15" fill="rgb(213,146,20)"/><text x="486.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.15%)</title><rect x="487" y="340" width="1" height="15" fill="rgb(242,15,51)"/><text x="490.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.15%)</title><rect x="488" y="324" width="2" height="15" fill="rgb(221,72,36)"/><text x="491.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (107 samples, 16.51%)</title><rect x="297" y="180" width="195" height="15" fill="rgb(223,29,18)"/><text x="300.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (58 samples, 8.95%)</title><rect x="386" y="196" width="106" height="15" fill="rgb(244,197,22)"/><text x="389.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (58 samples, 8.95%)</title><rect x="386" y="212" width="106" height="15" fill="rgb(254,44,50)"/><text x="389.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (9 samples, 1.39%)</title><rect x="476" y="228" width="16" height="15" fill="rgb(240,215,11)"/><text x="479.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 1.08%)</title><rect x="479" y="244" width="13" height="15" fill="rgb(209,41,52)"/><text x="482.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.08%)</title><rect x="479" y="260" width="13" height="15" fill="rgb(243,118,18)"/><text x="482.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 1.08%)</title><rect x="479" y="276" width="13" height="15" fill="rgb(254,81,8)"/><text x="482.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.93%)</title><rect x="481" y="292" width="11" height="15" fill="rgb(227,107,0)"/><text x="484.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (5 samples, 0.77%)</title><rect x="483" y="308" width="9" height="15" fill="rgb(243,43,38)"/><text x="486.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:51) (1 samples, 0.15%)</title><rect x="490" y="324" width="2" height="15" fill="rgb(217,172,25)"/><text x="493.00" y="334.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3002) (1 samples, 0.15%)</title><rect x="490" y="340" width="2" height="15" fill="rgb(245,178,6)"/><text x="493.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.15%)</title><rect x="492" y="180" width="2" height="15" fill="rgb(227,194,33)"/><text x="495.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (111 samples, 17.13%)</title><rect x="294" y="164" width="202" height="15" fill="rgb(223,88,20)"/><text x="297.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.15%)</title><rect x="494" y="180" width="2" height="15" fill="rgb(207,51,54)"/><text x="497.00" y="190.50"></text></g><g><title>0x7fa28821f13a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="499" y="212" width="2" height="15" fill="rgb(237,171,46)"/><text x="502.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (117 samples, 18.06%)</title><rect x="290" y="132" width="213" height="15" fill="rgb(236,149,15)"/><text x="293.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (117 samples, 18.06%)</title><rect x="290" y="148" width="213" height="15" fill="rgb(215,38,43)"/><text x="293.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.62%)</title><rect x="496" y="164" width="7" height="15" fill="rgb(206,117,31)"/><text x="499.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.62%)</title><rect x="496" y="180" width="7" height="15" fill="rgb(253,101,45)"/><text x="499.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.31%)</title><rect x="499" y="196" width="4" height="15" fill="rgb(250,197,10)"/><text x="502.00" y="206.50"></text></g><g><title>0x7fa28821fd27 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="501" y="212" width="2" height="15" fill="rgb(213,90,3)"/><text x="504.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:45) (119 samples, 18.36%)</title><rect x="288" y="52" width="217" height="15" fill="rgb(217,8,40)"/><text x="291.00" y="62.50">&lt;module&gt; (bench_LogisticRegr..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:44) (119 samples, 18.36%)</title><rect x="288" y="68" width="217" height="15" fill="rgb(227,49,33)"/><text x="291.00" y="78.50">profile_pyrt (bench_Logistic..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:29) (118 samples, 18.21%)</title><rect x="290" y="84" width="215" height="15" fill="rgb(240,102,1)"/><text x="293.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:23) (118 samples, 18.21%)</title><rect x="290" y="100" width="215" height="15" fill="rgb(249,130,24)"/><text x="293.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 18.21%)</title><rect x="290" y="116" width="215" height="15" fill="rgb(220,148,51)"/><text x="293.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="503" y="132" width="2" height="15" fill="rgb(249,212,23)"/><text x="506.00" y="142.50"></text></g><g><title>0x7fa288141eb0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="505" y="116" width="2" height="15" fill="rgb(232,0,31)"/><text x="508.00" y="126.50"></text></g><g><title>0x7fa288140bdf (libc-2.29.so) (1 samples, 0.15%)</title><rect x="505" y="132" width="2" height="15" fill="rgb(214,60,41)"/><text x="508.00" y="142.50"></text></g><g><title>0x7fa2489aaff9 (?) (1 samples, 0.15%)</title><rect x="507" y="212" width="1" height="15" fill="rgb(236,64,7)"/><text x="510.00" y="222.50"></text></g><g><title>0x7fa2489a5ef6 (?) (1 samples, 0.15%)</title><rect x="507" y="228" width="1" height="15" fill="rgb(225,69,18)"/><text x="510.00" y="238.50"></text></g><g><title>0x7fa24899a962 (?) (1 samples, 0.15%)</title><rect x="507" y="244" width="1" height="15" fill="rgb(237,152,11)"/><text x="510.00" y="254.50"></text></g><g><title>0x7fa2489ce7a7 (?) (1 samples, 0.15%)</title><rect x="507" y="260" width="1" height="15" fill="rgb(245,214,6)"/><text x="510.00" y="270.50"></text></g><g><title>0x7fa2489ce379 (?) (1 samples, 0.15%)</title><rect x="507" y="276" width="1" height="15" fill="rgb(211,74,29)"/><text x="510.00" y="286.50"></text></g><g><title>0x7fa248e2c8b8 (?) (1 samples, 0.15%)</title><rect x="507" y="292" width="1" height="15" fill="rgb(244,141,30)"/><text x="510.00" y="302.50"></text></g><g><title>0x7fa248e2ac7f (?) (1 samples, 0.15%)</title><rect x="507" y="308" width="1" height="15" fill="rgb(250,61,25)"/><text x="510.00" y="318.50"></text></g><g><title>0x7fa248e3d317 (?) (1 samples, 0.15%)</title><rect x="507" y="324" width="1" height="15" fill="rgb(237,179,40)"/><text x="510.00" y="334.50"></text></g><g><title>0x7fa248dffce4 (?) (1 samples, 0.15%)</title><rect x="507" y="340" width="1" height="15" fill="rgb(211,134,36)"/><text x="510.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="508" y="340" width="4" height="15" fill="rgb(248,65,23)"/><text x="511.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="510" y="356" width="2" height="15" fill="rgb(240,69,13)"/><text x="513.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:18) (5 samples, 0.77%)</title><rect x="505" y="100" width="9" height="15" fill="rgb(239,71,40)"/><text x="508.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.62%)</title><rect x="507" y="116" width="7" height="15" fill="rgb(227,31,53)"/><text x="510.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.62%)</title><rect x="507" y="132" width="7" height="15" fill="rgb(211,130,52)"/><text x="510.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.62%)</title><rect x="507" y="148" width="7" height="15" fill="rgb(209,174,40)"/><text x="510.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.62%)</title><rect x="507" y="164" width="7" height="15" fill="rgb(231,144,31)"/><text x="510.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.62%)</title><rect x="507" y="180" width="7" height="15" fill="rgb(253,133,27)"/><text x="510.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.62%)</title><rect x="507" y="196" width="7" height="15" fill="rgb(218,54,7)"/><text x="510.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="212" width="6" height="15" fill="rgb(216,193,50)"/><text x="511.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="228" width="6" height="15" fill="rgb(247,120,26)"/><text x="511.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="244" width="6" height="15" fill="rgb(252,106,3)"/><text x="511.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="260" width="6" height="15" fill="rgb(222,122,31)"/><text x="511.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="276" width="6" height="15" fill="rgb(236,112,38)"/><text x="511.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="292" width="6" height="15" fill="rgb(227,95,46)"/><text x="511.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="308" width="6" height="15" fill="rgb(221,200,44)"/><text x="511.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="508" y="324" width="6" height="15" fill="rgb(230,171,19)"/><text x="511.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="512" y="340" width="2" height="15" fill="rgb(207,102,3)"/><text x="515.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:22) (1 samples, 0.15%)</title><rect x="514" y="100" width="2" height="15" fill="rgb(248,198,48)"/><text x="517.00" y="110.50"></text></g><g><title>0x7fa288140bc0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="559" y="132" width="2" height="15" fill="rgb(215,63,17)"/><text x="562.00" y="142.50"></text></g><g><title>0x7fa288140bc6 (libc-2.29.so) (4 samples, 0.62%)</title><rect x="561" y="132" width="8" height="15" fill="rgb(234,120,4)"/><text x="564.00" y="142.50"></text></g><g><title>0x7fa288140bcc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="569" y="132" width="1" height="15" fill="rgb(219,82,11)"/><text x="572.00" y="142.50"></text></g><g><title>0x7fa288140bdb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="570" y="132" width="2" height="15" fill="rgb(208,159,25)"/><text x="573.00" y="142.50"></text></g><g><title>0x7fa288140bdf (libc-2.29.so) (2 samples, 0.31%)</title><rect x="572" y="132" width="4" height="15" fill="rgb(205,45,54)"/><text x="575.00" y="142.50"></text></g><g><title>0x7fa288140c04 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="576" y="132" width="2" height="15" fill="rgb(251,137,35)"/><text x="579.00" y="142.50"></text></g><g><title>0x7fa288140c10 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="578" y="132" width="3" height="15" fill="rgb(238,119,51)"/><text x="581.00" y="142.50"></text></g><g><title>0x7fa288140c20 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="581" y="132" width="2" height="15" fill="rgb(228,75,40)"/><text x="584.00" y="142.50"></text></g><g><title>0x7fa288140c36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="583" y="132" width="2" height="15" fill="rgb(208,140,50)"/><text x="586.00" y="142.50"></text></g><g><title>0x7fa288140c6a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="585" y="132" width="2" height="15" fill="rgb(224,190,13)"/><text x="588.00" y="142.50"></text></g><g><title>0x7fa288141eb0 (libc-2.29.so) (16 samples, 2.47%)</title><rect x="559" y="116" width="30" height="15" fill="rgb(219,127,37)"/><text x="562.00" y="126.50">0x..</text></g><g><title>0x7fa288140ca7 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="587" y="132" width="2" height="15" fill="rgb(221,155,18)"/><text x="590.00" y="142.50"></text></g><g><title>0x7fa288140ab9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="587" y="148" width="2" height="15" fill="rgb(231,118,25)"/><text x="590.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.31%)</title><rect x="590" y="148" width="4" height="15" fill="rgb(234,77,22)"/><text x="593.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.15%)</title><rect x="600" y="196" width="1" height="15" fill="rgb(251,109,22)"/><text x="603.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.31%)</title><rect x="601" y="196" width="4" height="15" fill="rgb(250,94,36)"/><text x="604.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.15%)</title><rect x="603" y="212" width="2" height="15" fill="rgb(218,14,15)"/><text x="606.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="603" y="228" width="2" height="15" fill="rgb(248,169,36)"/><text x="606.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="603" y="244" width="2" height="15" fill="rgb(215,71,1)"/><text x="606.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="603" y="260" width="2" height="15" fill="rgb(253,148,47)"/><text x="606.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="612" y="292" width="2" height="15" fill="rgb(205,59,6)"/><text x="615.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="612" y="308" width="2" height="15" fill="rgb(229,62,24)"/><text x="615.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="612" y="324" width="2" height="15" fill="rgb(211,184,13)"/><text x="615.00" y="334.50"></text></g><g><title>0x7fa288143554 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="612" y="340" width="2" height="15" fill="rgb(234,166,32)"/><text x="615.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="614" y="292" width="2" height="15" fill="rgb(220,88,34)"/><text x="617.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="614" y="308" width="2" height="15" fill="rgb(223,228,32)"/><text x="617.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="614" y="324" width="2" height="15" fill="rgb(207,169,40)"/><text x="617.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="614" y="340" width="2" height="15" fill="rgb(215,156,22)"/><text x="617.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(209,207,22)"/><text x="619.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="618" y="340" width="2" height="15" fill="rgb(209,207,14)"/><text x="621.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="620" y="356" width="1" height="15" fill="rgb(247,20,6)"/><text x="623.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="620" y="372" width="1" height="15" fill="rgb(225,39,32)"/><text x="623.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="620" y="388" width="1" height="15" fill="rgb(234,166,3)"/><text x="623.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="620" y="404" width="1" height="15" fill="rgb(245,99,3)"/><text x="623.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="620" y="340" width="5" height="15" fill="rgb(238,182,3)"/><text x="623.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="621" y="356" width="4" height="15" fill="rgb(212,110,40)"/><text x="624.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="623" y="372" width="2" height="15" fill="rgb(209,72,12)"/><text x="626.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="623" y="388" width="2" height="15" fill="rgb(249,52,46)"/><text x="626.00" y="398.50"></text></g><g><title>0x7fa288142d7e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="623" y="404" width="2" height="15" fill="rgb(247,203,15)"/><text x="626.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="625" y="340" width="2" height="15" fill="rgb(233,212,42)"/><text x="628.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="625" y="356" width="2" height="15" fill="rgb(212,176,33)"/><text x="628.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="625" y="372" width="2" height="15" fill="rgb(232,23,0)"/><text x="628.00" y="382.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="627" y="340" width="2" height="15" fill="rgb(212,93,17)"/><text x="630.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="669" y="356" width="2" height="15" fill="rgb(216,6,34)"/><text x="672.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="669" y="372" width="2" height="15" fill="rgb(254,228,30)"/><text x="672.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="669" y="388" width="2" height="15" fill="rgb(252,62,24)"/><text x="672.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="669" y="404" width="2" height="15" fill="rgb(240,201,7)"/><text x="672.00" y="414.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="669" y="420" width="2" height="15" fill="rgb(253,23,43)"/><text x="672.00" y="430.50"></text></g><g><title>0x7fa288161d50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="701" y="372" width="2" height="15" fill="rgb(246,161,14)"/><text x="704.00" y="382.50"></text></g><g><title>0x7fa288161db3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="703" y="372" width="2" height="15" fill="rgb(250,72,17)"/><text x="706.00" y="382.50"></text></g><g><title>0x7fa2882c0e17 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="705" y="372" width="2" height="15" fill="rgb(217,225,12)"/><text x="708.00" y="382.50"></text></g><g><title>0x7fa2882c0e37 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="707" y="372" width="2" height="15" fill="rgb(230,74,46)"/><text x="710.00" y="382.50"></text></g><g><title>0x7fa2882c0e4a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="709" y="372" width="2" height="15" fill="rgb(233,167,19)"/><text x="712.00" y="382.50"></text></g><g><title>0x7fa2882c0e4e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="711" y="372" width="1" height="15" fill="rgb(245,192,43)"/><text x="714.00" y="382.50"></text></g><g><title>0x7fa2882c0e5f (libm-2.29.so) (2 samples, 0.31%)</title><rect x="712" y="372" width="4" height="15" fill="rgb(224,146,21)"/><text x="715.00" y="382.50"></text></g><g><title>0x7fa2882c0e6d (libm-2.29.so) (1 samples, 0.15%)</title><rect x="716" y="372" width="2" height="15" fill="rgb(243,90,48)"/><text x="719.00" y="382.50"></text></g><g><title>0x7fa2882c0e86 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="718" y="372" width="2" height="15" fill="rgb(214,19,51)"/><text x="721.00" y="382.50"></text></g><g><title>0x7fa2882c0e96 (libm-2.29.so) (3 samples, 0.46%)</title><rect x="720" y="372" width="5" height="15" fill="rgb(249,168,51)"/><text x="723.00" y="382.50"></text></g><g><title>0x7fa2882c0e9e (libm-2.29.so) (4 samples, 0.62%)</title><rect x="725" y="372" width="7" height="15" fill="rgb(224,117,42)"/><text x="728.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 8.95%)</title><rect x="629" y="340" width="105" height="15" fill="rgb(252,88,8)"/><text x="632.00" y="350.50">onnxruntime:..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 5.40%)</title><rect x="671" y="356" width="63" height="15" fill="rgb(250,37,52)"/><text x="674.00" y="366.50">onnxru..</text></g><g><title>0x7fa2882c0ea2 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="732" y="372" width="2" height="15" fill="rgb(213,102,30)"/><text x="735.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.16%)</title><rect x="734" y="340" width="26" height="15" fill="rgb(224,5,22)"/><text x="737.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.16%)</title><rect x="734" y="356" width="26" height="15" fill="rgb(238,122,54)"/><text x="737.00" y="366.50">o..</text></g><g><title>0x7fa288142b49 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="878" y="388" width="4" height="15" fill="rgb(217,20,48)"/><text x="881.00" y="398.50"></text></g><g><title>0x7fa288142b61 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="882" y="388" width="2" height="15" fill="rgb(243,77,29)"/><text x="885.00" y="398.50"></text></g><g><title>0x7fa288142d27 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="884" y="388" width="3" height="15" fill="rgb(245,40,47)"/><text x="887.00" y="398.50"></text></g><g><title>0x7fa288142d48 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="887" y="388" width="2" height="15" fill="rgb(246,66,27)"/><text x="890.00" y="398.50"></text></g><g><title>0x7fa288142d67 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="889" y="388" width="4" height="15" fill="rgb(239,51,28)"/><text x="892.00" y="398.50"></text></g><g><title>0x7fa288142d8d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="893" y="388" width="2" height="15" fill="rgb(243,30,12)"/><text x="896.00" y="398.50"></text></g><g><title>0x7fa288142d9b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="895" y="388" width="1" height="15" fill="rgb(228,60,3)"/><text x="898.00" y="398.50"></text></g><g><title>0x7fa288142db4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="896" y="388" width="2" height="15" fill="rgb(212,13,36)"/><text x="899.00" y="398.50"></text></g><g><title>0x7fa288142dc9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="898" y="388" width="2" height="15" fill="rgb(228,223,32)"/><text x="901.00" y="398.50"></text></g><g><title>0x7fa288142dd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="900" y="388" width="2" height="15" fill="rgb(224,117,14)"/><text x="903.00" y="398.50"></text></g><g><title>0x7fa288142dfd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(226,93,21)"/><text x="905.00" y="398.50"></text></g><g><title>0x7fa288142fde (libc-2.29.so) (1 samples, 0.15%)</title><rect x="904" y="388" width="1" height="15" fill="rgb(217,76,30)"/><text x="907.00" y="398.50"></text></g><g><title>0x7fa288142fe6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="905" y="388" width="2" height="15" fill="rgb(215,50,9)"/><text x="908.00" y="398.50"></text></g><g><title>0x7fa288143040 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="907" y="388" width="2" height="15" fill="rgb(230,141,2)"/><text x="910.00" y="398.50"></text></g><g><title>0x7fa288143064 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="909" y="388" width="2" height="15" fill="rgb(254,210,26)"/><text x="912.00" y="398.50"></text></g><g><title>0x7fa28814306d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="911" y="388" width="2" height="15" fill="rgb(216,154,46)"/><text x="914.00" y="398.50"></text></g><g><title>0x7fa28814307f (libc-2.29.so) (2 samples, 0.31%)</title><rect x="913" y="388" width="3" height="15" fill="rgb(250,5,39)"/><text x="916.00" y="398.50"></text></g><g><title>0x7fa288143368 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="916" y="388" width="2" height="15" fill="rgb(230,45,39)"/><text x="919.00" y="398.50"></text></g><g><title>0x7fa288143381 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="918" y="388" width="2" height="15" fill="rgb(254,206,44)"/><text x="921.00" y="398.50"></text></g><g><title>0x7fa2881433c4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="920" y="388" width="2" height="15" fill="rgb(206,172,29)"/><text x="923.00" y="398.50"></text></g><g><title>0x7fa2881433e0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="922" y="388" width="2" height="15" fill="rgb(244,67,8)"/><text x="925.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (73 samples, 11.27%)</title><rect x="793" y="356" width="132" height="15" fill="rgb(225,149,30)"/><text x="796.00" y="366.50">operator new (li..</text></g><g><title>malloc (libc-2.29.so) (72 samples, 11.11%)</title><rect x="794" y="372" width="131" height="15" fill="rgb(212,50,42)"/><text x="797.00" y="382.50">malloc (libc-2.2..</text></g><g><title>0x7fa2881433ed (libc-2.29.so) (1 samples, 0.15%)</title><rect x="924" y="388" width="1" height="15" fill="rgb(208,21,13)"/><text x="927.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.08%)</title><rect x="925" y="356" width="13" height="15" fill="rgb(231,101,49)"/><text x="928.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="936" y="372" width="2" height="15" fill="rgb(242,30,27)"/><text x="939.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.62%)</title><rect x="938" y="356" width="7" height="15" fill="rgb(242,84,40)"/><text x="941.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 28.55%)</title><rect x="618" y="308" width="337" height="15" fill="rgb(246,95,44)"/><text x="621.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 28.55%)</title><rect x="618" y="324" width="337" height="15" fill="rgb(226,35,17)"/><text x="621.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 16.51%)</title><rect x="760" y="340" width="195" height="15" fill="rgb(223,219,43)"/><text x="763.00" y="350.50">onnxruntime::ml::ZipMapOp..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.77%)</title><rect x="945" y="356" width="10" height="15" fill="rgb(224,64,47)"/><text x="948.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 29.17%)</title><rect x="612" y="260" width="344" height="15" fill="rgb(237,4,4)"/><text x="615.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 29.17%)</title><rect x="612" y="276" width="344" height="15" fill="rgb(247,16,39)"/><text x="615.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (186 samples, 28.70%)</title><rect x="618" y="292" width="338" height="15" fill="rgb(205,74,40)"/><text x="621.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="955" y="308" width="1" height="15" fill="rgb(209,59,24)"/><text x="958.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::SetDeviceCopyChecks (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="955" y="324" width="1" height="15" fill="rgb(240,195,26)"/><text x="958.00" y="334.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="956" y="260" width="2" height="15" fill="rgb(218,204,24)"/><text x="959.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="958" y="260" width="2" height="15" fill="rgb(222,82,41)"/><text x="961.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="958" y="276" width="2" height="15" fill="rgb(211,187,39)"/><text x="961.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="958" y="292" width="2" height="15" fill="rgb(235,213,18)"/><text x="961.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="958" y="308" width="2" height="15" fill="rgb(212,53,15)"/><text x="961.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="958" y="324" width="2" height="15" fill="rgb(220,210,28)"/><text x="961.00" y="334.50"></text></g><g><title>0x7fa2489725c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1077" y="276" width="1" height="15" fill="rgb(251,58,7)"/><text x="1080.00" y="286.50"></text></g><g><title>0x7fa248972870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1078" y="276" width="2" height="15" fill="rgb(254,95,46)"/><text x="1081.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.09%)</title><rect x="1080" y="276" width="37" height="15" fill="rgb(215,189,27)"/><text x="1083.00" y="286.50">pyb..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 13.43%)</title><rect x="960" y="260" width="158" height="15" fill="rgb(221,131,25)"/><text x="963.00" y="270.50">pybind11::detail::ma..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1117" y="276" width="1" height="15" fill="rgb(239,66,15)"/><text x="1120.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="276" width="2" height="15" fill="rgb(235,12,3)"/><text x="1121.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="292" width="2" height="15" fill="rgb(215,2,24)"/><text x="1121.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="308" width="2" height="15" fill="rgb(206,172,54)"/><text x="1121.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="324" width="2" height="15" fill="rgb(234,139,17)"/><text x="1121.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="340" width="2" height="15" fill="rgb(213,226,52)"/><text x="1121.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="356" width="2" height="15" fill="rgb(206,107,28)"/><text x="1121.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="372" width="2" height="15" fill="rgb(215,137,49)"/><text x="1121.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1118" y="388" width="2" height="15" fill="rgb(239,54,52)"/><text x="1121.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1118" y="404" width="2" height="15" fill="rgb(244,22,47)"/><text x="1121.00" y="414.50"></text></g><g><title>0x7fa28814199b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1124" y="292" width="2" height="15" fill="rgb(240,85,51)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7fa2881419b3 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="1126" y="292" width="3" height="15" fill="rgb(228,58,49)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7fa288141a4b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1129" y="292" width="2" height="15" fill="rgb(245,71,0)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7fa288141a51 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1131" y="292" width="2" height="15" fill="rgb(234,74,11)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fa288141cf0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(207,46,9)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7fa288141d07 (libc-2.29.so) (10 samples, 1.54%)</title><rect x="1135" y="292" width="18" height="15" fill="rgb(212,76,13)"/><text x="1138.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.62%)</title><rect x="1153" y="292" width="7" height="15" fill="rgb(216,203,25)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7fa2489720f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1168" y="308" width="1" height="15" fill="rgb(213,78,16)"/><text x="1171.00" y="318.50"></text></g><g><title>0x7fa288141906 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1169" y="308" width="2" height="15" fill="rgb(215,37,31)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7fa28814192c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(245,17,27)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7fa288141971 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1173" y="308" width="2" height="15" fill="rgb(223,181,36)"/><text x="1176.00" y="318.50"></text></g><g><title>0x7fa288141d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1175" y="308" width="2" height="15" fill="rgb(219,84,10)"/><text x="1178.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1177" y="308" width="2" height="15" fill="rgb(239,101,41)"/><text x="1180.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (315 samples, 48.61%)</title><rect x="607" y="244" width="573" height="15" fill="rgb(223,124,5)"/><text x="610.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 5.25%)</title><rect x="1118" y="260" width="62" height="15" fill="rgb(218,151,3)"/><text x="1121.00" y="270.50">std::v..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 5.09%)</title><rect x="1120" y="276" width="60" height="15" fill="rgb(250,211,23)"/><text x="1123.00" y="286.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.70%)</title><rect x="1160" y="292" width="20" height="15" fill="rgb(228,80,16)"/><text x="1163.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1179" y="308" width="1" height="15" fill="rgb(245,174,34)"/><text x="1182.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (322 samples, 49.69%)</title><rect x="596" y="164" width="586" height="15" fill="rgb(248,196,17)"/><text x="599.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (322 samples, 49.69%)</title><rect x="596" y="180" width="586" height="15" fill="rgb(209,29,41)"/><text x="599.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (317 samples, 48.92%)</title><rect x="605" y="196" width="577" height="15" fill="rgb(222,144,20)"/><text x="608.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (317 samples, 48.92%)</title><rect x="605" y="212" width="577" height="15" fill="rgb(224,47,50)"/><text x="608.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (317 samples, 48.92%)</title><rect x="605" y="228" width="577" height="15" fill="rgb(237,218,37)"/><text x="608.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="244" width="2" height="15" fill="rgb(254,9,23)"/><text x="1183.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="260" width="2" height="15" fill="rgb(235,10,53)"/><text x="1183.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="276" width="2" height="15" fill="rgb(252,222,27)"/><text x="1183.00" y="286.50"></text></g><g><title>all (648 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(206,222,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:52) (376 samples, 58.02%)</title><rect x="505" y="52" width="685" height="15" fill="rgb(242,110,1)"/><text x="508.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:51) (376 samples, 58.02%)</title><rect x="505" y="68" width="685" height="15" fill="rgb(246,100,48)"/><text x="508.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_...</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:29) (376 samples, 58.02%)</title><rect x="505" y="84" width="685" height="15" fill="rgb(216,57,36)"/><text x="508.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:23) (370 samples, 57.10%)</title><rect x="516" y="100" width="674" height="15" fill="rgb(220,187,46)"/><text x="519.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py:..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (330 samples, 50.93%)</title><rect x="589" y="116" width="601" height="15" fill="rgb(233,201,54)"/><text x="592.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (330 samples, 50.93%)</title><rect x="589" y="132" width="601" height="15" fill="rgb(245,64,30)"/><text x="592.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (327 samples, 50.46%)</title><rect x="594" y="148" width="596" height="15" fill="rgb(247,191,39)"/><text x="597.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.62%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(240,224,51)"/><text x="1185.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.46%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(208,86,52)"/><text x="1187.00" y="190.50"></text></g></g></svg>