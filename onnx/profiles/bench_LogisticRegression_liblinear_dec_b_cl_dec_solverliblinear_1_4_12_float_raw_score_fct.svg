<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(233,202,33)"/><text x="13.00" y="350.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(223,111,4)"/><text x="13.00" y="366.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(216,214,7)"/><text x="13.00" y="382.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(238,226,43)"/><text x="13.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(228,180,3)"/><text x="13.00" y="414.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="13" y="980" width="8" height="15" fill="rgb(243,24,13)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="13" y="996" width="8" height="15" fill="rgb(237,177,7)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="13" y="1012" width="8" height="15" fill="rgb(248,202,25)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(237,61,25)"/><text x="20.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(230,121,17)"/><text x="20.00" y="1054.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.94%)</title><rect x="13" y="900" width="11" height="15" fill="rgb(244,176,1)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.94%)</title><rect x="13" y="916" width="11" height="15" fill="rgb(245,174,17)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.94%)</title><rect x="13" y="932" width="11" height="15" fill="rgb(244,140,29)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.94%)</title><rect x="13" y="948" width="11" height="15" fill="rgb(246,6,45)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.94%)</title><rect x="13" y="964" width="11" height="15" fill="rgb(249,162,37)"/><text x="16.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(214,110,17)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(250,63,39)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (4 samples, 1.26%)</title><rect x="13" y="868" width="15" height="15" fill="rgb(241,188,26)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (4 samples, 1.26%)</title><rect x="13" y="884" width="15" height="15" fill="rgb(218,205,44)"/><text x="16.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="24" y="900" width="4" height="15" fill="rgb(235,55,15)"/><text x="27.00" y="910.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="868" width="4" height="15" fill="rgb(239,159,33)"/><text x="31.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="884" width="4" height="15" fill="rgb(227,218,29)"/><text x="31.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="900" width="4" height="15" fill="rgb(235,38,0)"/><text x="31.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="916" width="4" height="15" fill="rgb(243,180,22)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(238,42,50)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(244,77,22)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(243,105,33)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(220,221,0)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.20%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(222,153,31)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(243,89,21)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 2.20%)</title><rect x="10" y="292" width="25" height="15" fill="rgb(211,119,26)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="308" width="25" height="15" fill="rgb(230,63,4)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.20%)</title><rect x="10" y="324" width="25" height="15" fill="rgb(224,223,19)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="340" width="22" height="15" fill="rgb(221,13,52)"/><text x="16.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="13" y="356" width="22" height="15" fill="rgb(239,211,7)"/><text x="16.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="372" width="22" height="15" fill="rgb(231,186,38)"/><text x="16.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.89%)</title><rect x="13" y="388" width="22" height="15" fill="rgb(216,58,28)"/><text x="16.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="404" width="22" height="15" fill="rgb(247,160,47)"/><text x="16.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="420" width="22" height="15" fill="rgb(238,22,21)"/><text x="16.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="436" width="22" height="15" fill="rgb(247,9,14)"/><text x="16.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="13" y="452" width="22" height="15" fill="rgb(206,203,51)"/><text x="16.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="468" width="22" height="15" fill="rgb(219,150,39)"/><text x="16.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.89%)</title><rect x="13" y="484" width="22" height="15" fill="rgb(250,204,39)"/><text x="16.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="500" width="22" height="15" fill="rgb(246,24,50)"/><text x="16.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="516" width="22" height="15" fill="rgb(251,124,14)"/><text x="16.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="532" width="22" height="15" fill="rgb(251,136,1)"/><text x="16.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="13" y="548" width="22" height="15" fill="rgb(208,198,37)"/><text x="16.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="564" width="22" height="15" fill="rgb(216,198,4)"/><text x="16.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.89%)</title><rect x="13" y="580" width="22" height="15" fill="rgb(236,105,43)"/><text x="16.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="596" width="22" height="15" fill="rgb(247,19,52)"/><text x="16.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="612" width="22" height="15" fill="rgb(243,68,41)"/><text x="16.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="628" width="22" height="15" fill="rgb(230,59,30)"/><text x="16.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="644" width="22" height="15" fill="rgb(250,208,1)"/><text x="16.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="660" width="22" height="15" fill="rgb(212,71,5)"/><text x="16.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="676" width="22" height="15" fill="rgb(229,40,40)"/><text x="16.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="13" y="692" width="22" height="15" fill="rgb(247,182,51)"/><text x="16.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="708" width="22" height="15" fill="rgb(210,28,7)"/><text x="16.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.89%)</title><rect x="13" y="724" width="22" height="15" fill="rgb(238,123,27)"/><text x="16.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="740" width="22" height="15" fill="rgb(231,21,43)"/><text x="16.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="756" width="22" height="15" fill="rgb(248,24,26)"/><text x="16.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="772" width="22" height="15" fill="rgb(231,176,22)"/><text x="16.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="13" y="788" width="22" height="15" fill="rgb(235,143,43)"/><text x="16.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="13" y="804" width="22" height="15" fill="rgb(229,6,22)"/><text x="16.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.89%)</title><rect x="13" y="820" width="22" height="15" fill="rgb(246,124,17)"/><text x="16.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.89%)</title><rect x="13" y="836" width="22" height="15" fill="rgb(250,180,24)"/><text x="16.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.89%)</title><rect x="13" y="852" width="22" height="15" fill="rgb(228,165,24)"/><text x="16.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="32" y="868" width="3" height="15" fill="rgb(225,225,34)"/><text x="35.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="32" y="884" width="3" height="15" fill="rgb(223,121,30)"/><text x="35.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="32" y="900" width="3" height="15" fill="rgb(243,58,39)"/><text x="35.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="32" y="916" width="3" height="15" fill="rgb(221,185,19)"/><text x="35.00" y="926.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="32" y="932" width="3" height="15" fill="rgb(237,195,24)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1124" width="4" height="15" fill="rgb(253,36,28)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1140" width="4" height="15" fill="rgb(228,39,2)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1156" width="4" height="15" fill="rgb(217,10,31)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1172" width="4" height="15" fill="rgb(211,193,3)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1188" width="4" height="15" fill="rgb(218,192,21)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="35" y="1204" width="4" height="15" fill="rgb(206,186,1)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1220" width="4" height="15" fill="rgb(219,19,40)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1236" width="4" height="15" fill="rgb(240,218,26)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1252" width="4" height="15" fill="rgb(237,150,42)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1268" width="4" height="15" fill="rgb(209,157,32)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1284" width="4" height="15" fill="rgb(241,131,30)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(236,216,36)"/><text x="38.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(227,103,27)"/><text x="38.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(230,195,35)"/><text x="38.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(211,100,21)"/><text x="38.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(250,210,41)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="484" width="8" height="15" fill="rgb(218,110,25)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="500" width="8" height="15" fill="rgb(227,171,38)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="516" width="8" height="15" fill="rgb(220,127,22)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="532" width="8" height="15" fill="rgb(227,24,40)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="548" width="8" height="15" fill="rgb(244,1,15)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="564" width="8" height="15" fill="rgb(235,219,19)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.63%)</title><rect x="35" y="580" width="8" height="15" fill="rgb(251,121,30)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="596" width="8" height="15" fill="rgb(238,63,26)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="612" width="8" height="15" fill="rgb(229,40,36)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="628" width="8" height="15" fill="rgb(213,28,3)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="644" width="8" height="15" fill="rgb(234,10,54)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="660" width="8" height="15" fill="rgb(235,199,30)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.63%)</title><rect x="35" y="676" width="8" height="15" fill="rgb(253,203,51)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="692" width="8" height="15" fill="rgb(214,82,49)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="708" width="8" height="15" fill="rgb(245,177,48)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="724" width="8" height="15" fill="rgb(205,48,31)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="740" width="8" height="15" fill="rgb(234,6,42)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="756" width="8" height="15" fill="rgb(249,13,37)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.63%)</title><rect x="35" y="772" width="8" height="15" fill="rgb(231,171,21)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="788" width="8" height="15" fill="rgb(231,102,31)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="804" width="8" height="15" fill="rgb(216,67,8)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="820" width="8" height="15" fill="rgb(250,109,15)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="836" width="8" height="15" fill="rgb(223,106,30)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="852" width="8" height="15" fill="rgb(214,97,15)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.63%)</title><rect x="35" y="868" width="8" height="15" fill="rgb(207,211,37)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="884" width="8" height="15" fill="rgb(235,55,45)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="900" width="8" height="15" fill="rgb(205,122,36)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="916" width="8" height="15" fill="rgb(224,170,16)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="932" width="8" height="15" fill="rgb(234,198,7)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="948" width="8" height="15" fill="rgb(232,77,38)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="964" width="8" height="15" fill="rgb(216,25,0)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="980" width="8" height="15" fill="rgb(221,5,38)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="996" width="8" height="15" fill="rgb(250,62,19)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.63%)</title><rect x="35" y="1012" width="8" height="15" fill="rgb(235,139,53)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="1028" width="8" height="15" fill="rgb(250,155,6)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="1044" width="8" height="15" fill="rgb(216,203,37)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="1060" width="8" height="15" fill="rgb(209,185,42)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="35" y="1076" width="8" height="15" fill="rgb(233,156,7)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="35" y="1092" width="8" height="15" fill="rgb(217,39,31)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.63%)</title><rect x="35" y="1108" width="8" height="15" fill="rgb(208,118,28)"/><text x="38.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1124" width="4" height="15" fill="rgb(227,84,1)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1140" width="4" height="15" fill="rgb(212,59,44)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1156" width="4" height="15" fill="rgb(215,219,45)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1172" width="4" height="15" fill="rgb(212,153,48)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1188" width="4" height="15" fill="rgb(231,160,32)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1204" width="4" height="15" fill="rgb(235,204,31)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1220" width="4" height="15" fill="rgb(229,77,15)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1236" width="4" height="15" fill="rgb(208,83,48)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1252" width="4" height="15" fill="rgb(238,178,1)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1268" width="4" height="15" fill="rgb(234,138,30)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1284" width="4" height="15" fill="rgb(213,135,31)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1300" width="4" height="15" fill="rgb(224,217,1)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1316" width="4" height="15" fill="rgb(214,6,3)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1332" width="4" height="15" fill="rgb(225,198,34)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1348" width="4" height="15" fill="rgb(240,81,4)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.31%)</title><rect x="39" y="1364" width="4" height="15" fill="rgb(227,206,33)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1380" width="4" height="15" fill="rgb(206,30,13)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1396" width="4" height="15" fill="rgb(241,154,21)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1412" width="4" height="15" fill="rgb(248,184,38)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1428" width="4" height="15" fill="rgb(244,4,24)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1444" width="4" height="15" fill="rgb(253,79,47)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="39" y="1460" width="4" height="15" fill="rgb(208,174,46)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="39" y="1476" width="4" height="15" fill="rgb(208,53,22)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="39" y="1492" width="4" height="15" fill="rgb(223,91,21)"/><text x="42.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="39" y="1508" width="4" height="15" fill="rgb(223,228,36)"/><text x="42.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.31%)</title><rect x="39" y="1524" width="4" height="15" fill="rgb(229,28,24)"/><text x="42.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="39" y="1540" width="4" height="15" fill="rgb(238,124,5)"/><text x="42.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="39" y="1556" width="4" height="15" fill="rgb(224,172,44)"/><text x="42.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.31%)</title><rect x="39" y="1572" width="4" height="15" fill="rgb(211,219,41)"/><text x="42.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.31%)</title><rect x="39" y="1588" width="4" height="15" fill="rgb(249,72,23)"/><text x="42.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="39" y="1604" width="4" height="15" fill="rgb(248,183,25)"/><text x="42.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="39" y="1620" width="4" height="15" fill="rgb(206,51,11)"/><text x="42.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.31%)</title><rect x="39" y="1636" width="4" height="15" fill="rgb(254,162,16)"/><text x="42.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="39" y="1652" width="4" height="15" fill="rgb(235,125,10)"/><text x="42.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.94%)</title><rect x="35" y="436" width="12" height="15" fill="rgb(250,174,37)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.94%)</title><rect x="35" y="452" width="12" height="15" fill="rgb(208,215,33)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.94%)</title><rect x="35" y="468" width="12" height="15" fill="rgb(251,87,31)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="484" width="4" height="15" fill="rgb(250,197,48)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="500" width="4" height="15" fill="rgb(210,169,42)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="516" width="4" height="15" fill="rgb(205,151,29)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="43" y="532" width="4" height="15" fill="rgb(219,110,40)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="548" width="4" height="15" fill="rgb(216,191,53)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="564" width="4" height="15" fill="rgb(225,38,53)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="580" width="4" height="15" fill="rgb(223,145,10)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="596" width="4" height="15" fill="rgb(236,185,51)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="612" width="4" height="15" fill="rgb(251,196,31)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.31%)</title><rect x="43" y="628" width="4" height="15" fill="rgb(241,10,37)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="644" width="4" height="15" fill="rgb(225,175,49)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="660" width="4" height="15" fill="rgb(214,119,43)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="676" width="4" height="15" fill="rgb(243,191,0)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="692" width="4" height="15" fill="rgb(248,15,47)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="708" width="4" height="15" fill="rgb(207,43,16)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/api.py) (1 samples, 0.31%)</title><rect x="43" y="724" width="4" height="15" fill="rgb(238,200,53)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="740" width="4" height="15" fill="rgb(229,153,8)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="756" width="4" height="15" fill="rgb(240,128,44)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="43" y="772" width="4" height="15" fill="rgb(227,182,42)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="788" width="4" height="15" fill="rgb(219,43,2)"/><text x="46.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="804" width="4" height="15" fill="rgb(252,184,27)"/><text x="46.00" y="814.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="43" y="820" width="4" height="15" fill="rgb(232,210,20)"/><text x="46.00" y="830.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="43" y="836" width="4" height="15" fill="rgb(237,140,43)"/><text x="46.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.26%)</title><rect x="35" y="340" width="15" height="15" fill="rgb(226,132,32)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.26%)</title><rect x="35" y="356" width="15" height="15" fill="rgb(212,44,13)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.26%)</title><rect x="35" y="372" width="15" height="15" fill="rgb(217,226,52)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.26%)</title><rect x="35" y="388" width="15" height="15" fill="rgb(206,157,41)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.26%)</title><rect x="35" y="404" width="15" height="15" fill="rgb(227,131,21)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.26%)</title><rect x="35" y="420" width="15" height="15" fill="rgb(228,58,19)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.31%)</title><rect x="47" y="436" width="3" height="15" fill="rgb(235,154,43)"/><text x="50.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="452" width="3" height="15" fill="rgb(240,156,11)"/><text x="50.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="468" width="3" height="15" fill="rgb(215,56,10)"/><text x="50.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="484" width="3" height="15" fill="rgb(242,229,32)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="47" y="500" width="3" height="15" fill="rgb(241,5,43)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="516" width="3" height="15" fill="rgb(225,19,37)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.31%)</title><rect x="47" y="532" width="3" height="15" fill="rgb(223,10,17)"/><text x="50.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="548" width="3" height="15" fill="rgb(215,85,38)"/><text x="50.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="564" width="3" height="15" fill="rgb(206,225,45)"/><text x="50.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="580" width="3" height="15" fill="rgb(225,160,17)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="596" width="3" height="15" fill="rgb(246,81,2)"/><text x="50.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="612" width="3" height="15" fill="rgb(241,155,46)"/><text x="50.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="47" y="628" width="3" height="15" fill="rgb(222,96,44)"/><text x="50.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="47" y="644" width="3" height="15" fill="rgb(217,14,45)"/><text x="50.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.31%)</title><rect x="47" y="660" width="3" height="15" fill="rgb(206,124,1)"/><text x="50.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py) (1 samples, 0.31%)</title><rect x="47" y="676" width="3" height="15" fill="rgb(237,120,31)"/><text x="50.00" y="686.50"></text></g><g><title>compile (re.py) (1 samples, 0.31%)</title><rect x="47" y="692" width="3" height="15" fill="rgb(236,104,20)"/><text x="50.00" y="702.50"></text></g><g><title>_compile (re.py) (1 samples, 0.31%)</title><rect x="47" y="708" width="3" height="15" fill="rgb(227,222,3)"/><text x="50.00" y="718.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="47" y="724" width="3" height="15" fill="rgb(254,10,12)"/><text x="50.00" y="734.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="740" width="3" height="15" fill="rgb(207,25,42)"/><text x="50.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="756" width="3" height="15" fill="rgb(232,175,4)"/><text x="50.00" y="766.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="772" width="3" height="15" fill="rgb(221,212,37)"/><text x="50.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="788" width="3" height="15" fill="rgb(247,135,4)"/><text x="50.00" y="798.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="804" width="3" height="15" fill="rgb(238,56,38)"/><text x="50.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="820" width="3" height="15" fill="rgb(247,31,0)"/><text x="50.00" y="830.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="836" width="3" height="15" fill="rgb(210,126,51)"/><text x="50.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="852" width="3" height="15" fill="rgb(247,143,25)"/><text x="50.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="868" width="3" height="15" fill="rgb(220,109,46)"/><text x="50.00" y="878.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="884" width="3" height="15" fill="rgb(220,61,1)"/><text x="50.00" y="894.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.31%)</title><rect x="47" y="900" width="3" height="15" fill="rgb(235,29,44)"/><text x="50.00" y="910.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.31%)</title><rect x="50" y="868" width="4" height="15" fill="rgb(246,137,45)"/><text x="53.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="884" width="4" height="15" fill="rgb(230,198,16)"/><text x="53.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="900" width="4" height="15" fill="rgb(219,202,50)"/><text x="53.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="916" width="4" height="15" fill="rgb(209,143,15)"/><text x="53.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="932" width="4" height="15" fill="rgb(244,163,22)"/><text x="53.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="948" width="4" height="15" fill="rgb(213,13,49)"/><text x="53.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.31%)</title><rect x="50" y="964" width="4" height="15" fill="rgb(216,153,30)"/><text x="53.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="980" width="4" height="15" fill="rgb(227,92,43)"/><text x="53.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="996" width="4" height="15" fill="rgb(217,56,22)"/><text x="53.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1012" width="4" height="15" fill="rgb(233,202,1)"/><text x="53.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1028" width="4" height="15" fill="rgb(211,100,1)"/><text x="53.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1044" width="4" height="15" fill="rgb(236,104,25)"/><text x="53.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/charsetgroupprober.py) (1 samples, 0.31%)</title><rect x="50" y="1060" width="4" height="15" fill="rgb(248,99,36)"/><text x="53.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1076" width="4" height="15" fill="rgb(217,143,19)"/><text x="53.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1092" width="4" height="15" fill="rgb(245,10,34)"/><text x="53.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1108" width="4" height="15" fill="rgb(220,30,32)"/><text x="53.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1124" width="4" height="15" fill="rgb(211,108,7)"/><text x="53.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1140" width="4" height="15" fill="rgb(229,89,3)"/><text x="53.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/enums.py) (1 samples, 0.31%)</title><rect x="50" y="1156" width="4" height="15" fill="rgb(231,156,50)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(245,24,34)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(249,64,11)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(253,181,34)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.09%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(210,53,50)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(252,156,5)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py) (13 samples, 4.09%)</title><rect x="10" y="148" width="48" height="15" fill="rgb(225,35,15)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="164" width="48" height="15" fill="rgb(219,217,33)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.09%)</title><rect x="10" y="180" width="48" height="15" fill="rgb(233,16,19)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="196" width="23" height="15" fill="rgb(233,186,40)"/><text x="38.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="35" y="212" width="23" height="15" fill="rgb(214,211,35)"/><text x="38.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="228" width="23" height="15" fill="rgb(247,171,2)"/><text x="38.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.89%)</title><rect x="35" y="244" width="23" height="15" fill="rgb(222,227,7)"/><text x="38.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="260" width="23" height="15" fill="rgb(225,29,25)"/><text x="38.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="276" width="23" height="15" fill="rgb(251,88,48)"/><text x="38.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="292" width="23" height="15" fill="rgb(207,12,44)"/><text x="38.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.89%)</title><rect x="35" y="308" width="23" height="15" fill="rgb(243,65,25)"/><text x="38.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.89%)</title><rect x="35" y="324" width="23" height="15" fill="rgb(237,198,33)"/><text x="38.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.63%)</title><rect x="50" y="340" width="8" height="15" fill="rgb(240,101,14)"/><text x="53.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="356" width="8" height="15" fill="rgb(210,80,34)"/><text x="53.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="372" width="8" height="15" fill="rgb(240,149,41)"/><text x="53.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="388" width="8" height="15" fill="rgb(254,155,33)"/><text x="53.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="404" width="8" height="15" fill="rgb(247,138,25)"/><text x="53.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="420" width="8" height="15" fill="rgb(218,81,4)"/><text x="53.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="436" width="8" height="15" fill="rgb(241,224,16)"/><text x="53.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="50" y="452" width="8" height="15" fill="rgb(224,75,31)"/><text x="53.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="468" width="8" height="15" fill="rgb(234,96,5)"/><text x="53.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.63%)</title><rect x="50" y="484" width="8" height="15" fill="rgb(245,0,36)"/><text x="53.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="500" width="8" height="15" fill="rgb(227,121,7)"/><text x="53.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="516" width="8" height="15" fill="rgb(207,121,27)"/><text x="53.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="532" width="8" height="15" fill="rgb(224,106,49)"/><text x="53.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="50" y="548" width="8" height="15" fill="rgb(231,207,4)"/><text x="53.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="564" width="8" height="15" fill="rgb(247,189,32)"/><text x="53.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.63%)</title><rect x="50" y="580" width="8" height="15" fill="rgb(240,115,20)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="596" width="8" height="15" fill="rgb(217,139,16)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="612" width="8" height="15" fill="rgb(226,153,43)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="628" width="8" height="15" fill="rgb(223,129,32)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="50" y="644" width="8" height="15" fill="rgb(211,57,6)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="660" width="8" height="15" fill="rgb(248,106,37)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.63%)</title><rect x="50" y="676" width="8" height="15" fill="rgb(228,75,13)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="692" width="8" height="15" fill="rgb(243,134,29)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="708" width="8" height="15" fill="rgb(211,184,33)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="724" width="8" height="15" fill="rgb(250,17,29)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="50" y="740" width="8" height="15" fill="rgb(231,207,26)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="756" width="8" height="15" fill="rgb(233,122,48)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.63%)</title><rect x="50" y="772" width="8" height="15" fill="rgb(239,180,31)"/><text x="53.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="788" width="8" height="15" fill="rgb(231,148,14)"/><text x="53.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="804" width="8" height="15" fill="rgb(233,81,17)"/><text x="53.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="820" width="8" height="15" fill="rgb(205,229,27)"/><text x="53.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.63%)</title><rect x="50" y="836" width="8" height="15" fill="rgb(242,76,38)"/><text x="53.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.63%)</title><rect x="50" y="852" width="8" height="15" fill="rgb(217,130,11)"/><text x="53.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="868" width="4" height="15" fill="rgb(228,33,34)"/><text x="57.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="884" width="4" height="15" fill="rgb(222,179,20)"/><text x="57.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="900" width="4" height="15" fill="rgb(208,106,40)"/><text x="57.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="916" width="4" height="15" fill="rgb(210,73,12)"/><text x="57.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="932" width="4" height="15" fill="rgb(208,58,0)"/><text x="57.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="948" width="4" height="15" fill="rgb(231,204,53)"/><text x="57.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.31%)</title><rect x="54" y="964" width="4" height="15" fill="rgb(205,204,9)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="980" width="4" height="15" fill="rgb(253,28,54)"/><text x="57.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="996" width="4" height="15" fill="rgb(214,41,51)"/><text x="57.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="1012" width="4" height="15" fill="rgb(239,130,33)"/><text x="57.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="1028" width="4" height="15" fill="rgb(236,221,9)"/><text x="57.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="1044" width="4" height="15" fill="rgb(207,57,28)"/><text x="57.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/response.py) (1 samples, 0.31%)</title><rect x="54" y="1060" width="4" height="15" fill="rgb(214,202,8)"/><text x="57.00" y="1070.50"></text></g><g><title>getLogger (logging/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="1076" width="4" height="15" fill="rgb(248,164,20)"/><text x="57.00" y="1086.50"></text></g><g><title>getLogger (logging/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="1092" width="4" height="15" fill="rgb(222,183,28)"/><text x="57.00" y="1102.50"></text></g><g><title>_fixupParents (logging/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="1108" width="4" height="15" fill="rgb(230,155,20)"/><text x="57.00" y="1118.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.63%)</title><rect x="58" y="116" width="7" height="15" fill="rgb(206,17,34)"/><text x="61.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.63%)</title><rect x="113" y="180" width="8" height="15" fill="rgb(209,45,3)"/><text x="116.00" y="190.50"></text></g><g><title>0x7f3069a52ff9 (?) (1 samples, 0.31%)</title><rect x="136" y="212" width="3" height="15" fill="rgb(217,183,15)"/><text x="139.00" y="222.50"></text></g><g><title>0x7f3069a4def6 (?) (1 samples, 0.31%)</title><rect x="136" y="228" width="3" height="15" fill="rgb(236,132,42)"/><text x="139.00" y="238.50"></text></g><g><title>0x7f3069a42458 (?) (1 samples, 0.31%)</title><rect x="136" y="244" width="3" height="15" fill="rgb(251,138,36)"/><text x="139.00" y="254.50"></text></g><g><title>0x7f3069a33081 (?) (1 samples, 0.31%)</title><rect x="136" y="260" width="3" height="15" fill="rgb(221,147,48)"/><text x="139.00" y="270.50"></text></g><g><title>0x7f3069a32040 (?) (1 samples, 0.31%)</title><rect x="136" y="276" width="3" height="15" fill="rgb(254,174,0)"/><text x="139.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="147" y="260" width="4" height="15" fill="rgb(238,123,2)"/><text x="150.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.26%)</title><rect x="139" y="212" width="15" height="15" fill="rgb(254,101,44)"/><text x="142.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="147" y="228" width="7" height="15" fill="rgb(246,88,19)"/><text x="150.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="147" y="244" width="7" height="15" fill="rgb(224,125,45)"/><text x="150.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="151" y="260" width="3" height="15" fill="rgb(238,163,38)"/><text x="154.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="151" y="276" width="3" height="15" fill="rgb(211,62,18)"/><text x="154.00" y="286.50"></text></g><g><title>0x7f30a99f8e82 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="151" y="292" width="3" height="15" fill="rgb(209,85,19)"/><text x="154.00" y="302.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="158" y="228" width="4" height="15" fill="rgb(213,101,35)"/><text x="161.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="165" y="292" width="4" height="15" fill="rgb(249,197,46)"/><text x="168.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="165" y="308" width="4" height="15" fill="rgb(248,125,5)"/><text x="168.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="165" y="324" width="4" height="15" fill="rgb(249,212,17)"/><text x="168.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="169" y="292" width="4" height="15" fill="rgb(213,50,26)"/><text x="172.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="169" y="308" width="4" height="15" fill="rgb(219,54,21)"/><text x="172.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="184" y="356" width="4" height="15" fill="rgb(205,72,39)"/><text x="187.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="184" y="372" width="4" height="15" fill="rgb(226,76,25)"/><text x="187.00" y="382.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="188" y="356" width="3" height="15" fill="rgb(222,136,46)"/><text x="191.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="188" y="372" width="3" height="15" fill="rgb(231,149,3)"/><text x="191.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="188" y="388" width="3" height="15" fill="rgb(237,27,47)"/><text x="191.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.57%)</title><rect x="176" y="340" width="19" height="15" fill="rgb(217,149,49)"/><text x="179.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="191" y="356" width="4" height="15" fill="rgb(239,93,42)"/><text x="194.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="195" y="340" width="4" height="15" fill="rgb(252,38,52)"/><text x="198.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="195" y="356" width="4" height="15" fill="rgb(211,224,11)"/><text x="198.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="340" width="3" height="15" fill="rgb(243,16,35)"/><text x="202.00" y="350.50"></text></g><g><title>0x7f30a99e2bc0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="214" y="356" width="3" height="15" fill="rgb(220,13,5)"/><text x="217.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="217" y="356" width="4" height="15" fill="rgb(222,144,50)"/><text x="220.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 5.97%)</title><rect x="165" y="260" width="71" height="15" fill="rgb(229,124,30)"/><text x="168.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 5.97%)</title><rect x="165" y="276" width="71" height="15" fill="rgb(227,181,1)"/><text x="168.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.35%)</title><rect x="173" y="292" width="63" height="15" fill="rgb(205,107,18)"/><text x="176.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.35%)</title><rect x="173" y="308" width="63" height="15" fill="rgb(221,174,3)"/><text x="176.00" y="318.50">onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.35%)</title><rect x="173" y="324" width="63" height="15" fill="rgb(215,29,37)"/><text x="176.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.83%)</title><rect x="202" y="340" width="34" height="15" fill="rgb(232,157,49)"/><text x="205.00" y="350.50">on..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="221" y="356" width="15" height="15" fill="rgb(227,183,11)"/><text x="224.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="221" y="372" width="15" height="15" fill="rgb(250,54,2)"/><text x="224.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="221" y="388" width="15" height="15" fill="rgb(233,142,20)"/><text x="224.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="221" y="404" width="15" height="15" fill="rgb(245,2,53)"/><text x="224.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="225" y="420" width="11" height="15" fill="rgb(237,151,17)"/><text x="228.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="225" y="436" width="11" height="15" fill="rgb(218,122,15)"/><text x="228.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="452" width="4" height="15" fill="rgb(208,208,15)"/><text x="235.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="468" width="4" height="15" fill="rgb(251,121,35)"/><text x="235.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="484" width="4" height="15" fill="rgb(245,193,36)"/><text x="235.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="500" width="4" height="15" fill="rgb(212,46,54)"/><text x="235.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="516" width="4" height="15" fill="rgb(254,111,8)"/><text x="235.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="232" y="532" width="4" height="15" fill="rgb(231,177,24)"/><text x="235.00" y="542.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="236" y="260" width="11" height="15" fill="rgb(205,24,12)"/><text x="239.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="243" y="276" width="4" height="15" fill="rgb(234,174,39)"/><text x="246.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.31%)</title><rect x="247" y="276" width="4" height="15" fill="rgb(210,63,29)"/><text x="250.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="247" y="292" width="4" height="15" fill="rgb(225,194,26)"/><text x="250.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="247" y="260" width="7" height="15" fill="rgb(214,214,53)"/><text x="250.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="251" y="276" width="3" height="15" fill="rgb(216,67,15)"/><text x="254.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="251" y="292" width="3" height="15" fill="rgb(221,214,33)"/><text x="254.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="251" y="308" width="3" height="15" fill="rgb(212,210,52)"/><text x="254.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="254" y="260" width="4" height="15" fill="rgb(223,30,36)"/><text x="257.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="258" y="260" width="4" height="15" fill="rgb(215,4,24)"/><text x="261.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="262" y="260" width="11" height="15" fill="rgb(215,90,10)"/><text x="265.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="269" y="276" width="4" height="15" fill="rgb(215,123,4)"/><text x="272.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="269" y="292" width="4" height="15" fill="rgb(236,8,22)"/><text x="272.00" y="302.50"></text></g><g><title>0x7f30a99e2d07 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="269" y="308" width="4" height="15" fill="rgb(238,213,46)"/><text x="272.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="273" y="356" width="4" height="15" fill="rgb(241,218,22)"/><text x="276.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.06%)</title><rect x="162" y="244" width="118" height="15" fill="rgb(209,93,21)"/><text x="165.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="260" width="7" height="15" fill="rgb(218,55,32)"/><text x="276.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="276" width="7" height="15" fill="rgb(238,91,7)"/><text x="276.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="292" width="7" height="15" fill="rgb(252,182,10)"/><text x="276.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="308" width="7" height="15" fill="rgb(251,59,6)"/><text x="276.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="324" width="7" height="15" fill="rgb(240,145,39)"/><text x="276.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="273" y="340" width="7" height="15" fill="rgb(218,62,4)"/><text x="276.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="277" y="356" width="3" height="15" fill="rgb(212,113,27)"/><text x="280.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="277" y="372" width="3" height="15" fill="rgb(217,173,35)"/><text x="280.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="280" y="244" width="4" height="15" fill="rgb(231,112,19)"/><text x="283.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="280" y="260" width="4" height="15" fill="rgb(214,84,43)"/><text x="283.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="284" y="244" width="15" height="15" fill="rgb(246,195,29)"/><text x="287.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="284" y="260" width="15" height="15" fill="rgb(215,118,40)"/><text x="287.00" y="270.50"></text></g><g><title>0x7f3069a19f90 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="295" y="276" width="4" height="15" fill="rgb(214,100,34)"/><text x="298.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="299" y="244" width="4" height="15" fill="rgb(215,188,40)"/><text x="302.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="299" y="260" width="4" height="15" fill="rgb(210,228,26)"/><text x="302.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="303" y="244" width="3" height="15" fill="rgb(214,96,40)"/><text x="306.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="303" y="260" width="3" height="15" fill="rgb(238,173,24)"/><text x="306.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 19.50%)</title><rect x="80" y="132" width="230" height="15" fill="rgb(233,168,47)"/><text x="83.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (62 samples, 19.50%)</title><rect x="80" y="148" width="230" height="15" fill="rgb(243,157,12)"/><text x="83.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (59 samples, 18.55%)</title><rect x="91" y="164" width="219" height="15" fill="rgb(205,216,38)"/><text x="94.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (51 samples, 16.04%)</title><rect x="121" y="180" width="189" height="15" fill="rgb(228,209,13)"/><text x="124.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py) (51 samples, 16.04%)</title><rect x="121" y="196" width="189" height="15" fill="rgb(224,45,18)"/><text x="124.00" y="206.50">run (onnxruntime/capi/se..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 13.21%)</title><rect x="154" y="212" width="156" height="15" fill="rgb(215,136,6)"/><text x="157.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 12.58%)</title><rect x="162" y="228" width="148" height="15" fill="rgb(233,34,7)"/><text x="165.00" y="238.50">void pybind11::cpp..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="306" y="244" width="4" height="15" fill="rgb(205,138,42)"/><text x="309.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="306" y="260" width="4" height="15" fill="rgb(247,92,45)"/><text x="309.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="306" y="276" width="4" height="15" fill="rgb(220,65,43)"/><text x="309.00" y="286.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="310" y="132" width="4" height="15" fill="rgb(228,110,29)"/><text x="313.00" y="142.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (70 samples, 22.01%)</title><rect x="58" y="68" width="259" height="15" fill="rgb(248,46,19)"/><text x="61.00" y="78.50">profile_ort (bench_LogisticRegress..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (70 samples, 22.01%)</title><rect x="58" y="84" width="259" height="15" fill="rgb(207,203,11)"/><text x="61.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (70 samples, 22.01%)</title><rect x="58" y="100" width="259" height="15" fill="rgb(212,78,8)"/><text x="61.00" y="110.50">profile (bench_LogisticRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (68 samples, 21.38%)</title><rect x="65" y="116" width="252" height="15" fill="rgb(232,56,51)"/><text x="68.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="314" y="132" width="3" height="15" fill="rgb(233,20,24)"/><text x="317.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.63%)</title><rect x="317" y="116" width="8" height="15" fill="rgb(226,42,45)"/><text x="320.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.63%)</title><rect x="317" y="132" width="8" height="15" fill="rgb(214,13,27)"/><text x="320.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="321" y="148" width="4" height="15" fill="rgb(241,23,0)"/><text x="324.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="384" y="180" width="4" height="15" fill="rgb(235,227,25)"/><text x="387.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.31%)</title><rect x="433" y="196" width="3" height="15" fill="rgb(249,191,36)"/><text x="436.00" y="206.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.31%)</title><rect x="444" y="212" width="3" height="15" fill="rgb(226,37,30)"/><text x="447.00" y="222.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="444" y="228" width="3" height="15" fill="rgb(230,89,49)"/><text x="447.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.31%)</title><rect x="447" y="212" width="4" height="15" fill="rgb(252,112,24)"/><text x="450.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="447" y="228" width="4" height="15" fill="rgb(230,190,17)"/><text x="450.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.31%)</title><rect x="447" y="244" width="4" height="15" fill="rgb(250,59,32)"/><text x="450.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="447" y="260" width="4" height="15" fill="rgb(213,64,6)"/><text x="450.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="447" y="276" width="4" height="15" fill="rgb(218,97,26)"/><text x="450.00" y="286.50"></text></g><g><title>0x7f30a9a03120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="473" y="244" width="4" height="15" fill="rgb(219,139,27)"/><text x="476.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="518" y="340" width="4" height="15" fill="rgb(227,183,2)"/><text x="521.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="518" y="356" width="4" height="15" fill="rgb(251,181,21)"/><text x="521.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(215,34,10)"/><text x="525.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (14 samples, 4.40%)</title><rect x="477" y="244" width="52" height="15" fill="rgb(226,25,50)"/><text x="480.00" y="254.50">argma..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.83%)</title><rect x="496" y="260" width="33" height="15" fill="rgb(230,41,11)"/><text x="499.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 2.83%)</title><rect x="496" y="276" width="33" height="15" fill="rgb(210,186,19)"/><text x="499.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.57%)</title><rect x="510" y="292" width="19" height="15" fill="rgb(249,15,18)"/><text x="513.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 1.26%)</title><rect x="514" y="308" width="15" height="15" fill="rgb(227,71,11)"/><text x="517.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.94%)</title><rect x="518" y="324" width="11" height="15" fill="rgb(217,195,35)"/><text x="521.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="525" y="340" width="4" height="15" fill="rgb(233,81,13)"/><text x="528.00" y="350.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.31%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(248,60,54)"/><text x="532.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="548" y="340" width="3" height="15" fill="rgb(205,24,31)"/><text x="551.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.57%)</title><rect x="536" y="276" width="19" height="15" fill="rgb(208,191,31)"/><text x="539.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 1.26%)</title><rect x="540" y="292" width="15" height="15" fill="rgb(212,220,37)"/><text x="543.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 1.26%)</title><rect x="540" y="308" width="15" height="15" fill="rgb(232,40,41)"/><text x="543.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 0.94%)</title><rect x="544" y="324" width="11" height="15" fill="rgb(209,69,48)"/><text x="547.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.31%)</title><rect x="551" y="340" width="4" height="15" fill="rgb(244,3,46)"/><text x="554.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="551" y="356" width="4" height="15" fill="rgb(232,226,54)"/><text x="554.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="551" y="372" width="4" height="15" fill="rgb(233,69,17)"/><text x="554.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="551" y="388" width="4" height="15" fill="rgb(216,89,45)"/><text x="554.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (7 samples, 2.20%)</title><rect x="533" y="244" width="26" height="15" fill="rgb(241,109,4)"/><text x="536.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 2.20%)</title><rect x="533" y="260" width="26" height="15" fill="rgb(222,22,44)"/><text x="536.00" y="270.50">d..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.31%)</title><rect x="555" y="276" width="4" height="15" fill="rgb(243,67,38)"/><text x="558.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.63%)</title><rect x="562" y="276" width="8" height="15" fill="rgb(208,62,21)"/><text x="565.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="566" y="292" width="4" height="15" fill="rgb(207,179,10)"/><text x="569.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="570" y="292" width="4" height="15" fill="rgb(247,222,47)"/><text x="573.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="574" y="308" width="3" height="15" fill="rgb(217,132,39)"/><text x="577.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="574" y="324" width="3" height="15" fill="rgb(226,155,35)"/><text x="577.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="577" y="308" width="4" height="15" fill="rgb(246,172,40)"/><text x="580.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.63%)</title><rect x="581" y="308" width="7" height="15" fill="rgb(238,215,43)"/><text x="584.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.63%)</title><rect x="581" y="324" width="7" height="15" fill="rgb(217,104,21)"/><text x="584.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (74 samples, 23.27%)</title><rect x="317" y="68" width="275" height="15" fill="rgb(211,120,23)"/><text x="320.00" y="78.50">profile_pyrt (bench_LogisticRegressi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (74 samples, 23.27%)</title><rect x="317" y="84" width="275" height="15" fill="rgb(206,64,16)"/><text x="320.00" y="94.50">setup_profile (bench_LogisticRegress..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (74 samples, 23.27%)</title><rect x="317" y="100" width="275" height="15" fill="rgb(229,140,10)"/><text x="320.00" y="110.50">profile (bench_LogisticRegression_li..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (72 samples, 22.64%)</title><rect x="325" y="116" width="267" height="15" fill="rgb(252,171,43)"/><text x="328.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (67 samples, 21.07%)</title><rect x="343" y="132" width="249" height="15" fill="rgb(236,89,11)"/><text x="346.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (65 samples, 20.44%)</title><rect x="351" y="148" width="241" height="15" fill="rgb(216,206,17)"/><text x="354.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (61 samples, 19.18%)</title><rect x="366" y="164" width="226" height="15" fill="rgb(251,186,3)"/><text x="369.00" y="174.50">_run_sequence_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (55 samples, 17.30%)</title><rect x="388" y="180" width="204" height="15" fill="rgb(240,1,16)"/><text x="391.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (42 samples, 13.21%)</title><rect x="436" y="196" width="156" height="15" fill="rgb(233,156,27)"/><text x="439.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (38 samples, 11.95%)</title><rect x="451" y="212" width="141" height="15" fill="rgb(225,139,7)"/><text x="454.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (38 samples, 11.95%)</title><rect x="451" y="228" width="141" height="15" fill="rgb(249,137,50)"/><text x="454.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.83%)</title><rect x="559" y="244" width="33" height="15" fill="rgb(242,226,8)"/><text x="562.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.83%)</title><rect x="559" y="260" width="33" height="15" fill="rgb(210,127,45)"/><text x="562.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.89%)</title><rect x="570" y="276" width="22" height="15" fill="rgb(227,85,45)"/><text x="573.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.57%)</title><rect x="574" y="292" width="18" height="15" fill="rgb(246,109,6)"/><text x="577.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="588" y="308" width="4" height="15" fill="rgb(206,69,21)"/><text x="591.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="588" y="324" width="4" height="15" fill="rgb(236,70,29)"/><text x="591.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="651" y="164" width="4" height="15" fill="rgb(217,157,23)"/><text x="654.00" y="174.50"></text></g><g><title>0x7f30a9a03120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="659" y="180" width="4" height="15" fill="rgb(211,138,11)"/><text x="662.00" y="190.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.31%)</title><rect x="663" y="212" width="3" height="15" fill="rgb(216,145,16)"/><text x="666.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="663" y="228" width="3" height="15" fill="rgb(235,111,37)"/><text x="666.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="663" y="244" width="3" height="15" fill="rgb(210,21,34)"/><text x="666.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (2 samples, 0.63%)</title><rect x="666" y="212" width="8" height="15" fill="rgb(206,111,9)"/><text x="669.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="674" y="228" width="3" height="15" fill="rgb(207,3,3)"/><text x="677.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="677" y="244" width="4" height="15" fill="rgb(230,164,46)"/><text x="680.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="677" y="260" width="4" height="15" fill="rgb(205,213,54)"/><text x="680.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.63%)</title><rect x="681" y="244" width="8" height="15" fill="rgb(210,161,14)"/><text x="684.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="685" y="260" width="4" height="15" fill="rgb(213,36,5)"/><text x="688.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.57%)</title><rect x="674" y="212" width="18" height="15" fill="rgb(217,168,49)"/><text x="677.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.26%)</title><rect x="677" y="228" width="15" height="15" fill="rgb(251,229,38)"/><text x="680.00" y="238.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.31%)</title><rect x="689" y="244" width="3" height="15" fill="rgb(254,73,23)"/><text x="692.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.83%)</title><rect x="663" y="196" width="33" height="15" fill="rgb(249,96,17)"/><text x="666.00" y="206.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="692" y="212" width="4" height="15" fill="rgb(248,24,53)"/><text x="695.00" y="222.50"></text></g><g><title>0x7f30a8c03c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="692" y="228" width="4" height="15" fill="rgb(244,144,10)"/><text x="695.00" y="238.50"></text></g><g><title>array_add (number.c) (12 samples, 3.77%)</title><rect x="655" y="164" width="45" height="15" fill="rgb(232,57,13)"/><text x="658.00" y="174.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.14%)</title><rect x="663" y="180" width="37" height="15" fill="rgb(238,134,19)"/><text x="666.00" y="190.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.31%)</title><rect x="696" y="196" width="4" height="15" fill="rgb(226,190,38)"/><text x="699.00" y="206.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.31%)</title><rect x="700" y="164" width="3" height="15" fill="rgb(211,205,5)"/><text x="703.00" y="174.50"></text></g><g><title>0x7f30a9ac0cfe (libc-2.29.so) (1 samples, 0.31%)</title><rect x="752" y="180" width="3" height="15" fill="rgb(223,120,30)"/><text x="755.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 1.57%)</title><rect x="755" y="180" width="19" height="15" fill="rgb(207,197,29)"/><text x="758.00" y="190.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.31%)</title><rect x="774" y="180" width="4" height="15" fill="rgb(226,19,23)"/><text x="777.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.94%)</title><rect x="778" y="180" width="11" height="15" fill="rgb(218,182,45)"/><text x="781.00" y="190.50"></text></g><g><title>0x7f30a9ac0151 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="811" y="196" width="4" height="15" fill="rgb(242,221,40)"/><text x="814.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.26%)</title><rect x="815" y="196" width="15" height="15" fill="rgb(216,121,8)"/><text x="818.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="830" y="196" width="3" height="15" fill="rgb(207,125,53)"/><text x="833.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (13 samples, 4.09%)</title><rect x="789" y="180" width="48" height="15" fill="rgb(245,150,54)"/><text x="792.00" y="190.50">_ass..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="833" y="196" width="4" height="15" fill="rgb(218,59,25)"/><text x="836.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.63%)</title><rect x="837" y="180" width="7" height="15" fill="rgb(207,125,44)"/><text x="840.00" y="190.50"></text></g><g><title>0x7f30a99f8e7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="878" y="196" width="4" height="15" fill="rgb(212,88,21)"/><text x="881.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 4.40%)</title><rect x="844" y="180" width="52" height="15" fill="rgb(246,202,52)"/><text x="847.00" y="190.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.26%)</title><rect x="882" y="196" width="14" height="15" fill="rgb(247,56,5)"/><text x="885.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.94%)</title><rect x="885" y="212" width="11" height="15" fill="rgb(240,150,29)"/><text x="888.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.94%)</title><rect x="896" y="180" width="11" height="15" fill="rgb(214,132,23)"/><text x="899.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="904" y="196" width="3" height="15" fill="rgb(224,131,38)"/><text x="907.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.94%)</title><rect x="911" y="196" width="11" height="15" fill="rgb(253,67,49)"/><text x="914.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (8 samples, 2.52%)</title><rect x="907" y="180" width="30" height="15" fill="rgb(208,190,4)"/><text x="910.00" y="190.50">is..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 1.26%)</title><rect x="922" y="196" width="15" height="15" fill="rgb(249,181,4)"/><text x="925.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (77 samples, 24.21%)</title><rect x="703" y="164" width="286" height="15" fill="rgb(218,130,39)"/><text x="706.00" y="174.50">check_array (sklearn/utils/validation...</text></g><g><title>simplefilter (warnings.py) (14 samples, 4.40%)</title><rect x="937" y="180" width="52" height="15" fill="rgb(231,45,10)"/><text x="940.00" y="190.50">simpl..</text></g><g><title>_add_filter (warnings.py) (13 samples, 4.09%)</title><rect x="941" y="196" width="48" height="15" fill="rgb(253,122,50)"/><text x="944.00" y="206.50">_add..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.26%)</title><rect x="1037" y="196" width="15" height="15" fill="rgb(238,56,9)"/><text x="1040.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (22 samples, 6.92%)</title><rect x="989" y="164" width="82" height="15" fill="rgb(238,164,16)"/><text x="992.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 4.09%)</title><rect x="1023" y="180" width="48" height="15" fill="rgb(210,185,23)"/><text x="1026.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.57%)</title><rect x="1052" y="196" width="19" height="15" fill="rgb(233,119,34)"/><text x="1055.00" y="206.50"></text></g><g><title>array_matrix_multiply (number.c) (1 samples, 0.31%)</title><rect x="1089" y="180" width="4" height="15" fill="rgb(253,185,29)"/><text x="1092.00" y="190.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.31%)</title><rect x="1089" y="196" width="4" height="15" fill="rgb(250,47,30)"/><text x="1092.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (5 samples, 1.57%)</title><rect x="1093" y="180" width="19" height="15" fill="rgb(245,146,48)"/><text x="1096.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="1112" y="196" width="3" height="15" fill="rgb(253,172,20)"/><text x="1115.00" y="206.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="1126" y="292" width="4" height="15" fill="rgb(232,16,33)"/><text x="1129.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.63%)</title><rect x="1130" y="292" width="8" height="15" fill="rgb(217,79,6)"/><text x="1133.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (2 samples, 0.63%)</title><rect x="1130" y="308" width="8" height="15" fill="rgb(208,9,14)"/><text x="1133.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1138" y="292" width="3" height="15" fill="rgb(253,180,53)"/><text x="1141.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1141" y="292" width="4" height="15" fill="rgb(235,225,29)"/><text x="1144.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 2.20%)</title><rect x="1123" y="260" width="26" height="15" fill="rgb(242,129,46)"/><text x="1126.00" y="270.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 2.20%)</title><rect x="1123" y="276" width="26" height="15" fill="rgb(254,165,35)"/><text x="1126.00" y="286.50">r..</text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.31%)</title><rect x="1145" y="292" width="4" height="15" fill="rgb(243,129,14)"/><text x="1148.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (9 samples, 2.83%)</title><rect x="1123" y="244" width="33" height="15" fill="rgb(206,122,46)"/><text x="1126.00" y="254.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.63%)</title><rect x="1149" y="260" width="7" height="15" fill="rgb(232,50,44)"/><text x="1152.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1156" y="244" width="4" height="15" fill="rgb(235,228,4)"/><text x="1159.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(233,201,5)"/><text x="1159.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (12 samples, 3.77%)</title><rect x="1119" y="228" width="45" height="15" fill="rgb(224,27,25)"/><text x="1122.00" y="238.50">NpyI..</text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1160" y="244" width="4" height="15" fill="rgb(222,27,47)"/><text x="1163.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 0.94%)</title><rect x="1164" y="228" width="11" height="15" fill="rgb(224,78,24)"/><text x="1167.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.94%)</title><rect x="1164" y="244" width="11" height="15" fill="rgb(253,94,1)"/><text x="1167.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.63%)</title><rect x="1167" y="260" width="8" height="15" fill="rgb(209,174,40)"/><text x="1170.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.63%)</title><rect x="1167" y="276" width="8" height="15" fill="rgb(247,56,53)"/><text x="1170.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.94%)</title><rect x="1175" y="228" width="11" height="15" fill="rgb(246,156,46)"/><text x="1178.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.63%)</title><rect x="1178" y="244" width="8" height="15" fill="rgb(242,1,26)"/><text x="1181.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(207,201,45)"/><text x="1185.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(247,93,42)"/><text x="1185.00" y="286.50"></text></g><g><title>all (318 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,163,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (318 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(222,156,9)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (161 samples, 50.63%)</title><rect x="592" y="68" width="598" height="15" fill="rgb(249,69,43)"/><text x="595.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (161 samples, 50.63%)</title><rect x="592" y="84" width="598" height="15" fill="rgb(222,227,26)"/><text x="595.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (161 samples, 50.63%)</title><rect x="592" y="100" width="598" height="15" fill="rgb(209,71,43)"/><text x="595.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (159 samples, 50.00%)</title><rect x="600" y="116" width="590" height="15" fill="rgb(229,220,7)"/><text x="603.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (159 samples, 50.00%)</title><rect x="600" y="132" width="590" height="15" fill="rgb(234,168,49)"/><text x="603.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (158 samples, 49.69%)</title><rect x="603" y="148" width="587" height="15" fill="rgb(241,62,39)"/><text x="606.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (32 samples, 10.06%)</title><rect x="1071" y="164" width="119" height="15" fill="rgb(240,94,22)"/><text x="1074.00" y="174.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 6.60%)</title><rect x="1112" y="180" width="78" height="15" fill="rgb(239,46,16)"/><text x="1115.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 6.29%)</title><rect x="1115" y="196" width="75" height="15" fill="rgb(254,111,51)"/><text x="1118.00" y="206.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (20 samples, 6.29%)</title><rect x="1115" y="212" width="75" height="15" fill="rgb(226,37,3)"/><text x="1118.00" y="222.50">PyUFunc_..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(239,68,53)"/><text x="1189.00" y="238.50"></text></g></g></svg>