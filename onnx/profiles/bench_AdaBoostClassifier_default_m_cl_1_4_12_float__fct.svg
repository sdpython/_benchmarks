<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="10" y="836" width="2" height="15" fill="rgb(225,210,5)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(206,206,40)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(215,136,18)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(205,180,35)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(217,211,49)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(254,52,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(248,38,50)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(246,219,45)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(242,210,33)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(210,122,8)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(237,149,3)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.40%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(206,224,22)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(249,164,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(210,33,52)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(222,166,45)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(229,146,17)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(243,102,6)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.40%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(235,123,51)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(224,45,7)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(244,52,53)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(225,144,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(220,34,11)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(239,170,40)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.40%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(223,35,37)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(247,178,34)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(238,78,28)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(231,103,11)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(248,161,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(247,59,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(216,122,36)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(240,5,43)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(208,113,27)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.40%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(225,86,44)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(212,111,43)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(251,43,11)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(208,143,8)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(241,48,14)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(227,143,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.40%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(207,202,6)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="12" y="836" width="2" height="15" fill="rgb(230,116,29)"/><text x="15.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(218,41,45)"/><text x="15.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(249,76,22)"/><text x="15.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(237,193,4)"/><text x="15.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(222,25,48)"/><text x="15.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(241,0,38)"/><text x="15.00" y="926.50"></text></g><g><title>compile (re.py) (1 samples, 0.20%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(243,102,21)"/><text x="15.00" y="942.50"></text></g><g><title>_compile (re.py) (1 samples, 0.20%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(238,143,28)"/><text x="15.00" y="958.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.20%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(207,163,11)"/><text x="15.00" y="974.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(234,225,21)"/><text x="15.00" y="990.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(240,216,51)"/><text x="15.00" y="1006.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(228,143,35)"/><text x="15.00" y="1022.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(210,224,46)"/><text x="15.00" y="1038.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(237,45,43)"/><text x="15.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="916" width="3" height="15" fill="rgb(245,189,1)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="932" width="3" height="15" fill="rgb(248,7,42)"/><text x="17.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="948" width="3" height="15" fill="rgb(247,124,2)"/><text x="17.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="964" width="3" height="15" fill="rgb(211,81,52)"/><text x="17.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="980" width="3" height="15" fill="rgb(241,180,22)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.20%)</title><rect x="14" y="996" width="3" height="15" fill="rgb(211,176,7)"/><text x="17.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1012" width="3" height="15" fill="rgb(252,110,16)"/><text x="17.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1028" width="3" height="15" fill="rgb(238,222,46)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1044" width="3" height="15" fill="rgb(227,194,35)"/><text x="17.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1060" width="3" height="15" fill="rgb(230,103,40)"/><text x="17.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1076" width="3" height="15" fill="rgb(227,59,25)"/><text x="17.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="1092" width="3" height="15" fill="rgb(232,225,50)"/><text x="17.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1108" width="3" height="15" fill="rgb(252,45,34)"/><text x="17.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.20%)</title><rect x="14" y="1124" width="3" height="15" fill="rgb(210,47,39)"/><text x="17.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1140" width="3" height="15" fill="rgb(250,3,32)"/><text x="17.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1156" width="3" height="15" fill="rgb(238,51,25)"/><text x="17.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1172" width="3" height="15" fill="rgb(221,158,6)"/><text x="17.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="1188" width="3" height="15" fill="rgb(250,15,38)"/><text x="17.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1204" width="3" height="15" fill="rgb(235,109,0)"/><text x="17.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py) (1 samples, 0.20%)</title><rect x="14" y="1220" width="3" height="15" fill="rgb(248,31,13)"/><text x="17.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1236" width="3" height="15" fill="rgb(245,213,3)"/><text x="17.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1252" width="3" height="15" fill="rgb(213,208,30)"/><text x="17.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1268" width="3" height="15" fill="rgb(235,134,19)"/><text x="17.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="1284" width="3" height="15" fill="rgb(241,124,30)"/><text x="17.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1300" width="3" height="15" fill="rgb(216,229,16)"/><text x="17.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog_rs.py) (1 samples, 0.20%)</title><rect x="14" y="1316" width="3" height="15" fill="rgb(254,159,3)"/><text x="17.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1332" width="3" height="15" fill="rgb(206,217,34)"/><text x="17.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1348" width="3" height="15" fill="rgb(207,220,41)"/><text x="17.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1364" width="3" height="15" fill="rgb(244,17,3)"/><text x="17.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="1380" width="3" height="15" fill="rgb(208,142,17)"/><text x="17.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="14" y="1396" width="3" height="15" fill="rgb(254,116,24)"/><text x="17.00" y="1406.50"></text></g><g><title>0x7efd6a9de288 (?) (1 samples, 0.20%)</title><rect x="14" y="1412" width="3" height="15" fill="rgb(233,103,14)"/><text x="17.00" y="1422.50"></text></g><g><title>0x7efd6a9dd170 (?) (1 samples, 0.20%)</title><rect x="14" y="1428" width="3" height="15" fill="rgb(222,83,7)"/><text x="17.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.80%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(226,36,52)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.80%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(223,156,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.80%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(228,105,23)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.80%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(248,10,15)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.80%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(225,210,12)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.80%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(247,158,32)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.40%)</title><rect x="14" y="292" width="5" height="15" fill="rgb(254,35,19)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="308" width="5" height="15" fill="rgb(230,9,16)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="324" width="5" height="15" fill="rgb(253,10,39)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="340" width="5" height="15" fill="rgb(208,219,9)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="356" width="5" height="15" fill="rgb(238,106,52)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="372" width="5" height="15" fill="rgb(248,212,42)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.40%)</title><rect x="14" y="388" width="5" height="15" fill="rgb(230,117,9)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="404" width="5" height="15" fill="rgb(229,7,49)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="420" width="5" height="15" fill="rgb(213,190,34)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="436" width="5" height="15" fill="rgb(232,57,31)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="452" width="5" height="15" fill="rgb(215,35,28)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="468" width="5" height="15" fill="rgb(217,131,49)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.40%)</title><rect x="14" y="484" width="5" height="15" fill="rgb(220,151,20)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="500" width="5" height="15" fill="rgb(207,196,3)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="516" width="5" height="15" fill="rgb(226,143,34)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="532" width="5" height="15" fill="rgb(234,85,33)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="548" width="5" height="15" fill="rgb(231,58,29)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="564" width="5" height="15" fill="rgb(236,217,5)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.40%)</title><rect x="14" y="580" width="5" height="15" fill="rgb(232,202,48)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="596" width="5" height="15" fill="rgb(237,36,33)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="612" width="5" height="15" fill="rgb(249,132,23)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="628" width="5" height="15" fill="rgb(205,208,5)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="644" width="5" height="15" fill="rgb(250,148,40)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="660" width="5" height="15" fill="rgb(242,140,13)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.40%)</title><rect x="14" y="676" width="5" height="15" fill="rgb(245,40,45)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="692" width="5" height="15" fill="rgb(233,200,7)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="708" width="5" height="15" fill="rgb(246,216,41)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="724" width="5" height="15" fill="rgb(215,172,8)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="740" width="5" height="15" fill="rgb(227,172,15)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="756" width="5" height="15" fill="rgb(233,13,24)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.40%)</title><rect x="14" y="772" width="5" height="15" fill="rgb(254,30,22)"/><text x="17.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="788" width="5" height="15" fill="rgb(238,61,53)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="804" width="5" height="15" fill="rgb(228,35,15)"/><text x="17.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="820" width="5" height="15" fill="rgb(235,79,16)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="836" width="5" height="15" fill="rgb(247,151,34)"/><text x="17.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="852" width="5" height="15" fill="rgb(252,108,28)"/><text x="17.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(206,75,43)"/><text x="17.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(251,26,30)"/><text x="17.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.40%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(234,59,43)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(243,86,45)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(227,188,27)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(220,101,34)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(210,78,26)"/><text x="20.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(241,122,11)"/><text x="20.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(246,106,22)"/><text x="20.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(252,121,30)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.20%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(219,34,34)"/><text x="20.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.20%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(230,23,29)"/><text x="20.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.20%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(230,34,11)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(223,142,14)"/><text x="22.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(248,209,0)"/><text x="22.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(233,183,48)"/><text x="22.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(250,97,28)"/><text x="22.00" y="1118.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(215,117,46)"/><text x="22.00" y="1134.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(254,132,1)"/><text x="22.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="484" width="5" height="15" fill="rgb(231,115,19)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="500" width="5" height="15" fill="rgb(227,191,44)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="516" width="5" height="15" fill="rgb(240,162,21)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(215,70,18)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(233,207,53)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(239,180,30)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.40%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(230,170,39)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(253,27,34)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(220,98,11)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(231,72,26)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(253,103,52)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(230,97,24)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.40%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(217,171,5)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(215,189,21)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(246,149,20)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(249,44,27)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(248,220,37)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(225,154,11)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.40%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(222,84,5)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(234,185,44)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(226,61,38)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(211,199,40)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(206,12,45)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(244,198,20)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.40%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(246,45,37)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(233,81,34)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(205,62,42)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(223,225,9)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(254,115,28)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(239,88,6)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(222,42,43)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(233,161,21)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(239,162,12)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(242,22,27)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(248,63,48)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(219,145,51)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(215,168,37)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(252,156,2)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(242,168,21)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.20%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(246,210,26)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(234,80,34)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(223,145,4)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(249,143,54)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="21" y="1172" width="3" height="15" fill="rgb(246,221,50)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1188" width="3" height="15" fill="rgb(249,31,42)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="21" y="1204" width="3" height="15" fill="rgb(253,30,19)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1220" width="3" height="15" fill="rgb(207,109,52)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1236" width="3" height="15" fill="rgb(211,123,32)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1252" width="3" height="15" fill="rgb(210,115,18)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="21" y="1268" width="3" height="15" fill="rgb(223,41,41)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="21" y="1284" width="3" height="15" fill="rgb(253,209,9)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="21" y="1300" width="3" height="15" fill="rgb(230,213,15)"/><text x="24.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="21" y="1316" width="3" height="15" fill="rgb(211,79,36)"/><text x="24.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.20%)</title><rect x="21" y="1332" width="3" height="15" fill="rgb(229,78,2)"/><text x="24.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.20%)</title><rect x="21" y="1348" width="3" height="15" fill="rgb(234,196,42)"/><text x="24.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.20%)</title><rect x="21" y="1364" width="3" height="15" fill="rgb(242,11,31)"/><text x="24.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.20%)</title><rect x="21" y="1380" width="3" height="15" fill="rgb(222,75,30)"/><text x="24.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.20%)</title><rect x="21" y="1396" width="3" height="15" fill="rgb(209,91,9)"/><text x="24.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="21" y="1412" width="3" height="15" fill="rgb(242,202,17)"/><text x="24.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.20%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(212,183,12)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(230,131,15)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(248,82,11)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(244,27,40)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(213,22,16)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(225,130,12)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.20%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(247,28,26)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(234,217,20)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(240,39,26)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(248,177,26)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(224,181,7)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(207,175,26)"/><text x="27.00" y="910.50"></text></g><g><title>0x7efd6228240e (?) (1 samples, 0.20%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(231,65,45)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(227,75,37)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(220,141,19)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(221,222,13)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(231,55,50)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(254,54,11)"/><text x="27.00" y="1006.50"></text></g><g><title>0x7efd6203bcd2 (?) (1 samples, 0.20%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(230,171,51)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(236,136,51)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(237,149,37)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(207,170,32)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(216,42,23)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(254,133,23)"/><text x="27.00" y="1102.50"></text></g><g><title>0x7efd617310e5 (?) (1 samples, 0.20%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(236,184,31)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(215,142,28)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(254,92,30)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(231,71,41)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(235,213,47)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(226,83,48)"/><text x="27.00" y="1198.50"></text></g><g><title>0x7efd614b5e68 (?) (1 samples, 0.20%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(245,124,45)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(249,6,6)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(245,151,53)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(234,173,32)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(214,208,28)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(213,159,39)"/><text x="27.00" y="1294.50"></text></g><g><title>0x7efd612462fb (?) (1 samples, 0.20%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(215,27,45)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(235,195,17)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(207,5,53)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(234,171,49)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(221,40,52)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(245,6,47)"/><text x="27.00" y="1390.50"></text></g><g><title>0x7efd6102a153 (?) (1 samples, 0.20%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(246,118,41)"/><text x="27.00" y="1406.50"></text></g><g><title>0x7efd61028c13 (?) (1 samples, 0.20%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(217,61,42)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(209,104,2)"/><text x="27.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(206,145,14)"/><text x="27.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(237,223,7)"/><text x="27.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(243,132,30)"/><text x="27.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(210,113,15)"/><text x="27.00" y="1502.50"></text></g><g><title>0x7efd60dc5181 (?) (1 samples, 0.20%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(224,83,1)"/><text x="27.00" y="1518.50"></text></g><g><title>0x7efd60dc81c9 (?) (1 samples, 0.20%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(239,107,39)"/><text x="27.00" y="1534.50"></text></g><g><title>0x7efd60df4167 (?) (1 samples, 0.20%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(251,12,52)"/><text x="27.00" y="1550.50"></text></g><g><title>0x7efd60defb64 (?) (1 samples, 0.20%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(213,10,17)"/><text x="27.00" y="1566.50"></text></g><g><title>0x7efd60dd307b (?) (1 samples, 0.20%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(244,123,45)"/><text x="27.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.20%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(230,128,38)"/><text x="27.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.20%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(244,190,13)"/><text x="27.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.20%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(216,178,10)"/><text x="27.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.20%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(235,7,12)"/><text x="27.00" y="1646.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.20%)</title><rect x="24" y="1652" width="2" height="15" fill="rgb(240,206,37)"/><text x="27.00" y="1662.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.20%)</title><rect x="24" y="1668" width="2" height="15" fill="rgb(219,82,37)"/><text x="27.00" y="1678.50"></text></g><g><title>unicode_resize (python3.7) (1 samples, 0.20%)</title><rect x="24" y="1684" width="2" height="15" fill="rgb(221,55,8)"/><text x="27.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(242,10,49)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(233,68,49)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(209,170,42)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(249,57,24)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(219,173,38)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.20%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(235,158,1)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(251,2,22)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(241,124,13)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(206,93,10)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(251,69,9)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(206,63,4)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(211,2,39)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(231,174,25)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(243,172,32)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(213,172,20)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(210,209,19)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(240,183,14)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.20%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(233,54,21)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(234,39,5)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(231,118,52)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(238,124,18)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(253,176,29)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(222,187,9)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(216,229,29)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(218,114,25)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(226,226,25)"/><text x="29.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1444" width="2" height="15" fill="rgb(232,38,4)"/><text x="29.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1460" width="2" height="15" fill="rgb(220,112,43)"/><text x="29.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1476" width="2" height="15" fill="rgb(230,159,3)"/><text x="29.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.20%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(216,43,35)"/><text x="29.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(237,223,25)"/><text x="29.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(216,125,25)"/><text x="29.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(247,137,26)"/><text x="29.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(237,154,45)"/><text x="29.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(239,37,48)"/><text x="29.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.20%)</title><rect x="26" y="1588" width="2" height="15" fill="rgb(246,19,9)"/><text x="29.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(249,192,35)"/><text x="29.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1620" width="2" height="15" fill="rgb(237,205,42)"/><text x="29.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1636" width="2" height="15" fill="rgb(251,145,4)"/><text x="29.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1652" width="2" height="15" fill="rgb(247,30,10)"/><text x="29.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1668" width="2" height="15" fill="rgb(220,47,8)"/><text x="29.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.20%)</title><rect x="26" y="1684" width="2" height="15" fill="rgb(240,156,22)"/><text x="29.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1700" width="2" height="15" fill="rgb(215,137,53)"/><text x="29.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1716" width="2" height="15" fill="rgb(205,188,54)"/><text x="29.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1732" width="2" height="15" fill="rgb(232,88,33)"/><text x="29.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1748" width="2" height="15" fill="rgb(240,30,13)"/><text x="29.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1764" width="2" height="15" fill="rgb(217,122,37)"/><text x="29.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.20%)</title><rect x="26" y="1780" width="2" height="15" fill="rgb(251,21,32)"/><text x="29.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1796" width="2" height="15" fill="rgb(244,143,18)"/><text x="29.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1812" width="2" height="15" fill="rgb(251,118,51)"/><text x="29.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1828" width="2" height="15" fill="rgb(252,214,24)"/><text x="29.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="26" y="1844" width="2" height="15" fill="rgb(252,76,16)"/><text x="29.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="26" y="1860" width="2" height="15" fill="rgb(237,112,52)"/><text x="29.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.20%)</title><rect x="26" y="1876" width="2" height="15" fill="rgb(235,20,19)"/><text x="29.00" y="1886.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.00%)</title><rect x="19" y="340" width="12" height="15" fill="rgb(244,190,50)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="356" width="12" height="15" fill="rgb(228,216,27)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="372" width="12" height="15" fill="rgb(228,190,5)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="388" width="12" height="15" fill="rgb(210,175,18)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.00%)</title><rect x="19" y="404" width="12" height="15" fill="rgb(219,0,33)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="420" width="12" height="15" fill="rgb(242,36,15)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.00%)</title><rect x="19" y="436" width="12" height="15" fill="rgb(205,27,8)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="452" width="12" height="15" fill="rgb(251,133,24)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.00%)</title><rect x="19" y="468" width="12" height="15" fill="rgb(226,41,46)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="484" width="7" height="15" fill="rgb(242,23,10)"/><text x="27.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.60%)</title><rect x="24" y="500" width="7" height="15" fill="rgb(252,52,36)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="516" width="7" height="15" fill="rgb(249,89,11)"/><text x="27.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.60%)</title><rect x="24" y="532" width="7" height="15" fill="rgb(224,95,21)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="548" width="7" height="15" fill="rgb(219,188,44)"/><text x="27.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="564" width="7" height="15" fill="rgb(240,95,10)"/><text x="27.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="580" width="7" height="15" fill="rgb(213,142,28)"/><text x="27.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.60%)</title><rect x="24" y="596" width="7" height="15" fill="rgb(206,32,0)"/><text x="27.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="612" width="7" height="15" fill="rgb(245,12,1)"/><text x="27.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.60%)</title><rect x="24" y="628" width="7" height="15" fill="rgb(242,226,51)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="644" width="7" height="15" fill="rgb(220,141,28)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="660" width="7" height="15" fill="rgb(230,37,9)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="676" width="7" height="15" fill="rgb(225,141,5)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.60%)</title><rect x="24" y="692" width="7" height="15" fill="rgb(236,98,17)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.60%)</title><rect x="24" y="708" width="7" height="15" fill="rgb(208,95,31)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.40%)</title><rect x="26" y="724" width="5" height="15" fill="rgb(235,27,1)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="740" width="5" height="15" fill="rgb(239,151,52)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="756" width="5" height="15" fill="rgb(236,212,21)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="772" width="5" height="15" fill="rgb(217,96,53)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="26" y="788" width="5" height="15" fill="rgb(246,137,23)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="804" width="5" height="15" fill="rgb(213,217,52)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.40%)</title><rect x="26" y="820" width="5" height="15" fill="rgb(216,225,43)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="836" width="5" height="15" fill="rgb(212,149,44)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="852" width="5" height="15" fill="rgb(219,86,37)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="868" width="5" height="15" fill="rgb(241,205,39)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(219,107,28)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(219,21,19)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.40%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(221,70,23)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(206,162,22)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="948" width="5" height="15" fill="rgb(221,2,24)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(235,228,50)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(231,213,7)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(219,122,48)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.40%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(252,228,16)"/><text x="29.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(216,82,14)"/><text x="31.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(221,55,50)"/><text x="31.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(214,131,49)"/><text x="31.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.20%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(213,177,52)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(219,27,32)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.20%)</title><rect x="19" y="244" width="14" height="15" fill="rgb(210,122,40)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.20%)</title><rect x="19" y="260" width="14" height="15" fill="rgb(237,186,52)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.20%)</title><rect x="19" y="276" width="14" height="15" fill="rgb(250,13,17)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.20%)</title><rect x="19" y="292" width="14" height="15" fill="rgb(226,168,51)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.20%)</title><rect x="19" y="308" width="14" height="15" fill="rgb(214,87,19)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.20%)</title><rect x="19" y="324" width="14" height="15" fill="rgb(226,31,34)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.20%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(233,180,16)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(249,65,52)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(218,75,39)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(239,212,22)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(250,175,2)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(253,160,32)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(207,55,21)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(246,206,54)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(251,91,20)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.20%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(226,23,48)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(226,54,53)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(254,214,37)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(250,98,22)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(240,105,16)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(207,102,21)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.20%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(223,101,41)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(240,133,37)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(205,198,1)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(214,26,10)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(225,105,50)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(254,175,31)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.20%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(216,114,32)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(213,16,30)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(244,103,17)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(251,32,32)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(209,189,19)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(252,146,11)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.20%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(208,21,26)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(253,82,21)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(238,201,34)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(239,28,46)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(222,214,45)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(240,33,15)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(252,23,48)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(228,148,38)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.20%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(219,120,39)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(214,196,15)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(252,106,22)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(221,162,47)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(230,224,19)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(227,197,14)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.20%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(206,229,37)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(206,155,38)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(221,159,42)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(217,119,6)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(222,32,43)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(250,169,46)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.20%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(245,142,48)"/><text x="34.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(217,55,27)"/><text x="34.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(216,153,53)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(247,141,14)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(238,59,46)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(240,170,29)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(212,193,9)"/><text x="34.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(205,39,28)"/><text x="34.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(238,0,27)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="372" width="3" height="15" fill="rgb(250,10,10)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="388" width="3" height="15" fill="rgb(249,206,12)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="404" width="3" height="15" fill="rgb(225,138,48)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="420" width="3" height="15" fill="rgb(237,145,51)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="436" width="3" height="15" fill="rgb(218,50,36)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="452" width="3" height="15" fill="rgb(206,66,47)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="468" width="3" height="15" fill="rgb(230,158,27)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="484" width="3" height="15" fill="rgb(208,81,22)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_dtype_ctypes.py) (1 samples, 0.20%)</title><rect x="33" y="500" width="3" height="15" fill="rgb(212,37,20)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="516" width="3" height="15" fill="rgb(239,16,21)"/><text x="36.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="532" width="3" height="15" fill="rgb(230,164,4)"/><text x="36.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="548" width="3" height="15" fill="rgb(240,87,54)"/><text x="36.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="564" width="3" height="15" fill="rgb(250,211,5)"/><text x="36.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="580" width="3" height="15" fill="rgb(235,220,0)"/><text x="36.00" y="590.50"></text></g><g><title>&lt;module&gt; (ctypes/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="596" width="3" height="15" fill="rgb(237,105,31)"/><text x="36.00" y="606.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.40%)</title><rect x="33" y="244" width="5" height="15" fill="rgb(248,213,46)"/><text x="36.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="260" width="5" height="15" fill="rgb(205,62,46)"/><text x="36.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="276" width="5" height="15" fill="rgb(231,171,33)"/><text x="36.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="292" width="5" height="15" fill="rgb(254,201,10)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="308" width="5" height="15" fill="rgb(247,101,28)"/><text x="36.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="324" width="5" height="15" fill="rgb(245,226,41)"/><text x="36.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="33" y="340" width="5" height="15" fill="rgb(236,209,39)"/><text x="36.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="33" y="356" width="5" height="15" fill="rgb(221,89,51)"/><text x="36.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.20%)</title><rect x="36" y="372" width="2" height="15" fill="rgb(225,16,36)"/><text x="39.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="388" width="2" height="15" fill="rgb(227,68,15)"/><text x="39.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="404" width="2" height="15" fill="rgb(229,173,11)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="420" width="2" height="15" fill="rgb(238,78,54)"/><text x="39.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="436" width="2" height="15" fill="rgb(241,97,40)"/><text x="39.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="452" width="2" height="15" fill="rgb(218,22,6)"/><text x="39.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="36" y="468" width="2" height="15" fill="rgb(216,194,48)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="36" y="484" width="2" height="15" fill="rgb(218,1,27)"/><text x="39.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/extras.py) (1 samples, 0.20%)</title><rect x="36" y="500" width="2" height="15" fill="rgb(208,50,36)"/><text x="39.00" y="510.50"></text></g><g><title>__init__ (numpy/ma/extras.py) (1 samples, 0.20%)</title><rect x="36" y="516" width="2" height="15" fill="rgb(243,9,53)"/><text x="39.00" y="526.50"></text></g><g><title>getdoc (numpy/ma/extras.py) (1 samples, 0.20%)</title><rect x="36" y="532" width="2" height="15" fill="rgb(247,83,17)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="68" width="33" height="15" fill="rgb(228,84,23)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="84" width="33" height="15" fill="rgb(215,133,1)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="100" width="33" height="15" fill="rgb(231,18,35)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.81%)</title><rect x="10" y="116" width="33" height="15" fill="rgb(239,57,40)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="132" width="33" height="15" fill="rgb(233,121,31)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (14 samples, 2.81%)</title><rect x="10" y="148" width="33" height="15" fill="rgb(237,59,41)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="164" width="33" height="15" fill="rgb(237,139,19)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.81%)</title><rect x="10" y="180" width="33" height="15" fill="rgb(253,39,0)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.01%)</title><rect x="19" y="196" width="24" height="15" fill="rgb(206,162,46)"/><text x="22.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.01%)</title><rect x="19" y="212" width="24" height="15" fill="rgb(246,198,1)"/><text x="22.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.01%)</title><rect x="19" y="228" width="24" height="15" fill="rgb(239,18,42)"/><text x="22.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.40%)</title><rect x="38" y="244" width="5" height="15" fill="rgb(237,114,6)"/><text x="41.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="260" width="5" height="15" fill="rgb(222,67,41)"/><text x="41.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="276" width="5" height="15" fill="rgb(205,33,3)"/><text x="41.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="292" width="5" height="15" fill="rgb(230,216,40)"/><text x="41.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="38" y="308" width="5" height="15" fill="rgb(222,173,24)"/><text x="41.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="324" width="5" height="15" fill="rgb(212,82,12)"/><text x="41.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.40%)</title><rect x="38" y="340" width="5" height="15" fill="rgb(207,155,49)"/><text x="41.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="356" width="5" height="15" fill="rgb(234,66,11)"/><text x="41.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="372" width="5" height="15" fill="rgb(215,201,23)"/><text x="41.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="388" width="5" height="15" fill="rgb(232,133,51)"/><text x="41.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="38" y="404" width="5" height="15" fill="rgb(207,133,4)"/><text x="41.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="420" width="5" height="15" fill="rgb(207,127,21)"/><text x="41.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (2 samples, 0.40%)</title><rect x="38" y="436" width="5" height="15" fill="rgb(209,61,19)"/><text x="41.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="452" width="5" height="15" fill="rgb(233,39,28)"/><text x="41.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="468" width="5" height="15" fill="rgb(252,107,39)"/><text x="41.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="484" width="5" height="15" fill="rgb(206,9,21)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="38" y="500" width="5" height="15" fill="rgb(235,79,12)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="38" y="516" width="5" height="15" fill="rgb(252,34,32)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.20%)</title><rect x="40" y="532" width="3" height="15" fill="rgb(207,165,43)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="548" width="3" height="15" fill="rgb(242,31,40)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="564" width="3" height="15" fill="rgb(245,177,50)"/><text x="43.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="580" width="3" height="15" fill="rgb(245,221,41)"/><text x="43.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="596" width="3" height="15" fill="rgb(212,152,51)"/><text x="43.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="612" width="3" height="15" fill="rgb(228,92,3)"/><text x="43.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="628" width="3" height="15" fill="rgb(251,86,12)"/><text x="43.00" y="638.50"></text></g><g><title>0x7efd4ca0fff9 (?) (1 samples, 0.20%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(254,172,45)"/><text x="46.00" y="222.50"></text></g><g><title>0x7efd4ca0aef6 (?) (1 samples, 0.20%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(218,105,39)"/><text x="46.00" y="238.50"></text></g><g><title>0x7efd4c9ff962 (?) (1 samples, 0.20%)</title><rect x="43" y="244" width="2" height="15" fill="rgb(230,158,21)"/><text x="46.00" y="254.50"></text></g><g><title>0x7efd4ca337a7 (?) (1 samples, 0.20%)</title><rect x="43" y="260" width="2" height="15" fill="rgb(222,67,3)"/><text x="46.00" y="270.50"></text></g><g><title>0x7efd4ca33379 (?) (1 samples, 0.20%)</title><rect x="43" y="276" width="2" height="15" fill="rgb(254,60,44)"/><text x="46.00" y="286.50"></text></g><g><title>0x7efd4ce918b8 (?) (1 samples, 0.20%)</title><rect x="43" y="292" width="2" height="15" fill="rgb(225,101,31)"/><text x="46.00" y="302.50"></text></g><g><title>0x7efd4ce8fc7f (?) (1 samples, 0.20%)</title><rect x="43" y="308" width="2" height="15" fill="rgb(206,55,38)"/><text x="46.00" y="318.50"></text></g><g><title>0x7efd4cea299c (?) (1 samples, 0.20%)</title><rect x="43" y="324" width="2" height="15" fill="rgb(230,53,11)"/><text x="46.00" y="334.50"></text></g><g><title>0x7efd4cb1dac6 (?) (1 samples, 0.20%)</title><rect x="43" y="340" width="2" height="15" fill="rgb(209,26,28)"/><text x="46.00" y="350.50"></text></g><g><title>0x7efd4cb1da0a (?) (1 samples, 0.20%)</title><rect x="43" y="356" width="2" height="15" fill="rgb(247,142,15)"/><text x="46.00" y="366.50"></text></g><g><title>0x7efd4ce5e5e6 (?) (1 samples, 0.20%)</title><rect x="43" y="372" width="2" height="15" fill="rgb(227,47,38)"/><text x="46.00" y="382.50"></text></g><g><title>0x7efd4ce5e486 (?) (1 samples, 0.20%)</title><rect x="43" y="388" width="2" height="15" fill="rgb(230,59,5)"/><text x="46.00" y="398.50"></text></g><g><title>0x7efd4ce48c8d (?) (1 samples, 0.20%)</title><rect x="43" y="404" width="2" height="15" fill="rgb(215,157,28)"/><text x="46.00" y="414.50"></text></g><g><title>0x7efd4ce48202 (?) (1 samples, 0.20%)</title><rect x="43" y="420" width="2" height="15" fill="rgb(246,15,46)"/><text x="46.00" y="430.50"></text></g><g><title>0x7efd4ce47913 (?) (1 samples, 0.20%)</title><rect x="43" y="436" width="2" height="15" fill="rgb(208,112,42)"/><text x="46.00" y="446.50"></text></g><g><title>0x7efd4ce464b3 (?) (1 samples, 0.20%)</title><rect x="43" y="452" width="2" height="15" fill="rgb(227,24,35)"/><text x="46.00" y="462.50"></text></g><g><title>0x7efd4ce41620 (?) (1 samples, 0.20%)</title><rect x="43" y="468" width="2" height="15" fill="rgb(218,101,4)"/><text x="46.00" y="478.50"></text></g><g><title>0x7efd4ce8de26 (?) (1 samples, 0.20%)</title><rect x="43" y="484" width="2" height="15" fill="rgb(233,84,11)"/><text x="46.00" y="494.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="340" width="5" height="15" fill="rgb(205,59,33)"/><text x="50.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="356" width="5" height="15" fill="rgb(228,199,7)"/><text x="50.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="372" width="5" height="15" fill="rgb(249,27,11)"/><text x="50.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="388" width="5" height="15" fill="rgb(236,153,38)"/><text x="50.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="404" width="5" height="15" fill="rgb(206,26,28)"/><text x="50.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="420" width="5" height="15" fill="rgb(220,177,11)"/><text x="50.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="436" width="5" height="15" fill="rgb(246,111,35)"/><text x="50.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="47" y="452" width="5" height="15" fill="rgb(247,223,8)"/><text x="50.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="50" y="468" width="2" height="15" fill="rgb(242,137,25)"/><text x="53.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="50" y="484" width="2" height="15" fill="rgb(219,3,47)"/><text x="53.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="50" y="500" width="2" height="15" fill="rgb(210,124,27)"/><text x="53.00" y="510.50"></text></g><g><title>0x7efd8cd71d6f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="50" y="516" width="2" height="15" fill="rgb(228,95,18)"/><text x="53.00" y="526.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(243,127,7)"/><text x="55.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(239,50,30)"/><text x="55.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(206,44,30)"/><text x="55.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="372" width="4" height="15" fill="rgb(218,199,29)"/><text x="58.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="388" width="4" height="15" fill="rgb(236,130,50)"/><text x="58.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="404" width="4" height="15" fill="rgb(243,160,17)"/><text x="58.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="420" width="4" height="15" fill="rgb(232,29,7)"/><text x="58.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="436" width="4" height="15" fill="rgb(245,176,44)"/><text x="58.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="55" y="452" width="4" height="15" fill="rgb(251,157,16)"/><text x="58.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="57" y="468" width="2" height="15" fill="rgb(230,140,31)"/><text x="60.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="57" y="484" width="2" height="15" fill="rgb(245,169,24)"/><text x="60.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="57" y="500" width="2" height="15" fill="rgb(235,87,23)"/><text x="60.00" y="510.50"></text></g><g><title>onnxruntime::BroadcastIterator::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="59" y="404" width="3" height="15" fill="rgb(241,209,31)"/><text x="62.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.80%)</title><rect x="55" y="340" width="9" height="15" fill="rgb(228,96,6)"/><text x="58.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.80%)</title><rect x="55" y="356" width="9" height="15" fill="rgb(206,219,7)"/><text x="58.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="59" y="372" width="5" height="15" fill="rgb(219,30,34)"/><text x="62.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="59" y="388" width="5" height="15" fill="rgb(243,90,34)"/><text x="62.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="62" y="404" width="2" height="15" fill="rgb(208,171,37)"/><text x="65.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="62" y="420" width="2" height="15" fill="rgb(249,148,48)"/><text x="65.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="62" y="436" width="2" height="15" fill="rgb(237,17,51)"/><text x="65.00" y="446.50"></text></g><g><title>0x7efd8cd51d07 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="64" y="372" width="2" height="15" fill="rgb(218,150,54)"/><text x="67.00" y="382.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="64" y="340" width="5" height="15" fill="rgb(217,107,6)"/><text x="67.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="64" y="356" width="5" height="15" fill="rgb(227,5,49)"/><text x="67.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="372" width="3" height="15" fill="rgb(249,223,41)"/><text x="69.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="388" width="3" height="15" fill="rgb(230,221,9)"/><text x="69.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="404" width="3" height="15" fill="rgb(241,52,21)"/><text x="69.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="420" width="3" height="15" fill="rgb(234,52,18)"/><text x="69.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="436" width="3" height="15" fill="rgb(221,103,47)"/><text x="69.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="66" y="452" width="3" height="15" fill="rgb(238,24,38)"/><text x="69.00" y="462.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="69" y="340" width="2" height="15" fill="rgb(238,173,15)"/><text x="72.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="69" y="356" width="2" height="15" fill="rgb(241,85,19)"/><text x="72.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="69" y="372" width="2" height="15" fill="rgb(235,47,26)"/><text x="72.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="69" y="388" width="2" height="15" fill="rgb(252,137,18)"/><text x="72.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="69" y="404" width="2" height="15" fill="rgb(226,211,44)"/><text x="72.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="69" y="420" width="2" height="15" fill="rgb(219,212,40)"/><text x="72.00" y="430.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="71" y="340" width="2" height="15" fill="rgb(223,203,49)"/><text x="74.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="71" y="356" width="2" height="15" fill="rgb(233,178,46)"/><text x="74.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="71" y="372" width="2" height="15" fill="rgb(217,66,14)"/><text x="74.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (15 samples, 3.01%)</title><rect x="43" y="100" width="35" height="15" fill="rgb(246,32,38)"/><text x="46.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 3.01%)</title><rect x="43" y="116" width="35" height="15" fill="rgb(240,69,48)"/><text x="46.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 3.01%)</title><rect x="43" y="132" width="35" height="15" fill="rgb(244,38,24)"/><text x="46.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (15 samples, 3.01%)</title><rect x="43" y="148" width="35" height="15" fill="rgb(233,221,34)"/><text x="46.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (15 samples, 3.01%)</title><rect x="43" y="164" width="35" height="15" fill="rgb(244,150,19)"/><text x="46.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (15 samples, 3.01%)</title><rect x="43" y="180" width="35" height="15" fill="rgb(227,138,14)"/><text x="46.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py) (15 samples, 3.01%)</title><rect x="43" y="196" width="35" height="15" fill="rgb(211,13,12)"/><text x="46.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.81%)</title><rect x="45" y="212" width="33" height="15" fill="rgb(216,184,19)"/><text x="48.00" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.81%)</title><rect x="45" y="228" width="33" height="15" fill="rgb(240,104,37)"/><text x="48.00" y="238.50">vo..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.81%)</title><rect x="45" y="244" width="33" height="15" fill="rgb(210,0,51)"/><text x="48.00" y="254.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.81%)</title><rect x="45" y="260" width="33" height="15" fill="rgb(248,189,42)"/><text x="48.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.61%)</title><rect x="47" y="276" width="31" height="15" fill="rgb(216,95,48)"/><text x="50.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.61%)</title><rect x="47" y="292" width="31" height="15" fill="rgb(245,0,37)"/><text x="50.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.61%)</title><rect x="47" y="308" width="31" height="15" fill="rgb(231,64,0)"/><text x="50.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.61%)</title><rect x="47" y="324" width="31" height="15" fill="rgb(248,97,9)"/><text x="50.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="340" width="5" height="15" fill="rgb(212,51,13)"/><text x="76.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="356" width="5" height="15" fill="rgb(243,71,28)"/><text x="76.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="372" width="5" height="15" fill="rgb(227,10,16)"/><text x="76.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="388" width="5" height="15" fill="rgb(227,224,38)"/><text x="76.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="404" width="5" height="15" fill="rgb(249,115,50)"/><text x="76.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="420" width="5" height="15" fill="rgb(231,172,40)"/><text x="76.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="73" y="436" width="5" height="15" fill="rgb(252,124,14)"/><text x="76.00" y="446.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="78" y="132" width="3" height="15" fill="rgb(243,122,54)"/><text x="81.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="78" y="148" width="3" height="15" fill="rgb(210,85,37)"/><text x="81.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="78" y="164" width="3" height="15" fill="rgb(248,150,39)"/><text x="81.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="78" y="180" width="3" height="15" fill="rgb(250,96,52)"/><text x="81.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.20%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(225,0,48)"/><text x="81.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.20%)</title><rect x="78" y="212" width="3" height="15" fill="rgb(238,225,7)"/><text x="81.00" y="222.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="81" y="196" width="2" height="15" fill="rgb(235,67,48)"/><text x="84.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(224,41,39)"/><text x="84.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(253,11,0)"/><text x="84.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(217,155,32)"/><text x="84.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="81" y="260" width="2" height="15" fill="rgb(238,217,16)"/><text x="84.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="81" y="276" width="2" height="15" fill="rgb(232,62,27)"/><text x="84.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.20%)</title><rect x="81" y="292" width="2" height="15" fill="rgb(220,212,48)"/><text x="84.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.20%)</title><rect x="81" y="308" width="2" height="15" fill="rgb(229,89,20)"/><text x="84.00" y="318.50"></text></g><g><title>walk_stack (traceback.py) (1 samples, 0.20%)</title><rect x="81" y="324" width="2" height="15" fill="rgb(217,166,29)"/><text x="84.00" y="334.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (18 samples, 3.61%)</title><rect x="43" y="68" width="42" height="15" fill="rgb(209,78,36)"/><text x="46.00" y="78.50">pro..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (18 samples, 3.61%)</title><rect x="43" y="84" width="42" height="15" fill="rgb(224,185,15)"/><text x="46.00" y="94.50">set..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.60%)</title><rect x="78" y="100" width="7" height="15" fill="rgb(247,205,43)"/><text x="81.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.60%)</title><rect x="78" y="116" width="7" height="15" fill="rgb(214,90,8)"/><text x="81.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="81" y="132" width="4" height="15" fill="rgb(231,225,21)"/><text x="84.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.40%)</title><rect x="81" y="148" width="4" height="15" fill="rgb(237,75,54)"/><text x="84.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.40%)</title><rect x="81" y="164" width="4" height="15" fill="rgb(218,28,51)"/><text x="84.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.40%)</title><rect x="81" y="180" width="4" height="15" fill="rgb(221,46,13)"/><text x="84.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.20%)</title><rect x="83" y="196" width="2" height="15" fill="rgb(245,167,36)"/><text x="86.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="83" y="212" width="2" height="15" fill="rgb(251,224,34)"/><text x="86.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(243,46,49)"/><text x="86.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(243,80,43)"/><text x="86.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(218,159,29)"/><text x="86.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="83" y="276" width="2" height="15" fill="rgb(232,155,7)"/><text x="86.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 0.80%)</title><rect x="197" y="196" width="9" height="15" fill="rgb(208,163,48)"/><text x="200.00" y="206.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.20%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(219,111,18)"/><text x="233.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="230" y="260" width="2" height="15" fill="rgb(222,130,12)"/><text x="233.00" y="270.50"></text></g><g><title>0x7efd8cd53028 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(219,150,5)"/><text x="233.00" y="286.50"></text></g><g><title>0x7efd8cd50bc6 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(241,142,53)"/><text x="233.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.60%)</title><rect x="227" y="212" width="8" height="15" fill="rgb(214,139,22)"/><text x="230.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.40%)</title><rect x="230" y="228" width="5" height="15" fill="rgb(217,65,48)"/><text x="233.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="232" y="244" width="3" height="15" fill="rgb(217,141,28)"/><text x="235.00" y="254.50"></text></g><g><title>0x7efd8bf737c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="239" y="308" width="3" height="15" fill="rgb(243,21,50)"/><text x="242.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 1.00%)</title><rect x="235" y="212" width="11" height="15" fill="rgb(209,60,38)"/><text x="238.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.80%)</title><rect x="237" y="228" width="9" height="15" fill="rgb(223,203,40)"/><text x="240.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (4 samples, 0.80%)</title><rect x="237" y="244" width="9" height="15" fill="rgb(214,147,43)"/><text x="240.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (3 samples, 0.60%)</title><rect x="239" y="260" width="7" height="15" fill="rgb(233,52,3)"/><text x="242.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (3 samples, 0.60%)</title><rect x="239" y="276" width="7" height="15" fill="rgb(226,22,14)"/><text x="242.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.60%)</title><rect x="239" y="292" width="7" height="15" fill="rgb(223,133,1)"/><text x="242.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.40%)</title><rect x="242" y="308" width="4" height="15" fill="rgb(216,209,35)"/><text x="245.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.20%)</title><rect x="246" y="212" width="3" height="15" fill="rgb(223,185,6)"/><text x="249.00" y="222.50"></text></g><g><title>array_add (number.c) (1 samples, 0.20%)</title><rect x="246" y="228" width="3" height="15" fill="rgb(236,144,19)"/><text x="249.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="246" y="244" width="3" height="15" fill="rgb(246,117,38)"/><text x="249.00" y="254.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.20%)</title><rect x="246" y="260" width="3" height="15" fill="rgb(248,167,48)"/><text x="249.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.40%)</title><rect x="249" y="212" width="5" height="15" fill="rgb(250,61,9)"/><text x="252.00" y="222.50"></text></g><g><title>0x7efd8cd7214e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="275" y="244" width="2" height="15" fill="rgb(251,130,33)"/><text x="278.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.40%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(246,168,54)"/><text x="280.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.40%)</title><rect x="277" y="276" width="5" height="15" fill="rgb(242,88,32)"/><text x="280.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.40%)</title><rect x="277" y="292" width="5" height="15" fill="rgb(241,146,0)"/><text x="280.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="280" y="308" width="2" height="15" fill="rgb(212,206,26)"/><text x="283.00" y="318.50"></text></g><g><title>0x7efd8ce2f134 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="280" y="324" width="2" height="15" fill="rgb(230,219,48)"/><text x="283.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="284" y="276" width="3" height="15" fill="rgb(233,27,4)"/><text x="287.00" y="286.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="287" y="276" width="2" height="15" fill="rgb(232,20,3)"/><text x="290.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="287" y="292" width="2" height="15" fill="rgb(251,79,38)"/><text x="290.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="287" y="308" width="2" height="15" fill="rgb(231,42,36)"/><text x="290.00" y="318.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.20%)</title><rect x="287" y="324" width="2" height="15" fill="rgb(247,161,47)"/><text x="290.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.20%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(233,90,36)"/><text x="290.00" y="350.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.20%)</title><rect x="294" y="340" width="2" height="15" fill="rgb(215,45,19)"/><text x="297.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="294" y="356" width="2" height="15" fill="rgb(238,222,27)"/><text x="297.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="294" y="372" width="2" height="15" fill="rgb(207,13,26)"/><text x="297.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="294" y="388" width="2" height="15" fill="rgb(246,135,45)"/><text x="297.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="294" y="404" width="2" height="15" fill="rgb(219,117,23)"/><text x="297.00" y="414.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="294" y="420" width="2" height="15" fill="rgb(212,168,18)"/><text x="297.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.40%)</title><rect x="294" y="324" width="5" height="15" fill="rgb(214,54,46)"/><text x="297.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="296" y="340" width="3" height="15" fill="rgb(251,136,48)"/><text x="299.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.20%)</title><rect x="299" y="324" width="2" height="15" fill="rgb(240,45,53)"/><text x="302.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.00%)</title><rect x="291" y="308" width="12" height="15" fill="rgb(251,187,3)"/><text x="294.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="301" y="324" width="2" height="15" fill="rgb(251,128,14)"/><text x="304.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="303" y="308" width="3" height="15" fill="rgb(253,73,45)"/><text x="306.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="303" y="324" width="3" height="15" fill="rgb(246,197,41)"/><text x="306.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="303" y="340" width="3" height="15" fill="rgb(231,52,7)"/><text x="306.00" y="350.50"></text></g><g><title>0x7efd8cd53700 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(240,213,3)"/><text x="306.00" y="366.50"></text></g><g><title>0x7efd8cd50acd (libc-2.29.so) (1 samples, 0.20%)</title><rect x="303" y="372" width="3" height="15" fill="rgb(250,12,19)"/><text x="306.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.61%)</title><rect x="289" y="276" width="19" height="15" fill="rgb(223,41,7)"/><text x="292.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.41%)</title><rect x="291" y="292" width="17" height="15" fill="rgb(241,29,41)"/><text x="294.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.20%)</title><rect x="306" y="308" width="2" height="15" fill="rgb(205,157,14)"/><text x="309.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 4.02%)</title><rect x="263" y="228" width="47" height="15" fill="rgb(207,177,11)"/><text x="266.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.81%)</title><rect x="277" y="244" width="33" height="15" fill="rgb(241,77,52)"/><text x="280.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.41%)</title><rect x="282" y="260" width="28" height="15" fill="rgb(228,201,34)"/><text x="285.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="308" y="276" width="2" height="15" fill="rgb(221,116,13)"/><text x="311.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.20%)</title><rect x="308" y="292" width="2" height="15" fill="rgb(228,186,38)"/><text x="311.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.20%)</title><rect x="310" y="228" width="3" height="15" fill="rgb(248,225,51)"/><text x="313.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.20%)</title><rect x="310" y="244" width="3" height="15" fill="rgb(206,66,4)"/><text x="313.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(249,54,32)"/><text x="321.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(213,145,13)"/><text x="321.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(226,54,13)"/><text x="321.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="318" y="308" width="2" height="15" fill="rgb(223,18,47)"/><text x="321.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.20%)</title><rect x="320" y="292" width="2" height="15" fill="rgb(229,169,0)"/><text x="323.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.20%)</title><rect x="320" y="308" width="2" height="15" fill="rgb(247,172,5)"/><text x="323.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.20%)</title><rect x="320" y="324" width="2" height="15" fill="rgb(206,82,23)"/><text x="323.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="320" y="340" width="2" height="15" fill="rgb(249,146,29)"/><text x="323.00" y="350.50"></text></g><g><title>0x7efd8cd097c2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(232,0,24)"/><text x="323.00" y="366.50"></text></g><g><title>0x7efd8cd09780 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="320" y="372" width="2" height="15" fill="rgb(229,221,10)"/><text x="323.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.40%)</title><rect x="320" y="276" width="5" height="15" fill="rgb(233,117,0)"/><text x="323.00" y="286.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.20%)</title><rect x="322" y="292" width="3" height="15" fill="rgb(205,15,13)"/><text x="325.00" y="302.50"></text></g><g><title>0x7efd8bf74c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="325" y="292" width="2" height="15" fill="rgb(231,107,13)"/><text x="328.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (7 samples, 1.41%)</title><rect x="313" y="228" width="16" height="15" fill="rgb(215,137,38)"/><text x="316.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.00%)</title><rect x="318" y="244" width="11" height="15" fill="rgb(250,193,41)"/><text x="321.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.80%)</title><rect x="320" y="260" width="9" height="15" fill="rgb(230,132,7)"/><text x="323.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.40%)</title><rect x="325" y="276" width="4" height="15" fill="rgb(236,23,1)"/><text x="328.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="327" y="292" width="2" height="15" fill="rgb(253,71,36)"/><text x="330.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (3 samples, 0.60%)</title><rect x="344" y="308" width="7" height="15" fill="rgb(213,18,30)"/><text x="347.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.40%)</title><rect x="351" y="356" width="4" height="15" fill="rgb(239,136,12)"/><text x="354.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.40%)</title><rect x="351" y="372" width="4" height="15" fill="rgb(221,139,32)"/><text x="354.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.40%)</title><rect x="351" y="388" width="4" height="15" fill="rgb(217,134,30)"/><text x="354.00" y="398.50"></text></g><g><title>0x7efd8cd67e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="353" y="404" width="2" height="15" fill="rgb(205,196,49)"/><text x="356.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.80%)</title><rect x="351" y="324" width="9" height="15" fill="rgb(234,166,30)"/><text x="354.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.80%)</title><rect x="351" y="340" width="9" height="15" fill="rgb(236,117,46)"/><text x="354.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.40%)</title><rect x="355" y="356" width="5" height="15" fill="rgb(248,118,46)"/><text x="358.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="363" y="388" width="2" height="15" fill="rgb(212,200,33)"/><text x="366.00" y="398.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.20%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(235,90,42)"/><text x="368.00" y="398.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="365" y="404" width="2" height="15" fill="rgb(238,81,3)"/><text x="368.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.60%)</title><rect x="363" y="356" width="7" height="15" fill="rgb(228,30,14)"/><text x="366.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.60%)</title><rect x="363" y="372" width="7" height="15" fill="rgb(210,87,17)"/><text x="366.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="367" y="388" width="3" height="15" fill="rgb(211,148,41)"/><text x="370.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.20%)</title><rect x="367" y="404" width="3" height="15" fill="rgb(218,14,40)"/><text x="370.00" y="414.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="367" y="420" width="3" height="15" fill="rgb(212,166,3)"/><text x="370.00" y="430.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.20%)</title><rect x="370" y="356" width="2" height="15" fill="rgb(252,123,27)"/><text x="373.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (19 samples, 3.82%)</title><rect x="329" y="228" width="45" height="15" fill="rgb(254,119,5)"/><text x="332.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (19 samples, 3.82%)</title><rect x="329" y="244" width="45" height="15" fill="rgb(209,217,12)"/><text x="332.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (19 samples, 3.82%)</title><rect x="329" y="260" width="45" height="15" fill="rgb(244,215,4)"/><text x="332.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (16 samples, 3.21%)</title><rect x="336" y="276" width="38" height="15" fill="rgb(213,20,52)"/><text x="339.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (14 samples, 2.81%)</title><rect x="341" y="292" width="33" height="15" fill="rgb(248,24,5)"/><text x="344.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.01%)</title><rect x="351" y="308" width="23" height="15" fill="rgb(253,30,16)"/><text x="354.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.20%)</title><rect x="360" y="324" width="14" height="15" fill="rgb(235,113,41)"/><text x="363.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.00%)</title><rect x="363" y="340" width="11" height="15" fill="rgb(209,7,16)"/><text x="366.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="372" y="356" width="2" height="15" fill="rgb(209,126,52)"/><text x="375.00" y="366.50"></text></g><g><title>0x7efd4d8af422 (?) (1 samples, 0.20%)</title><rect x="374" y="244" width="3" height="15" fill="rgb(236,53,22)"/><text x="377.00" y="254.50"></text></g><g><title>0x7efd4d8b589e (?) (1 samples, 0.20%)</title><rect x="374" y="260" width="3" height="15" fill="rgb(243,72,49)"/><text x="377.00" y="270.50"></text></g><g><title>0x7efd4d8b574f (?) (1 samples, 0.20%)</title><rect x="374" y="276" width="3" height="15" fill="rgb(250,17,19)"/><text x="377.00" y="286.50"></text></g><g><title>0x7efd4d8bba3a (?) (1 samples, 0.20%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(237,174,45)"/><text x="377.00" y="302.50"></text></g><g><title>0x7efd56d17ab9 (?) (1 samples, 0.20%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(208,85,0)"/><text x="377.00" y="318.50"></text></g><g><title>0x7efd56d18ee1 (?) (1 samples, 0.20%)</title><rect x="374" y="324" width="3" height="15" fill="rgb(252,198,45)"/><text x="377.00" y="334.50"></text></g><g><title>0x7efd56d18ea0 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="377" y="468" width="2" height="15" fill="rgb(245,152,48)"/><text x="380.00" y="478.50"></text></g><g><title>0x7efd56d18ea9 (libgomp.so.1.0.0) (6 samples, 1.20%)</title><rect x="379" y="468" width="14" height="15" fill="rgb(226,53,19)"/><text x="382.00" y="478.50"></text></g><g><title>0x7efd56d18eab (libgomp.so.1.0.0) (6 samples, 1.20%)</title><rect x="393" y="468" width="15" height="15" fill="rgb(207,108,10)"/><text x="396.00" y="478.50"></text></g><g><title>0x7efd56d17ab9 (libgomp.so.1.0.0) (21 samples, 4.22%)</title><rect x="377" y="452" width="50" height="15" fill="rgb(249,78,47)"/><text x="380.00" y="462.50">0x7ef..</text></g><g><title>0x7efd56d18ead (libgomp.so.1.0.0) (8 samples, 1.61%)</title><rect x="408" y="468" width="19" height="15" fill="rgb(220,147,41)"/><text x="411.00" y="478.50"></text></g><g><title>0x7efd56d18cfb (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="427" y="484" width="2" height="15" fill="rgb(208,191,45)"/><text x="430.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (24 samples, 4.82%)</title><rect x="374" y="228" width="57" height="15" fill="rgb(232,88,38)"/><text x="377.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (23 samples, 4.62%)</title><rect x="377" y="244" width="54" height="15" fill="rgb(205,217,42)"/><text x="380.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (23 samples, 4.62%)</title><rect x="377" y="260" width="54" height="15" fill="rgb(254,156,28)"/><text x="380.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (23 samples, 4.62%)</title><rect x="377" y="276" width="54" height="15" fill="rgb(206,140,43)"/><text x="380.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (23 samples, 4.62%)</title><rect x="377" y="292" width="54" height="15" fill="rgb(214,108,49)"/><text x="380.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (23 samples, 4.62%)</title><rect x="377" y="308" width="54" height="15" fill="rgb(225,91,49)"/><text x="380.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (23 samples, 4.62%)</title><rect x="377" y="324" width="54" height="15" fill="rgb(228,140,1)"/><text x="380.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (23 samples, 4.62%)</title><rect x="377" y="340" width="54" height="15" fill="rgb(219,98,2)"/><text x="380.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h) (23 samples, 4.62%)</title><rect x="377" y="356" width="54" height="15" fill="rgb(207,64,49)"/><text x="380.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (23 samples, 4.62%)</title><rect x="377" y="372" width="54" height="15" fill="rgb(249,161,20)"/><text x="380.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h) (23 samples, 4.62%)</title><rect x="377" y="388" width="54" height="15" fill="rgb(237,24,28)"/><text x="380.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (23 samples, 4.62%)</title><rect x="377" y="404" width="54" height="15" fill="rgb(248,207,3)"/><text x="380.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (23 samples, 4.62%)</title><rect x="377" y="420" width="54" height="15" fill="rgb(229,8,47)"/><text x="380.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (23 samples, 4.62%)</title><rect x="377" y="436" width="54" height="15" fill="rgb(242,74,45)"/><text x="380.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="427" y="452" width="4" height="15" fill="rgb(208,185,37)"/><text x="430.00" y="462.50"></text></g><g><title>0x7efd56d16daa (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="427" y="468" width="4" height="15" fill="rgb(216,194,20)"/><text x="430.00" y="478.50"></text></g><g><title>0x7efd56d18cfd (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="429" y="484" width="2" height="15" fill="rgb(247,89,11)"/><text x="432.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (96 samples, 19.28%)</title><rect x="206" y="196" width="228" height="15" fill="rgb(224,195,31)"/><text x="209.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (76 samples, 15.26%)</title><rect x="254" y="212" width="180" height="15" fill="rgb(211,198,30)"/><text x="257.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.20%)</title><rect x="431" y="228" width="3" height="15" fill="rgb(248,160,9)"/><text x="434.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="441" y="228" width="2" height="15" fill="rgb(226,68,30)"/><text x="444.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(219,115,49)"/><text x="444.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="441" y="260" width="2" height="15" fill="rgb(205,0,6)"/><text x="444.00" y="270.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.20%)</title><rect x="441" y="276" width="2" height="15" fill="rgb(211,59,2)"/><text x="444.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="441" y="292" width="2" height="15" fill="rgb(215,1,48)"/><text x="444.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="441" y="308" width="2" height="15" fill="rgb(227,2,29)"/><text x="444.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="441" y="324" width="2" height="15" fill="rgb(220,44,29)"/><text x="444.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="441" y="340" width="2" height="15" fill="rgb(208,87,14)"/><text x="444.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(211,220,36)"/><text x="444.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="448" y="372" width="2" height="15" fill="rgb(251,208,28)"/><text x="451.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="448" y="388" width="2" height="15" fill="rgb(214,205,11)"/><text x="451.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="448" y="404" width="2" height="15" fill="rgb(218,173,26)"/><text x="451.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="450" y="388" width="3" height="15" fill="rgb(231,98,48)"/><text x="453.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="450" y="404" width="3" height="15" fill="rgb(247,68,44)"/><text x="453.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="450" y="420" width="3" height="15" fill="rgb(246,204,10)"/><text x="453.00" y="430.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="453" y="388" width="2" height="15" fill="rgb(216,21,36)"/><text x="456.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="453" y="404" width="2" height="15" fill="rgb(248,212,2)"/><text x="456.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="455" y="404" width="2" height="15" fill="rgb(207,181,11)"/><text x="458.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.40%)</title><rect x="457" y="452" width="5" height="15" fill="rgb(239,42,51)"/><text x="460.00" y="462.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="460" y="468" width="2" height="15" fill="rgb(210,98,31)"/><text x="463.00" y="478.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="460" y="484" width="2" height="15" fill="rgb(217,50,50)"/><text x="463.00" y="494.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (5 samples, 1.00%)</title><rect x="457" y="436" width="12" height="15" fill="rgb(238,132,8)"/><text x="460.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (3 samples, 0.60%)</title><rect x="462" y="452" width="7" height="15" fill="rgb(233,31,49)"/><text x="465.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (3 samples, 0.60%)</title><rect x="462" y="468" width="7" height="15" fill="rgb(246,78,7)"/><text x="465.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.20%)</title><rect x="457" y="420" width="15" height="15" fill="rgb(220,218,10)"/><text x="460.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="469" y="436" width="3" height="15" fill="rgb(247,55,47)"/><text x="472.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="472" y="420" width="2" height="15" fill="rgb(237,142,26)"/><text x="475.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.81%)</title><rect x="455" y="388" width="21" height="15" fill="rgb(218,163,54)"/><text x="458.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.61%)</title><rect x="457" y="404" width="19" height="15" fill="rgb(221,19,10)"/><text x="460.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="474" y="420" width="2" height="15" fill="rgb(253,131,4)"/><text x="477.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="474" y="436" width="2" height="15" fill="rgb(206,13,7)"/><text x="477.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="474" y="452" width="2" height="15" fill="rgb(243,93,2)"/><text x="477.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="476" y="388" width="3" height="15" fill="rgb(233,82,50)"/><text x="479.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (15 samples, 3.01%)</title><rect x="445" y="340" width="36" height="15" fill="rgb(213,172,51)"/><text x="448.00" y="350.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.81%)</title><rect x="448" y="356" width="33" height="15" fill="rgb(228,174,19)"/><text x="451.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.61%)</title><rect x="450" y="372" width="31" height="15" fill="rgb(251,146,6)"/><text x="453.00" y="382.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="479" y="388" width="2" height="15" fill="rgb(222,188,32)"/><text x="482.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="479" y="404" width="2" height="15" fill="rgb(246,1,27)"/><text x="482.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="479" y="420" width="2" height="15" fill="rgb(237,140,46)"/><text x="482.00" y="430.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="481" y="340" width="2" height="15" fill="rgb(205,144,27)"/><text x="484.00" y="350.50"></text></g><g><title>0x7efd8cd72124 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="495" y="356" width="3" height="15" fill="rgb(250,140,40)"/><text x="498.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="498" y="356" width="4" height="15" fill="rgb(205,141,44)"/><text x="501.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="502" y="372" width="3" height="15" fill="rgb(226,198,43)"/><text x="505.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.40%)</title><rect x="519" y="468" width="5" height="15" fill="rgb(235,38,31)"/><text x="522.00" y="478.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (2 samples, 0.40%)</title><rect x="519" y="484" width="5" height="15" fill="rgb(241,210,24)"/><text x="522.00" y="494.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.60%)</title><rect x="519" y="436" width="7" height="15" fill="rgb(215,9,54)"/><text x="522.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.60%)</title><rect x="519" y="452" width="7" height="15" fill="rgb(214,44,51)"/><text x="522.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="524" y="468" width="2" height="15" fill="rgb(248,164,26)"/><text x="527.00" y="478.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="524" y="484" width="2" height="15" fill="rgb(253,50,20)"/><text x="527.00" y="494.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="524" y="500" width="2" height="15" fill="rgb(243,116,42)"/><text x="527.00" y="510.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 2.21%)</title><rect x="502" y="356" width="26" height="15" fill="rgb(228,90,1)"/><text x="505.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 2.01%)</title><rect x="505" y="372" width="23" height="15" fill="rgb(250,195,9)"/><text x="508.00" y="382.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 1.81%)</title><rect x="507" y="388" width="21" height="15" fill="rgb(224,199,20)"/><text x="510.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 1.41%)</title><rect x="512" y="404" width="16" height="15" fill="rgb(232,198,23)"/><text x="515.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.20%)</title><rect x="514" y="420" width="14" height="15" fill="rgb(215,101,14)"/><text x="517.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="526" y="436" width="2" height="15" fill="rgb(225,170,19)"/><text x="529.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.40%)</title><rect x="531" y="388" width="5" height="15" fill="rgb(223,141,8)"/><text x="534.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.40%)</title><rect x="531" y="404" width="5" height="15" fill="rgb(250,79,24)"/><text x="534.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src) (1 samples, 0.20%)</title><rect x="533" y="420" width="3" height="15" fill="rgb(219,205,26)"/><text x="536.00" y="430.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (193 samples, 38.76%)</title><rect x="85" y="164" width="458" height="15" fill="rgb(226,200,17)"/><text x="88.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (187 samples, 37.55%)</title><rect x="100" y="180" width="443" height="15" fill="rgb(220,190,47)"/><text x="103.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (46 samples, 9.24%)</title><rect x="434" y="196" width="109" height="15" fill="rgb(254,15,41)"/><text x="437.00" y="206.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (45 samples, 9.04%)</title><rect x="436" y="212" width="107" height="15" fill="rgb(222,204,25)"/><text x="439.00" y="222.50">_run (mlprodi..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (42 samples, 8.43%)</title><rect x="443" y="228" width="100" height="15" fill="rgb(225,77,39)"/><text x="446.00" y="238.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (42 samples, 8.43%)</title><rect x="443" y="244" width="100" height="15" fill="rgb(208,47,22)"/><text x="446.00" y="254.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py) (42 samples, 8.43%)</title><rect x="443" y="260" width="100" height="15" fill="rgb(231,94,6)"/><text x="446.00" y="270.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (41 samples, 8.23%)</title><rect x="445" y="276" width="98" height="15" fill="rgb(243,76,47)"/><text x="448.00" y="286.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c) (41 samples, 8.23%)</title><rect x="445" y="292" width="98" height="15" fill="rgb(229,63,28)"/><text x="448.00" y="302.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c) (41 samples, 8.23%)</title><rect x="445" y="308" width="98" height="15" fill="rgb(221,26,14)"/><text x="448.00" y="318.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py) (41 samples, 8.23%)</title><rect x="445" y="324" width="98" height="15" fill="rgb(224,223,32)"/><text x="448.00" y="334.50">_clip (nump..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (25 samples, 5.02%)</title><rect x="483" y="340" width="60" height="15" fill="rgb(205,211,43)"/><text x="486.00" y="350.50">_clip_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.20%)</title><rect x="528" y="356" width="15" height="15" fill="rgb(224,15,27)"/><text x="531.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.20%)</title><rect x="528" y="372" width="15" height="15" fill="rgb(236,80,38)"/><text x="531.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.60%)</title><rect x="536" y="388" width="7" height="15" fill="rgb(218,59,32)"/><text x="539.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (3 samples, 0.60%)</title><rect x="536" y="404" width="7" height="15" fill="rgb(241,173,38)"/><text x="539.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (3 samples, 0.60%)</title><rect x="536" y="420" width="7" height="15" fill="rgb(235,62,20)"/><text x="539.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (2 samples, 0.40%)</title><rect x="538" y="436" width="5" height="15" fill="rgb(206,106,24)"/><text x="541.00" y="446.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (194 samples, 38.96%)</title><rect x="85" y="100" width="460" height="15" fill="rgb(213,131,2)"/><text x="88.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 38.96%)</title><rect x="85" y="116" width="460" height="15" fill="rgb(236,12,37)"/><text x="88.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 38.96%)</title><rect x="85" y="132" width="460" height="15" fill="rgb(247,69,13)"/><text x="88.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (194 samples, 38.96%)</title><rect x="85" y="148" width="460" height="15" fill="rgb(250,99,29)"/><text x="88.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="543" y="164" width="2" height="15" fill="rgb(226,153,31)"/><text x="546.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="543" y="180" width="2" height="15" fill="rgb(246,121,4)"/><text x="546.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.20%)</title><rect x="543" y="196" width="2" height="15" fill="rgb(213,207,42)"/><text x="546.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.20%)</title><rect x="543" y="212" width="2" height="15" fill="rgb(221,161,22)"/><text x="546.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.20%)</title><rect x="543" y="228" width="2" height="15" fill="rgb(251,71,8)"/><text x="546.00" y="238.50"></text></g><g><title>0x7efd8cd51a4b (libc-2.29.so) (1 samples, 0.20%)</title><rect x="543" y="244" width="2" height="15" fill="rgb(210,9,20)"/><text x="546.00" y="254.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (195 samples, 39.16%)</title><rect x="85" y="68" width="462" height="15" fill="rgb(219,212,19)"/><text x="88.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_floa..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (195 samples, 39.16%)</title><rect x="85" y="84" width="462" height="15" fill="rgb(240,85,34)"/><text x="88.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_flo..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="545" y="100" width="2" height="15" fill="rgb(219,2,28)"/><text x="548.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="545" y="116" width="2" height="15" fill="rgb(232,29,26)"/><text x="548.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="545" y="132" width="2" height="15" fill="rgb(210,20,7)"/><text x="548.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="545" y="148" width="2" height="15" fill="rgb(244,202,30)"/><text x="548.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="545" y="164" width="2" height="15" fill="rgb(209,121,46)"/><text x="548.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="545" y="180" width="2" height="15" fill="rgb(238,115,31)"/><text x="548.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.20%)</title><rect x="545" y="196" width="2" height="15" fill="rgb(238,42,3)"/><text x="548.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="212" width="2" height="15" fill="rgb(248,124,6)"/><text x="548.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="228" width="2" height="15" fill="rgb(246,66,54)"/><text x="548.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="244" width="2" height="15" fill="rgb(242,72,53)"/><text x="548.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="545" y="260" width="2" height="15" fill="rgb(207,169,19)"/><text x="548.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="276" width="2" height="15" fill="rgb(243,129,10)"/><text x="548.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.20%)</title><rect x="545" y="292" width="2" height="15" fill="rgb(238,175,30)"/><text x="548.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="308" width="2" height="15" fill="rgb(246,2,3)"/><text x="548.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="324" width="2" height="15" fill="rgb(237,163,25)"/><text x="548.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="340" width="2" height="15" fill="rgb(228,157,38)"/><text x="548.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="545" y="356" width="2" height="15" fill="rgb(221,98,39)"/><text x="548.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="545" y="372" width="2" height="15" fill="rgb(213,5,47)"/><text x="548.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.20%)</title><rect x="545" y="388" width="2" height="15" fill="rgb(247,107,44)"/><text x="548.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.20%)</title><rect x="545" y="404" width="2" height="15" fill="rgb(225,180,6)"/><text x="548.00" y="414.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.20%)</title><rect x="547" y="180" width="3" height="15" fill="rgb(222,112,0)"/><text x="550.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="547" y="196" width="3" height="15" fill="rgb(237,142,40)"/><text x="550.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="547" y="212" width="3" height="15" fill="rgb(219,110,29)"/><text x="550.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="547" y="228" width="3" height="15" fill="rgb(250,202,1)"/><text x="550.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="547" y="244" width="3" height="15" fill="rgb(232,86,31)"/><text x="550.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="547" y="260" width="3" height="15" fill="rgb(206,101,3)"/><text x="550.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="547" y="276" width="3" height="15" fill="rgb(251,55,49)"/><text x="550.00" y="286.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.40%)</title><rect x="547" y="164" width="5" height="15" fill="rgb(238,124,11)"/><text x="550.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="550" y="180" width="2" height="15" fill="rgb(224,101,0)"/><text x="553.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="550" y="196" width="2" height="15" fill="rgb(230,125,36)"/><text x="553.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="550" y="212" width="2" height="15" fill="rgb(240,156,6)"/><text x="553.00" y="222.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.20%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(243,102,21)"/><text x="553.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="552" y="164" width="2" height="15" fill="rgb(221,197,31)"/><text x="555.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.20%)</title><rect x="552" y="180" width="2" height="15" fill="rgb(239,184,38)"/><text x="555.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.20%)</title><rect x="552" y="196" width="2" height="15" fill="rgb(227,163,38)"/><text x="555.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="552" y="212" width="2" height="15" fill="rgb(231,28,43)"/><text x="555.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.40%)</title><rect x="564" y="212" width="5" height="15" fill="rgb(210,194,2)"/><text x="567.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.20%)</title><rect x="566" y="228" width="3" height="15" fill="rgb(208,20,27)"/><text x="569.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.20%)</title><rect x="566" y="244" width="3" height="15" fill="rgb(253,172,2)"/><text x="569.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.40%)</title><rect x="573" y="228" width="5" height="15" fill="rgb(237,207,29)"/><text x="576.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.40%)</title><rect x="573" y="244" width="5" height="15" fill="rgb(206,157,33)"/><text x="576.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (5 samples, 1.00%)</title><rect x="569" y="212" width="12" height="15" fill="rgb(236,171,48)"/><text x="572.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="578" y="228" width="3" height="15" fill="rgb(243,77,16)"/><text x="581.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.20%)</title><rect x="578" y="244" width="3" height="15" fill="rgb(207,167,2)"/><text x="581.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="581" y="212" width="2" height="15" fill="rgb(207,202,35)"/><text x="584.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="581" y="228" width="2" height="15" fill="rgb(230,164,25)"/><text x="584.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="581" y="244" width="2" height="15" fill="rgb(254,114,37)"/><text x="584.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.20%)</title><rect x="581" y="260" width="2" height="15" fill="rgb(245,201,49)"/><text x="584.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="581" y="276" width="2" height="15" fill="rgb(234,58,52)"/><text x="584.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="581" y="292" width="2" height="15" fill="rgb(215,87,3)"/><text x="584.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="581" y="308" width="2" height="15" fill="rgb(248,16,10)"/><text x="584.00" y="318.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="588" y="308" width="2" height="15" fill="rgb(235,218,44)"/><text x="591.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="588" y="324" width="2" height="15" fill="rgb(229,180,47)"/><text x="591.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.60%)</title><rect x="585" y="260" width="7" height="15" fill="rgb(223,198,45)"/><text x="588.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (3 samples, 0.60%)</title><rect x="585" y="276" width="7" height="15" fill="rgb(233,174,1)"/><text x="588.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (3 samples, 0.60%)</title><rect x="585" y="292" width="7" height="15" fill="rgb(247,27,38)"/><text x="588.00" y="302.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="590" y="308" width="2" height="15" fill="rgb(251,151,24)"/><text x="593.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="592" y="260" width="3" height="15" fill="rgb(215,51,29)"/><text x="595.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="592" y="276" width="3" height="15" fill="rgb(222,185,29)"/><text x="595.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="592" y="292" width="3" height="15" fill="rgb(215,109,49)"/><text x="595.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="595" y="260" width="2" height="15" fill="rgb(234,108,25)"/><text x="598.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="595" y="276" width="2" height="15" fill="rgb(232,64,24)"/><text x="598.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="595" y="292" width="2" height="15" fill="rgb(254,72,24)"/><text x="598.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="595" y="308" width="2" height="15" fill="rgb(211,156,35)"/><text x="598.00" y="318.50"></text></g><g><title>0x7efd8bf740a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="600" y="276" width="2" height="15" fill="rgb(233,90,17)"/><text x="603.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.81%)</title><rect x="585" y="244" width="22" height="15" fill="rgb(221,156,50)"/><text x="588.00" y="254.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.80%)</title><rect x="597" y="260" width="10" height="15" fill="rgb(242,220,7)"/><text x="600.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.40%)</title><rect x="602" y="276" width="5" height="15" fill="rgb(217,211,5)"/><text x="605.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="604" y="292" width="3" height="15" fill="rgb(212,45,0)"/><text x="607.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="604" y="308" width="3" height="15" fill="rgb(246,159,49)"/><text x="607.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="604" y="324" width="3" height="15" fill="rgb(253,150,17)"/><text x="607.00" y="334.50"></text></g><g><title>array_multiply (number.c) (11 samples, 2.21%)</title><rect x="583" y="212" width="26" height="15" fill="rgb(222,140,15)"/><text x="586.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.01%)</title><rect x="585" y="228" width="24" height="15" fill="rgb(205,226,15)"/><text x="588.00" y="238.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="607" y="244" width="2" height="15" fill="rgb(247,98,54)"/><text x="610.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="607" y="260" width="2" height="15" fill="rgb(210,227,19)"/><text x="610.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="611" y="260" width="3" height="15" fill="rgb(245,108,37)"/><text x="614.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.20%)</title><rect x="614" y="292" width="2" height="15" fill="rgb(230,183,14)"/><text x="617.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.20%)</title><rect x="614" y="308" width="2" height="15" fill="rgb(232,20,21)"/><text x="617.00" y="318.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.20%)</title><rect x="614" y="324" width="2" height="15" fill="rgb(221,74,16)"/><text x="617.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(222,13,53)"/><text x="619.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="616" y="308" width="2" height="15" fill="rgb(223,45,38)"/><text x="619.00" y="318.50"></text></g><g><title>array_subtract (number.c) (5 samples, 1.00%)</title><rect x="609" y="212" width="12" height="15" fill="rgb(211,82,12)"/><text x="612.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.80%)</title><rect x="611" y="228" width="10" height="15" fill="rgb(233,64,26)"/><text x="614.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.80%)</title><rect x="611" y="244" width="10" height="15" fill="rgb(250,70,14)"/><text x="614.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.60%)</title><rect x="614" y="260" width="7" height="15" fill="rgb(246,101,10)"/><text x="617.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.60%)</title><rect x="614" y="276" width="7" height="15" fill="rgb(225,19,25)"/><text x="617.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.20%)</title><rect x="618" y="292" width="3" height="15" fill="rgb(230,144,28)"/><text x="621.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="618" y="308" width="3" height="15" fill="rgb(210,181,43)"/><text x="621.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.00%)</title><rect x="621" y="276" width="12" height="15" fill="rgb(226,229,20)"/><text x="624.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.00%)</title><rect x="621" y="292" width="12" height="15" fill="rgb(228,201,0)"/><text x="624.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 1.00%)</title><rect x="621" y="308" width="12" height="15" fill="rgb(227,62,17)"/><text x="624.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 1.00%)</title><rect x="621" y="324" width="12" height="15" fill="rgb(243,122,1)"/><text x="624.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 1.00%)</title><rect x="621" y="340" width="12" height="15" fill="rgb(226,26,27)"/><text x="624.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.40%)</title><rect x="628" y="356" width="5" height="15" fill="rgb(248,143,36)"/><text x="631.00" y="366.50"></text></g><g><title>0x7efd8cd67730 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="637" y="292" width="3" height="15" fill="rgb(220,227,5)"/><text x="640.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.40%)</title><rect x="640" y="324" width="5" height="15" fill="rgb(232,70,50)"/><text x="643.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="642" y="340" width="3" height="15" fill="rgb(211,26,10)"/><text x="645.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="645" y="324" width="2" height="15" fill="rgb(237,184,35)"/><text x="648.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.20%)</title><rect x="645" y="340" width="2" height="15" fill="rgb(221,109,30)"/><text x="648.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="645" y="356" width="2" height="15" fill="rgb(207,34,48)"/><text x="648.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="645" y="372" width="2" height="15" fill="rgb(209,229,23)"/><text x="648.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="645" y="388" width="2" height="15" fill="rgb(238,24,28)"/><text x="648.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.20%)</title><rect x="647" y="324" width="2" height="15" fill="rgb(208,93,49)"/><text x="650.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="647" y="340" width="2" height="15" fill="rgb(223,8,48)"/><text x="650.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.00%)</title><rect x="640" y="308" width="12" height="15" fill="rgb(233,8,45)"/><text x="643.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="649" y="324" width="3" height="15" fill="rgb(227,215,15)"/><text x="652.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.20%)</title><rect x="649" y="340" width="3" height="15" fill="rgb(243,1,43)"/><text x="652.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="649" y="356" width="3" height="15" fill="rgb(234,156,36)"/><text x="652.00" y="366.50"></text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 2.81%)</title><rect x="621" y="244" width="33" height="15" fill="rgb(248,153,35)"/><text x="624.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 2.81%)</title><rect x="621" y="260" width="33" height="15" fill="rgb(233,33,10)"/><text x="624.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.81%)</title><rect x="633" y="276" width="21" height="15" fill="rgb(227,139,12)"/><text x="636.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.20%)</title><rect x="640" y="292" width="14" height="15" fill="rgb(208,137,23)"/><text x="643.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="652" y="308" width="2" height="15" fill="rgb(218,121,13)"/><text x="655.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(246,102,37)"/><text x="655.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="652" y="340" width="2" height="15" fill="rgb(221,185,20)"/><text x="655.00" y="350.50"></text></g><g><title>array_sum (methods.c) (15 samples, 3.01%)</title><rect x="621" y="212" width="35" height="15" fill="rgb(215,130,50)"/><text x="624.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 3.01%)</title><rect x="621" y="228" width="35" height="15" fill="rgb(222,139,28)"/><text x="624.00" y="238.50">fo..</text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.20%)</title><rect x="654" y="244" width="2" height="15" fill="rgb(213,149,43)"/><text x="657.00" y="254.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="666" y="228" width="2" height="15" fill="rgb(238,161,16)"/><text x="669.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="692" y="388" width="2" height="15" fill="rgb(254,7,26)"/><text x="695.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="692" y="404" width="2" height="15" fill="rgb(218,56,37)"/><text x="695.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="692" y="420" width="2" height="15" fill="rgb(209,121,54)"/><text x="695.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.60%)</title><rect x="692" y="356" width="7" height="15" fill="rgb(250,216,3)"/><text x="695.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.60%)</title><rect x="692" y="372" width="7" height="15" fill="rgb(210,203,2)"/><text x="695.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.40%)</title><rect x="694" y="388" width="5" height="15" fill="rgb(243,43,18)"/><text x="697.00" y="398.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="697" y="404" width="2" height="15" fill="rgb(212,115,41)"/><text x="700.00" y="414.50"></text></g><g><title>0x7efd8ce2fff0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="697" y="420" width="2" height="15" fill="rgb(220,121,14)"/><text x="700.00" y="430.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="704" y="452" width="2" height="15" fill="rgb(223,169,29)"/><text x="707.00" y="462.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="706" y="452" width="2" height="15" fill="rgb(236,206,48)"/><text x="709.00" y="462.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="706" y="468" width="2" height="15" fill="rgb(241,207,28)"/><text x="709.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.00%)</title><rect x="699" y="372" width="12" height="15" fill="rgb(239,186,1)"/><text x="702.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.80%)</title><rect x="701" y="388" width="10" height="15" fill="rgb(228,135,11)"/><text x="704.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.60%)</title><rect x="704" y="404" width="7" height="15" fill="rgb(224,66,21)"/><text x="707.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.60%)</title><rect x="704" y="420" width="7" height="15" fill="rgb(243,47,3)"/><text x="707.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.60%)</title><rect x="704" y="436" width="7" height="15" fill="rgb(245,125,14)"/><text x="707.00" y="446.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="708" y="452" width="3" height="15" fill="rgb(215,127,15)"/><text x="711.00" y="462.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.20%)</title><rect x="716" y="420" width="2" height="15" fill="rgb(229,172,10)"/><text x="719.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.60%)</title><rect x="713" y="388" width="7" height="15" fill="rgb(249,205,26)"/><text x="716.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (3 samples, 0.60%)</title><rect x="713" y="404" width="7" height="15" fill="rgb(214,222,13)"/><text x="716.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="718" y="420" width="2" height="15" fill="rgb(229,88,1)"/><text x="721.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="718" y="436" width="2" height="15" fill="rgb(218,0,5)"/><text x="721.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="718" y="452" width="2" height="15" fill="rgb(212,81,23)"/><text x="721.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="718" y="468" width="2" height="15" fill="rgb(213,16,46)"/><text x="721.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.01%)</title><rect x="699" y="356" width="24" height="15" fill="rgb(245,113,44)"/><text x="702.00" y="366.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 1.00%)</title><rect x="711" y="372" width="12" height="15" fill="rgb(223,138,3)"/><text x="714.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.20%)</title><rect x="720" y="388" width="3" height="15" fill="rgb(209,86,19)"/><text x="723.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (15 samples, 3.01%)</title><rect x="690" y="324" width="35" height="15" fill="rgb(216,174,13)"/><text x="693.00" y="334.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.81%)</title><rect x="692" y="340" width="33" height="15" fill="rgb(214,3,43)"/><text x="695.00" y="350.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="723" y="356" width="2" height="15" fill="rgb(223,90,26)"/><text x="726.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (5 samples, 1.00%)</title><rect x="725" y="324" width="12" height="15" fill="rgb(226,182,31)"/><text x="728.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.41%)</title><rect x="749" y="340" width="16" height="15" fill="rgb(237,123,48)"/><text x="752.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="770" y="372" width="2" height="15" fill="rgb(241,209,18)"/><text x="773.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="770" y="388" width="2" height="15" fill="rgb(219,51,3)"/><text x="773.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="770" y="404" width="2" height="15" fill="rgb(227,184,13)"/><text x="773.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="770" y="420" width="2" height="15" fill="rgb(235,223,13)"/><text x="773.00" y="430.50"></text></g><g><title>0x7efd8ce2f134 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="770" y="436" width="2" height="15" fill="rgb(217,66,27)"/><text x="773.00" y="446.50"></text></g><g><title>PyArray_XDECREF (refcount.c) (1 samples, 0.20%)</title><rect x="780" y="404" width="2" height="15" fill="rgb(232,80,16)"/><text x="783.00" y="414.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="780" y="420" width="2" height="15" fill="rgb(214,12,22)"/><text x="783.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.40%)</title><rect x="780" y="388" width="4" height="15" fill="rgb(238,208,21)"/><text x="783.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="782" y="404" width="2" height="15" fill="rgb(245,176,43)"/><text x="785.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 2.21%)</title><rect x="765" y="340" width="26" height="15" fill="rgb(236,134,36)"/><text x="768.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 2.21%)</title><rect x="765" y="356" width="26" height="15" fill="rgb(246,145,35)"/><text x="768.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (8 samples, 1.61%)</title><rect x="772" y="372" width="19" height="15" fill="rgb(223,32,29)"/><text x="775.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.60%)</title><rect x="784" y="388" width="7" height="15" fill="rgb(227,92,54)"/><text x="787.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.40%)</title><rect x="787" y="404" width="4" height="15" fill="rgb(209,163,10)"/><text x="790.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.40%)</title><rect x="791" y="356" width="5" height="15" fill="rgb(244,87,36)"/><text x="794.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.40%)</title><rect x="791" y="372" width="5" height="15" fill="rgb(243,50,50)"/><text x="794.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="794" y="388" width="2" height="15" fill="rgb(215,145,26)"/><text x="797.00" y="398.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="799" y="372" width="2" height="15" fill="rgb(230,228,21)"/><text x="802.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.20%)</title><rect x="801" y="372" width="2" height="15" fill="rgb(221,219,47)"/><text x="804.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="803" y="372" width="3" height="15" fill="rgb(253,148,30)"/><text x="806.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="803" y="388" width="3" height="15" fill="rgb(214,131,27)"/><text x="806.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="803" y="404" width="3" height="15" fill="rgb(215,223,42)"/><text x="806.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.41%)</title><rect x="796" y="356" width="17" height="15" fill="rgb(243,110,27)"/><text x="799.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.60%)</title><rect x="806" y="372" width="7" height="15" fill="rgb(245,77,15)"/><text x="809.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="810" y="388" width="3" height="15" fill="rgb(232,181,9)"/><text x="813.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="810" y="404" width="3" height="15" fill="rgb(214,43,30)"/><text x="813.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (62 samples, 12.45%)</title><rect x="668" y="244" width="147" height="15" fill="rgb(244,79,54)"/><text x="671.00" y="254.50">clip (numpy/core/f..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (59 samples, 11.85%)</title><rect x="675" y="260" width="140" height="15" fill="rgb(227,55,14)"/><text x="678.00" y="270.50">_wrapfunc (numpy/..</text></g><g><title>array_clip (methods.c) (59 samples, 11.85%)</title><rect x="675" y="276" width="140" height="15" fill="rgb(215,107,39)"/><text x="678.00" y="286.50">array_clip (metho..</text></g><g><title>forward_ndarray_method (methods.c) (59 samples, 11.85%)</title><rect x="675" y="292" width="140" height="15" fill="rgb(232,196,27)"/><text x="678.00" y="302.50">forward_ndarray_m..</text></g><g><title>_clip (numpy/core/_methods.py) (55 samples, 11.04%)</title><rect x="685" y="308" width="130" height="15" fill="rgb(210,205,37)"/><text x="688.00" y="318.50">_clip (numpy/cor..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (33 samples, 6.63%)</title><rect x="737" y="324" width="78" height="15" fill="rgb(240,126,39)"/><text x="740.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.01%)</title><rect x="791" y="340" width="24" height="15" fill="rgb(231,178,2)"/><text x="794.00" y="350.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="813" y="356" width="2" height="15" fill="rgb(245,218,39)"/><text x="816.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="813" y="372" width="2" height="15" fill="rgb(254,186,49)"/><text x="816.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (68 samples, 13.65%)</title><rect x="656" y="212" width="161" height="15" fill="rgb(249,167,18)"/><text x="659.00" y="222.50">clip (&lt;__array_funct..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (63 samples, 12.65%)</title><rect x="668" y="228" width="149" height="15" fill="rgb(247,22,17)"/><text x="671.00" y="238.50">array_implement_arr..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="815" y="244" width="2" height="15" fill="rgb(205,214,8)"/><text x="818.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="815" y="260" width="2" height="15" fill="rgb(233,15,7)"/><text x="818.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="815" y="276" width="2" height="15" fill="rgb(237,102,28)"/><text x="818.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="815" y="292" width="2" height="15" fill="rgb(219,134,10)"/><text x="818.00" y="302.50"></text></g><g><title>0x7efd66784cea (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="836" y="260" width="3" height="15" fill="rgb(215,87,38)"/><text x="839.00" y="270.50"></text></g><g><title>0x7efd66794f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="836" y="244" width="5" height="15" fill="rgb(250,213,15)"/><text x="839.00" y="254.50"></text></g><g><title>0x7efd66784d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="839" y="260" width="2" height="15" fill="rgb(219,144,45)"/><text x="842.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.20%)</title><rect x="839" y="276" width="2" height="15" fill="rgb(253,92,7)"/><text x="842.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="839" y="292" width="2" height="15" fill="rgb(230,118,36)"/><text x="842.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="839" y="308" width="2" height="15" fill="rgb(208,50,14)"/><text x="842.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="839" y="324" width="2" height="15" fill="rgb(208,190,26)"/><text x="842.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.20%)</title><rect x="839" y="340" width="2" height="15" fill="rgb(208,202,43)"/><text x="842.00" y="350.50"></text></g><g><title>0x7efd66787d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="841" y="292" width="7" height="15" fill="rgb(214,176,48)"/><text x="844.00" y="302.50"></text></g><g><title>0x7efd66787666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="841" y="308" width="7" height="15" fill="rgb(219,17,29)"/><text x="844.00" y="318.50"></text></g><g><title>0x7efd6677d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="844" y="324" width="4" height="15" fill="rgb(209,95,26)"/><text x="847.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.20%)</title><rect x="846" y="340" width="2" height="15" fill="rgb(243,202,22)"/><text x="849.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.20%)</title><rect x="846" y="356" width="2" height="15" fill="rgb(214,102,7)"/><text x="849.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.20%)</title><rect x="846" y="372" width="2" height="15" fill="rgb(211,64,30)"/><text x="849.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="846" y="388" width="2" height="15" fill="rgb(247,120,19)"/><text x="849.00" y="398.50"></text></g><g><title>0x7efd667a32df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.80%)</title><rect x="841" y="276" width="10" height="15" fill="rgb(207,166,34)"/><text x="844.00" y="286.50"></text></g><g><title>0x7efd66787e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="848" y="292" width="3" height="15" fill="rgb(250,162,19)"/><text x="851.00" y="302.50"></text></g><g><title>0x7efd6677b2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="848" y="308" width="3" height="15" fill="rgb(229,142,2)"/><text x="851.00" y="318.50"></text></g><g><title>0x7efd6677adf8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="848" y="324" width="3" height="15" fill="rgb(214,189,11)"/><text x="851.00" y="334.50"></text></g><g><title>0x7efd667a32e8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="851" y="276" width="2" height="15" fill="rgb(218,148,2)"/><text x="854.00" y="286.50"></text></g><g><title>0x7efd8cd67734 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="855" y="308" width="3" height="15" fill="rgb(217,55,1)"/><text x="858.00" y="318.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.20%)</title><rect x="858" y="308" width="2" height="15" fill="rgb(236,89,12)"/><text x="861.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.20%)</title><rect x="858" y="324" width="2" height="15" fill="rgb(247,119,26)"/><text x="861.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="858" y="340" width="2" height="15" fill="rgb(237,223,12)"/><text x="861.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.20%)</title><rect x="858" y="356" width="2" height="15" fill="rgb(251,23,18)"/><text x="861.00" y="366.50"></text></g><g><title>0x7efd667a3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.80%)</title><rect x="853" y="276" width="10" height="15" fill="rgb(236,5,14)"/><text x="856.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.60%)</title><rect x="855" y="292" width="8" height="15" fill="rgb(233,47,39)"/><text x="858.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="860" y="308" width="3" height="15" fill="rgb(214,13,43)"/><text x="863.00" y="318.50"></text></g><g><title>0x7efd667a3644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="863" y="276" width="2" height="15" fill="rgb(211,10,2)"/><text x="866.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="863" y="292" width="2" height="15" fill="rgb(205,102,25)"/><text x="866.00" y="302.50"></text></g><g><title>0x7efd667a4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.21%)</title><rect x="841" y="260" width="26" height="15" fill="rgb(220,91,37)"/><text x="844.00" y="270.50">0..</text></g><g><title>0x7efd667a3c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="865" y="276" width="2" height="15" fill="rgb(208,179,46)"/><text x="868.00" y="286.50"></text></g><g><title>0x7efd6677b529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="865" y="292" width="2" height="15" fill="rgb(210,40,36)"/><text x="868.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.20%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(250,106,24)"/><text x="868.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.20%)</title><rect x="865" y="324" width="2" height="15" fill="rgb(206,180,19)"/><text x="868.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.20%)</title><rect x="865" y="340" width="2" height="15" fill="rgb(228,150,30)"/><text x="868.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.20%)</title><rect x="865" y="356" width="2" height="15" fill="rgb(241,171,51)"/><text x="868.00" y="366.50"></text></g><g><title>0x7efd66794fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.41%)</title><rect x="841" y="244" width="29" height="15" fill="rgb(230,63,26)"/><text x="844.00" y="254.50">0x..</text></g><g><title>0x7efd667a4540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="867" y="260" width="3" height="15" fill="rgb(245,129,3)"/><text x="870.00" y="270.50"></text></g><g><title>0x7efd667791ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="867" y="276" width="3" height="15" fill="rgb(223,121,0)"/><text x="870.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="877" y="292" width="2" height="15" fill="rgb(225,114,49)"/><text x="880.00" y="302.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.20%)</title><rect x="879" y="292" width="2" height="15" fill="rgb(239,99,18)"/><text x="882.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.20%)</title><rect x="879" y="308" width="2" height="15" fill="rgb(254,144,47)"/><text x="882.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="879" y="324" width="2" height="15" fill="rgb(245,92,37)"/><text x="882.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.20%)</title><rect x="879" y="340" width="2" height="15" fill="rgb(252,100,25)"/><text x="882.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="879" y="356" width="2" height="15" fill="rgb(206,114,2)"/><text x="882.00" y="366.50"></text></g><g><title>0x7efd6679505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.20%)</title><rect x="870" y="244" width="14" height="15" fill="rgb(217,191,15)"/><text x="873.00" y="254.50"></text></g><g><title>array_take (methods.c) (6 samples, 1.20%)</title><rect x="870" y="260" width="14" height="15" fill="rgb(243,187,48)"/><text x="873.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.60%)</title><rect x="877" y="276" width="7" height="15" fill="rgb(222,154,13)"/><text x="880.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="881" y="292" width="3" height="15" fill="rgb(221,179,19)"/><text x="884.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(241,148,42)"/><text x="884.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="881" y="324" width="3" height="15" fill="rgb(212,168,49)"/><text x="884.00" y="334.50"></text></g><g><title>0x7efd8bf742c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="881" y="340" width="3" height="15" fill="rgb(246,32,13)"/><text x="884.00" y="350.50"></text></g><g><title>0x7efd6679514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="884" y="244" width="2" height="15" fill="rgb(253,153,48)"/><text x="887.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="884" y="260" width="2" height="15" fill="rgb(213,21,47)"/><text x="887.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="884" y="276" width="2" height="15" fill="rgb(248,60,39)"/><text x="887.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="884" y="292" width="2" height="15" fill="rgb(241,87,46)"/><text x="887.00" y="302.50"></text></g><g><title>0x7efd667952b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="886" y="244" width="3" height="15" fill="rgb(214,130,16)"/><text x="889.00" y="254.50"></text></g><g><title>0x7efd8cd72120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="886" y="260" width="3" height="15" fill="rgb(238,76,5)"/><text x="889.00" y="270.50"></text></g><g><title>0x7efd66795d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 4.62%)</title><rect x="836" y="228" width="55" height="15" fill="rgb(217,116,23)"/><text x="839.00" y="238.50">0x7ef..</text></g><g><title>0x7efd66795550 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="889" y="244" width="2" height="15" fill="rgb(210,108,2)"/><text x="892.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 0.80%)</title><rect x="924" y="260" width="10" height="15" fill="rgb(224,205,27)"/><text x="927.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.60%)</title><rect x="934" y="260" width="7" height="15" fill="rgb(209,22,5)"/><text x="937.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.20%)</title><rect x="941" y="260" width="2" height="15" fill="rgb(222,17,40)"/><text x="944.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="964" y="276" width="3" height="15" fill="rgb(225,222,50)"/><text x="967.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 2.21%)</title><rect x="943" y="260" width="26" height="15" fill="rgb(213,179,40)"/><text x="946.00" y="270.50">_..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.20%)</title><rect x="967" y="276" width="2" height="15" fill="rgb(212,210,20)"/><text x="970.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.60%)</title><rect x="969" y="260" width="7" height="15" fill="rgb(236,91,37)"/><text x="972.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 2.41%)</title><rect x="976" y="260" width="29" height="15" fill="rgb(232,54,5)"/><text x="979.00" y="270.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 0.80%)</title><rect x="995" y="276" width="10" height="15" fill="rgb(235,61,23)"/><text x="998.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.40%)</title><rect x="1000" y="292" width="5" height="15" fill="rgb(217,45,44)"/><text x="1003.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.40%)</title><rect x="1005" y="260" width="4" height="15" fill="rgb(223,170,26)"/><text x="1008.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.40%)</title><rect x="1005" y="276" width="4" height="15" fill="rgb(219,19,8)"/><text x="1008.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.80%)</title><rect x="1009" y="260" width="10" height="15" fill="rgb(232,62,33)"/><text x="1012.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.40%)</title><rect x="1014" y="276" width="5" height="15" fill="rgb(209,213,0)"/><text x="1017.00" y="286.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1017" y="292" width="2" height="15" fill="rgb(207,149,43)"/><text x="1020.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.20%)</title><rect x="1019" y="260" width="2" height="15" fill="rgb(232,191,7)"/><text x="1022.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (52 samples, 10.44%)</title><rect x="905" y="244" width="123" height="15" fill="rgb(252,139,16)"/><text x="908.00" y="254.50">check_array (sk..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.60%)</title><rect x="1021" y="260" width="7" height="15" fill="rgb(213,156,24)"/><text x="1024.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.40%)</title><rect x="1024" y="276" width="4" height="15" fill="rgb(226,125,19)"/><text x="1027.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (59 samples, 11.85%)</title><rect x="891" y="228" width="140" height="15" fill="rgb(209,5,37)"/><text x="894.00" y="238.50">_validate_X_predi..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.20%)</title><rect x="1028" y="244" width="3" height="15" fill="rgb(241,110,34)"/><text x="1031.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="1033" y="244" width="2" height="15" fill="rgb(239,54,49)"/><text x="1036.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="1033" y="260" width="2" height="15" fill="rgb(222,2,24)"/><text x="1036.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.60%)</title><rect x="1031" y="228" width="7" height="15" fill="rgb(223,115,19)"/><text x="1034.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.20%)</title><rect x="1035" y="244" width="3" height="15" fill="rgb(207,151,22)"/><text x="1038.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.20%)</title><rect x="1035" y="260" width="3" height="15" fill="rgb(226,59,29)"/><text x="1038.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="1038" y="228" width="2" height="15" fill="rgb(218,59,50)"/><text x="1041.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="1038" y="244" width="2" height="15" fill="rgb(237,19,7)"/><text x="1041.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="1038" y="260" width="2" height="15" fill="rgb(225,164,32)"/><text x="1041.00" y="270.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1043" y="308" width="2" height="15" fill="rgb(249,93,19)"/><text x="1046.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1043" y="324" width="2" height="15" fill="rgb(222,70,18)"/><text x="1046.00" y="334.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(248,47,34)"/><text x="1046.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.40%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(209,80,16)"/><text x="1046.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1045" y="308" width="2" height="15" fill="rgb(210,187,53)"/><text x="1048.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1045" y="324" width="2" height="15" fill="rgb(243,144,53)"/><text x="1048.00" y="334.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1047" y="276" width="3" height="15" fill="rgb(244,119,33)"/><text x="1050.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1050" y="276" width="2" height="15" fill="rgb(235,83,21)"/><text x="1053.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="1050" y="292" width="2" height="15" fill="rgb(228,104,21)"/><text x="1053.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="1050" y="308" width="2" height="15" fill="rgb(239,106,31)"/><text x="1053.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.20%)</title><rect x="1050" y="324" width="2" height="15" fill="rgb(230,162,30)"/><text x="1053.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1052" y="276" width="5" height="15" fill="rgb(236,188,2)"/><text x="1055.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (8 samples, 1.61%)</title><rect x="1040" y="228" width="19" height="15" fill="rgb(205,80,49)"/><text x="1043.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.61%)</title><rect x="1040" y="244" width="19" height="15" fill="rgb(217,127,50)"/><text x="1043.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.41%)</title><rect x="1043" y="260" width="16" height="15" fill="rgb(240,47,40)"/><text x="1046.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="1057" y="276" width="2" height="15" fill="rgb(222,12,5)"/><text x="1060.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="1057" y="292" width="2" height="15" fill="rgb(218,83,5)"/><text x="1060.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1057" y="308" width="2" height="15" fill="rgb(239,138,10)"/><text x="1060.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.40%)</title><rect x="1059" y="244" width="5" height="15" fill="rgb(205,2,3)"/><text x="1062.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.20%)</title><rect x="1062" y="260" width="2" height="15" fill="rgb(237,39,33)"/><text x="1065.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="1062" y="276" width="2" height="15" fill="rgb(243,141,13)"/><text x="1065.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.60%)</title><rect x="1059" y="228" width="7" height="15" fill="rgb(233,211,2)"/><text x="1062.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="1064" y="244" width="2" height="15" fill="rgb(220,58,45)"/><text x="1067.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.60%)</title><rect x="1066" y="292" width="7" height="15" fill="rgb(252,82,19)"/><text x="1069.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.60%)</title><rect x="1066" y="308" width="7" height="15" fill="rgb(251,218,50)"/><text x="1069.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.60%)</title><rect x="1066" y="324" width="7" height="15" fill="rgb(223,99,32)"/><text x="1069.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.60%)</title><rect x="1066" y="340" width="7" height="15" fill="rgb(225,51,35)"/><text x="1069.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.60%)</title><rect x="1066" y="356" width="7" height="15" fill="rgb(232,191,39)"/><text x="1069.00" y="366.50"></text></g><g><title>0x7efd8cd67e50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1071" y="372" width="2" height="15" fill="rgb(217,208,4)"/><text x="1074.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1076" y="308" width="2" height="15" fill="rgb(206,63,40)"/><text x="1079.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1076" y="324" width="2" height="15" fill="rgb(236,49,44)"/><text x="1079.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="1076" y="340" width="2" height="15" fill="rgb(207,38,18)"/><text x="1079.00" y="350.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1078" y="356" width="3" height="15" fill="rgb(218,176,19)"/><text x="1081.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1081" y="356" width="2" height="15" fill="rgb(216,229,30)"/><text x="1084.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.80%)</title><rect x="1078" y="340" width="10" height="15" fill="rgb(205,195,28)"/><text x="1081.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.40%)</title><rect x="1083" y="356" width="5" height="15" fill="rgb(241,32,33)"/><text x="1086.00" y="366.50"></text></g><g><title>0x7efd8cd09a19 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1088" y="388" width="2" height="15" fill="rgb(231,228,30)"/><text x="1091.00" y="398.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.20%)</title><rect x="1088" y="404" width="2" height="15" fill="rgb(245,159,35)"/><text x="1091.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.40%)</title><rect x="1088" y="340" width="4" height="15" fill="rgb(229,140,54)"/><text x="1091.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.40%)</title><rect x="1088" y="356" width="4" height="15" fill="rgb(223,229,23)"/><text x="1091.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.40%)</title><rect x="1088" y="372" width="4" height="15" fill="rgb(208,74,5)"/><text x="1091.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1090" y="388" width="2" height="15" fill="rgb(237,121,10)"/><text x="1093.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.20%)</title><rect x="1092" y="340" width="3" height="15" fill="rgb(240,173,26)"/><text x="1095.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="1092" y="356" width="3" height="15" fill="rgb(251,198,5)"/><text x="1095.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="1092" y="372" width="3" height="15" fill="rgb(237,89,44)"/><text x="1095.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="1092" y="388" width="3" height="15" fill="rgb(237,66,1)"/><text x="1095.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1092" y="404" width="3" height="15" fill="rgb(205,172,17)"/><text x="1095.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.61%)</title><rect x="1078" y="324" width="19" height="15" fill="rgb(228,44,6)"/><text x="1081.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1095" y="340" width="2" height="15" fill="rgb(234,212,33)"/><text x="1098.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.20%)</title><rect x="1095" y="356" width="2" height="15" fill="rgb(223,169,5)"/><text x="1098.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1095" y="372" width="2" height="15" fill="rgb(209,198,12)"/><text x="1098.00" y="382.50"></text></g><g><title>array_sum (methods.c) (15 samples, 3.01%)</title><rect x="1066" y="228" width="36" height="15" fill="rgb(239,183,39)"/><text x="1069.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 3.01%)</title><rect x="1066" y="244" width="36" height="15" fill="rgb(242,77,38)"/><text x="1069.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 3.01%)</title><rect x="1066" y="260" width="36" height="15" fill="rgb(211,38,40)"/><text x="1069.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 3.01%)</title><rect x="1066" y="276" width="36" height="15" fill="rgb(224,83,54)"/><text x="1069.00" y="286.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 2.41%)</title><rect x="1073" y="292" width="29" height="15" fill="rgb(251,218,18)"/><text x="1076.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 2.01%)</title><rect x="1078" y="308" width="24" height="15" fill="rgb(219,138,43)"/><text x="1081.00" y="318.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1097" y="324" width="5" height="15" fill="rgb(242,194,30)"/><text x="1100.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="1097" y="340" width="5" height="15" fill="rgb(220,216,0)"/><text x="1100.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="1097" y="356" width="5" height="15" fill="rgb(214,162,3)"/><text x="1100.00" y="366.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1099" y="372" width="3" height="15" fill="rgb(231,178,10)"/><text x="1102.00" y="382.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="1123" y="260" width="3" height="15" fill="rgb(205,8,51)"/><text x="1126.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.01%)</title><rect x="1107" y="244" width="23" height="15" fill="rgb(251,146,45)"/><text x="1110.00" y="254.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.40%)</title><rect x="1126" y="260" width="4" height="15" fill="rgb(234,48,6)"/><text x="1129.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 3.21%)</title><rect x="1102" y="228" width="38" height="15" fill="rgb(229,143,44)"/><text x="1105.00" y="238.50">che..</text></g><g><title>isclass (inspect.py) (4 samples, 0.80%)</title><rect x="1130" y="244" width="10" height="15" fill="rgb(219,99,48)"/><text x="1133.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1144" y="308" width="3" height="15" fill="rgb(214,50,33)"/><text x="1147.00" y="318.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.20%)</title><rect x="1144" y="324" width="3" height="15" fill="rgb(235,98,20)"/><text x="1147.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (3 samples, 0.60%)</title><rect x="1147" y="308" width="7" height="15" fill="rgb(206,123,13)"/><text x="1150.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1154" y="308" width="2" height="15" fill="rgb(223,54,19)"/><text x="1157.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.20%)</title><rect x="1144" y="292" width="15" height="15" fill="rgb(248,175,42)"/><text x="1147.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1156" y="308" width="3" height="15" fill="rgb(232,47,46)"/><text x="1159.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.41%)</title><rect x="1144" y="260" width="17" height="15" fill="rgb(212,33,11)"/><text x="1147.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.41%)</title><rect x="1144" y="276" width="17" height="15" fill="rgb(254,195,20)"/><text x="1147.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.20%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(214,16,52)"/><text x="1162.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (146 samples, 29.32%)</title><rect x="817" y="212" width="346" height="15" fill="rgb(218,127,19)"/><text x="820.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.01%)</title><rect x="1140" y="228" width="23" height="15" fill="rgb(225,73,29)"/><text x="1143.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.01%)</title><rect x="1140" y="244" width="23" height="15" fill="rgb(226,214,0)"/><text x="1143.00" y="254.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1161" y="260" width="2" height="15" fill="rgb(238,70,14)"/><text x="1164.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1163" y="244" width="3" height="15" fill="rgb(222,34,15)"/><text x="1166.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1163" y="260" width="3" height="15" fill="rgb(231,206,53)"/><text x="1166.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.20%)</title><rect x="1163" y="276" width="3" height="15" fill="rgb(228,154,18)"/><text x="1166.00" y="286.50"></text></g><g><title>0x7efd8cf23e6e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(209,121,11)"/><text x="1166.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1166" y="244" width="2" height="15" fill="rgb(237,191,24)"/><text x="1169.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (260 samples, 52.21%)</title><rect x="554" y="180" width="617" height="15" fill="rgb(246,142,54)"/><text x="557.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (260 samples, 52.21%)</title><rect x="554" y="196" width="617" height="15" fill="rgb(213,159,18)"/><text x="557.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.60%)</title><rect x="1163" y="212" width="8" height="15" fill="rgb(233,135,15)"/><text x="1166.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.60%)</title><rect x="1163" y="228" width="8" height="15" fill="rgb(236,113,29)"/><text x="1166.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="1168" y="244" width="3" height="15" fill="rgb(229,222,49)"/><text x="1171.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.20%)</title><rect x="1173" y="196" width="2" height="15" fill="rgb(214,121,17)"/><text x="1176.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.20%)</title><rect x="1173" y="212" width="2" height="15" fill="rgb(210,63,46)"/><text x="1176.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1173" y="228" width="2" height="15" fill="rgb(209,169,24)"/><text x="1176.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1175" y="228" width="3" height="15" fill="rgb(217,134,39)"/><text x="1178.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1175" y="244" width="3" height="15" fill="rgb(245,29,34)"/><text x="1178.00" y="254.50"></text></g><g><title>array_add (number.c) (4 samples, 0.80%)</title><rect x="1171" y="180" width="9" height="15" fill="rgb(233,142,19)"/><text x="1174.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1175" y="196" width="5" height="15" fill="rgb(234,76,2)"/><text x="1178.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1175" y="212" width="5" height="15" fill="rgb(254,25,51)"/><text x="1178.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1178" y="228" width="2" height="15" fill="rgb(253,194,50)"/><text x="1181.00" y="238.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (268 samples, 53.82%)</title><rect x="547" y="100" width="635" height="15" fill="rgb(210,195,22)"/><text x="550.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (268 samples, 53.82%)</title><rect x="547" y="116" width="635" height="15" fill="rgb(241,136,44)"/><text x="550.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (268 samples, 53.82%)</title><rect x="547" y="132" width="635" height="15" fill="rgb(252,167,51)"/><text x="550.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (268 samples, 53.82%)</title><rect x="547" y="148" width="635" height="15" fill="rgb(239,192,1)"/><text x="550.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (265 samples, 53.21%)</title><rect x="554" y="164" width="628" height="15" fill="rgb(249,41,8)"/><text x="557.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="1180" y="180" width="2" height="15" fill="rgb(206,47,28)"/><text x="1183.00" y="190.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="1182" y="228" width="3" height="15" fill="rgb(215,111,38)"/><text x="1185.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="1182" y="244" width="3" height="15" fill="rgb(227,88,14)"/><text x="1185.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="1182" y="260" width="3" height="15" fill="rgb(242,199,21)"/><text x="1185.00" y="270.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (270 samples, 54.22%)</title><rect x="547" y="68" width="640" height="15" fill="rgb(214,0,10)"/><text x="550.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (270 samples, 54.22%)</title><rect x="547" y="84" width="640" height="15" fill="rgb(207,142,49)"/><text x="550.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="1182" y="100" width="5" height="15" fill="rgb(218,110,3)"/><text x="1185.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="1182" y="116" width="5" height="15" fill="rgb(215,155,36)"/><text x="1185.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="1182" y="132" width="5" height="15" fill="rgb(250,216,4)"/><text x="1185.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.40%)</title><rect x="1182" y="148" width="5" height="15" fill="rgb(241,82,38)"/><text x="1185.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.40%)</title><rect x="1182" y="164" width="5" height="15" fill="rgb(249,116,31)"/><text x="1185.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.40%)</title><rect x="1182" y="180" width="5" height="15" fill="rgb(245,13,45)"/><text x="1185.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.40%)</title><rect x="1182" y="196" width="5" height="15" fill="rgb(213,182,52)"/><text x="1185.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.40%)</title><rect x="1182" y="212" width="5" height="15" fill="rgb(217,44,9)"/><text x="1185.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(214,84,40)"/><text x="1188.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(239,70,14)"/><text x="1188.00" y="254.50"></text></g><g><title>sub (re.py) (1 samples, 0.20%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(237,29,25)"/><text x="1188.00" y="270.50"></text></g><g><title>_compile (re.py) (1 samples, 0.20%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(230,22,37)"/><text x="1188.00" y="286.50"></text></g><g><title>all (498 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,175,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (498 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,211,23)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (1 samples, 0.20%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(214,79,1)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (1 samples, 0.20%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(222,38,44)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(230,132,25)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(253,23,41)"/><text x="1190.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(232,197,53)"/><text x="1190.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(238,121,49)"/><text x="1190.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(211,20,7)"/><text x="1190.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.20%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(247,23,53)"/><text x="1190.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.20%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(227,2,25)"/><text x="1190.00" y="206.50"></text></g><g><title>0x7efd66789b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(221,30,44)"/><text x="1190.00" y="222.50"></text></g><g><title>0x7efd667baee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(248,173,25)"/><text x="1190.00" y="238.50"></text></g><g><title>0x7efd669eb1aa (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(206,134,31)"/><text x="1190.00" y="254.50"></text></g><g><title>0x7efd669eaef6 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(211,27,4)"/><text x="1190.00" y="270.50"></text></g></g></svg>