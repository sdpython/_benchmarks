<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(207,56,45)"/><text x="13.00" y="62.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(253,214,26)"/><text x="13.00" y="78.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(228,57,27)"/><text x="13.00" y="94.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(251,164,19)"/><text x="13.00" y="110.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(210,45,32)"/><text x="13.00" y="126.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(253,27,20)"/><text x="13.00" y="142.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(213,4,37)"/><text x="13.00" y="158.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(218,189,33)"/><text x="13.00" y="174.50"></text></g><g><title>0x7f37856eb7a2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(207,140,40)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f37856eb7d7 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(225,183,22)"/><text x="13.00" y="206.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(241,71,6)"/><text x="13.00" y="222.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(229,229,39)"/><text x="13.00" y="238.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(212,89,27)"/><text x="13.00" y="254.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(232,63,5)"/><text x="13.00" y="270.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(211,4,13)"/><text x="13.00" y="286.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(212,209,12)"/><text x="13.00" y="302.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(232,100,48)"/><text x="17.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(210,109,30)"/><text x="17.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(216,27,30)"/><text x="17.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(233,129,16)"/><text x="17.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(251,19,10)"/><text x="17.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="12" y="868" width="7" height="15" fill="rgb(235,71,54)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="12" y="884" width="7" height="15" fill="rgb(239,198,41)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="12" y="900" width="7" height="15" fill="rgb(254,49,4)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="12" y="916" width="7" height="15" fill="rgb(231,146,40)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="12" y="932" width="7" height="15" fill="rgb(228,146,34)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="12" y="948" width="7" height="15" fill="rgb(236,182,4)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="12" y="964" width="7" height="15" fill="rgb(238,196,52)"/><text x="15.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(211,50,13)"/><text x="19.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(222,187,20)"/><text x="19.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(211,204,29)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(227,58,13)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(213,95,21)"/><text x="22.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(219,18,29)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(220,171,2)"/><text x="22.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.20%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(249,51,49)"/><text x="22.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(213,6,37)"/><text x="22.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(216,36,41)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(251,93,8)"/><text x="26.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.38%)</title><rect x="12" y="836" width="16" height="15" fill="rgb(209,4,49)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.38%)</title><rect x="12" y="852" width="16" height="15" fill="rgb(208,26,32)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.79%)</title><rect x="19" y="868" width="9" height="15" fill="rgb(220,111,15)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 0.79%)</title><rect x="19" y="884" width="9" height="15" fill="rgb(215,174,23)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="21" y="900" width="7" height="15" fill="rgb(234,189,49)"/><text x="24.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="23" y="916" width="5" height="15" fill="rgb(222,41,28)"/><text x="26.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="23" y="932" width="5" height="15" fill="rgb(236,110,29)"/><text x="26.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="23" y="948" width="5" height="15" fill="rgb(227,47,44)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.39%)</title><rect x="23" y="964" width="5" height="15" fill="rgb(246,163,53)"/><text x="26.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(252,156,17)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 1.58%)</title><rect x="12" y="292" width="18" height="15" fill="rgb(254,8,19)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="308" width="18" height="15" fill="rgb(225,136,48)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="324" width="18" height="15" fill="rgb(225,133,40)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="340" width="18" height="15" fill="rgb(216,5,29)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="12" y="356" width="18" height="15" fill="rgb(205,94,22)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="372" width="18" height="15" fill="rgb(211,44,19)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 1.58%)</title><rect x="12" y="388" width="18" height="15" fill="rgb(224,147,8)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="404" width="18" height="15" fill="rgb(242,196,38)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="420" width="18" height="15" fill="rgb(242,118,8)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="436" width="18" height="15" fill="rgb(237,184,26)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="12" y="452" width="18" height="15" fill="rgb(252,145,31)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="468" width="18" height="15" fill="rgb(218,185,34)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 1.58%)</title><rect x="12" y="484" width="18" height="15" fill="rgb(242,65,47)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="500" width="18" height="15" fill="rgb(237,95,47)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="516" width="18" height="15" fill="rgb(235,198,3)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="532" width="18" height="15" fill="rgb(205,158,43)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="12" y="548" width="18" height="15" fill="rgb(232,181,53)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="564" width="18" height="15" fill="rgb(206,128,35)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 1.58%)</title><rect x="12" y="580" width="18" height="15" fill="rgb(228,75,52)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="596" width="18" height="15" fill="rgb(212,223,7)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="612" width="18" height="15" fill="rgb(231,89,15)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="628" width="18" height="15" fill="rgb(224,156,22)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="644" width="18" height="15" fill="rgb(218,2,9)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="660" width="18" height="15" fill="rgb(253,131,3)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="676" width="18" height="15" fill="rgb(209,107,11)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="12" y="692" width="18" height="15" fill="rgb(214,64,11)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="708" width="18" height="15" fill="rgb(208,110,32)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 1.58%)</title><rect x="12" y="724" width="18" height="15" fill="rgb(206,200,6)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="740" width="18" height="15" fill="rgb(242,125,5)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="756" width="18" height="15" fill="rgb(248,219,30)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="772" width="18" height="15" fill="rgb(226,14,36)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="12" y="788" width="18" height="15" fill="rgb(250,123,32)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="12" y="804" width="18" height="15" fill="rgb(245,152,34)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 1.58%)</title><rect x="12" y="820" width="18" height="15" fill="rgb(232,178,2)"/><text x="15.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(252,104,22)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(227,114,14)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(223,114,40)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(224,143,4)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(205,41,1)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.20%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(214,116,32)"/><text x="31.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.20%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(228,59,2)"/><text x="31.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.20%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(213,129,19)"/><text x="31.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.20%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(219,119,27)"/><text x="31.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.20%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(252,179,5)"/><text x="31.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(249,153,49)"/><text x="31.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(226,64,42)"/><text x="31.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(214,154,28)"/><text x="31.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(206,162,52)"/><text x="31.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(254,87,37)"/><text x="31.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(205,109,8)"/><text x="31.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(233,146,38)"/><text x="31.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(222,117,15)"/><text x="31.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(208,17,47)"/><text x="31.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(254,107,7)"/><text x="31.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(251,202,53)"/><text x="31.00" y="1166.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(213,84,0)"/><text x="31.00" y="1182.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(221,75,16)"/><text x="31.00" y="1198.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.20%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(250,103,20)"/><text x="31.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.78%)</title><rect x="12" y="196" width="21" height="15" fill="rgb(224,27,7)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.78%)</title><rect x="12" y="212" width="21" height="15" fill="rgb(207,28,23)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.78%)</title><rect x="12" y="228" width="21" height="15" fill="rgb(210,128,52)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.78%)</title><rect x="12" y="244" width="21" height="15" fill="rgb(223,184,32)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.78%)</title><rect x="12" y="260" width="21" height="15" fill="rgb(253,120,1)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.78%)</title><rect x="12" y="276" width="21" height="15" fill="rgb(224,100,45)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="292" width="3" height="15" fill="rgb(219,195,49)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="308" width="3" height="15" fill="rgb(225,140,3)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="324" width="3" height="15" fill="rgb(241,151,25)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="340" width="3" height="15" fill="rgb(226,110,33)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="356" width="3" height="15" fill="rgb(241,132,11)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="372" width="3" height="15" fill="rgb(222,127,20)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.20%)</title><rect x="30" y="388" width="3" height="15" fill="rgb(230,121,31)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="404" width="3" height="15" fill="rgb(222,200,28)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="420" width="3" height="15" fill="rgb(246,159,12)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="436" width="3" height="15" fill="rgb(213,119,33)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="452" width="3" height="15" fill="rgb(215,89,11)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="468" width="3" height="15" fill="rgb(244,136,17)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="484" width="3" height="15" fill="rgb(249,169,36)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="500" width="3" height="15" fill="rgb(243,186,25)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="516" width="3" height="15" fill="rgb(227,133,35)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="532" width="3" height="15" fill="rgb(245,208,7)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="548" width="3" height="15" fill="rgb(240,7,51)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="564" width="3" height="15" fill="rgb(239,61,36)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.20%)</title><rect x="30" y="580" width="3" height="15" fill="rgb(228,211,21)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="596" width="3" height="15" fill="rgb(234,57,46)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="612" width="3" height="15" fill="rgb(205,173,47)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="628" width="3" height="15" fill="rgb(241,167,45)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="644" width="3" height="15" fill="rgb(234,214,22)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="660" width="3" height="15" fill="rgb(206,220,12)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="676" width="3" height="15" fill="rgb(211,175,29)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="692" width="3" height="15" fill="rgb(223,156,52)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="708" width="3" height="15" fill="rgb(241,216,1)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(241,115,27)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(231,121,53)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(206,189,48)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.20%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(210,28,26)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(222,150,34)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(242,72,28)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(219,26,34)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(233,212,17)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(246,176,43)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(253,32,26)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(231,28,33)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.20%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(233,200,4)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(243,95,24)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(234,10,9)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(214,107,48)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(213,13,19)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="980" width="3" height="15" fill="rgb(225,175,30)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.20%)</title><rect x="30" y="996" width="3" height="15" fill="rgb(205,160,4)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1012" width="3" height="15" fill="rgb(243,21,53)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1028" width="3" height="15" fill="rgb(213,81,23)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1044" width="3" height="15" fill="rgb(225,163,19)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1060" width="3" height="15" fill="rgb(235,51,39)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1076" width="3" height="15" fill="rgb(216,61,22)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1092" width="3" height="15" fill="rgb(220,211,49)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1108" width="3" height="15" fill="rgb(218,141,22)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="1124" width="3" height="15" fill="rgb(210,60,48)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1140" width="3" height="15" fill="rgb(210,104,24)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1156" width="3" height="15" fill="rgb(224,92,47)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1172" width="3" height="15" fill="rgb(229,141,35)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1188" width="3" height="15" fill="rgb(218,67,36)"/><text x="33.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1204" width="3" height="15" fill="rgb(219,120,44)"/><text x="33.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.20%)</title><rect x="30" y="1220" width="3" height="15" fill="rgb(241,8,9)"/><text x="33.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1236" width="3" height="15" fill="rgb(229,198,42)"/><text x="33.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1252" width="3" height="15" fill="rgb(241,146,36)"/><text x="33.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1268" width="3" height="15" fill="rgb(212,55,9)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1284" width="3" height="15" fill="rgb(221,169,44)"/><text x="33.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1300" width="3" height="15" fill="rgb(208,136,53)"/><text x="33.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="30" y="1316" width="3" height="15" fill="rgb(243,18,8)"/><text x="33.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="30" y="1332" width="3" height="15" fill="rgb(235,137,28)"/><text x="33.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py) (1 samples, 0.20%)</title><rect x="30" y="1348" width="3" height="15" fill="rgb(208,55,41)"/><text x="33.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py) (1 samples, 0.20%)</title><rect x="30" y="1364" width="3" height="15" fill="rgb(231,188,18)"/><text x="33.00" y="1374.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.20%)</title><rect x="30" y="1380" width="3" height="15" fill="rgb(232,185,46)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;listcomp&gt; (scipy/_lib/_util.py) (1 samples, 0.20%)</title><rect x="30" y="1396" width="3" height="15" fill="rgb(249,149,25)"/><text x="33.00" y="1406.50"></text></g><g><title>default (inspect.py) (1 samples, 0.20%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(249,218,37)"/><text x="33.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="484" width="7" height="15" fill="rgb(238,60,32)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="500" width="7" height="15" fill="rgb(249,37,44)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="516" width="7" height="15" fill="rgb(218,119,45)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="532" width="7" height="15" fill="rgb(253,53,39)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="548" width="7" height="15" fill="rgb(211,69,54)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="564" width="7" height="15" fill="rgb(252,200,40)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.59%)</title><rect x="33" y="580" width="7" height="15" fill="rgb(214,210,40)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="596" width="7" height="15" fill="rgb(245,44,27)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="612" width="7" height="15" fill="rgb(205,91,52)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="628" width="7" height="15" fill="rgb(210,32,54)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="644" width="7" height="15" fill="rgb(251,164,14)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="660" width="7" height="15" fill="rgb(207,139,20)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.59%)</title><rect x="33" y="676" width="7" height="15" fill="rgb(221,131,22)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="692" width="7" height="15" fill="rgb(221,155,22)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="708" width="7" height="15" fill="rgb(213,65,17)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="724" width="7" height="15" fill="rgb(225,70,12)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="740" width="7" height="15" fill="rgb(227,25,30)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="756" width="7" height="15" fill="rgb(238,61,19)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.59%)</title><rect x="33" y="772" width="7" height="15" fill="rgb(214,97,38)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="788" width="7" height="15" fill="rgb(248,195,39)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="804" width="7" height="15" fill="rgb(207,32,17)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="820" width="7" height="15" fill="rgb(246,221,11)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="836" width="7" height="15" fill="rgb(235,28,18)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="852" width="7" height="15" fill="rgb(245,185,33)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.59%)</title><rect x="33" y="868" width="7" height="15" fill="rgb(217,112,46)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="884" width="7" height="15" fill="rgb(245,178,22)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="900" width="7" height="15" fill="rgb(239,87,27)"/><text x="36.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="916" width="7" height="15" fill="rgb(225,222,17)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="932" width="7" height="15" fill="rgb(238,220,19)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="948" width="7" height="15" fill="rgb(232,104,10)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="964" width="7" height="15" fill="rgb(245,25,8)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="980" width="7" height="15" fill="rgb(226,6,21)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="996" width="7" height="15" fill="rgb(227,78,18)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.59%)</title><rect x="33" y="1012" width="7" height="15" fill="rgb(233,200,39)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1028" width="7" height="15" fill="rgb(225,32,10)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1044" width="7" height="15" fill="rgb(219,72,37)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1060" width="7" height="15" fill="rgb(205,137,50)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="1076" width="7" height="15" fill="rgb(228,40,32)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1092" width="7" height="15" fill="rgb(228,110,43)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.59%)</title><rect x="33" y="1108" width="7" height="15" fill="rgb(250,94,35)"/><text x="36.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1124" width="7" height="15" fill="rgb(214,206,26)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1140" width="7" height="15" fill="rgb(211,6,43)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1156" width="7" height="15" fill="rgb(232,191,36)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1172" width="7" height="15" fill="rgb(234,58,52)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1188" width="7" height="15" fill="rgb(206,175,7)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="1204" width="7" height="15" fill="rgb(216,225,44)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1220" width="7" height="15" fill="rgb(220,109,12)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.59%)</title><rect x="33" y="1236" width="7" height="15" fill="rgb(240,220,34)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1252" width="7" height="15" fill="rgb(235,172,47)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1268" width="7" height="15" fill="rgb(232,197,45)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1284" width="7" height="15" fill="rgb(220,35,54)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1300" width="7" height="15" fill="rgb(211,51,13)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1316" width="7" height="15" fill="rgb(238,44,4)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="1332" width="7" height="15" fill="rgb(225,67,23)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1348" width="7" height="15" fill="rgb(238,94,11)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.59%)</title><rect x="33" y="1364" width="7" height="15" fill="rgb(240,201,50)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1380" width="7" height="15" fill="rgb(218,144,14)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1396" width="7" height="15" fill="rgb(206,52,28)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1412" width="7" height="15" fill="rgb(249,138,39)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="33" y="1428" width="7" height="15" fill="rgb(220,196,53)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="33" y="1444" width="7" height="15" fill="rgb(208,85,42)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.59%)</title><rect x="33" y="1460" width="7" height="15" fill="rgb(215,169,6)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.59%)</title><rect x="33" y="1476" width="7" height="15" fill="rgb(206,54,20)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.59%)</title><rect x="33" y="1492" width="7" height="15" fill="rgb(244,176,13)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.59%)</title><rect x="33" y="1508" width="7" height="15" fill="rgb(239,6,40)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.59%)</title><rect x="33" y="1524" width="7" height="15" fill="rgb(243,227,15)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.59%)</title><rect x="33" y="1540" width="7" height="15" fill="rgb(205,111,23)"/><text x="36.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.59%)</title><rect x="33" y="1556" width="7" height="15" fill="rgb(228,14,52)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.59%)</title><rect x="33" y="1572" width="7" height="15" fill="rgb(241,190,9)"/><text x="36.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.20%)</title><rect x="37" y="1588" width="3" height="15" fill="rgb(235,192,13)"/><text x="40.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.20%)</title><rect x="37" y="1604" width="3" height="15" fill="rgb(213,184,43)"/><text x="40.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.20%)</title><rect x="40" y="628" width="2" height="15" fill="rgb(231,139,37)"/><text x="43.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="644" width="2" height="15" fill="rgb(238,203,10)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="660" width="2" height="15" fill="rgb(238,101,30)"/><text x="43.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="676" width="2" height="15" fill="rgb(240,8,44)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="692" width="2" height="15" fill="rgb(232,152,24)"/><text x="43.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="708" width="2" height="15" fill="rgb(234,202,36)"/><text x="43.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="724" width="2" height="15" fill="rgb(247,220,33)"/><text x="43.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="740" width="2" height="15" fill="rgb(211,69,14)"/><text x="43.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.20%)</title><rect x="40" y="756" width="2" height="15" fill="rgb(212,30,2)"/><text x="43.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.20%)</title><rect x="40" y="772" width="2" height="15" fill="rgb(220,152,28)"/><text x="43.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.20%)</title><rect x="40" y="788" width="2" height="15" fill="rgb(244,120,10)"/><text x="43.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.20%)</title><rect x="40" y="804" width="2" height="15" fill="rgb(219,132,28)"/><text x="43.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.20%)</title><rect x="40" y="820" width="2" height="15" fill="rgb(225,156,48)"/><text x="43.00" y="830.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.20%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(242,117,28)"/><text x="43.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.20%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(214,180,46)"/><text x="43.00" y="862.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.20%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(216,149,12)"/><text x="43.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.20%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(225,57,5)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(226,144,13)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(241,12,3)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(245,191,40)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(242,200,15)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(241,111,42)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.39%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(251,63,26)"/><text x="45.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(219,214,21)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(230,67,46)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(218,21,40)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(210,48,26)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(237,149,21)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (2 samples, 0.39%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(209,14,25)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(249,209,6)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(216,48,48)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1252" width="5" height="15" fill="rgb(213,121,4)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1268" width="5" height="15" fill="rgb(221,43,12)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1284" width="5" height="15" fill="rgb(254,57,2)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (2 samples, 0.39%)</title><rect x="42" y="1300" width="5" height="15" fill="rgb(244,167,39)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1316" width="5" height="15" fill="rgb(252,22,10)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1332" width="5" height="15" fill="rgb(212,208,50)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1348" width="5" height="15" fill="rgb(244,16,31)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1364" width="5" height="15" fill="rgb(247,78,1)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1380" width="5" height="15" fill="rgb(238,65,42)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (2 samples, 0.39%)</title><rect x="42" y="1396" width="5" height="15" fill="rgb(250,140,51)"/><text x="45.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1412" width="5" height="15" fill="rgb(225,182,52)"/><text x="45.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1428" width="5" height="15" fill="rgb(215,103,33)"/><text x="45.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="42" y="1444" width="5" height="15" fill="rgb(235,36,43)"/><text x="45.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1460" width="5" height="15" fill="rgb(235,180,54)"/><text x="45.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1476" width="5" height="15" fill="rgb(239,225,12)"/><text x="45.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="42" y="1492" width="5" height="15" fill="rgb(209,208,19)"/><text x="45.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.59%)</title><rect x="42" y="1012" width="7" height="15" fill="rgb(228,34,41)"/><text x="45.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="47" y="1028" width="2" height="15" fill="rgb(234,32,17)"/><text x="50.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="47" y="1044" width="2" height="15" fill="rgb(242,110,12)"/><text x="50.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.20%)</title><rect x="47" y="1060" width="2" height="15" fill="rgb(207,193,39)"/><text x="50.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.20%)</title><rect x="47" y="1076" width="2" height="15" fill="rgb(243,134,30)"/><text x="50.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.20%)</title><rect x="47" y="1092" width="2" height="15" fill="rgb(206,24,46)"/><text x="50.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.20%)</title><rect x="47" y="1108" width="2" height="15" fill="rgb(213,222,42)"/><text x="50.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="47" y="1124" width="2" height="15" fill="rgb(243,135,35)"/><text x="50.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.58%)</title><rect x="33" y="340" width="18" height="15" fill="rgb(214,197,2)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="356" width="18" height="15" fill="rgb(219,74,32)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="372" width="18" height="15" fill="rgb(210,58,40)"/><text x="36.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="388" width="18" height="15" fill="rgb(228,4,8)"/><text x="36.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="33" y="404" width="18" height="15" fill="rgb(227,175,13)"/><text x="36.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="420" width="18" height="15" fill="rgb(223,147,27)"/><text x="36.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.58%)</title><rect x="33" y="436" width="18" height="15" fill="rgb(247,84,34)"/><text x="36.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="452" width="18" height="15" fill="rgb(209,142,31)"/><text x="36.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="33" y="468" width="18" height="15" fill="rgb(249,137,41)"/><text x="36.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="484" width="11" height="15" fill="rgb(239,89,47)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.99%)</title><rect x="40" y="500" width="11" height="15" fill="rgb(226,190,20)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="516" width="11" height="15" fill="rgb(216,67,30)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 0.99%)</title><rect x="40" y="532" width="11" height="15" fill="rgb(253,165,38)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="548" width="11" height="15" fill="rgb(236,157,43)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="564" width="11" height="15" fill="rgb(212,24,45)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="580" width="11" height="15" fill="rgb(221,37,27)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.99%)</title><rect x="40" y="596" width="11" height="15" fill="rgb(237,134,46)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="40" y="612" width="11" height="15" fill="rgb(228,178,24)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.79%)</title><rect x="42" y="628" width="9" height="15" fill="rgb(216,187,30)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="644" width="9" height="15" fill="rgb(207,113,47)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="660" width="9" height="15" fill="rgb(235,107,53)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="676" width="9" height="15" fill="rgb(238,11,9)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="42" y="692" width="9" height="15" fill="rgb(237,65,0)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="708" width="9" height="15" fill="rgb(221,118,41)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.79%)</title><rect x="42" y="724" width="9" height="15" fill="rgb(241,188,50)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="740" width="9" height="15" fill="rgb(246,38,37)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="756" width="9" height="15" fill="rgb(235,12,22)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="772" width="9" height="15" fill="rgb(211,130,17)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="42" y="788" width="9" height="15" fill="rgb(237,92,36)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="804" width="9" height="15" fill="rgb(225,78,16)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.79%)</title><rect x="42" y="820" width="9" height="15" fill="rgb(219,11,24)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="836" width="9" height="15" fill="rgb(237,144,38)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="852" width="9" height="15" fill="rgb(217,132,34)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="868" width="9" height="15" fill="rgb(229,155,44)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="42" y="884" width="9" height="15" fill="rgb(223,18,14)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="900" width="9" height="15" fill="rgb(211,8,16)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.79%)</title><rect x="42" y="916" width="9" height="15" fill="rgb(236,213,19)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="932" width="9" height="15" fill="rgb(231,90,29)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="948" width="9" height="15" fill="rgb(236,98,13)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="964" width="9" height="15" fill="rgb(245,96,0)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="42" y="980" width="9" height="15" fill="rgb(239,203,2)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="42" y="996" width="9" height="15" fill="rgb(237,12,25)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.20%)</title><rect x="49" y="1012" width="2" height="15" fill="rgb(250,175,22)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1028" width="2" height="15" fill="rgb(218,191,6)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1044" width="2" height="15" fill="rgb(210,173,3)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1060" width="2" height="15" fill="rgb(231,163,1)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="1076" width="2" height="15" fill="rgb(234,135,51)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1092" width="2" height="15" fill="rgb(226,133,51)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/series.py) (1 samples, 0.20%)</title><rect x="49" y="1108" width="2" height="15" fill="rgb(253,103,15)"/><text x="52.00" y="1118.50"></text></g><g><title>SparseSeries (pandas/core/sparse/series.py) (1 samples, 0.20%)</title><rect x="49" y="1124" width="2" height="15" fill="rgb(222,161,35)"/><text x="52.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.20%)</title><rect x="49" y="1140" width="2" height="15" fill="rgb(214,42,12)"/><text x="52.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.20%)</title><rect x="49" y="1156" width="2" height="15" fill="rgb(212,112,3)"/><text x="52.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.20%)</title><rect x="49" y="1172" width="2" height="15" fill="rgb(235,145,24)"/><text x="52.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="49" y="1188" width="2" height="15" fill="rgb(225,135,44)"/><text x="52.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="49" y="1204" width="2" height="15" fill="rgb(232,15,46)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="51" y="628" width="3" height="15" fill="rgb(254,136,21)"/><text x="54.00" y="638.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="51" y="644" width="3" height="15" fill="rgb(210,42,37)"/><text x="54.00" y="654.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="51" y="660" width="3" height="15" fill="rgb(236,218,9)"/><text x="54.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="51" y="676" width="3" height="15" fill="rgb(242,141,37)"/><text x="54.00" y="686.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="51" y="692" width="3" height="15" fill="rgb(211,204,52)"/><text x="54.00" y="702.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="51" y="708" width="3" height="15" fill="rgb(212,214,38)"/><text x="54.00" y="718.50"></text></g><g><title>0x7f37973bf186 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="51" y="724" width="3" height="15" fill="rgb(247,59,25)"/><text x="54.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 1.97%)</title><rect x="33" y="244" width="23" height="15" fill="rgb(219,122,6)"/><text x="36.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.97%)</title><rect x="33" y="260" width="23" height="15" fill="rgb(237,140,31)"/><text x="36.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.97%)</title><rect x="33" y="276" width="23" height="15" fill="rgb(240,46,4)"/><text x="36.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.97%)</title><rect x="33" y="292" width="23" height="15" fill="rgb(213,67,49)"/><text x="36.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.97%)</title><rect x="33" y="308" width="23" height="15" fill="rgb(231,19,20)"/><text x="36.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.97%)</title><rect x="33" y="324" width="23" height="15" fill="rgb(250,49,23)"/><text x="36.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.39%)</title><rect x="51" y="340" width="5" height="15" fill="rgb(212,159,18)"/><text x="54.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="356" width="5" height="15" fill="rgb(236,224,26)"/><text x="54.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="372" width="5" height="15" fill="rgb(219,57,11)"/><text x="54.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="388" width="5" height="15" fill="rgb(211,65,43)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="404" width="5" height="15" fill="rgb(244,1,12)"/><text x="54.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="420" width="5" height="15" fill="rgb(248,189,40)"/><text x="54.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="436" width="5" height="15" fill="rgb(235,1,29)"/><text x="54.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="51" y="452" width="5" height="15" fill="rgb(234,7,7)"/><text x="54.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="468" width="5" height="15" fill="rgb(210,17,15)"/><text x="54.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.39%)</title><rect x="51" y="484" width="5" height="15" fill="rgb(229,124,49)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="500" width="5" height="15" fill="rgb(249,89,16)"/><text x="54.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="516" width="5" height="15" fill="rgb(233,205,13)"/><text x="54.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="532" width="5" height="15" fill="rgb(207,136,19)"/><text x="54.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="51" y="548" width="5" height="15" fill="rgb(235,160,15)"/><text x="54.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="564" width="5" height="15" fill="rgb(215,41,1)"/><text x="54.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.39%)</title><rect x="51" y="580" width="5" height="15" fill="rgb(209,43,47)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="596" width="5" height="15" fill="rgb(221,177,19)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="51" y="612" width="5" height="15" fill="rgb(233,82,15)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="628" width="2" height="15" fill="rgb(226,214,37)"/><text x="57.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="54" y="644" width="2" height="15" fill="rgb(214,19,40)"/><text x="57.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="54" y="660" width="2" height="15" fill="rgb(209,181,20)"/><text x="57.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="54" y="676" width="2" height="15" fill="rgb(245,185,20)"/><text x="57.00" y="686.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="54" y="692" width="2" height="15" fill="rgb(250,186,0)"/><text x="57.00" y="702.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.20%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(214,182,50)"/><text x="59.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(229,2,16)"/><text x="59.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(252,209,11)"/><text x="59.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="292" width="2" height="15" fill="rgb(243,224,30)"/><text x="59.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="308" width="2" height="15" fill="rgb(252,119,44)"/><text x="59.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(240,142,29)"/><text x="59.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(219,61,11)"/><text x="59.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="356" width="2" height="15" fill="rgb(224,26,27)"/><text x="59.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.20%)</title><rect x="56" y="372" width="2" height="15" fill="rgb(221,195,51)"/><text x="59.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="388" width="2" height="15" fill="rgb(213,216,42)"/><text x="59.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="404" width="2" height="15" fill="rgb(241,198,32)"/><text x="59.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="420" width="2" height="15" fill="rgb(216,126,19)"/><text x="59.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="56" y="436" width="2" height="15" fill="rgb(217,183,2)"/><text x="59.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="56" y="452" width="2" height="15" fill="rgb(235,133,37)"/><text x="59.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py) (1 samples, 0.20%)</title><rect x="56" y="468" width="2" height="15" fill="rgb(237,178,26)"/><text x="59.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.20%)</title><rect x="56" y="484" width="2" height="15" fill="rgb(226,156,21)"/><text x="59.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="324" width="3" height="15" fill="rgb(214,193,45)"/><text x="61.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.20%)</title><rect x="58" y="340" width="3" height="15" fill="rgb(233,142,25)"/><text x="61.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="356" width="3" height="15" fill="rgb(216,229,13)"/><text x="61.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="372" width="3" height="15" fill="rgb(252,179,36)"/><text x="61.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="388" width="3" height="15" fill="rgb(209,15,30)"/><text x="61.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="404" width="3" height="15" fill="rgb(216,72,9)"/><text x="61.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="420" width="3" height="15" fill="rgb(242,175,5)"/><text x="61.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.20%)</title><rect x="58" y="436" width="3" height="15" fill="rgb(231,56,15)"/><text x="61.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="452" width="3" height="15" fill="rgb(217,17,40)"/><text x="61.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="468" width="3" height="15" fill="rgb(219,147,44)"/><text x="61.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="484" width="3" height="15" fill="rgb(215,151,41)"/><text x="61.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="500" width="3" height="15" fill="rgb(235,13,34)"/><text x="61.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="516" width="3" height="15" fill="rgb(220,201,0)"/><text x="61.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.20%)</title><rect x="58" y="532" width="3" height="15" fill="rgb(212,24,10)"/><text x="61.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="548" width="3" height="15" fill="rgb(205,59,26)"/><text x="61.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="564" width="3" height="15" fill="rgb(217,38,49)"/><text x="61.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="580" width="3" height="15" fill="rgb(244,206,40)"/><text x="61.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="596" width="3" height="15" fill="rgb(210,179,21)"/><text x="61.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="612" width="3" height="15" fill="rgb(221,7,31)"/><text x="61.00" y="622.50"></text></g><g><title>0x7f3771265373 (?) (1 samples, 0.20%)</title><rect x="58" y="628" width="3" height="15" fill="rgb(224,43,45)"/><text x="61.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="644" width="3" height="15" fill="rgb(208,219,33)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="660" width="3" height="15" fill="rgb(224,199,14)"/><text x="61.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="676" width="3" height="15" fill="rgb(236,226,23)"/><text x="61.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="692" width="3" height="15" fill="rgb(225,117,0)"/><text x="61.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="708" width="3" height="15" fill="rgb(218,168,38)"/><text x="61.00" y="718.50"></text></g><g><title>0x7f3771028eea (?) (1 samples, 0.20%)</title><rect x="58" y="724" width="3" height="15" fill="rgb(229,228,41)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="740" width="3" height="15" fill="rgb(210,33,23)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="756" width="3" height="15" fill="rgb(231,224,25)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="772" width="3" height="15" fill="rgb(218,135,12)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="788" width="3" height="15" fill="rgb(217,62,6)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="804" width="3" height="15" fill="rgb(242,41,15)"/><text x="61.00" y="814.50"></text></g><g><title>0x7f3770dc1887 (?) (1 samples, 0.20%)</title><rect x="58" y="820" width="3" height="15" fill="rgb(242,38,42)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="836" width="3" height="15" fill="rgb(234,169,3)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="852" width="3" height="15" fill="rgb(250,226,14)"/><text x="61.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="868" width="3" height="15" fill="rgb(210,224,43)"/><text x="61.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="884" width="3" height="15" fill="rgb(225,188,35)"/><text x="61.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="900" width="3" height="15" fill="rgb(205,170,28)"/><text x="61.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="916" width="3" height="15" fill="rgb(237,57,15)"/><text x="61.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="932" width="3" height="15" fill="rgb(221,152,19)"/><text x="61.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="948" width="3" height="15" fill="rgb(236,184,40)"/><text x="61.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.20%)</title><rect x="58" y="964" width="3" height="15" fill="rgb(225,44,13)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="980" width="3" height="15" fill="rgb(252,132,27)"/><text x="61.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="996" width="3" height="15" fill="rgb(240,196,36)"/><text x="61.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1012" width="3" height="15" fill="rgb(212,208,52)"/><text x="61.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1028" width="3" height="15" fill="rgb(232,68,3)"/><text x="61.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1044" width="3" height="15" fill="rgb(228,154,26)"/><text x="61.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.20%)</title><rect x="58" y="1060" width="3" height="15" fill="rgb(230,100,24)"/><text x="61.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1076" width="3" height="15" fill="rgb(245,202,20)"/><text x="61.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1092" width="3" height="15" fill="rgb(251,169,38)"/><text x="61.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1108" width="3" height="15" fill="rgb(213,201,54)"/><text x="61.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1124" width="3" height="15" fill="rgb(250,26,10)"/><text x="61.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1140" width="3" height="15" fill="rgb(248,206,10)"/><text x="61.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.20%)</title><rect x="58" y="1156" width="3" height="15" fill="rgb(232,100,43)"/><text x="61.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1172" width="3" height="15" fill="rgb(220,70,35)"/><text x="61.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1188" width="3" height="15" fill="rgb(227,4,18)"/><text x="61.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1204" width="3" height="15" fill="rgb(210,27,40)"/><text x="61.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1220" width="3" height="15" fill="rgb(229,67,13)"/><text x="61.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1236" width="3" height="15" fill="rgb(235,88,13)"/><text x="61.00" y="1246.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1252" width="3" height="15" fill="rgb(244,98,40)"/><text x="61.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="68" width="51" height="15" fill="rgb(210,164,48)"/><text x="15.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="84" width="51" height="15" fill="rgb(243,141,24)"/><text x="15.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="100" width="51" height="15" fill="rgb(235,44,6)"/><text x="15.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 4.34%)</title><rect x="12" y="116" width="51" height="15" fill="rgb(207,122,46)"/><text x="15.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="132" width="51" height="15" fill="rgb(250,192,44)"/><text x="15.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (22 samples, 4.34%)</title><rect x="12" y="148" width="51" height="15" fill="rgb(249,85,3)"/><text x="15.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="164" width="51" height="15" fill="rgb(231,69,39)"/><text x="15.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 4.34%)</title><rect x="12" y="180" width="51" height="15" fill="rgb(244,163,23)"/><text x="15.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.56%)</title><rect x="33" y="196" width="30" height="15" fill="rgb(224,185,42)"/><text x="36.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.56%)</title><rect x="33" y="212" width="30" height="15" fill="rgb(237,229,13)"/><text x="36.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.56%)</title><rect x="33" y="228" width="30" height="15" fill="rgb(244,131,18)"/><text x="36.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.39%)</title><rect x="58" y="244" width="5" height="15" fill="rgb(207,9,51)"/><text x="61.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="58" y="260" width="5" height="15" fill="rgb(231,174,12)"/><text x="61.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="58" y="276" width="5" height="15" fill="rgb(239,186,29)"/><text x="61.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="58" y="292" width="5" height="15" fill="rgb(244,70,14)"/><text x="61.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="58" y="308" width="5" height="15" fill="rgb(242,112,22)"/><text x="61.00" y="318.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="61" y="324" width="2" height="15" fill="rgb(235,165,46)"/><text x="64.00" y="334.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(224,180,29)"/><text x="64.00" y="350.50"></text></g><g><title>0x7f375705cff9 (?) (1 samples, 0.20%)</title><rect x="63" y="212" width="2" height="15" fill="rgb(233,0,47)"/><text x="66.00" y="222.50"></text></g><g><title>0x7f3757057ef6 (?) (1 samples, 0.20%)</title><rect x="63" y="228" width="2" height="15" fill="rgb(220,149,22)"/><text x="66.00" y="238.50"></text></g><g><title>0x7f375704c962 (?) (1 samples, 0.20%)</title><rect x="63" y="244" width="2" height="15" fill="rgb(205,207,1)"/><text x="66.00" y="254.50"></text></g><g><title>0x7f37570807a7 (?) (1 samples, 0.20%)</title><rect x="63" y="260" width="2" height="15" fill="rgb(251,8,3)"/><text x="66.00" y="270.50"></text></g><g><title>0x7f3757080379 (?) (1 samples, 0.20%)</title><rect x="63" y="276" width="2" height="15" fill="rgb(211,161,54)"/><text x="66.00" y="286.50"></text></g><g><title>0x7f37574de8b8 (?) (1 samples, 0.20%)</title><rect x="63" y="292" width="2" height="15" fill="rgb(232,32,18)"/><text x="66.00" y="302.50"></text></g><g><title>0x7f37574dcc7f (?) (1 samples, 0.20%)</title><rect x="63" y="308" width="2" height="15" fill="rgb(247,16,30)"/><text x="66.00" y="318.50"></text></g><g><title>0x7f37574efceb (?) (1 samples, 0.20%)</title><rect x="63" y="324" width="2" height="15" fill="rgb(235,16,24)"/><text x="66.00" y="334.50"></text></g><g><title>0x7f375748e63a (?) (1 samples, 0.20%)</title><rect x="63" y="340" width="2" height="15" fill="rgb(239,53,4)"/><text x="66.00" y="350.50"></text></g><g><title>0x7f3757490360 (?) (1 samples, 0.20%)</title><rect x="63" y="356" width="2" height="15" fill="rgb(224,0,9)"/><text x="66.00" y="366.50"></text></g><g><title>0x7f37574900b7 (?) (1 samples, 0.20%)</title><rect x="63" y="372" width="2" height="15" fill="rgb(206,95,34)"/><text x="66.00" y="382.50"></text></g><g><title>0x7f379739ea47 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="63" y="388" width="2" height="15" fill="rgb(229,101,49)"/><text x="66.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="68" y="340" width="2" height="15" fill="rgb(223,134,2)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="68" y="356" width="2" height="15" fill="rgb(207,24,54)"/><text x="71.00" y="366.50"></text></g><g><title>0x7f379739e945 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="70" y="420" width="2" height="15" fill="rgb(254,34,40)"/><text x="73.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="70" y="340" width="5" height="15" fill="rgb(247,16,22)"/><text x="73.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="70" y="356" width="5" height="15" fill="rgb(238,69,11)"/><text x="73.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="70" y="372" width="5" height="15" fill="rgb(223,226,12)"/><text x="73.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="70" y="388" width="5" height="15" fill="rgb(237,205,30)"/><text x="73.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="70" y="404" width="5" height="15" fill="rgb(234,183,36)"/><text x="73.00" y="414.50"></text></g><g><title>0x7f379739ea53 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="72" y="420" width="3" height="15" fill="rgb(208,87,16)"/><text x="75.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="75" y="340" width="2" height="15" fill="rgb(251,228,7)"/><text x="78.00" y="350.50"></text></g><g><title>0x7f379739e998 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="77" y="388" width="2" height="15" fill="rgb(252,43,29)"/><text x="80.00" y="398.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="77" y="372" width="5" height="15" fill="rgb(228,217,43)"/><text x="80.00" y="382.50"></text></g><g><title>0x7f379739ebe0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="79" y="388" width="3" height="15" fill="rgb(233,142,24)"/><text x="82.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(218,146,20)"/><text x="85.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="388" width="2" height="15" fill="rgb(222,64,50)"/><text x="85.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="404" width="2" height="15" fill="rgb(251,189,36)"/><text x="85.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="420" width="2" height="15" fill="rgb(227,90,41)"/><text x="85.00" y="430.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.79%)</title><rect x="77" y="340" width="9" height="15" fill="rgb(251,148,19)"/><text x="80.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.79%)</title><rect x="77" y="356" width="9" height="15" fill="rgb(237,64,27)"/><text x="80.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="84" y="372" width="2" height="15" fill="rgb(241,18,36)"/><text x="87.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="84" y="388" width="2" height="15" fill="rgb(230,109,39)"/><text x="87.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="84" y="404" width="2" height="15" fill="rgb(238,74,21)"/><text x="87.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="84" y="420" width="2" height="15" fill="rgb(215,227,25)"/><text x="87.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="84" y="436" width="2" height="15" fill="rgb(227,208,18)"/><text x="87.00" y="446.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="86" y="340" width="3" height="15" fill="rgb(210,97,5)"/><text x="89.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="86" y="356" width="3" height="15" fill="rgb(242,93,7)"/><text x="89.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="86" y="372" width="3" height="15" fill="rgb(239,144,41)"/><text x="89.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="86" y="388" width="3" height="15" fill="rgb(225,111,28)"/><text x="89.00" y="398.50"></text></g><g><title>0x7f379739ff0a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="86" y="404" width="3" height="15" fill="rgb(237,69,33)"/><text x="89.00" y="414.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (12 samples, 2.37%)</title><rect x="63" y="100" width="28" height="15" fill="rgb(232,176,15)"/><text x="66.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.37%)</title><rect x="63" y="116" width="28" height="15" fill="rgb(238,212,24)"/><text x="66.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.37%)</title><rect x="63" y="132" width="28" height="15" fill="rgb(247,98,50)"/><text x="66.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.37%)</title><rect x="63" y="148" width="28" height="15" fill="rgb(232,73,10)"/><text x="66.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.37%)</title><rect x="63" y="164" width="28" height="15" fill="rgb(236,102,11)"/><text x="66.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (12 samples, 2.37%)</title><rect x="63" y="180" width="28" height="15" fill="rgb(205,87,22)"/><text x="66.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py) (12 samples, 2.37%)</title><rect x="63" y="196" width="28" height="15" fill="rgb(211,217,34)"/><text x="66.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="212" width="26" height="15" fill="rgb(238,206,22)"/><text x="68.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="228" width="26" height="15" fill="rgb(211,133,41)"/><text x="68.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="244" width="26" height="15" fill="rgb(253,15,52)"/><text x="68.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="260" width="26" height="15" fill="rgb(245,108,27)"/><text x="68.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="276" width="26" height="15" fill="rgb(230,50,20)"/><text x="68.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="292" width="26" height="15" fill="rgb(243,92,38)"/><text x="68.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="308" width="26" height="15" fill="rgb(227,144,6)"/><text x="68.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="65" y="324" width="26" height="15" fill="rgb(213,98,38)"/><text x="68.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="340" width="2" height="15" fill="rgb(224,116,2)"/><text x="92.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="356" width="2" height="15" fill="rgb(205,168,19)"/><text x="92.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="372" width="2" height="15" fill="rgb(223,134,35)"/><text x="92.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="388" width="2" height="15" fill="rgb(206,192,21)"/><text x="92.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="404" width="2" height="15" fill="rgb(227,162,30)"/><text x="92.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="420" width="2" height="15" fill="rgb(240,18,43)"/><text x="92.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="436" width="2" height="15" fill="rgb(240,201,3)"/><text x="92.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="452" width="2" height="15" fill="rgb(231,47,48)"/><text x="92.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="468" width="2" height="15" fill="rgb(212,48,10)"/><text x="92.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="484" width="2" height="15" fill="rgb(229,179,24)"/><text x="92.00" y="494.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="89" y="500" width="2" height="15" fill="rgb(230,13,41)"/><text x="92.00" y="510.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="91" y="228" width="2" height="15" fill="rgb(249,162,9)"/><text x="94.00" y="238.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="91" y="244" width="2" height="15" fill="rgb(239,2,10)"/><text x="94.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="91" y="260" width="2" height="15" fill="rgb(231,38,35)"/><text x="94.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="91" y="276" width="2" height="15" fill="rgb(214,76,52)"/><text x="94.00" y="286.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="91" y="292" width="2" height="15" fill="rgb(231,38,9)"/><text x="94.00" y="302.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (14 samples, 2.76%)</title><rect x="63" y="68" width="33" height="15" fill="rgb(225,179,30)"/><text x="66.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (14 samples, 2.76%)</title><rect x="63" y="84" width="33" height="15" fill="rgb(228,166,52)"/><text x="66.00" y="94.50">se..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="91" y="100" width="5" height="15" fill="rgb(234,213,52)"/><text x="94.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="91" y="116" width="5" height="15" fill="rgb(231,22,54)"/><text x="94.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="91" y="132" width="5" height="15" fill="rgb(247,206,42)"/><text x="94.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.39%)</title><rect x="91" y="148" width="5" height="15" fill="rgb(238,0,11)"/><text x="94.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.39%)</title><rect x="91" y="164" width="5" height="15" fill="rgb(218,39,20)"/><text x="94.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.39%)</title><rect x="91" y="180" width="5" height="15" fill="rgb(220,179,22)"/><text x="94.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (2 samples, 0.39%)</title><rect x="91" y="196" width="5" height="15" fill="rgb(215,125,1)"/><text x="94.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.39%)</title><rect x="91" y="212" width="5" height="15" fill="rgb(230,3,14)"/><text x="94.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="93" y="228" width="3" height="15" fill="rgb(254,33,6)"/><text x="96.00" y="238.50"></text></g><g><title>0x7f37856ec6c3 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="93" y="244" width="3" height="15" fill="rgb(212,227,29)"/><text x="96.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::NewEmptyMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="93" y="260" width="3" height="15" fill="rgb(241,68,1)"/><text x="96.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 0.79%)</title><rect x="212" y="196" width="9" height="15" fill="rgb(240,215,5)"/><text x="215.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.20%)</title><rect x="238" y="212" width="2" height="15" fill="rgb(246,175,53)"/><text x="241.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.20%)</title><rect x="238" y="228" width="2" height="15" fill="rgb(211,124,25)"/><text x="241.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.20%)</title><rect x="238" y="244" width="2" height="15" fill="rgb(206,196,37)"/><text x="241.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="238" y="260" width="2" height="15" fill="rgb(245,198,21)"/><text x="241.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.20%)</title><rect x="240" y="212" width="2" height="15" fill="rgb(244,33,21)"/><text x="243.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.59%)</title><rect x="242" y="212" width="7" height="15" fill="rgb(208,54,28)"/><text x="245.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.59%)</title><rect x="242" y="228" width="7" height="15" fill="rgb(212,196,43)"/><text x="245.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.20%)</title><rect x="247" y="244" width="2" height="15" fill="rgb(215,49,14)"/><text x="250.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.20%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(209,189,52)"/><text x="250.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="249" y="292" width="3" height="15" fill="rgb(206,48,52)"/><text x="252.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="249" y="308" width="3" height="15" fill="rgb(228,41,19)"/><text x="252.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="249" y="324" width="3" height="15" fill="rgb(232,210,53)"/><text x="252.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="249" y="340" width="3" height="15" fill="rgb(252,101,24)"/><text x="252.00" y="350.50"></text></g><g><title>array_add (number.c) (2 samples, 0.39%)</title><rect x="249" y="228" width="5" height="15" fill="rgb(252,48,52)"/><text x="252.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.39%)</title><rect x="249" y="244" width="5" height="15" fill="rgb(248,193,15)"/><text x="252.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.39%)</title><rect x="249" y="260" width="5" height="15" fill="rgb(247,79,9)"/><text x="252.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="249" y="276" width="5" height="15" fill="rgb(253,104,8)"/><text x="252.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="252" y="292" width="2" height="15" fill="rgb(225,118,47)"/><text x="255.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (3 samples, 0.59%)</title><rect x="249" y="212" width="7" height="15" fill="rgb(224,181,5)"/><text x="252.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="254" y="228" width="2" height="15" fill="rgb(225,178,28)"/><text x="257.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="254" y="244" width="2" height="15" fill="rgb(219,163,37)"/><text x="257.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="254" y="260" width="2" height="15" fill="rgb(218,67,20)"/><text x="257.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.20%)</title><rect x="256" y="212" width="3" height="15" fill="rgb(218,25,44)"/><text x="259.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(217,86,28)"/><text x="292.00" y="302.50"></text></g><g><title>0x7f379747c134 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="291" y="324" width="2" height="15" fill="rgb(237,27,24)"/><text x="294.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.39%)</title><rect x="291" y="308" width="5" height="15" fill="rgb(246,110,12)"/><text x="294.00" y="318.50"></text></g><g><title>0x7f379747d004 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="293" y="324" width="3" height="15" fill="rgb(237,224,47)"/><text x="296.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.99%)</title><rect x="289" y="260" width="11" height="15" fill="rgb(209,67,12)"/><text x="292.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.99%)</title><rect x="289" y="276" width="11" height="15" fill="rgb(226,108,37)"/><text x="292.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (4 samples, 0.79%)</title><rect x="291" y="292" width="9" height="15" fill="rgb(205,196,21)"/><text x="294.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.39%)</title><rect x="296" y="308" width="4" height="15" fill="rgb(232,160,20)"/><text x="299.00" y="318.50"></text></g><g><title>0x7f37973bf120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="300" y="276" width="3" height="15" fill="rgb(206,160,30)"/><text x="303.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="303" y="276" width="2" height="15" fill="rgb(218,218,21)"/><text x="306.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="303" y="292" width="2" height="15" fill="rgb(242,6,2)"/><text x="306.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.20%)</title><rect x="305" y="276" width="2" height="15" fill="rgb(237,157,50)"/><text x="308.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="305" y="292" width="2" height="15" fill="rgb(252,190,13)"/><text x="308.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="305" y="308" width="2" height="15" fill="rgb(238,208,24)"/><text x="308.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="307" y="276" width="3" height="15" fill="rgb(218,11,27)"/><text x="310.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="307" y="292" width="3" height="15" fill="rgb(249,1,6)"/><text x="310.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="310" y="276" width="4" height="15" fill="rgb(216,23,20)"/><text x="313.00" y="286.50"></text></g><g><title>0x7f37973bf14a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="317" y="324" width="2" height="15" fill="rgb(254,96,20)"/><text x="320.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="319" y="340" width="2" height="15" fill="rgb(218,159,39)"/><text x="322.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.20%)</title><rect x="319" y="356" width="2" height="15" fill="rgb(223,13,47)"/><text x="322.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.59%)</title><rect x="319" y="324" width="7" height="15" fill="rgb(233,59,21)"/><text x="322.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.39%)</title><rect x="321" y="340" width="5" height="15" fill="rgb(221,224,53)"/><text x="324.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="324" y="356" width="2" height="15" fill="rgb(245,170,1)"/><text x="327.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(212,211,52)"/><text x="327.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.20%)</title><rect x="324" y="388" width="2" height="15" fill="rgb(249,116,53)"/><text x="327.00" y="398.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.39%)</title><rect x="326" y="324" width="5" height="15" fill="rgb(240,111,19)"/><text x="329.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 1.58%)</title><rect x="317" y="308" width="18" height="15" fill="rgb(233,62,47)"/><text x="320.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.39%)</title><rect x="331" y="324" width="4" height="15" fill="rgb(235,106,41)"/><text x="334.00" y="334.50"></text></g><g><title>0x7f379739e902 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="335" y="324" width="3" height="15" fill="rgb(218,143,3)"/><text x="338.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.39%)</title><rect x="335" y="308" width="5" height="15" fill="rgb(221,213,54)"/><text x="338.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="338" y="324" width="2" height="15" fill="rgb(228,121,31)"/><text x="341.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="340" y="324" width="2" height="15" fill="rgb(225,63,42)"/><text x="343.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 2.76%)</title><rect x="314" y="276" width="33" height="15" fill="rgb(243,46,41)"/><text x="317.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (14 samples, 2.76%)</title><rect x="314" y="292" width="33" height="15" fill="rgb(253,205,48)"/><text x="317.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.59%)</title><rect x="340" y="308" width="7" height="15" fill="rgb(226,185,36)"/><text x="343.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.39%)</title><rect x="342" y="324" width="5" height="15" fill="rgb(215,45,43)"/><text x="345.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 4.34%)</title><rect x="300" y="260" width="52" height="15" fill="rgb(235,109,34)"/><text x="303.00" y="270.50">PyUFu..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.39%)</title><rect x="347" y="276" width="5" height="15" fill="rgb(252,132,35)"/><text x="350.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (36 samples, 7.10%)</title><rect x="270" y="228" width="84" height="15" fill="rgb(240,123,0)"/><text x="273.00" y="238.50">_run (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 5.72%)</title><rect x="286" y="244" width="68" height="15" fill="rgb(205,125,4)"/><text x="289.00" y="254.50">ufunc_g..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="352" y="260" width="2" height="15" fill="rgb(213,223,33)"/><text x="355.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="354" y="228" width="2" height="15" fill="rgb(241,154,49)"/><text x="357.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="354" y="244" width="2" height="15" fill="rgb(235,78,28)"/><text x="357.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="354" y="260" width="2" height="15" fill="rgb(206,216,48)"/><text x="357.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="354" y="276" width="2" height="15" fill="rgb(217,138,51)"/><text x="357.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="354" y="292" width="2" height="15" fill="rgb(215,184,3)"/><text x="357.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="354" y="308" width="2" height="15" fill="rgb(253,132,46)"/><text x="357.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="354" y="324" width="2" height="15" fill="rgb(242,169,50)"/><text x="357.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.20%)</title><rect x="354" y="340" width="2" height="15" fill="rgb(240,178,53)"/><text x="357.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.20%)</title><rect x="354" y="356" width="2" height="15" fill="rgb(205,17,29)"/><text x="357.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="354" y="372" width="2" height="15" fill="rgb(229,195,29)"/><text x="357.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="361" y="260" width="2" height="15" fill="rgb(234,13,10)"/><text x="364.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="361" y="276" width="2" height="15" fill="rgb(224,99,9)"/><text x="364.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(210,185,33)"/><text x="364.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(246,116,21)"/><text x="364.00" y="318.50"></text></g><g><title>0x7f379747c130 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(227,175,34)"/><text x="364.00" y="334.50"></text></g><g><title>0x7f3797340318 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="366" y="356" width="2" height="15" fill="rgb(218,110,44)"/><text x="369.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.39%)</title><rect x="366" y="324" width="4" height="15" fill="rgb(233,22,23)"/><text x="369.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.39%)</title><rect x="366" y="340" width="4" height="15" fill="rgb(213,77,14)"/><text x="369.00" y="350.50"></text></g><g><title>0x7f37973567a5 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="368" y="356" width="2" height="15" fill="rgb(233,182,9)"/><text x="371.00" y="366.50"></text></g><g><title>0x7f37973bed50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="368" y="372" width="2" height="15" fill="rgb(249,193,3)"/><text x="371.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="366" y="276" width="7" height="15" fill="rgb(209,92,6)"/><text x="369.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.59%)</title><rect x="366" y="292" width="7" height="15" fill="rgb(231,200,41)"/><text x="369.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.59%)</title><rect x="366" y="308" width="7" height="15" fill="rgb(228,53,44)"/><text x="369.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.20%)</title><rect x="370" y="324" width="3" height="15" fill="rgb(205,176,42)"/><text x="373.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="373" y="276" width="2" height="15" fill="rgb(245,102,22)"/><text x="376.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="373" y="292" width="2" height="15" fill="rgb(216,130,3)"/><text x="376.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="373" y="308" width="2" height="15" fill="rgb(221,105,36)"/><text x="376.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="373" y="324" width="2" height="15" fill="rgb(215,191,25)"/><text x="376.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(239,227,36)"/><text x="376.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (9 samples, 1.78%)</title><rect x="356" y="228" width="21" height="15" fill="rgb(250,188,34)"/><text x="359.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.38%)</title><rect x="361" y="244" width="16" height="15" fill="rgb(243,22,18)"/><text x="364.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.18%)</title><rect x="363" y="260" width="14" height="15" fill="rgb(240,5,39)"/><text x="366.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="375" y="276" width="2" height="15" fill="rgb(228,74,38)"/><text x="378.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="398" y="324" width="3" height="15" fill="rgb(220,143,3)"/><text x="401.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="398" y="340" width="3" height="15" fill="rgb(236,176,17)"/><text x="401.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="398" y="356" width="3" height="15" fill="rgb(211,26,13)"/><text x="401.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="398" y="372" width="3" height="15" fill="rgb(237,155,1)"/><text x="401.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="398" y="388" width="3" height="15" fill="rgb(251,119,18)"/><text x="401.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.39%)</title><rect x="407" y="372" width="5" height="15" fill="rgb(246,74,24)"/><text x="410.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.39%)</title><rect x="407" y="388" width="5" height="15" fill="rgb(206,150,4)"/><text x="410.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.39%)</title><rect x="407" y="404" width="5" height="15" fill="rgb(252,133,39)"/><text x="410.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="407" y="420" width="5" height="15" fill="rgb(224,13,45)"/><text x="410.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="410" y="436" width="2" height="15" fill="rgb(219,147,26)"/><text x="413.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="410" y="452" width="2" height="15" fill="rgb(236,115,41)"/><text x="413.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.20%)</title><rect x="410" y="468" width="2" height="15" fill="rgb(247,19,47)"/><text x="413.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="410" y="484" width="2" height="15" fill="rgb(234,108,8)"/><text x="413.00" y="494.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.20%)</title><rect x="412" y="372" width="2" height="15" fill="rgb(225,173,26)"/><text x="415.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="412" y="388" width="2" height="15" fill="rgb(235,213,44)"/><text x="415.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="412" y="404" width="2" height="15" fill="rgb(237,214,40)"/><text x="415.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="412" y="420" width="2" height="15" fill="rgb(227,172,51)"/><text x="415.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.79%)</title><rect x="407" y="356" width="10" height="15" fill="rgb(234,181,2)"/><text x="410.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="414" y="372" width="3" height="15" fill="rgb(205,84,10)"/><text x="417.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.20%)</title><rect x="414" y="388" width="3" height="15" fill="rgb(254,125,53)"/><text x="417.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.20%)</title><rect x="417" y="356" width="2" height="15" fill="rgb(206,54,8)"/><text x="420.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.20%)</title><rect x="417" y="372" width="2" height="15" fill="rgb(214,179,12)"/><text x="420.00" y="382.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="419" y="388" width="2" height="15" fill="rgb(220,178,0)"/><text x="422.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (21 samples, 4.14%)</title><rect x="377" y="228" width="49" height="15" fill="rgb(213,25,41)"/><text x="380.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (20 samples, 3.94%)</title><rect x="380" y="244" width="46" height="15" fill="rgb(228,170,24)"/><text x="383.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (20 samples, 3.94%)</title><rect x="380" y="260" width="46" height="15" fill="rgb(234,196,19)"/><text x="383.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (20 samples, 3.94%)</title><rect x="380" y="276" width="46" height="15" fill="rgb(246,182,29)"/><text x="383.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (17 samples, 3.35%)</title><rect x="387" y="292" width="39" height="15" fill="rgb(241,35,36)"/><text x="390.00" y="302.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.37%)</title><rect x="398" y="308" width="28" height="15" fill="rgb(205,29,25)"/><text x="401.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.17%)</title><rect x="401" y="324" width="25" height="15" fill="rgb(214,179,34)"/><text x="404.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.58%)</title><rect x="407" y="340" width="19" height="15" fill="rgb(235,35,44)"/><text x="410.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.59%)</title><rect x="419" y="356" width="7" height="15" fill="rgb(226,9,54)"/><text x="422.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="419" y="372" width="7" height="15" fill="rgb(238,169,51)"/><text x="422.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="421" y="388" width="5" height="15" fill="rgb(205,226,20)"/><text x="424.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="424" y="404" width="2" height="15" fill="rgb(227,153,47)"/><text x="427.00" y="414.50"></text></g><g><title>0x7f3757efc422 (?) (1 samples, 0.20%)</title><rect x="428" y="244" width="3" height="15" fill="rgb(231,14,0)"/><text x="431.00" y="254.50"></text></g><g><title>0x7f3757f0289e (?) (1 samples, 0.20%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(238,106,52)"/><text x="431.00" y="270.50"></text></g><g><title>0x7f3757f0274f (?) (1 samples, 0.20%)</title><rect x="428" y="276" width="3" height="15" fill="rgb(207,192,19)"/><text x="431.00" y="286.50"></text></g><g><title>0x7f3757f08a3a (?) (1 samples, 0.20%)</title><rect x="428" y="292" width="3" height="15" fill="rgb(222,148,39)"/><text x="431.00" y="302.50"></text></g><g><title>0x7f3761364ab9 (?) (1 samples, 0.20%)</title><rect x="428" y="308" width="3" height="15" fill="rgb(246,3,3)"/><text x="431.00" y="318.50"></text></g><g><title>0x7f3761365ea9 (?) (1 samples, 0.20%)</title><rect x="428" y="324" width="3" height="15" fill="rgb(254,219,42)"/><text x="431.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.20%)</title><rect x="431" y="436" width="2" height="15" fill="rgb(244,147,19)"/><text x="434.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.20%)</title><rect x="431" y="452" width="2" height="15" fill="rgb(235,223,13)"/><text x="434.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.20%)</title><rect x="431" y="468" width="2" height="15" fill="rgb(230,96,9)"/><text x="434.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.20%)</title><rect x="431" y="484" width="2" height="15" fill="rgb(254,12,30)"/><text x="434.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.20%)</title><rect x="431" y="500" width="2" height="15" fill="rgb(253,11,2)"/><text x="434.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.20%)</title><rect x="431" y="516" width="2" height="15" fill="rgb(214,181,19)"/><text x="434.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.20%)</title><rect x="431" y="532" width="2" height="15" fill="rgb(239,101,20)"/><text x="434.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.20%)</title><rect x="431" y="548" width="2" height="15" fill="rgb(229,65,27)"/><text x="434.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="431" y="564" width="2" height="15" fill="rgb(227,167,53)"/><text x="434.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="431" y="580" width="2" height="15" fill="rgb(206,89,49)"/><text x="434.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="431" y="596" width="2" height="15" fill="rgb(223,89,27)"/><text x="434.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="431" y="612" width="2" height="15" fill="rgb(228,67,54)"/><text x="434.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.20%)</title><rect x="431" y="628" width="2" height="15" fill="rgb(216,220,29)"/><text x="434.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="431" y="644" width="2" height="15" fill="rgb(239,153,33)"/><text x="434.00" y="654.50"></text></g><g><title>0x7f379739fe07 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="431" y="660" width="2" height="15" fill="rgb(222,160,30)"/><text x="434.00" y="670.50"></text></g><g><title>0x7f3761365ea0 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="433" y="468" width="2" height="15" fill="rgb(205,96,14)"/><text x="436.00" y="478.50"></text></g><g><title>0x7f3761365ea9 (libgomp.so.1.0.0) (7 samples, 1.38%)</title><rect x="435" y="468" width="17" height="15" fill="rgb(253,202,36)"/><text x="438.00" y="478.50"></text></g><g><title>0x7f3761365eab (libgomp.so.1.0.0) (4 samples, 0.79%)</title><rect x="452" y="468" width="9" height="15" fill="rgb(224,157,43)"/><text x="455.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (110 samples, 21.70%)</title><rect x="221" y="196" width="256" height="15" fill="rgb(223,12,4)"/><text x="224.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (94 samples, 18.54%)</title><rect x="259" y="212" width="218" height="15" fill="rgb(237,215,35)"/><text x="262.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (22 samples, 4.34%)</title><rect x="426" y="228" width="51" height="15" fill="rgb(216,59,0)"/><text x="429.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (20 samples, 3.94%)</title><rect x="431" y="244" width="46" height="15" fill="rgb(254,0,44)"/><text x="434.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (20 samples, 3.94%)</title><rect x="431" y="260" width="46" height="15" fill="rgb(253,145,50)"/><text x="434.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (20 samples, 3.94%)</title><rect x="431" y="276" width="46" height="15" fill="rgb(205,54,50)"/><text x="434.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (20 samples, 3.94%)</title><rect x="431" y="292" width="46" height="15" fill="rgb(233,64,43)"/><text x="434.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (20 samples, 3.94%)</title><rect x="431" y="308" width="46" height="15" fill="rgb(210,12,14)"/><text x="434.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (20 samples, 3.94%)</title><rect x="431" y="324" width="46" height="15" fill="rgb(248,63,23)"/><text x="434.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (20 samples, 3.94%)</title><rect x="431" y="340" width="46" height="15" fill="rgb(219,77,12)"/><text x="434.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h) (20 samples, 3.94%)</title><rect x="431" y="356" width="46" height="15" fill="rgb(240,92,21)"/><text x="434.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (20 samples, 3.94%)</title><rect x="431" y="372" width="46" height="15" fill="rgb(221,196,24)"/><text x="434.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h) (20 samples, 3.94%)</title><rect x="431" y="388" width="46" height="15" fill="rgb(243,146,9)"/><text x="434.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (20 samples, 3.94%)</title><rect x="431" y="404" width="46" height="15" fill="rgb(223,137,12)"/><text x="434.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (20 samples, 3.94%)</title><rect x="431" y="420" width="46" height="15" fill="rgb(244,8,54)"/><text x="434.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (19 samples, 3.75%)</title><rect x="433" y="436" width="44" height="15" fill="rgb(235,17,8)"/><text x="436.00" y="446.50">pybi..</text></g><g><title>0x7f3761364ab9 (libgomp.so.1.0.0) (19 samples, 3.75%)</title><rect x="433" y="452" width="44" height="15" fill="rgb(228,163,42)"/><text x="436.00" y="462.50">0x7f..</text></g><g><title>0x7f3761365ead (libgomp.so.1.0.0) (7 samples, 1.38%)</title><rect x="461" y="468" width="16" height="15" fill="rgb(248,156,43)"/><text x="464.00" y="478.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="496" y="228" width="2" height="15" fill="rgb(231,195,34)"/><text x="499.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="496" y="244" width="2" height="15" fill="rgb(241,190,33)"/><text x="499.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="496" y="260" width="2" height="15" fill="rgb(216,137,52)"/><text x="499.00" y="270.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.20%)</title><rect x="496" y="276" width="2" height="15" fill="rgb(207,168,24)"/><text x="499.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="496" y="292" width="2" height="15" fill="rgb(248,98,3)"/><text x="499.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="496" y="308" width="2" height="15" fill="rgb(250,81,17)"/><text x="499.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="496" y="324" width="2" height="15" fill="rgb(242,29,25)"/><text x="499.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="496" y="340" width="2" height="15" fill="rgb(217,200,49)"/><text x="499.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="496" y="356" width="2" height="15" fill="rgb(250,39,40)"/><text x="499.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="496" y="372" width="2" height="15" fill="rgb(246,178,8)"/><text x="499.00" y="382.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="498" y="244" width="3" height="15" fill="rgb(208,61,16)"/><text x="501.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="522" y="420" width="2" height="15" fill="rgb(243,59,32)"/><text x="525.00" y="430.50"></text></g><g><title>0x7f379747cff0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="522" y="436" width="2" height="15" fill="rgb(219,28,17)"/><text x="525.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="522" y="372" width="4" height="15" fill="rgb(230,7,25)"/><text x="525.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="522" y="388" width="4" height="15" fill="rgb(248,56,46)"/><text x="525.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.39%)</title><rect x="522" y="404" width="4" height="15" fill="rgb(249,91,13)"/><text x="525.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="524" y="420" width="2" height="15" fill="rgb(219,196,37)"/><text x="527.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="526" y="388" width="3" height="15" fill="rgb(246,43,5)"/><text x="529.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="526" y="404" width="3" height="15" fill="rgb(234,131,53)"/><text x="529.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.20%)</title><rect x="526" y="420" width="3" height="15" fill="rgb(222,165,26)"/><text x="529.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.20%)</title><rect x="526" y="436" width="3" height="15" fill="rgb(230,35,7)"/><text x="529.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="529" y="436" width="2" height="15" fill="rgb(222,164,33)"/><text x="532.00" y="446.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="531" y="436" width="2" height="15" fill="rgb(227,171,13)"/><text x="534.00" y="446.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="531" y="452" width="2" height="15" fill="rgb(216,7,41)"/><text x="534.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.20%)</title><rect x="531" y="468" width="2" height="15" fill="rgb(228,2,12)"/><text x="534.00" y="478.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.39%)</title><rect x="533" y="436" width="5" height="15" fill="rgb(238,121,26)"/><text x="536.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="535" y="452" width="3" height="15" fill="rgb(246,84,9)"/><text x="538.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="535" y="468" width="3" height="15" fill="rgb(238,8,40)"/><text x="538.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.99%)</title><rect x="529" y="420" width="11" height="15" fill="rgb(205,57,12)"/><text x="532.00" y="430.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.20%)</title><rect x="538" y="436" width="2" height="15" fill="rgb(208,164,1)"/><text x="541.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.18%)</title><rect x="529" y="388" width="13" height="15" fill="rgb(239,143,10)"/><text x="532.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.18%)</title><rect x="529" y="404" width="13" height="15" fill="rgb(230,7,49)"/><text x="532.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="540" y="420" width="2" height="15" fill="rgb(229,17,37)"/><text x="543.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="540" y="436" width="2" height="15" fill="rgb(215,190,19)"/><text x="543.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="540" y="452" width="2" height="15" fill="rgb(251,4,29)"/><text x="543.00" y="462.50"></text></g><g><title>0x7f37973a0700 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="540" y="468" width="2" height="15" fill="rgb(217,122,12)"/><text x="543.00" y="478.50"></text></g><g><title>0x7f379739dacd (libc-2.29.so) (1 samples, 0.20%)</title><rect x="540" y="484" width="2" height="15" fill="rgb(242,218,18)"/><text x="543.00" y="494.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.58%)</title><rect x="526" y="372" width="19" height="15" fill="rgb(248,62,11)"/><text x="529.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="542" y="388" width="3" height="15" fill="rgb(240,102,25)"/><text x="545.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="542" y="404" width="3" height="15" fill="rgb(243,9,35)"/><text x="545.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (11 samples, 2.17%)</title><rect x="522" y="340" width="25" height="15" fill="rgb(231,136,15)"/><text x="525.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.17%)</title><rect x="522" y="356" width="25" height="15" fill="rgb(238,140,10)"/><text x="525.00" y="366.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="545" y="372" width="2" height="15" fill="rgb(237,172,46)"/><text x="548.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.18%)</title><rect x="559" y="356" width="14" height="15" fill="rgb(207,161,20)"/><text x="562.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="582" y="404" width="2" height="15" fill="rgb(224,103,31)"/><text x="585.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.97%)</title><rect x="573" y="356" width="23" height="15" fill="rgb(205,120,15)"/><text x="576.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.97%)</title><rect x="573" y="372" width="23" height="15" fill="rgb(220,134,26)"/><text x="576.00" y="382.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (10 samples, 1.97%)</title><rect x="573" y="388" width="23" height="15" fill="rgb(227,14,43)"/><text x="576.00" y="398.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.99%)</title><rect x="584" y="404" width="12" height="15" fill="rgb(213,209,13)"/><text x="587.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.59%)</title><rect x="589" y="420" width="7" height="15" fill="rgb(208,65,35)"/><text x="592.00" y="430.50"></text></g><g><title>0x7f37973b4734 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="594" y="436" width="2" height="15" fill="rgb(224,48,3)"/><text x="597.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="596" y="420" width="2" height="15" fill="rgb(231,151,19)"/><text x="599.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.39%)</title><rect x="596" y="388" width="5" height="15" fill="rgb(220,133,0)"/><text x="599.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.39%)</title><rect x="596" y="404" width="5" height="15" fill="rgb(214,45,45)"/><text x="599.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="598" y="420" width="3" height="15" fill="rgb(231,52,14)"/><text x="601.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="598" y="436" width="3" height="15" fill="rgb(247,217,7)"/><text x="601.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.99%)</title><rect x="596" y="372" width="12" height="15" fill="rgb(239,74,33)"/><text x="599.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="601" y="388" width="7" height="15" fill="rgb(207,69,21)"/><text x="604.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="605" y="404" width="3" height="15" fill="rgb(238,18,46)"/><text x="608.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="605" y="420" width="3" height="15" fill="rgb(222,80,2)"/><text x="608.00" y="430.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (219 samples, 43.20%)</title><rect x="100" y="164" width="510" height="15" fill="rgb(215,115,17)"/><text x="103.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (208 samples, 41.03%)</title><rect x="126" y="180" width="484" height="15" fill="rgb(243,201,40)"/><text x="129.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (57 samples, 11.24%)</title><rect x="477" y="196" width="133" height="15" fill="rgb(248,29,1)"/><text x="480.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (53 samples, 10.45%)</title><rect x="487" y="212" width="123" height="15" fill="rgb(237,126,46)"/><text x="490.00" y="222.50">_run (mlprodict..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 9.47%)</title><rect x="498" y="228" width="112" height="15" fill="rgb(245,176,54)"/><text x="501.00" y="238.50">clip (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (47 samples, 9.27%)</title><rect x="501" y="244" width="109" height="15" fill="rgb(235,214,6)"/><text x="504.00" y="254.50">array_impleme..</text></g><g><title>clip (numpy/core/fromnumeric.py) (45 samples, 8.88%)</title><rect x="505" y="260" width="105" height="15" fill="rgb(221,20,31)"/><text x="508.00" y="270.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (43 samples, 8.48%)</title><rect x="510" y="276" width="100" height="15" fill="rgb(213,118,46)"/><text x="513.00" y="286.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c) (43 samples, 8.48%)</title><rect x="510" y="292" width="100" height="15" fill="rgb(227,212,14)"/><text x="513.00" y="302.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c) (43 samples, 8.48%)</title><rect x="510" y="308" width="100" height="15" fill="rgb(213,215,36)"/><text x="513.00" y="318.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py) (43 samples, 8.48%)</title><rect x="510" y="324" width="100" height="15" fill="rgb(229,90,22)"/><text x="513.00" y="334.50">_clip (numpy..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (27 samples, 5.33%)</title><rect x="547" y="340" width="63" height="15" fill="rgb(240,152,21)"/><text x="550.00" y="350.50">_clip_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.18%)</title><rect x="596" y="356" width="14" height="15" fill="rgb(245,227,18)"/><text x="599.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="608" y="372" width="2" height="15" fill="rgb(237,184,13)"/><text x="611.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="608" y="388" width="2" height="15" fill="rgb(219,168,41)"/><text x="611.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (222 samples, 43.79%)</title><rect x="96" y="100" width="516" height="15" fill="rgb(254,29,20)"/><text x="99.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (222 samples, 43.79%)</title><rect x="96" y="116" width="516" height="15" fill="rgb(252,199,46)"/><text x="99.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (221 samples, 43.59%)</title><rect x="98" y="132" width="514" height="15" fill="rgb(222,96,34)"/><text x="101.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (221 samples, 43.59%)</title><rect x="98" y="148" width="514" height="15" fill="rgb(250,128,48)"/><text x="101.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="610" y="164" width="2" height="15" fill="rgb(245,193,5)"/><text x="613.00" y="174.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="612" y="132" width="3" height="15" fill="rgb(213,170,42)"/><text x="615.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="612" y="148" width="3" height="15" fill="rgb(248,45,7)"/><text x="615.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="612" y="164" width="3" height="15" fill="rgb(224,163,52)"/><text x="615.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="612" y="180" width="3" height="15" fill="rgb(236,130,16)"/><text x="615.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.20%)</title><rect x="612" y="196" width="3" height="15" fill="rgb(234,151,30)"/><text x="615.00" y="206.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (224 samples, 44.18%)</title><rect x="96" y="68" width="521" height="15" fill="rgb(214,14,50)"/><text x="99.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (224 samples, 44.18%)</title><rect x="96" y="84" width="521" height="15" fill="rgb(231,222,39)"/><text x="99.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="612" y="100" width="5" height="15" fill="rgb(246,12,39)"/><text x="615.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="612" y="116" width="5" height="15" fill="rgb(221,97,20)"/><text x="615.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="615" y="132" width="2" height="15" fill="rgb(243,39,27)"/><text x="618.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.20%)</title><rect x="615" y="148" width="2" height="15" fill="rgb(210,47,6)"/><text x="618.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.20%)</title><rect x="615" y="164" width="2" height="15" fill="rgb(223,24,8)"/><text x="618.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="615" y="180" width="2" height="15" fill="rgb(228,220,26)"/><text x="618.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="615" y="196" width="2" height="15" fill="rgb(217,105,11)"/><text x="618.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="615" y="212" width="2" height="15" fill="rgb(234,143,45)"/><text x="618.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="615" y="228" width="2" height="15" fill="rgb(230,56,22)"/><text x="618.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="615" y="244" width="2" height="15" fill="rgb(210,130,35)"/><text x="618.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="615" y="260" width="2" height="15" fill="rgb(225,107,11)"/><text x="618.00" y="270.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.20%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(222,104,42)"/><text x="618.00" y="286.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.20%)</title><rect x="615" y="292" width="2" height="15" fill="rgb(223,95,31)"/><text x="618.00" y="302.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.20%)</title><rect x="615" y="308" width="2" height="15" fill="rgb(218,198,1)"/><text x="618.00" y="318.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="615" y="324" width="2" height="15" fill="rgb(219,4,27)"/><text x="618.00" y="334.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="615" y="340" width="2" height="15" fill="rgb(221,68,25)"/><text x="618.00" y="350.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="617" y="164" width="2" height="15" fill="rgb(210,40,47)"/><text x="620.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.20%)</title><rect x="617" y="180" width="2" height="15" fill="rgb(241,49,28)"/><text x="620.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.20%)</title><rect x="617" y="196" width="2" height="15" fill="rgb(218,215,28)"/><text x="620.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.20%)</title><rect x="617" y="212" width="2" height="15" fill="rgb(249,129,43)"/><text x="620.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.20%)</title><rect x="617" y="228" width="2" height="15" fill="rgb(209,107,31)"/><text x="620.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="617" y="244" width="2" height="15" fill="rgb(238,77,25)"/><text x="620.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="617" y="260" width="2" height="15" fill="rgb(222,192,35)"/><text x="620.00" y="270.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.20%)</title><rect x="643" y="212" width="2" height="15" fill="rgb(239,8,4)"/><text x="646.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.20%)</title><rect x="643" y="228" width="2" height="15" fill="rgb(241,9,21)"/><text x="646.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="645" y="212" width="2" height="15" fill="rgb(216,21,41)"/><text x="648.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="645" y="228" width="2" height="15" fill="rgb(239,210,4)"/><text x="648.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="645" y="244" width="2" height="15" fill="rgb(226,26,41)"/><text x="648.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.20%)</title><rect x="647" y="228" width="3" height="15" fill="rgb(212,206,50)"/><text x="650.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="650" y="244" width="2" height="15" fill="rgb(226,207,19)"/><text x="653.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="650" y="260" width="2" height="15" fill="rgb(228,203,23)"/><text x="653.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="650" y="276" width="2" height="15" fill="rgb(210,72,13)"/><text x="653.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (3 samples, 0.59%)</title><rect x="652" y="276" width="7" height="15" fill="rgb(232,87,34)"/><text x="655.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (4 samples, 0.79%)</title><rect x="652" y="260" width="9" height="15" fill="rgb(235,170,1)"/><text x="655.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="659" y="276" width="2" height="15" fill="rgb(227,26,49)"/><text x="662.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="659" y="292" width="2" height="15" fill="rgb(254,53,26)"/><text x="662.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.20%)</title><rect x="659" y="308" width="2" height="15" fill="rgb(243,19,16)"/><text x="662.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="661" y="260" width="3" height="15" fill="rgb(221,11,15)"/><text x="664.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="661" y="276" width="3" height="15" fill="rgb(210,29,54)"/><text x="664.00" y="286.50"></text></g><g><title>0x7f37973bf124 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="668" y="340" width="2" height="15" fill="rgb(210,12,40)"/><text x="671.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (3 samples, 0.59%)</title><rect x="666" y="276" width="7" height="15" fill="rgb(246,219,8)"/><text x="669.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.59%)</title><rect x="666" y="292" width="7" height="15" fill="rgb(210,14,29)"/><text x="669.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="666" y="308" width="7" height="15" fill="rgb(228,105,37)"/><text x="669.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="666" y="324" width="7" height="15" fill="rgb(218,32,51)"/><text x="669.00" y="334.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.20%)</title><rect x="670" y="340" width="3" height="15" fill="rgb(245,24,2)"/><text x="673.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (5 samples, 0.99%)</title><rect x="664" y="260" width="11" height="15" fill="rgb(232,197,31)"/><text x="667.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="673" y="276" width="2" height="15" fill="rgb(245,107,53)"/><text x="676.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="673" y="292" width="2" height="15" fill="rgb(242,66,31)"/><text x="676.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="673" y="308" width="2" height="15" fill="rgb(249,112,7)"/><text x="676.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="680" y="308" width="2" height="15" fill="rgb(208,23,52)"/><text x="683.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="680" y="324" width="2" height="15" fill="rgb(235,45,23)"/><text x="683.00" y="334.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="680" y="340" width="2" height="15" fill="rgb(247,223,20)"/><text x="683.00" y="350.50"></text></g><g><title>array_multiply (number.c) (16 samples, 3.16%)</title><rect x="647" y="212" width="37" height="15" fill="rgb(221,42,39)"/><text x="650.00" y="222.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.96%)</title><rect x="650" y="228" width="34" height="15" fill="rgb(223,102,42)"/><text x="653.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.76%)</title><rect x="652" y="244" width="32" height="15" fill="rgb(216,23,11)"/><text x="655.00" y="254.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.79%)</title><rect x="675" y="260" width="9" height="15" fill="rgb(233,139,1)"/><text x="678.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.39%)</title><rect x="680" y="276" width="4" height="15" fill="rgb(253,149,37)"/><text x="683.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="680" y="292" width="4" height="15" fill="rgb(238,191,4)"/><text x="683.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="682" y="308" width="2" height="15" fill="rgb(220,130,25)"/><text x="685.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.20%)</title><rect x="684" y="228" width="3" height="15" fill="rgb(205,222,1)"/><text x="687.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.39%)</title><rect x="684" y="212" width="5" height="15" fill="rgb(241,82,12)"/><text x="687.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="687" y="228" width="2" height="15" fill="rgb(252,59,23)"/><text x="690.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.20%)</title><rect x="687" y="244" width="2" height="15" fill="rgb(250,134,12)"/><text x="690.00" y="254.50"></text></g><g><title>unpack_tuple (mapping.c) (1 samples, 0.20%)</title><rect x="687" y="260" width="2" height="15" fill="rgb(228,66,52)"/><text x="690.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="689" y="260" width="2" height="15" fill="rgb(209,65,36)"/><text x="692.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="689" y="276" width="2" height="15" fill="rgb(216,4,19)"/><text x="692.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="689" y="292" width="2" height="15" fill="rgb(205,216,25)"/><text x="692.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="689" y="308" width="2" height="15" fill="rgb(250,105,54)"/><text x="692.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="689" y="324" width="2" height="15" fill="rgb(215,185,52)"/><text x="692.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="691" y="308" width="3" height="15" fill="rgb(207,50,37)"/><text x="694.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.20%)</title><rect x="691" y="324" width="3" height="15" fill="rgb(248,66,53)"/><text x="694.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="691" y="340" width="3" height="15" fill="rgb(215,53,33)"/><text x="694.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="691" y="356" width="3" height="15" fill="rgb(231,41,11)"/><text x="694.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="691" y="372" width="3" height="15" fill="rgb(238,227,0)"/><text x="694.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="691" y="388" width="3" height="15" fill="rgb(237,69,42)"/><text x="694.00" y="398.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.59%)</title><rect x="689" y="212" width="7" height="15" fill="rgb(229,117,30)"/><text x="692.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.59%)</title><rect x="689" y="228" width="7" height="15" fill="rgb(245,142,16)"/><text x="692.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.59%)</title><rect x="689" y="244" width="7" height="15" fill="rgb(215,4,46)"/><text x="692.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="691" y="260" width="5" height="15" fill="rgb(231,53,6)"/><text x="694.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="691" y="276" width="5" height="15" fill="rgb(214,129,38)"/><text x="694.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="691" y="292" width="5" height="15" fill="rgb(251,165,7)"/><text x="694.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.20%)</title><rect x="694" y="308" width="2" height="15" fill="rgb(243,206,54)"/><text x="697.00" y="318.50"></text></g><g><title>0x7f37973bf14a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="701" y="340" width="2" height="15" fill="rgb(238,161,27)"/><text x="704.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="703" y="340" width="2" height="15" fill="rgb(219,186,51)"/><text x="706.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="701" y="324" width="7" height="15" fill="rgb(247,127,39)"/><text x="704.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="705" y="340" width="3" height="15" fill="rgb(216,192,15)"/><text x="708.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.39%)</title><rect x="708" y="324" width="4" height="15" fill="rgb(243,146,7)"/><text x="711.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.78%)</title><rect x="701" y="308" width="21" height="15" fill="rgb(214,97,49)"/><text x="704.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.79%)</title><rect x="712" y="324" width="10" height="15" fill="rgb(238,182,39)"/><text x="715.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="715" y="340" width="7" height="15" fill="rgb(248,152,39)"/><text x="718.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.39%)</title><rect x="717" y="356" width="5" height="15" fill="rgb(222,209,2)"/><text x="720.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (2 samples, 0.39%)</title><rect x="717" y="372" width="5" height="15" fill="rgb(208,145,26)"/><text x="720.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="719" y="388" width="3" height="15" fill="rgb(227,189,42)"/><text x="722.00" y="398.50"></text></g><g><title>0x7f379735677d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="719" y="404" width="3" height="15" fill="rgb(249,152,25)"/><text x="722.00" y="414.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="722" y="324" width="2" height="15" fill="rgb(217,175,47)"/><text x="725.00" y="334.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.56%)</title><rect x="696" y="212" width="30" height="15" fill="rgb(229,191,52)"/><text x="699.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.56%)</title><rect x="696" y="228" width="30" height="15" fill="rgb(210,102,35)"/><text x="699.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.37%)</title><rect x="698" y="244" width="28" height="15" fill="rgb(233,193,43)"/><text x="701.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.17%)</title><rect x="701" y="260" width="25" height="15" fill="rgb(238,162,6)"/><text x="704.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.17%)</title><rect x="701" y="276" width="25" height="15" fill="rgb(254,88,15)"/><text x="704.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 2.17%)</title><rect x="701" y="292" width="25" height="15" fill="rgb(216,175,22)"/><text x="704.00" y="302.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.39%)</title><rect x="722" y="308" width="4" height="15" fill="rgb(239,191,40)"/><text x="725.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="724" y="324" width="2" height="15" fill="rgb(214,223,31)"/><text x="727.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="724" y="340" width="2" height="15" fill="rgb(227,82,52)"/><text x="727.00" y="350.50"></text></g><g><title>0x7f379747d74a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="736" y="260" width="2" height="15" fill="rgb(219,145,8)"/><text x="739.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="764" y="356" width="4" height="15" fill="rgb(220,1,15)"/><text x="767.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="764" y="372" width="4" height="15" fill="rgb(222,26,26)"/><text x="767.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.39%)</title><rect x="764" y="388" width="4" height="15" fill="rgb(211,189,14)"/><text x="767.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="764" y="404" width="4" height="15" fill="rgb(206,64,24)"/><text x="767.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="764" y="420" width="4" height="15" fill="rgb(232,12,34)"/><text x="767.00" y="430.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(210,203,5)"/><text x="774.00" y="382.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="773" y="452" width="2" height="15" fill="rgb(215,107,50)"/><text x="776.00" y="462.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="773" y="468" width="2" height="15" fill="rgb(242,113,38)"/><text x="776.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="773" y="372" width="5" height="15" fill="rgb(213,93,31)"/><text x="776.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.39%)</title><rect x="773" y="388" width="5" height="15" fill="rgb(250,150,29)"/><text x="776.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.39%)</title><rect x="773" y="404" width="5" height="15" fill="rgb(219,42,45)"/><text x="776.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.39%)</title><rect x="773" y="420" width="5" height="15" fill="rgb(242,48,47)"/><text x="776.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.39%)</title><rect x="773" y="436" width="5" height="15" fill="rgb(217,18,35)"/><text x="776.00" y="446.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="775" y="452" width="3" height="15" fill="rgb(252,79,48)"/><text x="778.00" y="462.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (9 samples, 1.78%)</title><rect x="759" y="324" width="21" height="15" fill="rgb(208,114,16)"/><text x="762.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.58%)</title><rect x="761" y="340" width="19" height="15" fill="rgb(226,100,6)"/><text x="764.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.99%)</title><rect x="768" y="356" width="12" height="15" fill="rgb(237,102,26)"/><text x="771.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="778" y="372" width="2" height="15" fill="rgb(219,86,3)"/><text x="781.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="778" y="388" width="2" height="15" fill="rgb(230,228,40)"/><text x="781.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="778" y="404" width="2" height="15" fill="rgb(212,188,20)"/><text x="781.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.20%)</title><rect x="778" y="420" width="2" height="15" fill="rgb(206,44,41)"/><text x="781.00" y="430.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="780" y="324" width="2" height="15" fill="rgb(209,103,12)"/><text x="783.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.20%)</title><rect x="780" y="340" width="2" height="15" fill="rgb(224,213,13)"/><text x="783.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c) (1 samples, 0.20%)</title><rect x="780" y="356" width="2" height="15" fill="rgb(253,103,28)"/><text x="783.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.38%)</title><rect x="794" y="340" width="16" height="15" fill="rgb(215,224,28)"/><text x="797.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.39%)</title><rect x="819" y="372" width="5" height="15" fill="rgb(249,137,41)"/><text x="822.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.39%)</title><rect x="819" y="388" width="5" height="15" fill="rgb(247,214,45)"/><text x="822.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="819" y="404" width="5" height="15" fill="rgb(246,76,42)"/><text x="822.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="819" y="420" width="5" height="15" fill="rgb(217,104,16)"/><text x="822.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="822" y="436" width="2" height="15" fill="rgb(246,82,2)"/><text x="825.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="836" y="388" width="2" height="15" fill="rgb(214,38,54)"/><text x="839.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="836" y="404" width="2" height="15" fill="rgb(216,28,13)"/><text x="839.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (18 samples, 3.55%)</title><rect x="810" y="340" width="42" height="15" fill="rgb(241,213,5)"/><text x="813.00" y="350.50">ndi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 2.76%)</title><rect x="819" y="356" width="33" height="15" fill="rgb(234,119,51)"/><text x="822.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (12 samples, 2.37%)</title><rect x="824" y="372" width="28" height="15" fill="rgb(233,81,23)"/><text x="827.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 1.18%)</title><rect x="838" y="388" width="14" height="15" fill="rgb(243,87,4)"/><text x="841.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.99%)</title><rect x="840" y="404" width="12" height="15" fill="rgb(232,197,43)"/><text x="843.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.59%)</title><rect x="845" y="420" width="7" height="15" fill="rgb(237,23,9)"/><text x="848.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.59%)</title><rect x="845" y="436" width="7" height="15" fill="rgb(208,105,21)"/><text x="848.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.59%)</title><rect x="845" y="452" width="7" height="15" fill="rgb(242,13,24)"/><text x="848.00" y="462.50"></text></g><g><title>0x7f37973b4e76 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="850" y="468" width="2" height="15" fill="rgb(248,153,22)"/><text x="853.00" y="478.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.59%)</title><rect x="852" y="356" width="7" height="15" fill="rgb(206,170,35)"/><text x="855.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.59%)</title><rect x="852" y="372" width="7" height="15" fill="rgb(219,28,3)"/><text x="855.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.39%)</title><rect x="854" y="388" width="5" height="15" fill="rgb(253,7,2)"/><text x="857.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="854" y="404" width="5" height="15" fill="rgb(248,128,50)"/><text x="857.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="854" y="420" width="5" height="15" fill="rgb(223,37,29)"/><text x="857.00" y="430.50"></text></g><g><title>0x7f37973b4e50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="857" y="436" width="2" height="15" fill="rgb(226,105,24)"/><text x="860.00" y="446.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.20%)</title><rect x="859" y="372" width="2" height="15" fill="rgb(221,66,52)"/><text x="862.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.79%)</title><rect x="861" y="372" width="10" height="15" fill="rgb(237,83,39)"/><text x="864.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.59%)</title><rect x="864" y="388" width="7" height="15" fill="rgb(212,110,7)"/><text x="867.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (3 samples, 0.59%)</title><rect x="864" y="404" width="7" height="15" fill="rgb(238,6,14)"/><text x="867.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.39%)</title><rect x="866" y="420" width="5" height="15" fill="rgb(210,140,4)"/><text x="869.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="866" y="436" width="5" height="15" fill="rgb(206,218,27)"/><text x="869.00" y="446.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.39%)</title><rect x="866" y="452" width="5" height="15" fill="rgb(245,12,10)"/><text x="869.00" y="462.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (2 samples, 0.39%)</title><rect x="866" y="468" width="5" height="15" fill="rgb(250,55,28)"/><text x="869.00" y="478.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.20%)</title><rect x="868" y="484" width="3" height="15" fill="rgb(229,54,43)"/><text x="871.00" y="494.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="871" y="404" width="2" height="15" fill="rgb(223,96,36)"/><text x="874.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="871" y="420" width="2" height="15" fill="rgb(221,144,41)"/><text x="874.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.38%)</title><rect x="859" y="356" width="16" height="15" fill="rgb(208,76,5)"/><text x="862.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="871" y="372" width="4" height="15" fill="rgb(240,223,23)"/><text x="874.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="871" y="388" width="4" height="15" fill="rgb(222,38,34)"/><text x="874.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="873" y="404" width="2" height="15" fill="rgb(251,57,2)"/><text x="876.00" y="414.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="875" y="356" width="3" height="15" fill="rgb(212,89,4)"/><text x="878.00" y="366.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (64 samples, 12.62%)</title><rect x="733" y="244" width="149" height="15" fill="rgb(207,16,13)"/><text x="736.00" y="254.50">clip (numpy/core/fr..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (62 samples, 12.23%)</title><rect x="738" y="260" width="144" height="15" fill="rgb(241,136,5)"/><text x="741.00" y="270.50">_wrapfunc (numpy/c..</text></g><g><title>array_clip (methods.c) (58 samples, 11.44%)</title><rect x="747" y="276" width="135" height="15" fill="rgb(205,136,46)"/><text x="750.00" y="286.50">array_clip (metho..</text></g><g><title>forward_ndarray_method (methods.c) (58 samples, 11.44%)</title><rect x="747" y="292" width="135" height="15" fill="rgb(208,83,20)"/><text x="750.00" y="302.50">forward_ndarray_m..</text></g><g><title>_clip (numpy/core/_methods.py) (57 samples, 11.24%)</title><rect x="750" y="308" width="132" height="15" fill="rgb(224,3,48)"/><text x="753.00" y="318.50">_clip (numpy/cor..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (43 samples, 8.48%)</title><rect x="782" y="324" width="100" height="15" fill="rgb(243,172,31)"/><text x="785.00" y="334.50">_clip_dep_is..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.56%)</title><rect x="852" y="340" width="30" height="15" fill="rgb(234,120,12)"/><text x="855.00" y="350.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="878" y="356" width="4" height="15" fill="rgb(253,166,29)"/><text x="881.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.39%)</title><rect x="878" y="372" width="4" height="15" fill="rgb(208,41,16)"/><text x="881.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (70 samples, 13.81%)</title><rect x="726" y="212" width="163" height="15" fill="rgb(220,114,27)"/><text x="729.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (67 samples, 13.21%)</title><rect x="733" y="228" width="156" height="15" fill="rgb(240,94,40)"/><text x="736.00" y="238.50">array_implement_arra..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.59%)</title><rect x="882" y="244" width="7" height="15" fill="rgb(251,161,2)"/><text x="885.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.59%)</title><rect x="882" y="260" width="7" height="15" fill="rgb(244,91,47)"/><text x="885.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.59%)</title><rect x="882" y="276" width="7" height="15" fill="rgb(225,173,47)"/><text x="885.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.59%)</title><rect x="882" y="292" width="7" height="15" fill="rgb(233,18,11)"/><text x="885.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="887" y="308" width="2" height="15" fill="rgb(216,116,12)"/><text x="890.00" y="318.50"></text></g><g><title>0x7f3770de1f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="906" y="244" width="2" height="15" fill="rgb(223,120,9)"/><text x="909.00" y="254.50"></text></g><g><title>0x7f3770de1f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="908" y="244" width="2" height="15" fill="rgb(239,160,46)"/><text x="911.00" y="254.50"></text></g><g><title>0x7f3770df0225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="910" y="276" width="3" height="15" fill="rgb(248,21,53)"/><text x="913.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.20%)</title><rect x="910" y="292" width="3" height="15" fill="rgb(221,18,33)"/><text x="913.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="910" y="308" width="3" height="15" fill="rgb(226,206,30)"/><text x="913.00" y="318.50"></text></g><g><title>0x7f3770dd4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="913" y="292" width="7" height="15" fill="rgb(239,188,41)"/><text x="916.00" y="302.50"></text></g><g><title>0x7f3770dd4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="913" y="308" width="7" height="15" fill="rgb(207,85,40)"/><text x="916.00" y="318.50"></text></g><g><title>0x7f3770dca2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="913" y="324" width="7" height="15" fill="rgb(254,164,29)"/><text x="916.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.59%)</title><rect x="913" y="340" width="7" height="15" fill="rgb(211,138,1)"/><text x="916.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.39%)</title><rect x="915" y="356" width="5" height="15" fill="rgb(251,152,13)"/><text x="918.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.20%)</title><rect x="917" y="372" width="3" height="15" fill="rgb(250,209,29)"/><text x="920.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="917" y="388" width="3" height="15" fill="rgb(249,57,8)"/><text x="920.00" y="398.50"></text></g><g><title>0x7f3770dd4d50 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="920" y="292" width="2" height="15" fill="rgb(229,210,22)"/><text x="923.00" y="302.50"></text></g><g><title>0x7f3770df02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.99%)</title><rect x="913" y="276" width="11" height="15" fill="rgb(232,46,7)"/><text x="916.00" y="286.50"></text></g><g><title>0x7f3770dd4e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="922" y="292" width="2" height="15" fill="rgb(241,200,48)"/><text x="925.00" y="302.50"></text></g><g><title>0x7f3770dc7f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="922" y="308" width="2" height="15" fill="rgb(234,65,54)"/><text x="925.00" y="318.50"></text></g><g><title>0x7f3770df0456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="924" y="276" width="3" height="15" fill="rgb(233,12,47)"/><text x="927.00" y="286.50"></text></g><g><title>0x7f3770df0511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="927" y="276" width="2" height="15" fill="rgb(209,209,3)"/><text x="930.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="938" y="308" width="2" height="15" fill="rgb(231,190,10)"/><text x="941.00" y="318.50"></text></g><g><title>0x7f3770df0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.38%)</title><rect x="929" y="276" width="16" height="15" fill="rgb(247,141,18)"/><text x="932.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 1.18%)</title><rect x="931" y="292" width="14" height="15" fill="rgb(206,44,13)"/><text x="934.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.39%)</title><rect x="940" y="308" width="5" height="15" fill="rgb(214,67,18)"/><text x="943.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.39%)</title><rect x="940" y="324" width="5" height="15" fill="rgb(252,6,34)"/><text x="943.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="940" y="340" width="5" height="15" fill="rgb(248,20,17)"/><text x="943.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="943" y="356" width="2" height="15" fill="rgb(216,93,52)"/><text x="946.00" y="366.50"></text></g><g><title>0x7f3770df08f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="945" y="276" width="2" height="15" fill="rgb(210,188,40)"/><text x="948.00" y="286.50"></text></g><g><title>0x7f3770de1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.35%)</title><rect x="910" y="244" width="40" height="15" fill="rgb(231,65,26)"/><text x="913.00" y="254.50">0x7..</text></g><g><title>0x7f3770df1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.35%)</title><rect x="910" y="260" width="40" height="15" fill="rgb(236,206,14)"/><text x="913.00" y="270.50">0x7..</text></g><g><title>0x7f3770df0bfc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="947" y="276" width="3" height="15" fill="rgb(221,190,37)"/><text x="950.00" y="286.50"></text></g><g><title>0x7f3770dbeb8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="947" y="292" width="3" height="15" fill="rgb(234,125,23)"/><text x="950.00" y="302.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="950" y="276" width="2" height="15" fill="rgb(218,228,33)"/><text x="953.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="952" y="292" width="2" height="15" fill="rgb(248,117,32)"/><text x="955.00" y="302.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.20%)</title><rect x="954" y="292" width="3" height="15" fill="rgb(219,217,44)"/><text x="957.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.20%)</title><rect x="954" y="308" width="3" height="15" fill="rgb(254,99,46)"/><text x="957.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="954" y="324" width="3" height="15" fill="rgb(247,31,6)"/><text x="957.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.20%)</title><rect x="954" y="340" width="3" height="15" fill="rgb(208,92,17)"/><text x="957.00" y="350.50"></text></g><g><title>0x7f3770de205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.79%)</title><rect x="950" y="244" width="9" height="15" fill="rgb(248,21,52)"/><text x="953.00" y="254.50"></text></g><g><title>array_take (methods.c) (4 samples, 0.79%)</title><rect x="950" y="260" width="9" height="15" fill="rgb(222,151,15)"/><text x="953.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.59%)</title><rect x="952" y="276" width="7" height="15" fill="rgb(226,74,22)"/><text x="955.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="957" y="292" width="2" height="15" fill="rgb(236,181,11)"/><text x="960.00" y="302.50"></text></g><g><title>0x7f3770de21ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="959" y="244" width="2" height="15" fill="rgb(220,69,48)"/><text x="962.00" y="254.50"></text></g><g><title>0x7f3770de2328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="961" y="244" width="5" height="15" fill="rgb(244,44,39)"/><text x="964.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.39%)</title><rect x="961" y="260" width="5" height="15" fill="rgb(245,186,51)"/><text x="964.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.39%)</title><rect x="961" y="276" width="5" height="15" fill="rgb(232,96,49)"/><text x="964.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.39%)</title><rect x="961" y="292" width="5" height="15" fill="rgb(209,50,37)"/><text x="964.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="964" y="308" width="2" height="15" fill="rgb(233,140,29)"/><text x="967.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.20%)</title><rect x="964" y="324" width="2" height="15" fill="rgb(241,43,3)"/><text x="967.00" y="334.50"></text></g><g><title>0x7f3770de2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 5.33%)</title><rect x="906" y="228" width="62" height="15" fill="rgb(246,43,32)"/><text x="909.00" y="238.50">0x7f37..</text></g><g><title>0x7f3770de2522 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="966" y="244" width="2" height="15" fill="rgb(211,90,26)"/><text x="969.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.39%)</title><rect x="1001" y="260" width="5" height="15" fill="rgb(232,19,39)"/><text x="1004.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.39%)</title><rect x="1006" y="260" width="4" height="15" fill="rgb(244,88,34)"/><text x="1009.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.20%)</title><rect x="1010" y="260" width="3" height="15" fill="rgb(232,198,49)"/><text x="1013.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.59%)</title><rect x="1013" y="260" width="7" height="15" fill="rgb(249,138,1)"/><text x="1016.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1015" y="276" width="5" height="15" fill="rgb(216,21,23)"/><text x="1018.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 1.97%)</title><rect x="1020" y="260" width="23" height="15" fill="rgb(245,114,34)"/><text x="1023.00" y="270.50">_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.59%)</title><rect x="1036" y="276" width="7" height="15" fill="rgb(247,169,35)"/><text x="1039.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.20%)</title><rect x="1041" y="292" width="2" height="15" fill="rgb(234,94,14)"/><text x="1044.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.20%)</title><rect x="1043" y="260" width="2" height="15" fill="rgb(222,219,7)"/><text x="1046.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.20%)</title><rect x="1045" y="260" width="3" height="15" fill="rgb(250,100,8)"/><text x="1048.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (42 samples, 8.28%)</title><rect x="968" y="228" width="98" height="15" fill="rgb(220,173,30)"/><text x="971.00" y="238.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py) (42 samples, 8.28%)</title><rect x="968" y="244" width="98" height="15" fill="rgb(237,49,8)"/><text x="971.00" y="254.50">check_array..</text></g><g><title>simplefilter (warnings.py) (8 samples, 1.58%)</title><rect x="1048" y="260" width="18" height="15" fill="rgb(216,154,15)"/><text x="1051.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 1.38%)</title><rect x="1050" y="276" width="16" height="15" fill="rgb(228,176,13)"/><text x="1053.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.20%)</title><rect x="1066" y="228" width="2" height="15" fill="rgb(210,132,33)"/><text x="1069.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.20%)</title><rect x="1066" y="244" width="2" height="15" fill="rgb(232,19,46)"/><text x="1069.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.20%)</title><rect x="1066" y="260" width="2" height="15" fill="rgb(247,20,45)"/><text x="1069.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.20%)</title><rect x="1071" y="244" width="2" height="15" fill="rgb(221,117,45)"/><text x="1074.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1071" y="260" width="2" height="15" fill="rgb(218,24,43)"/><text x="1074.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="1073" y="260" width="2" height="15" fill="rgb(243,21,5)"/><text x="1076.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="1073" y="276" width="2" height="15" fill="rgb(242,154,42)"/><text x="1076.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1078" y="292" width="2" height="15" fill="rgb(245,214,20)"/><text x="1081.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1078" y="308" width="2" height="15" fill="rgb(254,60,25)"/><text x="1081.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1078" y="324" width="2" height="15" fill="rgb(224,82,2)"/><text x="1081.00" y="334.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="1075" y="276" width="7" height="15" fill="rgb(241,113,2)"/><text x="1078.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1080" y="292" width="2" height="15" fill="rgb(229,116,16)"/><text x="1083.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1080" y="308" width="2" height="15" fill="rgb(234,23,51)"/><text x="1083.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1080" y="324" width="2" height="15" fill="rgb(209,82,20)"/><text x="1083.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1082" y="276" width="3" height="15" fill="rgb(219,88,2)"/><text x="1085.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.38%)</title><rect x="1075" y="260" width="17" height="15" fill="rgb(240,91,12)"/><text x="1078.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1085" y="276" width="7" height="15" fill="rgb(206,139,49)"/><text x="1088.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="1089" y="292" width="3" height="15" fill="rgb(247,112,41)"/><text x="1092.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c) (11 samples, 2.17%)</title><rect x="1068" y="228" width="26" height="15" fill="rgb(246,58,20)"/><text x="1071.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.78%)</title><rect x="1073" y="244" width="21" height="15" fill="rgb(207,76,54)"/><text x="1076.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1092" y="260" width="2" height="15" fill="rgb(226,187,49)"/><text x="1095.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1092" y="276" width="2" height="15" fill="rgb(221,109,52)"/><text x="1095.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.39%)</title><rect x="1094" y="228" width="5" height="15" fill="rgb(246,43,12)"/><text x="1097.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="1096" y="244" width="3" height="15" fill="rgb(232,122,1)"/><text x="1099.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.99%)</title><rect x="1099" y="292" width="11" height="15" fill="rgb(208,96,21)"/><text x="1102.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.99%)</title><rect x="1099" y="308" width="11" height="15" fill="rgb(224,172,48)"/><text x="1102.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 0.99%)</title><rect x="1099" y="324" width="11" height="15" fill="rgb(223,148,52)"/><text x="1102.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.99%)</title><rect x="1099" y="340" width="11" height="15" fill="rgb(242,29,46)"/><text x="1102.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.99%)</title><rect x="1099" y="356" width="11" height="15" fill="rgb(242,163,1)"/><text x="1102.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1110" y="356" width="3" height="15" fill="rgb(219,146,23)"/><text x="1113.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="1110" y="340" width="5" height="15" fill="rgb(235,219,24)"/><text x="1113.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1113" y="356" width="2" height="15" fill="rgb(244,165,44)"/><text x="1116.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="1117" y="372" width="3" height="15" fill="rgb(246,106,42)"/><text x="1120.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.20%)</title><rect x="1117" y="388" width="3" height="15" fill="rgb(248,90,26)"/><text x="1120.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.59%)</title><rect x="1115" y="340" width="7" height="15" fill="rgb(221,112,13)"/><text x="1118.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.59%)</title><rect x="1115" y="356" width="7" height="15" fill="rgb(229,63,33)"/><text x="1118.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1120" y="372" width="2" height="15" fill="rgb(253,110,30)"/><text x="1123.00" y="382.50"></text></g><g><title>0x7f3797356a19 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1120" y="388" width="2" height="15" fill="rgb(215,46,49)"/><text x="1123.00" y="398.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.20%)</title><rect x="1120" y="404" width="2" height="15" fill="rgb(223,78,36)"/><text x="1123.00" y="414.50"></text></g><g><title>0x7f37973bf12f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1122" y="388" width="2" height="15" fill="rgb(247,167,24)"/><text x="1125.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.39%)</title><rect x="1122" y="340" width="5" height="15" fill="rgb(237,32,50)"/><text x="1125.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.39%)</title><rect x="1122" y="356" width="5" height="15" fill="rgb(214,173,12)"/><text x="1125.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.39%)</title><rect x="1122" y="372" width="5" height="15" fill="rgb(234,73,37)"/><text x="1125.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.20%)</title><rect x="1124" y="388" width="3" height="15" fill="rgb(219,221,13)"/><text x="1127.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.39%)</title><rect x="1127" y="356" width="4" height="15" fill="rgb(248,72,2)"/><text x="1130.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.97%)</title><rect x="1110" y="324" width="24" height="15" fill="rgb(218,27,2)"/><text x="1113.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1127" y="340" width="7" height="15" fill="rgb(236,33,43)"/><text x="1130.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1131" y="356" width="3" height="15" fill="rgb(207,179,30)"/><text x="1134.00" y="366.50"></text></g><g><title>array_sum (methods.c) (18 samples, 3.55%)</title><rect x="1099" y="228" width="42" height="15" fill="rgb(251,214,23)"/><text x="1102.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 3.55%)</title><rect x="1099" y="244" width="42" height="15" fill="rgb(225,131,43)"/><text x="1102.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (18 samples, 3.55%)</title><rect x="1099" y="260" width="42" height="15" fill="rgb(228,56,40)"/><text x="1102.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 3.55%)</title><rect x="1099" y="276" width="42" height="15" fill="rgb(206,202,38)"/><text x="1102.00" y="286.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 2.56%)</title><rect x="1110" y="292" width="31" height="15" fill="rgb(232,72,27)"/><text x="1113.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 2.56%)</title><rect x="1110" y="308" width="31" height="15" fill="rgb(224,47,44)"/><text x="1113.00" y="318.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1134" y="324" width="7" height="15" fill="rgb(214,31,6)"/><text x="1137.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="1134" y="340" width="7" height="15" fill="rgb(240,218,23)"/><text x="1137.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="1134" y="356" width="7" height="15" fill="rgb(223,152,5)"/><text x="1137.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="1164" y="260" width="2" height="15" fill="rgb(243,170,26)"/><text x="1167.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 2.37%)</title><rect x="1141" y="228" width="28" height="15" fill="rgb(226,83,28)"/><text x="1144.00" y="238.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 1.97%)</title><rect x="1145" y="244" width="24" height="15" fill="rgb(250,60,11)"/><text x="1148.00" y="254.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(240,126,24)"/><text x="1169.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1169" y="260" width="2" height="15" fill="rgb(230,115,6)"/><text x="1172.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(230,126,13)"/><text x="1174.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (123 samples, 24.26%)</title><rect x="889" y="212" width="287" height="15" fill="rgb(208,55,7)"/><text x="892.00" y="222.50">predict_proba (sklearn/tree/_classes.p..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1169" y="228" width="7" height="15" fill="rgb(213,148,30)"/><text x="1172.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1169" y="244" width="7" height="15" fill="rgb(211,51,27)"/><text x="1172.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1171" y="260" width="5" height="15" fill="rgb(223,146,6)"/><text x="1174.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1171" y="276" width="5" height="15" fill="rgb(249,23,1)"/><text x="1174.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="1171" y="292" width="5" height="15" fill="rgb(248,77,19)"/><text x="1174.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1173" y="308" width="3" height="15" fill="rgb(230,16,41)"/><text x="1176.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1173" y="324" width="3" height="15" fill="rgb(213,0,1)"/><text x="1176.00" y="334.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.20%)</title><rect x="1173" y="340" width="3" height="15" fill="rgb(239,14,33)"/><text x="1176.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (238 samples, 46.94%)</title><rect x="624" y="196" width="554" height="15" fill="rgb(218,91,26)"/><text x="627.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(245,13,37)"/><text x="1179.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1176" y="228" width="2" height="15" fill="rgb(206,208,49)"/><text x="1179.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(215,228,17)"/><text x="1179.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(227,216,39)"/><text x="1179.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1176" y="276" width="2" height="15" fill="rgb(220,157,53)"/><text x="1179.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1176" y="292" width="2" height="15" fill="rgb(214,26,1)"/><text x="1179.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1176" y="308" width="2" height="15" fill="rgb(208,171,38)"/><text x="1179.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (241 samples, 47.53%)</title><rect x="619" y="180" width="561" height="15" fill="rgb(247,156,4)"/><text x="622.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="1178" y="196" width="2" height="15" fill="rgb(254,106,25)"/><text x="1181.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="1178" y="212" width="2" height="15" fill="rgb(227,159,53)"/><text x="1181.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="1178" y="228" width="2" height="15" fill="rgb(234,203,23)"/><text x="1181.00" y="238.50"></text></g><g><title>array_add (number.c) (2 samples, 0.39%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(254,145,1)"/><text x="1183.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1180" y="196" width="5" height="15" fill="rgb(222,26,15)"/><text x="1183.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1180" y="212" width="5" height="15" fill="rgb(226,196,3)"/><text x="1183.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(221,44,41)"/><text x="1186.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(226,210,21)"/><text x="1186.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(228,189,35)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.20%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(235,18,23)"/><text x="1186.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.20%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(235,124,5)"/><text x="1186.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.20%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(234,95,7)"/><text x="1186.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.20%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(220,208,16)"/><text x="1188.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.20%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(250,63,27)"/><text x="1188.00" y="206.50"></text></g><g><title>all (507 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,88,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (506 samples, 99.80%)</title><rect x="12" y="52" width="1178" height="15" fill="rgb(229,224,51)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (246 samples, 48.52%)</title><rect x="617" y="68" width="573" height="15" fill="rgb(205,146,4)"/><text x="620.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (246 samples, 48.52%)</title><rect x="617" y="84" width="573" height="15" fill="rgb(244,130,36)"/><text x="620.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py) (246 samples, 48.52%)</title><rect x="617" y="100" width="573" height="15" fill="rgb(229,17,5)"/><text x="620.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (246 samples, 48.52%)</title><rect x="617" y="116" width="573" height="15" fill="rgb(232,61,43)"/><text x="620.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (246 samples, 48.52%)</title><rect x="617" y="132" width="573" height="15" fill="rgb(226,86,27)"/><text x="620.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (246 samples, 48.52%)</title><rect x="617" y="148" width="573" height="15" fill="rgb(224,137,46)"/><text x="620.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (245 samples, 48.32%)</title><rect x="619" y="164" width="571" height="15" fill="rgb(233,220,38)"/><text x="622.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(215,58,4)"/><text x="1190.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(245,117,6)"/><text x="1190.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(206,111,51)"/><text x="1190.00" y="222.50"></text></g></g></svg>