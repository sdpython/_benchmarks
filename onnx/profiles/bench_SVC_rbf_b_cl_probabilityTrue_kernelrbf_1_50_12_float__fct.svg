<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>0x7f107c230b16 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(211,118,40)"/><text x="13.00" y="62.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(209,94,29)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="948" width="4" height="15" fill="rgb(207,184,46)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="964" width="4" height="15" fill="rgb(236,176,7)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(224,125,31)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(245,195,3)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="292" width="8" height="15" fill="rgb(254,192,11)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="308" width="8" height="15" fill="rgb(240,118,10)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="324" width="8" height="15" fill="rgb(210,19,51)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="340" width="8" height="15" fill="rgb(235,205,52)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="13" y="356" width="8" height="15" fill="rgb(248,204,45)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="372" width="8" height="15" fill="rgb(208,101,47)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.65%)</title><rect x="13" y="388" width="8" height="15" fill="rgb(253,59,41)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="404" width="8" height="15" fill="rgb(246,26,38)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="420" width="8" height="15" fill="rgb(240,92,35)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="436" width="8" height="15" fill="rgb(246,84,42)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="13" y="452" width="8" height="15" fill="rgb(235,169,33)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="468" width="8" height="15" fill="rgb(219,115,50)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.65%)</title><rect x="13" y="484" width="8" height="15" fill="rgb(234,192,26)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="500" width="8" height="15" fill="rgb(229,111,42)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="516" width="8" height="15" fill="rgb(227,106,24)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="532" width="8" height="15" fill="rgb(216,94,45)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="13" y="548" width="8" height="15" fill="rgb(226,36,11)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="564" width="8" height="15" fill="rgb(229,129,40)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.65%)</title><rect x="13" y="580" width="8" height="15" fill="rgb(236,192,51)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="596" width="8" height="15" fill="rgb(244,224,34)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="612" width="8" height="15" fill="rgb(208,163,50)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="628" width="8" height="15" fill="rgb(237,115,9)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="644" width="8" height="15" fill="rgb(212,11,49)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="660" width="8" height="15" fill="rgb(244,121,24)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="676" width="8" height="15" fill="rgb(248,88,16)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="13" y="692" width="8" height="15" fill="rgb(241,35,54)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="708" width="8" height="15" fill="rgb(220,157,8)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="724" width="8" height="15" fill="rgb(248,135,21)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="740" width="8" height="15" fill="rgb(247,2,36)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="756" width="8" height="15" fill="rgb(226,216,49)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="772" width="8" height="15" fill="rgb(225,174,21)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="13" y="788" width="8" height="15" fill="rgb(237,197,2)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="13" y="804" width="8" height="15" fill="rgb(240,58,38)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="820" width="8" height="15" fill="rgb(213,224,28)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="836" width="8" height="15" fill="rgb(218,171,40)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="852" width="8" height="15" fill="rgb(223,182,14)"/><text x="16.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="868" width="8" height="15" fill="rgb(222,133,8)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(243,223,41)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(243,29,2)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="13" y="916" width="8" height="15" fill="rgb(210,162,43)"/><text x="16.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(225,78,33)"/><text x="20.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(228,26,5)"/><text x="20.00" y="958.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(223,15,9)"/><text x="20.00" y="974.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(229,89,45)"/><text x="20.00" y="990.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(232,201,22)"/><text x="20.00" y="1006.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(242,70,42)"/><text x="20.00" y="1022.50"></text></g><g><title>yield_lines (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(215,172,16)"/><text x="20.00" y="1038.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.33%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(236,191,24)"/><text x="20.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="13" y="196" width="12" height="15" fill="rgb(251,10,38)"/><text x="16.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="13" y="212" width="12" height="15" fill="rgb(251,92,3)"/><text x="16.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="13" y="228" width="12" height="15" fill="rgb(240,105,30)"/><text x="16.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="13" y="244" width="12" height="15" fill="rgb(212,148,20)"/><text x="16.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="13" y="260" width="12" height="15" fill="rgb(232,132,28)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="13" y="276" width="12" height="15" fill="rgb(219,185,38)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="292" width="4" height="15" fill="rgb(244,42,18)"/><text x="24.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="308" width="4" height="15" fill="rgb(213,132,0)"/><text x="24.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="324" width="4" height="15" fill="rgb(248,114,18)"/><text x="24.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="340" width="4" height="15" fill="rgb(239,169,8)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="356" width="4" height="15" fill="rgb(247,215,51)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="372" width="4" height="15" fill="rgb(251,12,50)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.33%)</title><rect x="21" y="388" width="4" height="15" fill="rgb(239,158,38)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="404" width="4" height="15" fill="rgb(227,102,26)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="420" width="4" height="15" fill="rgb(242,121,53)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="436" width="4" height="15" fill="rgb(241,203,13)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="452" width="4" height="15" fill="rgb(239,108,30)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="468" width="4" height="15" fill="rgb(215,62,1)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="484" width="4" height="15" fill="rgb(253,229,20)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="500" width="4" height="15" fill="rgb(243,57,41)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="516" width="4" height="15" fill="rgb(245,110,32)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="532" width="4" height="15" fill="rgb(229,103,11)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="548" width="4" height="15" fill="rgb(252,165,43)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="564" width="4" height="15" fill="rgb(250,100,52)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.33%)</title><rect x="21" y="580" width="4" height="15" fill="rgb(242,104,36)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="596" width="4" height="15" fill="rgb(224,193,16)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="612" width="4" height="15" fill="rgb(216,95,9)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="628" width="4" height="15" fill="rgb(249,58,0)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="644" width="4" height="15" fill="rgb(220,98,34)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="660" width="4" height="15" fill="rgb(218,38,46)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="676" width="4" height="15" fill="rgb(217,119,32)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="692" width="4" height="15" fill="rgb(212,87,38)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="708" width="4" height="15" fill="rgb(237,108,24)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="724" width="4" height="15" fill="rgb(220,134,34)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="740" width="4" height="15" fill="rgb(245,17,48)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="756" width="4" height="15" fill="rgb(251,138,41)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.33%)</title><rect x="21" y="772" width="4" height="15" fill="rgb(233,105,12)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="788" width="4" height="15" fill="rgb(223,196,46)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="804" width="4" height="15" fill="rgb(225,3,18)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="820" width="4" height="15" fill="rgb(243,174,42)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(249,30,33)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(251,163,0)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(210,132,33)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(217,195,22)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.33%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(245,57,53)"/><text x="24.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(225,189,52)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(252,55,48)"/><text x="24.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(236,56,31)"/><text x="24.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(211,50,9)"/><text x="24.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(250,125,24)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(249,75,10)"/><text x="24.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(216,130,43)"/><text x="24.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(250,16,45)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(236,185,36)"/><text x="24.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(251,168,20)"/><text x="24.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(232,79,22)"/><text x="24.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(238,50,36)"/><text x="24.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(254,89,33)"/><text x="24.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(241,128,46)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(224,121,31)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1156" width="4" height="15" fill="rgb(232,190,50)"/><text x="24.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1172" width="4" height="15" fill="rgb(208,52,30)"/><text x="24.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1188" width="4" height="15" fill="rgb(235,151,12)"/><text x="24.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1204" width="4" height="15" fill="rgb(249,101,31)"/><text x="24.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.33%)</title><rect x="21" y="1220" width="4" height="15" fill="rgb(242,170,27)"/><text x="24.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1236" width="4" height="15" fill="rgb(238,217,10)"/><text x="24.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1252" width="4" height="15" fill="rgb(212,121,3)"/><text x="24.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1268" width="4" height="15" fill="rgb(241,117,8)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1284" width="4" height="15" fill="rgb(207,186,26)"/><text x="24.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1300" width="4" height="15" fill="rgb(231,225,54)"/><text x="24.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1316" width="4" height="15" fill="rgb(208,148,30)"/><text x="24.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1332" width="4" height="15" fill="rgb(223,85,46)"/><text x="24.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="1348" width="4" height="15" fill="rgb(205,135,49)"/><text x="24.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1364" width="4" height="15" fill="rgb(226,220,29)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1380" width="4" height="15" fill="rgb(234,52,11)"/><text x="24.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1396" width="4" height="15" fill="rgb(240,18,44)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1412" width="4" height="15" fill="rgb(238,170,43)"/><text x="24.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="1428" width="4" height="15" fill="rgb(242,37,14)"/><text x="24.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1444" width="4" height="15" fill="rgb(250,168,12)"/><text x="24.00" y="1454.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1460" width="4" height="15" fill="rgb(207,17,38)"/><text x="24.00" y="1470.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="1476" width="4" height="15" fill="rgb(222,158,16)"/><text x="24.00" y="1486.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="21" y="1492" width="4" height="15" fill="rgb(218,217,33)"/><text x="24.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="484" width="4" height="15" fill="rgb(221,70,53)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="500" width="4" height="15" fill="rgb(247,47,53)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="516" width="4" height="15" fill="rgb(221,131,44)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="532" width="4" height="15" fill="rgb(214,104,25)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="548" width="4" height="15" fill="rgb(243,204,44)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="564" width="4" height="15" fill="rgb(238,112,42)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="580" width="4" height="15" fill="rgb(252,200,50)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="596" width="4" height="15" fill="rgb(231,72,53)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="612" width="4" height="15" fill="rgb(211,0,9)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="628" width="4" height="15" fill="rgb(211,146,10)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="644" width="4" height="15" fill="rgb(223,218,6)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="660" width="4" height="15" fill="rgb(217,135,8)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.33%)</title><rect x="25" y="676" width="4" height="15" fill="rgb(231,194,2)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="692" width="4" height="15" fill="rgb(251,63,36)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="708" width="4" height="15" fill="rgb(219,139,36)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="724" width="4" height="15" fill="rgb(210,157,31)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="740" width="4" height="15" fill="rgb(214,221,9)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="756" width="4" height="15" fill="rgb(238,192,31)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(244,52,46)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(250,84,14)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(210,124,17)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(235,194,51)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(238,177,43)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(249,142,53)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(220,160,5)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(213,131,53)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(252,12,24)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(217,184,23)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(211,169,9)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(241,25,49)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(236,210,37)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(238,60,9)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(246,193,34)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(241,80,37)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(223,20,7)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(243,77,25)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(241,150,32)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(210,75,36)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(222,0,21)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.33%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(244,195,1)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(213,78,41)"/><text x="28.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(214,189,19)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(237,118,4)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(247,162,34)"/><text x="28.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(232,88,53)"/><text x="28.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1204" width="4" height="15" fill="rgb(239,33,36)"/><text x="28.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(241,51,54)"/><text x="28.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="1236" width="4" height="15" fill="rgb(227,200,53)"/><text x="28.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1252" width="4" height="15" fill="rgb(238,210,43)"/><text x="28.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1268" width="4" height="15" fill="rgb(222,19,21)"/><text x="28.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1284" width="4" height="15" fill="rgb(221,163,53)"/><text x="28.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1300" width="4" height="15" fill="rgb(217,208,43)"/><text x="28.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1316" width="4" height="15" fill="rgb(209,83,52)"/><text x="28.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1332" width="4" height="15" fill="rgb(246,20,34)"/><text x="28.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1348" width="4" height="15" fill="rgb(224,110,11)"/><text x="28.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.33%)</title><rect x="25" y="1364" width="4" height="15" fill="rgb(217,129,24)"/><text x="28.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1380" width="4" height="15" fill="rgb(209,83,39)"/><text x="28.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1396" width="4" height="15" fill="rgb(224,66,44)"/><text x="28.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1412" width="4" height="15" fill="rgb(205,121,43)"/><text x="28.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1428" width="4" height="15" fill="rgb(254,125,13)"/><text x="28.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1444" width="4" height="15" fill="rgb(253,94,0)"/><text x="28.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="25" y="1460" width="4" height="15" fill="rgb(233,27,5)"/><text x="28.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1476" width="4" height="15" fill="rgb(205,156,4)"/><text x="28.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1492" width="4" height="15" fill="rgb(224,22,15)"/><text x="28.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1508" width="4" height="15" fill="rgb(246,187,9)"/><text x="28.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="1524" width="4" height="15" fill="rgb(233,146,15)"/><text x="28.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="1540" width="4" height="15" fill="rgb(248,144,45)"/><text x="28.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="25" y="1556" width="4" height="15" fill="rgb(232,211,35)"/><text x="28.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="25" y="1572" width="4" height="15" fill="rgb(247,1,26)"/><text x="28.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="25" y="1588" width="4" height="15" fill="rgb(224,181,13)"/><text x="28.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="25" y="1604" width="4" height="15" fill="rgb(251,79,45)"/><text x="28.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="25" y="1620" width="4" height="15" fill="rgb(248,122,22)"/><text x="28.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="25" y="1636" width="4" height="15" fill="rgb(212,89,12)"/><text x="28.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="25" y="1652" width="4" height="15" fill="rgb(250,137,5)"/><text x="28.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1668" width="4" height="15" fill="rgb(235,22,48)"/><text x="28.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="25" y="1684" width="4" height="15" fill="rgb(250,85,18)"/><text x="28.00" y="1694.50"></text></g><g><title>pull_dependencies (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="25" y="1700" width="4" height="15" fill="rgb(253,39,7)"/><text x="28.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1716" width="4" height="15" fill="rgb(251,86,39)"/><text x="28.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1732" width="4" height="15" fill="rgb(215,196,43)"/><text x="28.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1748" width="4" height="15" fill="rgb(240,103,25)"/><text x="28.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1764" width="4" height="15" fill="rgb(232,182,0)"/><text x="28.00" y="1774.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1780" width="4" height="15" fill="rgb(251,139,9)"/><text x="28.00" y="1790.50"></text></g><g><title>get_visitor (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="25" y="1796" width="4" height="15" fill="rgb(221,98,10)"/><text x="28.00" y="1806.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.33%)</title><rect x="25" y="1812" width="4" height="15" fill="rgb(207,177,21)"/><text x="28.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(237,10,49)"/><text x="32.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(242,191,30)"/><text x="32.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(244,134,22)"/><text x="32.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1588" width="4" height="15" fill="rgb(223,198,30)"/><text x="32.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1604" width="4" height="15" fill="rgb(229,154,43)"/><text x="32.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1620" width="4" height="15" fill="rgb(207,110,24)"/><text x="32.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(227,2,40)"/><text x="32.00" y="1646.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(207,44,0)"/><text x="32.00" y="1662.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.33%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(219,102,33)"/><text x="32.00" y="1678.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="1684" width="4" height="15" fill="rgb(235,198,7)"/><text x="32.00" y="1694.50"></text></g><g><title>_validate_linestyle (matplotlib/rcsetup.py) (1 samples, 0.33%)</title><rect x="29" y="1700" width="4" height="15" fill="rgb(234,223,11)"/><text x="32.00" y="1710.50"></text></g><g><title>__call__ (matplotlib/rcsetup.py) (1 samples, 0.33%)</title><rect x="29" y="1716" width="4" height="15" fill="rgb(242,56,48)"/><text x="32.00" y="1726.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="29" y="1732" width="4" height="15" fill="rgb(231,201,24)"/><text x="32.00" y="1742.50"></text></g><g><title>0x7f107c30eeee (libc-2.29.so) (1 samples, 0.33%)</title><rect x="29" y="1748" width="4" height="15" fill="rgb(238,97,28)"/><text x="32.00" y="1758.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="436" width="11" height="15" fill="rgb(233,83,14)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="452" width="11" height="15" fill="rgb(207,143,9)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="468" width="11" height="15" fill="rgb(214,51,5)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="484" width="7" height="15" fill="rgb(229,207,54)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="500" width="7" height="15" fill="rgb(231,160,13)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="516" width="7" height="15" fill="rgb(246,201,40)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="29" y="532" width="7" height="15" fill="rgb(206,221,20)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="548" width="7" height="15" fill="rgb(241,63,32)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="564" width="7" height="15" fill="rgb(241,82,46)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="580" width="7" height="15" fill="rgb(252,156,42)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="596" width="7" height="15" fill="rgb(223,155,16)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="612" width="7" height="15" fill="rgb(212,182,52)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.65%)</title><rect x="29" y="628" width="7" height="15" fill="rgb(241,224,21)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="644" width="7" height="15" fill="rgb(252,109,6)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="660" width="7" height="15" fill="rgb(220,34,25)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="676" width="7" height="15" fill="rgb(246,157,50)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="692" width="7" height="15" fill="rgb(234,201,11)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="708" width="7" height="15" fill="rgb(208,48,42)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.65%)</title><rect x="29" y="724" width="7" height="15" fill="rgb(212,130,39)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="740" width="7" height="15" fill="rgb(240,135,49)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="756" width="7" height="15" fill="rgb(244,46,5)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="772" width="7" height="15" fill="rgb(249,31,40)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="788" width="7" height="15" fill="rgb(240,120,8)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="804" width="7" height="15" fill="rgb(216,69,52)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.65%)</title><rect x="29" y="820" width="7" height="15" fill="rgb(239,87,12)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="836" width="7" height="15" fill="rgb(236,151,5)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="852" width="7" height="15" fill="rgb(222,189,49)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="868" width="7" height="15" fill="rgb(247,9,18)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="884" width="7" height="15" fill="rgb(211,223,25)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="900" width="7" height="15" fill="rgb(249,196,20)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.65%)</title><rect x="29" y="916" width="7" height="15" fill="rgb(254,25,16)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="932" width="7" height="15" fill="rgb(251,186,42)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="948" width="7" height="15" fill="rgb(228,107,20)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="964" width="7" height="15" fill="rgb(215,26,2)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="980" width="7" height="15" fill="rgb(215,33,37)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="996" width="7" height="15" fill="rgb(248,136,31)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.65%)</title><rect x="29" y="1012" width="7" height="15" fill="rgb(230,116,46)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1028" width="7" height="15" fill="rgb(237,220,11)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1044" width="7" height="15" fill="rgb(212,176,6)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1060" width="7" height="15" fill="rgb(247,52,26)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="1076" width="7" height="15" fill="rgb(217,69,6)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1092" width="7" height="15" fill="rgb(227,121,31)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.65%)</title><rect x="29" y="1108" width="7" height="15" fill="rgb(214,218,33)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1124" width="7" height="15" fill="rgb(225,92,36)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1140" width="7" height="15" fill="rgb(237,225,34)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1156" width="7" height="15" fill="rgb(215,27,18)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="1172" width="7" height="15" fill="rgb(211,62,6)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1188" width="7" height="15" fill="rgb(236,36,40)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.65%)</title><rect x="29" y="1204" width="7" height="15" fill="rgb(240,100,16)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1220" width="7" height="15" fill="rgb(249,98,16)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1236" width="7" height="15" fill="rgb(213,211,41)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1252" width="7" height="15" fill="rgb(209,47,36)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="1268" width="7" height="15" fill="rgb(234,108,45)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1284" width="7" height="15" fill="rgb(222,80,18)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.65%)</title><rect x="29" y="1300" width="7" height="15" fill="rgb(254,215,39)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1316" width="7" height="15" fill="rgb(249,120,25)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1332" width="7" height="15" fill="rgb(251,123,31)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1348" width="7" height="15" fill="rgb(219,215,18)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="1364" width="7" height="15" fill="rgb(222,27,2)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1380" width="7" height="15" fill="rgb(213,218,45)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.65%)</title><rect x="29" y="1396" width="7" height="15" fill="rgb(248,109,16)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1412" width="7" height="15" fill="rgb(221,119,3)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1428" width="7" height="15" fill="rgb(219,59,43)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1444" width="7" height="15" fill="rgb(238,159,15)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="29" y="1460" width="7" height="15" fill="rgb(225,62,51)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1476" width="7" height="15" fill="rgb(217,90,45)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.65%)</title><rect x="29" y="1492" width="7" height="15" fill="rgb(207,46,7)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1508" width="7" height="15" fill="rgb(245,145,53)"/><text x="32.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="29" y="1524" width="7" height="15" fill="rgb(221,68,13)"/><text x="32.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(232,229,51)"/><text x="36.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(216,174,46)"/><text x="36.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(216,44,10)"/><text x="36.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.33%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(253,153,9)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(224,133,43)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(245,32,35)"/><text x="36.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1636" width="3" height="15" fill="rgb(223,100,30)"/><text x="36.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="1652" width="3" height="15" fill="rgb(250,151,29)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1668" width="3" height="15" fill="rgb(225,44,29)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.33%)</title><rect x="33" y="1684" width="3" height="15" fill="rgb(240,53,32)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1700" width="3" height="15" fill="rgb(250,104,52)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1716" width="3" height="15" fill="rgb(239,76,39)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1732" width="3" height="15" fill="rgb(236,70,48)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="33" y="1748" width="3" height="15" fill="rgb(236,122,24)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="33" y="1764" width="3" height="15" fill="rgb(247,181,30)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.33%)</title><rect x="33" y="1780" width="3" height="15" fill="rgb(245,133,21)"/><text x="36.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.33%)</title><rect x="33" y="1796" width="3" height="15" fill="rgb(214,163,41)"/><text x="36.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.33%)</title><rect x="33" y="1812" width="3" height="15" fill="rgb(213,183,0)"/><text x="36.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.33%)</title><rect x="33" y="1828" width="3" height="15" fill="rgb(223,157,0)"/><text x="36.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.33%)</title><rect x="33" y="1844" width="3" height="15" fill="rgb(243,166,25)"/><text x="36.00" y="1854.50"></text></g><g><title>0x7f107b548ace (?) (1 samples, 0.33%)</title><rect x="33" y="1860" width="3" height="15" fill="rgb(231,33,25)"/><text x="36.00" y="1870.50"></text></g><g><title>0x7f107b4a370f (?) (1 samples, 0.33%)</title><rect x="33" y="1876" width="3" height="15" fill="rgb(223,207,28)"/><text x="36.00" y="1886.50"></text></g><g><title>0x7f107b4a2b9f (?) (1 samples, 0.33%)</title><rect x="33" y="1892" width="3" height="15" fill="rgb(252,110,38)"/><text x="36.00" y="1902.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="33" y="1908" width="3" height="15" fill="rgb(219,214,48)"/><text x="36.00" y="1918.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.30%)</title><rect x="25" y="340" width="15" height="15" fill="rgb(248,182,45)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.30%)</title><rect x="25" y="356" width="15" height="15" fill="rgb(205,9,51)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.30%)</title><rect x="25" y="372" width="15" height="15" fill="rgb(247,64,0)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.30%)</title><rect x="25" y="388" width="15" height="15" fill="rgb(235,26,40)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.30%)</title><rect x="25" y="404" width="15" height="15" fill="rgb(253,191,34)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.30%)</title><rect x="25" y="420" width="15" height="15" fill="rgb(243,203,27)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.33%)</title><rect x="36" y="436" width="4" height="15" fill="rgb(220,19,50)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="452" width="4" height="15" fill="rgb(209,11,51)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="468" width="4" height="15" fill="rgb(215,27,25)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="484" width="4" height="15" fill="rgb(211,33,36)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="500" width="4" height="15" fill="rgb(224,10,27)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="516" width="4" height="15" fill="rgb(230,103,14)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.33%)</title><rect x="36" y="532" width="4" height="15" fill="rgb(227,2,8)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="548" width="4" height="15" fill="rgb(250,196,44)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="564" width="4" height="15" fill="rgb(218,170,24)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="580" width="4" height="15" fill="rgb(209,59,40)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="596" width="4" height="15" fill="rgb(251,68,54)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="612" width="4" height="15" fill="rgb(220,39,31)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.33%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(213,0,26)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(249,86,3)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(243,187,35)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(240,59,2)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(225,11,6)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(220,4,32)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.33%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(249,52,34)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(214,32,29)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(212,184,50)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(240,30,54)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(238,204,12)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(212,23,53)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.33%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(216,213,20)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(254,212,15)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(245,172,11)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(250,12,54)"/><text x="39.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(244,16,53)"/><text x="39.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(225,36,11)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(217,186,17)"/><text x="39.00" y="926.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(250,88,16)"/><text x="39.00" y="942.50"></text></g><g><title>0x7f107c4b8995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(215,219,35)"/><text x="39.00" y="958.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(234,191,37)"/><text x="39.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(212,94,49)"/><text x="39.00" y="990.50"></text></g><g><title>0x7f107c4b8258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(234,89,1)"/><text x="39.00" y="1006.50"></text></g><g><title>0x7f107c505d7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(238,168,14)"/><text x="39.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(240,114,42)"/><text x="39.00" y="1038.50"></text></g><g><title>0x7f107c506345 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(251,111,3)"/><text x="39.00" y="1054.50"></text></g><g><title>0x7f107c4fefec (ld-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(230,158,36)"/><text x="39.00" y="1070.50"></text></g><g><title>0x7f107c4fd56b (ld-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(218,75,36)"/><text x="39.00" y="1086.50"></text></g><g><title>0x7f107c4fc961 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(236,39,20)"/><text x="39.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(249,165,23)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="804" width="4" height="15" fill="rgb(208,220,16)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="820" width="4" height="15" fill="rgb(234,6,51)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="40" y="836" width="4" height="15" fill="rgb(238,116,15)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="852" width="4" height="15" fill="rgb(209,165,5)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.33%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(235,154,9)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(241,194,38)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(223,14,7)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(210,206,2)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(217,73,35)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(242,46,25)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.33%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(246,83,45)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(208,163,38)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(247,160,11)"/><text x="43.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(221,13,50)"/><text x="43.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="40" y="1028" width="4" height="15" fill="rgb(246,139,43)"/><text x="43.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="40" y="1044" width="4" height="15" fill="rgb(205,180,52)"/><text x="43.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/response.py) (1 samples, 0.33%)</title><rect x="40" y="1060" width="4" height="15" fill="rgb(237,113,29)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="948" width="4" height="15" fill="rgb(209,111,46)"/><text x="47.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="964" width="4" height="15" fill="rgb(214,1,16)"/><text x="47.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="980" width="4" height="15" fill="rgb(211,132,17)"/><text x="47.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="996" width="4" height="15" fill="rgb(248,143,41)"/><text x="47.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1012" width="4" height="15" fill="rgb(237,208,39)"/><text x="47.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1028" width="4" height="15" fill="rgb(237,91,9)"/><text x="47.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="1044" width="4" height="15" fill="rgb(228,222,32)"/><text x="47.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1060" width="4" height="15" fill="rgb(226,187,41)"/><text x="47.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1076" width="4" height="15" fill="rgb(208,125,20)"/><text x="47.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1092" width="4" height="15" fill="rgb(207,215,11)"/><text x="47.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1108" width="4" height="15" fill="rgb(240,157,40)"/><text x="47.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1124" width="4" height="15" fill="rgb(217,46,46)"/><text x="47.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1140" width="4" height="15" fill="rgb(239,161,53)"/><text x="47.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1156" width="4" height="15" fill="rgb(229,26,23)"/><text x="47.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.33%)</title><rect x="44" y="1172" width="4" height="15" fill="rgb(218,15,27)"/><text x="47.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1188" width="4" height="15" fill="rgb(236,167,12)"/><text x="47.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1204" width="4" height="15" fill="rgb(208,117,51)"/><text x="47.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1220" width="4" height="15" fill="rgb(212,13,9)"/><text x="47.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1236" width="4" height="15" fill="rgb(206,110,4)"/><text x="47.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1252" width="4" height="15" fill="rgb(242,68,32)"/><text x="47.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.33%)</title><rect x="44" y="1268" width="4" height="15" fill="rgb(249,91,34)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1284" width="4" height="15" fill="rgb(242,175,34)"/><text x="47.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1300" width="4" height="15" fill="rgb(208,190,35)"/><text x="47.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1316" width="4" height="15" fill="rgb(247,73,12)"/><text x="47.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1332" width="4" height="15" fill="rgb(206,114,29)"/><text x="47.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1348" width="4" height="15" fill="rgb(218,79,36)"/><text x="47.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.33%)</title><rect x="44" y="1364" width="4" height="15" fill="rgb(248,210,32)"/><text x="47.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.33%)</title><rect x="44" y="1380" width="4" height="15" fill="rgb(215,132,20)"/><text x="47.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.33%)</title><rect x="44" y="1396" width="4" height="15" fill="rgb(249,39,42)"/><text x="47.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.33%)</title><rect x="44" y="1412" width="4" height="15" fill="rgb(246,175,53)"/><text x="47.00" y="1422.50"></text></g><g><title>0x7f1047808ea4 (?) (1 samples, 0.33%)</title><rect x="44" y="1428" width="4" height="15" fill="rgb(249,89,17)"/><text x="47.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="68" width="39" height="15" fill="rgb(208,133,17)"/><text x="16.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="84" width="39" height="15" fill="rgb(251,172,31)"/><text x="16.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="100" width="39" height="15" fill="rgb(217,25,53)"/><text x="16.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.26%)</title><rect x="13" y="116" width="39" height="15" fill="rgb(221,107,13)"/><text x="16.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="132" width="39" height="15" fill="rgb(212,78,22)"/><text x="16.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py) (10 samples, 3.26%)</title><rect x="13" y="148" width="39" height="15" fill="rgb(220,3,4)"/><text x="16.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="164" width="39" height="15" fill="rgb(207,15,17)"/><text x="16.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.26%)</title><rect x="13" y="180" width="39" height="15" fill="rgb(238,1,21)"/><text x="16.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="196" width="27" height="15" fill="rgb(249,66,45)"/><text x="28.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.28%)</title><rect x="25" y="212" width="27" height="15" fill="rgb(238,178,50)"/><text x="28.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="228" width="27" height="15" fill="rgb(244,229,20)"/><text x="28.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.28%)</title><rect x="25" y="244" width="27" height="15" fill="rgb(238,51,39)"/><text x="28.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="260" width="27" height="15" fill="rgb(222,131,8)"/><text x="28.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="276" width="27" height="15" fill="rgb(248,172,45)"/><text x="28.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="292" width="27" height="15" fill="rgb(228,143,7)"/><text x="28.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.28%)</title><rect x="25" y="308" width="27" height="15" fill="rgb(211,103,54)"/><text x="28.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="25" y="324" width="27" height="15" fill="rgb(247,191,23)"/><text x="28.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.98%)</title><rect x="40" y="340" width="12" height="15" fill="rgb(208,8,40)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="356" width="12" height="15" fill="rgb(245,155,32)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="372" width="12" height="15" fill="rgb(253,182,2)"/><text x="43.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="388" width="12" height="15" fill="rgb(242,197,26)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="404" width="12" height="15" fill="rgb(212,162,52)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="420" width="12" height="15" fill="rgb(215,226,1)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="436" width="12" height="15" fill="rgb(219,74,11)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="452" width="12" height="15" fill="rgb(225,141,16)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="468" width="12" height="15" fill="rgb(206,179,42)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.98%)</title><rect x="40" y="484" width="12" height="15" fill="rgb(244,167,7)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="500" width="12" height="15" fill="rgb(248,55,49)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="516" width="12" height="15" fill="rgb(238,70,9)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="532" width="12" height="15" fill="rgb(244,225,23)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="548" width="12" height="15" fill="rgb(253,97,26)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="564" width="12" height="15" fill="rgb(218,35,33)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.98%)</title><rect x="40" y="580" width="12" height="15" fill="rgb(215,43,14)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="596" width="12" height="15" fill="rgb(211,191,37)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="612" width="12" height="15" fill="rgb(251,19,47)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="628" width="12" height="15" fill="rgb(223,133,42)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="644" width="12" height="15" fill="rgb(217,38,44)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="660" width="12" height="15" fill="rgb(229,119,34)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.98%)</title><rect x="40" y="676" width="12" height="15" fill="rgb(242,215,6)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="692" width="12" height="15" fill="rgb(246,95,2)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="708" width="12" height="15" fill="rgb(219,11,36)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="724" width="12" height="15" fill="rgb(254,43,9)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="740" width="12" height="15" fill="rgb(217,75,24)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="756" width="12" height="15" fill="rgb(205,11,54)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.98%)</title><rect x="40" y="772" width="12" height="15" fill="rgb(252,111,8)"/><text x="43.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="788" width="8" height="15" fill="rgb(233,81,39)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="804" width="8" height="15" fill="rgb(243,136,8)"/><text x="47.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="820" width="8" height="15" fill="rgb(212,214,24)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="836" width="8" height="15" fill="rgb(239,112,15)"/><text x="47.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="852" width="8" height="15" fill="rgb(237,192,32)"/><text x="47.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="44" y="868" width="8" height="15" fill="rgb(223,7,10)"/><text x="47.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="884" width="8" height="15" fill="rgb(239,190,49)"/><text x="47.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.65%)</title><rect x="44" y="900" width="8" height="15" fill="rgb(246,176,28)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="916" width="8" height="15" fill="rgb(227,36,40)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="44" y="932" width="8" height="15" fill="rgb(253,164,19)"/><text x="47.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="948" width="4" height="15" fill="rgb(227,229,36)"/><text x="51.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(243,41,29)"/><text x="51.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(236,108,19)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.33%)</title><rect x="48" y="996" width="4" height="15" fill="rgb(249,220,23)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="1012" width="4" height="15" fill="rgb(231,173,52)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="1028" width="4" height="15" fill="rgb(225,85,37)"/><text x="51.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="1044" width="4" height="15" fill="rgb(220,63,19)"/><text x="51.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="48" y="1060" width="4" height="15" fill="rgb(211,99,47)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="1076" width="4" height="15" fill="rgb(230,176,1)"/><text x="51.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.33%)</title><rect x="48" y="1092" width="4" height="15" fill="rgb(225,145,14)"/><text x="51.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.33%)</title><rect x="48" y="1108" width="4" height="15" fill="rgb(211,154,54)"/><text x="51.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.33%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(252,1,23)"/><text x="51.00" y="1134.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.33%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(240,88,5)"/><text x="51.00" y="1150.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(235,156,31)"/><text x="51.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(238,186,33)"/><text x="51.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.33%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(215,48,32)"/><text x="51.00" y="1198.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.33%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(226,135,36)"/><text x="51.00" y="1214.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="56" y="116" width="3" height="15" fill="rgb(231,116,38)"/><text x="59.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="102" y="180" width="4" height="15" fill="rgb(208,162,31)"/><text x="105.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.63%)</title><rect x="113" y="212" width="19" height="15" fill="rgb(205,154,22)"/><text x="116.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="125" y="228" width="7" height="15" fill="rgb(222,43,7)"/><text x="128.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="125" y="244" width="7" height="15" fill="rgb(212,30,6)"/><text x="128.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="125" y="260" width="7" height="15" fill="rgb(238,53,45)"/><text x="128.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="125" y="276" width="7" height="15" fill="rgb(206,157,41)"/><text x="128.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="129" y="292" width="3" height="15" fill="rgb(229,75,12)"/><text x="132.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="152" y="292" width="4" height="15" fill="rgb(213,40,2)"/><text x="155.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="152" y="308" width="4" height="15" fill="rgb(214,191,49)"/><text x="155.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="152" y="324" width="4" height="15" fill="rgb(254,147,46)"/><text x="155.00" y="334.50"></text></g><g><title>0x7f107c231c48 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="152" y="340" width="4" height="15" fill="rgb(224,27,38)"/><text x="155.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="156" y="292" width="7" height="15" fill="rgb(238,99,30)"/><text x="159.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="159" y="308" width="4" height="15" fill="rgb(230,120,21)"/><text x="162.00" y="318.50"></text></g><g><title>0x7f103c227ae0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="167" y="484" width="4" height="15" fill="rgb(251,124,41)"/><text x="170.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="167" y="452" width="8" height="15" fill="rgb(212,9,20)"/><text x="170.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="167" y="468" width="8" height="15" fill="rgb(244,197,32)"/><text x="170.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="484" width="4" height="15" fill="rgb(227,198,10)"/><text x="174.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="500" width="4" height="15" fill="rgb(212,145,16)"/><text x="174.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="516" width="4" height="15" fill="rgb(221,5,16)"/><text x="174.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="532" width="4" height="15" fill="rgb(207,176,2)"/><text x="174.00" y="542.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="171" y="548" width="4" height="15" fill="rgb(235,193,11)"/><text x="174.00" y="558.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="171" y="564" width="4" height="15" fill="rgb(224,99,49)"/><text x="174.00" y="574.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="340" width="12" height="15" fill="rgb(240,108,37)"/><text x="170.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="356" width="12" height="15" fill="rgb(251,168,51)"/><text x="170.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="372" width="12" height="15" fill="rgb(250,172,2)"/><text x="170.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="388" width="12" height="15" fill="rgb(233,46,47)"/><text x="170.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="404" width="12" height="15" fill="rgb(253,224,40)"/><text x="170.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="420" width="12" height="15" fill="rgb(217,55,38)"/><text x="170.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="167" y="436" width="12" height="15" fill="rgb(245,20,11)"/><text x="170.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="175" y="452" width="4" height="15" fill="rgb(232,96,30)"/><text x="178.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="175" y="468" width="4" height="15" fill="rgb(206,187,12)"/><text x="178.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="179" y="356" width="7" height="15" fill="rgb(230,67,42)"/><text x="182.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="179" y="372" width="7" height="15" fill="rgb(235,111,24)"/><text x="182.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="179" y="388" width="7" height="15" fill="rgb(217,64,24)"/><text x="182.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="179" y="340" width="11" height="15" fill="rgb(234,109,17)"/><text x="182.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="186" y="356" width="4" height="15" fill="rgb(236,218,48)"/><text x="189.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="190" y="340" width="4" height="15" fill="rgb(238,72,18)"/><text x="193.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="190" y="356" width="4" height="15" fill="rgb(251,82,9)"/><text x="193.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceFree (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="190" y="372" width="4" height="15" fill="rgb(250,44,14)"/><text x="193.00" y="382.50"></text></g><g><title>0x7f107c402c32 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="232" y="372" width="4" height="15" fill="rgb(250,116,49)"/><text x="235.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (3 samples, 0.98%)</title><rect x="229" y="356" width="11" height="15" fill="rgb(252,180,17)"/><text x="232.00" y="366.50"></text></g><g><title>0x7f107c402c6e (libm-2.29.so) (1 samples, 0.33%)</title><rect x="236" y="372" width="4" height="15" fill="rgb(248,49,19)"/><text x="239.00" y="382.50"></text></g><g><title>0x7f107c23f6e9 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="240" y="452" width="4" height="15" fill="rgb(229,176,2)"/><text x="243.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="356" width="8" height="15" fill="rgb(241,80,25)"/><text x="243.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="372" width="8" height="15" fill="rgb(244,17,11)"/><text x="243.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="388" width="8" height="15" fill="rgb(254,170,11)"/><text x="243.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="404" width="8" height="15" fill="rgb(250,140,3)"/><text x="243.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="420" width="8" height="15" fill="rgb(206,47,19)"/><text x="243.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="240" y="436" width="8" height="15" fill="rgb(213,40,12)"/><text x="243.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="244" y="452" width="4" height="15" fill="rgb(245,64,17)"/><text x="247.00" y="462.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.89%)</title><rect x="194" y="340" width="58" height="15" fill="rgb(249,217,18)"/><text x="197.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="248" y="356" width="4" height="15" fill="rgb(254,185,42)"/><text x="251.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="252" y="356" width="7" height="15" fill="rgb(235,124,42)"/><text x="255.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="252" y="372" width="7" height="15" fill="rgb(241,25,21)"/><text x="255.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="252" y="388" width="7" height="15" fill="rgb(251,193,8)"/><text x="255.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="255" y="404" width="4" height="15" fill="rgb(214,205,4)"/><text x="258.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="255" y="420" width="4" height="15" fill="rgb(235,40,22)"/><text x="258.00" y="430.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="259" y="356" width="4" height="15" fill="rgb(208,14,39)"/><text x="262.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="259" y="372" width="4" height="15" fill="rgb(237,188,41)"/><text x="262.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 10.10%)</title><rect x="148" y="260" width="119" height="15" fill="rgb(219,171,17)"/><text x="151.00" y="270.50">onnxruntime::I..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 10.10%)</title><rect x="148" y="276" width="119" height="15" fill="rgb(253,162,21)"/><text x="151.00" y="286.50">onnxruntime::I..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 8.79%)</title><rect x="163" y="292" width="104" height="15" fill="rgb(222,123,54)"/><text x="166.00" y="302.50">onnxruntime:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 8.79%)</title><rect x="163" y="308" width="104" height="15" fill="rgb(235,20,5)"/><text x="166.00" y="318.50">onnxruntime:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 8.79%)</title><rect x="163" y="324" width="104" height="15" fill="rgb(225,161,26)"/><text x="166.00" y="334.50">onnxruntime:..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.30%)</title><rect x="252" y="340" width="15" height="15" fill="rgb(230,131,3)"/><text x="255.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="263" y="356" width="4" height="15" fill="rgb(248,71,35)"/><text x="266.00" y="366.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="267" y="260" width="4" height="15" fill="rgb(208,45,11)"/><text x="270.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="271" y="260" width="8" height="15" fill="rgb(225,11,0)"/><text x="274.00" y="270.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="279" y="260" width="3" height="15" fill="rgb(212,48,26)"/><text x="282.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 12.38%)</title><rect x="140" y="244" width="146" height="15" fill="rgb(247,80,38)"/><text x="143.00" y="254.50">onnxruntime::pytho..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="260" width="4" height="15" fill="rgb(246,127,42)"/><text x="285.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="276" width="4" height="15" fill="rgb(208,61,52)"/><text x="285.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="292" width="4" height="15" fill="rgb(225,191,16)"/><text x="285.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="308" width="4" height="15" fill="rgb(254,9,7)"/><text x="285.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="324" width="4" height="15" fill="rgb(233,156,28)"/><text x="285.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="340" width="4" height="15" fill="rgb(246,198,24)"/><text x="285.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="356" width="4" height="15" fill="rgb(229,143,34)"/><text x="285.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="372" width="4" height="15" fill="rgb(220,6,27)"/><text x="285.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="282" y="388" width="4" height="15" fill="rgb(241,110,5)"/><text x="285.00" y="398.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (63 samples, 20.52%)</title><rect x="52" y="100" width="242" height="15" fill="rgb(220,105,53)"/><text x="55.00" y="110.50">profile (bench_SVC_rbf_b_cl_prob..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (61 samples, 19.87%)</title><rect x="59" y="116" width="235" height="15" fill="rgb(254,171,44)"/><text x="62.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (59 samples, 19.22%)</title><rect x="67" y="132" width="227" height="15" fill="rgb(209,69,26)"/><text x="70.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (57 samples, 18.57%)</title><rect x="75" y="148" width="219" height="15" fill="rgb(218,124,22)"/><text x="78.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (55 samples, 17.92%)</title><rect x="83" y="164" width="211" height="15" fill="rgb(212,63,51)"/><text x="86.00" y="174.50">_run_whole_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (49 samples, 15.96%)</title><rect x="106" y="180" width="188" height="15" fill="rgb(230,63,5)"/><text x="109.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py) (47 samples, 15.31%)</title><rect x="113" y="196" width="181" height="15" fill="rgb(237,59,51)"/><text x="116.00" y="206.50">run (onnxruntime/capi/s..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 13.68%)</title><rect x="132" y="212" width="162" height="15" fill="rgb(222,94,48)"/><text x="135.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 13.36%)</title><rect x="136" y="228" width="158" height="15" fill="rgb(209,147,37)"/><text x="139.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="286" y="244" width="8" height="15" fill="rgb(218,211,39)"/><text x="289.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="286" y="260" width="8" height="15" fill="rgb(249,8,23)"/><text x="289.00" y="270.50"></text></g><g><title>profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (64 samples, 20.85%)</title><rect x="52" y="68" width="246" height="15" fill="rgb(207,162,16)"/><text x="55.00" y="78.50">profile_ort (bench_SVC_rbf_b_cl_..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (64 samples, 20.85%)</title><rect x="52" y="84" width="246" height="15" fill="rgb(210,184,4)"/><text x="55.00" y="94.50">setup_profile (bench_SVC_rbf_b_c..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="294" y="100" width="4" height="15" fill="rgb(233,205,33)"/><text x="297.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="294" y="116" width="4" height="15" fill="rgb(216,158,53)"/><text x="297.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="294" y="132" width="4" height="15" fill="rgb(245,154,33)"/><text x="297.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="294" y="148" width="4" height="15" fill="rgb(239,13,38)"/><text x="297.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="294" y="164" width="4" height="15" fill="rgb(222,35,30)"/><text x="297.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="180" width="4" height="15" fill="rgb(230,97,5)"/><text x="297.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="196" width="4" height="15" fill="rgb(241,184,17)"/><text x="297.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="212" width="4" height="15" fill="rgb(212,135,44)"/><text x="297.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="294" y="228" width="4" height="15" fill="rgb(231,86,54)"/><text x="297.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="244" width="4" height="15" fill="rgb(253,114,25)"/><text x="297.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.33%)</title><rect x="294" y="260" width="4" height="15" fill="rgb(211,122,0)"/><text x="297.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="276" width="4" height="15" fill="rgb(229,142,15)"/><text x="297.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="292" width="4" height="15" fill="rgb(218,11,53)"/><text x="297.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="308" width="4" height="15" fill="rgb(209,117,9)"/><text x="297.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="294" y="324" width="4" height="15" fill="rgb(217,176,42)"/><text x="297.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="340" width="4" height="15" fill="rgb(217,225,33)"/><text x="297.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.33%)</title><rect x="294" y="356" width="4" height="15" fill="rgb(213,229,39)"/><text x="297.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="372" width="4" height="15" fill="rgb(226,92,21)"/><text x="297.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="388" width="4" height="15" fill="rgb(221,20,50)"/><text x="297.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="404" width="4" height="15" fill="rgb(225,5,31)"/><text x="297.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="294" y="420" width="4" height="15" fill="rgb(208,126,24)"/><text x="297.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="436" width="4" height="15" fill="rgb(245,0,47)"/><text x="297.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.33%)</title><rect x="294" y="452" width="4" height="15" fill="rgb(217,82,14)"/><text x="297.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="468" width="4" height="15" fill="rgb(227,124,23)"/><text x="297.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="484" width="4" height="15" fill="rgb(247,111,41)"/><text x="297.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="500" width="4" height="15" fill="rgb(251,70,31)"/><text x="297.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="516" width="4" height="15" fill="rgb(252,41,47)"/><text x="297.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="294" y="532" width="4" height="15" fill="rgb(206,111,18)"/><text x="297.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="294" y="548" width="4" height="15" fill="rgb(215,132,24)"/><text x="297.00" y="558.50"></text></g><g><title>0x7f103c268af0 (?) (1 samples, 0.33%)</title><rect x="294" y="564" width="4" height="15" fill="rgb(230,76,49)"/><text x="297.00" y="574.50"></text></g><g><title>0x7f103c27b1d2 (?) (1 samples, 0.33%)</title><rect x="294" y="580" width="4" height="15" fill="rgb(254,188,40)"/><text x="297.00" y="590.50"></text></g><g><title>0x7f103c27a7b8 (?) (1 samples, 0.33%)</title><rect x="294" y="596" width="4" height="15" fill="rgb(237,57,26)"/><text x="297.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="294" y="612" width="4" height="15" fill="rgb(253,170,27)"/><text x="297.00" y="622.50"></text></g><g><title>0x7f103c278994 (?) (1 samples, 0.33%)</title><rect x="294" y="628" width="4" height="15" fill="rgb(234,30,30)"/><text x="297.00" y="638.50"></text></g><g><title>0x7f103c277563 (?) (1 samples, 0.33%)</title><rect x="294" y="644" width="4" height="15" fill="rgb(205,143,49)"/><text x="297.00" y="654.50"></text></g><g><title>0x7f103c821eb1 (?) (1 samples, 0.33%)</title><rect x="294" y="660" width="4" height="15" fill="rgb(253,105,2)"/><text x="297.00" y="670.50"></text></g><g><title>0x7f103c27959c (?) (1 samples, 0.33%)</title><rect x="294" y="676" width="4" height="15" fill="rgb(217,160,19)"/><text x="297.00" y="686.50"></text></g><g><title>0x7f103c81e3ad (?) (1 samples, 0.33%)</title><rect x="294" y="692" width="4" height="15" fill="rgb(242,54,38)"/><text x="297.00" y="702.50"></text></g><g><title>0x7f103c81e0ef (?) (1 samples, 0.33%)</title><rect x="294" y="708" width="4" height="15" fill="rgb(214,225,32)"/><text x="297.00" y="718.50"></text></g><g><title>0x7f103c822749 (?) (1 samples, 0.33%)</title><rect x="294" y="724" width="4" height="15" fill="rgb(237,18,51)"/><text x="297.00" y="734.50"></text></g><g><title>0x7f103c8225fa (?) (1 samples, 0.33%)</title><rect x="294" y="740" width="4" height="15" fill="rgb(214,191,27)"/><text x="297.00" y="750.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.65%)</title><rect x="305" y="116" width="8" height="15" fill="rgb(226,11,47)"/><text x="308.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="309" y="132" width="4" height="15" fill="rgb(241,184,25)"/><text x="312.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="309" y="148" width="4" height="15" fill="rgb(253,24,37)"/><text x="312.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="309" y="164" width="4" height="15" fill="rgb(232,154,19)"/><text x="312.00" y="174.50"></text></g><g><title>0x7f107b451c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="463" y="292" width="4" height="15" fill="rgb(222,37,27)"/><text x="466.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="467" y="292" width="4" height="15" fill="rgb(249,24,32)"/><text x="470.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="467" y="308" width="4" height="15" fill="rgb(248,136,53)"/><text x="470.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="467" y="324" width="4" height="15" fill="rgb(225,196,21)"/><text x="470.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.98%)</title><rect x="463" y="212" width="12" height="15" fill="rgb(251,118,10)"/><text x="466.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.98%)</title><rect x="463" y="228" width="12" height="15" fill="rgb(210,21,3)"/><text x="466.00" y="238.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.98%)</title><rect x="463" y="244" width="12" height="15" fill="rgb(208,79,3)"/><text x="466.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.98%)</title><rect x="463" y="260" width="12" height="15" fill="rgb(253,174,22)"/><text x="466.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.98%)</title><rect x="463" y="276" width="12" height="15" fill="rgb(229,1,11)"/><text x="466.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.33%)</title><rect x="471" y="292" width="4" height="15" fill="rgb(205,20,20)"/><text x="474.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.65%)</title><rect x="475" y="212" width="7" height="15" fill="rgb(220,119,40)"/><text x="478.00" y="222.50"></text></g><g><title>0x7f103d39fc29 (?) (1 samples, 0.33%)</title><rect x="482" y="244" width="4" height="15" fill="rgb(245,147,32)"/><text x="485.00" y="254.50"></text></g><g><title>0x7f103d3a6d9e (?) (1 samples, 0.33%)</title><rect x="482" y="260" width="4" height="15" fill="rgb(226,104,32)"/><text x="485.00" y="270.50"></text></g><g><title>0x7f103d3a6c56 (?) (1 samples, 0.33%)</title><rect x="482" y="276" width="4" height="15" fill="rgb(222,158,37)"/><text x="485.00" y="286.50"></text></g><g><title>0x7f103d3acac7 (?) (1 samples, 0.33%)</title><rect x="482" y="292" width="4" height="15" fill="rgb(242,81,36)"/><text x="485.00" y="302.50"></text></g><g><title>0x7f103d3abc5c (?) (1 samples, 0.33%)</title><rect x="482" y="308" width="4" height="15" fill="rgb(229,191,14)"/><text x="485.00" y="318.50"></text></g><g><title>0x7f103d395315 (?) (1 samples, 0.33%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(251,44,2)"/><text x="485.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.65%)</title><rect x="486" y="244" width="8" height="15" fill="rgb(230,153,14)"/><text x="489.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.65%)</title><rect x="486" y="260" width="8" height="15" fill="rgb(217,14,3)"/><text x="489.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.33%)</title><rect x="490" y="276" width="4" height="15" fill="rgb(218,86,41)"/><text x="493.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.33%)</title><rect x="494" y="292" width="4" height="15" fill="rgb(230,201,18)"/><text x="497.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.33%)</title><rect x="494" y="308" width="4" height="15" fill="rgb(252,209,50)"/><text x="497.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.33%)</title><rect x="494" y="324" width="4" height="15" fill="rgb(223,31,28)"/><text x="497.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.33%)</title><rect x="494" y="340" width="4" height="15" fill="rgb(208,206,6)"/><text x="497.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h) (1 samples, 0.33%)</title><rect x="494" y="356" width="4" height="15" fill="rgb(236,129,34)"/><text x="497.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.33%)</title><rect x="494" y="372" width="4" height="15" fill="rgb(247,153,15)"/><text x="497.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.33%)</title><rect x="494" y="388" width="4" height="15" fill="rgb(228,196,41)"/><text x="497.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.33%)</title><rect x="494" y="404" width="4" height="15" fill="rgb(221,159,46)"/><text x="497.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.33%)</title><rect x="494" y="420" width="4" height="15" fill="rgb(214,112,41)"/><text x="497.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.33%)</title><rect x="494" y="436" width="4" height="15" fill="rgb(249,129,33)"/><text x="497.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.33%)</title><rect x="494" y="452" width="4" height="15" fill="rgb(205,181,2)"/><text x="497.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.33%)</title><rect x="494" y="468" width="4" height="15" fill="rgb(245,29,43)"/><text x="497.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.33%)</title><rect x="494" y="484" width="4" height="15" fill="rgb(244,189,42)"/><text x="497.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="494" y="500" width="4" height="15" fill="rgb(236,175,42)"/><text x="497.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="494" y="516" width="4" height="15" fill="rgb(223,116,22)"/><text x="497.00" y="526.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="494" y="532" width="4" height="15" fill="rgb(223,192,52)"/><text x="497.00" y="542.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.33%)</title><rect x="498" y="340" width="3" height="15" fill="rgb(208,214,45)"/><text x="501.00" y="350.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.33%)</title><rect x="498" y="356" width="3" height="15" fill="rgb(239,193,33)"/><text x="501.00" y="366.50"></text></g><g><title>pybind11::buffer::buffer (pytypes.h) (1 samples, 0.33%)</title><rect x="498" y="372" width="3" height="15" fill="rgb(242,178,50)"/><text x="501.00" y="382.50"></text></g><g><title>pybind11::object::object (pytypes.h) (1 samples, 0.33%)</title><rect x="498" y="388" width="3" height="15" fill="rgb(253,66,24)"/><text x="501.00" y="398.50"></text></g><g><title>pybind11::handle::inc_ref &amp; (pytypes.h) (1 samples, 0.33%)</title><rect x="498" y="404" width="3" height="15" fill="rgb(215,74,24)"/><text x="501.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (6 samples, 1.95%)</title><rect x="509" y="468" width="23" height="15" fill="rgb(240,16,34)"/><text x="512.00" y="478.50">R..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.33%)</title><rect x="532" y="468" width="4" height="15" fill="rgb(232,188,13)"/><text x="535.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (1 samples, 0.33%)</title><rect x="532" y="484" width="4" height="15" fill="rgb(254,229,30)"/><text x="535.00" y="494.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (11 samples, 3.58%)</title><rect x="498" y="292" width="42" height="15" fill="rgb(247,81,42)"/><text x="501.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (11 samples, 3.58%)</title><rect x="498" y="308" width="42" height="15" fill="rgb(225,217,40)"/><text x="501.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (11 samples, 3.58%)</title><rect x="498" y="324" width="42" height="15" fill="rgb(217,79,44)"/><text x="501.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (10 samples, 3.26%)</title><rect x="501" y="340" width="39" height="15" fill="rgb(254,151,21)"/><text x="504.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h) (10 samples, 3.26%)</title><rect x="501" y="356" width="39" height="15" fill="rgb(228,44,14)"/><text x="504.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (10 samples, 3.26%)</title><rect x="501" y="372" width="39" height="15" fill="rgb(217,115,35)"/><text x="504.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h) (10 samples, 3.26%)</title><rect x="501" y="388" width="39" height="15" fill="rgb(206,187,43)"/><text x="504.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (10 samples, 3.26%)</title><rect x="501" y="404" width="39" height="15" fill="rgb(250,185,4)"/><text x="504.00" y="414.50">pyb..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (10 samples, 3.26%)</title><rect x="501" y="420" width="39" height="15" fill="rgb(238,167,25)"/><text x="504.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (10 samples, 3.26%)</title><rect x="501" y="436" width="39" height="15" fill="rgb(207,189,49)"/><text x="504.00" y="446.50">pyb..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (10 samples, 3.26%)</title><rect x="501" y="452" width="39" height="15" fill="rgb(238,75,31)"/><text x="504.00" y="462.50">Run..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.33%)</title><rect x="536" y="468" width="4" height="15" fill="rgb(237,186,9)"/><text x="539.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (1 samples, 0.33%)</title><rect x="536" y="484" width="4" height="15" fill="rgb(215,6,48)"/><text x="539.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (1 samples, 0.33%)</title><rect x="536" y="500" width="4" height="15" fill="rgb(237,146,50)"/><text x="539.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.33%)</title><rect x="536" y="516" width="4" height="15" fill="rgb(207,3,39)"/><text x="539.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.33%)</title><rect x="536" y="532" width="4" height="15" fill="rgb(209,28,44)"/><text x="539.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.33%)</title><rect x="536" y="548" width="4" height="15" fill="rgb(252,126,13)"/><text x="539.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="536" y="564" width="4" height="15" fill="rgb(215,42,14)"/><text x="539.00" y="574.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (2 samples, 0.65%)</title><rect x="540" y="324" width="8" height="15" fill="rgb(254,58,38)"/><text x="543.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (2 samples, 0.65%)</title><rect x="540" y="340" width="8" height="15" fill="rgb(212,18,36)"/><text x="543.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (2 samples, 0.65%)</title><rect x="540" y="356" width="8" height="15" fill="rgb(246,104,40)"/><text x="543.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (2 samples, 0.65%)</title><rect x="540" y="372" width="8" height="15" fill="rgb(227,119,29)"/><text x="543.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (2 samples, 0.65%)</title><rect x="540" y="388" width="8" height="15" fill="rgb(230,19,21)"/><text x="543.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (2 samples, 0.65%)</title><rect x="540" y="404" width="8" height="15" fill="rgb(240,42,33)"/><text x="543.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.65%)</title><rect x="540" y="420" width="8" height="15" fill="rgb(244,165,13)"/><text x="543.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.65%)</title><rect x="540" y="436" width="8" height="15" fill="rgb(229,196,36)"/><text x="543.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="544" y="452" width="4" height="15" fill="rgb(206,126,50)"/><text x="547.00" y="462.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.33%)</title><rect x="548" y="420" width="3" height="15" fill="rgb(230,161,15)"/><text x="551.00" y="430.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.33%)</title><rect x="548" y="436" width="3" height="15" fill="rgb(221,89,17)"/><text x="551.00" y="446.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.33%)</title><rect x="548" y="452" width="3" height="15" fill="rgb(231,203,22)"/><text x="551.00" y="462.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="548" y="468" width="3" height="15" fill="rgb(250,94,51)"/><text x="551.00" y="478.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (59 samples, 19.22%)</title><rect x="332" y="164" width="227" height="15" fill="rgb(243,181,6)"/><text x="335.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (49 samples, 15.96%)</title><rect x="371" y="180" width="188" height="15" fill="rgb(226,11,30)"/><text x="374.00" y="190.50">run (mlprodict/onnxrt/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 10.10%)</title><rect x="440" y="196" width="119" height="15" fill="rgb(240,51,28)"/><text x="443.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 6.51%)</title><rect x="482" y="212" width="77" height="15" fill="rgb(234,17,51)"/><text x="485.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (20 samples, 6.51%)</title><rect x="482" y="228" width="77" height="15" fill="rgb(231,213,21)"/><text x="485.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (17 samples, 5.54%)</title><rect x="494" y="244" width="65" height="15" fill="rgb(250,94,23)"/><text x="497.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (17 samples, 5.54%)</title><rect x="494" y="260" width="65" height="15" fill="rgb(246,228,4)"/><text x="497.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (17 samples, 5.54%)</title><rect x="494" y="276" width="65" height="15" fill="rgb(247,55,4)"/><text x="497.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (5 samples, 1.63%)</title><rect x="540" y="292" width="19" height="15" fill="rgb(217,218,33)"/><text x="543.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (5 samples, 1.63%)</title><rect x="540" y="308" width="19" height="15" fill="rgb(251,180,48)"/><text x="543.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h) (3 samples, 0.98%)</title><rect x="548" y="324" width="11" height="15" fill="rgb(244,155,23)"/><text x="551.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h) (3 samples, 0.98%)</title><rect x="548" y="340" width="11" height="15" fill="rgb(242,121,11)"/><text x="551.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h) (3 samples, 0.98%)</title><rect x="548" y="356" width="11" height="15" fill="rgb(224,115,3)"/><text x="551.00" y="366.50"></text></g><g><title>pybind11::detail::get_local_type_info (cast.h) (3 samples, 0.98%)</title><rect x="548" y="372" width="11" height="15" fill="rgb(250,133,5)"/><text x="551.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (3 samples, 0.98%)</title><rect x="548" y="388" width="11" height="15" fill="rgb(211,133,21)"/><text x="551.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (3 samples, 0.98%)</title><rect x="548" y="404" width="11" height="15" fill="rgb(246,61,8)"/><text x="551.00" y="414.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (hashtable_policy.h) (2 samples, 0.65%)</title><rect x="551" y="420" width="8" height="15" fill="rgb(252,153,34)"/><text x="554.00" y="430.50"></text></g><g><title>std::hash&lt;std::type_index&gt;::operator() (typeindex) (2 samples, 0.65%)</title><rect x="551" y="436" width="8" height="15" fill="rgb(228,36,35)"/><text x="554.00" y="446.50"></text></g><g><title>std::type_index::hash_code (typeindex) (2 samples, 0.65%)</title><rect x="551" y="452" width="8" height="15" fill="rgb(242,34,30)"/><text x="554.00" y="462.50"></text></g><g><title>std::type_info::hash_code (typeinfo) (2 samples, 0.65%)</title><rect x="551" y="468" width="8" height="15" fill="rgb(211,163,46)"/><text x="554.00" y="478.50"></text></g><g><title>0x7f107c246e54 (libc-2.29.so) (2 samples, 0.65%)</title><rect x="551" y="484" width="8" height="15" fill="rgb(209,23,28)"/><text x="554.00" y="494.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (64 samples, 20.85%)</title><rect x="317" y="132" width="246" height="15" fill="rgb(242,36,9)"/><text x="320.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (64 samples, 20.85%)</title><rect x="317" y="148" width="246" height="15" fill="rgb(233,134,30)"/><text x="320.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="559" y="164" width="4" height="15" fill="rgb(210,201,40)"/><text x="562.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="559" y="180" width="4" height="15" fill="rgb(220,225,40)"/><text x="562.00" y="190.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (70 samples, 22.80%)</title><rect x="298" y="100" width="269" height="15" fill="rgb(246,204,0)"/><text x="301.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (66 samples, 21.50%)</title><rect x="313" y="116" width="254" height="15" fill="rgb(208,223,8)"/><text x="316.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="563" y="132" width="4" height="15" fill="rgb(217,66,4)"/><text x="566.00" y="142.50"></text></g><g><title>profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (71 samples, 23.13%)</title><rect x="298" y="68" width="273" height="15" fill="rgb(251,87,24)"/><text x="301.00" y="78.50">profile_pyrt (bench_SVC_rbf_b_cl_pro..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (71 samples, 23.13%)</title><rect x="298" y="84" width="273" height="15" fill="rgb(237,61,18)"/><text x="301.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_pr..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="567" y="100" width="4" height="15" fill="rgb(238,204,0)"/><text x="570.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="567" y="116" width="4" height="15" fill="rgb(216,180,36)"/><text x="570.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="567" y="132" width="4" height="15" fill="rgb(254,20,6)"/><text x="570.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="567" y="148" width="4" height="15" fill="rgb(213,42,14)"/><text x="570.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="567" y="164" width="4" height="15" fill="rgb(226,0,36)"/><text x="570.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="567" y="180" width="4" height="15" fill="rgb(241,67,53)"/><text x="570.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.33%)</title><rect x="567" y="196" width="4" height="15" fill="rgb(254,200,41)"/><text x="570.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="212" width="4" height="15" fill="rgb(212,165,20)"/><text x="570.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="228" width="4" height="15" fill="rgb(213,58,28)"/><text x="570.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="244" width="4" height="15" fill="rgb(227,215,51)"/><text x="570.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="567" y="260" width="4" height="15" fill="rgb(235,161,15)"/><text x="570.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="276" width="4" height="15" fill="rgb(238,87,30)"/><text x="570.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.33%)</title><rect x="567" y="292" width="4" height="15" fill="rgb(230,166,19)"/><text x="570.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="308" width="4" height="15" fill="rgb(207,29,22)"/><text x="570.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="324" width="4" height="15" fill="rgb(230,109,44)"/><text x="570.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="340" width="4" height="15" fill="rgb(218,194,48)"/><text x="570.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="567" y="356" width="4" height="15" fill="rgb(230,191,36)"/><text x="570.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="567" y="372" width="4" height="15" fill="rgb(241,74,3)"/><text x="570.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.33%)</title><rect x="567" y="388" width="4" height="15" fill="rgb(214,159,41)"/><text x="570.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.33%)</title><rect x="567" y="404" width="4" height="15" fill="rgb(205,219,52)"/><text x="570.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="567" y="420" width="4" height="15" fill="rgb(235,208,31)"/><text x="570.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="567" y="436" width="4" height="15" fill="rgb(218,90,5)"/><text x="570.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="567" y="452" width="4" height="15" fill="rgb(240,62,13)"/><text x="570.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.33%)</title><rect x="567" y="468" width="4" height="15" fill="rgb(244,38,11)"/><text x="570.00" y="478.50"></text></g><g><title>0x7f1056d21342 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="617" y="180" width="4" height="15" fill="rgb(206,188,28)"/><text x="620.00" y="190.50"></text></g><g><title>0x7f1056d1eb52 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="621" y="196" width="3" height="15" fill="rgb(234,38,51)"/><text x="624.00" y="206.50"></text></g><g><title>0x7f1056d1ed0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="624" y="196" width="4" height="15" fill="rgb(241,133,3)"/><text x="627.00" y="206.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="624" y="212" width="4" height="15" fill="rgb(234,5,7)"/><text x="627.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="624" y="228" width="4" height="15" fill="rgb(225,70,35)"/><text x="627.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="624" y="244" width="4" height="15" fill="rgb(220,115,4)"/><text x="627.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="624" y="260" width="4" height="15" fill="rgb(219,143,3)"/><text x="627.00" y="270.50"></text></g><g><title>0x7f1056d1ed9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="628" y="196" width="4" height="15" fill="rgb(228,178,36)"/><text x="631.00" y="206.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="628" y="212" width="4" height="15" fill="rgb(243,194,18)"/><text x="631.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="628" y="228" width="4" height="15" fill="rgb(226,78,34)"/><text x="631.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="628" y="244" width="4" height="15" fill="rgb(238,174,26)"/><text x="631.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.33%)</title><rect x="632" y="260" width="4" height="15" fill="rgb(210,155,22)"/><text x="635.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="636" y="276" width="4" height="15" fill="rgb(210,64,25)"/><text x="639.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.33%)</title><rect x="636" y="292" width="4" height="15" fill="rgb(243,92,11)"/><text x="639.00" y="302.50"></text></g><g><title>0x7f1056d1ee20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="632" y="196" width="12" height="15" fill="rgb(242,157,52)"/><text x="635.00" y="206.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="632" y="212" width="12" height="15" fill="rgb(227,155,23)"/><text x="635.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.98%)</title><rect x="632" y="228" width="12" height="15" fill="rgb(223,209,9)"/><text x="635.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.98%)</title><rect x="632" y="244" width="12" height="15" fill="rgb(239,76,33)"/><text x="635.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.65%)</title><rect x="636" y="260" width="8" height="15" fill="rgb(215,114,8)"/><text x="639.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="640" y="276" width="4" height="15" fill="rgb(219,31,48)"/><text x="643.00" y="286.50"></text></g><g><title>0x7f1056d1ee66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="644" y="196" width="4" height="15" fill="rgb(252,68,40)"/><text x="647.00" y="206.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="644" y="212" width="4" height="15" fill="rgb(248,185,35)"/><text x="647.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="644" y="228" width="4" height="15" fill="rgb(217,228,15)"/><text x="647.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="644" y="244" width="4" height="15" fill="rgb(221,177,20)"/><text x="647.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="644" y="260" width="4" height="15" fill="rgb(222,8,51)"/><text x="647.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="644" y="276" width="4" height="15" fill="rgb(209,104,40)"/><text x="647.00" y="286.50"></text></g><g><title>0x7f1056d1ef5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="648" y="196" width="3" height="15" fill="rgb(239,64,15)"/><text x="651.00" y="206.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="648" y="212" width="3" height="15" fill="rgb(240,203,8)"/><text x="651.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="648" y="228" width="3" height="15" fill="rgb(234,30,30)"/><text x="651.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="648" y="244" width="3" height="15" fill="rgb(230,141,37)"/><text x="651.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.33%)</title><rect x="648" y="260" width="3" height="15" fill="rgb(238,14,25)"/><text x="651.00" y="270.50"></text></g><g><title>0x7f107c230982 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="648" y="276" width="3" height="15" fill="rgb(236,98,49)"/><text x="651.00" y="286.50"></text></g><g><title>0x7f1056d08e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="651" y="212" width="4" height="15" fill="rgb(248,86,51)"/><text x="654.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="651" y="228" width="4" height="15" fill="rgb(253,185,31)"/><text x="654.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="651" y="244" width="4" height="15" fill="rgb(241,211,54)"/><text x="654.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.33%)</title><rect x="651" y="260" width="4" height="15" fill="rgb(231,1,44)"/><text x="654.00" y="270.50"></text></g><g><title>0x7f107c230a53 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(220,135,54)"/><text x="654.00" y="286.50"></text></g><g><title>0x7f1056d1ef9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="651" y="196" width="8" height="15" fill="rgb(208,200,35)"/><text x="654.00" y="206.50"></text></g><g><title>0x7f1056d08f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="655" y="212" width="4" height="15" fill="rgb(239,192,36)"/><text x="658.00" y="222.50"></text></g><g><title>0x7f1056d07fa4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="655" y="228" width="4" height="15" fill="rgb(214,144,1)"/><text x="658.00" y="238.50"></text></g><g><title>0x7f1056d1eff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="659" y="196" width="8" height="15" fill="rgb(205,101,53)"/><text x="662.00" y="206.50"></text></g><g><title>0x7f1056d1f030 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="667" y="196" width="4" height="15" fill="rgb(240,86,35)"/><text x="670.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.33%)</title><rect x="678" y="260" width="4" height="15" fill="rgb(212,119,32)"/><text x="681.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.65%)</title><rect x="678" y="244" width="8" height="15" fill="rgb(239,141,22)"/><text x="681.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="682" y="260" width="4" height="15" fill="rgb(240,39,12)"/><text x="685.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (4 samples, 1.30%)</title><rect x="674" y="228" width="16" height="15" fill="rgb(207,66,6)"/><text x="677.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.33%)</title><rect x="686" y="244" width="4" height="15" fill="rgb(249,58,36)"/><text x="689.00" y="254.50"></text></g><g><title>0x7f1056d1f12f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.95%)</title><rect x="671" y="196" width="23" height="15" fill="rgb(212,100,24)"/><text x="674.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c) (6 samples, 1.95%)</title><rect x="671" y="212" width="23" height="15" fill="rgb(247,102,5)"/><text x="674.00" y="222.50">a..</text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.33%)</title><rect x="690" y="228" width="4" height="15" fill="rgb(232,64,0)"/><text x="693.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="690" y="244" width="4" height="15" fill="rgb(228,26,40)"/><text x="693.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.33%)</title><rect x="690" y="260" width="4" height="15" fill="rgb(247,216,52)"/><text x="693.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.33%)</title><rect x="690" y="276" width="4" height="15" fill="rgb(251,83,53)"/><text x="693.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.33%)</title><rect x="690" y="292" width="4" height="15" fill="rgb(217,28,21)"/><text x="693.00" y="302.50"></text></g><g><title>0x7f1056d1f2b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="694" y="196" width="4" height="15" fill="rgb(228,93,43)"/><text x="697.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="694" y="212" width="4" height="15" fill="rgb(227,13,19)"/><text x="697.00" y="222.50"></text></g><g><title>0x7f1056d1f336 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="698" y="196" width="3" height="15" fill="rgb(229,49,31)"/><text x="701.00" y="206.50"></text></g><g><title>0x7f1056d1f398 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="701" y="196" width="4" height="15" fill="rgb(220,50,41)"/><text x="704.00" y="206.50"></text></g><g><title>0x7f1056d1f3f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="705" y="196" width="12" height="15" fill="rgb(247,64,2)"/><text x="708.00" y="206.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="717" y="228" width="4" height="15" fill="rgb(224,213,0)"/><text x="720.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="717" y="244" width="4" height="15" fill="rgb(248,119,42)"/><text x="720.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="724" y="244" width="4" height="15" fill="rgb(245,47,34)"/><text x="727.00" y="254.50"></text></g><g><title>0x7f107c402be2 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="740" y="276" width="4" height="15" fill="rgb(209,26,54)"/><text x="743.00" y="286.50"></text></g><g><title>0x7f107c402c6e (libm-2.29.so) (1 samples, 0.33%)</title><rect x="744" y="276" width="3" height="15" fill="rgb(238,203,0)"/><text x="747.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (6 samples, 1.95%)</title><rect x="732" y="260" width="23" height="15" fill="rgb(250,213,48)"/><text x="735.00" y="270.50">e..</text></g><g><title>0x7f107c402c7b (libm-2.29.so) (2 samples, 0.65%)</title><rect x="747" y="276" width="8" height="15" fill="rgb(254,94,39)"/><text x="750.00" y="286.50"></text></g><g><title>0x7f1056d1f553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.23%)</title><rect x="717" y="196" width="50" height="15" fill="rgb(230,191,54)"/><text x="720.00" y="206.50">0x7f1..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.23%)</title><rect x="717" y="212" width="50" height="15" fill="rgb(230,182,7)"/><text x="720.00" y="222.50">copy_..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.91%)</title><rect x="721" y="228" width="46" height="15" fill="rgb(229,108,1)"/><text x="724.00" y="238.50">svm_..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.26%)</title><rect x="728" y="244" width="39" height="15" fill="rgb(217,129,41)"/><text x="731.00" y="254.50">svm..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="755" y="260" width="12" height="15" fill="rgb(218,74,30)"/><text x="758.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="767" y="212" width="4" height="15" fill="rgb(243,16,12)"/><text x="770.00" y="222.50"></text></g><g><title>0x7f1056d1f55e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="767" y="196" width="7" height="15" fill="rgb(234,146,29)"/><text x="770.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="771" y="212" width="3" height="15" fill="rgb(226,132,49)"/><text x="774.00" y="222.50"></text></g><g><title>0x7f1056d1f7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="774" y="196" width="8" height="15" fill="rgb(238,13,32)"/><text x="777.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.65%)</title><rect x="774" y="212" width="8" height="15" fill="rgb(231,157,20)"/><text x="777.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.65%)</title><rect x="774" y="228" width="8" height="15" fill="rgb(225,171,31)"/><text x="777.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.65%)</title><rect x="774" y="244" width="8" height="15" fill="rgb(242,11,14)"/><text x="777.00" y="254.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (50 samples, 16.29%)</title><rect x="598" y="164" width="192" height="15" fill="rgb(207,101,49)"/><text x="601.00" y="174.50">_dense_predict_proba (skl..</text></g><g><title>0x7f1056d213fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (44 samples, 14.33%)</title><rect x="621" y="180" width="169" height="15" fill="rgb(215,12,26)"/><text x="624.00" y="190.50">0x7f1056d213fd (sklea..</text></g><g><title>0x7f1056d20d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="782" y="196" width="8" height="15" fill="rgb(247,132,12)"/><text x="785.00" y="206.50"></text></g><g><title>0x7f1056d085ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="782" y="212" width="8" height="15" fill="rgb(241,43,24)"/><text x="785.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.65%)</title><rect x="782" y="228" width="8" height="15" fill="rgb(245,183,54)"/><text x="785.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="786" y="244" width="4" height="15" fill="rgb(221,222,15)"/><text x="789.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="786" y="260" width="4" height="15" fill="rgb(209,139,24)"/><text x="789.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="786" y="276" width="4" height="15" fill="rgb(221,117,23)"/><text x="789.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.30%)</title><rect x="851" y="196" width="16" height="15" fill="rgb(221,27,1)"/><text x="854.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (5 samples, 1.63%)</title><rect x="867" y="196" width="19" height="15" fill="rgb(231,68,46)"/><text x="870.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.65%)</title><rect x="886" y="196" width="8" height="15" fill="rgb(212,6,18)"/><text x="889.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.28%)</title><rect x="909" y="212" width="27" height="15" fill="rgb(237,114,14)"/><text x="912.00" y="222.50">_..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 3.91%)</title><rect x="894" y="196" width="46" height="15" fill="rgb(253,40,37)"/><text x="897.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="936" y="212" width="4" height="15" fill="rgb(253,211,32)"/><text x="939.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="940" y="196" width="4" height="15" fill="rgb(248,62,37)"/><text x="943.00" y="206.50"></text></g><g><title>0x7f107c246b89 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="974" y="212" width="4" height="15" fill="rgb(233,50,24)"/><text x="977.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="978" y="212" width="4" height="15" fill="rgb(232,209,35)"/><text x="981.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 5.21%)</title><rect x="944" y="196" width="61" height="15" fill="rgb(246,195,6)"/><text x="947.00" y="206.50">_num_s..</text></g><g><title>__instancecheck__ (abc.py) (6 samples, 1.95%)</title><rect x="982" y="212" width="23" height="15" fill="rgb(212,109,17)"/><text x="985.00" y="222.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.98%)</title><rect x="993" y="228" width="12" height="15" fill="rgb(229,202,46)"/><text x="996.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="1005" y="196" width="4" height="15" fill="rgb(230,108,3)"/><text x="1008.00" y="206.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.33%)</title><rect x="1013" y="292" width="4" height="15" fill="rgb(248,159,19)"/><text x="1016.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="1013" y="308" width="4" height="15" fill="rgb(215,206,18)"/><text x="1016.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.30%)</title><rect x="1013" y="276" width="15" height="15" fill="rgb(239,178,53)"/><text x="1016.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.98%)</title><rect x="1017" y="292" width="11" height="15" fill="rgb(224,128,42)"/><text x="1020.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1024" y="308" width="4" height="15" fill="rgb(220,21,38)"/><text x="1027.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (5 samples, 1.63%)</title><rect x="1013" y="228" width="19" height="15" fill="rgb(224,123,1)"/><text x="1016.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 1.63%)</title><rect x="1013" y="244" width="19" height="15" fill="rgb(243,27,22)"/><text x="1016.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (5 samples, 1.63%)</title><rect x="1013" y="260" width="19" height="15" fill="rgb(209,57,7)"/><text x="1016.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1028" y="276" width="4" height="15" fill="rgb(246,196,28)"/><text x="1031.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.33%)</title><rect x="1032" y="228" width="4" height="15" fill="rgb(242,33,20)"/><text x="1035.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="1032" y="244" width="4" height="15" fill="rgb(253,220,39)"/><text x="1035.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (8 samples, 2.61%)</title><rect x="1009" y="196" width="31" height="15" fill="rgb(234,46,24)"/><text x="1012.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (8 samples, 2.61%)</title><rect x="1009" y="212" width="31" height="15" fill="rgb(222,18,45)"/><text x="1012.00" y="222.50">_a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="1036" y="228" width="4" height="15" fill="rgb(254,104,20)"/><text x="1039.00" y="238.50"></text></g><g><title>0x7f107c30ed24 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1036" y="244" width="4" height="15" fill="rgb(248,77,24)"/><text x="1039.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (65 samples, 21.17%)</title><rect x="809" y="180" width="250" height="15" fill="rgb(208,38,30)"/><text x="812.00" y="190.50">check_array (sklearn/utils/valida..</text></g><g><title>simplefilter (warnings.py) (5 samples, 1.63%)</title><rect x="1040" y="196" width="19" height="15" fill="rgb(253,88,28)"/><text x="1043.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 1.30%)</title><rect x="1043" y="212" width="16" height="15" fill="rgb(212,44,29)"/><text x="1046.00" y="222.50"></text></g><g><title>0x7f107c246e54 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1055" y="228" width="4" height="15" fill="rgb(241,166,54)"/><text x="1058.00" y="238.50"></text></g><g><title>0x7f107c2511ea (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1143" y="212" width="4" height="15" fill="rgb(238,85,5)"/><text x="1146.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (6 samples, 1.95%)</title><rect x="1147" y="212" width="23" height="15" fill="rgb(217,89,28)"/><text x="1150.00" y="222.50">u..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (154 samples, 50.16%)</title><rect x="590" y="148" width="592" height="15" fill="rgb(238,222,2)"/><text x="593.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (102 samples, 33.22%)</title><rect x="790" y="164" width="392" height="15" fill="rgb(245,29,38)"/><text x="793.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (32 samples, 10.42%)</title><rect x="1059" y="180" width="123" height="15" fill="rgb(227,206,20)"/><text x="1062.00" y="190.50">check_is_fitted..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (27 samples, 8.79%)</title><rect x="1078" y="196" width="104" height="15" fill="rgb(207,132,15)"/><text x="1081.00" y="206.50">&lt;listcomp&gt; (..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.98%)</title><rect x="1170" y="212" width="12" height="15" fill="rgb(205,45,38)"/><text x="1173.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 50.49%)</title><rect x="590" y="132" width="596" height="15" fill="rgb(208,13,5)"/><text x="593.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (1 samples, 0.33%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(248,128,17)"/><text x="1185.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (1 samples, 0.33%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(250,42,47)"/><text x="1185.00" y="174.50"></text></g><g><title>all (307 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,84,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (306 samples, 99.67%)</title><rect x="13" y="52" width="1177" height="15" fill="rgb(244,196,40)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (161 samples, 52.44%)</title><rect x="571" y="68" width="619" height="15" fill="rgb(211,11,17)"/><text x="574.00" y="78.50">profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (161 samples, 52.44%)</title><rect x="571" y="84" width="619" height="15" fill="rgb(226,218,38)"/><text x="574.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py)</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py) (161 samples, 52.44%)</title><rect x="571" y="100" width="619" height="15" fill="rgb(244,78,47)"/><text x="574.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 52.12%)</title><rect x="575" y="116" width="615" height="15" fill="rgb(215,87,1)"/><text x="578.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.33%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(214,30,9)"/><text x="1189.00" y="142.50"></text></g></g></svg>