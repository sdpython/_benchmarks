<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(232,71,45)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(207,22,5)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(250,48,11)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(222,30,40)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(250,225,16)"/><text x="13.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.86%)</title><rect x="10" y="868" width="10" height="15" fill="rgb(244,211,47)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.86%)</title><rect x="10" y="884" width="10" height="15" fill="rgb(209,212,54)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.86%)</title><rect x="10" y="900" width="10" height="15" fill="rgb(235,45,11)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.86%)</title><rect x="10" y="916" width="10" height="15" fill="rgb(244,151,46)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="13" y="932" width="7" height="15" fill="rgb(241,211,52)"/><text x="16.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="13" y="948" width="7" height="15" fill="rgb(221,98,54)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="13" y="964" width="7" height="15" fill="rgb(217,4,51)"/><text x="16.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.57%)</title><rect x="13" y="980" width="7" height="15" fill="rgb(248,29,39)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.57%)</title><rect x="13" y="996" width="7" height="15" fill="rgb(237,104,7)"/><text x="16.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.29%)</title><rect x="16" y="1012" width="4" height="15" fill="rgb(214,182,34)"/><text x="19.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="16" y="1028" width="4" height="15" fill="rgb(215,2,0)"/><text x="19.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="16" y="1044" width="4" height="15" fill="rgb(236,10,20)"/><text x="19.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.14%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(246,151,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.14%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(222,172,37)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(229,205,5)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(247,200,27)"/><text x="23.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(243,118,45)"/><text x="23.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(238,13,53)"/><text x="23.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.29%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(206,161,45)"/><text x="23.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(227,16,45)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.43%)</title><rect x="10" y="292" width="16" height="15" fill="rgb(230,178,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="308" width="16" height="15" fill="rgb(218,213,53)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="324" width="16" height="15" fill="rgb(222,216,27)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="340" width="16" height="15" fill="rgb(221,137,23)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.43%)</title><rect x="10" y="356" width="16" height="15" fill="rgb(235,204,18)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="372" width="16" height="15" fill="rgb(236,76,39)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.43%)</title><rect x="10" y="388" width="16" height="15" fill="rgb(232,202,7)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="404" width="16" height="15" fill="rgb(220,84,18)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="420" width="16" height="15" fill="rgb(207,214,0)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="436" width="16" height="15" fill="rgb(229,208,3)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.43%)</title><rect x="10" y="452" width="16" height="15" fill="rgb(237,131,15)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="468" width="16" height="15" fill="rgb(218,183,36)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.43%)</title><rect x="10" y="484" width="16" height="15" fill="rgb(235,78,12)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="500" width="16" height="15" fill="rgb(214,12,10)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="516" width="16" height="15" fill="rgb(246,127,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="532" width="16" height="15" fill="rgb(235,154,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.43%)</title><rect x="10" y="548" width="16" height="15" fill="rgb(226,122,18)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="564" width="16" height="15" fill="rgb(221,60,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.43%)</title><rect x="10" y="580" width="16" height="15" fill="rgb(241,188,13)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="596" width="16" height="15" fill="rgb(252,157,6)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="612" width="16" height="15" fill="rgb(224,133,21)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="628" width="16" height="15" fill="rgb(232,88,45)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="644" width="16" height="15" fill="rgb(212,73,12)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="660" width="16" height="15" fill="rgb(251,213,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="676" width="16" height="15" fill="rgb(218,7,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.43%)</title><rect x="10" y="692" width="16" height="15" fill="rgb(239,221,47)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="708" width="16" height="15" fill="rgb(244,104,53)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.43%)</title><rect x="10" y="724" width="16" height="15" fill="rgb(231,172,36)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="740" width="16" height="15" fill="rgb(212,95,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="756" width="16" height="15" fill="rgb(235,28,5)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="772" width="16" height="15" fill="rgb(251,136,49)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.43%)</title><rect x="10" y="788" width="16" height="15" fill="rgb(238,146,13)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.43%)</title><rect x="10" y="804" width="16" height="15" fill="rgb(212,165,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.43%)</title><rect x="10" y="820" width="16" height="15" fill="rgb(210,90,48)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(227,208,51)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(207,101,16)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(211,158,13)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(210,120,13)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(219,123,27)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(215,106,36)"/><text x="26.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.29%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(232,190,5)"/><text x="26.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(240,209,10)"/><text x="26.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(250,70,22)"/><text x="26.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(241,174,4)"/><text x="26.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(212,126,2)"/><text x="26.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(254,128,52)"/><text x="26.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(237,68,30)"/><text x="26.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(247,183,35)"/><text x="26.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(232,224,34)"/><text x="26.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(216,189,17)"/><text x="26.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.29%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(245,80,14)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.71%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(215,176,6)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.71%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(219,122,9)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.71%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(251,54,49)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.71%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(230,127,12)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.71%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(247,27,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.71%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(224,136,32)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.29%)</title><rect x="26" y="292" width="4" height="15" fill="rgb(242,102,21)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="308" width="4" height="15" fill="rgb(234,57,15)"/><text x="29.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="324" width="4" height="15" fill="rgb(214,141,14)"/><text x="29.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="340" width="4" height="15" fill="rgb(226,81,46)"/><text x="29.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="356" width="4" height="15" fill="rgb(234,134,18)"/><text x="29.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="372" width="4" height="15" fill="rgb(218,151,12)"/><text x="29.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.29%)</title><rect x="26" y="388" width="4" height="15" fill="rgb(245,12,45)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="404" width="4" height="15" fill="rgb(248,190,31)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="420" width="4" height="15" fill="rgb(215,227,47)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="436" width="4" height="15" fill="rgb(229,185,15)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="452" width="4" height="15" fill="rgb(236,133,15)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="468" width="4" height="15" fill="rgb(205,23,16)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.29%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(229,91,0)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(248,88,25)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(229,179,22)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(246,113,10)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(251,174,25)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(240,10,38)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.29%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(214,206,6)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(254,122,54)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(236,226,3)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(207,222,10)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(212,94,44)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(210,43,23)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.29%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(205,188,18)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(215,211,35)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(249,214,1)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(218,150,37)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(253,184,51)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(244,109,41)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.29%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(250,82,39)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(215,16,47)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(210,138,53)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(209,176,22)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(241,211,36)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(235,109,22)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(252,229,24)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(219,107,54)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.29%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(209,81,49)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(248,125,35)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(247,219,7)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(208,80,4)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(231,99,18)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(237,138,43)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(213,167,22)"/><text x="29.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(248,189,8)"/><text x="29.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(222,23,2)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1156" width="3" height="15" fill="rgb(234,15,47)"/><text x="33.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1172" width="3" height="15" fill="rgb(245,55,27)"/><text x="33.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1188" width="3" height="15" fill="rgb(230,200,54)"/><text x="33.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1204" width="3" height="15" fill="rgb(237,27,34)"/><text x="33.00" y="1214.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1220" width="3" height="15" fill="rgb(208,203,23)"/><text x="33.00" y="1230.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1236" width="3" height="15" fill="rgb(253,104,49)"/><text x="33.00" y="1246.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="30" y="1252" width="3" height="15" fill="rgb(235,70,17)"/><text x="33.00" y="1262.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1268" width="3" height="15" fill="rgb(211,186,53)"/><text x="33.00" y="1278.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1284" width="3" height="15" fill="rgb(226,102,39)"/><text x="33.00" y="1294.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="30" y="1300" width="3" height="15" fill="rgb(221,94,10)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="30" y="1124" width="6" height="15" fill="rgb(220,120,20)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="30" y="1140" width="6" height="15" fill="rgb(244,87,30)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1156" width="3" height="15" fill="rgb(252,32,28)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="33" y="1172" width="3" height="15" fill="rgb(223,91,36)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="33" y="1188" width="3" height="15" fill="rgb(205,17,35)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.29%)</title><rect x="33" y="1204" width="3" height="15" fill="rgb(239,213,8)"/><text x="36.00" y="1214.50"></text></g><g><title>Topology (skl2onnx/common/_topology.py) (1 samples, 0.29%)</title><rect x="33" y="1220" width="3" height="15" fill="rgb(213,156,5)"/><text x="36.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.86%)</title><rect x="30" y="996" width="10" height="15" fill="rgb(207,215,18)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.86%)</title><rect x="30" y="1012" width="10" height="15" fill="rgb(207,189,52)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.86%)</title><rect x="30" y="1028" width="10" height="15" fill="rgb(238,136,22)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.86%)</title><rect x="30" y="1044" width="10" height="15" fill="rgb(220,107,28)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.86%)</title><rect x="30" y="1060" width="10" height="15" fill="rgb(231,24,14)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.86%)</title><rect x="30" y="1076" width="10" height="15" fill="rgb(236,94,8)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.86%)</title><rect x="30" y="1092" width="10" height="15" fill="rgb(210,0,14)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.86%)</title><rect x="30" y="1108" width="10" height="15" fill="rgb(234,10,20)"/><text x="33.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(210,12,3)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(249,137,46)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(223,187,14)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(251,84,12)"/><text x="39.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(231,39,33)"/><text x="39.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(226,157,0)"/><text x="39.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(232,112,7)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.29%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(210,10,42)"/><text x="39.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(211,68,16)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(211,33,35)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(237,198,28)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(222,210,17)"/><text x="39.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(224,63,20)"/><text x="39.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(212,10,8)"/><text x="39.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(207,66,50)"/><text x="39.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.29%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(218,205,22)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1380" width="4" height="15" fill="rgb(250,29,5)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1396" width="4" height="15" fill="rgb(223,209,27)"/><text x="39.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1412" width="4" height="15" fill="rgb(231,114,3)"/><text x="39.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="36" y="1428" width="4" height="15" fill="rgb(245,192,23)"/><text x="39.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="36" y="1444" width="4" height="15" fill="rgb(234,115,33)"/><text x="39.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.29%)</title><rect x="36" y="1460" width="4" height="15" fill="rgb(237,154,45)"/><text x="39.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.29%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(207,78,32)"/><text x="39.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.29%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(232,63,18)"/><text x="39.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.29%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(214,142,54)"/><text x="39.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.29%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(225,225,19)"/><text x="39.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="36" y="1540" width="4" height="15" fill="rgb(252,179,51)"/><text x="39.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py) (1 samples, 0.29%)</title><rect x="36" y="1556" width="4" height="15" fill="rgb(210,209,18)"/><text x="39.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py) (1 samples, 0.29%)</title><rect x="36" y="1572" width="4" height="15" fill="rgb(239,228,16)"/><text x="39.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py) (1 samples, 0.29%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(222,107,17)"/><text x="39.00" y="1598.50"></text></g><g><title>&lt;lambda&gt; (jinja2/_compat.py) (1 samples, 0.29%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(218,57,34)"/><text x="39.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="484" width="13" height="15" fill="rgb(214,8,31)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="500" width="13" height="15" fill="rgb(244,2,2)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="516" width="13" height="15" fill="rgb(205,65,20)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="532" width="13" height="15" fill="rgb(228,32,31)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="548" width="13" height="15" fill="rgb(223,111,34)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="564" width="13" height="15" fill="rgb(206,13,30)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.14%)</title><rect x="30" y="580" width="13" height="15" fill="rgb(216,199,20)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="596" width="13" height="15" fill="rgb(227,180,48)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="612" width="13" height="15" fill="rgb(225,160,14)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="628" width="13" height="15" fill="rgb(206,140,22)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="644" width="13" height="15" fill="rgb(239,48,43)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="660" width="13" height="15" fill="rgb(228,1,31)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.14%)</title><rect x="30" y="676" width="13" height="15" fill="rgb(251,229,41)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="692" width="13" height="15" fill="rgb(223,111,22)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="708" width="13" height="15" fill="rgb(207,21,4)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="724" width="13" height="15" fill="rgb(235,16,5)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="740" width="13" height="15" fill="rgb(223,170,6)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="756" width="13" height="15" fill="rgb(252,75,12)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.14%)</title><rect x="30" y="772" width="13" height="15" fill="rgb(218,38,7)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="788" width="13" height="15" fill="rgb(248,64,31)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="804" width="13" height="15" fill="rgb(221,38,0)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="820" width="13" height="15" fill="rgb(211,210,22)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="836" width="13" height="15" fill="rgb(219,49,41)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="852" width="13" height="15" fill="rgb(228,122,43)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.14%)</title><rect x="30" y="868" width="13" height="15" fill="rgb(251,189,40)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="884" width="13" height="15" fill="rgb(208,121,25)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="900" width="13" height="15" fill="rgb(233,157,27)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="916" width="13" height="15" fill="rgb(239,186,53)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="932" width="13" height="15" fill="rgb(213,99,35)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="948" width="13" height="15" fill="rgb(211,152,44)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="30" y="964" width="13" height="15" fill="rgb(215,24,3)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="30" y="980" width="13" height="15" fill="rgb(252,122,10)"/><text x="33.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="40" y="996" width="3" height="15" fill="rgb(238,25,45)"/><text x="43.00" y="1006.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="40" y="1012" width="3" height="15" fill="rgb(241,87,1)"/><text x="43.00" y="1022.50"></text></g><g><title>0x7ff725be140e (?) (1 samples, 0.29%)</title><rect x="43" y="916" width="4" height="15" fill="rgb(222,197,18)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="932" width="4" height="15" fill="rgb(216,80,9)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="948" width="4" height="15" fill="rgb(221,25,15)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="964" width="4" height="15" fill="rgb(218,32,19)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="980" width="4" height="15" fill="rgb(206,204,5)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="996" width="4" height="15" fill="rgb(239,100,28)"/><text x="46.00" y="1006.50"></text></g><g><title>0x7ff72599acd2 (?) (1 samples, 0.29%)</title><rect x="43" y="1012" width="4" height="15" fill="rgb(247,18,15)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1028" width="4" height="15" fill="rgb(213,208,24)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1044" width="4" height="15" fill="rgb(228,26,5)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1060" width="4" height="15" fill="rgb(231,24,52)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="1076" width="4" height="15" fill="rgb(218,92,52)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1092" width="4" height="15" fill="rgb(207,36,33)"/><text x="46.00" y="1102.50"></text></g><g><title>0x7ff7250900e5 (?) (1 samples, 0.29%)</title><rect x="43" y="1108" width="4" height="15" fill="rgb(253,3,37)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1124" width="4" height="15" fill="rgb(250,139,44)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1140" width="4" height="15" fill="rgb(253,215,4)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1156" width="4" height="15" fill="rgb(224,40,53)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="1172" width="4" height="15" fill="rgb(241,67,49)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1188" width="4" height="15" fill="rgb(252,35,13)"/><text x="46.00" y="1198.50"></text></g><g><title>0x7ff724e14e68 (?) (1 samples, 0.29%)</title><rect x="43" y="1204" width="4" height="15" fill="rgb(208,5,3)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1220" width="4" height="15" fill="rgb(211,192,23)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1236" width="4" height="15" fill="rgb(252,38,24)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1252" width="4" height="15" fill="rgb(243,1,5)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="1268" width="4" height="15" fill="rgb(218,45,8)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1284" width="4" height="15" fill="rgb(228,220,33)"/><text x="46.00" y="1294.50"></text></g><g><title>0x7ff724ba52fb (?) (1 samples, 0.29%)</title><rect x="43" y="1300" width="4" height="15" fill="rgb(212,161,41)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1316" width="4" height="15" fill="rgb(225,149,6)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1332" width="4" height="15" fill="rgb(224,100,23)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1348" width="4" height="15" fill="rgb(231,217,26)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="1364" width="4" height="15" fill="rgb(236,150,10)"/><text x="46.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1380" width="4" height="15" fill="rgb(241,4,40)"/><text x="46.00" y="1390.50"></text></g><g><title>0x7ff724989153 (?) (1 samples, 0.29%)</title><rect x="43" y="1396" width="4" height="15" fill="rgb(214,124,39)"/><text x="46.00" y="1406.50"></text></g><g><title>0x7ff724987c13 (?) (1 samples, 0.29%)</title><rect x="43" y="1412" width="4" height="15" fill="rgb(209,19,23)"/><text x="46.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1428" width="4" height="15" fill="rgb(219,190,54)"/><text x="46.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1444" width="4" height="15" fill="rgb(215,74,12)"/><text x="46.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1460" width="4" height="15" fill="rgb(249,145,29)"/><text x="46.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="43" y="1476" width="4" height="15" fill="rgb(245,185,7)"/><text x="46.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="43" y="1492" width="4" height="15" fill="rgb(241,123,44)"/><text x="46.00" y="1502.50"></text></g><g><title>0x7ff7246e4181 (?) (1 samples, 0.29%)</title><rect x="43" y="1508" width="4" height="15" fill="rgb(230,62,11)"/><text x="46.00" y="1518.50"></text></g><g><title>0x7ff7246e71c9 (?) (1 samples, 0.29%)</title><rect x="43" y="1524" width="4" height="15" fill="rgb(250,21,6)"/><text x="46.00" y="1534.50"></text></g><g><title>0x7ff724713167 (?) (1 samples, 0.29%)</title><rect x="43" y="1540" width="4" height="15" fill="rgb(229,202,21)"/><text x="46.00" y="1550.50"></text></g><g><title>0x7ff72470eb64 (?) (1 samples, 0.29%)</title><rect x="43" y="1556" width="4" height="15" fill="rgb(226,191,16)"/><text x="46.00" y="1566.50"></text></g><g><title>0x7ff7246f207b (?) (1 samples, 0.29%)</title><rect x="43" y="1572" width="4" height="15" fill="rgb(209,153,49)"/><text x="46.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.29%)</title><rect x="43" y="1588" width="4" height="15" fill="rgb(234,77,39)"/><text x="46.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="43" y="1604" width="4" height="15" fill="rgb(220,61,3)"/><text x="46.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="43" y="1620" width="4" height="15" fill="rgb(244,139,4)"/><text x="46.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="43" y="1636" width="4" height="15" fill="rgb(210,88,2)"/><text x="46.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.29%)</title><rect x="43" y="1652" width="4" height="15" fill="rgb(253,161,4)"/><text x="46.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="43" y="1668" width="4" height="15" fill="rgb(210,123,40)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.57%)</title><rect x="43" y="724" width="7" height="15" fill="rgb(244,144,7)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="740" width="7" height="15" fill="rgb(247,192,25)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="756" width="7" height="15" fill="rgb(240,227,26)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="772" width="7" height="15" fill="rgb(245,37,9)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="43" y="788" width="7" height="15" fill="rgb(212,171,40)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="804" width="7" height="15" fill="rgb(236,60,9)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.57%)</title><rect x="43" y="820" width="7" height="15" fill="rgb(206,139,30)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="836" width="7" height="15" fill="rgb(230,32,35)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="852" width="7" height="15" fill="rgb(249,170,13)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="868" width="7" height="15" fill="rgb(244,82,7)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="43" y="884" width="7" height="15" fill="rgb(233,183,39)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="43" y="900" width="7" height="15" fill="rgb(228,99,15)"/><text x="46.00" y="910.50"></text></g><g><title>0x7ff725be140e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="916" width="3" height="15" fill="rgb(225,50,1)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="932" width="3" height="15" fill="rgb(252,66,6)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="948" width="3" height="15" fill="rgb(236,69,35)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="964" width="3" height="15" fill="rgb(243,118,44)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="980" width="3" height="15" fill="rgb(229,50,36)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="996" width="3" height="15" fill="rgb(220,166,50)"/><text x="50.00" y="1006.50"></text></g><g><title>0x7ff72599acd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1012" width="3" height="15" fill="rgb(225,64,52)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1028" width="3" height="15" fill="rgb(222,72,4)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1044" width="3" height="15" fill="rgb(254,162,2)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1060" width="3" height="15" fill="rgb(218,128,27)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1076" width="3" height="15" fill="rgb(216,61,15)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1092" width="3" height="15" fill="rgb(220,84,45)"/><text x="50.00" y="1102.50"></text></g><g><title>0x7ff7250900e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1108" width="3" height="15" fill="rgb(217,40,18)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1124" width="3" height="15" fill="rgb(218,11,7)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1140" width="3" height="15" fill="rgb(206,178,50)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1156" width="3" height="15" fill="rgb(218,206,4)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1172" width="3" height="15" fill="rgb(205,158,18)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1188" width="3" height="15" fill="rgb(254,189,39)"/><text x="50.00" y="1198.50"></text></g><g><title>0x7ff724e14e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1204" width="3" height="15" fill="rgb(227,42,44)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1220" width="3" height="15" fill="rgb(238,204,42)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1236" width="3" height="15" fill="rgb(238,118,52)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1252" width="3" height="15" fill="rgb(216,68,24)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1268" width="3" height="15" fill="rgb(239,20,33)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1284" width="3" height="15" fill="rgb(226,147,41)"/><text x="50.00" y="1294.50"></text></g><g><title>0x7ff724ba52fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1300" width="3" height="15" fill="rgb(246,115,7)"/><text x="50.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1316" width="3" height="15" fill="rgb(245,124,11)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1332" width="3" height="15" fill="rgb(251,218,35)"/><text x="50.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1348" width="3" height="15" fill="rgb(254,126,17)"/><text x="50.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1364" width="3" height="15" fill="rgb(209,204,32)"/><text x="50.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1380" width="3" height="15" fill="rgb(205,127,25)"/><text x="50.00" y="1390.50"></text></g><g><title>0x7ff724989153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1396" width="3" height="15" fill="rgb(252,87,48)"/><text x="50.00" y="1406.50"></text></g><g><title>0x7ff724987c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1412" width="3" height="15" fill="rgb(212,7,31)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1428" width="3" height="15" fill="rgb(236,61,4)"/><text x="50.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1444" width="3" height="15" fill="rgb(215,14,24)"/><text x="50.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1460" width="3" height="15" fill="rgb(234,79,40)"/><text x="50.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="47" y="1476" width="3" height="15" fill="rgb(232,124,40)"/><text x="50.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="47" y="1492" width="3" height="15" fill="rgb(240,89,28)"/><text x="50.00" y="1502.50"></text></g><g><title>0x7ff7246e4181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1508" width="3" height="15" fill="rgb(213,218,49)"/><text x="50.00" y="1518.50"></text></g><g><title>0x7ff7246e71c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1524" width="3" height="15" fill="rgb(246,110,39)"/><text x="50.00" y="1534.50"></text></g><g><title>0x7ff724713167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1540" width="3" height="15" fill="rgb(209,121,24)"/><text x="50.00" y="1550.50"></text></g><g><title>0x7ff72470eb64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1556" width="3" height="15" fill="rgb(241,223,27)"/><text x="50.00" y="1566.50"></text></g><g><title>0x7ff7246f207b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="1572" width="3" height="15" fill="rgb(222,81,49)"/><text x="50.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.29%)</title><rect x="47" y="1588" width="3" height="15" fill="rgb(210,185,44)"/><text x="50.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1604" width="3" height="15" fill="rgb(210,113,28)"/><text x="50.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1620" width="3" height="15" fill="rgb(209,199,34)"/><text x="50.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.29%)</title><rect x="47" y="1636" width="3" height="15" fill="rgb(216,166,42)"/><text x="50.00" y="1646.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.29%)</title><rect x="47" y="1652" width="3" height="15" fill="rgb(232,129,8)"/><text x="50.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1028" width="3" height="15" fill="rgb(244,202,47)"/><text x="53.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1044" width="3" height="15" fill="rgb(220,147,51)"/><text x="53.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1060" width="3" height="15" fill="rgb(223,8,1)"/><text x="53.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1076" width="3" height="15" fill="rgb(231,9,44)"/><text x="53.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1092" width="3" height="15" fill="rgb(244,112,36)"/><text x="53.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.29%)</title><rect x="50" y="1108" width="3" height="15" fill="rgb(248,227,53)"/><text x="53.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1124" width="3" height="15" fill="rgb(232,168,50)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1140" width="3" height="15" fill="rgb(207,98,26)"/><text x="53.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1156" width="3" height="15" fill="rgb(254,42,31)"/><text x="53.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1172" width="3" height="15" fill="rgb(217,11,46)"/><text x="53.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1188" width="3" height="15" fill="rgb(248,110,12)"/><text x="53.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.29%)</title><rect x="50" y="1204" width="3" height="15" fill="rgb(213,200,37)"/><text x="53.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1220" width="3" height="15" fill="rgb(249,123,37)"/><text x="53.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1236" width="3" height="15" fill="rgb(236,87,39)"/><text x="53.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1252" width="3" height="15" fill="rgb(235,139,14)"/><text x="53.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1268" width="3" height="15" fill="rgb(225,172,30)"/><text x="53.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1284" width="3" height="15" fill="rgb(234,164,29)"/><text x="53.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.29%)</title><rect x="50" y="1300" width="3" height="15" fill="rgb(224,93,7)"/><text x="53.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1316" width="3" height="15" fill="rgb(244,137,3)"/><text x="53.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1332" width="3" height="15" fill="rgb(229,221,30)"/><text x="53.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="50" y="1348" width="3" height="15" fill="rgb(207,134,29)"/><text x="53.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1364" width="3" height="15" fill="rgb(233,1,42)"/><text x="53.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1380" width="3" height="15" fill="rgb(207,184,6)"/><text x="53.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1396" width="3" height="15" fill="rgb(220,68,29)"/><text x="53.00" y="1406.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="50" y="1412" width="3" height="15" fill="rgb(206,145,34)"/><text x="53.00" y="1422.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="50" y="1428" width="3" height="15" fill="rgb(205,123,12)"/><text x="53.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.29%)</title><rect x="30" y="244" width="27" height="15" fill="rgb(254,24,23)"/><text x="33.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="260" width="27" height="15" fill="rgb(227,170,53)"/><text x="33.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="276" width="27" height="15" fill="rgb(254,124,53)"/><text x="33.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="292" width="27" height="15" fill="rgb(248,167,45)"/><text x="33.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.29%)</title><rect x="30" y="308" width="27" height="15" fill="rgb(227,68,38)"/><text x="33.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="324" width="27" height="15" fill="rgb(244,52,19)"/><text x="33.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.29%)</title><rect x="30" y="340" width="27" height="15" fill="rgb(243,209,10)"/><text x="33.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="356" width="27" height="15" fill="rgb(219,60,16)"/><text x="33.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="372" width="27" height="15" fill="rgb(241,117,2)"/><text x="33.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="388" width="27" height="15" fill="rgb(206,199,52)"/><text x="33.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.29%)</title><rect x="30" y="404" width="27" height="15" fill="rgb(225,39,42)"/><text x="33.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="420" width="27" height="15" fill="rgb(213,228,19)"/><text x="33.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.29%)</title><rect x="30" y="436" width="27" height="15" fill="rgb(222,202,31)"/><text x="33.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="452" width="27" height="15" fill="rgb(233,161,42)"/><text x="33.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.29%)</title><rect x="30" y="468" width="27" height="15" fill="rgb(208,222,20)"/><text x="33.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="484" width="14" height="15" fill="rgb(242,97,28)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="43" y="500" width="14" height="15" fill="rgb(243,86,43)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="516" width="14" height="15" fill="rgb(220,36,1)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.14%)</title><rect x="43" y="532" width="14" height="15" fill="rgb(227,212,8)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="548" width="14" height="15" fill="rgb(225,193,4)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="564" width="14" height="15" fill="rgb(231,149,49)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="580" width="14" height="15" fill="rgb(216,49,37)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="43" y="596" width="14" height="15" fill="rgb(210,26,31)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="612" width="14" height="15" fill="rgb(242,205,38)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.14%)</title><rect x="43" y="628" width="14" height="15" fill="rgb(236,58,4)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="644" width="14" height="15" fill="rgb(212,26,11)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="660" width="14" height="15" fill="rgb(230,196,34)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="676" width="14" height="15" fill="rgb(209,18,51)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.14%)</title><rect x="43" y="692" width="14" height="15" fill="rgb(223,67,44)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.14%)</title><rect x="43" y="708" width="14" height="15" fill="rgb(213,76,13)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.57%)</title><rect x="50" y="724" width="7" height="15" fill="rgb(247,158,20)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="740" width="7" height="15" fill="rgb(238,187,5)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="756" width="7" height="15" fill="rgb(238,162,34)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="772" width="7" height="15" fill="rgb(229,134,35)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="50" y="788" width="7" height="15" fill="rgb(213,146,11)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="804" width="7" height="15" fill="rgb(216,187,16)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.57%)</title><rect x="50" y="820" width="7" height="15" fill="rgb(232,25,15)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="836" width="7" height="15" fill="rgb(250,184,39)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="852" width="7" height="15" fill="rgb(250,211,7)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="868" width="7" height="15" fill="rgb(250,128,39)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="50" y="884" width="7" height="15" fill="rgb(220,185,38)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="900" width="7" height="15" fill="rgb(247,213,10)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.57%)</title><rect x="50" y="916" width="7" height="15" fill="rgb(217,229,19)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="932" width="7" height="15" fill="rgb(209,31,52)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="948" width="7" height="15" fill="rgb(210,128,29)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="964" width="7" height="15" fill="rgb(242,13,4)"/><text x="53.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="50" y="980" width="7" height="15" fill="rgb(209,189,36)"/><text x="53.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="50" y="996" width="7" height="15" fill="rgb(229,217,10)"/><text x="53.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.57%)</title><rect x="50" y="1012" width="7" height="15" fill="rgb(240,210,20)"/><text x="53.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.29%)</title><rect x="53" y="1028" width="4" height="15" fill="rgb(212,200,16)"/><text x="56.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.29%)</title><rect x="53" y="1044" width="4" height="15" fill="rgb(225,70,39)"/><text x="56.00" y="1054.50"></text></g><g><title>_flex_comp_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.29%)</title><rect x="53" y="1060" width="4" height="15" fill="rgb(236,150,29)"/><text x="56.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.29%)</title><rect x="53" y="1076" width="4" height="15" fill="rgb(231,162,49)"/><text x="56.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.29%)</title><rect x="53" y="1092" width="4" height="15" fill="rgb(207,144,25)"/><text x="56.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.29%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(248,87,22)"/><text x="56.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(231,75,17)"/><text x="56.00" y="1134.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.29%)</title><rect x="57" y="372" width="3" height="15" fill="rgb(222,2,39)"/><text x="60.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="388" width="3" height="15" fill="rgb(206,64,30)"/><text x="60.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="404" width="3" height="15" fill="rgb(232,54,35)"/><text x="60.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="420" width="3" height="15" fill="rgb(236,121,32)"/><text x="60.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="436" width="3" height="15" fill="rgb(234,127,0)"/><text x="60.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="452" width="3" height="15" fill="rgb(228,223,23)"/><text x="60.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="57" y="468" width="3" height="15" fill="rgb(232,204,42)"/><text x="60.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="57" y="484" width="3" height="15" fill="rgb(240,201,42)"/><text x="60.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.29%)</title><rect x="57" y="500" width="3" height="15" fill="rgb(254,167,7)"/><text x="60.00" y="510.50"></text></g><g><title>compile (re.py) (1 samples, 0.29%)</title><rect x="57" y="516" width="3" height="15" fill="rgb(205,196,45)"/><text x="60.00" y="526.50"></text></g><g><title>_compile (re.py) (1 samples, 0.29%)</title><rect x="57" y="532" width="3" height="15" fill="rgb(235,63,44)"/><text x="60.00" y="542.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="548" width="3" height="15" fill="rgb(216,198,20)"/><text x="60.00" y="558.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="564" width="3" height="15" fill="rgb(232,177,29)"/><text x="60.00" y="574.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="580" width="3" height="15" fill="rgb(206,59,16)"/><text x="60.00" y="590.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="596" width="3" height="15" fill="rgb(227,193,54)"/><text x="60.00" y="606.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="612" width="3" height="15" fill="rgb(221,145,49)"/><text x="60.00" y="622.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.29%)</title><rect x="57" y="628" width="3" height="15" fill="rgb(232,7,28)"/><text x="60.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(229,73,8)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(222,151,3)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(232,225,24)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 4.57%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(229,201,8)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(235,176,32)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (16 samples, 4.57%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(217,17,15)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(232,55,30)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 4.57%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(213,171,9)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.86%)</title><rect x="30" y="196" width="33" height="15" fill="rgb(227,181,51)"/><text x="33.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.86%)</title><rect x="30" y="212" width="33" height="15" fill="rgb(229,194,28)"/><text x="33.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.86%)</title><rect x="30" y="228" width="33" height="15" fill="rgb(216,214,37)"/><text x="33.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.57%)</title><rect x="57" y="244" width="6" height="15" fill="rgb(226,38,11)"/><text x="60.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="260" width="6" height="15" fill="rgb(253,10,22)"/><text x="60.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="276" width="6" height="15" fill="rgb(208,73,28)"/><text x="60.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="292" width="6" height="15" fill="rgb(210,62,38)"/><text x="60.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="308" width="6" height="15" fill="rgb(225,115,43)"/><text x="60.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="324" width="6" height="15" fill="rgb(214,187,30)"/><text x="60.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.57%)</title><rect x="57" y="340" width="6" height="15" fill="rgb(250,140,10)"/><text x="60.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="57" y="356" width="6" height="15" fill="rgb(228,57,12)"/><text x="60.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.29%)</title><rect x="60" y="372" width="3" height="15" fill="rgb(240,43,21)"/><text x="63.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="388" width="3" height="15" fill="rgb(232,151,53)"/><text x="63.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(228,210,53)"/><text x="63.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="420" width="3" height="15" fill="rgb(223,152,9)"/><text x="63.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="436" width="3" height="15" fill="rgb(231,22,16)"/><text x="63.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="452" width="3" height="15" fill="rgb(234,63,4)"/><text x="63.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="468" width="3" height="15" fill="rgb(207,156,39)"/><text x="63.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="484" width="3" height="15" fill="rgb(227,226,23)"/><text x="63.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.29%)</title><rect x="60" y="500" width="3" height="15" fill="rgb(217,225,26)"/><text x="63.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="516" width="3" height="15" fill="rgb(207,3,2)"/><text x="63.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="532" width="3" height="15" fill="rgb(243,121,35)"/><text x="63.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="548" width="3" height="15" fill="rgb(227,156,28)"/><text x="63.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="564" width="3" height="15" fill="rgb(205,15,6)"/><text x="63.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="580" width="3" height="15" fill="rgb(233,16,46)"/><text x="63.00" y="590.50"></text></g><g><title>0x7ff741321585 (?) (1 samples, 0.29%)</title><rect x="60" y="596" width="3" height="15" fill="rgb(251,64,21)"/><text x="63.00" y="606.50"></text></g><g><title>0x7ff741327075 (?) (1 samples, 0.29%)</title><rect x="60" y="612" width="3" height="15" fill="rgb(246,184,47)"/><text x="63.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="628" width="3" height="15" fill="rgb(249,137,0)"/><text x="63.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="644" width="3" height="15" fill="rgb(233,189,11)"/><text x="63.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="660" width="3" height="15" fill="rgb(232,9,25)"/><text x="63.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="676" width="3" height="15" fill="rgb(248,70,7)"/><text x="63.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="692" width="3" height="15" fill="rgb(225,56,31)"/><text x="63.00" y="702.50"></text></g><g><title>0x7ff740c5e543 (?) (1 samples, 0.29%)</title><rect x="60" y="708" width="3" height="15" fill="rgb(222,134,35)"/><text x="63.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="724" width="3" height="15" fill="rgb(236,36,46)"/><text x="63.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="740" width="3" height="15" fill="rgb(239,185,14)"/><text x="63.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="756" width="3" height="15" fill="rgb(239,203,36)"/><text x="63.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="772" width="3" height="15" fill="rgb(234,136,53)"/><text x="63.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="788" width="3" height="15" fill="rgb(224,98,32)"/><text x="63.00" y="798.50"></text></g><g><title>0x7ff740a33b9c (?) (1 samples, 0.29%)</title><rect x="60" y="804" width="3" height="15" fill="rgb(231,137,18)"/><text x="63.00" y="814.50"></text></g><g><title>0x7ff740a37885 (?) (1 samples, 0.29%)</title><rect x="60" y="820" width="3" height="15" fill="rgb(209,111,6)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="836" width="3" height="15" fill="rgb(233,103,36)"/><text x="63.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="852" width="3" height="15" fill="rgb(223,19,36)"/><text x="63.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="868" width="3" height="15" fill="rgb(243,184,16)"/><text x="63.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="884" width="3" height="15" fill="rgb(247,169,35)"/><text x="63.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="900" width="3" height="15" fill="rgb(231,46,45)"/><text x="63.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.29%)</title><rect x="60" y="916" width="3" height="15" fill="rgb(244,169,35)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="932" width="3" height="15" fill="rgb(215,15,3)"/><text x="63.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="948" width="3" height="15" fill="rgb(222,139,44)"/><text x="63.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="964" width="3" height="15" fill="rgb(239,137,8)"/><text x="63.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="980" width="3" height="15" fill="rgb(249,225,0)"/><text x="63.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="996" width="3" height="15" fill="rgb(248,88,52)"/><text x="63.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.29%)</title><rect x="60" y="1012" width="3" height="15" fill="rgb(226,20,30)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="1028" width="3" height="15" fill="rgb(205,70,48)"/><text x="63.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="1044" width="3" height="15" fill="rgb(213,177,38)"/><text x="63.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="1060" width="3" height="15" fill="rgb(251,196,5)"/><text x="63.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.29%)</title><rect x="60" y="1076" width="3" height="15" fill="rgb(207,177,7)"/><text x="63.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="60" y="1092" width="3" height="15" fill="rgb(245,161,13)"/><text x="63.00" y="1102.50"></text></g><g><title>&lt;module&gt; (hashlib.py) (1 samples, 0.29%)</title><rect x="60" y="1108" width="3" height="15" fill="rgb(218,132,15)"/><text x="63.00" y="1118.50"></text></g><g><title>__get_openssl_constructor (hashlib.py) (1 samples, 0.29%)</title><rect x="60" y="1124" width="3" height="15" fill="rgb(254,192,7)"/><text x="63.00" y="1134.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.57%)</title><rect x="70" y="116" width="7" height="15" fill="rgb(246,208,39)"/><text x="73.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.57%)</title><rect x="70" y="132" width="7" height="15" fill="rgb(209,112,49)"/><text x="73.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.57%)</title><rect x="70" y="148" width="7" height="15" fill="rgb(241,57,21)"/><text x="73.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.57%)</title><rect x="101" y="180" width="6" height="15" fill="rgb(231,198,27)"/><text x="104.00" y="190.50"></text></g><g><title>0x7ff70eacaff9 (?) (1 samples, 0.29%)</title><rect x="124" y="212" width="4" height="15" fill="rgb(245,219,4)"/><text x="127.00" y="222.50"></text></g><g><title>0x7ff70eac5ef6 (?) (1 samples, 0.29%)</title><rect x="124" y="228" width="4" height="15" fill="rgb(250,160,27)"/><text x="127.00" y="238.50"></text></g><g><title>0x7ff70eaba962 (?) (1 samples, 0.29%)</title><rect x="124" y="244" width="4" height="15" fill="rgb(226,150,39)"/><text x="127.00" y="254.50"></text></g><g><title>0x7ff70eaee7a7 (?) (1 samples, 0.29%)</title><rect x="124" y="260" width="4" height="15" fill="rgb(211,148,8)"/><text x="127.00" y="270.50"></text></g><g><title>0x7ff70eaee379 (?) (1 samples, 0.29%)</title><rect x="124" y="276" width="4" height="15" fill="rgb(237,57,48)"/><text x="127.00" y="286.50"></text></g><g><title>0x7ff70ef4c8b8 (?) (1 samples, 0.29%)</title><rect x="124" y="292" width="4" height="15" fill="rgb(249,187,20)"/><text x="127.00" y="302.50"></text></g><g><title>0x7ff70ef4ac7f (?) (1 samples, 0.29%)</title><rect x="124" y="308" width="4" height="15" fill="rgb(253,143,7)"/><text x="127.00" y="318.50"></text></g><g><title>0x7ff70ef5d99c (?) (1 samples, 0.29%)</title><rect x="124" y="324" width="4" height="15" fill="rgb(235,173,20)"/><text x="127.00" y="334.50"></text></g><g><title>0x7ff70ec429ae (?) (1 samples, 0.29%)</title><rect x="124" y="340" width="4" height="15" fill="rgb(212,220,50)"/><text x="127.00" y="350.50"></text></g><g><title>0x7ff70ef195e6 (?) (1 samples, 0.29%)</title><rect x="124" y="356" width="4" height="15" fill="rgb(253,54,39)"/><text x="127.00" y="366.50"></text></g><g><title>0x7ff70ef19436 (?) (1 samples, 0.29%)</title><rect x="124" y="372" width="4" height="15" fill="rgb(225,121,5)"/><text x="127.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="134" y="244" width="4" height="15" fill="rgb(239,77,2)"/><text x="137.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.14%)</title><rect x="128" y="212" width="13" height="15" fill="rgb(233,199,12)"/><text x="131.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="134" y="228" width="7" height="15" fill="rgb(245,211,43)"/><text x="137.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="138" y="244" width="3" height="15" fill="rgb(231,2,42)"/><text x="141.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="138" y="260" width="3" height="15" fill="rgb(213,151,15)"/><text x="141.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="138" y="276" width="3" height="15" fill="rgb(229,202,33)"/><text x="141.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="138" y="292" width="3" height="15" fill="rgb(234,77,2)"/><text x="141.00" y="302.50"></text></g><g><title>0x7ff74ea5a998 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="144" y="292" width="4" height="15" fill="rgb(207,85,35)"/><text x="147.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="148" y="308" width="3" height="15" fill="rgb(209,108,50)"/><text x="151.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="148" y="324" width="3" height="15" fill="rgb(239,99,1)"/><text x="151.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="148" y="292" width="6" height="15" fill="rgb(207,195,0)"/><text x="151.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="151" y="308" width="3" height="15" fill="rgb(208,221,8)"/><text x="154.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="151" y="324" width="3" height="15" fill="rgb(207,45,21)"/><text x="154.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="151" y="340" width="3" height="15" fill="rgb(243,150,49)"/><text x="154.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="151" y="356" width="3" height="15" fill="rgb(236,166,48)"/><text x="154.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="154" y="292" width="4" height="15" fill="rgb(215,191,42)"/><text x="157.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="171" y="340" width="4" height="15" fill="rgb(220,205,6)"/><text x="174.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="175" y="340" width="6" height="15" fill="rgb(254,150,24)"/><text x="178.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="356" width="3" height="15" fill="rgb(248,157,19)"/><text x="181.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="372" width="3" height="15" fill="rgb(245,143,11)"/><text x="181.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="178" y="388" width="3" height="15" fill="rgb(254,54,34)"/><text x="181.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="178" y="404" width="3" height="15" fill="rgb(211,49,13)"/><text x="181.00" y="414.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="340" width="7" height="15" fill="rgb(227,2,8)"/><text x="184.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="356" width="7" height="15" fill="rgb(234,194,9)"/><text x="184.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="372" width="7" height="15" fill="rgb(254,101,29)"/><text x="184.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="388" width="7" height="15" fill="rgb(230,4,0)"/><text x="184.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="404" width="7" height="15" fill="rgb(235,147,35)"/><text x="184.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="420" width="7" height="15" fill="rgb(215,228,30)"/><text x="184.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="436" width="7" height="15" fill="rgb(209,40,24)"/><text x="184.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="181" y="452" width="7" height="15" fill="rgb(249,107,28)"/><text x="184.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="185" y="468" width="3" height="15" fill="rgb(224,5,45)"/><text x="188.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="185" y="484" width="3" height="15" fill="rgb(227,98,35)"/><text x="188.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="185" y="500" width="3" height="15" fill="rgb(248,173,35)"/><text x="188.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="185" y="516" width="3" height="15" fill="rgb(248,217,37)"/><text x="188.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="185" y="532" width="3" height="15" fill="rgb(205,133,22)"/><text x="188.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="185" y="548" width="3" height="15" fill="rgb(216,197,52)"/><text x="188.00" y="558.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.86%)</title><rect x="158" y="292" width="34" height="15" fill="rgb(242,121,38)"/><text x="161.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.86%)</title><rect x="158" y="308" width="34" height="15" fill="rgb(207,197,32)"/><text x="161.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.86%)</title><rect x="158" y="324" width="34" height="15" fill="rgb(240,127,48)"/><text x="161.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="188" y="340" width="4" height="15" fill="rgb(223,94,39)"/><text x="191.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="188" y="356" width="4" height="15" fill="rgb(245,111,43)"/><text x="191.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="188" y="372" width="4" height="15" fill="rgb(230,210,37)"/><text x="191.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="188" y="388" width="4" height="15" fill="rgb(206,33,42)"/><text x="191.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.29%)</title><rect x="144" y="276" width="51" height="15" fill="rgb(236,122,27)"/><text x="147.00" y="286.50">onnxr..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="192" y="292" width="3" height="15" fill="rgb(227,72,38)"/><text x="195.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="192" y="308" width="3" height="15" fill="rgb(233,108,28)"/><text x="195.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.57%)</title><rect x="144" y="260" width="54" height="15" fill="rgb(225,25,36)"/><text x="147.00" y="270.50">onnxr..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="195" y="276" width="3" height="15" fill="rgb(220,216,34)"/><text x="198.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="195" y="292" width="3" height="15" fill="rgb(227,114,15)"/><text x="198.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="198" y="260" width="7" height="15" fill="rgb(224,211,15)"/><text x="201.00" y="270.50"></text></g><g><title>0x7ff74ea70e7a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="202" y="276" width="3" height="15" fill="rgb(250,224,43)"/><text x="205.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.00%)</title><rect x="144" y="244" width="71" height="15" fill="rgb(242,223,32)"/><text x="147.00" y="254.50">onnxrunt..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.86%)</title><rect x="205" y="260" width="10" height="15" fill="rgb(252,120,8)"/><text x="208.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.57%)</title><rect x="208" y="276" width="7" height="15" fill="rgb(213,17,41)"/><text x="211.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.57%)</title><rect x="208" y="292" width="7" height="15" fill="rgb(224,177,44)"/><text x="211.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.29%)</title><rect x="212" y="308" width="3" height="15" fill="rgb(233,183,46)"/><text x="215.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.29%)</title><rect x="212" y="324" width="3" height="15" fill="rgb(212,74,20)"/><text x="215.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.29%)</title><rect x="212" y="340" width="3" height="15" fill="rgb(241,191,9)"/><text x="215.00" y="350.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (47 samples, 13.43%)</title><rect x="63" y="68" width="159" height="15" fill="rgb(212,44,6)"/><text x="66.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (47 samples, 13.43%)</title><rect x="63" y="84" width="159" height="15" fill="rgb(212,124,48)"/><text x="66.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (47 samples, 13.43%)</title><rect x="63" y="100" width="159" height="15" fill="rgb(228,76,25)"/><text x="66.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 12.29%)</title><rect x="77" y="116" width="145" height="15" fill="rgb(211,118,33)"/><text x="80.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 11.43%)</title><rect x="87" y="132" width="135" height="15" fill="rgb(226,20,37)"/><text x="90.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 10.86%)</title><rect x="94" y="148" width="128" height="15" fill="rgb(233,168,7)"/><text x="97.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (37 samples, 10.57%)</title><rect x="97" y="164" width="125" height="15" fill="rgb(206,200,39)"/><text x="100.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (34 samples, 9.71%)</title><rect x="107" y="180" width="115" height="15" fill="rgb(218,64,35)"/><text x="110.00" y="190.50">run (mlprodict..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 8.86%)</title><rect x="117" y="196" width="105" height="15" fill="rgb(215,13,53)"/><text x="120.00" y="206.50">run (onnxrun..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 6.86%)</title><rect x="141" y="212" width="81" height="15" fill="rgb(218,10,27)"/><text x="144.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 6.86%)</title><rect x="141" y="228" width="81" height="15" fill="rgb(226,12,49)"/><text x="144.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.57%)</title><rect x="215" y="244" width="7" height="15" fill="rgb(234,121,13)"/><text x="218.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="219" y="260" width="3" height="15" fill="rgb(241,51,52)"/><text x="222.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="219" y="276" width="3" height="15" fill="rgb(250,32,35)"/><text x="222.00" y="286.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="219" y="292" width="3" height="15" fill="rgb(253,202,18)"/><text x="222.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="225" y="116" width="4" height="15" fill="rgb(224,127,0)"/><text x="228.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="225" y="132" width="4" height="15" fill="rgb(208,76,25)"/><text x="228.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.29%)</title><rect x="279" y="180" width="4" height="15" fill="rgb(235,57,29)"/><text x="282.00" y="190.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.86%)</title><rect x="384" y="260" width="10" height="15" fill="rgb(224,105,0)"/><text x="387.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.86%)</title><rect x="384" y="276" width="10" height="15" fill="rgb(243,130,52)"/><text x="387.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="390" y="292" width="4" height="15" fill="rgb(248,87,53)"/><text x="393.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="394" y="260" width="3" height="15" fill="rgb(230,84,15)"/><text x="397.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (6 samples, 1.71%)</title><rect x="380" y="212" width="21" height="15" fill="rgb(253,147,17)"/><text x="383.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (6 samples, 1.71%)</title><rect x="380" y="228" width="21" height="15" fill="rgb(212,43,52)"/><text x="383.00" y="238.50"></text></g><g><title>array_astype (methods.c) (6 samples, 1.71%)</title><rect x="380" y="244" width="21" height="15" fill="rgb(232,16,11)"/><text x="383.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.29%)</title><rect x="397" y="260" width="4" height="15" fill="rgb(213,85,5)"/><text x="400.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.29%)</title><rect x="397" y="276" width="4" height="15" fill="rgb(234,167,54)"/><text x="400.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="397" y="292" width="4" height="15" fill="rgb(231,83,26)"/><text x="400.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 0.86%)</title><rect x="401" y="212" width="10" height="15" fill="rgb(230,32,4)"/><text x="404.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.29%)</title><rect x="407" y="228" width="4" height="15" fill="rgb(233,67,13)"/><text x="410.00" y="238.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.29%)</title><rect x="451" y="372" width="4" height="15" fill="rgb(219,85,32)"/><text x="454.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.57%)</title><rect x="451" y="340" width="7" height="15" fill="rgb(220,34,45)"/><text x="454.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.57%)</title><rect x="451" y="356" width="7" height="15" fill="rgb(236,156,18)"/><text x="454.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="455" y="372" width="3" height="15" fill="rgb(215,98,28)"/><text x="458.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="458" y="340" width="3" height="15" fill="rgb(219,74,26)"/><text x="461.00" y="350.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (8 samples, 2.29%)</title><rect x="438" y="276" width="27" height="15" fill="rgb(249,2,2)"/><text x="441.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 2.00%)</title><rect x="441" y="292" width="24" height="15" fill="rgb(212,111,51)"/><text x="444.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c) (7 samples, 2.00%)</title><rect x="441" y="308" width="24" height="15" fill="rgb(205,178,54)"/><text x="444.00" y="318.50">a..</text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 1.14%)</title><rect x="451" y="324" width="14" height="15" fill="rgb(210,7,18)"/><text x="454.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="461" y="340" width="4" height="15" fill="rgb(254,120,25)"/><text x="464.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (10 samples, 2.86%)</title><rect x="434" y="244" width="34" height="15" fill="rgb(224,58,28)"/><text x="437.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.57%)</title><rect x="438" y="260" width="30" height="15" fill="rgb(227,1,1)"/><text x="441.00" y="270.50">ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.29%)</title><rect x="465" y="276" width="3" height="15" fill="rgb(235,109,35)"/><text x="468.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.29%)</title><rect x="475" y="324" width="3" height="15" fill="rgb(235,108,40)"/><text x="478.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.29%)</title><rect x="475" y="340" width="3" height="15" fill="rgb(215,101,32)"/><text x="478.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="475" y="356" width="3" height="15" fill="rgb(212,98,3)"/><text x="478.00" y="366.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.29%)</title><rect x="475" y="372" width="3" height="15" fill="rgb(210,57,49)"/><text x="478.00" y="382.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.29%)</title><rect x="478" y="324" width="4" height="15" fill="rgb(250,94,1)"/><text x="481.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.29%)</title><rect x="478" y="340" width="4" height="15" fill="rgb(212,27,9)"/><text x="481.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (5 samples, 1.43%)</title><rect x="468" y="244" width="17" height="15" fill="rgb(206,91,51)"/><text x="471.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (3 samples, 0.86%)</title><rect x="475" y="260" width="10" height="15" fill="rgb(212,35,36)"/><text x="478.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.86%)</title><rect x="475" y="276" width="10" height="15" fill="rgb(253,101,6)"/><text x="478.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 0.86%)</title><rect x="475" y="292" width="10" height="15" fill="rgb(232,65,53)"/><text x="478.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.86%)</title><rect x="475" y="308" width="10" height="15" fill="rgb(252,130,52)"/><text x="478.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.29%)</title><rect x="482" y="324" width="3" height="15" fill="rgb(214,205,20)"/><text x="485.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.29%)</title><rect x="482" y="340" width="3" height="15" fill="rgb(238,93,21)"/><text x="485.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.57%)</title><rect x="485" y="260" width="7" height="15" fill="rgb(215,136,11)"/><text x="488.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.57%)</title><rect x="485" y="276" width="7" height="15" fill="rgb(226,56,38)"/><text x="488.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.57%)</title><rect x="485" y="292" width="7" height="15" fill="rgb(237,52,42)"/><text x="488.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="488" y="308" width="4" height="15" fill="rgb(210,162,24)"/><text x="491.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.29%)</title><rect x="492" y="276" width="3" height="15" fill="rgb(251,190,42)"/><text x="495.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.29%)</title><rect x="492" y="292" width="3" height="15" fill="rgb(243,135,12)"/><text x="495.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="495" y="276" width="3" height="15" fill="rgb(244,29,22)"/><text x="498.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.29%)</title><rect x="498" y="340" width="4" height="15" fill="rgb(242,196,14)"/><text x="501.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="498" y="356" width="4" height="15" fill="rgb(234,98,1)"/><text x="501.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="498" y="372" width="4" height="15" fill="rgb(231,140,41)"/><text x="501.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.57%)</title><rect x="498" y="292" width="7" height="15" fill="rgb(212,111,31)"/><text x="501.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.57%)</title><rect x="498" y="308" width="7" height="15" fill="rgb(206,68,26)"/><text x="501.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.57%)</title><rect x="498" y="324" width="7" height="15" fill="rgb(252,207,28)"/><text x="501.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="502" y="340" width="3" height="15" fill="rgb(218,54,2)"/><text x="505.00" y="350.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.29%)</title><rect x="508" y="324" width="4" height="15" fill="rgb(242,170,50)"/><text x="511.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.86%)</title><rect x="505" y="308" width="10" height="15" fill="rgb(222,11,1)"/><text x="508.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="512" y="324" width="3" height="15" fill="rgb(218,150,30)"/><text x="515.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.29%)</title><rect x="512" y="340" width="3" height="15" fill="rgb(245,61,25)"/><text x="515.00" y="350.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.29%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(236,213,5)"/><text x="518.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.29%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(215,152,11)"/><text x="522.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.29%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(253,78,46)"/><text x="522.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.71%)</title><rect x="505" y="292" width="20" height="15" fill="rgb(250,109,3)"/><text x="508.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.29%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(219,198,30)"/><text x="525.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (32 samples, 9.14%)</title><rect x="421" y="228" width="108" height="15" fill="rgb(234,87,10)"/><text x="424.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.71%)</title><rect x="485" y="244" width="44" height="15" fill="rgb(225,56,20)"/><text x="488.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.14%)</title><rect x="492" y="260" width="37" height="15" fill="rgb(242,165,36)"/><text x="495.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 2.57%)</title><rect x="498" y="276" width="31" height="15" fill="rgb(254,112,42)"/><text x="501.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="525" y="292" width="4" height="15" fill="rgb(205,167,30)"/><text x="528.00" y="302.50"></text></g><g><title>0x7ff739d4233d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="525" y="308" width="4" height="15" fill="rgb(209,8,26)"/><text x="528.00" y="318.50"></text></g><g><title>0x7ff739d64214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="525" y="324" width="4" height="15" fill="rgb(219,139,46)"/><text x="528.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.29%)</title><rect x="525" y="340" width="4" height="15" fill="rgb(248,95,51)"/><text x="528.00" y="350.50"></text></g><g><title>0x7ff74ebd9e46 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="525" y="356" width="4" height="15" fill="rgb(237,143,54)"/><text x="528.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.57%)</title><rect x="556" y="260" width="6" height="15" fill="rgb(248,151,3)"/><text x="559.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="562" y="260" width="4" height="15" fill="rgb(218,31,10)"/><text x="565.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.29%)</title><rect x="562" y="276" width="4" height="15" fill="rgb(209,90,53)"/><text x="565.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.29%)</title><rect x="562" y="292" width="4" height="15" fill="rgb(214,40,39)"/><text x="565.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.29%)</title><rect x="566" y="276" width="3" height="15" fill="rgb(228,109,53)"/><text x="569.00" y="286.50"></text></g><g><title>0x7ff74ea70757 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="566" y="292" width="3" height="15" fill="rgb(246,28,28)"/><text x="569.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.29%)</title><rect x="569" y="276" width="4" height="15" fill="rgb(225,217,41)"/><text x="572.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.29%)</title><rect x="569" y="292" width="4" height="15" fill="rgb(231,148,25)"/><text x="572.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.86%)</title><rect x="566" y="260" width="10" height="15" fill="rgb(221,187,50)"/><text x="569.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.29%)</title><rect x="573" y="276" width="3" height="15" fill="rgb(217,189,11)"/><text x="576.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.29%)</title><rect x="573" y="292" width="3" height="15" fill="rgb(250,208,24)"/><text x="576.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="573" y="308" width="3" height="15" fill="rgb(215,21,42)"/><text x="576.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.29%)</title><rect x="573" y="324" width="3" height="15" fill="rgb(231,33,28)"/><text x="576.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.57%)</title><rect x="583" y="324" width="6" height="15" fill="rgb(219,193,25)"/><text x="586.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.57%)</title><rect x="583" y="340" width="6" height="15" fill="rgb(205,88,19)"/><text x="586.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.57%)</title><rect x="583" y="356" width="6" height="15" fill="rgb(225,177,52)"/><text x="586.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.57%)</title><rect x="583" y="372" width="6" height="15" fill="rgb(221,69,23)"/><text x="586.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.57%)</title><rect x="583" y="388" width="6" height="15" fill="rgb(207,105,46)"/><text x="586.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.29%)</title><rect x="596" y="340" width="4" height="15" fill="rgb(250,41,39)"/><text x="599.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(239,207,14)"/><text x="599.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.29%)</title><rect x="596" y="372" width="4" height="15" fill="rgb(238,148,42)"/><text x="599.00" y="382.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.29%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(211,143,44)"/><text x="603.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.29%)</title><rect x="603" y="388" width="3" height="15" fill="rgb(218,167,53)"/><text x="606.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.57%)</title><rect x="603" y="372" width="7" height="15" fill="rgb(222,137,0)"/><text x="606.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="606" y="388" width="4" height="15" fill="rgb(207,45,51)"/><text x="609.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.29%)</title><rect x="610" y="372" width="3" height="15" fill="rgb(252,189,50)"/><text x="613.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.29%)</title><rect x="610" y="388" width="3" height="15" fill="rgb(205,3,5)"/><text x="613.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.29%)</title><rect x="610" y="404" width="3" height="15" fill="rgb(216,175,45)"/><text x="613.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="610" y="420" width="3" height="15" fill="rgb(209,157,10)"/><text x="613.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.29%)</title><rect x="610" y="436" width="3" height="15" fill="rgb(222,41,31)"/><text x="613.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.43%)</title><rect x="603" y="340" width="17" height="15" fill="rgb(219,195,39)"/><text x="606.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.43%)</title><rect x="603" y="356" width="17" height="15" fill="rgb(251,151,41)"/><text x="606.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.57%)</title><rect x="613" y="372" width="7" height="15" fill="rgb(210,55,53)"/><text x="616.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.57%)</title><rect x="613" y="388" width="7" height="15" fill="rgb(254,57,3)"/><text x="616.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.57%)</title><rect x="613" y="404" width="7" height="15" fill="rgb(212,143,48)"/><text x="616.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="616" y="420" width="4" height="15" fill="rgb(221,213,6)"/><text x="619.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="616" y="436" width="4" height="15" fill="rgb(214,84,30)"/><text x="619.00" y="446.50"></text></g><g><title>0x7ff74ea12a45 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="616" y="452" width="4" height="15" fill="rgb(219,156,5)"/><text x="619.00" y="462.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.00%)</title><rect x="576" y="260" width="47" height="15" fill="rgb(227,129,21)"/><text x="579.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.00%)</title><rect x="576" y="276" width="47" height="15" fill="rgb(237,81,11)"/><text x="579.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 3.71%)</title><rect x="579" y="292" width="44" height="15" fill="rgb(215,65,33)"/><text x="582.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 3.43%)</title><rect x="583" y="308" width="40" height="15" fill="rgb(249,40,11)"/><text x="586.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 2.86%)</title><rect x="589" y="324" width="34" height="15" fill="rgb(235,199,52)"/><text x="592.00" y="334.50">Py..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.29%)</title><rect x="620" y="340" width="3" height="15" fill="rgb(250,199,36)"/><text x="623.00" y="350.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.29%)</title><rect x="637" y="324" width="3" height="15" fill="rgb(218,215,33)"/><text x="640.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.29%)</title><rect x="640" y="340" width="3" height="15" fill="rgb(247,195,27)"/><text x="643.00" y="350.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.29%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(234,220,44)"/><text x="646.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.86%)</title><rect x="640" y="324" width="10" height="15" fill="rgb(251,149,9)"/><text x="643.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="647" y="340" width="3" height="15" fill="rgb(216,14,10)"/><text x="650.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (129 samples, 36.86%)</title><rect x="222" y="68" width="435" height="15" fill="rgb(239,171,29)"/><text x="225.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (129 samples, 36.86%)</title><rect x="222" y="84" width="435" height="15" fill="rgb(242,1,47)"/><text x="225.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (129 samples, 36.86%)</title><rect x="222" y="100" width="435" height="15" fill="rgb(214,110,19)"/><text x="225.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 36.29%)</title><rect x="229" y="116" width="428" height="15" fill="rgb(253,39,21)"/><text x="232.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (124 samples, 35.43%)</title><rect x="239" y="132" width="418" height="15" fill="rgb(219,210,19)"/><text x="242.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (123 samples, 35.14%)</title><rect x="242" y="148" width="415" height="15" fill="rgb(247,18,49)"/><text x="245.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (120 samples, 34.29%)</title><rect x="252" y="164" width="405" height="15" fill="rgb(211,40,47)"/><text x="255.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (111 samples, 31.71%)</title><rect x="283" y="180" width="374" height="15" fill="rgb(253,4,15)"/><text x="286.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (85 samples, 24.29%)</title><rect x="370" y="196" width="287" height="15" fill="rgb(253,37,23)"/><text x="373.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (73 samples, 20.86%)</title><rect x="411" y="212" width="246" height="15" fill="rgb(223,134,13)"/><text x="414.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (38 samples, 10.86%)</title><rect x="529" y="228" width="128" height="15" fill="rgb(249,41,48)"/><text x="532.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (36 samples, 10.29%)</title><rect x="535" y="244" width="122" height="15" fill="rgb(239,199,53)"/><text x="538.00" y="254.50">norm_l1 (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.86%)</title><rect x="623" y="260" width="34" height="15" fill="rgb(251,12,35)"/><text x="626.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.86%)</title><rect x="623" y="276" width="34" height="15" fill="rgb(223,207,20)"/><text x="626.00" y="286.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 2.86%)</title><rect x="623" y="292" width="34" height="15" fill="rgb(225,160,6)"/><text x="626.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.00%)</title><rect x="633" y="308" width="24" height="15" fill="rgb(248,181,0)"/><text x="636.00" y="318.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.57%)</title><rect x="650" y="324" width="7" height="15" fill="rgb(242,225,21)"/><text x="653.00" y="334.50"></text></g><g><title>0x7ff74dc7d780 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="714" y="212" width="4" height="15" fill="rgb(228,109,43)"/><text x="717.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.29%)</title><rect x="721" y="276" width="3" height="15" fill="rgb(211,174,18)"/><text x="724.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.29%)</title><rect x="721" y="292" width="3" height="15" fill="rgb(210,219,16)"/><text x="724.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.29%)</title><rect x="721" y="308" width="3" height="15" fill="rgb(248,82,18)"/><text x="724.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.57%)</title><rect x="721" y="244" width="7" height="15" fill="rgb(207,43,40)"/><text x="724.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.57%)</title><rect x="721" y="260" width="7" height="15" fill="rgb(208,224,39)"/><text x="724.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.29%)</title><rect x="724" y="276" width="4" height="15" fill="rgb(238,151,12)"/><text x="727.00" y="286.50"></text></g><g><title>0x7ff74dc7c930 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="731" y="260" width="3" height="15" fill="rgb(211,19,19)"/><text x="734.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.29%)</title><rect x="734" y="260" width="4" height="15" fill="rgb(235,29,18)"/><text x="737.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.29%)</title><rect x="738" y="308" width="3" height="15" fill="rgb(208,11,5)"/><text x="741.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.29%)</title><rect x="738" y="324" width="3" height="15" fill="rgb(252,188,36)"/><text x="741.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.57%)</title><rect x="738" y="292" width="6" height="15" fill="rgb(226,1,54)"/><text x="741.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.29%)</title><rect x="741" y="308" width="3" height="15" fill="rgb(251,48,24)"/><text x="744.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 0.86%)</title><rect x="744" y="292" width="11" height="15" fill="rgb(233,154,47)"/><text x="747.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="751" y="308" width="4" height="15" fill="rgb(254,98,38)"/><text x="754.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="755" y="324" width="3" height="15" fill="rgb(209,131,19)"/><text x="758.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.00%)</title><rect x="738" y="276" width="23" height="15" fill="rgb(214,74,38)"/><text x="741.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.57%)</title><rect x="755" y="292" width="6" height="15" fill="rgb(219,220,7)"/><text x="758.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.57%)</title><rect x="755" y="308" width="6" height="15" fill="rgb(241,102,15)"/><text x="758.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.29%)</title><rect x="758" y="324" width="3" height="15" fill="rgb(230,101,9)"/><text x="761.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="758" y="340" width="3" height="15" fill="rgb(206,34,11)"/><text x="761.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.29%)</title><rect x="758" y="356" width="3" height="15" fill="rgb(248,71,27)"/><text x="761.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 2.57%)</title><rect x="738" y="260" width="30" height="15" fill="rgb(221,177,30)"/><text x="741.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.57%)</title><rect x="761" y="276" width="7" height="15" fill="rgb(210,185,12)"/><text x="764.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="765" y="292" width="3" height="15" fill="rgb(239,174,21)"/><text x="768.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.29%)</title><rect x="765" y="308" width="3" height="15" fill="rgb(230,188,20)"/><text x="768.00" y="318.50"></text></g><g><title>array_sum (methods.c) (18 samples, 5.14%)</title><rect x="711" y="180" width="60" height="15" fill="rgb(205,202,33)"/><text x="714.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 5.14%)</title><rect x="711" y="196" width="60" height="15" fill="rgb(231,66,14)"/><text x="714.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (16 samples, 4.57%)</title><rect x="718" y="212" width="53" height="15" fill="rgb(210,148,13)"/><text x="721.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 4.29%)</title><rect x="721" y="228" width="50" height="15" fill="rgb(233,4,30)"/><text x="724.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 3.71%)</title><rect x="728" y="244" width="43" height="15" fill="rgb(208,100,49)"/><text x="731.00" y="254.50">PyUF..</text></g><g><title>check_and_adjust_axis (common.h) (1 samples, 0.29%)</title><rect x="768" y="260" width="3" height="15" fill="rgb(207,178,29)"/><text x="771.00" y="270.50"></text></g><g><title>check_and_adjust_axis_msg (common.h) (1 samples, 0.29%)</title><rect x="768" y="276" width="3" height="15" fill="rgb(253,217,38)"/><text x="771.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.57%)</title><rect x="778" y="196" width="7" height="15" fill="rgb(234,42,38)"/><text x="781.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.29%)</title><rect x="782" y="212" width="3" height="15" fill="rgb(247,59,2)"/><text x="785.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.29%)</title><rect x="782" y="228" width="3" height="15" fill="rgb(247,211,46)"/><text x="785.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.29%)</title><rect x="785" y="244" width="3" height="15" fill="rgb(238,68,31)"/><text x="788.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.29%)</title><rect x="785" y="260" width="3" height="15" fill="rgb(240,213,29)"/><text x="788.00" y="270.50"></text></g><g><title>array_add (number.c) (2 samples, 0.57%)</title><rect x="785" y="196" width="7" height="15" fill="rgb(223,40,37)"/><text x="788.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.57%)</title><rect x="785" y="212" width="7" height="15" fill="rgb(228,213,27)"/><text x="788.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.57%)</title><rect x="785" y="228" width="7" height="15" fill="rgb(251,123,25)"/><text x="788.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="788" y="244" width="4" height="15" fill="rgb(208,166,2)"/><text x="791.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.29%)</title><rect x="788" y="260" width="4" height="15" fill="rgb(236,107,37)"/><text x="791.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.29%)</title><rect x="788" y="276" width="4" height="15" fill="rgb(241,97,40)"/><text x="791.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.29%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(238,74,50)"/><text x="791.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.29%)</title><rect x="788" y="308" width="4" height="15" fill="rgb(226,151,11)"/><text x="791.00" y="318.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.57%)</title><rect x="822" y="212" width="7" height="15" fill="rgb(229,62,17)"/><text x="825.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.57%)</title><rect x="829" y="212" width="7" height="15" fill="rgb(253,33,11)"/><text x="832.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.29%)</title><rect x="836" y="212" width="3" height="15" fill="rgb(234,34,41)"/><text x="839.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.57%)</title><rect x="852" y="228" width="7" height="15" fill="rgb(208,211,20)"/><text x="855.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.29%)</title><rect x="859" y="228" width="3" height="15" fill="rgb(232,134,35)"/><text x="862.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 2.29%)</title><rect x="839" y="212" width="27" height="15" fill="rgb(250,174,48)"/><text x="842.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.29%)</title><rect x="862" y="228" width="4" height="15" fill="rgb(228,42,19)"/><text x="865.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.29%)</title><rect x="866" y="212" width="3" height="15" fill="rgb(221,114,10)"/><text x="869.00" y="222.50"></text></g><g><title>0x7ff74ea70e63 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="900" y="228" width="3" height="15" fill="rgb(223,50,49)"/><text x="903.00" y="238.50"></text></g><g><title>0x7ff74ea7b120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="903" y="228" width="3" height="15" fill="rgb(253,192,13)"/><text x="906.00" y="238.50"></text></g><g><title>0x7ff74eb38df0 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="906" y="228" width="4" height="15" fill="rgb(232,180,10)"/><text x="909.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 4.29%)</title><rect x="869" y="212" width="51" height="15" fill="rgb(226,96,34)"/><text x="872.00" y="222.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.86%)</title><rect x="910" y="228" width="10" height="15" fill="rgb(221,188,0)"/><text x="913.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.29%)</title><rect x="916" y="244" width="4" height="15" fill="rgb(227,64,42)"/><text x="919.00" y="254.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.29%)</title><rect x="920" y="212" width="3" height="15" fill="rgb(231,223,48)"/><text x="923.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.29%)</title><rect x="923" y="212" width="4" height="15" fill="rgb(209,36,31)"/><text x="926.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 1.14%)</title><rect x="927" y="212" width="13" height="15" fill="rgb(207,99,5)"/><text x="930.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.57%)</title><rect x="933" y="228" width="7" height="15" fill="rgb(225,44,6)"/><text x="936.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (55 samples, 15.71%)</title><rect x="792" y="196" width="185" height="15" fill="rgb(241,12,50)"/><text x="795.00" y="206.50">check_array (sklearn/uti..</text></g><g><title>simplefilter (warnings.py) (11 samples, 3.14%)</title><rect x="940" y="212" width="37" height="15" fill="rgb(235,212,40)"/><text x="943.00" y="222.50">sim..</text></g><g><title>_add_filter (warnings.py) (9 samples, 2.57%)</title><rect x="947" y="228" width="30" height="15" fill="rgb(237,13,50)"/><text x="950.00" y="238.50">_a..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.57%)</title><rect x="1011" y="228" width="7" height="15" fill="rgb(230,46,34)"/><text x="1014.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 4.00%)</title><rect x="977" y="196" width="47" height="15" fill="rgb(243,38,53)"/><text x="980.00" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 3.71%)</title><rect x="980" y="212" width="44" height="15" fill="rgb(238,160,34)"/><text x="983.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.57%)</title><rect x="1018" y="228" width="6" height="15" fill="rgb(209,64,39)"/><text x="1021.00" y="238.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="1034" y="212" width="4" height="15" fill="rgb(219,37,25)"/><text x="1037.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.29%)</title><rect x="1038" y="212" width="3" height="15" fill="rgb(229,71,36)"/><text x="1041.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.86%)</title><rect x="1045" y="260" width="10" height="15" fill="rgb(243,152,51)"/><text x="1048.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.29%)</title><rect x="1051" y="276" width="4" height="15" fill="rgb(242,111,9)"/><text x="1054.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.29%)</title><rect x="1058" y="324" width="3" height="15" fill="rgb(240,30,40)"/><text x="1061.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.86%)</title><rect x="1058" y="292" width="10" height="15" fill="rgb(223,25,31)"/><text x="1061.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.86%)</title><rect x="1058" y="308" width="10" height="15" fill="rgb(246,113,13)"/><text x="1061.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.57%)</title><rect x="1061" y="324" width="7" height="15" fill="rgb(226,202,17)"/><text x="1064.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.57%)</title><rect x="1061" y="340" width="7" height="15" fill="rgb(210,69,14)"/><text x="1064.00" y="350.50"></text></g><g><title>0x7ff74ea7ad50 (libc-2.29.so) (2 samples, 0.57%)</title><rect x="1061" y="356" width="7" height="15" fill="rgb(215,135,53)"/><text x="1064.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.71%)</title><rect x="1055" y="260" width="20" height="15" fill="rgb(245,95,33)"/><text x="1058.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.43%)</title><rect x="1058" y="276" width="17" height="15" fill="rgb(206,38,18)"/><text x="1061.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.57%)</title><rect x="1068" y="292" width="7" height="15" fill="rgb(224,178,54)"/><text x="1071.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.57%)</title><rect x="1068" y="308" width="7" height="15" fill="rgb(238,197,5)"/><text x="1071.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.57%)</title><rect x="1068" y="324" width="7" height="15" fill="rgb(243,20,25)"/><text x="1071.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.29%)</title><rect x="1072" y="340" width="3" height="15" fill="rgb(237,108,2)"/><text x="1075.00" y="350.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.29%)</title><rect x="1075" y="260" width="3" height="15" fill="rgb(239,196,36)"/><text x="1078.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1078" y="260" width="4" height="15" fill="rgb(247,69,17)"/><text x="1081.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (93 samples, 26.57%)</title><rect x="771" y="180" width="314" height="15" fill="rgb(206,90,18)"/><text x="774.00" y="190.50">decision_function (sklearn/linear_model/_b..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 5.14%)</title><rect x="1024" y="196" width="61" height="15" fill="rgb(213,206,32)"/><text x="1027.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.71%)</title><rect x="1041" y="212" width="44" height="15" fill="rgb(221,114,5)"/><text x="1044.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.43%)</title><rect x="1045" y="228" width="40" height="15" fill="rgb(225,80,6)"/><text x="1048.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 3.43%)</title><rect x="1045" y="244" width="40" height="15" fill="rgb(245,160,11)"/><text x="1048.00" y="254.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1082" y="260" width="3" height="15" fill="rgb(229,225,27)"/><text x="1085.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.29%)</title><rect x="1088" y="228" width="4" height="15" fill="rgb(233,64,34)"/><text x="1091.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.86%)</title><rect x="1088" y="196" width="10" height="15" fill="rgb(221,111,22)"/><text x="1091.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.86%)</title><rect x="1088" y="212" width="10" height="15" fill="rgb(231,72,40)"/><text x="1091.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.57%)</title><rect x="1092" y="228" width="6" height="15" fill="rgb(250,183,1)"/><text x="1095.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1105" y="212" width="4" height="15" fill="rgb(234,5,1)"/><text x="1108.00" y="222.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="1109" y="292" width="3" height="15" fill="rgb(253,137,15)"/><text x="1112.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.29%)</title><rect x="1109" y="308" width="3" height="15" fill="rgb(225,144,11)"/><text x="1112.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.86%)</title><rect x="1109" y="228" width="10" height="15" fill="rgb(236,1,4)"/><text x="1112.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.86%)</title><rect x="1109" y="244" width="10" height="15" fill="rgb(216,227,38)"/><text x="1112.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.86%)</title><rect x="1109" y="260" width="10" height="15" fill="rgb(230,71,8)"/><text x="1112.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.86%)</title><rect x="1109" y="276" width="10" height="15" fill="rgb(224,95,52)"/><text x="1112.00" y="286.50"></text></g><g><title>to_64 (npy_extint128.h) (2 samples, 0.57%)</title><rect x="1112" y="292" width="7" height="15" fill="rgb(235,206,27)"/><text x="1115.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1119" y="244" width="3" height="15" fill="rgb(232,59,46)"/><text x="1122.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.43%)</title><rect x="1109" y="212" width="16" height="15" fill="rgb(249,111,53)"/><text x="1112.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.57%)</title><rect x="1119" y="228" width="6" height="15" fill="rgb(244,52,0)"/><text x="1122.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.29%)</title><rect x="1122" y="244" width="3" height="15" fill="rgb(239,68,11)"/><text x="1125.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (132 samples, 37.71%)</title><rect x="687" y="164" width="445" height="15" fill="rgb(227,205,31)"/><text x="690.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.00%)</title><rect x="1085" y="180" width="47" height="15" fill="rgb(224,17,4)"/><text x="1088.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.86%)</title><rect x="1098" y="196" width="34" height="15" fill="rgb(244,134,8)"/><text x="1101.00" y="206.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.57%)</title><rect x="1125" y="212" width="7" height="15" fill="rgb(243,67,36)"/><text x="1128.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1129" y="228" width="3" height="15" fill="rgb(246,215,37)"/><text x="1132.00" y="238.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.29%)</title><rect x="1129" y="244" width="3" height="15" fill="rgb(211,194,24)"/><text x="1132.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.29%)</title><rect x="1152" y="180" width="27" height="15" fill="rgb(249,120,38)"/><text x="1155.00" y="190.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.86%)</title><rect x="1169" y="196" width="10" height="15" fill="rgb(246,142,30)"/><text x="1172.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (152 samples, 43.43%)</title><rect x="670" y="132" width="513" height="15" fill="rgb(247,126,51)"/><text x="673.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (152 samples, 43.43%)</title><rect x="670" y="148" width="513" height="15" fill="rgb(235,162,49)"/><text x="673.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 4.29%)</title><rect x="1132" y="164" width="51" height="15" fill="rgb(237,183,54)"/><text x="1135.00" y="174.50">check..</text></g><g><title>isclass (inspect.py) (1 samples, 0.29%)</title><rect x="1179" y="180" width="4" height="15" fill="rgb(246,189,2)"/><text x="1182.00" y="190.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (157 samples, 44.86%)</title><rect x="657" y="68" width="529" height="15" fill="rgb(242,98,39)"/><text x="660.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (157 samples, 44.86%)</title><rect x="657" y="84" width="529" height="15" fill="rgb(225,88,30)"/><text x="660.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinea..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (157 samples, 44.86%)</title><rect x="657" y="100" width="529" height="15" fill="rgb(240,43,3)"/><text x="660.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 44.29%)</title><rect x="664" y="116" width="522" height="15" fill="rgb(241,19,40)"/><text x="667.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="1183" y="132" width="3" height="15" fill="rgb(230,173,0)"/><text x="1186.00" y="142.50"></text></g><g><title>0x7ff74eb38130 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1183" y="148" width="3" height="15" fill="rgb(222,62,10)"/><text x="1186.00" y="158.50"></text></g><g><title>all (350 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,53,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (350 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,17,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_.py) (1 samples, 0.29%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(221,62,33)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (1 samples, 0.29%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(232,113,19)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(223,22,54)"/><text x="1189.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(206,11,53)"/><text x="1189.00" y="126.50"></text></g><g><title>_get_xdtype (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.29%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(234,43,7)"/><text x="1189.00" y="142.50"></text></g></g></svg>