<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(224,155,24)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(223,100,28)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(233,57,33)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(219,114,14)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(211,57,39)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(249,124,38)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(218,10,22)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(241,16,14)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(222,144,19)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.37%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(230,30,7)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(246,179,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(228,196,49)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(208,144,45)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(227,91,25)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(249,25,38)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.37%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(210,195,37)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(221,159,26)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(227,179,7)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(220,209,5)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(212,28,2)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(222,217,46)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.37%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(238,67,39)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(207,99,20)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(222,130,18)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(209,218,35)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(248,2,44)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(232,54,8)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.37%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(236,227,41)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(228,226,33)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(254,63,53)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(253,199,26)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(226,42,6)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(205,144,29)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(206,207,50)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(212,140,12)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(247,4,29)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.37%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(233,170,21)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(241,95,10)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(220,183,21)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(213,24,28)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(244,69,35)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(228,197,9)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(251,146,23)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(216,217,43)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(251,173,46)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(217,22,53)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(243,3,31)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(226,40,25)"/><text x="15.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.18%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(223,114,44)"/><text x="15.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.18%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(243,33,0)"/><text x="15.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.18%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(212,71,24)"/><text x="15.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(207,226,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(231,227,45)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(221,34,11)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(235,31,33)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(217,161,40)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(207,101,5)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(212,115,53)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(252,129,25)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(210,70,30)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="340" width="2" height="15" fill="rgb(252,100,29)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="356" width="2" height="15" fill="rgb(252,8,52)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="372" width="2" height="15" fill="rgb(225,112,2)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.18%)</title><rect x="14" y="388" width="2" height="15" fill="rgb(234,171,21)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="404" width="2" height="15" fill="rgb(220,223,3)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="420" width="2" height="15" fill="rgb(239,94,12)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="436" width="2" height="15" fill="rgb(224,23,53)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="452" width="2" height="15" fill="rgb(233,199,24)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="468" width="2" height="15" fill="rgb(234,179,53)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="484" width="2" height="15" fill="rgb(220,101,43)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="500" width="2" height="15" fill="rgb(254,42,17)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="516" width="2" height="15" fill="rgb(243,95,44)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="532" width="2" height="15" fill="rgb(238,36,8)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="548" width="2" height="15" fill="rgb(239,216,2)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="564" width="2" height="15" fill="rgb(227,151,41)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.18%)</title><rect x="14" y="580" width="2" height="15" fill="rgb(234,199,40)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="596" width="2" height="15" fill="rgb(234,125,0)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="612" width="2" height="15" fill="rgb(208,71,48)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="628" width="2" height="15" fill="rgb(227,78,50)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="644" width="2" height="15" fill="rgb(247,32,3)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="660" width="2" height="15" fill="rgb(212,148,33)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="676" width="2" height="15" fill="rgb(221,93,21)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="692" width="2" height="15" fill="rgb(220,124,6)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="708" width="2" height="15" fill="rgb(211,169,5)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="724" width="2" height="15" fill="rgb(242,192,53)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="740" width="2" height="15" fill="rgb(230,21,20)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="756" width="2" height="15" fill="rgb(205,27,38)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.18%)</title><rect x="14" y="772" width="2" height="15" fill="rgb(209,196,5)"/><text x="17.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="788" width="2" height="15" fill="rgb(235,174,49)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="804" width="2" height="15" fill="rgb(208,98,3)"/><text x="17.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="820" width="2" height="15" fill="rgb(220,221,45)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="836" width="2" height="15" fill="rgb(251,32,26)"/><text x="17.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(235,110,14)"/><text x="17.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(208,54,4)"/><text x="17.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(209,7,21)"/><text x="17.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.18%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(253,14,2)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(227,113,29)"/><text x="17.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(241,10,11)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(209,194,45)"/><text x="17.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(252,139,0)"/><text x="17.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(238,137,25)"/><text x="17.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(235,177,6)"/><text x="17.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(213,143,36)"/><text x="17.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.18%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(234,208,43)"/><text x="17.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(224,132,4)"/><text x="17.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(245,126,20)"/><text x="17.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.18%)</title><rect x="14" y="1076" width="2" height="15" fill="rgb(252,118,23)"/><text x="17.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(234,147,45)"/><text x="17.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(210,85,41)"/><text x="17.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1124" width="2" height="15" fill="rgb(220,105,35)"/><text x="17.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1140" width="2" height="15" fill="rgb(229,186,19)"/><text x="17.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(222,207,42)"/><text x="17.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.18%)</title><rect x="14" y="1172" width="2" height="15" fill="rgb(230,56,9)"/><text x="17.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(240,39,3)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(234,214,33)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(248,18,27)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(238,222,35)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(212,34,49)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.18%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(230,55,46)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(252,11,50)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(247,21,52)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1252" width="2" height="15" fill="rgb(254,6,36)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1268" width="2" height="15" fill="rgb(249,92,42)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1284" width="2" height="15" fill="rgb(247,30,49)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="1300" width="2" height="15" fill="rgb(222,107,25)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1316" width="2" height="15" fill="rgb(235,48,36)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1332" width="2" height="15" fill="rgb(232,84,32)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1348" width="2" height="15" fill="rgb(229,143,42)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1364" width="2" height="15" fill="rgb(230,38,5)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1380" width="2" height="15" fill="rgb(244,202,32)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.18%)</title><rect x="16" y="1396" width="2" height="15" fill="rgb(237,32,16)"/><text x="19.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1412" width="2" height="15" fill="rgb(229,24,25)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1428" width="2" height="15" fill="rgb(207,43,13)"/><text x="19.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1444" width="2" height="15" fill="rgb(240,42,13)"/><text x="19.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1460" width="2" height="15" fill="rgb(214,12,14)"/><text x="19.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1476" width="2" height="15" fill="rgb(209,226,54)"/><text x="19.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.18%)</title><rect x="16" y="1492" width="2" height="15" fill="rgb(232,111,16)"/><text x="19.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1508" width="2" height="15" fill="rgb(232,144,50)"/><text x="19.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1524" width="2" height="15" fill="rgb(218,209,43)"/><text x="19.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1540" width="2" height="15" fill="rgb(214,128,0)"/><text x="19.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1556" width="2" height="15" fill="rgb(241,195,40)"/><text x="19.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1572" width="2" height="15" fill="rgb(217,153,5)"/><text x="19.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1588" width="2" height="15" fill="rgb(237,76,13)"/><text x="19.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1604" width="2" height="15" fill="rgb(251,206,12)"/><text x="19.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="1620" width="2" height="15" fill="rgb(230,192,39)"/><text x="19.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1636" width="2" height="15" fill="rgb(228,179,27)"/><text x="19.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1652" width="2" height="15" fill="rgb(217,90,3)"/><text x="19.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1668" width="2" height="15" fill="rgb(212,47,17)"/><text x="19.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="16" y="1684" width="2" height="15" fill="rgb(212,202,49)"/><text x="19.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="16" y="1700" width="2" height="15" fill="rgb(214,158,41)"/><text x="19.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_optics.py) (1 samples, 0.18%)</title><rect x="16" y="1716" width="2" height="15" fill="rgb(213,195,42)"/><text x="19.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="484" width="6" height="15" fill="rgb(243,12,53)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="500" width="6" height="15" fill="rgb(229,84,14)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="516" width="6" height="15" fill="rgb(230,152,22)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="532" width="6" height="15" fill="rgb(253,149,41)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="548" width="6" height="15" fill="rgb(238,75,3)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="564" width="6" height="15" fill="rgb(252,182,14)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.55%)</title><rect x="16" y="580" width="6" height="15" fill="rgb(236,15,26)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="596" width="6" height="15" fill="rgb(241,2,46)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="612" width="6" height="15" fill="rgb(216,30,46)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="628" width="6" height="15" fill="rgb(233,67,50)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="644" width="6" height="15" fill="rgb(237,196,19)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="660" width="6" height="15" fill="rgb(250,155,36)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.55%)</title><rect x="16" y="676" width="6" height="15" fill="rgb(249,214,41)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="692" width="6" height="15" fill="rgb(233,18,29)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="708" width="6" height="15" fill="rgb(209,204,32)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="724" width="6" height="15" fill="rgb(237,208,13)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="740" width="6" height="15" fill="rgb(210,95,4)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="756" width="6" height="15" fill="rgb(246,206,47)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.55%)</title><rect x="16" y="772" width="6" height="15" fill="rgb(234,17,24)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="788" width="6" height="15" fill="rgb(223,19,47)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="804" width="6" height="15" fill="rgb(211,175,19)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="820" width="6" height="15" fill="rgb(224,117,17)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="836" width="6" height="15" fill="rgb(221,6,0)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="852" width="6" height="15" fill="rgb(243,148,30)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.55%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(244,177,49)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(250,47,9)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(231,178,32)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(249,55,9)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(240,142,28)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(215,193,29)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="964" width="6" height="15" fill="rgb(249,180,11)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="980" width="6" height="15" fill="rgb(251,133,28)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="996" width="6" height="15" fill="rgb(205,105,30)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.55%)</title><rect x="16" y="1012" width="6" height="15" fill="rgb(210,190,24)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="1028" width="6" height="15" fill="rgb(225,204,1)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="1044" width="6" height="15" fill="rgb(210,66,32)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="1060" width="6" height="15" fill="rgb(234,35,11)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="16" y="1076" width="6" height="15" fill="rgb(248,225,8)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="16" y="1092" width="6" height="15" fill="rgb(224,107,13)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.55%)</title><rect x="16" y="1108" width="6" height="15" fill="rgb(212,1,16)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1124" width="4" height="15" fill="rgb(208,140,24)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1140" width="4" height="15" fill="rgb(254,37,14)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1156" width="4" height="15" fill="rgb(250,20,14)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1172" width="4" height="15" fill="rgb(227,163,18)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1188" width="4" height="15" fill="rgb(217,72,1)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="18" y="1204" width="4" height="15" fill="rgb(209,142,50)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1220" width="4" height="15" fill="rgb(221,208,4)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.37%)</title><rect x="18" y="1236" width="4" height="15" fill="rgb(247,109,33)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1252" width="4" height="15" fill="rgb(211,0,26)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1268" width="4" height="15" fill="rgb(227,145,25)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1284" width="4" height="15" fill="rgb(248,221,2)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1300" width="4" height="15" fill="rgb(251,213,46)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1316" width="4" height="15" fill="rgb(227,185,54)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="18" y="1332" width="4" height="15" fill="rgb(208,103,52)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1348" width="4" height="15" fill="rgb(248,163,36)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.37%)</title><rect x="18" y="1364" width="4" height="15" fill="rgb(211,158,46)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1380" width="4" height="15" fill="rgb(228,19,45)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1396" width="4" height="15" fill="rgb(206,167,1)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1412" width="4" height="15" fill="rgb(243,96,34)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="18" y="1428" width="4" height="15" fill="rgb(240,136,8)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="18" y="1444" width="4" height="15" fill="rgb(220,123,5)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.37%)</title><rect x="18" y="1460" width="4" height="15" fill="rgb(235,126,14)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.37%)</title><rect x="18" y="1476" width="4" height="15" fill="rgb(229,202,47)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.37%)</title><rect x="18" y="1492" width="4" height="15" fill="rgb(240,211,24)"/><text x="21.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.37%)</title><rect x="18" y="1508" width="4" height="15" fill="rgb(253,15,32)"/><text x="21.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.37%)</title><rect x="18" y="1524" width="4" height="15" fill="rgb(215,210,6)"/><text x="21.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.37%)</title><rect x="18" y="1540" width="4" height="15" fill="rgb(237,49,20)"/><text x="21.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.37%)</title><rect x="18" y="1556" width="4" height="15" fill="rgb(222,69,31)"/><text x="21.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.37%)</title><rect x="18" y="1572" width="4" height="15" fill="rgb(247,114,1)"/><text x="21.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(209,217,50)"/><text x="23.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(242,81,32)"/><text x="23.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;::def_readonly&lt;onnx::OpSchema::Attribute, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::Attribute::*, const&amp;)::{lambda(onnx::OpSchema::Attribute const&amp;)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::Attribute const&amp;, pybind11::is_method&gt;(pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::Attribute, &gt;::def_readonly&lt;onnx::OpSchema::Attribute, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::Attribute::*, const&amp;)::{lambda(onnx::OpSchema::Attribute const&amp;)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::Attribute const&amp;), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(214,26,37)"/><text x="23.00" y="1630.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(221,191,49)"/><text x="23.00" y="1646.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(208,135,33)"/><text x="23.00" y="1662.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.994] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(210,20,30)"/><text x="23.00" y="1678.50"></text></g><g><title>0x7fc7cfa966a2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(237,30,3)"/><text x="23.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(211,139,13)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(218,52,13)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(248,87,29)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(240,27,32)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(240,107,10)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(207,223,43)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(208,147,10)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(230,58,38)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(213,88,26)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(224,85,40)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(224,141,10)"/><text x="25.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(222,68,2)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.18%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(210,127,17)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(236,69,46)"/><text x="25.00" y="990.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(212,118,6)"/><text x="25.00" y="1006.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1012" width="3" height="15" fill="rgb(211,23,21)"/><text x="25.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.92%)</title><rect x="16" y="436" width="11" height="15" fill="rgb(220,135,0)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.92%)</title><rect x="16" y="452" width="11" height="15" fill="rgb(231,136,8)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.92%)</title><rect x="16" y="468" width="11" height="15" fill="rgb(213,122,29)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="484" width="5" height="15" fill="rgb(206,32,44)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="22" y="500" width="5" height="15" fill="rgb(205,129,36)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="516" width="5" height="15" fill="rgb(230,116,46)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.37%)</title><rect x="22" y="532" width="5" height="15" fill="rgb(229,55,25)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="548" width="5" height="15" fill="rgb(247,109,40)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="564" width="5" height="15" fill="rgb(205,110,3)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="580" width="5" height="15" fill="rgb(223,110,13)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="22" y="596" width="5" height="15" fill="rgb(218,209,54)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="612" width="5" height="15" fill="rgb(215,66,5)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.37%)</title><rect x="22" y="628" width="5" height="15" fill="rgb(226,181,1)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="644" width="5" height="15" fill="rgb(233,127,22)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="660" width="5" height="15" fill="rgb(237,193,14)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="676" width="5" height="15" fill="rgb(214,202,3)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="22" y="692" width="5" height="15" fill="rgb(234,0,50)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="708" width="5" height="15" fill="rgb(205,94,2)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.37%)</title><rect x="22" y="724" width="5" height="15" fill="rgb(234,79,9)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="740" width="5" height="15" fill="rgb(231,107,15)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="22" y="756" width="5" height="15" fill="rgb(224,58,46)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(214,69,48)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(209,175,45)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(225,70,10)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.18%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(214,170,12)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(229,163,40)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(223,202,22)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(218,9,11)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(209,208,19)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(246,38,2)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.18%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(242,148,33)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(250,103,24)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(234,109,27)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(234,108,45)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(245,154,24)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(223,40,37)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.18%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(214,167,14)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(249,152,30)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(213,52,12)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(215,27,17)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(209,59,28)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(246,119,8)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.18%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(226,45,36)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(245,105,53)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(205,20,37)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(210,119,5)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(211,133,0)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(235,135,24)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.18%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(241,53,22)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(206,170,53)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(211,11,18)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(253,66,4)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(224,197,33)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(239,2,12)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.18%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(242,157,31)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(251,213,8)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1332" width="2" height="15" fill="rgb(242,229,54)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1348" width="2" height="15" fill="rgb(243,89,24)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1364" width="2" height="15" fill="rgb(232,40,37)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1380" width="2" height="15" fill="rgb(206,16,41)"/><text x="28.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.18%)</title><rect x="25" y="1396" width="2" height="15" fill="rgb(250,182,15)"/><text x="28.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(228,121,12)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1428" width="2" height="15" fill="rgb(205,16,40)"/><text x="28.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1444" width="2" height="15" fill="rgb(212,36,0)"/><text x="28.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1460" width="2" height="15" fill="rgb(215,148,2)"/><text x="28.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1476" width="2" height="15" fill="rgb(221,34,46)"/><text x="28.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.18%)</title><rect x="25" y="1492" width="2" height="15" fill="rgb(243,38,35)"/><text x="28.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1508" width="2" height="15" fill="rgb(208,112,11)"/><text x="28.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1524" width="2" height="15" fill="rgb(216,141,52)"/><text x="28.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(214,191,6)"/><text x="28.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(224,42,36)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(210,77,11)"/><text x="28.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(236,27,0)"/><text x="28.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(243,0,18)"/><text x="28.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(234,31,30)"/><text x="28.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.18%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(232,8,30)"/><text x="28.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(205,89,28)"/><text x="28.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(238,97,0)"/><text x="28.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1684" width="2" height="15" fill="rgb(208,90,30)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1700" width="2" height="15" fill="rgb(253,221,32)"/><text x="28.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1716" width="2" height="15" fill="rgb(211,161,10)"/><text x="28.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="25" y="1732" width="2" height="15" fill="rgb(234,213,16)"/><text x="28.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="25" y="1748" width="2" height="15" fill="rgb(237,202,2)"/><text x="28.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py) (1 samples, 0.18%)</title><rect x="25" y="1764" width="2" height="15" fill="rgb(226,108,22)"/><text x="28.00" y="1774.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="25" y="1780" width="2" height="15" fill="rgb(212,164,6)"/><text x="28.00" y="1790.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="25" y="1796" width="2" height="15" fill="rgb(238,179,31)"/><text x="28.00" y="1806.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="25" y="1812" width="2" height="15" fill="rgb(243,153,12)"/><text x="28.00" y="1822.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1828" width="2" height="15" fill="rgb(253,190,38)"/><text x="28.00" y="1838.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1844" width="2" height="15" fill="rgb(206,133,32)"/><text x="28.00" y="1854.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1860" width="2" height="15" fill="rgb(236,161,46)"/><text x="28.00" y="1870.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1876" width="2" height="15" fill="rgb(232,175,41)"/><text x="28.00" y="1886.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1892" width="2" height="15" fill="rgb(231,51,24)"/><text x="28.00" y="1902.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1908" width="2" height="15" fill="rgb(209,35,45)"/><text x="28.00" y="1918.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.18%)</title><rect x="25" y="1924" width="2" height="15" fill="rgb(228,6,44)"/><text x="28.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.10%)</title><rect x="16" y="340" width="13" height="15" fill="rgb(250,173,20)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.10%)</title><rect x="16" y="356" width="13" height="15" fill="rgb(248,60,33)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.10%)</title><rect x="16" y="372" width="13" height="15" fill="rgb(227,196,54)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.10%)</title><rect x="16" y="388" width="13" height="15" fill="rgb(243,25,32)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.10%)</title><rect x="16" y="404" width="13" height="15" fill="rgb(249,124,43)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.10%)</title><rect x="16" y="420" width="13" height="15" fill="rgb(213,172,5)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.18%)</title><rect x="27" y="436" width="2" height="15" fill="rgb(246,104,47)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="452" width="2" height="15" fill="rgb(222,78,22)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(215,92,18)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(241,127,38)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(210,112,24)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(208,160,45)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.18%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(208,78,41)"/><text x="30.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(251,51,51)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(244,154,11)"/><text x="30.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(240,80,47)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(236,96,8)"/><text x="30.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(211,108,52)"/><text x="30.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(215,155,45)"/><text x="30.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(252,117,48)"/><text x="30.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.18%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(249,81,38)"/><text x="30.00" y="670.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(213,206,20)"/><text x="30.00" y="686.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(252,126,15)"/><text x="30.00" y="702.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(247,50,44)"/><text x="30.00" y="718.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(224,65,23)"/><text x="30.00" y="734.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(232,61,20)"/><text x="30.00" y="750.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(229,153,28)"/><text x="30.00" y="766.50"></text></g><g><title>0x7fc7cfb65e7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(250,155,31)"/><text x="30.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.28%)</title><rect x="16" y="244" width="15" height="15" fill="rgb(231,101,23)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.28%)</title><rect x="16" y="260" width="15" height="15" fill="rgb(242,213,54)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.28%)</title><rect x="16" y="276" width="15" height="15" fill="rgb(220,189,40)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.28%)</title><rect x="16" y="292" width="15" height="15" fill="rgb(230,78,34)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.28%)</title><rect x="16" y="308" width="15" height="15" fill="rgb(226,156,24)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.28%)</title><rect x="16" y="324" width="15" height="15" fill="rgb(243,57,50)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.18%)</title><rect x="29" y="340" width="2" height="15" fill="rgb(206,49,6)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="356" width="2" height="15" fill="rgb(244,123,42)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="372" width="2" height="15" fill="rgb(246,198,21)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="388" width="2" height="15" fill="rgb(227,128,54)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="404" width="2" height="15" fill="rgb(240,130,47)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="420" width="2" height="15" fill="rgb(206,168,5)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(232,137,19)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(239,126,13)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(243,37,39)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.18%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(224,23,36)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(233,27,12)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(230,164,37)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(207,15,51)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(250,12,23)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(251,26,22)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.18%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(247,204,46)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(247,131,15)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(209,32,2)"/><text x="32.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(228,108,39)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(206,213,34)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(210,18,44)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(254,174,48)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(246,171,31)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(219,216,41)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.18%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(235,199,0)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(225,96,46)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(211,178,51)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(229,77,45)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(245,111,6)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(219,216,28)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.18%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(206,173,14)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(231,93,21)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(250,145,9)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(215,142,34)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(207,118,11)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(224,112,13)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.18%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(249,148,37)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(206,44,6)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(241,111,48)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(245,37,50)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(218,35,38)"/><text x="32.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(228,40,37)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.18%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(223,42,40)"/><text x="34.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(235,192,5)"/><text x="34.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(233,101,26)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(252,148,51)"/><text x="34.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(252,103,20)"/><text x="34.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(205,75,6)"/><text x="34.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(237,76,23)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(244,198,41)"/><text x="34.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.18%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(206,82,52)"/><text x="34.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.18%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(221,160,54)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="68" width="25" height="15" fill="rgb(224,13,53)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="84" width="25" height="15" fill="rgb(233,211,53)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(234,62,29)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.20%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(245,128,0)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(214,92,31)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py) (12 samples, 2.20%)</title><rect x="10" y="148" width="25" height="15" fill="rgb(241,137,33)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="164" width="25" height="15" fill="rgb(212,90,32)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.20%)</title><rect x="10" y="180" width="25" height="15" fill="rgb(242,44,2)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.65%)</title><rect x="16" y="196" width="19" height="15" fill="rgb(215,111,39)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.65%)</title><rect x="16" y="212" width="19" height="15" fill="rgb(217,138,40)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.65%)</title><rect x="16" y="228" width="19" height="15" fill="rgb(219,12,26)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.37%)</title><rect x="31" y="244" width="4" height="15" fill="rgb(232,54,3)"/><text x="34.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="260" width="4" height="15" fill="rgb(244,72,53)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="276" width="4" height="15" fill="rgb(235,5,26)"/><text x="34.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="292" width="4" height="15" fill="rgb(221,81,11)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="308" width="4" height="15" fill="rgb(219,225,46)"/><text x="34.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="324" width="4" height="15" fill="rgb(240,57,43)"/><text x="34.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="31" y="340" width="4" height="15" fill="rgb(252,117,29)"/><text x="34.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="31" y="356" width="4" height="15" fill="rgb(206,175,39)"/><text x="34.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.18%)</title><rect x="33" y="372" width="2" height="15" fill="rgb(218,62,44)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="388" width="2" height="15" fill="rgb(246,85,19)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="404" width="2" height="15" fill="rgb(232,56,46)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="420" width="2" height="15" fill="rgb(247,8,10)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="436" width="2" height="15" fill="rgb(207,130,16)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="452" width="2" height="15" fill="rgb(254,7,47)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="468" width="2" height="15" fill="rgb(235,21,29)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="484" width="2" height="15" fill="rgb(205,210,1)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.18%)</title><rect x="33" y="500" width="2" height="15" fill="rgb(229,91,31)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="516" width="2" height="15" fill="rgb(232,69,3)"/><text x="36.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="532" width="2" height="15" fill="rgb(235,45,10)"/><text x="36.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="548" width="2" height="15" fill="rgb(205,58,17)"/><text x="36.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="564" width="2" height="15" fill="rgb(231,80,6)"/><text x="36.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="580" width="2" height="15" fill="rgb(207,8,21)"/><text x="36.00" y="590.50"></text></g><g><title>0x7fc7c234e585 (?) (1 samples, 0.18%)</title><rect x="33" y="596" width="2" height="15" fill="rgb(243,47,44)"/><text x="36.00" y="606.50"></text></g><g><title>0x7fc7c2354075 (?) (1 samples, 0.18%)</title><rect x="33" y="612" width="2" height="15" fill="rgb(220,90,30)"/><text x="36.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="628" width="2" height="15" fill="rgb(215,227,19)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="644" width="2" height="15" fill="rgb(248,41,47)"/><text x="36.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="660" width="2" height="15" fill="rgb(254,84,40)"/><text x="36.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="676" width="2" height="15" fill="rgb(250,216,34)"/><text x="36.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="692" width="2" height="15" fill="rgb(221,43,24)"/><text x="36.00" y="702.50"></text></g><g><title>0x7fc7c1c8b543 (?) (1 samples, 0.18%)</title><rect x="33" y="708" width="2" height="15" fill="rgb(208,75,32)"/><text x="36.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(229,137,18)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(222,172,11)"/><text x="36.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(236,95,47)"/><text x="36.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(253,63,52)"/><text x="36.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(212,141,18)"/><text x="36.00" y="798.50"></text></g><g><title>0x7fc7c1a60b9c (?) (1 samples, 0.18%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(230,32,18)"/><text x="36.00" y="814.50"></text></g><g><title>0x7fc7c1a64885 (?) (1 samples, 0.18%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(220,0,37)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(223,90,36)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(247,35,3)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(214,159,17)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(228,227,5)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(247,136,25)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.18%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(232,39,25)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(208,33,24)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(247,35,21)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(254,110,48)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(229,113,1)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(217,206,48)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.18%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(220,105,38)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(245,209,0)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(223,212,37)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(207,8,2)"/><text x="36.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(224,147,32)"/><text x="36.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(205,177,45)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(236,188,54)"/><text x="36.00" y="1118.50"></text></g><g><title>0x7fc7c160d20d (?) (1 samples, 0.18%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(227,0,15)"/><text x="36.00" y="1134.50"></text></g><g><title>0x7fc7c141681b (?) (1 samples, 0.18%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(253,20,32)"/><text x="36.00" y="1150.50"></text></g><g><title>0x7fc7c14805a9 (?) (1 samples, 0.18%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(232,197,43)"/><text x="36.00" y="1166.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(249,201,12)"/><text x="36.00" y="1182.50"></text></g><g><title>0x7fc7c1416359 (?) (1 samples, 0.18%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(245,68,53)"/><text x="36.00" y="1198.50"></text></g><g><title>0x7fc7c13f817c (?) (1 samples, 0.18%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(244,109,44)"/><text x="36.00" y="1214.50"></text></g><g><title>0x7fc7c1391d2c (?) (1 samples, 0.18%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(227,199,24)"/><text x="36.00" y="1230.50"></text></g><g><title>0x7fc7c13f6f48 (?) (1 samples, 0.18%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(221,14,4)"/><text x="36.00" y="1246.50"></text></g><g><title>0x7fc7c13f6b33 (?) (1 samples, 0.18%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(242,31,43)"/><text x="36.00" y="1262.50"></text></g><g><title>0x7fc7c1418bb6 (?) (1 samples, 0.18%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(212,194,39)"/><text x="36.00" y="1278.50"></text></g><g><title>0x7fc7c141889b (?) (1 samples, 0.18%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(232,149,12)"/><text x="36.00" y="1294.50"></text></g><g><title>0x7fc7cfa86bc6 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="61" y="132" width="3" height="15" fill="rgb(242,196,52)"/><text x="64.00" y="142.50"></text></g><g><title>0x7fc7cfa86bdf (libc-2.29.so) (3 samples, 0.55%)</title><rect x="64" y="132" width="6" height="15" fill="rgb(223,182,25)"/><text x="67.00" y="142.50"></text></g><g><title>0x7fc7cfa86c00 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="70" y="132" width="2" height="15" fill="rgb(212,192,33)"/><text x="73.00" y="142.50"></text></g><g><title>0x7fc7cfa87eb0 (libc-2.29.so) (7 samples, 1.28%)</title><rect x="61" y="116" width="16" height="15" fill="rgb(254,1,45)"/><text x="64.00" y="126.50"></text></g><g><title>0x7fc7cfa86c20 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="72" y="132" width="5" height="15" fill="rgb(238,23,42)"/><text x="75.00" y="142.50"></text></g><g><title>0x7fc78facaff9 (?) (1 samples, 0.18%)</title><rect x="83" y="212" width="2" height="15" fill="rgb(232,35,38)"/><text x="86.00" y="222.50"></text></g><g><title>0x7fc78fac5ef6 (?) (1 samples, 0.18%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(206,208,30)"/><text x="86.00" y="238.50"></text></g><g><title>0x7fc78faba962 (?) (1 samples, 0.18%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(253,151,5)"/><text x="86.00" y="254.50"></text></g><g><title>0x7fc78faee7a7 (?) (1 samples, 0.18%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(222,227,30)"/><text x="86.00" y="270.50"></text></g><g><title>0x7fc78faee379 (?) (1 samples, 0.18%)</title><rect x="83" y="276" width="2" height="15" fill="rgb(212,192,49)"/><text x="86.00" y="286.50"></text></g><g><title>0x7fc78ff4c8b8 (?) (1 samples, 0.18%)</title><rect x="83" y="292" width="2" height="15" fill="rgb(209,65,10)"/><text x="86.00" y="302.50"></text></g><g><title>0x7fc78ff4ac7f (?) (1 samples, 0.18%)</title><rect x="83" y="308" width="2" height="15" fill="rgb(209,96,12)"/><text x="86.00" y="318.50"></text></g><g><title>0x7fc78ff5d99c (?) (1 samples, 0.18%)</title><rect x="83" y="324" width="2" height="15" fill="rgb(206,174,22)"/><text x="86.00" y="334.50"></text></g><g><title>0x7fc78fc885a4 (?) (1 samples, 0.18%)</title><rect x="83" y="340" width="2" height="15" fill="rgb(223,105,32)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.10%)</title><rect x="90" y="372" width="13" height="15" fill="rgb(230,119,45)"/><text x="93.00" y="382.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.28%)</title><rect x="90" y="340" width="15" height="15" fill="rgb(205,131,12)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.28%)</title><rect x="90" y="356" width="15" height="15" fill="rgb(237,221,50)"/><text x="93.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="103" y="372" width="2" height="15" fill="rgb(248,158,31)"/><text x="106.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="103" y="388" width="2" height="15" fill="rgb(249,69,4)"/><text x="106.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="103" y="404" width="2" height="15" fill="rgb(242,127,8)"/><text x="106.00" y="414.50"></text></g><g><title>0x7fc7cfa892db (libc-2.29.so) (1 samples, 0.18%)</title><rect x="103" y="420" width="2" height="15" fill="rgb(212,67,51)"/><text x="106.00" y="430.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.39%)</title><rect x="105" y="340" width="28" height="15" fill="rgb(214,74,27)"/><text x="108.00" y="350.50">o..</text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="133" y="340" width="2" height="15" fill="rgb(233,184,54)"/><text x="136.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="133" y="356" width="2" height="15" fill="rgb(245,216,51)"/><text x="136.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="133" y="372" width="2" height="15" fill="rgb(215,39,22)"/><text x="136.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="133" y="388" width="2" height="15" fill="rgb(207,106,8)"/><text x="136.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="133" y="404" width="2" height="15" fill="rgb(218,97,35)"/><text x="136.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="340" width="2" height="15" fill="rgb(217,164,26)"/><text x="138.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="356" width="2" height="15" fill="rgb(228,187,35)"/><text x="138.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="372" width="2" height="15" fill="rgb(246,69,47)"/><text x="138.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="388" width="2" height="15" fill="rgb(231,81,0)"/><text x="138.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="404" width="2" height="15" fill="rgb(242,156,7)"/><text x="138.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="420" width="2" height="15" fill="rgb(241,224,45)"/><text x="138.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="436" width="2" height="15" fill="rgb(227,107,33)"/><text x="138.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="452" width="2" height="15" fill="rgb(223,3,11)"/><text x="138.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="468" width="2" height="15" fill="rgb(216,162,19)"/><text x="138.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="135" y="484" width="2" height="15" fill="rgb(248,7,33)"/><text x="138.00" y="494.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="137" y="340" width="7" height="15" fill="rgb(252,131,14)"/><text x="140.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="144" y="340" width="4" height="15" fill="rgb(242,159,34)"/><text x="147.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="144" y="356" width="4" height="15" fill="rgb(212,159,26)"/><text x="147.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="148" y="340" width="2" height="15" fill="rgb(224,192,17)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 6.61%)</title><rect x="150" y="340" width="78" height="15" fill="rgb(249,125,1)"/><text x="153.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 6.61%)</title><rect x="150" y="356" width="78" height="15" fill="rgb(209,78,47)"/><text x="153.00" y="366.50">onnxrunti..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="372" width="78" height="15" fill="rgb(227,77,10)"/><text x="153.00" y="382.50">cblas_sge..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="388" width="78" height="15" fill="rgb(210,212,49)"/><text x="153.00" y="398.50">sgemm_ (o..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="404" width="78" height="15" fill="rgb(249,174,28)"/><text x="153.00" y="414.50">mkl_blas_..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="420" width="78" height="15" fill="rgb(248,210,42)"/><text x="153.00" y="430.50">mkl_blas_..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="436" width="78" height="15" fill="rgb(252,174,48)"/><text x="153.00" y="446.50">mkl_blas_..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="452" width="78" height="15" fill="rgb(228,67,39)"/><text x="153.00" y="462.50">mkl_blas_..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (36 samples, 6.61%)</title><rect x="150" y="468" width="78" height="15" fill="rgb(248,134,32)"/><text x="153.00" y="478.50">mkl_blas_..</text></g><g><title>0x7fc7cfc06e37 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="235" y="356" width="4" height="15" fill="rgb(215,51,19)"/><text x="238.00" y="366.50"></text></g><g><title>0x7fc7cfc06e9e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="239" y="356" width="2" height="15" fill="rgb(211,167,41)"/><text x="242.00" y="366.50"></text></g><g><title>0x7fc7cfc06ea6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="241" y="356" width="2" height="15" fill="rgb(254,91,54)"/><text x="244.00" y="366.50"></text></g><g><title>0x7fc7cfc099b9 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="243" y="356" width="3" height="15" fill="rgb(235,122,35)"/><text x="246.00" y="366.50"></text></g><g><title>0x7fc7cfc099bd (libm-2.29.so) (1 samples, 0.18%)</title><rect x="246" y="356" width="2" height="15" fill="rgb(245,109,49)"/><text x="249.00" y="366.50"></text></g><g><title>0x7fc7cfc099d4 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="248" y="356" width="2" height="15" fill="rgb(225,119,13)"/><text x="251.00" y="366.50"></text></g><g><title>0x7fc7cfc099f4 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="250" y="356" width="4" height="15" fill="rgb(223,111,48)"/><text x="253.00" y="366.50"></text></g><g><title>0x7fc7cfc09a28 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="254" y="356" width="2" height="15" fill="rgb(234,122,25)"/><text x="257.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.57%)</title><rect x="228" y="340" width="30" height="15" fill="rgb(250,118,26)"/><text x="231.00" y="350.50">on..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="256" y="356" width="2" height="15" fill="rgb(242,129,29)"/><text x="259.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="258" y="340" width="3" height="15" fill="rgb(254,99,11)"/><text x="261.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="258" y="356" width="3" height="15" fill="rgb(208,150,38)"/><text x="261.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="261" y="340" width="4" height="15" fill="rgb(228,221,37)"/><text x="264.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="261" y="356" width="4" height="15" fill="rgb(230,206,21)"/><text x="264.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="261" y="372" width="4" height="15" fill="rgb(206,3,32)"/><text x="264.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="263" y="388" width="2" height="15" fill="rgb(248,7,51)"/><text x="266.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.83%)</title><rect x="265" y="372" width="22" height="15" fill="rgb(229,204,48)"/><text x="268.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.73%)</title><rect x="278" y="388" width="9" height="15" fill="rgb(213,7,4)"/><text x="281.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.02%)</title><rect x="265" y="340" width="24" height="15" fill="rgb(243,14,54)"/><text x="268.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.02%)</title><rect x="265" y="356" width="24" height="15" fill="rgb(243,224,10)"/><text x="268.00" y="366.50">o..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="287" y="372" width="2" height="15" fill="rgb(221,227,48)"/><text x="290.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="287" y="388" width="2" height="15" fill="rgb(230,199,51)"/><text x="290.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="287" y="404" width="2" height="15" fill="rgb(220,155,44)"/><text x="290.00" y="414.50"></text></g><g><title>0x7fc7cfa88b83 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="287" y="420" width="2" height="15" fill="rgb(212,187,10)"/><text x="290.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="340" width="2" height="15" fill="rgb(207,39,39)"/><text x="292.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="356" width="2" height="15" fill="rgb(229,197,31)"/><text x="292.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="372" width="2" height="15" fill="rgb(250,26,38)"/><text x="292.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="388" width="2" height="15" fill="rgb(250,210,38)"/><text x="292.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="404" width="2" height="15" fill="rgb(253,109,0)"/><text x="292.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="289" y="420" width="2" height="15" fill="rgb(207,20,6)"/><text x="292.00" y="430.50"></text></g><g><title>0x7fc78fa91930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="300" y="356" width="2" height="15" fill="rgb(251,145,38)"/><text x="303.00" y="366.50"></text></g><g><title>0x7fc7cfa88b24 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="339" y="388" width="2" height="15" fill="rgb(246,132,15)"/><text x="342.00" y="398.50"></text></g><g><title>0x7fc7cfa88b49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="341" y="388" width="2" height="15" fill="rgb(239,229,24)"/><text x="344.00" y="398.50"></text></g><g><title>0x7fc7cfa89064 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="343" y="388" width="2" height="15" fill="rgb(223,55,43)"/><text x="346.00" y="398.50"></text></g><g><title>0x7fc7cfa8908c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="345" y="388" width="2" height="15" fill="rgb(205,16,2)"/><text x="348.00" y="398.50"></text></g><g><title>0x7fc7cfa89097 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="347" y="388" width="2" height="15" fill="rgb(231,123,51)"/><text x="350.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (23 samples, 4.22%)</title><rect x="302" y="356" width="50" height="15" fill="rgb(215,11,11)"/><text x="305.00" y="366.50">opera..</text></g><g><title>malloc (libc-2.29.so) (23 samples, 4.22%)</title><rect x="302" y="372" width="50" height="15" fill="rgb(211,162,25)"/><text x="305.00" y="382.50">mallo..</text></g><g><title>0x7fc7cfa893e0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="349" y="388" width="3" height="15" fill="rgb(230,160,45)"/><text x="352.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.75%)</title><rect x="87" y="260" width="269" height="15" fill="rgb(208,215,12)"/><text x="90.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.75%)</title><rect x="87" y="276" width="269" height="15" fill="rgb(208,167,22)"/><text x="90.00" y="286.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.75%)</title><rect x="87" y="292" width="269" height="15" fill="rgb(234,55,17)"/><text x="90.00" y="302.50">onnxruntime::utils::ExecuteGraph (o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.75%)</title><rect x="87" y="308" width="269" height="15" fill="rgb(253,118,21)"/><text x="90.00" y="318.50">onnxruntime::utils::ExecuteGraphImp..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.75%)</title><rect x="87" y="324" width="269" height="15" fill="rgb(251,50,16)"/><text x="90.00" y="334.50">onnxruntime::SequentialExecutor::Ex..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 5.50%)</title><rect x="291" y="340" width="65" height="15" fill="rgb(215,130,41)"/><text x="294.00" y="350.50">onnxrun..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.37%)</title><rect x="352" y="356" width="4" height="15" fill="rgb(252,123,38)"/><text x="355.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 7.89%)</title><rect x="356" y="260" width="93" height="15" fill="rgb(214,193,1)"/><text x="359.00" y="270.50">pybind11::d..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.57%)</title><rect x="419" y="276" width="30" height="15" fill="rgb(245,87,35)"/><text x="422.00" y="286.50">py..</text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="449" y="276" width="2" height="15" fill="rgb(241,83,20)"/><text x="452.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="449" y="292" width="2" height="15" fill="rgb(241,227,10)"/><text x="452.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="449" y="308" width="2" height="15" fill="rgb(247,175,0)"/><text x="452.00" y="318.50"></text></g><g><title>0x7fc7cfa8792c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(213,199,22)"/><text x="454.00" y="302.50"></text></g><g><title>0x7fc7cfa87d07 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="453" y="292" width="5" height="15" fill="rgb(224,89,12)"/><text x="456.00" y="302.50"></text></g><g><title>0x7fc7cfa8792c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(209,102,3)"/><text x="461.00" y="318.50"></text></g><g><title>0x7fc7cfa87971 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="460" y="308" width="2" height="15" fill="rgb(219,47,12)"/><text x="463.00" y="318.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (198 samples, 36.33%)</title><rect x="35" y="100" width="429" height="15" fill="rgb(248,160,46)"/><text x="38.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (179 samples, 32.84%)</title><rect x="77" y="116" width="387" height="15" fill="rgb(246,8,8)"/><text x="80.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 32.66%)</title><rect x="79" y="132" width="385" height="15" fill="rgb(254,211,4)"/><text x="82.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (178 samples, 32.66%)</title><rect x="79" y="148" width="385" height="15" fill="rgb(240,39,30)"/><text x="82.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (178 samples, 32.66%)</title><rect x="79" y="164" width="385" height="15" fill="rgb(228,208,42)"/><text x="82.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (178 samples, 32.66%)</title><rect x="79" y="180" width="385" height="15" fill="rgb(224,115,47)"/><text x="82.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (178 samples, 32.66%)</title><rect x="79" y="196" width="385" height="15" fill="rgb(220,50,26)"/><text x="82.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 32.11%)</title><rect x="85" y="212" width="379" height="15" fill="rgb(226,168,34)"/><text x="88.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 32.11%)</title><rect x="85" y="228" width="379" height="15" fill="rgb(254,121,17)"/><text x="88.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 32.11%)</title><rect x="85" y="244" width="379" height="15" fill="rgb(208,183,31)"/><text x="88.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.28%)</title><rect x="449" y="260" width="15" height="15" fill="rgb(248,40,32)"/><text x="452.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.10%)</title><rect x="451" y="276" width="13" height="15" fill="rgb(225,69,8)"/><text x="454.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.55%)</title><rect x="458" y="292" width="6" height="15" fill="rgb(234,96,15)"/><text x="461.00" y="302.50"></text></g><g><title>0x7fc7cfa87d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="462" y="308" width="2" height="15" fill="rgb(234,137,31)"/><text x="465.00" y="318.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (199 samples, 36.51%)</title><rect x="35" y="68" width="431" height="15" fill="rgb(232,106,7)"/><text x="38.00" y="78.50">profile_ort (bench_BernoulliNB_default_b_cl_1000_50_12_flo..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (199 samples, 36.51%)</title><rect x="35" y="84" width="431" height="15" fill="rgb(236,135,48)"/><text x="38.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_f..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="464" y="100" width="2" height="15" fill="rgb(246,89,43)"/><text x="467.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="464" y="116" width="2" height="15" fill="rgb(234,160,3)"/><text x="467.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="464" y="132" width="2" height="15" fill="rgb(235,117,15)"/><text x="467.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="464" y="148" width="2" height="15" fill="rgb(209,172,27)"/><text x="467.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="464" y="164" width="2" height="15" fill="rgb(254,156,21)"/><text x="467.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="180" width="2" height="15" fill="rgb(216,149,34)"/><text x="467.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="196" width="2" height="15" fill="rgb(246,202,53)"/><text x="467.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="212" width="2" height="15" fill="rgb(246,25,36)"/><text x="467.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="464" y="228" width="2" height="15" fill="rgb(225,117,19)"/><text x="467.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="244" width="2" height="15" fill="rgb(252,181,49)"/><text x="467.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.18%)</title><rect x="464" y="260" width="2" height="15" fill="rgb(254,167,24)"/><text x="467.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="276" width="2" height="15" fill="rgb(253,90,9)"/><text x="467.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="292" width="2" height="15" fill="rgb(248,138,31)"/><text x="467.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="308" width="2" height="15" fill="rgb(216,227,23)"/><text x="467.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="464" y="324" width="2" height="15" fill="rgb(211,29,9)"/><text x="467.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="340" width="2" height="15" fill="rgb(207,119,17)"/><text x="467.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.18%)</title><rect x="464" y="356" width="2" height="15" fill="rgb(214,37,49)"/><text x="467.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="372" width="2" height="15" fill="rgb(209,158,17)"/><text x="467.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="388" width="2" height="15" fill="rgb(233,227,46)"/><text x="467.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="404" width="2" height="15" fill="rgb(254,44,22)"/><text x="467.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="464" y="420" width="2" height="15" fill="rgb(220,120,17)"/><text x="467.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="436" width="2" height="15" fill="rgb(214,205,6)"/><text x="467.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.18%)</title><rect x="464" y="452" width="2" height="15" fill="rgb(209,194,38)"/><text x="467.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="468" width="2" height="15" fill="rgb(218,110,54)"/><text x="467.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="484" width="2" height="15" fill="rgb(253,183,45)"/><text x="467.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="500" width="2" height="15" fill="rgb(232,100,17)"/><text x="467.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="516" width="2" height="15" fill="rgb(211,200,15)"/><text x="467.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="464" y="532" width="2" height="15" fill="rgb(221,211,5)"/><text x="467.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="464" y="548" width="2" height="15" fill="rgb(252,32,44)"/><text x="467.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="564" width="2" height="15" fill="rgb(217,180,27)"/><text x="467.00" y="574.50"></text></g><g><title>0x7fc7cfd0f995 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="580" width="2" height="15" fill="rgb(209,181,41)"/><text x="467.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="596" width="2" height="15" fill="rgb(231,217,50)"/><text x="467.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="612" width="2" height="15" fill="rgb(243,159,0)"/><text x="467.00" y="622.50"></text></g><g><title>0x7fc7cfd0f258 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="628" width="2" height="15" fill="rgb(210,210,13)"/><text x="467.00" y="638.50"></text></g><g><title>0x7fc7cfd5cd7a (ld-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="644" width="2" height="15" fill="rgb(252,123,22)"/><text x="467.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="660" width="2" height="15" fill="rgb(225,30,32)"/><text x="467.00" y="670.50"></text></g><g><title>0x7fc7cfd5d345 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="676" width="2" height="15" fill="rgb(242,201,44)"/><text x="467.00" y="686.50"></text></g><g><title>0x7fc7cfd55fec (ld-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="692" width="2" height="15" fill="rgb(242,118,36)"/><text x="467.00" y="702.50"></text></g><g><title>0x7fc7cfd5456b (ld-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="708" width="2" height="15" fill="rgb(244,207,13)"/><text x="467.00" y="718.50"></text></g><g><title>0x7fc7cfd54108 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="464" y="724" width="2" height="15" fill="rgb(219,133,22)"/><text x="467.00" y="734.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="479" y="180" width="3" height="15" fill="rgb(246,164,32)"/><text x="482.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.18%)</title><rect x="514" y="196" width="2" height="15" fill="rgb(250,3,30)"/><text x="517.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.18%)</title><rect x="516" y="228" width="2" height="15" fill="rgb(239,43,28)"/><text x="519.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.18%)</title><rect x="516" y="244" width="2" height="15" fill="rgb(230,52,5)"/><text x="519.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.18%)</title><rect x="516" y="260" width="2" height="15" fill="rgb(239,36,13)"/><text x="519.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.18%)</title><rect x="518" y="228" width="2" height="15" fill="rgb(223,117,20)"/><text x="521.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.18%)</title><rect x="520" y="244" width="3" height="15" fill="rgb(205,199,31)"/><text x="523.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="520" y="260" width="3" height="15" fill="rgb(231,19,26)"/><text x="523.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.37%)</title><rect x="523" y="276" width="4" height="15" fill="rgb(224,173,30)"/><text x="526.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.37%)</title><rect x="523" y="292" width="4" height="15" fill="rgb(240,120,32)"/><text x="526.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="525" y="308" width="2" height="15" fill="rgb(207,92,49)"/><text x="528.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="525" y="324" width="2" height="15" fill="rgb(224,77,50)"/><text x="528.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (5 samples, 0.92%)</title><rect x="527" y="292" width="11" height="15" fill="rgb(248,11,39)"/><text x="530.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (5 samples, 0.92%)</title><rect x="527" y="308" width="11" height="15" fill="rgb(213,54,50)"/><text x="530.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (5 samples, 0.92%)</title><rect x="527" y="324" width="11" height="15" fill="rgb(237,183,18)"/><text x="530.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.18%)</title><rect x="536" y="340" width="2" height="15" fill="rgb(218,92,21)"/><text x="539.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (16 samples, 2.94%)</title><rect x="516" y="212" width="35" height="15" fill="rgb(206,47,31)"/><text x="519.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (14 samples, 2.57%)</title><rect x="520" y="228" width="31" height="15" fill="rgb(226,180,46)"/><text x="523.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c) (13 samples, 2.39%)</title><rect x="523" y="244" width="28" height="15" fill="rgb(234,137,52)"/><text x="526.00" y="254.50">p..</text></g><g><title>PyArray_FromAny (ctors.c) (13 samples, 2.39%)</title><rect x="523" y="260" width="28" height="15" fill="rgb(231,226,7)"/><text x="526.00" y="270.50">P..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (11 samples, 2.02%)</title><rect x="527" y="276" width="24" height="15" fill="rgb(228,164,8)"/><text x="530.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (6 samples, 1.10%)</title><rect x="538" y="292" width="13" height="15" fill="rgb(252,223,23)"/><text x="541.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (5 samples, 0.92%)</title><rect x="540" y="308" width="11" height="15" fill="rgb(244,51,53)"/><text x="543.00" y="318.50"></text></g><g><title>0x7fc7cfaa7d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="551" y="292" width="2" height="15" fill="rgb(211,153,45)"/><text x="554.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="553" y="292" width="2" height="15" fill="rgb(236,106,5)"/><text x="556.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="553" y="308" width="2" height="15" fill="rgb(214,58,37)"/><text x="556.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="553" y="324" width="2" height="15" fill="rgb(246,150,39)"/><text x="556.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="555" y="292" width="2" height="15" fill="rgb(207,104,25)"/><text x="558.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (18 samples, 3.30%)</title><rect x="551" y="212" width="39" height="15" fill="rgb(246,107,37)"/><text x="554.00" y="222.50">_ru..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (18 samples, 3.30%)</title><rect x="551" y="228" width="39" height="15" fill="rgb(240,81,13)"/><text x="554.00" y="238.50">&lt;la..</text></g><g><title>array_astype (methods.c) (18 samples, 3.30%)</title><rect x="551" y="244" width="39" height="15" fill="rgb(221,156,19)"/><text x="554.00" y="254.50">arr..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (18 samples, 3.30%)</title><rect x="551" y="260" width="39" height="15" fill="rgb(231,91,4)"/><text x="554.00" y="270.50">PyA..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (18 samples, 3.30%)</title><rect x="551" y="276" width="39" height="15" fill="rgb(248,24,19)"/><text x="554.00" y="286.50">raw..</text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (15 samples, 2.75%)</title><rect x="557" y="292" width="33" height="15" fill="rgb(216,76,48)"/><text x="560.00" y="302.50">_a..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (1 samples, 0.18%)</title><rect x="590" y="212" width="2" height="15" fill="rgb(222,81,21)"/><text x="593.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="590" y="228" width="2" height="15" fill="rgb(223,41,54)"/><text x="593.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="590" y="244" width="2" height="15" fill="rgb(241,83,0)"/><text x="593.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="590" y="260" width="2" height="15" fill="rgb(227,103,4)"/><text x="593.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.18%)</title><rect x="592" y="212" width="2" height="15" fill="rgb(219,33,19)"/><text x="595.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="601" y="276" width="2" height="15" fill="rgb(243,207,11)"/><text x="604.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="601" y="292" width="2" height="15" fill="rgb(229,31,44)"/><text x="604.00" y="302.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="603" y="292" width="2" height="15" fill="rgb(221,117,20)"/><text x="606.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.18%)</title><rect x="603" y="308" width="2" height="15" fill="rgb(208,49,2)"/><text x="606.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="603" y="324" width="2" height="15" fill="rgb(244,23,19)"/><text x="606.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="603" y="340" width="2" height="15" fill="rgb(226,174,48)"/><text x="606.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.18%)</title><rect x="603" y="356" width="2" height="15" fill="rgb(209,24,50)"/><text x="606.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.37%)</title><rect x="603" y="276" width="4" height="15" fill="rgb(237,187,30)"/><text x="606.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="605" y="292" width="2" height="15" fill="rgb(213,222,11)"/><text x="608.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="605" y="308" width="2" height="15" fill="rgb(240,17,22)"/><text x="608.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="605" y="324" width="2" height="15" fill="rgb(254,6,24)"/><text x="608.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="607" y="292" width="2" height="15" fill="rgb(231,119,8)"/><text x="610.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="607" y="308" width="2" height="15" fill="rgb(252,65,21)"/><text x="610.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(254,171,20)"/><text x="610.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="607" y="340" width="2" height="15" fill="rgb(232,138,39)"/><text x="610.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="607" y="356" width="2" height="15" fill="rgb(223,157,42)"/><text x="610.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="607" y="372" width="2" height="15" fill="rgb(234,99,9)"/><text x="610.00" y="382.50"></text></g><g><title>0x7fc7cfa88c88 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="607" y="388" width="2" height="15" fill="rgb(219,212,19)"/><text x="610.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="609" y="308" width="2" height="15" fill="rgb(238,89,37)"/><text x="612.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.18%)</title><rect x="609" y="324" width="2" height="15" fill="rgb(213,157,26)"/><text x="612.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.18%)</title><rect x="609" y="340" width="2" height="15" fill="rgb(238,179,36)"/><text x="612.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="611" y="308" width="3" height="15" fill="rgb(213,54,34)"/><text x="614.00" y="318.50"></text></g><g><title>0x7fc7cfaa7d97 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="618" y="356" width="2" height="15" fill="rgb(233,147,26)"/><text x="621.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.10%)</title><rect x="609" y="292" width="13" height="15" fill="rgb(247,197,2)"/><text x="612.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.73%)</title><rect x="614" y="308" width="8" height="15" fill="rgb(252,9,41)"/><text x="617.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.73%)</title><rect x="614" y="324" width="8" height="15" fill="rgb(254,43,29)"/><text x="617.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.73%)</title><rect x="614" y="340" width="8" height="15" fill="rgb(228,120,3)"/><text x="617.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="620" y="356" width="2" height="15" fill="rgb(251,215,49)"/><text x="623.00" y="366.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.18%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(229,168,5)"/><text x="625.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (16 samples, 2.94%)</title><rect x="594" y="212" width="35" height="15" fill="rgb(206,181,33)"/><text x="597.00" y="222.50">_r..</text></g><g><title>array_add (number.c) (15 samples, 2.75%)</title><rect x="596" y="228" width="33" height="15" fill="rgb(212,178,36)"/><text x="599.00" y="238.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.57%)</title><rect x="598" y="244" width="31" height="15" fill="rgb(205,151,0)"/><text x="601.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.57%)</title><rect x="598" y="260" width="31" height="15" fill="rgb(215,219,32)"/><text x="601.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.83%)</title><rect x="607" y="276" width="22" height="15" fill="rgb(244,86,7)"/><text x="610.00" y="286.50">e..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.55%)</title><rect x="622" y="292" width="7" height="15" fill="rgb(243,99,52)"/><text x="625.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.55%)</title><rect x="622" y="308" width="7" height="15" fill="rgb(230,42,19)"/><text x="625.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (3 samples, 0.55%)</title><rect x="622" y="324" width="7" height="15" fill="rgb(209,205,42)"/><text x="625.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_add_FLOAT (simd.inc.src) (3 samples, 0.55%)</title><rect x="622" y="340" width="7" height="15" fill="rgb(243,57,30)"/><text x="625.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.37%)</title><rect x="624" y="356" width="5" height="15" fill="rgb(211,84,53)"/><text x="627.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.18%)</title><rect x="629" y="212" width="2" height="15" fill="rgb(227,189,17)"/><text x="632.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.37%)</title><rect x="635" y="260" width="5" height="15" fill="rgb(232,95,5)"/><text x="638.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.37%)</title><rect x="635" y="276" width="5" height="15" fill="rgb(217,194,39)"/><text x="638.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.37%)</title><rect x="635" y="292" width="5" height="15" fill="rgb(236,33,36)"/><text x="638.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="642" y="292" width="2" height="15" fill="rgb(224,203,51)"/><text x="645.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.18%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(213,165,42)"/><text x="645.00" y="318.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 0.92%)</title><rect x="644" y="308" width="11" height="15" fill="rgb(244,155,5)"/><text x="647.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (5 samples, 0.92%)</title><rect x="644" y="324" width="11" height="15" fill="rgb(222,176,48)"/><text x="647.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (5 samples, 0.92%)</title><rect x="644" y="340" width="11" height="15" fill="rgb(217,99,20)"/><text x="647.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (5 samples, 0.92%)</title><rect x="644" y="356" width="11" height="15" fill="rgb(237,84,36)"/><text x="647.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="655" y="324" width="2" height="15" fill="rgb(252,32,26)"/><text x="658.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.37%)</title><rect x="655" y="308" width="4" height="15" fill="rgb(212,30,36)"/><text x="658.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="657" y="324" width="2" height="15" fill="rgb(231,152,10)"/><text x="660.00" y="334.50"></text></g><g><title>0x7fc7cfaa7f6a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="659" y="356" width="2" height="15" fill="rgb(250,124,40)"/><text x="662.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (13 samples, 2.39%)</title><rect x="635" y="228" width="28" height="15" fill="rgb(210,153,5)"/><text x="638.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.39%)</title><rect x="635" y="244" width="28" height="15" fill="rgb(221,29,17)"/><text x="638.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.02%)</title><rect x="640" y="260" width="23" height="15" fill="rgb(209,13,49)"/><text x="643.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.83%)</title><rect x="642" y="276" width="21" height="15" fill="rgb(245,17,18)"/><text x="645.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.65%)</title><rect x="644" y="292" width="19" height="15" fill="rgb(214,7,37)"/><text x="647.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.37%)</title><rect x="659" y="308" width="4" height="15" fill="rgb(250,78,51)"/><text x="662.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.37%)</title><rect x="659" y="324" width="4" height="15" fill="rgb(229,117,10)"/><text x="662.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.37%)</title><rect x="659" y="340" width="4" height="15" fill="rgb(214,93,41)"/><text x="662.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="661" y="356" width="2" height="15" fill="rgb(208,172,28)"/><text x="664.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (2 samples, 0.37%)</title><rect x="663" y="276" width="5" height="15" fill="rgb(252,0,4)"/><text x="666.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.37%)</title><rect x="663" y="292" width="5" height="15" fill="rgb(218,129,31)"/><text x="666.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.37%)</title><rect x="663" y="308" width="5" height="15" fill="rgb(227,71,50)"/><text x="666.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.37%)</title><rect x="663" y="324" width="5" height="15" fill="rgb(235,32,25)"/><text x="666.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.18%)</title><rect x="666" y="340" width="2" height="15" fill="rgb(225,215,24)"/><text x="669.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.18%)</title><rect x="666" y="356" width="2" height="15" fill="rgb(243,178,22)"/><text x="669.00" y="366.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.18%)</title><rect x="668" y="324" width="2" height="15" fill="rgb(220,3,38)"/><text x="671.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.18%)</title><rect x="668" y="340" width="2" height="15" fill="rgb(207,133,53)"/><text x="671.00" y="350.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.18%)</title><rect x="668" y="356" width="2" height="15" fill="rgb(247,184,7)"/><text x="671.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (5 samples, 0.92%)</title><rect x="663" y="228" width="11" height="15" fill="rgb(214,60,34)"/><text x="666.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (5 samples, 0.92%)</title><rect x="663" y="244" width="11" height="15" fill="rgb(230,78,33)"/><text x="666.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (5 samples, 0.92%)</title><rect x="663" y="260" width="11" height="15" fill="rgb(231,144,16)"/><text x="666.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (3 samples, 0.55%)</title><rect x="668" y="276" width="6" height="15" fill="rgb(240,149,37)"/><text x="671.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.55%)</title><rect x="668" y="292" width="6" height="15" fill="rgb(254,67,18)"/><text x="671.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (3 samples, 0.55%)</title><rect x="668" y="308" width="6" height="15" fill="rgb(219,55,17)"/><text x="671.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (2 samples, 0.37%)</title><rect x="670" y="324" width="4" height="15" fill="rgb(208,112,38)"/><text x="673.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="674" y="260" width="2" height="15" fill="rgb(227,38,41)"/><text x="677.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="674" y="276" width="2" height="15" fill="rgb(212,201,31)"/><text x="677.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="674" y="292" width="2" height="15" fill="rgb(233,18,22)"/><text x="677.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(251,131,53)"/><text x="677.00" y="318.50"></text></g><g><title>0x7fc7cfc06e17 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="683" y="340" width="2" height="15" fill="rgb(232,183,49)"/><text x="686.00" y="350.50"></text></g><g><title>0x7fc7cfc06e37 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="685" y="340" width="2" height="15" fill="rgb(227,40,16)"/><text x="688.00" y="350.50"></text></g><g><title>0x7fc7cfc06e4e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="687" y="340" width="2" height="15" fill="rgb(232,92,51)"/><text x="690.00" y="350.50"></text></g><g><title>0x7fc7cfc06e62 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="689" y="340" width="3" height="15" fill="rgb(207,16,40)"/><text x="692.00" y="350.50"></text></g><g><title>0x7fc7cfc06e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(214,184,53)"/><text x="695.00" y="350.50"></text></g><g><title>0x7fc7cfc06e9e (libm-2.29.so) (2 samples, 0.37%)</title><rect x="694" y="340" width="4" height="15" fill="rgb(246,65,40)"/><text x="697.00" y="350.50"></text></g><g><title>0x7fc7cfc06ea2 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="698" y="340" width="2" height="15" fill="rgb(220,124,20)"/><text x="701.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (13 samples, 2.39%)</title><rect x="676" y="308" width="29" height="15" fill="rgb(225,6,22)"/><text x="679.00" y="318.50">FL..</text></g><g><title>expf (libm-2.29.so) (13 samples, 2.39%)</title><rect x="676" y="324" width="29" height="15" fill="rgb(216,220,7)"/><text x="679.00" y="334.50">ex..</text></g><g><title>0x7fc7cfc06ea6 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="700" y="340" width="5" height="15" fill="rgb(243,191,8)"/><text x="703.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (15 samples, 2.75%)</title><rect x="674" y="228" width="33" height="15" fill="rgb(222,78,49)"/><text x="677.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.75%)</title><rect x="674" y="244" width="33" height="15" fill="rgb(237,58,31)"/><text x="677.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.57%)</title><rect x="676" y="260" width="31" height="15" fill="rgb(236,205,34)"/><text x="679.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 2.57%)</title><rect x="676" y="276" width="31" height="15" fill="rgb(224,24,51)"/><text x="679.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (14 samples, 2.57%)</title><rect x="676" y="292" width="31" height="15" fill="rgb(220,86,54)"/><text x="679.00" y="302.50">tr..</text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="705" y="308" width="2" height="15" fill="rgb(216,109,45)"/><text x="708.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (2 samples, 0.37%)</title><rect x="707" y="228" width="4" height="15" fill="rgb(251,141,42)"/><text x="710.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="709" y="244" width="2" height="15" fill="rgb(241,168,3)"/><text x="712.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="709" y="260" width="2" height="15" fill="rgb(232,124,53)"/><text x="712.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.18%)</title><rect x="709" y="276" width="2" height="15" fill="rgb(240,28,16)"/><text x="712.00" y="286.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="711" y="340" width="2" height="15" fill="rgb(217,58,3)"/><text x="714.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="711" y="356" width="2" height="15" fill="rgb(221,192,29)"/><text x="714.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.28%)</title><rect x="711" y="276" width="15" height="15" fill="rgb(215,205,6)"/><text x="714.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 1.28%)</title><rect x="711" y="292" width="15" height="15" fill="rgb(220,39,30)"/><text x="714.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (7 samples, 1.28%)</title><rect x="711" y="308" width="15" height="15" fill="rgb(231,23,54)"/><text x="714.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (7 samples, 1.28%)</title><rect x="711" y="324" width="15" height="15" fill="rgb(242,54,49)"/><text x="714.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (6 samples, 1.10%)</title><rect x="713" y="340" width="13" height="15" fill="rgb(209,95,9)"/><text x="716.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="713" y="356" width="13" height="15" fill="rgb(206,75,23)"/><text x="716.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="713" y="372" width="13" height="15" fill="rgb(233,175,48)"/><text x="716.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="713" y="388" width="13" height="15" fill="rgb(212,20,17)"/><text x="716.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (25 samples, 4.59%)</title><rect x="711" y="228" width="54" height="15" fill="rgb(225,128,4)"/><text x="714.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (25 samples, 4.59%)</title><rect x="711" y="244" width="54" height="15" fill="rgb(229,176,7)"/><text x="714.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (25 samples, 4.59%)</title><rect x="711" y="260" width="54" height="15" fill="rgb(244,125,23)"/><text x="714.00" y="270.50">dot (..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.30%)</title><rect x="726" y="276" width="39" height="15" fill="rgb(229,227,40)"/><text x="729.00" y="286.50">sge..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="769" y="372" width="3" height="15" fill="rgb(251,222,17)"/><text x="772.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="769" y="388" width="3" height="15" fill="rgb(228,29,44)"/><text x="772.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="769" y="404" width="3" height="15" fill="rgb(221,190,48)"/><text x="772.00" y="414.50"></text></g><g><title>0x7fc7cfa891a3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="769" y="420" width="3" height="15" fill="rgb(231,1,36)"/><text x="772.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.18%)</title><rect x="772" y="372" width="2" height="15" fill="rgb(211,200,31)"/><text x="775.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="772" y="388" width="2" height="15" fill="rgb(247,132,5)"/><text x="775.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="772" y="404" width="2" height="15" fill="rgb(234,31,50)"/><text x="775.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="772" y="420" width="2" height="15" fill="rgb(250,0,22)"/><text x="775.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.55%)</title><rect x="774" y="388" width="6" height="15" fill="rgb(221,152,26)"/><text x="777.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 1.10%)</title><rect x="769" y="356" width="13" height="15" fill="rgb(211,63,50)"/><text x="772.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.73%)</title><rect x="774" y="372" width="8" height="15" fill="rgb(210,94,37)"/><text x="777.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="780" y="388" width="2" height="15" fill="rgb(215,189,29)"/><text x="783.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (8 samples, 1.47%)</title><rect x="767" y="244" width="18" height="15" fill="rgb(230,101,26)"/><text x="770.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.47%)</title><rect x="767" y="260" width="18" height="15" fill="rgb(215,167,52)"/><text x="770.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 1.47%)</title><rect x="767" y="276" width="18" height="15" fill="rgb(254,121,40)"/><text x="770.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (7 samples, 1.28%)</title><rect x="769" y="292" width="16" height="15" fill="rgb(206,93,50)"/><text x="772.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.28%)</title><rect x="769" y="308" width="16" height="15" fill="rgb(214,213,6)"/><text x="772.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.28%)</title><rect x="769" y="324" width="16" height="15" fill="rgb(223,115,8)"/><text x="772.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.28%)</title><rect x="769" y="340" width="16" height="15" fill="rgb(254,134,18)"/><text x="772.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.18%)</title><rect x="782" y="356" width="3" height="15" fill="rgb(241,95,48)"/><text x="785.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="782" y="372" width="3" height="15" fill="rgb(227,128,16)"/><text x="785.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="782" y="388" width="3" height="15" fill="rgb(221,59,23)"/><text x="785.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.18%)</title><rect x="785" y="276" width="2" height="15" fill="rgb(207,122,41)"/><text x="788.00" y="286.50"></text></g><g><title>0x7fc7cfbd31a0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="791" y="340" width="2" height="15" fill="rgb(229,124,40)"/><text x="794.00" y="350.50"></text></g><g><title>0x7fc7cfc06e17 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="793" y="340" width="2" height="15" fill="rgb(245,198,29)"/><text x="796.00" y="350.50"></text></g><g><title>0x7fc7cfc06ea2 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="795" y="340" width="5" height="15" fill="rgb(247,122,21)"/><text x="798.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (10 samples, 1.83%)</title><rect x="787" y="308" width="21" height="15" fill="rgb(209,4,48)"/><text x="790.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (10 samples, 1.83%)</title><rect x="787" y="324" width="21" height="15" fill="rgb(249,160,13)"/><text x="790.00" y="334.50"></text></g><g><title>0x7fc7cfc06ea6 (libm-2.29.so) (4 samples, 0.73%)</title><rect x="800" y="340" width="8" height="15" fill="rgb(218,3,25)"/><text x="803.00" y="350.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.18%)</title><rect x="808" y="324" width="3" height="15" fill="rgb(239,197,38)"/><text x="811.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (22 samples, 4.04%)</title><rect x="765" y="228" width="48" height="15" fill="rgb(238,83,31)"/><text x="768.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.39%)</title><rect x="785" y="244" width="28" height="15" fill="rgb(240,37,28)"/><text x="788.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.39%)</title><rect x="785" y="260" width="28" height="15" fill="rgb(251,26,51)"/><text x="788.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 2.20%)</title><rect x="787" y="276" width="26" height="15" fill="rgb(229,187,44)"/><text x="790.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (12 samples, 2.20%)</title><rect x="787" y="292" width="26" height="15" fill="rgb(251,52,38)"/><text x="790.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src) (2 samples, 0.37%)</title><rect x="808" y="308" width="5" height="15" fill="rgb(224,7,52)"/><text x="811.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.18%)</title><rect x="811" y="324" width="2" height="15" fill="rgb(224,126,19)"/><text x="814.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="815" y="324" width="2" height="15" fill="rgb(224,177,7)"/><text x="818.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="815" y="340" width="2" height="15" fill="rgb(247,135,26)"/><text x="818.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="815" y="356" width="2" height="15" fill="rgb(252,228,22)"/><text x="818.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="815" y="372" width="2" height="15" fill="rgb(233,167,18)"/><text x="818.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="815" y="388" width="2" height="15" fill="rgb(216,209,29)"/><text x="818.00" y="398.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (162 samples, 29.72%)</title><rect x="471" y="164" width="350" height="15" fill="rgb(215,180,47)"/><text x="474.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (157 samples, 28.81%)</title><rect x="482" y="180" width="339" height="15" fill="rgb(205,63,2)"/><text x="485.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (141 samples, 25.87%)</title><rect x="516" y="196" width="305" height="15" fill="rgb(221,131,36)"/><text x="519.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (88 samples, 16.15%)</title><rect x="631" y="212" width="190" height="15" fill="rgb(239,17,0)"/><text x="634.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (4 samples, 0.73%)</title><rect x="813" y="228" width="8" height="15" fill="rgb(235,72,35)"/><text x="816.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 0.73%)</title><rect x="813" y="244" width="8" height="15" fill="rgb(208,223,51)"/><text x="816.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.73%)</title><rect x="813" y="260" width="8" height="15" fill="rgb(209,137,8)"/><text x="816.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (4 samples, 0.73%)</title><rect x="813" y="276" width="8" height="15" fill="rgb(242,200,34)"/><text x="816.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.73%)</title><rect x="813" y="292" width="8" height="15" fill="rgb(232,184,50)"/><text x="816.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.55%)</title><rect x="815" y="308" width="6" height="15" fill="rgb(242,222,25)"/><text x="818.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.37%)</title><rect x="817" y="324" width="4" height="15" fill="rgb(235,138,52)"/><text x="820.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.37%)</title><rect x="817" y="340" width="4" height="15" fill="rgb(221,105,4)"/><text x="820.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.37%)</title><rect x="817" y="356" width="4" height="15" fill="rgb(237,151,17)"/><text x="820.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="819" y="372" width="2" height="15" fill="rgb(213,202,24)"/><text x="822.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="819" y="388" width="2" height="15" fill="rgb(234,71,45)"/><text x="822.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="819" y="404" width="2" height="15" fill="rgb(242,92,52)"/><text x="822.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="819" y="420" width="2" height="15" fill="rgb(227,138,50)"/><text x="822.00" y="430.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 30.28%)</title><rect x="466" y="132" width="358" height="15" fill="rgb(214,30,22)"/><text x="469.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (164 samples, 30.09%)</title><rect x="469" y="148" width="355" height="15" fill="rgb(240,222,53)"/><text x="472.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="821" y="164" width="3" height="15" fill="rgb(206,135,53)"/><text x="824.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="821" y="180" width="3" height="15" fill="rgb(241,21,38)"/><text x="824.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="821" y="196" width="3" height="15" fill="rgb(208,128,49)"/><text x="824.00" y="206.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (166 samples, 30.46%)</title><rect x="466" y="100" width="360" height="15" fill="rgb(245,121,52)"/><text x="469.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_50_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (166 samples, 30.46%)</title><rect x="466" y="116" width="360" height="15" fill="rgb(238,15,5)"/><text x="469.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="824" y="132" width="2" height="15" fill="rgb(213,20,10)"/><text x="827.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="826" y="404" width="2" height="15" fill="rgb(251,206,42)"/><text x="829.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="826" y="420" width="2" height="15" fill="rgb(245,38,21)"/><text x="829.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="826" y="436" width="2" height="15" fill="rgb(228,170,21)"/><text x="829.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="826" y="452" width="2" height="15" fill="rgb(244,76,49)"/><text x="829.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="826" y="468" width="2" height="15" fill="rgb(236,3,2)"/><text x="829.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.18%)</title><rect x="826" y="484" width="2" height="15" fill="rgb(215,31,15)"/><text x="829.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.18%)</title><rect x="826" y="500" width="2" height="15" fill="rgb(205,108,10)"/><text x="829.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="826" y="516" width="2" height="15" fill="rgb(248,14,17)"/><text x="829.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="826" y="532" width="2" height="15" fill="rgb(208,55,16)"/><text x="829.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="826" y="548" width="2" height="15" fill="rgb(235,215,34)"/><text x="829.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="826" y="564" width="2" height="15" fill="rgb(211,176,19)"/><text x="829.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="580" width="2" height="15" fill="rgb(240,48,45)"/><text x="829.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="596" width="2" height="15" fill="rgb(219,133,8)"/><text x="829.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="612" width="2" height="15" fill="rgb(227,103,13)"/><text x="829.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="628" width="2" height="15" fill="rgb(228,110,3)"/><text x="829.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="644" width="2" height="15" fill="rgb(206,5,22)"/><text x="829.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="660" width="2" height="15" fill="rgb(249,125,1)"/><text x="829.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="676" width="2" height="15" fill="rgb(241,125,38)"/><text x="829.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="692" width="2" height="15" fill="rgb(252,53,0)"/><text x="829.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="708" width="2" height="15" fill="rgb(214,187,23)"/><text x="829.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="724" width="2" height="15" fill="rgb(227,57,43)"/><text x="829.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="740" width="2" height="15" fill="rgb(233,69,24)"/><text x="829.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="756" width="2" height="15" fill="rgb(209,65,16)"/><text x="829.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="772" width="2" height="15" fill="rgb(211,105,2)"/><text x="829.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="788" width="2" height="15" fill="rgb(239,52,53)"/><text x="829.00" y="798.50"></text></g><g><title>flush_data (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="826" y="804" width="2" height="15" fill="rgb(228,117,13)"/><text x="829.00" y="814.50"></text></g><g><title>__init__ (jinja2/nodes.py) (1 samples, 0.18%)</title><rect x="826" y="820" width="2" height="15" fill="rgb(237,110,29)"/><text x="829.00" y="830.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (169 samples, 31.01%)</title><rect x="466" y="68" width="366" height="15" fill="rgb(241,51,48)"/><text x="469.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1000..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (169 samples, 31.01%)</title><rect x="466" y="84" width="366" height="15" fill="rgb(250,54,3)"/><text x="469.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_100..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.55%)</title><rect x="826" y="100" width="6" height="15" fill="rgb(245,106,17)"/><text x="829.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.55%)</title><rect x="826" y="116" width="6" height="15" fill="rgb(246,182,54)"/><text x="829.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.55%)</title><rect x="826" y="132" width="6" height="15" fill="rgb(236,186,48)"/><text x="829.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.55%)</title><rect x="826" y="148" width="6" height="15" fill="rgb(254,151,1)"/><text x="829.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.55%)</title><rect x="826" y="164" width="6" height="15" fill="rgb(217,57,46)"/><text x="829.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.55%)</title><rect x="826" y="180" width="6" height="15" fill="rgb(221,219,42)"/><text x="829.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (3 samples, 0.55%)</title><rect x="826" y="196" width="6" height="15" fill="rgb(208,193,47)"/><text x="829.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="212" width="6" height="15" fill="rgb(219,95,40)"/><text x="829.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="228" width="6" height="15" fill="rgb(212,136,38)"/><text x="829.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="244" width="6" height="15" fill="rgb(222,105,18)"/><text x="829.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="826" y="260" width="6" height="15" fill="rgb(235,70,40)"/><text x="829.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="276" width="6" height="15" fill="rgb(205,65,48)"/><text x="829.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (3 samples, 0.55%)</title><rect x="826" y="292" width="6" height="15" fill="rgb(240,5,4)"/><text x="829.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="308" width="6" height="15" fill="rgb(235,155,34)"/><text x="829.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="324" width="6" height="15" fill="rgb(234,159,5)"/><text x="829.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="340" width="6" height="15" fill="rgb(234,46,18)"/><text x="829.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.55%)</title><rect x="826" y="356" width="6" height="15" fill="rgb(205,52,27)"/><text x="829.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.55%)</title><rect x="826" y="372" width="6" height="15" fill="rgb(222,13,45)"/><text x="829.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (3 samples, 0.55%)</title><rect x="826" y="388" width="6" height="15" fill="rgb(253,216,9)"/><text x="829.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.37%)</title><rect x="828" y="404" width="4" height="15" fill="rgb(246,207,1)"/><text x="831.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.37%)</title><rect x="828" y="420" width="4" height="15" fill="rgb(239,89,9)"/><text x="831.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.37%)</title><rect x="828" y="436" width="4" height="15" fill="rgb(239,177,53)"/><text x="831.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.37%)</title><rect x="828" y="452" width="4" height="15" fill="rgb(248,101,30)"/><text x="831.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.37%)</title><rect x="828" y="468" width="4" height="15" fill="rgb(254,5,11)"/><text x="831.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="830" y="484" width="2" height="15" fill="rgb(217,218,7)"/><text x="833.00" y="494.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.18%)</title><rect x="830" y="500" width="2" height="15" fill="rgb(248,130,47)"/><text x="833.00" y="510.50"></text></g><g><title>0x7fc7bdddc3b1 (?) (1 samples, 0.18%)</title><rect x="830" y="516" width="2" height="15" fill="rgb(227,110,2)"/><text x="833.00" y="526.50"></text></g><g><title>0x7fc7bdddc332 (?) (1 samples, 0.18%)</title><rect x="830" y="532" width="2" height="15" fill="rgb(207,5,52)"/><text x="833.00" y="542.50"></text></g><g><title>0x7fc7bdea1a82 (?) (1 samples, 0.18%)</title><rect x="830" y="548" width="2" height="15" fill="rgb(217,41,49)"/><text x="833.00" y="558.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.18%)</title><rect x="837" y="228" width="2" height="15" fill="rgb(245,51,23)"/><text x="840.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="839" y="228" width="2" height="15" fill="rgb(238,169,16)"/><text x="842.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="839" y="244" width="2" height="15" fill="rgb(219,196,48)"/><text x="842.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.37%)</title><rect x="841" y="228" width="4" height="15" fill="rgb(245,119,25)"/><text x="844.00" y="238.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.18%)</title><rect x="843" y="244" width="2" height="15" fill="rgb(213,66,41)"/><text x="846.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (5 samples, 0.92%)</title><rect x="837" y="196" width="10" height="15" fill="rgb(238,148,1)"/><text x="840.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (5 samples, 0.92%)</title><rect x="837" y="212" width="10" height="15" fill="rgb(242,161,23)"/><text x="840.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.18%)</title><rect x="845" y="228" width="2" height="15" fill="rgb(230,198,33)"/><text x="848.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.18%)</title><rect x="845" y="244" width="2" height="15" fill="rgb(226,214,20)"/><text x="848.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="865" y="244" width="2" height="15" fill="rgb(218,152,18)"/><text x="868.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="867" y="244" width="2" height="15" fill="rgb(251,125,29)"/><text x="870.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="867" y="260" width="2" height="15" fill="rgb(239,31,31)"/><text x="870.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="867" y="276" width="2" height="15" fill="rgb(215,229,20)"/><text x="870.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="867" y="292" width="2" height="15" fill="rgb(232,11,40)"/><text x="870.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.18%)</title><rect x="867" y="308" width="2" height="15" fill="rgb(209,14,37)"/><text x="870.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.73%)</title><rect x="869" y="244" width="9" height="15" fill="rgb(243,182,0)"/><text x="872.00" y="254.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="878" y="260" width="2" height="15" fill="rgb(224,41,50)"/><text x="881.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="878" y="276" width="2" height="15" fill="rgb(250,160,17)"/><text x="881.00" y="286.50"></text></g><g><title>0x7fc7cfaa7d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="878" y="292" width="2" height="15" fill="rgb(250,81,54)"/><text x="881.00" y="302.50"></text></g><g><title>count_boolean_trues (item_selection.c) (2 samples, 0.37%)</title><rect x="878" y="244" width="4" height="15" fill="rgb(243,101,39)"/><text x="881.00" y="254.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c) (1 samples, 0.18%)</title><rect x="880" y="260" width="2" height="15" fill="rgb(220,177,10)"/><text x="883.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (25 samples, 4.59%)</title><rect x="852" y="228" width="54" height="15" fill="rgb(253,54,32)"/><text x="855.00" y="238.50">array..</text></g><g><title>npy_memchr (common.h) (11 samples, 2.02%)</title><rect x="882" y="244" width="24" height="15" fill="rgb(205,190,20)"/><text x="885.00" y="254.50">n..</text></g><g><title>array_assign_subscript (mapping.c) (26 samples, 4.77%)</title><rect x="852" y="212" width="56" height="15" fill="rgb(254,95,11)"/><text x="855.00" y="222.50">array..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="906" y="228" width="2" height="15" fill="rgb(227,124,32)"/><text x="909.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="906" y="244" width="2" height="15" fill="rgb(217,159,34)"/><text x="909.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="906" y="260" width="2" height="15" fill="rgb(236,3,47)"/><text x="909.00" y="270.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h) (1 samples, 0.18%)</title><rect x="910" y="340" width="2" height="15" fill="rgb(245,186,46)"/><text x="913.00" y="350.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h) (1 samples, 0.18%)</title><rect x="912" y="356" width="3" height="15" fill="rgb(245,161,28)"/><text x="915.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c) (4 samples, 0.73%)</title><rect x="908" y="212" width="9" height="15" fill="rgb(229,50,1)"/><text x="911.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.73%)</title><rect x="908" y="228" width="9" height="15" fill="rgb(243,95,35)"/><text x="911.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.73%)</title><rect x="908" y="244" width="9" height="15" fill="rgb(225,11,35)"/><text x="911.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.73%)</title><rect x="908" y="260" width="9" height="15" fill="rgb(216,69,24)"/><text x="911.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.73%)</title><rect x="908" y="276" width="9" height="15" fill="rgb(222,73,27)"/><text x="911.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src) (4 samples, 0.73%)</title><rect x="908" y="292" width="9" height="15" fill="rgb(211,197,41)"/><text x="911.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src) (4 samples, 0.73%)</title><rect x="908" y="308" width="9" height="15" fill="rgb(213,195,11)"/><text x="911.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src) (4 samples, 0.73%)</title><rect x="908" y="324" width="9" height="15" fill="rgb(243,52,43)"/><text x="911.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (2 samples, 0.37%)</title><rect x="912" y="340" width="5" height="15" fill="rgb(244,68,47)"/><text x="915.00" y="350.50"></text></g><g><title>_mm_storeu_si128 (emmintrin.h) (1 samples, 0.18%)</title><rect x="915" y="356" width="2" height="15" fill="rgb(215,189,1)"/><text x="918.00" y="366.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.10%)</title><rect x="921" y="228" width="13" height="15" fill="rgb(253,14,46)"/><text x="924.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c) (6 samples, 1.10%)</title><rect x="921" y="244" width="13" height="15" fill="rgb(254,177,33)"/><text x="924.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 1.10%)</title><rect x="921" y="260" width="13" height="15" fill="rgb(214,190,0)"/><text x="924.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 1.10%)</title><rect x="921" y="276" width="13" height="15" fill="rgb(225,114,36)"/><text x="924.00" y="286.50"></text></g><g><title>0x7fc7cfaa7d94 (libc-2.29.so) (6 samples, 1.10%)</title><rect x="921" y="292" width="13" height="15" fill="rgb(212,180,36)"/><text x="924.00" y="302.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (48 samples, 8.81%)</title><rect x="832" y="180" width="104" height="15" fill="rgb(232,81,42)"/><text x="835.00" y="190.50">_check_X (sk..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (41 samples, 7.52%)</title><rect x="847" y="196" width="89" height="15" fill="rgb(248,29,11)"/><text x="850.00" y="206.50">binarize (..</text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 1.65%)</title><rect x="917" y="212" width="19" height="15" fill="rgb(247,35,14)"/><text x="920.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="934" y="228" width="2" height="15" fill="rgb(241,116,45)"/><text x="937.00" y="238.50"></text></g><g><title>array_add (number.c) (1 samples, 0.18%)</title><rect x="941" y="196" width="2" height="15" fill="rgb(245,82,45)"/><text x="944.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="941" y="212" width="2" height="15" fill="rgb(207,95,44)"/><text x="944.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="941" y="228" width="2" height="15" fill="rgb(208,183,37)"/><text x="944.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="941" y="244" width="2" height="15" fill="rgb(242,185,11)"/><text x="944.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.37%)</title><rect x="943" y="196" width="4" height="15" fill="rgb(238,91,41)"/><text x="946.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="945" y="212" width="2" height="15" fill="rgb(240,227,4)"/><text x="948.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="945" y="228" width="2" height="15" fill="rgb(215,162,23)"/><text x="948.00" y="238.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.18%)</title><rect x="947" y="196" width="2" height="15" fill="rgb(219,18,50)"/><text x="950.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="947" y="212" width="2" height="15" fill="rgb(224,37,39)"/><text x="950.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="947" y="228" width="2" height="15" fill="rgb(224,84,32)"/><text x="950.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.18%)</title><rect x="947" y="244" width="2" height="15" fill="rgb(254,130,9)"/><text x="950.00" y="254.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.18%)</title><rect x="954" y="324" width="2" height="15" fill="rgb(254,175,16)"/><text x="957.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.37%)</title><rect x="954" y="260" width="4" height="15" fill="rgb(250,71,28)"/><text x="957.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.37%)</title><rect x="954" y="276" width="4" height="15" fill="rgb(216,35,10)"/><text x="957.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.37%)</title><rect x="954" y="292" width="4" height="15" fill="rgb(216,44,46)"/><text x="957.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.37%)</title><rect x="954" y="308" width="4" height="15" fill="rgb(252,69,21)"/><text x="957.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="956" y="324" width="2" height="15" fill="rgb(236,197,53)"/><text x="959.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="956" y="340" width="2" height="15" fill="rgb(238,155,44)"/><text x="959.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="960" y="308" width="2" height="15" fill="rgb(243,156,43)"/><text x="963.00" y="318.50"></text></g><g><title>0x7fc7cfa87902 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="960" y="324" width="2" height="15" fill="rgb(239,86,43)"/><text x="963.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="962" y="308" width="2" height="15" fill="rgb(245,69,29)"/><text x="965.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="962" y="324" width="2" height="15" fill="rgb(244,24,52)"/><text x="965.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.18%)</title><rect x="962" y="340" width="2" height="15" fill="rgb(242,195,47)"/><text x="965.00" y="350.50"></text></g><g><title>array_sum (methods.c) (8 samples, 1.47%)</title><rect x="949" y="196" width="17" height="15" fill="rgb(228,208,23)"/><text x="952.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.47%)</title><rect x="949" y="212" width="17" height="15" fill="rgb(252,50,2)"/><text x="952.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (6 samples, 1.10%)</title><rect x="954" y="228" width="12" height="15" fill="rgb(242,161,42)"/><text x="957.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 1.10%)</title><rect x="954" y="244" width="12" height="15" fill="rgb(231,17,26)"/><text x="957.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.73%)</title><rect x="958" y="260" width="8" height="15" fill="rgb(220,210,14)"/><text x="961.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.73%)</title><rect x="958" y="276" width="8" height="15" fill="rgb(222,50,37)"/><text x="961.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.73%)</title><rect x="958" y="292" width="8" height="15" fill="rgb(254,214,47)"/><text x="961.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.18%)</title><rect x="964" y="308" width="2" height="15" fill="rgb(215,28,35)"/><text x="967.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="964" y="324" width="2" height="15" fill="rgb(240,65,34)"/><text x="967.00" y="334.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="964" y="340" width="2" height="15" fill="rgb(219,186,33)"/><text x="967.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="964" y="356" width="2" height="15" fill="rgb(242,97,21)"/><text x="967.00" y="366.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="964" y="372" width="2" height="15" fill="rgb(254,191,42)"/><text x="967.00" y="382.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="966" y="212" width="13" height="15" fill="rgb(227,133,7)"/><text x="969.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (6 samples, 1.10%)</title><rect x="979" y="260" width="13" height="15" fill="rgb(211,193,16)"/><text x="982.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="979" y="276" width="13" height="15" fill="rgb(214,201,21)"/><text x="982.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.10%)</title><rect x="979" y="292" width="13" height="15" fill="rgb(230,23,5)"/><text x="982.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.92%)</title><rect x="982" y="308" width="10" height="15" fill="rgb(237,123,38)"/><text x="985.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (12 samples, 2.20%)</title><rect x="992" y="260" width="26" height="15" fill="rgb(207,75,19)"/><text x="995.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (12 samples, 2.20%)</title><rect x="992" y="276" width="26" height="15" fill="rgb(210,227,24)"/><text x="995.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (12 samples, 2.20%)</title><rect x="992" y="292" width="26" height="15" fill="rgb(229,182,30)"/><text x="995.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (12 samples, 2.20%)</title><rect x="992" y="308" width="26" height="15" fill="rgb(218,79,3)"/><text x="995.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (12 samples, 2.20%)</title><rect x="992" y="324" width="26" height="15" fill="rgb(217,167,29)"/><text x="995.00" y="334.50">_..</text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1018" y="292" width="3" height="15" fill="rgb(225,199,49)"/><text x="1021.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1018" y="308" width="3" height="15" fill="rgb(248,71,41)"/><text x="1021.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.37%)</title><rect x="1018" y="260" width="5" height="15" fill="rgb(210,34,17)"/><text x="1021.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.37%)</title><rect x="1018" y="276" width="5" height="15" fill="rgb(206,43,31)"/><text x="1021.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1021" y="292" width="2" height="15" fill="rgb(209,28,34)"/><text x="1024.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1021" y="308" width="2" height="15" fill="rgb(221,131,33)"/><text x="1024.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.18%)</title><rect x="1021" y="324" width="2" height="15" fill="rgb(206,77,6)"/><text x="1024.00" y="334.50"></text></g><g><title>0x7fc7cfa87f35 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1021" y="340" width="2" height="15" fill="rgb(224,197,21)"/><text x="1024.00" y="350.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.18%)</title><rect x="1023" y="260" width="2" height="15" fill="rgb(239,123,37)"/><text x="1026.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (28 samples, 5.14%)</title><rect x="966" y="196" width="61" height="15" fill="rgb(239,0,32)"/><text x="969.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 4.04%)</title><rect x="979" y="212" width="48" height="15" fill="rgb(244,195,37)"/><text x="982.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 4.04%)</title><rect x="979" y="228" width="48" height="15" fill="rgb(209,13,43)"/><text x="982.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 4.04%)</title><rect x="979" y="244" width="48" height="15" fill="rgb(236,53,50)"/><text x="982.00" y="254.50">PyUF..</text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.18%)</title><rect x="1025" y="260" width="2" height="15" fill="rgb(250,110,42)"/><text x="1028.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1027" y="244" width="2" height="15" fill="rgb(221,57,49)"/><text x="1030.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1027" y="260" width="2" height="15" fill="rgb(242,209,5)"/><text x="1030.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1027" y="276" width="2" height="15" fill="rgb(205,23,1)"/><text x="1030.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1027" y="292" width="2" height="15" fill="rgb(237,196,8)"/><text x="1030.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="1027" y="308" width="2" height="15" fill="rgb(213,73,23)"/><text x="1030.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1027" y="324" width="2" height="15" fill="rgb(251,20,52)"/><text x="1030.00" y="334.50"></text></g><g><title>0x7fc7cfa892a3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1027" y="340" width="2" height="15" fill="rgb(213,10,54)"/><text x="1030.00" y="350.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (44 samples, 8.07%)</title><rect x="936" y="180" width="95" height="15" fill="rgb(222,88,51)"/><text x="939.00" y="190.50">_joint_log_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.37%)</title><rect x="1027" y="196" width="4" height="15" fill="rgb(236,90,17)"/><text x="1030.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.37%)</title><rect x="1027" y="212" width="4" height="15" fill="rgb(238,125,49)"/><text x="1030.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.37%)</title><rect x="1027" y="228" width="4" height="15" fill="rgb(230,39,10)"/><text x="1030.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1029" y="244" width="2" height="15" fill="rgb(252,197,33)"/><text x="1032.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1029" y="260" width="2" height="15" fill="rgb(230,148,37)"/><text x="1032.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.18%)</title><rect x="1029" y="276" width="2" height="15" fill="rgb(248,146,3)"/><text x="1032.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1031" y="180" width="3" height="15" fill="rgb(209,56,35)"/><text x="1034.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1031" y="196" width="3" height="15" fill="rgb(233,130,53)"/><text x="1034.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1031" y="212" width="3" height="15" fill="rgb(206,182,50)"/><text x="1034.00" y="222.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.18%)</title><rect x="1034" y="260" width="2" height="15" fill="rgb(218,147,13)"/><text x="1037.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1034" y="276" width="2" height="15" fill="rgb(242,178,6)"/><text x="1037.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1034" y="292" width="2" height="15" fill="rgb(212,53,42)"/><text x="1037.00" y="302.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.18%)</title><rect x="1034" y="308" width="2" height="15" fill="rgb(219,30,38)"/><text x="1037.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1036" y="276" width="2" height="15" fill="rgb(234,208,49)"/><text x="1039.00" y="286.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.55%)</title><rect x="1034" y="180" width="6" height="15" fill="rgb(209,182,26)"/><text x="1037.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1034" y="196" width="6" height="15" fill="rgb(236,51,25)"/><text x="1037.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1034" y="212" width="6" height="15" fill="rgb(222,77,28)"/><text x="1037.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1034" y="228" width="6" height="15" fill="rgb(225,151,20)"/><text x="1037.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1034" y="244" width="6" height="15" fill="rgb(238,100,37)"/><text x="1037.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.37%)</title><rect x="1036" y="260" width="4" height="15" fill="rgb(235,9,28)"/><text x="1039.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1038" y="276" width="2" height="15" fill="rgb(216,116,38)"/><text x="1041.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1038" y="292" width="2" height="15" fill="rgb(205,69,38)"/><text x="1041.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1038" y="308" width="2" height="15" fill="rgb(210,216,32)"/><text x="1041.00" y="318.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="1040" y="180" width="2" height="15" fill="rgb(240,55,13)"/><text x="1043.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="1040" y="196" width="2" height="15" fill="rgb(211,151,13)"/><text x="1043.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (1 samples, 0.18%)</title><rect x="1040" y="212" width="2" height="15" fill="rgb(239,28,28)"/><text x="1043.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.73%)</title><rect x="1042" y="180" width="9" height="15" fill="rgb(223,217,11)"/><text x="1045.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.37%)</title><rect x="1047" y="196" width="4" height="15" fill="rgb(238,122,52)"/><text x="1050.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.18%)</title><rect x="1049" y="212" width="2" height="15" fill="rgb(224,28,21)"/><text x="1052.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1060" y="228" width="2" height="15" fill="rgb(234,155,48)"/><text x="1063.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (3 samples, 0.55%)</title><rect x="1057" y="196" width="7" height="15" fill="rgb(233,24,13)"/><text x="1060.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 0.55%)</title><rect x="1057" y="212" width="7" height="15" fill="rgb(248,168,9)"/><text x="1060.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1062" y="228" width="2" height="15" fill="rgb(236,120,48)"/><text x="1065.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (1 samples, 0.18%)</title><rect x="1062" y="244" width="2" height="15" fill="rgb(243,178,18)"/><text x="1065.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c) (1 samples, 0.18%)</title><rect x="1062" y="260" width="2" height="15" fill="rgb(212,11,24)"/><text x="1065.00" y="270.50"></text></g><g><title>0x7fc7cfaa814e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1062" y="276" width="2" height="15" fill="rgb(235,212,33)"/><text x="1065.00" y="286.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.37%)</title><rect x="1064" y="196" width="4" height="15" fill="rgb(211,220,0)"/><text x="1067.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.37%)</title><rect x="1064" y="212" width="4" height="15" fill="rgb(239,3,46)"/><text x="1067.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1066" y="228" width="2" height="15" fill="rgb(208,47,41)"/><text x="1069.00" y="238.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1068" y="196" width="2" height="15" fill="rgb(210,86,52)"/><text x="1071.00" y="206.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (2 samples, 0.37%)</title><rect x="1070" y="196" width="5" height="15" fill="rgb(240,35,2)"/><text x="1073.00" y="206.50"></text></g><g><title>0x7fc7cfa9d73b (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1079" y="292" width="2" height="15" fill="rgb(219,213,24)"/><text x="1082.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1081" y="324" width="2" height="15" fill="rgb(242,197,9)"/><text x="1084.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1081" y="340" width="2" height="15" fill="rgb(248,9,48)"/><text x="1084.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.37%)</title><rect x="1088" y="356" width="4" height="15" fill="rgb(246,151,29)"/><text x="1091.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.37%)</title><rect x="1088" y="372" width="4" height="15" fill="rgb(236,99,19)"/><text x="1091.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1088" y="388" width="4" height="15" fill="rgb(214,10,48)"/><text x="1091.00" y="398.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (13 samples, 2.39%)</title><rect x="1075" y="196" width="28" height="15" fill="rgb(243,47,40)"/><text x="1078.00" y="206.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 2.39%)</title><rect x="1075" y="212" width="28" height="15" fill="rgb(213,91,49)"/><text x="1078.00" y="222.50">a..</text></g><g><title>amax (numpy/core/fromnumeric.py) (13 samples, 2.39%)</title><rect x="1075" y="228" width="28" height="15" fill="rgb(206,87,30)"/><text x="1078.00" y="238.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (11 samples, 2.02%)</title><rect x="1079" y="244" width="24" height="15" fill="rgb(212,145,4)"/><text x="1082.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.02%)</title><rect x="1079" y="260" width="24" height="15" fill="rgb(235,197,12)"/><text x="1082.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.02%)</title><rect x="1079" y="276" width="24" height="15" fill="rgb(244,133,23)"/><text x="1082.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1081" y="292" width="22" height="15" fill="rgb(231,103,38)"/><text x="1084.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.83%)</title><rect x="1081" y="308" width="22" height="15" fill="rgb(238,34,26)"/><text x="1084.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (9 samples, 1.65%)</title><rect x="1083" y="324" width="20" height="15" fill="rgb(233,162,4)"/><text x="1086.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (8 samples, 1.47%)</title><rect x="1086" y="340" width="17" height="15" fill="rgb(236,160,43)"/><text x="1089.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (5 samples, 0.92%)</title><rect x="1092" y="356" width="11" height="15" fill="rgb(238,34,54)"/><text x="1095.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (5 samples, 0.92%)</title><rect x="1092" y="372" width="11" height="15" fill="rgb(218,196,4)"/><text x="1095.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (5 samples, 0.92%)</title><rect x="1092" y="388" width="11" height="15" fill="rgb(206,58,35)"/><text x="1095.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (5 samples, 0.92%)</title><rect x="1092" y="404" width="11" height="15" fill="rgb(225,161,54)"/><text x="1095.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (5 samples, 0.92%)</title><rect x="1092" y="420" width="11" height="15" fill="rgb(226,31,18)"/><text x="1095.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="1103" y="212" width="2" height="15" fill="rgb(252,177,20)"/><text x="1106.00" y="222.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="1103" y="228" width="2" height="15" fill="rgb(246,221,54)"/><text x="1106.00" y="238.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1103" y="244" width="2" height="15" fill="rgb(250,210,38)"/><text x="1106.00" y="254.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1103" y="260" width="2" height="15" fill="rgb(230,121,46)"/><text x="1106.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.37%)</title><rect x="1103" y="196" width="4" height="15" fill="rgb(242,185,16)"/><text x="1106.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1105" y="212" width="2" height="15" fill="rgb(250,136,31)"/><text x="1108.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1105" y="228" width="2" height="15" fill="rgb(252,130,31)"/><text x="1108.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1105" y="244" width="2" height="15" fill="rgb(246,223,25)"/><text x="1108.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.18%)</title><rect x="1107" y="244" width="2" height="15" fill="rgb(240,81,17)"/><text x="1110.00" y="254.50"></text></g><g><title>array_subtract (number.c) (4 samples, 0.73%)</title><rect x="1107" y="196" width="9" height="15" fill="rgb(211,63,8)"/><text x="1110.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.73%)</title><rect x="1107" y="212" width="9" height="15" fill="rgb(211,4,50)"/><text x="1110.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.73%)</title><rect x="1107" y="228" width="9" height="15" fill="rgb(219,84,36)"/><text x="1110.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1109" y="244" width="7" height="15" fill="rgb(226,57,53)"/><text x="1112.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.55%)</title><rect x="1109" y="260" width="7" height="15" fill="rgb(231,210,4)"/><text x="1112.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.55%)</title><rect x="1109" y="276" width="7" height="15" fill="rgb(249,144,35)"/><text x="1112.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.55%)</title><rect x="1109" y="292" width="7" height="15" fill="rgb(223,207,48)"/><text x="1112.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.55%)</title><rect x="1109" y="308" width="7" height="15" fill="rgb(228,167,45)"/><text x="1112.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.37%)</title><rect x="1112" y="324" width="4" height="15" fill="rgb(218,42,45)"/><text x="1115.00" y="334.50"></text></g><g><title>0x7fc7cfb6674a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1122" y="244" width="3" height="15" fill="rgb(242,165,48)"/><text x="1125.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.37%)</title><rect x="1125" y="340" width="4" height="15" fill="rgb(230,73,22)"/><text x="1128.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.37%)</title><rect x="1125" y="356" width="4" height="15" fill="rgb(232,36,2)"/><text x="1128.00" y="366.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (2 samples, 0.37%)</title><rect x="1125" y="372" width="4" height="15" fill="rgb(240,185,9)"/><text x="1128.00" y="382.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1127" y="388" width="2" height="15" fill="rgb(243,50,45)"/><text x="1130.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.55%)</title><rect x="1125" y="324" width="6" height="15" fill="rgb(211,97,6)"/><text x="1128.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1129" y="340" width="2" height="15" fill="rgb(232,42,35)"/><text x="1132.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1131" y="324" width="2" height="15" fill="rgb(236,186,27)"/><text x="1134.00" y="334.50"></text></g><g><title>0x7fc7cfa87b87 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1131" y="340" width="2" height="15" fill="rgb(239,68,50)"/><text x="1134.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="1133" y="324" width="2" height="15" fill="rgb(217,150,23)"/><text x="1136.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="1133" y="340" width="2" height="15" fill="rgb(208,128,26)"/><text x="1136.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1133" y="356" width="2" height="15" fill="rgb(225,72,23)"/><text x="1136.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1133" y="372" width="2" height="15" fill="rgb(246,189,26)"/><text x="1136.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1133" y="388" width="2" height="15" fill="rgb(224,181,27)"/><text x="1136.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1133" y="404" width="2" height="15" fill="rgb(215,133,31)"/><text x="1136.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="1133" y="420" width="2" height="15" fill="rgb(232,127,39)"/><text x="1136.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1133" y="436" width="2" height="15" fill="rgb(244,90,8)"/><text x="1136.00" y="446.50"></text></g><g><title>0x7fc7cfa891a3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1133" y="452" width="2" height="15" fill="rgb(236,201,54)"/><text x="1136.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.55%)</title><rect x="1135" y="340" width="7" height="15" fill="rgb(231,190,44)"/><text x="1138.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.18%)</title><rect x="1140" y="356" width="2" height="15" fill="rgb(226,154,27)"/><text x="1143.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (13 samples, 2.39%)</title><rect x="1116" y="196" width="28" height="15" fill="rgb(234,205,28)"/><text x="1119.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 2.39%)</title><rect x="1116" y="212" width="28" height="15" fill="rgb(231,96,33)"/><text x="1119.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py) (12 samples, 2.20%)</title><rect x="1118" y="228" width="26" height="15" fill="rgb(217,41,51)"/><text x="1121.00" y="238.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (9 samples, 1.65%)</title><rect x="1125" y="244" width="19" height="15" fill="rgb(219,193,18)"/><text x="1128.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 1.65%)</title><rect x="1125" y="260" width="19" height="15" fill="rgb(233,197,4)"/><text x="1128.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.65%)</title><rect x="1125" y="276" width="19" height="15" fill="rgb(243,133,52)"/><text x="1128.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.65%)</title><rect x="1125" y="292" width="19" height="15" fill="rgb(249,9,34)"/><text x="1128.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.65%)</title><rect x="1125" y="308" width="19" height="15" fill="rgb(216,41,31)"/><text x="1128.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.73%)</title><rect x="1135" y="324" width="9" height="15" fill="rgb(218,100,7)"/><text x="1138.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="1142" y="340" width="2" height="15" fill="rgb(252,17,3)"/><text x="1145.00" y="350.50"></text></g><g><title>0x7fc7cfc59eee (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1148" y="276" width="3" height="15" fill="rgb(243,160,31)"/><text x="1151.00" y="286.50"></text></g><g><title>0x7fc7cfc59be7 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1157" y="292" width="2" height="15" fill="rgb(242,77,35)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7fc7cfc59c3e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(248,85,30)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7fc7cfc59c52 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1161" y="292" width="3" height="15" fill="rgb(249,135,29)"/><text x="1164.00" y="302.50"></text></g><g><title>0x7fc7cfc59c7b (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(252,137,14)"/><text x="1167.00" y="302.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (155 samples, 28.44%)</title><rect x="832" y="164" width="336" height="15" fill="rgb(217,205,40)"/><text x="835.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (54 samples, 9.91%)</title><rect x="1051" y="180" width="117" height="15" fill="rgb(218,169,13)"/><text x="1054.00" y="190.50">logsumexp (sci..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.02%)</title><rect x="1144" y="196" width="24" height="15" fill="rgb(248,123,48)"/><text x="1147.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.02%)</title><rect x="1144" y="212" width="24" height="15" fill="rgb(212,41,32)"/><text x="1147.00" y="222.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1146" y="228" width="22" height="15" fill="rgb(210,118,39)"/><text x="1149.00" y="238.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1146" y="244" width="22" height="15" fill="rgb(214,44,52)"/><text x="1149.00" y="254.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src) (10 samples, 1.83%)</title><rect x="1146" y="260" width="22" height="15" fill="rgb(228,38,15)"/><text x="1149.00" y="270.50">P..</text></g><g><title>exp (libm-2.29.so) (8 samples, 1.47%)</title><rect x="1151" y="276" width="17" height="15" fill="rgb(251,226,51)"/><text x="1154.00" y="286.50"></text></g><g><title>0x7fc7cfc59c7f (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(230,203,10)"/><text x="1169.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1168" y="212" width="2" height="15" fill="rgb(220,18,52)"/><text x="1171.00" y="222.50"></text></g><g><title>0x7fc7ceca8b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1174" y="244" width="3" height="15" fill="rgb(232,86,35)"/><text x="1177.00" y="254.50"></text></g><g><title>0x7fc7cfbd31b0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(252,65,8)"/><text x="1180.00" y="270.50"></text></g><g><title>0x7fc7cfc59ba0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(230,60,3)"/><text x="1182.00" y="270.50"></text></g><g><title>0x7fc7cfc59c7b (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1181" y="260" width="4" height="15" fill="rgb(221,67,50)"/><text x="1184.00" y="270.50"></text></g><g><title>all (545 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,50,35)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (545 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(242,121,20)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (165 samples, 30.28%)</title><rect x="832" y="68" width="358" height="15" fill="rgb(220,120,8)"/><text x="835.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1000..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (165 samples, 30.28%)</title><rect x="832" y="84" width="358" height="15" fill="rgb(218,10,42)"/><text x="835.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_10..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py) (165 samples, 30.28%)</title><rect x="832" y="100" width="358" height="15" fill="rgb(247,213,54)"/><text x="835.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_50_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 30.28%)</title><rect x="832" y="116" width="358" height="15" fill="rgb(227,189,25)"/><text x="835.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 30.28%)</title><rect x="832" y="132" width="358" height="15" fill="rgb(209,95,34)"/><text x="835.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (165 samples, 30.28%)</title><rect x="832" y="148" width="358" height="15" fill="rgb(225,84,34)"/><text x="835.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1168" y="164" width="22" height="15" fill="rgb(221,155,1)"/><text x="1171.00" y="174.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1168" y="180" width="22" height="15" fill="rgb(205,46,14)"/><text x="1171.00" y="190.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.83%)</title><rect x="1168" y="196" width="22" height="15" fill="rgb(231,8,4)"/><text x="1171.00" y="206.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.65%)</title><rect x="1170" y="212" width="20" height="15" fill="rgb(230,19,16)"/><text x="1173.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (9 samples, 1.65%)</title><rect x="1170" y="228" width="20" height="15" fill="rgb(243,28,30)"/><text x="1173.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (6 samples, 1.10%)</title><rect x="1177" y="244" width="13" height="15" fill="rgb(220,105,19)"/><text x="1180.00" y="254.50"></text></g><g><title>0x7fc7cfc59c7f (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(212,154,19)"/><text x="1188.00" y="270.50"></text></g></g></svg>