<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1686" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1669.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1669.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:28) (1 samples, 0.44%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(254,179,27)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.44%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(251,27,42)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.44%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(244,119,15)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.44%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(219,183,52)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(205,179,18)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(229,27,29)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(253,180,9)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(226,195,48)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(206,21,36)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:11) (1 samples, 0.44%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(237,224,35)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(229,72,16)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(232,131,35)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(234,146,29)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(224,84,15)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(247,120,36)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py:161) (1 samples, 0.44%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(227,156,30)"/><text x="13.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py:136) (1 samples, 0.44%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(207,49,41)"/><text x="13.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.44%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(234,27,22)"/><text x="13.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.44%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(235,55,13)"/><text x="13.00" y="382.50"></text></g><g><title>0x7f07e83aea28 (?) (1 samples, 0.44%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(236,172,2)"/><text x="13.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(253,184,32)"/><text x="13.00" y="414.50"></text></g><g><title>0x7f07f3b55995 (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(235,215,27)"/><text x="13.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(230,112,29)"/><text x="13.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(222,201,1)"/><text x="13.00" y="462.50"></text></g><g><title>0x7f07f3b55258 (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(205,141,22)"/><text x="13.00" y="478.50"></text></g><g><title>0x7f07f3ba2d7a (ld-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(217,87,40)"/><text x="13.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(226,228,54)"/><text x="13.00" y="510.50"></text></g><g><title>0x7f07f3ba3473 (ld-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(211,178,2)"/><text x="13.00" y="526.50"></text></g><g><title>0x7f07f3b9f6b9 (ld-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(252,110,11)"/><text x="13.00" y="542.50"></text></g><g><title>0x7f07f3b9f5ba (ld-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(221,32,50)"/><text x="13.00" y="558.50"></text></g><g><title>0x7f07b4e3d438 (?) (1 samples, 0.44%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(220,72,7)"/><text x="13.00" y="574.50"></text></g><g><title>0x7f07b4ebd2c0 (?) (1 samples, 0.44%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(238,195,45)"/><text x="13.00" y="590.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.44%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(248,176,41)"/><text x="18.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.44%)</title><rect x="15" y="196" width="5" height="15" fill="rgb(239,83,26)"/><text x="18.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.44%)</title><rect x="15" y="212" width="5" height="15" fill="rgb(233,193,52)"/><text x="18.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:18) (2 samples, 0.88%)</title><rect x="15" y="100" width="10" height="15" fill="rgb(233,148,16)"/><text x="18.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.88%)</title><rect x="15" y="116" width="10" height="15" fill="rgb(206,43,11)"/><text x="18.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.88%)</title><rect x="15" y="132" width="10" height="15" fill="rgb(240,37,12)"/><text x="18.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.88%)</title><rect x="15" y="148" width="10" height="15" fill="rgb(240,148,12)"/><text x="18.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.88%)</title><rect x="15" y="164" width="10" height="15" fill="rgb(208,1,9)"/><text x="18.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.44%)</title><rect x="20" y="180" width="5" height="15" fill="rgb(242,146,27)"/><text x="23.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.44%)</title><rect x="20" y="196" width="5" height="15" fill="rgb(251,24,39)"/><text x="23.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.44%)</title><rect x="20" y="212" width="5" height="15" fill="rgb(250,36,40)"/><text x="23.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.44%)</title><rect x="20" y="228" width="5" height="15" fill="rgb(238,218,19)"/><text x="23.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.44%)</title><rect x="20" y="244" width="5" height="15" fill="rgb(232,146,26)"/><text x="23.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2394) (1 samples, 0.44%)</title><rect x="20" y="260" width="5" height="15" fill="rgb(234,216,5)"/><text x="23.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.44%)</title><rect x="25" y="116" width="5" height="15" fill="rgb(210,88,23)"/><text x="28.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.44%)</title><rect x="25" y="132" width="5" height="15" fill="rgb(208,24,15)"/><text x="28.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.44%)</title><rect x="25" y="148" width="5" height="15" fill="rgb(253,160,27)"/><text x="28.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.44%)</title><rect x="35" y="164" width="6" height="15" fill="rgb(235,157,42)"/><text x="38.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.44%)</title><rect x="56" y="180" width="5" height="15" fill="rgb(251,54,25)"/><text x="59.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (11 samples, 4.85%)</title><rect x="35" y="148" width="58" height="15" fill="rgb(227,210,6)"/><text x="38.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 4.41%)</title><rect x="41" y="164" width="52" height="15" fill="rgb(252,213,6)"/><text x="44.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.64%)</title><rect x="61" y="180" width="32" height="15" fill="rgb(214,207,14)"/><text x="64.00" y="190.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.88%)</title><rect x="82" y="196" width="11" height="15" fill="rgb(231,82,7)"/><text x="85.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (1 samples, 0.44%)</title><rect x="93" y="148" width="5" height="15" fill="rgb(247,170,19)"/><text x="96.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.44%)</title><rect x="113" y="196" width="6" height="15" fill="rgb(213,44,36)"/><text x="116.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.44%)</title><rect x="134" y="228" width="5" height="15" fill="rgb(254,54,26)"/><text x="137.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 2.64%)</title><rect x="113" y="180" width="32" height="15" fill="rgb(217,16,54)"/><text x="116.00" y="190.50">de..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 2.20%)</title><rect x="119" y="196" width="26" height="15" fill="rgb(224,57,44)"/><text x="122.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.76%)</title><rect x="124" y="212" width="21" height="15" fill="rgb(251,69,6)"/><text x="127.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.44%)</title><rect x="139" y="228" width="6" height="15" fill="rgb(232,67,50)"/><text x="142.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.88%)</title><rect x="150" y="196" width="10" height="15" fill="rgb(207,24,11)"/><text x="153.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.44%)</title><rect x="160" y="212" width="5" height="15" fill="rgb(253,130,41)"/><text x="163.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.44%)</title><rect x="176" y="228" width="5" height="15" fill="rgb(223,113,11)"/><text x="179.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 2.20%)</title><rect x="160" y="196" width="26" height="15" fill="rgb(245,96,6)"/><text x="163.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.76%)</title><rect x="165" y="212" width="21" height="15" fill="rgb(249,184,19)"/><text x="168.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.44%)</title><rect x="181" y="228" width="5" height="15" fill="rgb(230,191,35)"/><text x="184.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.44%)</title><rect x="186" y="196" width="5" height="15" fill="rgb(236,162,45)"/><text x="189.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.44%)</title><rect x="186" y="212" width="5" height="15" fill="rgb(206,111,35)"/><text x="189.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.44%)</title><rect x="186" y="228" width="5" height="15" fill="rgb(210,56,40)"/><text x="189.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.88%)</title><rect x="191" y="196" width="11" height="15" fill="rgb(247,13,2)"/><text x="194.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (2 samples, 0.88%)</title><rect x="191" y="212" width="11" height="15" fill="rgb(226,26,28)"/><text x="194.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.88%)</title><rect x="202" y="212" width="10" height="15" fill="rgb(207,25,15)"/><text x="205.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.44%)</title><rect x="207" y="228" width="5" height="15" fill="rgb(207,14,2)"/><text x="210.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 1.32%)</title><rect x="202" y="196" width="15" height="15" fill="rgb(241,60,38)"/><text x="205.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.44%)</title><rect x="212" y="212" width="5" height="15" fill="rgb(239,97,8)"/><text x="215.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.44%)</title><rect x="212" y="228" width="5" height="15" fill="rgb(225,18,35)"/><text x="215.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.44%)</title><rect x="217" y="196" width="6" height="15" fill="rgb(252,174,39)"/><text x="220.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.44%)</title><rect x="233" y="228" width="5" height="15" fill="rgb(235,6,15)"/><text x="236.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 2.20%)</title><rect x="223" y="212" width="26" height="15" fill="rgb(237,44,43)"/><text x="226.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.88%)</title><rect x="238" y="228" width="11" height="15" fill="rgb(211,28,37)"/><text x="241.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 2.64%)</title><rect x="223" y="196" width="31" height="15" fill="rgb(230,164,18)"/><text x="226.00" y="206.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.44%)</title><rect x="249" y="212" width="5" height="15" fill="rgb(214,58,1)"/><text x="252.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.88%)</title><rect x="254" y="212" width="10" height="15" fill="rgb(209,10,4)"/><text x="257.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.44%)</title><rect x="264" y="212" width="5" height="15" fill="rgb(221,170,26)"/><text x="267.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (27 samples, 11.89%)</title><rect x="145" y="180" width="140" height="15" fill="rgb(238,50,44)"/><text x="148.00" y="190.50">decision_function..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 2.64%)</title><rect x="254" y="196" width="31" height="15" fill="rgb(224,143,53)"/><text x="257.00" y="206.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.32%)</title><rect x="269" y="212" width="16" height="15" fill="rgb(244,99,31)"/><text x="272.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.44%)</title><rect x="280" y="228" width="5" height="15" fill="rgb(207,107,26)"/><text x="283.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.44%)</title><rect x="285" y="228" width="5" height="15" fill="rgb(205,145,45)"/><text x="288.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.44%)</title><rect x="285" y="244" width="5" height="15" fill="rgb(232,3,35)"/><text x="288.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.44%)</title><rect x="285" y="260" width="5" height="15" fill="rgb(221,42,33)"/><text x="288.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.44%)</title><rect x="285" y="276" width="5" height="15" fill="rgb(213,95,10)"/><text x="288.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:688) (1 samples, 0.44%)</title><rect x="285" y="292" width="5" height="15" fill="rgb(232,32,36)"/><text x="288.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.44%)</title><rect x="290" y="244" width="5" height="15" fill="rgb(235,12,26)"/><text x="293.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.44%)</title><rect x="290" y="260" width="5" height="15" fill="rgb(250,59,14)"/><text x="293.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.88%)</title><rect x="290" y="228" width="11" height="15" fill="rgb(235,123,42)"/><text x="293.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.44%)</title><rect x="295" y="244" width="6" height="15" fill="rgb(253,19,12)"/><text x="298.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.44%)</title><rect x="301" y="260" width="5" height="15" fill="rgb(214,30,12)"/><text x="304.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.44%)</title><rect x="301" y="276" width="5" height="15" fill="rgb(210,204,41)"/><text x="304.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.44%)</title><rect x="301" y="292" width="5" height="15" fill="rgb(216,227,16)"/><text x="304.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.44%)</title><rect x="301" y="308" width="5" height="15" fill="rgb(254,104,23)"/><text x="304.00" y="318.50"></text></g><g><title>npy_uint_alignment (array_assign.c:151) (1 samples, 0.44%)</title><rect x="301" y="324" width="5" height="15" fill="rgb(240,110,7)"/><text x="304.00" y="334.50"></text></g><g><title>array_add (number.c:330) (5 samples, 2.20%)</title><rect x="285" y="196" width="26" height="15" fill="rgb(234,55,31)"/><text x="288.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.20%)</title><rect x="285" y="212" width="26" height="15" fill="rgb(249,86,49)"/><text x="288.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.88%)</title><rect x="301" y="228" width="10" height="15" fill="rgb(229,22,35)"/><text x="304.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.88%)</title><rect x="301" y="244" width="10" height="15" fill="rgb(227,36,2)"/><text x="304.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.44%)</title><rect x="306" y="260" width="5" height="15" fill="rgb(233,168,36)"/><text x="309.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.44%)</title><rect x="306" y="276" width="5" height="15" fill="rgb(227,68,3)"/><text x="309.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1882) (1 samples, 0.44%)</title><rect x="306" y="292" width="5" height="15" fill="rgb(230,212,42)"/><text x="309.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.44%)</title><rect x="311" y="196" width="5" height="15" fill="rgb(213,181,9)"/><text x="314.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2621) (1 samples, 0.44%)</title><rect x="321" y="244" width="6" height="15" fill="rgb(228,149,11)"/><text x="324.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.44%)</title><rect x="327" y="244" width="5" height="15" fill="rgb(240,8,4)"/><text x="330.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.44%)</title><rect x="327" y="260" width="5" height="15" fill="rgb(210,52,42)"/><text x="330.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.44%)</title><rect x="332" y="276" width="5" height="15" fill="rgb(218,192,44)"/><text x="335.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.44%)</title><rect x="332" y="292" width="5" height="15" fill="rgb(242,135,22)"/><text x="335.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.44%)</title><rect x="332" y="308" width="5" height="15" fill="rgb(245,175,34)"/><text x="335.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.44%)</title><rect x="332" y="324" width="5" height="15" fill="rgb(245,147,36)"/><text x="335.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.44%)</title><rect x="332" y="340" width="5" height="15" fill="rgb(251,173,23)"/><text x="335.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.44%)</title><rect x="332" y="356" width="5" height="15" fill="rgb(221,144,26)"/><text x="335.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="332" y="372" width="5" height="15" fill="rgb(235,202,27)"/><text x="335.00" y="382.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.88%)</title><rect x="332" y="244" width="10" height="15" fill="rgb(221,184,12)"/><text x="335.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.88%)</title><rect x="332" y="260" width="10" height="15" fill="rgb(233,83,47)"/><text x="335.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.44%)</title><rect x="337" y="276" width="5" height="15" fill="rgb(237,168,10)"/><text x="340.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:306) (1 samples, 0.44%)</title><rect x="337" y="292" width="5" height="15" fill="rgb(207,225,24)"/><text x="340.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.44%)</title><rect x="337" y="308" width="5" height="15" fill="rgb(243,195,1)"/><text x="340.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.44%)</title><rect x="342" y="244" width="5" height="15" fill="rgb(238,171,27)"/><text x="345.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:78) (1 samples, 0.44%)</title><rect x="342" y="260" width="5" height="15" fill="rgb(205,145,21)"/><text x="345.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.44%)</title><rect x="347" y="260" width="6" height="15" fill="rgb(213,183,20)"/><text x="350.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.44%)</title><rect x="347" y="276" width="6" height="15" fill="rgb(220,226,20)"/><text x="350.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (8 samples, 3.52%)</title><rect x="316" y="196" width="42" height="15" fill="rgb(209,23,8)"/><text x="319.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 3.08%)</title><rect x="321" y="212" width="37" height="15" fill="rgb(232,3,5)"/><text x="324.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (7 samples, 3.08%)</title><rect x="321" y="228" width="37" height="15" fill="rgb(253,208,17)"/><text x="324.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.88%)</title><rect x="347" y="244" width="11" height="15" fill="rgb(228,56,15)"/><text x="350.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.44%)</title><rect x="353" y="260" width="5" height="15" fill="rgb(210,39,5)"/><text x="356.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:94) (1 samples, 0.44%)</title><rect x="353" y="276" width="5" height="15" fill="rgb(208,51,39)"/><text x="356.00" y="286.50"></text></g><g><title>is_blasable2d (matmul.c.src:52) (1 samples, 0.44%)</title><rect x="353" y="292" width="5" height="15" fill="rgb(231,20,16)"/><text x="356.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (16 samples, 7.05%)</title><rect x="285" y="180" width="83" height="15" fill="rgb(252,138,18)"/><text x="288.00" y="190.50">decision_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.88%)</title><rect x="358" y="196" width="10" height="15" fill="rgb(224,49,54)"/><text x="361.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.44%)</title><rect x="363" y="212" width="5" height="15" fill="rgb(248,136,35)"/><text x="366.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (52 samples, 22.91%)</title><rect x="108" y="164" width="271" height="15" fill="rgb(206,24,3)"/><text x="111.00" y="174.50">_predict_proba_lr (sklearn/linear_mo..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.88%)</title><rect x="368" y="180" width="11" height="15" fill="rgb(221,58,0)"/><text x="371.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.44%)</title><rect x="373" y="196" width="6" height="15" fill="rgb(227,103,22)"/><text x="376.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.44%)</title><rect x="389" y="196" width="5" height="15" fill="rgb(234,98,45)"/><text x="392.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.44%)</title><rect x="389" y="212" width="5" height="15" fill="rgb(252,118,16)"/><text x="392.00" y="222.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.44%)</title><rect x="389" y="228" width="5" height="15" fill="rgb(241,179,39)"/><text x="392.00" y="238.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.44%)</title><rect x="394" y="260" width="5" height="15" fill="rgb(217,195,20)"/><text x="397.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="394" y="276" width="5" height="15" fill="rgb(208,76,41)"/><text x="397.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 2.20%)</title><rect x="379" y="164" width="26" height="15" fill="rgb(242,21,19)"/><text x="382.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.32%)</title><rect x="389" y="180" width="16" height="15" fill="rgb(233,117,39)"/><text x="392.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.88%)</title><rect x="394" y="196" width="11" height="15" fill="rgb(220,188,44)"/><text x="397.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.88%)</title><rect x="394" y="212" width="11" height="15" fill="rgb(227,211,12)"/><text x="397.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.88%)</title><rect x="394" y="228" width="11" height="15" fill="rgb(228,201,14)"/><text x="397.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.88%)</title><rect x="394" y="244" width="11" height="15" fill="rgb(245,82,40)"/><text x="397.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.44%)</title><rect x="399" y="260" width="6" height="15" fill="rgb(240,187,30)"/><text x="402.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.44%)</title><rect x="399" y="276" width="6" height="15" fill="rgb(221,223,25)"/><text x="402.00" y="286.50"></text></g><g><title>to_128 (npy_extint128.h:67) (1 samples, 0.44%)</title><rect x="399" y="292" width="6" height="15" fill="rgb(207,55,17)"/><text x="402.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.44%)</title><rect x="415" y="180" width="5" height="15" fill="rgb(205,112,4)"/><text x="418.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.44%)</title><rect x="415" y="196" width="5" height="15" fill="rgb(214,62,51)"/><text x="418.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.44%)</title><rect x="420" y="196" width="5" height="15" fill="rgb(217,175,47)"/><text x="423.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.44%)</title><rect x="420" y="212" width="5" height="15" fill="rgb(216,101,45)"/><text x="423.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.88%)</title><rect x="420" y="180" width="11" height="15" fill="rgb(227,197,12)"/><text x="423.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.44%)</title><rect x="425" y="196" width="6" height="15" fill="rgb(240,93,48)"/><text x="428.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.44%)</title><rect x="425" y="212" width="6" height="15" fill="rgb(208,34,49)"/><text x="428.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.44%)</title><rect x="425" y="228" width="6" height="15" fill="rgb(228,114,7)"/><text x="428.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.44%)</title><rect x="425" y="244" width="6" height="15" fill="rgb(231,153,48)"/><text x="428.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.44%)</title><rect x="431" y="180" width="5" height="15" fill="rgb(213,103,53)"/><text x="434.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.44%)</title><rect x="431" y="196" width="5" height="15" fill="rgb(211,111,3)"/><text x="434.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.44%)</title><rect x="431" y="212" width="5" height="15" fill="rgb(240,179,39)"/><text x="434.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.44%)</title><rect x="431" y="228" width="5" height="15" fill="rgb(253,177,38)"/><text x="434.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.44%)</title><rect x="431" y="244" width="5" height="15" fill="rgb(237,213,26)"/><text x="434.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.44%)</title><rect x="451" y="260" width="6" height="15" fill="rgb(220,208,37)"/><text x="454.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.76%)</title><rect x="451" y="228" width="21" height="15" fill="rgb(248,46,51)"/><text x="454.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.76%)</title><rect x="451" y="244" width="21" height="15" fill="rgb(230,132,15)"/><text x="454.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.32%)</title><rect x="457" y="260" width="15" height="15" fill="rgb(219,108,27)"/><text x="460.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.32%)</title><rect x="457" y="276" width="15" height="15" fill="rgb(242,83,52)"/><text x="460.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.32%)</title><rect x="457" y="292" width="15" height="15" fill="rgb(234,117,51)"/><text x="460.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.32%)</title><rect x="457" y="308" width="15" height="15" fill="rgb(213,199,53)"/><text x="460.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.44%)</title><rect x="472" y="260" width="5" height="15" fill="rgb(236,27,51)"/><text x="475.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.44%)</title><rect x="472" y="276" width="5" height="15" fill="rgb(230,71,16)"/><text x="475.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.44%)</title><rect x="472" y="292" width="5" height="15" fill="rgb(222,153,20)"/><text x="475.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.44%)</title><rect x="472" y="308" width="5" height="15" fill="rgb(231,141,45)"/><text x="475.00" y="318.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.44%)</title><rect x="472" y="324" width="5" height="15" fill="rgb(230,151,23)"/><text x="475.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.44%)</title><rect x="477" y="308" width="6" height="15" fill="rgb(241,19,24)"/><text x="480.00" y="318.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.44%)</title><rect x="477" y="324" width="6" height="15" fill="rgb(228,108,6)"/><text x="480.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.88%)</title><rect x="477" y="276" width="11" height="15" fill="rgb(231,108,5)"/><text x="480.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.88%)</title><rect x="477" y="292" width="11" height="15" fill="rgb(232,51,39)"/><text x="480.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.44%)</title><rect x="483" y="308" width="5" height="15" fill="rgb(226,60,10)"/><text x="486.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.44%)</title><rect x="483" y="324" width="5" height="15" fill="rgb(248,84,26)"/><text x="486.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.44%)</title><rect x="483" y="340" width="5" height="15" fill="rgb(206,205,17)"/><text x="486.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.44%)</title><rect x="483" y="356" width="5" height="15" fill="rgb(209,76,10)"/><text x="486.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:136) (1 samples, 0.44%)</title><rect x="483" y="372" width="5" height="15" fill="rgb(205,209,17)"/><text x="486.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:50) (1 samples, 0.44%)</title><rect x="488" y="324" width="5" height="15" fill="rgb(225,189,53)"/><text x="491.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.44%)</title><rect x="488" y="340" width="5" height="15" fill="rgb(226,153,43)"/><text x="491.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.88%)</title><rect x="488" y="276" width="10" height="15" fill="rgb(237,73,39)"/><text x="491.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.88%)</title><rect x="488" y="292" width="10" height="15" fill="rgb(228,167,42)"/><text x="491.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.88%)</title><rect x="488" y="308" width="10" height="15" fill="rgb(244,119,40)"/><text x="491.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.44%)</title><rect x="493" y="324" width="5" height="15" fill="rgb(231,164,51)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.44%)</title><rect x="493" y="340" width="5" height="15" fill="rgb(212,20,30)"/><text x="496.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.44%)</title><rect x="498" y="276" width="5" height="15" fill="rgb(241,118,10)"/><text x="501.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.44%)</title><rect x="498" y="292" width="5" height="15" fill="rgb(240,48,14)"/><text x="501.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.44%)</title><rect x="498" y="308" width="5" height="15" fill="rgb(206,121,49)"/><text x="501.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.44%)</title><rect x="498" y="324" width="5" height="15" fill="rgb(248,46,4)"/><text x="501.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 6.17%)</title><rect x="436" y="180" width="73" height="15" fill="rgb(220,134,54)"/><text x="439.00" y="190.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 6.17%)</title><rect x="436" y="196" width="73" height="15" fill="rgb(235,158,36)"/><text x="439.00" y="206.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 5.29%)</title><rect x="446" y="212" width="63" height="15" fill="rgb(210,60,41)"/><text x="449.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 3.08%)</title><rect x="472" y="228" width="37" height="15" fill="rgb(243,114,49)"/><text x="475.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 3.08%)</title><rect x="472" y="244" width="37" height="15" fill="rgb(205,113,31)"/><text x="475.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 2.64%)</title><rect x="477" y="260" width="32" height="15" fill="rgb(229,154,9)"/><text x="480.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.44%)</title><rect x="503" y="276" width="6" height="15" fill="rgb(226,5,24)"/><text x="506.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.44%)</title><rect x="503" y="292" width="6" height="15" fill="rgb(210,19,9)"/><text x="506.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.44%)</title><rect x="503" y="308" width="6" height="15" fill="rgb(207,107,50)"/><text x="506.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:762) (1 samples, 0.44%)</title><rect x="509" y="244" width="5" height="15" fill="rgb(220,65,6)"/><text x="512.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (93 samples, 40.97%)</title><rect x="35" y="132" width="484" height="15" fill="rgb(232,227,22)"/><text x="38.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (81 samples, 35.68%)</title><rect x="98" y="148" width="421" height="15" fill="rgb(230,186,36)"/><text x="101.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (22 samples, 9.69%)</title><rect x="405" y="164" width="114" height="15" fill="rgb(234,11,44)"/><text x="408.00" y="174.50">_predict_proba..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.88%)</title><rect x="509" y="180" width="10" height="15" fill="rgb(244,141,16)"/><text x="512.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.88%)</title><rect x="509" y="196" width="10" height="15" fill="rgb(239,76,11)"/><text x="512.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.88%)</title><rect x="509" y="212" width="10" height="15" fill="rgb(250,189,23)"/><text x="512.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.88%)</title><rect x="509" y="228" width="10" height="15" fill="rgb(229,91,50)"/><text x="512.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:778) (1 samples, 0.44%)</title><rect x="514" y="244" width="5" height="15" fill="rgb(239,226,1)"/><text x="517.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:38) (100 samples, 44.05%)</title><rect x="10" y="52" width="519" height="15" fill="rgb(234,45,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:37) (100 samples, 44.05%)</title><rect x="10" y="68" width="519" height="15" fill="rgb(249,169,5)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:29) (99 samples, 43.61%)</title><rect x="15" y="84" width="514" height="15" fill="rgb(218,37,10)"/><text x="18.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:23) (97 samples, 42.73%)</title><rect x="25" y="100" width="504" height="15" fill="rgb(231,26,52)"/><text x="28.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (96 samples, 42.29%)</title><rect x="30" y="116" width="499" height="15" fill="rgb(214,136,39)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.88%)</title><rect x="519" y="132" width="10" height="15" fill="rgb(220,45,27)"/><text x="522.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.88%)</title><rect x="529" y="852" width="11" height="15" fill="rgb(215,30,49)"/><text x="532.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.88%)</title><rect x="529" y="868" width="11" height="15" fill="rgb(238,225,3)"/><text x="532.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.88%)</title><rect x="529" y="884" width="11" height="15" fill="rgb(216,42,30)"/><text x="532.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.88%)</title><rect x="529" y="900" width="11" height="15" fill="rgb(226,68,5)"/><text x="532.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.88%)</title><rect x="529" y="916" width="11" height="15" fill="rgb(227,80,50)"/><text x="532.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.88%)</title><rect x="529" y="932" width="11" height="15" fill="rgb(211,62,53)"/><text x="532.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.88%)</title><rect x="529" y="948" width="11" height="15" fill="rgb(219,41,21)"/><text x="532.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.44%)</title><rect x="535" y="964" width="5" height="15" fill="rgb(226,143,54)"/><text x="538.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.44%)</title><rect x="535" y="980" width="5" height="15" fill="rgb(234,173,40)"/><text x="538.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:205) (1 samples, 0.44%)</title><rect x="535" y="996" width="5" height="15" fill="rgb(207,9,51)"/><text x="538.00" y="1006.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.44%)</title><rect x="540" y="948" width="5" height="15" fill="rgb(252,18,31)"/><text x="543.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.44%)</title><rect x="540" y="964" width="5" height="15" fill="rgb(222,92,29)"/><text x="543.00" y="974.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.44%)</title><rect x="540" y="980" width="5" height="15" fill="rgb(209,110,47)"/><text x="543.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.88%)</title><rect x="540" y="884" width="10" height="15" fill="rgb(238,35,49)"/><text x="543.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.88%)</title><rect x="540" y="900" width="10" height="15" fill="rgb(228,134,34)"/><text x="543.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.88%)</title><rect x="540" y="916" width="10" height="15" fill="rgb(221,169,40)"/><text x="543.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.88%)</title><rect x="540" y="932" width="10" height="15" fill="rgb(207,143,37)"/><text x="543.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.44%)</title><rect x="545" y="948" width="5" height="15" fill="rgb(213,207,25)"/><text x="548.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.44%)</title><rect x="545" y="964" width="5" height="15" fill="rgb(253,2,23)"/><text x="548.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.44%)</title><rect x="545" y="980" width="5" height="15" fill="rgb(231,35,1)"/><text x="548.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.44%)</title><rect x="545" y="996" width="5" height="15" fill="rgb(249,194,52)"/><text x="548.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.44%)</title><rect x="545" y="1012" width="5" height="15" fill="rgb(234,108,26)"/><text x="548.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="545" y="1028" width="5" height="15" fill="rgb(205,222,46)"/><text x="548.00" y="1038.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.44%)</title><rect x="545" y="1044" width="5" height="15" fill="rgb(254,146,51)"/><text x="548.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.44%)</title><rect x="550" y="900" width="5" height="15" fill="rgb(211,53,48)"/><text x="553.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.44%)</title><rect x="550" y="916" width="5" height="15" fill="rgb(232,88,28)"/><text x="553.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="550" y="932" width="5" height="15" fill="rgb(248,75,10)"/><text x="553.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.44%)</title><rect x="550" y="948" width="5" height="15" fill="rgb(210,153,22)"/><text x="553.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (6 samples, 2.64%)</title><rect x="529" y="148" width="32" height="15" fill="rgb(211,105,47)"/><text x="532.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="164" width="32" height="15" fill="rgb(232,17,29)"/><text x="532.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.64%)</title><rect x="529" y="180" width="32" height="15" fill="rgb(226,215,21)"/><text x="532.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="196" width="32" height="15" fill="rgb(238,142,13)"/><text x="532.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="212" width="32" height="15" fill="rgb(233,36,33)"/><text x="532.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="228" width="32" height="15" fill="rgb(216,50,7)"/><text x="532.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="244" width="32" height="15" fill="rgb(211,223,14)"/><text x="532.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="260" width="32" height="15" fill="rgb(221,50,40)"/><text x="532.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="276" width="32" height="15" fill="rgb(254,8,5)"/><text x="532.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.64%)</title><rect x="529" y="292" width="32" height="15" fill="rgb(227,180,44)"/><text x="532.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="308" width="32" height="15" fill="rgb(229,0,34)"/><text x="532.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="324" width="32" height="15" fill="rgb(242,183,53)"/><text x="532.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="340" width="32" height="15" fill="rgb(251,52,13)"/><text x="532.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="356" width="32" height="15" fill="rgb(222,170,45)"/><text x="532.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="372" width="32" height="15" fill="rgb(230,141,2)"/><text x="532.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.64%)</title><rect x="529" y="388" width="32" height="15" fill="rgb(208,101,2)"/><text x="532.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="404" width="32" height="15" fill="rgb(242,214,25)"/><text x="532.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="420" width="32" height="15" fill="rgb(214,191,32)"/><text x="532.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="436" width="32" height="15" fill="rgb(227,182,14)"/><text x="532.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="452" width="32" height="15" fill="rgb(244,71,3)"/><text x="532.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="468" width="32" height="15" fill="rgb(248,38,21)"/><text x="532.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.64%)</title><rect x="529" y="484" width="32" height="15" fill="rgb(247,144,19)"/><text x="532.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="500" width="32" height="15" fill="rgb(253,228,16)"/><text x="532.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="516" width="32" height="15" fill="rgb(210,42,4)"/><text x="532.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="532" width="32" height="15" fill="rgb(218,178,50)"/><text x="532.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="548" width="32" height="15" fill="rgb(222,211,15)"/><text x="532.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="564" width="32" height="15" fill="rgb(231,220,11)"/><text x="532.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.64%)</title><rect x="529" y="580" width="32" height="15" fill="rgb(246,198,52)"/><text x="532.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="596" width="32" height="15" fill="rgb(252,2,21)"/><text x="532.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.64%)</title><rect x="529" y="612" width="32" height="15" fill="rgb(245,74,31)"/><text x="532.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="628" width="32" height="15" fill="rgb(218,86,46)"/><text x="532.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="644" width="32" height="15" fill="rgb(225,214,15)"/><text x="532.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="660" width="32" height="15" fill="rgb(208,35,33)"/><text x="532.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="676" width="32" height="15" fill="rgb(214,198,41)"/><text x="532.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="692" width="32" height="15" fill="rgb(249,65,43)"/><text x="532.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="708" width="32" height="15" fill="rgb(222,141,14)"/><text x="532.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.64%)</title><rect x="529" y="724" width="32" height="15" fill="rgb(248,143,20)"/><text x="532.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.64%)</title><rect x="529" y="740" width="32" height="15" fill="rgb(216,13,40)"/><text x="532.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.64%)</title><rect x="529" y="756" width="32" height="15" fill="rgb(205,183,41)"/><text x="532.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.64%)</title><rect x="529" y="772" width="32" height="15" fill="rgb(215,45,21)"/><text x="532.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.64%)</title><rect x="529" y="788" width="32" height="15" fill="rgb(222,64,16)"/><text x="532.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.64%)</title><rect x="529" y="804" width="32" height="15" fill="rgb(249,106,20)"/><text x="532.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.64%)</title><rect x="529" y="820" width="32" height="15" fill="rgb(242,7,49)"/><text x="532.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.64%)</title><rect x="529" y="836" width="32" height="15" fill="rgb(207,159,15)"/><text x="532.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 1.76%)</title><rect x="540" y="852" width="21" height="15" fill="rgb(214,52,52)"/><text x="543.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.76%)</title><rect x="540" y="868" width="21" height="15" fill="rgb(238,132,19)"/><text x="543.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.88%)</title><rect x="550" y="884" width="11" height="15" fill="rgb(233,103,9)"/><text x="553.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.44%)</title><rect x="555" y="900" width="6" height="15" fill="rgb(229,163,16)"/><text x="558.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.44%)</title><rect x="555" y="916" width="6" height="15" fill="rgb(252,212,27)"/><text x="558.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.44%)</title><rect x="555" y="932" width="6" height="15" fill="rgb(236,92,11)"/><text x="558.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.44%)</title><rect x="555" y="948" width="6" height="15" fill="rgb(215,52,19)"/><text x="558.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.44%)</title><rect x="555" y="964" width="6" height="15" fill="rgb(239,63,21)"/><text x="558.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.44%)</title><rect x="555" y="980" width="6" height="15" fill="rgb(212,199,38)"/><text x="558.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.44%)</title><rect x="555" y="996" width="6" height="15" fill="rgb(222,60,48)"/><text x="558.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.44%)</title><rect x="561" y="772" width="5" height="15" fill="rgb(207,120,52)"/><text x="564.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="561" y="788" width="5" height="15" fill="rgb(220,140,40)"/><text x="564.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="561" y="804" width="5" height="15" fill="rgb(211,33,26)"/><text x="564.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="561" y="820" width="5" height="15" fill="rgb(234,91,36)"/><text x="564.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="561" y="836" width="5" height="15" fill="rgb(231,177,33)"/><text x="564.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="561" y="852" width="5" height="15" fill="rgb(241,119,30)"/><text x="564.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.44%)</title><rect x="561" y="868" width="5" height="15" fill="rgb(244,168,37)"/><text x="564.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="561" y="884" width="5" height="15" fill="rgb(243,208,1)"/><text x="564.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="561" y="900" width="5" height="15" fill="rgb(231,165,48)"/><text x="564.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="561" y="916" width="5" height="15" fill="rgb(211,60,43)"/><text x="564.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="561" y="932" width="5" height="15" fill="rgb(213,59,49)"/><text x="564.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="561" y="948" width="5" height="15" fill="rgb(235,29,7)"/><text x="564.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:20) (1 samples, 0.44%)</title><rect x="561" y="964" width="5" height="15" fill="rgb(245,46,37)"/><text x="564.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="561" y="980" width="5" height="15" fill="rgb(215,68,48)"/><text x="564.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="561" y="996" width="5" height="15" fill="rgb(241,37,6)"/><text x="564.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.44%)</title><rect x="561" y="1012" width="5" height="15" fill="rgb(231,17,16)"/><text x="564.00" y="1022.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.44%)</title><rect x="561" y="1028" width="5" height="15" fill="rgb(214,117,3)"/><text x="564.00" y="1038.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.44%)</title><rect x="561" y="1044" width="5" height="15" fill="rgb(247,20,29)"/><text x="564.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="561" y="1060" width="5" height="15" fill="rgb(243,137,32)"/><text x="564.00" y="1070.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1076" width="5" height="15" fill="rgb(233,110,1)"/><text x="564.00" y="1086.50"></text></g><g><title>0x7f07f3b55995 (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1092" width="5" height="15" fill="rgb(240,101,33)"/><text x="564.00" y="1102.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1108" width="5" height="15" fill="rgb(235,156,35)"/><text x="564.00" y="1118.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1124" width="5" height="15" fill="rgb(216,170,16)"/><text x="564.00" y="1134.50"></text></g><g><title>0x7f07f3b55258 (libdl-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1140" width="5" height="15" fill="rgb(226,112,50)"/><text x="564.00" y="1150.50"></text></g><g><title>0x7f07f3ba2d7a (ld-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1156" width="5" height="15" fill="rgb(245,47,45)"/><text x="564.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1172" width="5" height="15" fill="rgb(234,68,24)"/><text x="564.00" y="1182.50"></text></g><g><title>0x7f07f3ba318b (ld-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1188" width="5" height="15" fill="rgb(237,46,23)"/><text x="564.00" y="1198.50"></text></g><g><title>0x7f07f3b98b07 (ld-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1204" width="5" height="15" fill="rgb(235,44,44)"/><text x="564.00" y="1214.50"></text></g><g><title>0x7f07f3bab4d8 (ld-2.29.so) (1 samples, 0.44%)</title><rect x="561" y="1220" width="5" height="15" fill="rgb(221,212,38)"/><text x="564.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.44%)</title><rect x="566" y="1028" width="5" height="15" fill="rgb(230,57,14)"/><text x="569.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="566" y="1044" width="5" height="15" fill="rgb(231,96,38)"/><text x="569.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="566" y="1060" width="5" height="15" fill="rgb(236,44,3)"/><text x="569.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="566" y="1076" width="5" height="15" fill="rgb(236,29,19)"/><text x="569.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="566" y="1092" width="5" height="15" fill="rgb(205,21,44)"/><text x="569.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="566" y="1108" width="5" height="15" fill="rgb(214,177,26)"/><text x="569.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="566" y="1124" width="5" height="15" fill="rgb(252,1,11)"/><text x="569.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="566" y="1140" width="5" height="15" fill="rgb(210,92,43)"/><text x="569.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.44%)</title><rect x="566" y="1156" width="5" height="15" fill="rgb(232,183,24)"/><text x="569.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="566" y="1172" width="5" height="15" fill="rgb(216,8,47)"/><text x="569.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="566" y="1188" width="5" height="15" fill="rgb(212,7,24)"/><text x="569.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="566" y="1204" width="5" height="15" fill="rgb(223,198,11)"/><text x="569.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="566" y="1220" width="5" height="15" fill="rgb(216,127,25)"/><text x="569.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="566" y="1236" width="5" height="15" fill="rgb(249,7,23)"/><text x="569.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:26) (1 samples, 0.44%)</title><rect x="566" y="1252" width="5" height="15" fill="rgb(228,214,25)"/><text x="569.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="566" y="1268" width="5" height="15" fill="rgb(205,137,34)"/><text x="569.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.44%)</title><rect x="566" y="1284" width="5" height="15" fill="rgb(227,196,18)"/><text x="569.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.44%)</title><rect x="566" y="1300" width="5" height="15" fill="rgb(219,84,17)"/><text x="569.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.44%)</title><rect x="566" y="1316" width="5" height="15" fill="rgb(250,35,40)"/><text x="569.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.44%)</title><rect x="566" y="1332" width="5" height="15" fill="rgb(210,41,49)"/><text x="569.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.44%)</title><rect x="566" y="1348" width="5" height="15" fill="rgb(221,14,25)"/><text x="569.00" y="1358.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.44%)</title><rect x="566" y="1364" width="5" height="15" fill="rgb(242,187,4)"/><text x="569.00" y="1374.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="566" y="1380" width="5" height="15" fill="rgb(222,92,2)"/><text x="569.00" y="1390.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.44%)</title><rect x="566" y="1396" width="5" height="15" fill="rgb(207,59,30)"/><text x="569.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 1.32%)</title><rect x="561" y="676" width="15" height="15" fill="rgb(238,159,33)"/><text x="564.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="561" y="692" width="15" height="15" fill="rgb(222,213,2)"/><text x="564.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="561" y="708" width="15" height="15" fill="rgb(205,98,6)"/><text x="564.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="561" y="724" width="15" height="15" fill="rgb(208,223,9)"/><text x="564.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="561" y="740" width="15" height="15" fill="rgb(254,217,15)"/><text x="564.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="561" y="756" width="15" height="15" fill="rgb(252,103,14)"/><text x="564.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.88%)</title><rect x="566" y="772" width="10" height="15" fill="rgb(239,205,32)"/><text x="569.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.88%)</title><rect x="566" y="788" width="10" height="15" fill="rgb(238,132,7)"/><text x="569.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="566" y="804" width="10" height="15" fill="rgb(212,81,2)"/><text x="569.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="566" y="820" width="10" height="15" fill="rgb(206,3,25)"/><text x="569.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="566" y="836" width="10" height="15" fill="rgb(231,81,20)"/><text x="569.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="566" y="852" width="10" height="15" fill="rgb(247,154,2)"/><text x="569.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="566" y="868" width="10" height="15" fill="rgb(239,222,6)"/><text x="569.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="566" y="884" width="10" height="15" fill="rgb(252,160,16)"/><text x="569.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.88%)</title><rect x="566" y="900" width="10" height="15" fill="rgb(221,51,14)"/><text x="569.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.88%)</title><rect x="566" y="916" width="10" height="15" fill="rgb(218,23,35)"/><text x="569.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="566" y="932" width="10" height="15" fill="rgb(227,187,15)"/><text x="569.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="566" y="948" width="10" height="15" fill="rgb(237,27,44)"/><text x="569.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="566" y="964" width="10" height="15" fill="rgb(243,100,44)"/><text x="569.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="566" y="980" width="10" height="15" fill="rgb(236,161,28)"/><text x="569.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="566" y="996" width="10" height="15" fill="rgb(250,40,34)"/><text x="569.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="566" y="1012" width="10" height="15" fill="rgb(231,57,19)"/><text x="569.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4189) (1 samples, 0.44%)</title><rect x="571" y="1028" width="5" height="15" fill="rgb(223,121,42)"/><text x="574.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.44%)</title><rect x="571" y="1044" width="5" height="15" fill="rgb(227,15,48)"/><text x="574.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.44%)</title><rect x="571" y="1060" width="5" height="15" fill="rgb(237,178,15)"/><text x="574.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (4 samples, 1.76%)</title><rect x="561" y="148" width="20" height="15" fill="rgb(226,149,35)"/><text x="564.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="164" width="20" height="15" fill="rgb(242,156,43)"/><text x="564.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.76%)</title><rect x="561" y="180" width="20" height="15" fill="rgb(223,10,54)"/><text x="564.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="196" width="20" height="15" fill="rgb(246,139,43)"/><text x="564.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="212" width="20" height="15" fill="rgb(250,167,48)"/><text x="564.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.76%)</title><rect x="561" y="228" width="20" height="15" fill="rgb(210,126,38)"/><text x="564.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.76%)</title><rect x="561" y="244" width="20" height="15" fill="rgb(207,64,17)"/><text x="564.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.76%)</title><rect x="561" y="260" width="20" height="15" fill="rgb(237,3,27)"/><text x="564.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="276" width="20" height="15" fill="rgb(235,224,26)"/><text x="564.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.76%)</title><rect x="561" y="292" width="20" height="15" fill="rgb(224,87,46)"/><text x="564.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="308" width="20" height="15" fill="rgb(208,142,9)"/><text x="564.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.76%)</title><rect x="561" y="324" width="20" height="15" fill="rgb(233,18,26)"/><text x="564.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.76%)</title><rect x="561" y="340" width="20" height="15" fill="rgb(236,191,32)"/><text x="564.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.76%)</title><rect x="561" y="356" width="20" height="15" fill="rgb(232,34,33)"/><text x="564.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="372" width="20" height="15" fill="rgb(212,60,4)"/><text x="564.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.76%)</title><rect x="561" y="388" width="20" height="15" fill="rgb(252,100,53)"/><text x="564.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="404" width="20" height="15" fill="rgb(250,38,40)"/><text x="564.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.76%)</title><rect x="561" y="420" width="20" height="15" fill="rgb(233,28,8)"/><text x="564.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.76%)</title><rect x="561" y="436" width="20" height="15" fill="rgb(212,4,7)"/><text x="564.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.76%)</title><rect x="561" y="452" width="20" height="15" fill="rgb(254,186,25)"/><text x="564.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="468" width="20" height="15" fill="rgb(207,92,38)"/><text x="564.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 1.76%)</title><rect x="561" y="484" width="20" height="15" fill="rgb(218,75,17)"/><text x="564.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="500" width="20" height="15" fill="rgb(224,167,43)"/><text x="564.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.76%)</title><rect x="561" y="516" width="20" height="15" fill="rgb(214,201,41)"/><text x="564.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.76%)</title><rect x="561" y="532" width="20" height="15" fill="rgb(208,108,45)"/><text x="564.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.76%)</title><rect x="561" y="548" width="20" height="15" fill="rgb(225,141,7)"/><text x="564.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="564" width="20" height="15" fill="rgb(228,165,51)"/><text x="564.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 1.76%)</title><rect x="561" y="580" width="20" height="15" fill="rgb(244,130,37)"/><text x="564.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.76%)</title><rect x="561" y="596" width="20" height="15" fill="rgb(229,53,19)"/><text x="564.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.76%)</title><rect x="561" y="612" width="20" height="15" fill="rgb(213,145,51)"/><text x="564.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.76%)</title><rect x="561" y="628" width="20" height="15" fill="rgb(230,104,13)"/><text x="564.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.76%)</title><rect x="561" y="644" width="20" height="15" fill="rgb(236,154,39)"/><text x="564.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.76%)</title><rect x="561" y="660" width="20" height="15" fill="rgb(254,71,34)"/><text x="564.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:386) (1 samples, 0.44%)</title><rect x="576" y="676" width="5" height="15" fill="rgb(205,107,7)"/><text x="579.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="576" y="692" width="5" height="15" fill="rgb(243,146,16)"/><text x="579.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="576" y="708" width="5" height="15" fill="rgb(228,143,15)"/><text x="579.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="576" y="724" width="5" height="15" fill="rgb(230,59,5)"/><text x="579.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="576" y="740" width="5" height="15" fill="rgb(233,78,30)"/><text x="579.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="576" y="756" width="5" height="15" fill="rgb(211,85,48)"/><text x="579.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py:1203) (1 samples, 0.44%)</title><rect x="576" y="772" width="5" height="15" fill="rgb(205,17,51)"/><text x="579.00" y="782.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.44%)</title><rect x="576" y="788" width="5" height="15" fill="rgb(238,10,19)"/><text x="579.00" y="798.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.44%)</title><rect x="576" y="804" width="5" height="15" fill="rgb(218,91,43)"/><text x="579.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.44%)</title><rect x="581" y="724" width="6" height="15" fill="rgb(249,72,4)"/><text x="584.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="740" width="6" height="15" fill="rgb(234,204,6)"/><text x="584.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="756" width="6" height="15" fill="rgb(253,4,7)"/><text x="584.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="772" width="6" height="15" fill="rgb(235,65,46)"/><text x="584.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="788" width="6" height="15" fill="rgb(249,66,11)"/><text x="584.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="804" width="6" height="15" fill="rgb(247,103,2)"/><text x="584.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.44%)</title><rect x="581" y="820" width="6" height="15" fill="rgb(247,190,3)"/><text x="584.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="836" width="6" height="15" fill="rgb(246,57,25)"/><text x="584.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="852" width="6" height="15" fill="rgb(226,16,15)"/><text x="584.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="868" width="6" height="15" fill="rgb(224,118,38)"/><text x="584.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="884" width="6" height="15" fill="rgb(233,8,39)"/><text x="584.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="900" width="6" height="15" fill="rgb(217,73,39)"/><text x="584.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.44%)</title><rect x="581" y="916" width="6" height="15" fill="rgb(218,26,30)"/><text x="584.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="932" width="6" height="15" fill="rgb(249,50,40)"/><text x="584.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="948" width="6" height="15" fill="rgb(240,108,44)"/><text x="584.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="964" width="6" height="15" fill="rgb(208,79,38)"/><text x="584.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="980" width="6" height="15" fill="rgb(207,21,47)"/><text x="584.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="996" width="6" height="15" fill="rgb(242,148,13)"/><text x="584.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.44%)</title><rect x="581" y="1012" width="6" height="15" fill="rgb(240,136,5)"/><text x="584.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1028" width="6" height="15" fill="rgb(247,49,24)"/><text x="584.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1044" width="6" height="15" fill="rgb(208,24,47)"/><text x="584.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1060" width="6" height="15" fill="rgb(210,138,21)"/><text x="584.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1076" width="6" height="15" fill="rgb(230,227,20)"/><text x="584.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1092" width="6" height="15" fill="rgb(241,54,6)"/><text x="584.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.44%)</title><rect x="581" y="1108" width="6" height="15" fill="rgb(226,115,20)"/><text x="584.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1124" width="6" height="15" fill="rgb(219,0,53)"/><text x="584.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1140" width="6" height="15" fill="rgb(229,29,20)"/><text x="584.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1156" width="6" height="15" fill="rgb(235,55,32)"/><text x="584.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1172" width="6" height="15" fill="rgb(232,150,33)"/><text x="584.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1188" width="6" height="15" fill="rgb(231,229,25)"/><text x="584.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.44%)</title><rect x="581" y="1204" width="6" height="15" fill="rgb(235,89,17)"/><text x="584.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1220" width="6" height="15" fill="rgb(218,10,19)"/><text x="584.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1236" width="6" height="15" fill="rgb(237,73,31)"/><text x="584.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1252" width="6" height="15" fill="rgb(253,52,42)"/><text x="584.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1268" width="6" height="15" fill="rgb(246,127,9)"/><text x="584.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1284" width="6" height="15" fill="rgb(205,153,16)"/><text x="584.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.44%)</title><rect x="581" y="1300" width="6" height="15" fill="rgb(253,131,36)"/><text x="584.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1316" width="6" height="15" fill="rgb(253,181,15)"/><text x="584.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1332" width="6" height="15" fill="rgb(218,211,51)"/><text x="584.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1348" width="6" height="15" fill="rgb(239,178,9)"/><text x="584.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1364" width="6" height="15" fill="rgb(239,140,48)"/><text x="584.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1380" width="6" height="15" fill="rgb(251,73,39)"/><text x="584.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.44%)</title><rect x="581" y="1396" width="6" height="15" fill="rgb(244,34,43)"/><text x="584.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1412" width="6" height="15" fill="rgb(245,176,28)"/><text x="584.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1428" width="6" height="15" fill="rgb(230,47,31)"/><text x="584.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1444" width="6" height="15" fill="rgb(237,57,28)"/><text x="584.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1460" width="6" height="15" fill="rgb(236,195,41)"/><text x="584.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1476" width="6" height="15" fill="rgb(244,22,11)"/><text x="584.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.44%)</title><rect x="581" y="1492" width="6" height="15" fill="rgb(211,184,44)"/><text x="584.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="581" y="1508" width="6" height="15" fill="rgb(232,186,44)"/><text x="584.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1524" width="6" height="15" fill="rgb(238,19,54)"/><text x="584.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="581" y="1540" width="6" height="15" fill="rgb(245,222,26)"/><text x="584.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="581" y="1556" width="6" height="15" fill="rgb(232,128,19)"/><text x="584.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="581" y="1572" width="6" height="15" fill="rgb(249,140,4)"/><text x="584.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="581" y="1588" width="6" height="15" fill="rgb(235,44,21)"/><text x="584.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="581" y="1604" width="6" height="15" fill="rgb(253,12,0)"/><text x="584.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:7) (1 samples, 0.44%)</title><rect x="581" y="1620" width="6" height="15" fill="rgb(225,160,40)"/><text x="584.00" y="1630.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.44%)</title><rect x="581" y="1636" width="6" height="15" fill="rgb(234,8,6)"/><text x="584.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:4) (12 samples, 5.29%)</title><rect x="529" y="52" width="63" height="15" fill="rgb(215,191,9)"/><text x="532.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.29%)</title><rect x="529" y="68" width="63" height="15" fill="rgb(230,206,43)"/><text x="532.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.29%)</title><rect x="529" y="84" width="63" height="15" fill="rgb(222,121,34)"/><text x="532.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.29%)</title><rect x="529" y="100" width="63" height="15" fill="rgb(243,3,39)"/><text x="532.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.29%)</title><rect x="529" y="116" width="63" height="15" fill="rgb(205,2,22)"/><text x="532.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.29%)</title><rect x="529" y="132" width="63" height="15" fill="rgb(233,76,22)"/><text x="532.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (2 samples, 0.88%)</title><rect x="581" y="148" width="11" height="15" fill="rgb(236,83,15)"/><text x="584.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="164" width="11" height="15" fill="rgb(247,6,28)"/><text x="584.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="180" width="11" height="15" fill="rgb(242,22,21)"/><text x="584.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="196" width="11" height="15" fill="rgb(240,204,46)"/><text x="584.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="212" width="11" height="15" fill="rgb(233,166,10)"/><text x="584.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="228" width="11" height="15" fill="rgb(241,163,20)"/><text x="584.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (2 samples, 0.88%)</title><rect x="581" y="244" width="11" height="15" fill="rgb(211,177,22)"/><text x="584.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="260" width="11" height="15" fill="rgb(217,10,31)"/><text x="584.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="276" width="11" height="15" fill="rgb(233,51,39)"/><text x="584.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="292" width="11" height="15" fill="rgb(215,62,27)"/><text x="584.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="308" width="11" height="15" fill="rgb(235,27,9)"/><text x="584.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="324" width="11" height="15" fill="rgb(230,139,17)"/><text x="584.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.88%)</title><rect x="581" y="340" width="11" height="15" fill="rgb(221,218,20)"/><text x="584.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="356" width="11" height="15" fill="rgb(233,34,1)"/><text x="584.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="372" width="11" height="15" fill="rgb(253,204,4)"/><text x="584.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="388" width="11" height="15" fill="rgb(241,102,7)"/><text x="584.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="404" width="11" height="15" fill="rgb(238,129,22)"/><text x="584.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="420" width="11" height="15" fill="rgb(221,34,23)"/><text x="584.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.88%)</title><rect x="581" y="436" width="11" height="15" fill="rgb(245,88,27)"/><text x="584.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="452" width="11" height="15" fill="rgb(222,160,12)"/><text x="584.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="468" width="11" height="15" fill="rgb(246,139,28)"/><text x="584.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="484" width="11" height="15" fill="rgb(216,134,12)"/><text x="584.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="500" width="11" height="15" fill="rgb(217,7,38)"/><text x="584.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="516" width="11" height="15" fill="rgb(227,68,5)"/><text x="584.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.88%)</title><rect x="581" y="532" width="11" height="15" fill="rgb(219,213,5)"/><text x="584.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="548" width="11" height="15" fill="rgb(222,132,39)"/><text x="584.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="564" width="11" height="15" fill="rgb(230,14,17)"/><text x="584.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="580" width="11" height="15" fill="rgb(221,188,2)"/><text x="584.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="596" width="11" height="15" fill="rgb(239,219,21)"/><text x="584.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="612" width="11" height="15" fill="rgb(249,17,45)"/><text x="584.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.88%)</title><rect x="581" y="628" width="11" height="15" fill="rgb(209,46,39)"/><text x="584.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="581" y="644" width="11" height="15" fill="rgb(217,79,1)"/><text x="584.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="581" y="660" width="11" height="15" fill="rgb(214,135,48)"/><text x="584.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="581" y="676" width="11" height="15" fill="rgb(206,127,37)"/><text x="584.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="581" y="692" width="11" height="15" fill="rgb(218,153,50)"/><text x="584.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="581" y="708" width="11" height="15" fill="rgb(224,50,53)"/><text x="584.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.44%)</title><rect x="587" y="724" width="5" height="15" fill="rgb(241,36,38)"/><text x="590.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="587" y="740" width="5" height="15" fill="rgb(225,67,36)"/><text x="590.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="587" y="756" width="5" height="15" fill="rgb(234,64,17)"/><text x="590.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="772" width="5" height="15" fill="rgb(230,57,46)"/><text x="590.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="587" y="788" width="5" height="15" fill="rgb(214,149,6)"/><text x="590.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="587" y="804" width="5" height="15" fill="rgb(234,163,3)"/><text x="590.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="587" y="820" width="5" height="15" fill="rgb(228,191,46)"/><text x="590.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="587" y="836" width="5" height="15" fill="rgb(233,175,3)"/><text x="590.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="852" width="5" height="15" fill="rgb(254,176,52)"/><text x="590.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.44%)</title><rect x="587" y="868" width="5" height="15" fill="rgb(254,194,42)"/><text x="590.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="587" y="884" width="5" height="15" fill="rgb(240,124,36)"/><text x="590.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="587" y="900" width="5" height="15" fill="rgb(213,96,24)"/><text x="590.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="587" y="916" width="5" height="15" fill="rgb(225,57,18)"/><text x="590.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="587" y="932" width="5" height="15" fill="rgb(247,64,6)"/><text x="590.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="948" width="5" height="15" fill="rgb(226,169,17)"/><text x="590.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:24) (1 samples, 0.44%)</title><rect x="587" y="964" width="5" height="15" fill="rgb(250,31,29)"/><text x="590.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="587" y="980" width="5" height="15" fill="rgb(235,147,30)"/><text x="590.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="996" width="5" height="15" fill="rgb(251,164,48)"/><text x="590.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="587" y="1012" width="5" height="15" fill="rgb(241,42,20)"/><text x="590.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="587" y="1028" width="5" height="15" fill="rgb(222,175,16)"/><text x="590.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="587" y="1044" width="5" height="15" fill="rgb(246,56,48)"/><text x="590.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="587" y="1060" width="5" height="15" fill="rgb(227,162,41)"/><text x="590.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="1076" width="5" height="15" fill="rgb(220,4,41)"/><text x="590.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/ops/__init__.py:55) (1 samples, 0.44%)</title><rect x="587" y="1092" width="5" height="15" fill="rgb(254,1,42)"/><text x="590.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="587" y="1108" width="5" height="15" fill="rgb(243,23,23)"/><text x="590.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="587" y="1124" width="5" height="15" fill="rgb(243,113,20)"/><text x="590.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="587" y="1140" width="5" height="15" fill="rgb(248,195,51)"/><text x="590.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="587" y="1156" width="5" height="15" fill="rgb(210,150,48)"/><text x="590.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.44%)</title><rect x="587" y="1172" width="5" height="15" fill="rgb(207,218,18)"/><text x="590.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.44%)</title><rect x="587" y="1188" width="5" height="15" fill="rgb(251,175,2)"/><text x="590.00" y="1198.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.44%)</title><rect x="587" y="1204" width="5" height="15" fill="rgb(205,167,7)"/><text x="590.00" y="1214.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.44%)</title><rect x="587" y="1220" width="5" height="15" fill="rgb(225,187,39)"/><text x="590.00" y="1230.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.44%)</title><rect x="587" y="1236" width="5" height="15" fill="rgb(237,179,53)"/><text x="590.00" y="1246.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:308) (1 samples, 0.44%)</title><rect x="587" y="1252" width="5" height="15" fill="rgb(233,109,26)"/><text x="590.00" y="1262.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.44%)</title><rect x="587" y="1268" width="5" height="15" fill="rgb(236,203,8)"/><text x="590.00" y="1278.50"></text></g><g><title>0x7f07f38e3757 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="587" y="1284" width="5" height="15" fill="rgb(250,201,32)"/><text x="590.00" y="1294.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:18) (1 samples, 0.44%)</title><rect x="592" y="100" width="5" height="15" fill="rgb(238,110,27)"/><text x="595.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.44%)</title><rect x="592" y="116" width="5" height="15" fill="rgb(209,50,35)"/><text x="595.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.44%)</title><rect x="592" y="132" width="5" height="15" fill="rgb(243,140,39)"/><text x="595.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.44%)</title><rect x="592" y="148" width="5" height="15" fill="rgb(236,84,44)"/><text x="595.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.44%)</title><rect x="592" y="164" width="5" height="15" fill="rgb(245,63,47)"/><text x="595.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.44%)</title><rect x="592" y="180" width="5" height="15" fill="rgb(225,1,33)"/><text x="595.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.44%)</title><rect x="592" y="196" width="5" height="15" fill="rgb(242,26,12)"/><text x="595.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.44%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(219,211,44)"/><text x="595.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.44%)</title><rect x="592" y="228" width="5" height="15" fill="rgb(250,150,38)"/><text x="595.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.44%)</title><rect x="592" y="244" width="5" height="15" fill="rgb(237,154,4)"/><text x="595.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.44%)</title><rect x="592" y="260" width="5" height="15" fill="rgb(224,35,12)"/><text x="595.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.44%)</title><rect x="592" y="276" width="5" height="15" fill="rgb(246,158,23)"/><text x="595.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.44%)</title><rect x="592" y="292" width="5" height="15" fill="rgb(213,183,50)"/><text x="595.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.44%)</title><rect x="592" y="308" width="5" height="15" fill="rgb(242,206,54)"/><text x="595.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.44%)</title><rect x="592" y="324" width="5" height="15" fill="rgb(219,96,0)"/><text x="595.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.44%)</title><rect x="592" y="340" width="5" height="15" fill="rgb(212,220,11)"/><text x="595.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.44%)</title><rect x="592" y="356" width="5" height="15" fill="rgb(244,34,35)"/><text x="595.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.44%)</title><rect x="592" y="372" width="5" height="15" fill="rgb(208,19,42)"/><text x="595.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2182) (1 samples, 0.44%)</title><rect x="592" y="388" width="5" height="15" fill="rgb(209,176,14)"/><text x="595.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.44%)</title><rect x="597" y="116" width="5" height="15" fill="rgb(248,99,35)"/><text x="600.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.44%)</title><rect x="607" y="148" width="5" height="15" fill="rgb(244,220,41)"/><text x="610.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.44%)</title><rect x="612" y="164" width="6" height="15" fill="rgb(251,127,42)"/><text x="615.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.88%)</title><rect x="618" y="164" width="10" height="15" fill="rgb(225,34,10)"/><text x="621.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 2.20%)</title><rect x="628" y="180" width="26" height="15" fill="rgb(242,213,52)"/><text x="631.00" y="190.50">r..</text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.44%)</title><rect x="696" y="276" width="5" height="15" fill="rgb(213,144,13)"/><text x="699.00" y="286.50"></text></g><g><title>array_reshape (methods.c:186) (3 samples, 1.32%)</title><rect x="690" y="260" width="16" height="15" fill="rgb(230,35,29)"/><text x="693.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.44%)</title><rect x="701" y="276" width="5" height="15" fill="rgb(212,123,27)"/><text x="704.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.44%)</title><rect x="706" y="308" width="5" height="15" fill="rgb(235,8,26)"/><text x="709.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.44%)</title><rect x="706" y="324" width="5" height="15" fill="rgb(224,79,47)"/><text x="709.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.44%)</title><rect x="706" y="340" width="5" height="15" fill="rgb(230,215,52)"/><text x="709.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.44%)</title><rect x="706" y="356" width="5" height="15" fill="rgb(226,204,29)"/><text x="709.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.44%)</title><rect x="706" y="372" width="5" height="15" fill="rgb(239,10,51)"/><text x="709.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.44%)</title><rect x="706" y="388" width="5" height="15" fill="rgb(244,139,51)"/><text x="709.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.44%)</title><rect x="711" y="324" width="5" height="15" fill="rgb(214,3,33)"/><text x="714.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4593) (1 samples, 0.44%)</title><rect x="716" y="324" width="6" height="15" fill="rgb(239,140,20)"/><text x="719.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.44%)</title><rect x="722" y="340" width="5" height="15" fill="rgb(205,167,2)"/><text x="725.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.44%)</title><rect x="722" y="356" width="5" height="15" fill="rgb(205,108,43)"/><text x="725.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.44%)</title><rect x="722" y="372" width="5" height="15" fill="rgb(250,27,24)"/><text x="725.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.44%)</title><rect x="727" y="388" width="5" height="15" fill="rgb(224,107,14)"/><text x="730.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.44%)</title><rect x="727" y="404" width="5" height="15" fill="rgb(251,167,39)"/><text x="730.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.88%)</title><rect x="727" y="356" width="10" height="15" fill="rgb(227,149,33)"/><text x="730.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.88%)</title><rect x="727" y="372" width="10" height="15" fill="rgb(208,208,43)"/><text x="730.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.44%)</title><rect x="732" y="388" width="5" height="15" fill="rgb(227,15,12)"/><text x="735.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.44%)</title><rect x="732" y="404" width="5" height="15" fill="rgb(253,135,32)"/><text x="735.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.44%)</title><rect x="732" y="420" width="5" height="15" fill="rgb(239,11,20)"/><text x="735.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.44%)</title><rect x="732" y="436" width="5" height="15" fill="rgb(206,129,36)"/><text x="735.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.44%)</title><rect x="732" y="452" width="5" height="15" fill="rgb(251,207,21)"/><text x="735.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="732" y="468" width="5" height="15" fill="rgb(248,188,45)"/><text x="735.00" y="478.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 3.08%)</title><rect x="706" y="260" width="36" height="15" fill="rgb(249,149,44)"/><text x="709.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 3.08%)</title><rect x="706" y="276" width="36" height="15" fill="rgb(248,96,37)"/><text x="709.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 3.08%)</title><rect x="706" y="292" width="36" height="15" fill="rgb(244,115,38)"/><text x="709.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 2.64%)</title><rect x="711" y="308" width="31" height="15" fill="rgb(215,222,11)"/><text x="714.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.76%)</title><rect x="722" y="324" width="20" height="15" fill="rgb(218,57,19)"/><text x="725.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.32%)</title><rect x="727" y="340" width="15" height="15" fill="rgb(229,163,43)"/><text x="730.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.44%)</title><rect x="737" y="356" width="5" height="15" fill="rgb(253,150,33)"/><text x="740.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:687) (1 samples, 0.44%)</title><rect x="737" y="372" width="5" height="15" fill="rgb(205,219,39)"/><text x="740.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (15 samples, 6.61%)</title><rect x="670" y="244" width="78" height="15" fill="rgb(216,219,11)"/><text x="673.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.44%)</title><rect x="742" y="260" width="6" height="15" fill="rgb(216,51,20)"/><text x="745.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.44%)</title><rect x="742" y="276" width="6" height="15" fill="rgb(237,117,5)"/><text x="745.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.44%)</title><rect x="742" y="292" width="6" height="15" fill="rgb(226,203,46)"/><text x="745.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (2 samples, 0.88%)</title><rect x="753" y="260" width="10" height="15" fill="rgb(211,121,41)"/><text x="756.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.88%)</title><rect x="753" y="276" width="10" height="15" fill="rgb(205,212,51)"/><text x="756.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.88%)</title><rect x="753" y="292" width="10" height="15" fill="rgb(214,18,38)"/><text x="756.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (2 samples, 0.88%)</title><rect x="753" y="308" width="10" height="15" fill="rgb(236,175,23)"/><text x="756.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.44%)</title><rect x="763" y="276" width="5" height="15" fill="rgb(229,101,4)"/><text x="766.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.44%)</title><rect x="763" y="292" width="5" height="15" fill="rgb(243,133,17)"/><text x="766.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.44%)</title><rect x="763" y="308" width="5" height="15" fill="rgb(237,221,33)"/><text x="766.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.44%)</title><rect x="768" y="324" width="6" height="15" fill="rgb(230,78,31)"/><text x="771.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.44%)</title><rect x="768" y="340" width="6" height="15" fill="rgb(234,76,16)"/><text x="771.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.88%)</title><rect x="768" y="308" width="11" height="15" fill="rgb(207,7,39)"/><text x="771.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.44%)</title><rect x="774" y="324" width="5" height="15" fill="rgb(221,45,10)"/><text x="777.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.44%)</title><rect x="774" y="340" width="5" height="15" fill="rgb(242,68,32)"/><text x="777.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.32%)</title><rect x="768" y="276" width="16" height="15" fill="rgb(251,44,32)"/><text x="771.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.32%)</title><rect x="768" y="292" width="16" height="15" fill="rgb(242,219,21)"/><text x="771.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.44%)</title><rect x="779" y="308" width="5" height="15" fill="rgb(210,139,12)"/><text x="782.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.44%)</title><rect x="779" y="324" width="5" height="15" fill="rgb(205,202,11)"/><text x="782.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1708) (1 samples, 0.44%)</title><rect x="779" y="340" width="5" height="15" fill="rgb(216,74,4)"/><text x="782.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (26 samples, 11.45%)</title><rect x="654" y="196" width="135" height="15" fill="rgb(217,69,38)"/><text x="657.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 10.57%)</title><rect x="664" y="212" width="125" height="15" fill="rgb(235,25,18)"/><text x="667.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (23 samples, 10.13%)</title><rect x="670" y="228" width="119" height="15" fill="rgb(231,14,19)"/><text x="673.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 3.52%)</title><rect x="748" y="244" width="41" height="15" fill="rgb(223,143,3)"/><text x="751.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.20%)</title><rect x="763" y="260" width="26" height="15" fill="rgb(250,49,2)"/><text x="766.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.44%)</title><rect x="784" y="276" width="5" height="15" fill="rgb(233,96,18)"/><text x="787.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.44%)</title><rect x="800" y="276" width="5" height="15" fill="rgb(235,223,54)"/><text x="803.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.44%)</title><rect x="805" y="276" width="5" height="15" fill="rgb(220,172,25)"/><text x="808.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.44%)</title><rect x="810" y="308" width="5" height="15" fill="rgb(214,65,10)"/><text x="813.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2089) (1 samples, 0.44%)</title><rect x="810" y="324" width="5" height="15" fill="rgb(219,41,2)"/><text x="813.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.44%)</title><rect x="815" y="324" width="5" height="15" fill="rgb(219,177,44)"/><text x="818.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.44%)</title><rect x="815" y="340" width="5" height="15" fill="rgb(223,0,37)"/><text x="818.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.44%)</title><rect x="815" y="356" width="5" height="15" fill="rgb(223,146,51)"/><text x="818.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.44%)</title><rect x="815" y="372" width="5" height="15" fill="rgb(205,115,8)"/><text x="818.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.44%)</title><rect x="820" y="324" width="6" height="15" fill="rgb(240,214,8)"/><text x="823.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="820" y="340" width="6" height="15" fill="rgb(229,198,42)"/><text x="823.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (7 samples, 3.08%)</title><rect x="794" y="228" width="37" height="15" fill="rgb(242,157,18)"/><text x="797.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 2.64%)</title><rect x="800" y="244" width="31" height="15" fill="rgb(219,208,11)"/><text x="803.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 2.64%)</title><rect x="800" y="260" width="31" height="15" fill="rgb(238,0,9)"/><text x="803.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.76%)</title><rect x="810" y="276" width="21" height="15" fill="rgb(253,136,51)"/><text x="813.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.76%)</title><rect x="810" y="292" width="21" height="15" fill="rgb(232,135,41)"/><text x="813.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.32%)</title><rect x="815" y="308" width="16" height="15" fill="rgb(254,174,10)"/><text x="818.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.44%)</title><rect x="826" y="324" width="5" height="15" fill="rgb(251,89,23)"/><text x="829.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.44%)</title><rect x="826" y="340" width="5" height="15" fill="rgb(244,182,11)"/><text x="829.00" y="350.50"></text></g><g><title>0x7f07f2aef7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="826" y="356" width="5" height="15" fill="rgb(233,7,27)"/><text x="829.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.44%)</title><rect x="831" y="260" width="5" height="15" fill="rgb(243,45,14)"/><text x="834.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.44%)</title><rect x="831" y="276" width="5" height="15" fill="rgb(253,136,20)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.44%)</title><rect x="831" y="292" width="5" height="15" fill="rgb(232,62,16)"/><text x="834.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.88%)</title><rect x="836" y="260" width="10" height="15" fill="rgb(210,162,15)"/><text x="839.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.88%)</title><rect x="836" y="276" width="10" height="15" fill="rgb(233,203,46)"/><text x="839.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.44%)</title><rect x="841" y="292" width="5" height="15" fill="rgb(230,171,51)"/><text x="844.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.44%)</title><rect x="841" y="308" width="5" height="15" fill="rgb(248,172,42)"/><text x="844.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2224) (1 samples, 0.44%)</title><rect x="841" y="324" width="5" height="15" fill="rgb(244,134,51)"/><text x="844.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3283) (1 samples, 0.44%)</title><rect x="846" y="260" width="6" height="15" fill="rgb(227,226,47)"/><text x="849.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.20%)</title><rect x="831" y="244" width="26" height="15" fill="rgb(239,16,15)"/><text x="834.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.44%)</title><rect x="852" y="260" width="5" height="15" fill="rgb(240,65,39)"/><text x="855.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 2.64%)</title><rect x="831" y="228" width="31" height="15" fill="rgb(232,167,54)"/><text x="834.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.44%)</title><rect x="857" y="244" width="5" height="15" fill="rgb(234,131,33)"/><text x="860.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.44%)</title><rect x="857" y="260" width="5" height="15" fill="rgb(240,8,4)"/><text x="860.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.44%)</title><rect x="857" y="276" width="5" height="15" fill="rgb(220,90,14)"/><text x="860.00" y="286.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.88%)</title><rect x="878" y="244" width="10" height="15" fill="rgb(212,47,5)"/><text x="881.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1087) (1 samples, 0.44%)</title><rect x="883" y="260" width="5" height="15" fill="rgb(223,53,40)"/><text x="886.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.44%)</title><rect x="888" y="292" width="5" height="15" fill="rgb(209,5,0)"/><text x="891.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.44%)</title><rect x="893" y="308" width="5" height="15" fill="rgb(242,119,9)"/><text x="896.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.44%)</title><rect x="898" y="356" width="6" height="15" fill="rgb(211,24,0)"/><text x="901.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.44%)</title><rect x="898" y="372" width="6" height="15" fill="rgb(249,186,46)"/><text x="901.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (2 samples, 0.88%)</title><rect x="898" y="324" width="11" height="15" fill="rgb(247,78,42)"/><text x="901.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.88%)</title><rect x="898" y="340" width="11" height="15" fill="rgb(223,220,46)"/><text x="901.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.44%)</title><rect x="904" y="356" width="5" height="15" fill="rgb(228,3,22)"/><text x="907.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.44%)</title><rect x="904" y="372" width="5" height="15" fill="rgb(216,183,11)"/><text x="907.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:131) (1 samples, 0.44%)</title><rect x="904" y="388" width="5" height="15" fill="rgb(231,224,0)"/><text x="907.00" y="398.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.44%)</title><rect x="904" y="404" width="5" height="15" fill="rgb(224,151,14)"/><text x="907.00" y="414.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="909" y="340" width="5" height="15" fill="rgb(224,66,38)"/><text x="912.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (2 samples, 0.88%)</title><rect x="909" y="324" width="10" height="15" fill="rgb(232,101,28)"/><text x="912.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="914" y="340" width="5" height="15" fill="rgb(228,141,6)"/><text x="917.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (26 samples, 11.45%)</title><rect x="789" y="196" width="135" height="15" fill="rgb(216,36,34)"/><text x="792.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 11.01%)</title><rect x="794" y="212" width="130" height="15" fill="rgb(222,31,53)"/><text x="797.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (12 samples, 5.29%)</title><rect x="862" y="228" width="62" height="15" fill="rgb(245,55,11)"/><text x="865.00" y="238.50">_run (..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 3.08%)</title><rect x="888" y="244" width="36" height="15" fill="rgb(221,200,21)"/><text x="891.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 3.08%)</title><rect x="888" y="260" width="36" height="15" fill="rgb(218,4,51)"/><text x="891.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 3.08%)</title><rect x="888" y="276" width="36" height="15" fill="rgb(223,19,35)"/><text x="891.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 2.64%)</title><rect x="893" y="292" width="31" height="15" fill="rgb(218,111,13)"/><text x="896.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c:302) (5 samples, 2.20%)</title><rect x="898" y="308" width="26" height="15" fill="rgb(242,207,5)"/><text x="901.00" y="318.50">a..</text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.44%)</title><rect x="919" y="324" width="5" height="15" fill="rgb(238,139,0)"/><text x="922.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="919" y="340" width="5" height="15" fill="rgb(239,162,23)"/><text x="922.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (55 samples, 24.23%)</title><rect x="654" y="180" width="286" height="15" fill="rgb(238,170,12)"/><text x="657.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 1.32%)</title><rect x="924" y="196" width="16" height="15" fill="rgb(211,85,54)"/><text x="927.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.44%)</title><rect x="935" y="212" width="5" height="15" fill="rgb(241,229,22)"/><text x="938.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.44%)</title><rect x="935" y="228" width="5" height="15" fill="rgb(240,148,52)"/><text x="938.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.44%)</title><rect x="935" y="244" width="5" height="15" fill="rgb(236,218,42)"/><text x="938.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.44%)</title><rect x="940" y="180" width="5" height="15" fill="rgb(242,206,37)"/><text x="943.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 1.76%)</title><rect x="945" y="180" width="21" height="15" fill="rgb(234,170,5)"/><text x="948.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 2.20%)</title><rect x="966" y="180" width="26" height="15" fill="rgb(239,190,13)"/><text x="969.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (71 samples, 31.28%)</title><rect x="628" y="164" width="369" height="15" fill="rgb(219,82,18)"/><text x="631.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.44%)</title><rect x="992" y="180" width="5" height="15" fill="rgb(240,47,10)"/><text x="995.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:45) (82 samples, 36.12%)</title><rect x="592" y="52" width="426" height="15" fill="rgb(250,124,11)"/><text x="595.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solve..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:44) (82 samples, 36.12%)</title><rect x="592" y="68" width="426" height="15" fill="rgb(248,77,6)"/><text x="595.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:29) (82 samples, 36.12%)</title><rect x="592" y="84" width="426" height="15" fill="rgb(241,82,50)"/><text x="595.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:23) (81 samples, 35.68%)</title><rect x="597" y="100" width="421" height="15" fill="rgb(222,128,40)"/><text x="600.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (80 samples, 35.24%)</title><rect x="602" y="116" width="416" height="15" fill="rgb(246,95,48)"/><text x="605.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (79 samples, 34.80%)</title><rect x="607" y="132" width="411" height="15" fill="rgb(249,82,47)"/><text x="610.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (78 samples, 34.36%)</title><rect x="612" y="148" width="406" height="15" fill="rgb(250,95,27)"/><text x="615.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.76%)</title><rect x="997" y="164" width="21" height="15" fill="rgb(214,180,17)"/><text x="1000.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.88%)</title><rect x="1008" y="180" width="10" height="15" fill="rgb(237,101,52)"/><text x="1011.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.44%)</title><rect x="1049" y="148" width="5" height="15" fill="rgb(229,129,48)"/><text x="1052.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.76%)</title><rect x="1075" y="196" width="21" height="15" fill="rgb(253,26,2)"/><text x="1078.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.76%)</title><rect x="1075" y="212" width="21" height="15" fill="rgb(219,126,50)"/><text x="1078.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1091" y="228" width="5" height="15" fill="rgb(237,226,17)"/><text x="1094.00" y="238.50"></text></g><g><title>0x7f07b393dff9 (?) (1 samples, 0.44%)</title><rect x="1112" y="212" width="5" height="15" fill="rgb(226,166,3)"/><text x="1115.00" y="222.50"></text></g><g><title>0x7f07b3938ef6 (?) (1 samples, 0.44%)</title><rect x="1112" y="228" width="5" height="15" fill="rgb(239,54,17)"/><text x="1115.00" y="238.50"></text></g><g><title>0x7f07b392d962 (?) (1 samples, 0.44%)</title><rect x="1112" y="244" width="5" height="15" fill="rgb(233,208,49)"/><text x="1115.00" y="254.50"></text></g><g><title>0x7f07b39617a7 (?) (1 samples, 0.44%)</title><rect x="1112" y="260" width="5" height="15" fill="rgb(227,143,43)"/><text x="1115.00" y="270.50"></text></g><g><title>0x7f07b3961379 (?) (1 samples, 0.44%)</title><rect x="1112" y="276" width="5" height="15" fill="rgb(250,67,14)"/><text x="1115.00" y="286.50"></text></g><g><title>0x7f07b3dbf8b8 (?) (1 samples, 0.44%)</title><rect x="1112" y="292" width="5" height="15" fill="rgb(253,116,20)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f07b3dbd4f6 (?) (1 samples, 0.44%)</title><rect x="1112" y="308" width="5" height="15" fill="rgb(238,75,40)"/><text x="1115.00" y="318.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1117" y="228" width="5" height="15" fill="rgb(243,186,46)"/><text x="1120.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1122" y="292" width="5" height="15" fill="rgb(249,41,43)"/><text x="1125.00" y="302.50"></text></g><g><title>0x7f07f38cd91e (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1122" y="308" width="5" height="15" fill="rgb(246,228,26)"/><text x="1125.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="340" width="6" height="15" fill="rgb(205,79,8)"/><text x="1135.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="356" width="6" height="15" fill="rgb(236,167,24)"/><text x="1135.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="372" width="6" height="15" fill="rgb(249,52,47)"/><text x="1135.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="388" width="6" height="15" fill="rgb(250,57,20)"/><text x="1135.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="404" width="6" height="15" fill="rgb(221,209,2)"/><text x="1135.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1132" y="420" width="6" height="15" fill="rgb(217,24,41)"/><text x="1135.00" y="430.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1138" y="340" width="5" height="15" fill="rgb(227,38,0)"/><text x="1141.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1143" y="340" width="5" height="15" fill="rgb(231,60,38)"/><text x="1146.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1143" y="356" width="5" height="15" fill="rgb(248,75,12)"/><text x="1146.00" y="366.50"></text></g><g><title>0x7f07f3a4ce4e (libm-2.29.so) (1 samples, 0.44%)</title><rect x="1143" y="372" width="5" height="15" fill="rgb(215,209,20)"/><text x="1146.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.64%)</title><rect x="1122" y="260" width="31" height="15" fill="rgb(241,190,15)"/><text x="1125.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.64%)</title><rect x="1122" y="276" width="31" height="15" fill="rgb(229,10,28)"/><text x="1125.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.20%)</title><rect x="1127" y="292" width="26" height="15" fill="rgb(248,219,17)"/><text x="1130.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.20%)</title><rect x="1127" y="308" width="26" height="15" fill="rgb(216,41,17)"/><text x="1130.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.20%)</title><rect x="1127" y="324" width="26" height="15" fill="rgb(231,100,49)"/><text x="1130.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1148" y="340" width="5" height="15" fill="rgb(220,70,12)"/><text x="1151.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1148" y="356" width="5" height="15" fill="rgb(231,181,1)"/><text x="1151.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1153" y="260" width="5" height="15" fill="rgb(246,196,16)"/><text x="1156.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1153" y="276" width="5" height="15" fill="rgb(246,99,19)"/><text x="1156.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="1153" y="292" width="5" height="15" fill="rgb(213,162,52)"/><text x="1156.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1153" y="308" width="5" height="15" fill="rgb(245,21,5)"/><text x="1156.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1158" y="260" width="6" height="15" fill="rgb(226,79,3)"/><text x="1161.00" y="270.50"></text></g><g><title>0x7f07f38edd50 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1158" y="276" width="6" height="15" fill="rgb(237,1,22)"/><text x="1161.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.96%)</title><rect x="1122" y="244" width="47" height="15" fill="rgb(205,99,18)"/><text x="1125.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="260" width="5" height="15" fill="rgb(216,59,41)"/><text x="1167.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="276" width="5" height="15" fill="rgb(248,169,22)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="292" width="5" height="15" fill="rgb(218,13,21)"/><text x="1167.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="308" width="5" height="15" fill="rgb(250,126,36)"/><text x="1167.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="324" width="5" height="15" fill="rgb(227,68,54)"/><text x="1167.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="340" width="5" height="15" fill="rgb(218,37,44)"/><text x="1167.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="356" width="5" height="15" fill="rgb(213,208,52)"/><text x="1167.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1164" y="372" width="5" height="15" fill="rgb(207,75,32)"/><text x="1167.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1169" y="244" width="5" height="15" fill="rgb(205,83,31)"/><text x="1172.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1169" y="260" width="5" height="15" fill="rgb(237,0,30)"/><text x="1172.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (23 samples, 10.13%)</title><rect x="1060" y="164" width="119" height="15" fill="rgb(250,98,5)"/><text x="1063.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (22 samples, 9.69%)</title><rect x="1065" y="180" width="114" height="15" fill="rgb(248,45,3)"/><text x="1068.00" y="190.50">run (mlprodict..</text></g><g><title>run (onnxruntime/capi/session.py:136) (16 samples, 7.05%)</title><rect x="1096" y="196" width="83" height="15" fill="rgb(220,68,37)"/><text x="1099.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 5.29%)</title><rect x="1117" y="212" width="62" height="15" fill="rgb(224,154,33)"/><text x="1120.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.85%)</title><rect x="1122" y="228" width="57" height="15" fill="rgb(232,201,53)"/><text x="1125.00" y="238.50">void p..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="244" width="5" height="15" fill="rgb(243,142,31)"/><text x="1177.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(207,177,21)"/><text x="1177.00" y="270.50"></text></g><g><title>all (227 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,138,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:52) (33 samples, 14.54%)</title><rect x="1018" y="52" width="172" height="15" fill="rgb(251,53,18)"/><text x="1021.00" y="62.50">&lt;module&gt; (bench_Logist..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:51) (33 samples, 14.54%)</title><rect x="1018" y="68" width="172" height="15" fill="rgb(254,180,21)"/><text x="1021.00" y="78.50">profile_ort (bench_Log..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:29) (33 samples, 14.54%)</title><rect x="1018" y="84" width="172" height="15" fill="rgb(241,99,23)"/><text x="1021.00" y="94.50">setup_profile (bench_L..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py:23) (33 samples, 14.54%)</title><rect x="1018" y="100" width="172" height="15" fill="rgb(234,20,53)"/><text x="1021.00" y="110.50">profile (bench_Logisti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (33 samples, 14.54%)</title><rect x="1018" y="116" width="172" height="15" fill="rgb(225,90,38)"/><text x="1021.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (28 samples, 12.33%)</title><rect x="1044" y="132" width="146" height="15" fill="rgb(223,26,16)"/><text x="1047.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (26 samples, 11.45%)</title><rect x="1054" y="148" width="136" height="15" fill="rgb(240,79,45)"/><text x="1057.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.88%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(237,124,27)"/><text x="1182.00" y="174.50"></text></g></g></svg>