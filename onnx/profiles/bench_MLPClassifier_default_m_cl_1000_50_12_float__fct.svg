<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1862" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1845.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1845.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(246,202,8)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(223,40,41)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(225,162,13)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(232,205,47)"/><text x="13.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(252,169,46)"/><text x="13.00" y="974.50"></text></g><g><title>isabs (ntpath.py) (1 samples, 0.17%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(232,71,5)"/><text x="13.00" y="990.50"></text></g><g><title>splitdrive (ntpath.py) (1 samples, 0.17%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(212,140,37)"/><text x="13.00" y="1006.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.17%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(222,197,23)"/><text x="13.00" y="1022.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(253,228,25)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(248,79,36)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(208,94,49)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(236,158,51)"/><text x="14.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.17%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(241,202,49)"/><text x="14.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.17%)</title><rect x="11" y="1060" width="2" height="15" fill="rgb(233,127,54)"/><text x="14.00" y="1070.50"></text></g><g><title>0x7f7864562541 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="11" y="1076" width="2" height="15" fill="rgb(220,209,20)"/><text x="14.00" y="1086.50"></text></g><g><title>0x7f78644dd4ce (libc-2.29.so) (1 samples, 0.17%)</title><rect x="11" y="1092" width="2" height="15" fill="rgb(225,120,5)"/><text x="14.00" y="1102.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(212,193,31)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(218,9,44)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="11" y="900" width="6" height="15" fill="rgb(244,105,9)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="11" y="916" width="6" height="15" fill="rgb(226,113,31)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="11" y="932" width="6" height="15" fill="rgb(249,161,3)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="11" y="948" width="6" height="15" fill="rgb(235,60,11)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="11" y="964" width="6" height="15" fill="rgb(207,47,50)"/><text x="14.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(217,123,5)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(214,35,40)"/><text x="16.00" y="1006.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(211,208,5)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="19" y="964" width="6" height="15" fill="rgb(243,55,22)"/><text x="22.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (3 samples, 0.50%)</title><rect x="19" y="980" width="6" height="15" fill="rgb(210,54,12)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (3 samples, 0.50%)</title><rect x="19" y="996" width="6" height="15" fill="rgb(239,153,15)"/><text x="22.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(225,155,4)"/><text x="24.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(212,30,20)"/><text x="24.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(217,118,34)"/><text x="26.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(250,12,8)"/><text x="26.00" y="1070.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(234,112,46)"/><text x="26.00" y="1086.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (5 samples, 0.84%)</title><rect x="17" y="868" width="10" height="15" fill="rgb(238,139,25)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (5 samples, 0.84%)</title><rect x="17" y="884" width="10" height="15" fill="rgb(249,50,42)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 0.84%)</title><rect x="17" y="900" width="10" height="15" fill="rgb(224,86,43)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 0.84%)</title><rect x="17" y="916" width="10" height="15" fill="rgb(250,183,54)"/><text x="20.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (5 samples, 0.84%)</title><rect x="17" y="932" width="10" height="15" fill="rgb(254,170,47)"/><text x="20.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="19" y="948" width="8" height="15" fill="rgb(206,140,10)"/><text x="22.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.17%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(212,214,38)"/><text x="28.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.17%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(213,26,42)"/><text x="28.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(227,197,23)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (11 samples, 1.85%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(208,72,47)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(223,193,15)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(217,158,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(223,110,33)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(212,145,11)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(233,0,12)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (11 samples, 1.85%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(247,12,28)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(207,107,44)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(215,139,1)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(249,135,26)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(213,205,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(227,41,23)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (11 samples, 1.85%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(237,191,0)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(214,90,14)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(226,130,43)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(236,123,25)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(237,109,14)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(223,27,16)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (11 samples, 1.85%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(235,60,32)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="596" width="21" height="15" fill="rgb(229,95,20)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="612" width="21" height="15" fill="rgb(237,205,12)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="628" width="21" height="15" fill="rgb(246,75,11)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="644" width="21" height="15" fill="rgb(233,85,30)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="660" width="21" height="15" fill="rgb(245,188,48)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="676" width="21" height="15" fill="rgb(236,131,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="10" y="692" width="21" height="15" fill="rgb(223,149,48)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="708" width="21" height="15" fill="rgb(247,47,26)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (11 samples, 1.85%)</title><rect x="10" y="724" width="21" height="15" fill="rgb(246,181,33)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="740" width="21" height="15" fill="rgb(231,178,13)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="756" width="21" height="15" fill="rgb(252,199,2)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="772" width="21" height="15" fill="rgb(225,128,54)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="10" y="788" width="21" height="15" fill="rgb(249,89,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="10" y="804" width="21" height="15" fill="rgb(246,119,7)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (11 samples, 1.85%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(215,221,54)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (11 samples, 1.85%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(233,212,30)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (11 samples, 1.85%)</title><rect x="10" y="852" width="21" height="15" fill="rgb(227,177,26)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="27" y="868" width="4" height="15" fill="rgb(232,139,1)"/><text x="30.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="27" y="884" width="4" height="15" fill="rgb(249,62,39)"/><text x="30.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(218,127,38)"/><text x="32.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(208,39,36)"/><text x="32.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(229,121,11)"/><text x="32.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(220,122,18)"/><text x="32.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(205,174,18)"/><text x="32.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(233,61,23)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.01%)</title><rect x="10" y="196" width="23" height="15" fill="rgb(221,74,16)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.01%)</title><rect x="10" y="212" width="23" height="15" fill="rgb(254,147,7)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.01%)</title><rect x="10" y="228" width="23" height="15" fill="rgb(209,21,23)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.01%)</title><rect x="10" y="244" width="23" height="15" fill="rgb(222,18,25)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.01%)</title><rect x="10" y="260" width="23" height="15" fill="rgb(221,16,53)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.01%)</title><rect x="10" y="276" width="23" height="15" fill="rgb(247,149,32)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(234,182,8)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(251,36,46)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(210,10,20)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(223,28,33)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(226,147,8)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(245,171,19)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.17%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(246,122,9)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(212,115,41)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(209,37,28)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(253,158,39)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(219,155,18)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(246,18,6)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(251,128,2)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(249,70,12)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(249,214,41)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(241,182,51)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(244,136,22)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(245,139,42)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.17%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(210,184,7)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(250,167,6)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(236,94,46)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(214,208,2)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(221,113,25)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(250,201,9)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(205,82,1)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(213,46,46)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(221,201,1)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(253,198,13)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(225,85,1)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(205,224,30)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.17%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(233,127,38)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(212,78,29)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(227,226,12)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(229,184,0)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(243,101,45)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(214,186,51)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(209,194,48)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(227,12,28)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.17%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(213,73,36)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(240,125,42)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(242,89,27)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(221,133,53)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(240,108,41)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(236,224,44)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(210,133,43)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(212,101,45)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.17%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(230,179,27)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(223,25,7)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(209,65,24)"/><text x="34.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(229,12,54)"/><text x="34.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(207,95,12)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.17%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(210,67,50)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(206,10,31)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(217,53,29)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(245,189,14)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(240,157,40)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(246,28,11)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(247,5,4)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(223,91,16)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(250,109,29)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(243,172,26)"/><text x="36.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(227,227,35)"/><text x="36.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(230,183,43)"/><text x="36.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(212,161,18)"/><text x="36.00" y="1406.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(241,34,21)"/><text x="36.00" y="1422.50"></text></g><g><title>0x7f78647bc995 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1428" width="2" height="15" fill="rgb(218,12,21)"/><text x="36.00" y="1438.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(214,221,6)"/><text x="36.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(232,110,10)"/><text x="36.00" y="1470.50"></text></g><g><title>0x7f78647bc258 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1476" width="2" height="15" fill="rgb(228,70,33)"/><text x="36.00" y="1486.50"></text></g><g><title>0x7f7864809d7a (ld-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(228,114,11)"/><text x="36.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(251,173,29)"/><text x="36.00" y="1518.50"></text></g><g><title>0x7f786480a18b (ld-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(220,163,21)"/><text x="36.00" y="1534.50"></text></g><g><title>0x7f78647ffab9 (ld-2.29.so) (1 samples, 0.17%)</title><rect x="33" y="1540" width="2" height="15" fill="rgb(233,167,54)"/><text x="36.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="33" y="1124" width="6" height="15" fill="rgb(245,138,37)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="33" y="1140" width="6" height="15" fill="rgb(229,163,31)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="33" y="1156" width="6" height="15" fill="rgb(222,35,24)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="33" y="1172" width="6" height="15" fill="rgb(234,181,43)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="33" y="1188" width="6" height="15" fill="rgb(236,132,16)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.34%)</title><rect x="35" y="1204" width="4" height="15" fill="rgb(205,145,43)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="35" y="1220" width="4" height="15" fill="rgb(215,229,53)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="35" y="1236" width="4" height="15" fill="rgb(239,17,31)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="35" y="1252" width="4" height="15" fill="rgb(251,112,47)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="35" y="1268" width="4" height="15" fill="rgb(239,117,12)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="35" y="1284" width="4" height="15" fill="rgb(208,121,52)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.34%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(226,178,41)"/><text x="38.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.34%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(224,24,29)"/><text x="38.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.34%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(229,13,11)"/><text x="38.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.34%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(228,34,34)"/><text x="38.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.34%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(230,213,50)"/><text x="38.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.34%)</title><rect x="35" y="1380" width="4" height="15" fill="rgb(217,150,26)"/><text x="38.00" y="1390.50"></text></g><g><title>_sre_SRE_Match_span (python3.7) (1 samples, 0.17%)</title><rect x="37" y="1396" width="2" height="15" fill="rgb(219,169,40)"/><text x="40.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1476" width="2" height="15" fill="rgb(206,14,28)"/><text x="42.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1492" width="2" height="15" fill="rgb(231,151,51)"/><text x="42.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1508" width="2" height="15" fill="rgb(209,124,15)"/><text x="42.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="39" y="1524" width="2" height="15" fill="rgb(223,109,28)"/><text x="42.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1540" width="2" height="15" fill="rgb(224,128,26)"/><text x="42.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="39" y="1556" width="2" height="15" fill="rgb(209,6,44)"/><text x="42.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="39" y="1572" width="2" height="15" fill="rgb(217,215,44)"/><text x="42.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="39" y="1588" width="2" height="15" fill="rgb(219,43,36)"/><text x="42.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="39" y="1604" width="2" height="15" fill="rgb(213,153,0)"/><text x="42.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="39" y="1620" width="2" height="15" fill="rgb(229,2,9)"/><text x="42.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="39" y="1636" width="2" height="15" fill="rgb(237,35,28)"/><text x="42.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="39" y="1652" width="2" height="15" fill="rgb(224,135,16)"/><text x="42.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="39" y="1668" width="2" height="15" fill="rgb(224,18,8)"/><text x="42.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="39" y="1684" width="2" height="15" fill="rgb(222,93,51)"/><text x="42.00" y="1694.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="39" y="1700" width="2" height="15" fill="rgb(242,5,17)"/><text x="42.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="39" y="1716" width="2" height="15" fill="rgb(207,128,9)"/><text x="42.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="39" y="1732" width="2" height="15" fill="rgb(215,90,4)"/><text x="42.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="39" y="1748" width="2" height="15" fill="rgb(210,93,41)"/><text x="42.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="39" y="1764" width="2" height="15" fill="rgb(233,138,8)"/><text x="42.00" y="1774.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.17%)</title><rect x="39" y="1780" width="2" height="15" fill="rgb(224,168,45)"/><text x="42.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="484" width="14" height="15" fill="rgb(213,55,15)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="500" width="14" height="15" fill="rgb(235,85,13)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="516" width="14" height="15" fill="rgb(247,42,34)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="532" width="14" height="15" fill="rgb(224,114,29)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="548" width="14" height="15" fill="rgb(219,49,42)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="564" width="14" height="15" fill="rgb(244,15,8)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 1.17%)</title><rect x="33" y="580" width="14" height="15" fill="rgb(240,58,41)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="596" width="14" height="15" fill="rgb(238,114,43)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="612" width="14" height="15" fill="rgb(247,8,19)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="628" width="14" height="15" fill="rgb(232,153,48)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="644" width="14" height="15" fill="rgb(210,147,43)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="660" width="14" height="15" fill="rgb(245,225,27)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 1.17%)</title><rect x="33" y="676" width="14" height="15" fill="rgb(207,106,43)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="692" width="14" height="15" fill="rgb(208,176,32)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="708" width="14" height="15" fill="rgb(209,116,23)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="724" width="14" height="15" fill="rgb(232,61,6)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="740" width="14" height="15" fill="rgb(246,118,49)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="756" width="14" height="15" fill="rgb(234,65,23)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 1.17%)</title><rect x="33" y="772" width="14" height="15" fill="rgb(213,177,37)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="788" width="14" height="15" fill="rgb(245,47,22)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="804" width="14" height="15" fill="rgb(221,7,38)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="820" width="14" height="15" fill="rgb(251,68,34)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="836" width="14" height="15" fill="rgb(223,134,16)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="852" width="14" height="15" fill="rgb(226,30,15)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 1.17%)</title><rect x="33" y="868" width="14" height="15" fill="rgb(221,205,23)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="884" width="14" height="15" fill="rgb(221,179,3)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="900" width="14" height="15" fill="rgb(219,190,24)"/><text x="36.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="916" width="14" height="15" fill="rgb(235,159,19)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="932" width="14" height="15" fill="rgb(233,128,25)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="948" width="14" height="15" fill="rgb(237,88,10)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="964" width="14" height="15" fill="rgb(244,168,34)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="980" width="14" height="15" fill="rgb(252,207,35)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="996" width="14" height="15" fill="rgb(233,28,17)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 1.17%)</title><rect x="33" y="1012" width="14" height="15" fill="rgb(216,163,22)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="1028" width="14" height="15" fill="rgb(233,155,42)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="1044" width="14" height="15" fill="rgb(234,65,29)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="1060" width="14" height="15" fill="rgb(239,49,52)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.17%)</title><rect x="33" y="1076" width="14" height="15" fill="rgb(232,93,34)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.17%)</title><rect x="33" y="1092" width="14" height="15" fill="rgb(240,78,6)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 1.17%)</title><rect x="33" y="1108" width="14" height="15" fill="rgb(254,59,41)"/><text x="36.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1124" width="8" height="15" fill="rgb(212,120,4)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1140" width="8" height="15" fill="rgb(211,159,25)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1156" width="8" height="15" fill="rgb(213,106,4)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1172" width="8" height="15" fill="rgb(251,132,53)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1188" width="8" height="15" fill="rgb(243,150,54)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="39" y="1204" width="8" height="15" fill="rgb(249,29,6)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1220" width="8" height="15" fill="rgb(244,190,48)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.67%)</title><rect x="39" y="1236" width="8" height="15" fill="rgb(215,41,21)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1252" width="8" height="15" fill="rgb(245,117,11)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1268" width="8" height="15" fill="rgb(250,54,53)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1284" width="8" height="15" fill="rgb(229,87,49)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1300" width="8" height="15" fill="rgb(248,171,47)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1316" width="8" height="15" fill="rgb(219,119,6)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="39" y="1332" width="8" height="15" fill="rgb(248,136,19)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1348" width="8" height="15" fill="rgb(214,182,14)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.67%)</title><rect x="39" y="1364" width="8" height="15" fill="rgb(241,98,51)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1380" width="8" height="15" fill="rgb(239,81,32)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1396" width="8" height="15" fill="rgb(233,145,6)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1412" width="8" height="15" fill="rgb(234,15,48)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="39" y="1428" width="8" height="15" fill="rgb(227,171,35)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="39" y="1444" width="8" height="15" fill="rgb(244,90,7)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.67%)</title><rect x="39" y="1460" width="8" height="15" fill="rgb(251,125,51)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.50%)</title><rect x="41" y="1476" width="6" height="15" fill="rgb(227,147,11)"/><text x="44.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.50%)</title><rect x="41" y="1492" width="6" height="15" fill="rgb(254,67,1)"/><text x="44.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.50%)</title><rect x="41" y="1508" width="6" height="15" fill="rgb(243,205,14)"/><text x="44.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.50%)</title><rect x="41" y="1524" width="6" height="15" fill="rgb(221,28,14)"/><text x="44.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.50%)</title><rect x="41" y="1540" width="6" height="15" fill="rgb(226,35,51)"/><text x="44.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.50%)</title><rect x="41" y="1556" width="6" height="15" fill="rgb(246,38,37)"/><text x="44.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.50%)</title><rect x="41" y="1572" width="6" height="15" fill="rgb(223,131,51)"/><text x="44.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.17%)</title><rect x="45" y="1588" width="2" height="15" fill="rgb(250,148,49)"/><text x="48.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="45" y="1604" width="2" height="15" fill="rgb(250,89,21)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="884" width="2" height="15" fill="rgb(210,51,8)"/><text x="50.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="900" width="2" height="15" fill="rgb(228,95,23)"/><text x="50.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="916" width="2" height="15" fill="rgb(224,100,38)"/><text x="50.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="932" width="2" height="15" fill="rgb(246,104,50)"/><text x="50.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="948" width="2" height="15" fill="rgb(241,226,53)"/><text x="50.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.17%)</title><rect x="47" y="964" width="2" height="15" fill="rgb(215,93,34)"/><text x="50.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="980" width="2" height="15" fill="rgb(231,13,49)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="996" width="2" height="15" fill="rgb(217,124,16)"/><text x="50.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1012" width="2" height="15" fill="rgb(230,176,19)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1028" width="2" height="15" fill="rgb(248,159,52)"/><text x="50.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1044" width="2" height="15" fill="rgb(231,30,23)"/><text x="50.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="1060" width="2" height="15" fill="rgb(229,43,31)"/><text x="50.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1076" width="2" height="15" fill="rgb(208,0,43)"/><text x="50.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.17%)</title><rect x="47" y="1092" width="2" height="15" fill="rgb(243,145,45)"/><text x="50.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1108" width="2" height="15" fill="rgb(215,32,5)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1124" width="2" height="15" fill="rgb(230,4,42)"/><text x="50.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1140" width="2" height="15" fill="rgb(247,87,10)"/><text x="50.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1156" width="2" height="15" fill="rgb(218,151,36)"/><text x="50.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1172" width="2" height="15" fill="rgb(247,26,26)"/><text x="50.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1188" width="2" height="15" fill="rgb(250,39,34)"/><text x="50.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="1204" width="2" height="15" fill="rgb(210,142,25)"/><text x="50.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1220" width="2" height="15" fill="rgb(246,129,0)"/><text x="50.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.17%)</title><rect x="47" y="1236" width="2" height="15" fill="rgb(225,200,38)"/><text x="50.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1252" width="2" height="15" fill="rgb(209,34,5)"/><text x="50.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1268" width="2" height="15" fill="rgb(245,158,41)"/><text x="50.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1284" width="2" height="15" fill="rgb(221,172,8)"/><text x="50.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="1300" width="2" height="15" fill="rgb(220,172,41)"/><text x="50.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1316" width="2" height="15" fill="rgb(241,69,40)"/><text x="50.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/core/util/hashing.py) (1 samples, 0.17%)</title><rect x="47" y="1332" width="2" height="15" fill="rgb(208,31,42)"/><text x="50.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1348" width="2" height="15" fill="rgb(237,127,37)"/><text x="50.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1364" width="2" height="15" fill="rgb(238,65,50)"/><text x="50.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1380" width="2" height="15" fill="rgb(208,187,26)"/><text x="50.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="1396" width="2" height="15" fill="rgb(239,73,48)"/><text x="50.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="1412" width="2" height="15" fill="rgb(219,176,15)"/><text x="50.00" y="1422.50"></text></g><g><title>0x7f7839410254 (?) (1 samples, 0.17%)</title><rect x="47" y="1428" width="2" height="15" fill="rgb(245,116,14)"/><text x="50.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="47" y="772" width="4" height="15" fill="rgb(217,175,49)"/><text x="50.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="47" y="788" width="4" height="15" fill="rgb(247,229,6)"/><text x="50.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="47" y="804" width="4" height="15" fill="rgb(211,187,21)"/><text x="50.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="47" y="820" width="4" height="15" fill="rgb(212,7,12)"/><text x="50.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="47" y="836" width="4" height="15" fill="rgb(251,12,15)"/><text x="50.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="47" y="852" width="4" height="15" fill="rgb(223,184,4)"/><text x="50.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.34%)</title><rect x="47" y="868" width="4" height="15" fill="rgb(218,57,23)"/><text x="50.00" y="878.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="884" width="2" height="15" fill="rgb(226,109,30)"/><text x="52.00" y="894.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.17%)</title><rect x="51" y="1028" width="2" height="15" fill="rgb(227,104,4)"/><text x="54.00" y="1038.50"></text></g><g><title>decorate (pandas/util/_decorators.py) (1 samples, 0.17%)</title><rect x="51" y="1044" width="2" height="15" fill="rgb(239,135,18)"/><text x="54.00" y="1054.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.17%)</title><rect x="51" y="1060" width="2" height="15" fill="rgb(211,228,47)"/><text x="54.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 1.85%)</title><rect x="33" y="340" width="22" height="15" fill="rgb(226,148,43)"/><text x="36.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="356" width="22" height="15" fill="rgb(237,70,38)"/><text x="36.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="372" width="22" height="15" fill="rgb(249,185,4)"/><text x="36.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="388" width="22" height="15" fill="rgb(213,198,30)"/><text x="36.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.85%)</title><rect x="33" y="404" width="22" height="15" fill="rgb(217,177,8)"/><text x="36.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="420" width="22" height="15" fill="rgb(219,97,11)"/><text x="36.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (11 samples, 1.85%)</title><rect x="33" y="436" width="22" height="15" fill="rgb(213,113,4)"/><text x="36.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="452" width="22" height="15" fill="rgb(234,55,21)"/><text x="36.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.85%)</title><rect x="33" y="468" width="22" height="15" fill="rgb(235,74,14)"/><text x="36.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="484" width="8" height="15" fill="rgb(223,72,54)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="47" y="500" width="8" height="15" fill="rgb(213,142,20)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="516" width="8" height="15" fill="rgb(224,23,41)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.67%)</title><rect x="47" y="532" width="8" height="15" fill="rgb(221,228,52)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="548" width="8" height="15" fill="rgb(251,127,43)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="564" width="8" height="15" fill="rgb(220,66,36)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="580" width="8" height="15" fill="rgb(254,198,1)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="47" y="596" width="8" height="15" fill="rgb(249,161,49)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="612" width="8" height="15" fill="rgb(243,117,13)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.67%)</title><rect x="47" y="628" width="8" height="15" fill="rgb(216,174,27)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="644" width="8" height="15" fill="rgb(246,105,31)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="660" width="8" height="15" fill="rgb(220,0,10)"/><text x="50.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="676" width="8" height="15" fill="rgb(245,104,48)"/><text x="50.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="47" y="692" width="8" height="15" fill="rgb(243,219,2)"/><text x="50.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="708" width="8" height="15" fill="rgb(207,12,16)"/><text x="50.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.67%)</title><rect x="47" y="724" width="8" height="15" fill="rgb(252,89,43)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="740" width="8" height="15" fill="rgb(251,185,50)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="47" y="756" width="8" height="15" fill="rgb(212,139,28)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="772" width="4" height="15" fill="rgb(217,215,17)"/><text x="54.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="51" y="788" width="4" height="15" fill="rgb(247,103,18)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="804" width="4" height="15" fill="rgb(225,161,50)"/><text x="54.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.34%)</title><rect x="51" y="820" width="4" height="15" fill="rgb(225,51,25)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="836" width="4" height="15" fill="rgb(240,169,37)"/><text x="54.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="852" width="4" height="15" fill="rgb(233,92,0)"/><text x="54.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="868" width="4" height="15" fill="rgb(248,224,9)"/><text x="54.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="51" y="884" width="4" height="15" fill="rgb(230,194,18)"/><text x="54.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="900" width="4" height="15" fill="rgb(238,113,12)"/><text x="54.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.34%)</title><rect x="51" y="916" width="4" height="15" fill="rgb(227,226,4)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="932" width="4" height="15" fill="rgb(210,206,24)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="948" width="4" height="15" fill="rgb(238,173,4)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="964" width="4" height="15" fill="rgb(225,39,46)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="51" y="980" width="4" height="15" fill="rgb(235,95,20)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="51" y="996" width="4" height="15" fill="rgb(233,138,16)"/><text x="54.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.34%)</title><rect x="51" y="1012" width="4" height="15" fill="rgb(230,40,11)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1028" width="2" height="15" fill="rgb(224,21,17)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1044" width="2" height="15" fill="rgb(240,31,41)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1060" width="2" height="15" fill="rgb(215,1,37)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1076" width="2" height="15" fill="rgb(232,188,10)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1092" width="2" height="15" fill="rgb(244,170,0)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.17%)</title><rect x="53" y="1108" width="2" height="15" fill="rgb(229,149,12)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1124" width="2" height="15" fill="rgb(253,183,50)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1140" width="2" height="15" fill="rgb(250,182,14)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1156" width="2" height="15" fill="rgb(235,86,32)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1172" width="2" height="15" fill="rgb(237,34,0)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1188" width="2" height="15" fill="rgb(218,162,34)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.17%)</title><rect x="53" y="1204" width="2" height="15" fill="rgb(246,37,19)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1220" width="2" height="15" fill="rgb(208,73,14)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1236" width="2" height="15" fill="rgb(240,5,0)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1252" width="2" height="15" fill="rgb(205,187,37)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1268" width="2" height="15" fill="rgb(254,95,31)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1284" width="2" height="15" fill="rgb(239,200,25)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.17%)</title><rect x="53" y="1300" width="2" height="15" fill="rgb(212,44,39)"/><text x="56.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1316" width="2" height="15" fill="rgb(252,60,50)"/><text x="56.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1332" width="2" height="15" fill="rgb(247,114,2)"/><text x="56.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1348" width="2" height="15" fill="rgb(227,152,16)"/><text x="56.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1364" width="2" height="15" fill="rgb(226,115,52)"/><text x="56.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1380" width="2" height="15" fill="rgb(221,209,38)"/><text x="56.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.17%)</title><rect x="53" y="1396" width="2" height="15" fill="rgb(220,80,31)"/><text x="56.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1412" width="2" height="15" fill="rgb(214,79,4)"/><text x="56.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1428" width="2" height="15" fill="rgb(224,114,22)"/><text x="56.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1444" width="2" height="15" fill="rgb(214,207,8)"/><text x="56.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1460" width="2" height="15" fill="rgb(238,145,49)"/><text x="56.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1476" width="2" height="15" fill="rgb(233,190,0)"/><text x="56.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.17%)</title><rect x="53" y="1492" width="2" height="15" fill="rgb(237,67,8)"/><text x="56.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1508" width="2" height="15" fill="rgb(248,81,34)"/><text x="56.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1524" width="2" height="15" fill="rgb(213,23,37)"/><text x="56.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1540" width="2" height="15" fill="rgb(234,134,1)"/><text x="56.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1556" width="2" height="15" fill="rgb(233,208,44)"/><text x="56.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1572" width="2" height="15" fill="rgb(249,40,54)"/><text x="56.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1588" width="2" height="15" fill="rgb(245,3,17)"/><text x="56.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1604" width="2" height="15" fill="rgb(236,186,14)"/><text x="56.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py) (1 samples, 0.17%)</title><rect x="53" y="1620" width="2" height="15" fill="rgb(213,189,18)"/><text x="56.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1636" width="2" height="15" fill="rgb(240,116,51)"/><text x="56.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1652" width="2" height="15" fill="rgb(235,181,40)"/><text x="56.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1668" width="2" height="15" fill="rgb(240,185,43)"/><text x="56.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1684" width="2" height="15" fill="rgb(220,165,12)"/><text x="56.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1700" width="2" height="15" fill="rgb(232,29,47)"/><text x="56.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py) (1 samples, 0.17%)</title><rect x="53" y="1716" width="2" height="15" fill="rgb(247,227,23)"/><text x="56.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1732" width="2" height="15" fill="rgb(233,19,23)"/><text x="56.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1748" width="2" height="15" fill="rgb(238,227,25)"/><text x="56.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1764" width="2" height="15" fill="rgb(236,67,13)"/><text x="56.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="53" y="1780" width="2" height="15" fill="rgb(212,88,8)"/><text x="56.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="53" y="1796" width="2" height="15" fill="rgb(246,170,43)"/><text x="56.00" y="1806.50"></text></g><g><title>&lt;module&gt; (matplotlib/ticker.py) (1 samples, 0.17%)</title><rect x="53" y="1812" width="2" height="15" fill="rgb(229,137,32)"/><text x="56.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (1 samples, 0.17%)</title><rect x="55" y="484" width="2" height="15" fill="rgb(246,93,33)"/><text x="58.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="500" width="2" height="15" fill="rgb(246,83,7)"/><text x="58.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="516" width="2" height="15" fill="rgb(209,181,26)"/><text x="58.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="532" width="2" height="15" fill="rgb(228,74,23)"/><text x="58.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="548" width="2" height="15" fill="rgb(240,29,39)"/><text x="58.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="564" width="2" height="15" fill="rgb(245,100,35)"/><text x="58.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (1 samples, 0.17%)</title><rect x="55" y="580" width="2" height="15" fill="rgb(249,186,10)"/><text x="58.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="596" width="2" height="15" fill="rgb(238,156,43)"/><text x="58.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="612" width="2" height="15" fill="rgb(236,129,4)"/><text x="58.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="628" width="2" height="15" fill="rgb(219,181,39)"/><text x="58.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="644" width="2" height="15" fill="rgb(254,226,3)"/><text x="58.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="660" width="2" height="15" fill="rgb(234,208,14)"/><text x="58.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py) (1 samples, 0.17%)</title><rect x="55" y="676" width="2" height="15" fill="rgb(238,203,53)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="692" width="2" height="15" fill="rgb(211,190,42)"/><text x="58.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="708" width="2" height="15" fill="rgb(229,39,22)"/><text x="58.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="724" width="2" height="15" fill="rgb(225,160,43)"/><text x="58.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="740" width="2" height="15" fill="rgb(213,24,54)"/><text x="58.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="756" width="2" height="15" fill="rgb(216,145,5)"/><text x="58.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py) (1 samples, 0.17%)</title><rect x="55" y="772" width="2" height="15" fill="rgb(220,112,50)"/><text x="58.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="788" width="2" height="15" fill="rgb(224,228,10)"/><text x="58.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="804" width="2" height="15" fill="rgb(237,154,11)"/><text x="58.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="820" width="2" height="15" fill="rgb(248,138,9)"/><text x="58.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="836" width="2" height="15" fill="rgb(217,140,14)"/><text x="58.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="852" width="2" height="15" fill="rgb(207,187,53)"/><text x="58.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py) (1 samples, 0.17%)</title><rect x="55" y="868" width="2" height="15" fill="rgb(230,17,38)"/><text x="58.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="884" width="2" height="15" fill="rgb(254,143,21)"/><text x="58.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="900" width="2" height="15" fill="rgb(244,115,53)"/><text x="58.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="916" width="2" height="15" fill="rgb(238,94,42)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="932" width="2" height="15" fill="rgb(213,111,38)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="948" width="2" height="15" fill="rgb(234,11,28)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="964" width="2" height="15" fill="rgb(254,76,31)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="980" width="2" height="15" fill="rgb(249,9,14)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="996" width="2" height="15" fill="rgb(243,108,20)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py) (1 samples, 0.17%)</title><rect x="55" y="1012" width="2" height="15" fill="rgb(244,56,5)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1028" width="2" height="15" fill="rgb(229,147,8)"/><text x="58.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1044" width="2" height="15" fill="rgb(226,126,23)"/><text x="58.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1060" width="2" height="15" fill="rgb(222,75,28)"/><text x="58.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="1076" width="2" height="15" fill="rgb(212,183,41)"/><text x="58.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1092" width="2" height="15" fill="rgb(222,167,23)"/><text x="58.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py) (1 samples, 0.17%)</title><rect x="55" y="1108" width="2" height="15" fill="rgb(229,96,21)"/><text x="58.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1124" width="2" height="15" fill="rgb(211,147,32)"/><text x="58.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1140" width="2" height="15" fill="rgb(205,56,29)"/><text x="58.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1156" width="2" height="15" fill="rgb(211,29,12)"/><text x="58.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="1172" width="2" height="15" fill="rgb(213,215,4)"/><text x="58.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1188" width="2" height="15" fill="rgb(237,221,22)"/><text x="58.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gactions.py) (1 samples, 0.17%)</title><rect x="55" y="1204" width="2" height="15" fill="rgb(241,139,50)"/><text x="58.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1220" width="2" height="15" fill="rgb(211,218,20)"/><text x="58.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1236" width="2" height="15" fill="rgb(241,191,38)"/><text x="58.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1252" width="2" height="15" fill="rgb(220,18,8)"/><text x="58.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="55" y="1268" width="2" height="15" fill="rgb(205,42,8)"/><text x="58.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1284" width="2" height="15" fill="rgb(206,208,16)"/><text x="58.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gtypes.py) (1 samples, 0.17%)</title><rect x="55" y="1300" width="2" height="15" fill="rgb(242,80,19)"/><text x="58.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="55" y="1316" width="2" height="15" fill="rgb(212,67,39)"/><text x="58.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 2.18%)</title><rect x="33" y="244" width="26" height="15" fill="rgb(222,181,31)"/><text x="36.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.18%)</title><rect x="33" y="260" width="26" height="15" fill="rgb(208,145,53)"/><text x="36.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.18%)</title><rect x="33" y="276" width="26" height="15" fill="rgb(236,184,36)"/><text x="36.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.18%)</title><rect x="33" y="292" width="26" height="15" fill="rgb(222,80,23)"/><text x="36.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.18%)</title><rect x="33" y="308" width="26" height="15" fill="rgb(213,19,43)"/><text x="36.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.18%)</title><rect x="33" y="324" width="26" height="15" fill="rgb(229,22,37)"/><text x="36.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.34%)</title><rect x="55" y="340" width="4" height="15" fill="rgb(244,209,25)"/><text x="58.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="356" width="4" height="15" fill="rgb(236,194,25)"/><text x="58.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="372" width="4" height="15" fill="rgb(245,83,45)"/><text x="58.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="388" width="4" height="15" fill="rgb(207,153,50)"/><text x="58.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="404" width="4" height="15" fill="rgb(240,143,36)"/><text x="58.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="420" width="4" height="15" fill="rgb(210,47,11)"/><text x="58.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="436" width="4" height="15" fill="rgb(215,61,28)"/><text x="58.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="55" y="452" width="4" height="15" fill="rgb(238,171,39)"/><text x="58.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="55" y="468" width="4" height="15" fill="rgb(246,154,21)"/><text x="58.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.17%)</title><rect x="57" y="484" width="2" height="15" fill="rgb(210,146,4)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="500" width="2" height="15" fill="rgb(210,120,35)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="516" width="2" height="15" fill="rgb(243,154,2)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="532" width="2" height="15" fill="rgb(227,18,47)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="548" width="2" height="15" fill="rgb(245,212,27)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="564" width="2" height="15" fill="rgb(206,225,22)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.17%)</title><rect x="57" y="580" width="2" height="15" fill="rgb(227,105,6)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="596" width="2" height="15" fill="rgb(254,118,42)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="612" width="2" height="15" fill="rgb(213,190,45)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="628" width="2" height="15" fill="rgb(242,132,1)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="644" width="2" height="15" fill="rgb(241,153,19)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="660" width="2" height="15" fill="rgb(220,74,28)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.17%)</title><rect x="57" y="676" width="2" height="15" fill="rgb(217,30,22)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="692" width="2" height="15" fill="rgb(206,203,20)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="708" width="2" height="15" fill="rgb(205,33,23)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="724" width="2" height="15" fill="rgb(212,86,10)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="740" width="2" height="15" fill="rgb(211,142,15)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="756" width="2" height="15" fill="rgb(221,166,35)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.17%)</title><rect x="57" y="772" width="2" height="15" fill="rgb(248,115,17)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="788" width="2" height="15" fill="rgb(216,164,21)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="804" width="2" height="15" fill="rgb(222,9,16)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="820" width="2" height="15" fill="rgb(222,119,33)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="836" width="2" height="15" fill="rgb(226,134,3)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="852" width="2" height="15" fill="rgb(230,218,31)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.17%)</title><rect x="57" y="868" width="2" height="15" fill="rgb(214,228,20)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="884" width="2" height="15" fill="rgb(231,195,16)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="900" width="2" height="15" fill="rgb(235,22,18)"/><text x="60.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="916" width="2" height="15" fill="rgb(248,160,44)"/><text x="60.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="932" width="2" height="15" fill="rgb(211,139,20)"/><text x="60.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="948" width="2" height="15" fill="rgb(223,53,35)"/><text x="60.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.17%)</title><rect x="57" y="964" width="2" height="15" fill="rgb(229,181,3)"/><text x="60.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="980" width="2" height="15" fill="rgb(253,137,11)"/><text x="60.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="996" width="2" height="15" fill="rgb(221,54,40)"/><text x="60.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1012" width="2" height="15" fill="rgb(235,90,11)"/><text x="60.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="1028" width="2" height="15" fill="rgb(206,102,10)"/><text x="60.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1044" width="2" height="15" fill="rgb(245,137,14)"/><text x="60.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.17%)</title><rect x="57" y="1060" width="2" height="15" fill="rgb(205,147,9)"/><text x="60.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1076" width="2" height="15" fill="rgb(218,51,33)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1092" width="2" height="15" fill="rgb(222,38,33)"/><text x="60.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1108" width="2" height="15" fill="rgb(235,25,53)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1124" width="2" height="15" fill="rgb(236,184,11)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1140" width="2" height="15" fill="rgb(243,5,50)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1156" width="2" height="15" fill="rgb(230,109,4)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="1172" width="2" height="15" fill="rgb(249,228,45)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1188" width="2" height="15" fill="rgb(230,107,38)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.17%)</title><rect x="57" y="1204" width="2" height="15" fill="rgb(224,25,32)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1220" width="2" height="15" fill="rgb(228,20,36)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1236" width="2" height="15" fill="rgb(222,63,24)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1252" width="2" height="15" fill="rgb(241,17,8)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="1268" width="2" height="15" fill="rgb(232,148,43)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1284" width="2" height="15" fill="rgb(212,163,31)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.17%)</title><rect x="57" y="1300" width="2" height="15" fill="rgb(223,41,9)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1316" width="2" height="15" fill="rgb(228,173,23)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1332" width="2" height="15" fill="rgb(229,103,25)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1348" width="2" height="15" fill="rgb(208,31,3)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="57" y="1364" width="2" height="15" fill="rgb(214,222,20)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="57" y="1380" width="2" height="15" fill="rgb(243,37,17)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.17%)</title><rect x="57" y="1396" width="2" height="15" fill="rgb(251,57,7)"/><text x="60.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="57" y="1412" width="2" height="15" fill="rgb(211,32,10)"/><text x="60.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="57" y="1428" width="2" height="15" fill="rgb(244,179,21)"/><text x="60.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="57" y="1444" width="2" height="15" fill="rgb(247,227,4)"/><text x="60.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1460" width="2" height="15" fill="rgb(217,32,20)"/><text x="60.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1476" width="2" height="15" fill="rgb(230,5,28)"/><text x="60.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1492" width="2" height="15" fill="rgb(251,219,47)"/><text x="60.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1508" width="2" height="15" fill="rgb(236,87,43)"/><text x="60.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1524" width="2" height="15" fill="rgb(236,68,7)"/><text x="60.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1540" width="2" height="15" fill="rgb(215,179,5)"/><text x="60.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="57" y="1556" width="2" height="15" fill="rgb(225,57,3)"/><text x="60.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="260" width="2" height="15" fill="rgb(217,143,13)"/><text x="62.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="276" width="2" height="15" fill="rgb(210,23,8)"/><text x="62.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="292" width="2" height="15" fill="rgb(210,19,26)"/><text x="62.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="308" width="2" height="15" fill="rgb(242,0,6)"/><text x="62.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="324" width="2" height="15" fill="rgb(207,210,48)"/><text x="62.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.17%)</title><rect x="59" y="340" width="2" height="15" fill="rgb(208,153,35)"/><text x="62.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="356" width="2" height="15" fill="rgb(246,213,3)"/><text x="62.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="372" width="2" height="15" fill="rgb(247,38,28)"/><text x="62.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="388" width="2" height="15" fill="rgb(218,14,51)"/><text x="62.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="404" width="2" height="15" fill="rgb(249,103,3)"/><text x="62.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="420" width="2" height="15" fill="rgb(254,104,10)"/><text x="62.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.17%)</title><rect x="59" y="436" width="2" height="15" fill="rgb(210,174,16)"/><text x="62.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="452" width="2" height="15" fill="rgb(229,107,21)"/><text x="62.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="468" width="2" height="15" fill="rgb(224,90,27)"/><text x="62.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="484" width="2" height="15" fill="rgb(234,48,43)"/><text x="62.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="500" width="2" height="15" fill="rgb(242,35,40)"/><text x="62.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="516" width="2" height="15" fill="rgb(245,43,9)"/><text x="62.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py) (1 samples, 0.17%)</title><rect x="59" y="532" width="2" height="15" fill="rgb(224,143,37)"/><text x="62.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="548" width="2" height="15" fill="rgb(212,50,7)"/><text x="62.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="564" width="2" height="15" fill="rgb(210,129,49)"/><text x="62.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="580" width="2" height="15" fill="rgb(237,194,8)"/><text x="62.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="596" width="2" height="15" fill="rgb(247,186,8)"/><text x="62.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="612" width="2" height="15" fill="rgb(251,49,23)"/><text x="62.00" y="622.50"></text></g><g><title>&lt;module&gt; (argparse.py) (1 samples, 0.17%)</title><rect x="59" y="628" width="2" height="15" fill="rgb(226,75,1)"/><text x="62.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="644" width="2" height="15" fill="rgb(231,38,1)"/><text x="62.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="660" width="2" height="15" fill="rgb(209,216,44)"/><text x="62.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="676" width="2" height="15" fill="rgb(246,158,49)"/><text x="62.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="692" width="2" height="15" fill="rgb(240,101,15)"/><text x="62.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="708" width="2" height="15" fill="rgb(238,48,5)"/><text x="62.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="59" y="724" width="2" height="15" fill="rgb(233,110,17)"/><text x="62.00" y="734.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="59" y="740" width="2" height="15" fill="rgb(230,132,9)"/><text x="62.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(209,134,33)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(237,97,42)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(240,82,15)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (27 samples, 4.53%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(212,187,17)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(243,78,26)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (27 samples, 4.53%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(232,82,16)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(247,191,46)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (27 samples, 4.53%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(243,125,50)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.52%)</title><rect x="33" y="196" width="30" height="15" fill="rgb(232,41,46)"/><text x="36.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.52%)</title><rect x="33" y="212" width="30" height="15" fill="rgb(207,124,14)"/><text x="36.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.52%)</title><rect x="33" y="228" width="30" height="15" fill="rgb(230,217,41)"/><text x="36.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.34%)</title><rect x="59" y="244" width="4" height="15" fill="rgb(209,113,0)"/><text x="62.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="260" width="2" height="15" fill="rgb(224,77,2)"/><text x="64.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="276" width="2" height="15" fill="rgb(240,108,21)"/><text x="64.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="292" width="2" height="15" fill="rgb(245,94,7)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="308" width="2" height="15" fill="rgb(243,123,33)"/><text x="64.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="324" width="2" height="15" fill="rgb(217,70,44)"/><text x="64.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(224,79,5)"/><text x="64.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="356" width="2" height="15" fill="rgb(253,32,37)"/><text x="64.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.17%)</title><rect x="61" y="372" width="2" height="15" fill="rgb(208,44,37)"/><text x="64.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="388" width="2" height="15" fill="rgb(253,157,24)"/><text x="64.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="404" width="2" height="15" fill="rgb(253,8,37)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="420" width="2" height="15" fill="rgb(230,224,13)"/><text x="64.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="436" width="2" height="15" fill="rgb(206,130,43)"/><text x="64.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="452" width="2" height="15" fill="rgb(232,195,45)"/><text x="64.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="61" y="468" width="2" height="15" fill="rgb(219,186,16)"/><text x="64.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="484" width="2" height="15" fill="rgb(212,188,23)"/><text x="64.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.17%)</title><rect x="61" y="500" width="2" height="15" fill="rgb(238,173,8)"/><text x="64.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="516" width="2" height="15" fill="rgb(232,112,47)"/><text x="64.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="532" width="2" height="15" fill="rgb(229,202,25)"/><text x="64.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="548" width="2" height="15" fill="rgb(241,121,54)"/><text x="64.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="564" width="2" height="15" fill="rgb(244,53,9)"/><text x="64.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="580" width="2" height="15" fill="rgb(209,144,52)"/><text x="64.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="61" y="596" width="2" height="15" fill="rgb(219,68,48)"/><text x="64.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="612" width="2" height="15" fill="rgb(249,200,38)"/><text x="64.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py) (1 samples, 0.17%)</title><rect x="61" y="628" width="2" height="15" fill="rgb(243,40,53)"/><text x="64.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="644" width="2" height="15" fill="rgb(238,101,41)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="660" width="2" height="15" fill="rgb(223,82,35)"/><text x="64.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="676" width="2" height="15" fill="rgb(223,26,13)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="692" width="2" height="15" fill="rgb(240,197,17)"/><text x="64.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="708" width="2" height="15" fill="rgb(219,201,34)"/><text x="64.00" y="718.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="61" y="724" width="2" height="15" fill="rgb(207,114,23)"/><text x="64.00" y="734.50"></text></g><g><title>0x7f7864533bc6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="89" y="132" width="2" height="15" fill="rgb(221,16,30)"/><text x="92.00" y="142.50"></text></g><g><title>0x7f7864533bdf (libc-2.29.so) (1 samples, 0.17%)</title><rect x="91" y="132" width="2" height="15" fill="rgb(229,21,52)"/><text x="94.00" y="142.50"></text></g><g><title>0x7f7864533bf8 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="93" y="132" width="2" height="15" fill="rgb(225,78,15)"/><text x="96.00" y="142.50"></text></g><g><title>0x7f7864533c41 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="95" y="132" width="2" height="15" fill="rgb(219,29,32)"/><text x="98.00" y="142.50"></text></g><g><title>0x7f7864533c6a (libc-2.29.so) (2 samples, 0.34%)</title><rect x="97" y="132" width="4" height="15" fill="rgb(249,13,40)"/><text x="100.00" y="142.50"></text></g><g><title>0x7f7864534eb0 (libc-2.29.so) (9 samples, 1.51%)</title><rect x="89" y="116" width="18" height="15" fill="rgb(243,178,43)"/><text x="92.00" y="126.50"></text></g><g><title>0x7f7864533c73 (libc-2.29.so) (3 samples, 0.50%)</title><rect x="101" y="132" width="6" height="15" fill="rgb(235,34,4)"/><text x="104.00" y="142.50"></text></g><g><title>0x7f7864533ad5 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="105" y="148" width="2" height="15" fill="rgb(246,143,11)"/><text x="108.00" y="158.50"></text></g><g><title>0x7f7822577ff9 (?) (1 samples, 0.17%)</title><rect x="108" y="212" width="2" height="15" fill="rgb(234,62,43)"/><text x="111.00" y="222.50"></text></g><g><title>0x7f7822572ef6 (?) (1 samples, 0.17%)</title><rect x="108" y="228" width="2" height="15" fill="rgb(213,221,33)"/><text x="111.00" y="238.50"></text></g><g><title>0x7f7822567962 (?) (1 samples, 0.17%)</title><rect x="108" y="244" width="2" height="15" fill="rgb(224,9,43)"/><text x="111.00" y="254.50"></text></g><g><title>0x7f782259b7a7 (?) (1 samples, 0.17%)</title><rect x="108" y="260" width="2" height="15" fill="rgb(219,43,33)"/><text x="111.00" y="270.50"></text></g><g><title>0x7f782259b379 (?) (1 samples, 0.17%)</title><rect x="108" y="276" width="2" height="15" fill="rgb(239,1,12)"/><text x="111.00" y="286.50"></text></g><g><title>0x7f78229f98b8 (?) (1 samples, 0.17%)</title><rect x="108" y="292" width="2" height="15" fill="rgb(207,39,41)"/><text x="111.00" y="302.50"></text></g><g><title>0x7f78229f7c7f (?) (1 samples, 0.17%)</title><rect x="108" y="308" width="2" height="15" fill="rgb(210,162,49)"/><text x="111.00" y="318.50"></text></g><g><title>0x7f7822a0a99c (?) (1 samples, 0.17%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(229,40,18)"/><text x="111.00" y="334.50"></text></g><g><title>0x7f782268f7c3 (?) (1 samples, 0.17%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(234,205,35)"/><text x="111.00" y="350.50"></text></g><g><title>0x7f7822978fac (?) (1 samples, 0.17%)</title><rect x="108" y="356" width="2" height="15" fill="rgb(238,32,45)"/><text x="111.00" y="366.50"></text></g><g><title>0x7f781a6f00f1 (?) (1 samples, 0.17%)</title><rect x="108" y="372" width="2" height="15" fill="rgb(221,166,45)"/><text x="111.00" y="382.50"></text></g><g><title>0x7f781a7364cf (?) (1 samples, 0.17%)</title><rect x="108" y="388" width="2" height="15" fill="rgb(249,87,42)"/><text x="111.00" y="398.50"></text></g><g><title>0x7f781a7c86ad (?) (1 samples, 0.17%)</title><rect x="108" y="404" width="2" height="15" fill="rgb(229,195,16)"/><text x="111.00" y="414.50"></text></g><g><title>0x7f781a90aeb6 (?) (1 samples, 0.17%)</title><rect x="108" y="420" width="2" height="15" fill="rgb(250,76,37)"/><text x="111.00" y="430.50"></text></g><g><title>0x7f781a9541f0 (?) (1 samples, 0.17%)</title><rect x="108" y="436" width="2" height="15" fill="rgb(234,3,23)"/><text x="111.00" y="446.50"></text></g><g><title>0x7f781b32fea6 (?) (1 samples, 0.17%)</title><rect x="108" y="452" width="2" height="15" fill="rgb(223,198,35)"/><text x="111.00" y="462.50"></text></g><g><title>0x7f781b539d09 (?) (1 samples, 0.17%)</title><rect x="108" y="468" width="2" height="15" fill="rgb(216,229,37)"/><text x="111.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (12 samples, 2.01%)</title><rect x="110" y="212" width="24" height="15" fill="rgb(235,17,6)"/><text x="113.00" y="222.50">m..</text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="138" y="340" width="6" height="15" fill="rgb(212,186,27)"/><text x="141.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="138" y="356" width="6" height="15" fill="rgb(240,95,39)"/><text x="141.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="144" y="340" width="6" height="15" fill="rgb(253,195,7)"/><text x="147.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="150" y="340" width="2" height="15" fill="rgb(211,148,5)"/><text x="153.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="150" y="356" width="2" height="15" fill="rgb(242,169,5)"/><text x="153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="150" y="372" width="2" height="15" fill="rgb(207,121,50)"/><text x="153.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="150" y="388" width="2" height="15" fill="rgb(232,144,54)"/><text x="153.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="150" y="404" width="2" height="15" fill="rgb(222,216,43)"/><text x="153.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="152" y="340" width="2" height="15" fill="rgb(230,127,26)"/><text x="155.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="152" y="356" width="2" height="15" fill="rgb(253,13,7)"/><text x="155.00" y="366.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="168" y="564" width="4" height="15" fill="rgb(214,120,32)"/><text x="171.00" y="574.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (3 samples, 0.50%)</title><rect x="168" y="452" width="6" height="15" fill="rgb(218,220,54)"/><text x="171.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (3 samples, 0.50%)</title><rect x="168" y="468" width="6" height="15" fill="rgb(236,173,1)"/><text x="171.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (3 samples, 0.50%)</title><rect x="168" y="484" width="6" height="15" fill="rgb(218,86,7)"/><text x="171.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.50%)</title><rect x="168" y="500" width="6" height="15" fill="rgb(207,150,22)"/><text x="171.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.50%)</title><rect x="168" y="516" width="6" height="15" fill="rgb(208,78,46)"/><text x="171.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.50%)</title><rect x="168" y="532" width="6" height="15" fill="rgb(243,114,23)"/><text x="171.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.50%)</title><rect x="168" y="548" width="6" height="15" fill="rgb(205,112,45)"/><text x="171.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_get_bufs (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.17%)</title><rect x="172" y="564" width="2" height="15" fill="rgb(225,68,37)"/><text x="175.00" y="574.50"></text></g><g><title>__kmpc_fork_call (libiomp5.so) (21 samples, 3.52%)</title><rect x="168" y="436" width="41" height="15" fill="rgb(226,217,7)"/><text x="171.00" y="446.50">__k..</text></g><g><title>__kmp_join_call (libiomp5.so) (18 samples, 3.02%)</title><rect x="174" y="452" width="35" height="15" fill="rgb(238,226,41)"/><text x="177.00" y="462.50">__..</text></g><g><title>__kmp_internal_join (libiomp5.so) (18 samples, 3.02%)</title><rect x="174" y="468" width="35" height="15" fill="rgb(224,29,37)"/><text x="177.00" y="478.50">__..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (18 samples, 3.02%)</title><rect x="174" y="484" width="35" height="15" fill="rgb(248,19,32)"/><text x="177.00" y="494.50">__..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (18 samples, 3.02%)</title><rect x="174" y="500" width="35" height="15" fill="rgb(247,221,1)"/><text x="177.00" y="510.50">_I..</text></g><g><title>sched_yield (libc-2.29.so) (5 samples, 0.84%)</title><rect x="200" y="516" width="9" height="15" fill="rgb(235,83,38)"/><text x="203.00" y="526.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (54 samples, 9.06%)</title><rect x="168" y="404" width="107" height="15" fill="rgb(207,0,47)"/><text x="171.00" y="414.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (54 samples, 9.06%)</title><rect x="168" y="420" width="107" height="15" fill="rgb(234,25,37)"/><text x="171.00" y="430.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (33 samples, 5.54%)</title><rect x="209" y="436" width="66" height="15" fill="rgb(230,165,25)"/><text x="212.00" y="446.50">mkl_bla..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (33 samples, 5.54%)</title><rect x="209" y="452" width="66" height="15" fill="rgb(237,158,2)"/><text x="212.00" y="462.50">mkl_bla..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (33 samples, 5.54%)</title><rect x="209" y="468" width="66" height="15" fill="rgb(214,217,23)"/><text x="212.00" y="478.50">mkl_bla..</text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (62 samples, 10.40%)</title><rect x="154" y="340" width="123" height="15" fill="rgb(247,143,19)"/><text x="157.00" y="350.50">onnxruntime::Ge..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 9.40%)</title><rect x="166" y="356" width="111" height="15" fill="rgb(254,161,13)"/><text x="169.00" y="366.50">onnxruntime::..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (56 samples, 9.40%)</title><rect x="166" y="372" width="111" height="15" fill="rgb(235,20,32)"/><text x="169.00" y="382.50">cblas_sgemm (..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (56 samples, 9.40%)</title><rect x="166" y="388" width="111" height="15" fill="rgb(233,195,8)"/><text x="169.00" y="398.50">sgemm_ (onnxr..</text></g><g><title>mkl_serv_set_xerbla_interface (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.17%)</title><rect x="275" y="404" width="2" height="15" fill="rgb(222,60,38)"/><text x="278.00" y="414.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="277" y="420" width="2" height="15" fill="rgb(209,196,51)"/><text x="280.00" y="430.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="277" y="372" width="4" height="15" fill="rgb(239,67,20)"/><text x="280.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="277" y="388" width="4" height="15" fill="rgb(236,138,18)"/><text x="280.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="277" y="404" width="4" height="15" fill="rgb(240,117,45)"/><text x="280.00" y="414.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="279" y="420" width="2" height="15" fill="rgb(221,150,14)"/><text x="282.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="279" y="436" width="2" height="15" fill="rgb(230,76,20)"/><text x="282.00" y="446.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="388" width="6" height="15" fill="rgb(219,6,22)"/><text x="284.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="404" width="6" height="15" fill="rgb(214,130,13)"/><text x="284.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="420" width="6" height="15" fill="rgb(216,188,18)"/><text x="284.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="436" width="6" height="15" fill="rgb(209,190,16)"/><text x="284.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="452" width="6" height="15" fill="rgb(254,119,38)"/><text x="284.00" y="462.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNS12_IlLi4EEES18_S18_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="468" width="6" height="15" fill="rgb(208,41,32)"/><text x="284.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="484" width="6" height="15" fill="rgb(224,53,14)"/><text x="284.00" y="494.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="281" y="500" width="6" height="15" fill="rgb(219,137,50)"/><text x="284.00" y="510.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.34%)</title><rect x="277" y="356" width="16" height="15" fill="rgb(251,219,4)"/><text x="280.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.01%)</title><rect x="281" y="372" width="12" height="15" fill="rgb(251,153,42)"/><text x="284.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="287" y="388" width="6" height="15" fill="rgb(209,198,0)"/><text x="290.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="287" y="404" width="6" height="15" fill="rgb(222,91,13)"/><text x="290.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.50%)</title><rect x="287" y="420" width="6" height="15" fill="rgb(227,65,43)"/><text x="290.00" y="430.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.51%)</title><rect x="277" y="340" width="18" height="15" fill="rgb(218,195,3)"/><text x="280.00" y="350.50"></text></g><g><title>onnxruntime::concurrency::ThreadPool::NumThreads (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="293" y="356" width="2" height="15" fill="rgb(219,44,36)"/><text x="296.00" y="366.50"></text></g><g><title>0x7f7854000d50 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="299" y="372" width="2" height="15" fill="rgb(216,81,29)"/><text x="302.00" y="382.50"></text></g><g><title>0x7f7864535fd2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(246,155,25)"/><text x="337.00" y="398.50"></text></g><g><title>0x7f7864535fde (libc-2.29.so) (1 samples, 0.17%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(232,200,22)"/><text x="339.00" y="398.50"></text></g><g><title>0x7f7864535fe6 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="338" y="388" width="4" height="15" fill="rgb(236,55,26)"/><text x="341.00" y="398.50"></text></g><g><title>0x7f7864536368 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="342" y="388" width="2" height="15" fill="rgb(238,69,43)"/><text x="345.00" y="398.50"></text></g><g><title>0x7f7864536384 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="344" y="388" width="2" height="15" fill="rgb(241,130,18)"/><text x="347.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (26 samples, 4.36%)</title><rect x="299" y="356" width="51" height="15" fill="rgb(219,211,15)"/><text x="302.00" y="366.50">opera..</text></g><g><title>malloc (libc-2.29.so) (25 samples, 4.19%)</title><rect x="301" y="372" width="49" height="15" fill="rgb(245,140,21)"/><text x="304.00" y="382.50">mall..</text></g><g><title>0x7f7864536395 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="346" y="388" width="4" height="15" fill="rgb(233,128,0)"/><text x="349.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 18.29%)</title><rect x="138" y="260" width="216" height="15" fill="rgb(231,28,48)"/><text x="141.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 18.29%)</title><rect x="138" y="276" width="216" height="15" fill="rgb(221,25,45)"/><text x="141.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 18.29%)</title><rect x="138" y="292" width="216" height="15" fill="rgb(247,199,3)"/><text x="141.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 18.29%)</title><rect x="138" y="308" width="216" height="15" fill="rgb(224,45,35)"/><text x="141.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 18.29%)</title><rect x="138" y="324" width="216" height="15" fill="rgb(248,13,18)"/><text x="141.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 5.03%)</title><rect x="295" y="340" width="59" height="15" fill="rgb(222,66,50)"/><text x="298.00" y="350.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="350" y="356" width="4" height="15" fill="rgb(205,109,41)"/><text x="353.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="352" y="372" width="2" height="15" fill="rgb(218,178,29)"/><text x="355.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="354" y="260" width="2" height="15" fill="rgb(236,49,2)"/><text x="357.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="354" y="276" width="2" height="15" fill="rgb(210,23,19)"/><text x="357.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="354" y="292" width="2" height="15" fill="rgb(211,16,29)"/><text x="357.00" y="302.50"></text></g><g><title>0x7f782253f870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="413" y="276" width="2" height="15" fill="rgb(221,70,6)"/><text x="416.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.34%)</title><rect x="415" y="276" width="16" height="15" fill="rgb(228,159,36)"/><text x="418.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 6.88%)</title><rect x="356" y="260" width="81" height="15" fill="rgb(236,124,2)"/><text x="359.00" y="270.50">pybind11:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.50%)</title><rect x="431" y="276" width="6" height="15" fill="rgb(232,106,4)"/><text x="434.00" y="286.50"></text></g><g><title>0x7f7864534971 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="437" y="292" width="4" height="15" fill="rgb(226,42,44)"/><text x="440.00" y="302.50"></text></g><g><title>0x7f78645349b3 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="441" y="292" width="2" height="15" fill="rgb(209,88,40)"/><text x="444.00" y="302.50"></text></g><g><title>0x7f78645349ff (libc-2.29.so) (1 samples, 0.17%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(228,134,40)"/><text x="446.00" y="302.50"></text></g><g><title>0x7f7864534d07 (libc-2.29.so) (3 samples, 0.50%)</title><rect x="445" y="292" width="6" height="15" fill="rgb(206,157,50)"/><text x="448.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.85%)</title><rect x="136" y="244" width="317" height="15" fill="rgb(209,176,30)"/><text x="139.00" y="254.50">onnxruntime::python::addObjectMethods(pybi..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.34%)</title><rect x="437" y="260" width="16" height="15" fill="rgb(237,109,32)"/><text x="440.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.34%)</title><rect x="437" y="276" width="16" height="15" fill="rgb(220,222,42)"/><text x="440.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(209,199,52)"/><text x="454.00" y="302.50"></text></g><g><title>0x7f786453499b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(241,109,27)"/><text x="454.00" y="318.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (198 samples, 33.22%)</title><rect x="63" y="68" width="392" height="15" fill="rgb(210,174,7)"/><text x="66.00" y="78.50">profile_ort (bench_MLPClassifier_default_m_cl_1000_50..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (198 samples, 33.22%)</title><rect x="63" y="84" width="392" height="15" fill="rgb(214,35,47)"/><text x="66.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (198 samples, 33.22%)</title><rect x="63" y="100" width="392" height="15" fill="rgb(251,37,45)"/><text x="66.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 29.53%)</title><rect x="107" y="116" width="348" height="15" fill="rgb(209,193,16)"/><text x="110.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 29.53%)</title><rect x="107" y="132" width="348" height="15" fill="rgb(234,181,8)"/><text x="110.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (175 samples, 29.36%)</title><rect x="108" y="148" width="347" height="15" fill="rgb(209,41,50)"/><text x="111.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (175 samples, 29.36%)</title><rect x="108" y="164" width="347" height="15" fill="rgb(218,13,29)"/><text x="111.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (175 samples, 29.36%)</title><rect x="108" y="180" width="347" height="15" fill="rgb(235,162,51)"/><text x="111.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (175 samples, 29.36%)</title><rect x="108" y="196" width="347" height="15" fill="rgb(248,209,47)"/><text x="111.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (162 samples, 27.18%)</title><rect x="134" y="212" width="321" height="15" fill="rgb(244,208,18)"/><text x="137.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (162 samples, 27.18%)</title><rect x="134" y="228" width="321" height="15" fill="rgb(252,92,13)"/><text x="137.00" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="453" y="244" width="2" height="15" fill="rgb(242,126,4)"/><text x="456.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="453" y="260" width="2" height="15" fill="rgb(206,220,16)"/><text x="456.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="459" y="180" width="2" height="15" fill="rgb(213,23,35)"/><text x="462.00" y="190.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (5 samples, 0.84%)</title><rect x="479" y="276" width="10" height="15" fill="rgb(221,206,33)"/><text x="482.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (5 samples, 0.84%)</title><rect x="479" y="292" width="10" height="15" fill="rgb(242,70,25)"/><text x="482.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (4 samples, 0.67%)</title><rect x="481" y="308" width="8" height="15" fill="rgb(225,134,6)"/><text x="484.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (4 samples, 0.67%)</title><rect x="481" y="324" width="8" height="15" fill="rgb(234,61,8)"/><text x="484.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (3 samples, 0.50%)</title><rect x="483" y="340" width="6" height="15" fill="rgb(236,218,35)"/><text x="486.00" y="350.50"></text></g><g><title>0x7f78637570a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="501" y="340" width="1" height="15" fill="rgb(211,191,52)"/><text x="504.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.17%)</title><rect x="502" y="340" width="2" height="15" fill="rgb(208,101,8)"/><text x="505.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (17 samples, 2.85%)</title><rect x="479" y="212" width="33" height="15" fill="rgb(242,44,53)"/><text x="482.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (17 samples, 2.85%)</title><rect x="479" y="228" width="33" height="15" fill="rgb(208,113,7)"/><text x="482.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c) (17 samples, 2.85%)</title><rect x="479" y="244" width="33" height="15" fill="rgb(209,55,47)"/><text x="482.00" y="254.50">pr..</text></g><g><title>PyArray_FromAny (ctors.c) (17 samples, 2.85%)</title><rect x="479" y="260" width="33" height="15" fill="rgb(206,218,27)"/><text x="482.00" y="270.50">Py..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (12 samples, 2.01%)</title><rect x="489" y="276" width="23" height="15" fill="rgb(217,129,35)"/><text x="492.00" y="286.50">P..</text></g><g><title>PyArray_DTypeFromObject (common.c) (12 samples, 2.01%)</title><rect x="489" y="292" width="23" height="15" fill="rgb(252,101,30)"/><text x="492.00" y="302.50">P..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (12 samples, 2.01%)</title><rect x="489" y="308" width="23" height="15" fill="rgb(234,18,0)"/><text x="492.00" y="318.50">P..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (12 samples, 2.01%)</title><rect x="489" y="324" width="23" height="15" fill="rgb(243,177,26)"/><text x="492.00" y="334.50">P..</text></g><g><title>_array_find_python_scalar_type (common.c) (4 samples, 0.67%)</title><rect x="504" y="340" width="8" height="15" fill="rgb(244,138,17)"/><text x="507.00" y="350.50"></text></g><g><title>0x7f786454a76f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="514" y="260" width="2" height="15" fill="rgb(248,63,11)"/><text x="517.00" y="270.50"></text></g><g><title>0x7f7864554d94 (libc-2.29.so) (3 samples, 0.50%)</title><rect x="516" y="292" width="6" height="15" fill="rgb(229,172,52)"/><text x="519.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="522" y="292" width="2" height="15" fill="rgb(224,146,6)"/><text x="525.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (7 samples, 1.17%)</title><rect x="512" y="212" width="14" height="15" fill="rgb(223,96,6)"/><text x="515.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (6 samples, 1.01%)</title><rect x="514" y="228" width="12" height="15" fill="rgb(239,33,34)"/><text x="517.00" y="238.50"></text></g><g><title>array_astype (methods.c) (6 samples, 1.01%)</title><rect x="514" y="244" width="12" height="15" fill="rgb(209,133,39)"/><text x="517.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 0.84%)</title><rect x="516" y="260" width="10" height="15" fill="rgb(235,168,15)"/><text x="519.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 0.84%)</title><rect x="516" y="276" width="10" height="15" fill="rgb(212,223,41)"/><text x="519.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="524" y="292" width="2" height="15" fill="rgb(244,200,49)"/><text x="527.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.17%)</title><rect x="526" y="212" width="2" height="15" fill="rgb(236,186,53)"/><text x="529.00" y="222.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.34%)</title><rect x="530" y="308" width="4" height="15" fill="rgb(250,47,9)"/><text x="533.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.34%)</title><rect x="530" y="324" width="4" height="15" fill="rgb(238,27,48)"/><text x="533.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (2 samples, 0.34%)</title><rect x="530" y="340" width="4" height="15" fill="rgb(238,180,2)"/><text x="533.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (2 samples, 0.34%)</title><rect x="530" y="356" width="4" height="15" fill="rgb(249,61,12)"/><text x="533.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (3 samples, 0.50%)</title><rect x="530" y="228" width="6" height="15" fill="rgb(249,189,17)"/><text x="533.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.50%)</title><rect x="530" y="244" width="6" height="15" fill="rgb(215,216,24)"/><text x="533.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.50%)</title><rect x="530" y="260" width="6" height="15" fill="rgb(251,96,50)"/><text x="533.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.50%)</title><rect x="530" y="276" width="6" height="15" fill="rgb(219,27,25)"/><text x="533.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.50%)</title><rect x="530" y="292" width="6" height="15" fill="rgb(230,67,31)"/><text x="533.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="534" y="308" width="2" height="15" fill="rgb(219,226,17)"/><text x="537.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="534" y="324" width="2" height="15" fill="rgb(254,137,51)"/><text x="537.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="534" y="340" width="2" height="15" fill="rgb(228,147,7)"/><text x="537.00" y="350.50"></text></g><g><title>0x7f7864554f4a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="534" y="356" width="2" height="15" fill="rgb(227,120,19)"/><text x="537.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="544" y="372" width="2" height="15" fill="rgb(211,173,15)"/><text x="547.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="546" y="372" width="2" height="15" fill="rgb(219,184,41)"/><text x="549.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="546" y="388" width="2" height="15" fill="rgb(232,112,2)"/><text x="549.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (7 samples, 1.17%)</title><rect x="536" y="228" width="14" height="15" fill="rgb(228,65,29)"/><text x="539.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (7 samples, 1.17%)</title><rect x="536" y="244" width="14" height="15" fill="rgb(214,38,26)"/><text x="539.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (6 samples, 1.01%)</title><rect x="538" y="260" width="12" height="15" fill="rgb(241,74,43)"/><text x="541.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 0.84%)</title><rect x="540" y="276" width="10" height="15" fill="rgb(242,2,11)"/><text x="543.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.84%)</title><rect x="540" y="292" width="10" height="15" fill="rgb(250,135,3)"/><text x="543.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 0.84%)</title><rect x="540" y="308" width="10" height="15" fill="rgb(251,51,15)"/><text x="543.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.84%)</title><rect x="540" y="324" width="10" height="15" fill="rgb(243,170,1)"/><text x="543.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 0.84%)</title><rect x="540" y="340" width="10" height="15" fill="rgb(212,208,21)"/><text x="543.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (5 samples, 0.84%)</title><rect x="540" y="356" width="10" height="15" fill="rgb(246,175,43)"/><text x="543.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="548" y="372" width="2" height="15" fill="rgb(231,158,25)"/><text x="551.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py) (1 samples, 0.17%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(236,220,14)"/><text x="553.00" y="238.50"></text></g><g><title>0x7f7864555103 (libc-2.29.so) (3 samples, 0.50%)</title><rect x="556" y="340" width="6" height="15" fill="rgb(238,175,53)"/><text x="559.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="562" y="372" width="4" height="15" fill="rgb(247,124,2)"/><text x="565.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="564" y="388" width="2" height="15" fill="rgb(243,9,45)"/><text x="567.00" y="398.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 3.69%)</title><rect x="566" y="420" width="43" height="15" fill="rgb(238,91,45)"/><text x="569.00" y="430.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (22 samples, 3.69%)</title><rect x="566" y="436" width="43" height="15" fill="rgb(236,211,52)"/><text x="569.00" y="446.50">sche..</text></g><g><title>sgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="609" y="436" width="2" height="15" fill="rgb(208,204,5)"/><text x="612.00" y="446.50"></text></g><g><title>gemm (cblasfuncs.c) (30 samples, 5.03%)</title><rect x="562" y="340" width="59" height="15" fill="rgb(218,38,46)"/><text x="565.00" y="350.50">gemm (..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 5.03%)</title><rect x="562" y="356" width="59" height="15" fill="rgb(249,180,7)"/><text x="565.00" y="366.50">cblas_..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 4.70%)</title><rect x="566" y="372" width="55" height="15" fill="rgb(232,216,53)"/><text x="569.00" y="382.50">sgemm..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 4.70%)</title><rect x="566" y="388" width="55" height="15" fill="rgb(231,186,36)"/><text x="569.00" y="398.50">gemm_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 4.70%)</title><rect x="566" y="404" width="55" height="15" fill="rgb(241,97,35)"/><text x="569.00" y="414.50">exec_..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.01%)</title><rect x="609" y="420" width="12" height="15" fill="rgb(226,214,8)"/><text x="612.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.84%)</title><rect x="611" y="436" width="10" height="15" fill="rgb(226,219,35)"/><text x="614.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (34 samples, 5.70%)</title><rect x="556" y="276" width="67" height="15" fill="rgb(249,220,3)"/><text x="559.00" y="286.50">array_i..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (34 samples, 5.70%)</title><rect x="556" y="292" width="67" height="15" fill="rgb(211,125,7)"/><text x="559.00" y="302.50">array_m..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (34 samples, 5.70%)</title><rect x="556" y="308" width="67" height="15" fill="rgb(250,152,20)"/><text x="559.00" y="318.50">PyArray..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (34 samples, 5.70%)</title><rect x="556" y="324" width="67" height="15" fill="rgb(248,113,15)"/><text x="559.00" y="334.50">cblas_m..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.17%)</title><rect x="621" y="340" width="2" height="15" fill="rgb(251,132,36)"/><text x="624.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="621" y="356" width="2" height="15" fill="rgb(246,48,46)"/><text x="624.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="621" y="372" width="2" height="15" fill="rgb(242,3,40)"/><text x="624.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="621" y="388" width="2" height="15" fill="rgb(230,33,23)"/><text x="624.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="621" y="404" width="2" height="15" fill="rgb(244,114,48)"/><text x="624.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="621" y="420" width="2" height="15" fill="rgb(233,76,18)"/><text x="624.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="621" y="436" width="2" height="15" fill="rgb(230,136,16)"/><text x="624.00" y="446.50"></text></g><g><title>0x7f7864535de0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="621" y="452" width="2" height="15" fill="rgb(226,152,35)"/><text x="624.00" y="462.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.17%)</title><rect x="623" y="276" width="14" height="15" fill="rgb(239,136,4)"/><text x="626.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (81 samples, 13.59%)</title><rect x="552" y="228" width="160" height="15" fill="rgb(222,126,15)"/><text x="555.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (81 samples, 13.59%)</title><rect x="552" y="244" width="160" height="15" fill="rgb(250,96,39)"/><text x="555.00" y="254.50">numpy_dot_inplace (m..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (80 samples, 13.42%)</title><rect x="554" y="260" width="158" height="15" fill="rgb(234,7,0)"/><text x="557.00" y="270.50">dot (&lt;__array_functi..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 6.38%)</title><rect x="637" y="276" width="75" height="15" fill="rgb(249,125,51)"/><text x="640.00" y="286.50">sgemm_ke..</text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="712" y="276" width="2" height="15" fill="rgb(224,72,36)"/><text x="715.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="712" y="292" width="2" height="15" fill="rgb(209,184,16)"/><text x="715.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.17%)</title><rect x="714" y="324" width="2" height="15" fill="rgb(245,91,28)"/><text x="717.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="714" y="340" width="2" height="15" fill="rgb(213,171,52)"/><text x="717.00" y="350.50"></text></g><g><title>0x7f78644ec7a5 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="714" y="356" width="2" height="15" fill="rgb(243,70,23)"/><text x="717.00" y="366.50"></text></g><g><title>0x7f78644ec7c2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="714" y="372" width="2" height="15" fill="rgb(235,192,45)"/><text x="717.00" y="382.50"></text></g><g><title>0x7f78644eca6f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="714" y="388" width="2" height="15" fill="rgb(205,212,54)"/><text x="717.00" y="398.50"></text></g><g><title>0x7f7864554d50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="714" y="404" width="2" height="15" fill="rgb(233,126,36)"/><text x="717.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.34%)</title><rect x="714" y="292" width="4" height="15" fill="rgb(212,158,26)"/><text x="717.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.34%)</title><rect x="714" y="308" width="4" height="15" fill="rgb(241,5,15)"/><text x="717.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.17%)</title><rect x="716" y="324" width="2" height="15" fill="rgb(247,61,48)"/><text x="719.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.17%)</title><rect x="716" y="340" width="2" height="15" fill="rgb(223,149,29)"/><text x="719.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.17%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(214,23,32)"/><text x="719.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="718" y="292" width="2" height="15" fill="rgb(216,72,5)"/><text x="721.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (46 samples, 7.72%)</title><rect x="712" y="228" width="91" height="15" fill="rgb(213,194,37)"/><text x="715.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 7.72%)</title><rect x="712" y="244" width="91" height="15" fill="rgb(251,59,46)"/><text x="715.00" y="254.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (46 samples, 7.72%)</title><rect x="712" y="260" width="91" height="15" fill="rgb(250,82,16)"/><text x="715.00" y="270.50">PyUFunc_Ge..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (45 samples, 7.55%)</title><rect x="714" y="276" width="89" height="15" fill="rgb(232,41,8)"/><text x="717.00" y="286.50">execute_le..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (42 samples, 7.05%)</title><rect x="720" y="292" width="83" height="15" fill="rgb(234,149,39)"/><text x="723.00" y="302.50">trivial_t..</text></g><g><title>FLOAT_maximum (loops.c.src) (42 samples, 7.05%)</title><rect x="720" y="308" width="83" height="15" fill="rgb(216,204,27)"/><text x="723.00" y="318.50">FLOAT_max..</text></g><g><title>0x7f7863757c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="807" y="404" width="2" height="15" fill="rgb(237,202,14)"/><text x="810.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.34%)</title><rect x="807" y="388" width="4" height="15" fill="rgb(231,46,17)"/><text x="810.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="809" y="404" width="2" height="15" fill="rgb(228,83,10)"/><text x="812.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.17%)</title><rect x="809" y="420" width="2" height="15" fill="rgb(208,206,29)"/><text x="812.00" y="430.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (3 samples, 0.50%)</title><rect x="807" y="372" width="6" height="15" fill="rgb(240,170,16)"/><text x="810.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="811" y="388" width="2" height="15" fill="rgb(223,36,9)"/><text x="814.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="811" y="404" width="2" height="15" fill="rgb(237,80,1)"/><text x="814.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="811" y="420" width="2" height="15" fill="rgb(224,165,39)"/><text x="814.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="811" y="436" width="2" height="15" fill="rgb(212,203,8)"/><text x="814.00" y="446.50"></text></g><g><title>array_max (methods.c) (5 samples, 0.84%)</title><rect x="805" y="244" width="10" height="15" fill="rgb(205,13,33)"/><text x="808.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (5 samples, 0.84%)</title><rect x="805" y="260" width="10" height="15" fill="rgb(241,137,2)"/><text x="808.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py) (5 samples, 0.84%)</title><rect x="805" y="276" width="10" height="15" fill="rgb(222,68,12)"/><text x="808.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.67%)</title><rect x="807" y="292" width="8" height="15" fill="rgb(215,66,9)"/><text x="810.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.67%)</title><rect x="807" y="308" width="8" height="15" fill="rgb(211,20,12)"/><text x="810.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.67%)</title><rect x="807" y="324" width="8" height="15" fill="rgb(249,173,19)"/><text x="810.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.67%)</title><rect x="807" y="340" width="8" height="15" fill="rgb(234,51,29)"/><text x="810.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.67%)</title><rect x="807" y="356" width="8" height="15" fill="rgb(250,58,34)"/><text x="810.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="813" y="372" width="2" height="15" fill="rgb(234,13,49)"/><text x="816.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="817" y="356" width="2" height="15" fill="rgb(239,177,0)"/><text x="820.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="817" y="372" width="2" height="15" fill="rgb(209,148,47)"/><text x="820.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="817" y="388" width="2" height="15" fill="rgb(223,193,13)"/><text x="820.00" y="398.50"></text></g><g><title>0x7f7864554d50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="817" y="404" width="2" height="15" fill="rgb(215,25,17)"/><text x="820.00" y="414.50"></text></g><g><title>array_sum (methods.c) (5 samples, 0.84%)</title><rect x="815" y="244" width="10" height="15" fill="rgb(246,183,6)"/><text x="818.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (5 samples, 0.84%)</title><rect x="815" y="260" width="10" height="15" fill="rgb(237,50,33)"/><text x="818.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py) (4 samples, 0.67%)</title><rect x="817" y="276" width="8" height="15" fill="rgb(211,38,48)"/><text x="820.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.67%)</title><rect x="817" y="292" width="8" height="15" fill="rgb(254,33,40)"/><text x="820.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.67%)</title><rect x="817" y="308" width="8" height="15" fill="rgb(233,197,4)"/><text x="820.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.67%)</title><rect x="817" y="324" width="8" height="15" fill="rgb(214,30,16)"/><text x="820.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.67%)</title><rect x="817" y="340" width="8" height="15" fill="rgb(246,149,29)"/><text x="820.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.50%)</title><rect x="819" y="356" width="6" height="15" fill="rgb(219,168,35)"/><text x="822.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.50%)</title><rect x="819" y="372" width="6" height="15" fill="rgb(241,160,12)"/><text x="822.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.17%)</title><rect x="823" y="388" width="2" height="15" fill="rgb(217,82,24)"/><text x="826.00" y="398.50"></text></g><g><title>0x7f7863755f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="825" y="276" width="2" height="15" fill="rgb(221,23,42)"/><text x="828.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.17%)</title><rect x="827" y="324" width="2" height="15" fill="rgb(236,8,33)"/><text x="830.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="827" y="340" width="2" height="15" fill="rgb(226,77,29)"/><text x="830.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="827" y="356" width="2" height="15" fill="rgb(251,33,1)"/><text x="830.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.34%)</title><rect x="827" y="308" width="4" height="15" fill="rgb(233,108,21)"/><text x="830.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="829" y="324" width="2" height="15" fill="rgb(218,93,30)"/><text x="832.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.84%)</title><rect x="827" y="292" width="10" height="15" fill="rgb(236,171,54)"/><text x="830.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.50%)</title><rect x="831" y="308" width="6" height="15" fill="rgb(228,63,12)"/><text x="834.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.50%)</title><rect x="831" y="324" width="6" height="15" fill="rgb(222,215,51)"/><text x="834.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="833" y="340" width="4" height="15" fill="rgb(232,201,25)"/><text x="836.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="833" y="356" width="4" height="15" fill="rgb(246,167,20)"/><text x="836.00" y="366.50"></text></g><g><title>0x7f78646b3e0e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="839" y="340" width="2" height="15" fill="rgb(228,90,27)"/><text x="842.00" y="350.50"></text></g><g><title>0x7f78646b3e37 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="841" y="340" width="2" height="15" fill="rgb(227,56,10)"/><text x="844.00" y="350.50"></text></g><g><title>0x7f78646b3e62 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="843" y="340" width="2" height="15" fill="rgb(225,151,33)"/><text x="846.00" y="350.50"></text></g><g><title>0x7f78646b3e71 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="845" y="340" width="4" height="15" fill="rgb(237,160,40)"/><text x="848.00" y="350.50"></text></g><g><title>0x7f78646b3ea2 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="849" y="340" width="2" height="15" fill="rgb(230,9,24)"/><text x="852.00" y="350.50"></text></g><g><title>expf (libm-2.29.so) (7 samples, 1.17%)</title><rect x="839" y="324" width="14" height="15" fill="rgb(236,148,45)"/><text x="842.00" y="334.50"></text></g><g><title>0x7f78646b3ea6 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="851" y="340" width="2" height="15" fill="rgb(211,82,30)"/><text x="854.00" y="350.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (202 samples, 33.89%)</title><rect x="455" y="100" width="400" height="15" fill="rgb(249,16,50)"/><text x="458.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 33.72%)</title><rect x="457" y="116" width="398" height="15" fill="rgb(213,90,14)"/><text x="460.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 33.72%)</title><rect x="457" y="132" width="398" height="15" fill="rgb(232,127,32)"/><text x="460.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (201 samples, 33.72%)</title><rect x="457" y="148" width="398" height="15" fill="rgb(241,91,9)"/><text x="460.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (201 samples, 33.72%)</title><rect x="457" y="164" width="398" height="15" fill="rgb(244,165,31)"/><text x="460.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (199 samples, 33.39%)</title><rect x="461" y="180" width="394" height="15" fill="rgb(251,207,1)"/><text x="464.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (193 samples, 32.38%)</title><rect x="473" y="196" width="382" height="15" fill="rgb(207,190,38)"/><text x="476.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (165 samples, 27.68%)</title><rect x="528" y="212" width="327" height="15" fill="rgb(208,43,12)"/><text x="531.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (26 samples, 4.36%)</title><rect x="803" y="228" width="52" height="15" fill="rgb(244,170,40)"/><text x="806.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.52%)</title><rect x="825" y="244" width="30" height="15" fill="rgb(218,56,29)"/><text x="828.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 2.52%)</title><rect x="825" y="260" width="30" height="15" fill="rgb(218,110,42)"/><text x="828.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 2.35%)</title><rect x="827" y="276" width="28" height="15" fill="rgb(212,17,5)"/><text x="830.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.51%)</title><rect x="837" y="292" width="18" height="15" fill="rgb(224,72,26)"/><text x="840.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (8 samples, 1.34%)</title><rect x="839" y="308" width="16" height="15" fill="rgb(243,51,9)"/><text x="842.00" y="318.50"></text></g><g><title>npy_expf (npy_math_internal.h.src) (1 samples, 0.17%)</title><rect x="853" y="324" width="2" height="15" fill="rgb(244,18,2)"/><text x="856.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="855" y="404" width="2" height="15" fill="rgb(219,30,15)"/><text x="858.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="855" y="420" width="2" height="15" fill="rgb(248,163,38)"/><text x="858.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="855" y="436" width="2" height="15" fill="rgb(214,63,53)"/><text x="858.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="855" y="452" width="2" height="15" fill="rgb(238,208,31)"/><text x="858.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="855" y="468" width="2" height="15" fill="rgb(238,9,42)"/><text x="858.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.17%)</title><rect x="855" y="484" width="2" height="15" fill="rgb(236,184,3)"/><text x="858.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.17%)</title><rect x="855" y="500" width="2" height="15" fill="rgb(250,67,33)"/><text x="858.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="855" y="516" width="2" height="15" fill="rgb(249,213,9)"/><text x="858.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="855" y="532" width="2" height="15" fill="rgb(218,224,27)"/><text x="858.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="855" y="548" width="2" height="15" fill="rgb(241,146,14)"/><text x="858.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="855" y="564" width="2" height="15" fill="rgb(222,60,6)"/><text x="858.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="855" y="580" width="2" height="15" fill="rgb(252,217,52)"/><text x="858.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="855" y="596" width="2" height="15" fill="rgb(216,27,2)"/><text x="858.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="855" y="612" width="2" height="15" fill="rgb(217,66,21)"/><text x="858.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.17%)</title><rect x="855" y="628" width="2" height="15" fill="rgb(230,198,54)"/><text x="858.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="855" y="644" width="2" height="15" fill="rgb(247,171,48)"/><text x="858.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="855" y="660" width="2" height="15" fill="rgb(248,141,25)"/><text x="858.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.17%)</title><rect x="855" y="676" width="2" height="15" fill="rgb(230,219,29)"/><text x="858.00" y="686.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (204 samples, 34.23%)</title><rect x="455" y="68" width="404" height="15" fill="rgb(206,180,9)"/><text x="458.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1000_50_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (204 samples, 34.23%)</title><rect x="455" y="84" width="404" height="15" fill="rgb(247,114,10)"/><text x="458.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_50..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.34%)</title><rect x="855" y="100" width="4" height="15" fill="rgb(236,69,29)"/><text x="858.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.34%)</title><rect x="855" y="116" width="4" height="15" fill="rgb(207,148,8)"/><text x="858.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.34%)</title><rect x="855" y="132" width="4" height="15" fill="rgb(238,228,13)"/><text x="858.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.34%)</title><rect x="855" y="148" width="4" height="15" fill="rgb(216,143,15)"/><text x="858.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.34%)</title><rect x="855" y="164" width="4" height="15" fill="rgb(215,7,52)"/><text x="858.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.34%)</title><rect x="855" y="180" width="4" height="15" fill="rgb(205,69,7)"/><text x="858.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.34%)</title><rect x="855" y="196" width="4" height="15" fill="rgb(253,65,45)"/><text x="858.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="212" width="4" height="15" fill="rgb(210,32,18)"/><text x="858.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="228" width="4" height="15" fill="rgb(216,226,21)"/><text x="858.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="244" width="4" height="15" fill="rgb(206,94,18)"/><text x="858.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="855" y="260" width="4" height="15" fill="rgb(238,215,26)"/><text x="858.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="276" width="4" height="15" fill="rgb(207,4,29)"/><text x="858.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.34%)</title><rect x="855" y="292" width="4" height="15" fill="rgb(228,211,51)"/><text x="858.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="308" width="4" height="15" fill="rgb(253,176,10)"/><text x="858.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="324" width="4" height="15" fill="rgb(209,119,1)"/><text x="858.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="340" width="4" height="15" fill="rgb(233,5,17)"/><text x="858.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="855" y="356" width="4" height="15" fill="rgb(241,196,1)"/><text x="858.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="855" y="372" width="4" height="15" fill="rgb(209,16,9)"/><text x="858.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.34%)</title><rect x="855" y="388" width="4" height="15" fill="rgb(247,162,37)"/><text x="858.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.17%)</title><rect x="857" y="404" width="2" height="15" fill="rgb(222,177,52)"/><text x="860.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.17%)</title><rect x="857" y="420" width="2" height="15" fill="rgb(244,65,3)"/><text x="860.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="857" y="436" width="2" height="15" fill="rgb(213,193,32)"/><text x="860.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.17%)</title><rect x="857" y="452" width="2" height="15" fill="rgb(215,178,23)"/><text x="860.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.17%)</title><rect x="857" y="468" width="2" height="15" fill="rgb(252,105,5)"/><text x="860.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.17%)</title><rect x="857" y="484" width="2" height="15" fill="rgb(226,90,24)"/><text x="860.00" y="494.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="865" y="372" width="2" height="15" fill="rgb(251,221,53)"/><text x="868.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="865" y="388" width="2" height="15" fill="rgb(219,39,12)"/><text x="868.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.17%)</title><rect x="865" y="404" width="2" height="15" fill="rgb(224,221,4)"/><text x="868.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="865" y="420" width="2" height="15" fill="rgb(217,201,43)"/><text x="868.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (37 samples, 6.21%)</title><rect x="865" y="356" width="73" height="15" fill="rgb(235,156,10)"/><text x="868.00" y="366.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 6.04%)</title><rect x="867" y="372" width="71" height="15" fill="rgb(235,77,39)"/><text x="870.00" y="382.50">execute_..</text></g><g><title>iterator_loop (ufunc_object.c) (35 samples, 5.87%)</title><rect x="869" y="388" width="69" height="15" fill="rgb(205,72,9)"/><text x="872.00" y="398.50">iterato..</text></g><g><title>DOUBLE_clip (clip.c.src) (35 samples, 5.87%)</title><rect x="869" y="404" width="69" height="15" fill="rgb(228,29,8)"/><text x="872.00" y="414.50">DOUBLE_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (38 samples, 6.38%)</title><rect x="865" y="324" width="75" height="15" fill="rgb(240,52,0)"/><text x="868.00" y="334.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (38 samples, 6.38%)</title><rect x="865" y="340" width="75" height="15" fill="rgb(229,136,25)"/><text x="868.00" y="350.50">ufunc_ge..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="938" y="356" width="2" height="15" fill="rgb(242,106,47)"/><text x="941.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="938" y="372" width="2" height="15" fill="rgb(229,199,27)"/><text x="941.00" y="382.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.17%)</title><rect x="940" y="340" width="2" height="15" fill="rgb(225,129,1)"/><text x="943.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="940" y="356" width="2" height="15" fill="rgb(234,137,29)"/><text x="943.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="940" y="372" width="2" height="15" fill="rgb(254,132,24)"/><text x="943.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="940" y="388" width="2" height="15" fill="rgb(246,52,29)"/><text x="943.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="940" y="404" width="2" height="15" fill="rgb(219,166,37)"/><text x="943.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.17%)</title><rect x="940" y="420" width="2" height="15" fill="rgb(243,191,29)"/><text x="943.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="942" y="356" width="2" height="15" fill="rgb(226,75,50)"/><text x="945.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="942" y="372" width="2" height="15" fill="rgb(214,62,20)"/><text x="945.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.17%)</title><rect x="942" y="388" width="2" height="15" fill="rgb(251,103,37)"/><text x="945.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="942" y="404" width="2" height="15" fill="rgb(235,177,42)"/><text x="945.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.17%)</title><rect x="942" y="420" width="2" height="15" fill="rgb(206,191,37)"/><text x="945.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="944" y="372" width="2" height="15" fill="rgb(205,78,36)"/><text x="947.00" y="382.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (43 samples, 7.21%)</title><rect x="863" y="244" width="85" height="15" fill="rgb(241,223,8)"/><text x="866.00" y="254.50">clip (nump..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (42 samples, 7.05%)</title><rect x="865" y="260" width="83" height="15" fill="rgb(219,101,3)"/><text x="868.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c) (42 samples, 7.05%)</title><rect x="865" y="276" width="83" height="15" fill="rgb(227,126,40)"/><text x="868.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c) (42 samples, 7.05%)</title><rect x="865" y="292" width="83" height="15" fill="rgb(205,154,25)"/><text x="868.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py) (42 samples, 7.05%)</title><rect x="865" y="308" width="83" height="15" fill="rgb(250,25,12)"/><text x="868.00" y="318.50">_clip (nu..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (4 samples, 0.67%)</title><rect x="940" y="324" width="8" height="15" fill="rgb(228,142,29)"/><text x="943.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.50%)</title><rect x="942" y="340" width="6" height="15" fill="rgb(226,168,19)"/><text x="945.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.34%)</title><rect x="944" y="356" width="4" height="15" fill="rgb(231,108,2)"/><text x="947.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="946" y="372" width="2" height="15" fill="rgb(227,177,53)"/><text x="949.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="946" y="388" width="2" height="15" fill="rgb(246,99,13)"/><text x="949.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="946" y="404" width="2" height="15" fill="rgb(219,60,17)"/><text x="949.00" y="414.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (45 samples, 7.55%)</title><rect x="861" y="196" width="89" height="15" fill="rgb(249,171,24)"/><text x="864.00" y="206.50">relu (skle..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (44 samples, 7.38%)</title><rect x="863" y="212" width="87" height="15" fill="rgb(234,52,0)"/><text x="866.00" y="222.50">clip (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (44 samples, 7.38%)</title><rect x="863" y="228" width="87" height="15" fill="rgb(230,191,33)"/><text x="866.00" y="238.50">array_impl..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="948" y="244" width="2" height="15" fill="rgb(217,9,24)"/><text x="951.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="948" y="260" width="2" height="15" fill="rgb(216,26,29)"/><text x="951.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="948" y="276" width="2" height="15" fill="rgb(210,108,6)"/><text x="951.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.17%)</title><rect x="948" y="292" width="2" height="15" fill="rgb(239,154,47)"/><text x="951.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.67%)</title><rect x="952" y="212" width="8" height="15" fill="rgb(221,106,45)"/><text x="955.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.21%)</title><rect x="960" y="212" width="73" height="15" fill="rgb(216,14,20)"/><text x="963.00" y="222.50">dgemm_ke..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 3.86%)</title><rect x="1033" y="340" width="46" height="15" fill="rgb(224,112,26)"/><text x="1036.00" y="350.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (23 samples, 3.86%)</title><rect x="1033" y="356" width="46" height="15" fill="rgb(207,208,48)"/><text x="1036.00" y="366.50">sche..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1081" y="356" width="2" height="15" fill="rgb(225,210,45)"/><text x="1084.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (31 samples, 5.20%)</title><rect x="1033" y="260" width="61" height="15" fill="rgb(215,81,46)"/><text x="1036.00" y="270.50">DOUBLE..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 5.20%)</title><rect x="1033" y="276" width="61" height="15" fill="rgb(219,137,7)"/><text x="1036.00" y="286.50">cblas_..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 5.20%)</title><rect x="1033" y="292" width="61" height="15" fill="rgb(246,143,9)"/><text x="1036.00" y="302.50">dgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 5.20%)</title><rect x="1033" y="308" width="61" height="15" fill="rgb(207,171,25)"/><text x="1036.00" y="318.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 5.20%)</title><rect x="1033" y="324" width="61" height="15" fill="rgb(211,188,18)"/><text x="1036.00" y="334.50">exec_b..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.34%)</title><rect x="1079" y="340" width="15" height="15" fill="rgb(244,39,12)"/><text x="1082.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.01%)</title><rect x="1083" y="356" width="11" height="15" fill="rgb(210,19,6)"/><text x="1086.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="1094" y="324" width="2" height="15" fill="rgb(215,186,34)"/><text x="1097.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1094" y="340" width="2" height="15" fill="rgb(229,185,48)"/><text x="1097.00" y="350.50"></text></g><g><title>0x7f78644eca19 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1094" y="356" width="2" height="15" fill="rgb(223,142,11)"/><text x="1097.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.17%)</title><rect x="1094" y="372" width="2" height="15" fill="rgb(247,104,54)"/><text x="1097.00" y="382.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (80 samples, 13.42%)</title><rect x="950" y="196" width="158" height="15" fill="rgb(216,226,39)"/><text x="953.00" y="206.50">safe_sparse_dot (skl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (38 samples, 6.38%)</title><rect x="1033" y="212" width="75" height="15" fill="rgb(214,46,11)"/><text x="1036.00" y="222.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (38 samples, 6.38%)</title><rect x="1033" y="228" width="75" height="15" fill="rgb(208,29,31)"/><text x="1036.00" y="238.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (38 samples, 6.38%)</title><rect x="1033" y="244" width="75" height="15" fill="rgb(215,213,40)"/><text x="1036.00" y="254.50">PyUFunc_..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.17%)</title><rect x="1094" y="260" width="14" height="15" fill="rgb(250,155,28)"/><text x="1097.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 1.17%)</title><rect x="1094" y="276" width="14" height="15" fill="rgb(235,53,45)"/><text x="1097.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 1.17%)</title><rect x="1094" y="292" width="14" height="15" fill="rgb(252,199,3)"/><text x="1097.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 1.17%)</title><rect x="1094" y="308" width="14" height="15" fill="rgb(248,100,41)"/><text x="1097.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (6 samples, 1.01%)</title><rect x="1096" y="324" width="12" height="15" fill="rgb(240,164,49)"/><text x="1099.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1108" y="212" width="2" height="15" fill="rgb(230,153,1)"/><text x="1111.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.17%)</title><rect x="1108" y="228" width="2" height="15" fill="rgb(239,84,27)"/><text x="1111.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.17%)</title><rect x="1108" y="244" width="2" height="15" fill="rgb(219,2,53)"/><text x="1111.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="1108" y="260" width="2" height="15" fill="rgb(237,150,2)"/><text x="1111.00" y="270.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.17%)</title><rect x="1108" y="276" width="2" height="15" fill="rgb(253,80,16)"/><text x="1111.00" y="286.50"></text></g><g><title>array_sum (methods.c) (2 samples, 0.34%)</title><rect x="1110" y="212" width="4" height="15" fill="rgb(225,113,33)"/><text x="1113.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.34%)</title><rect x="1110" y="228" width="4" height="15" fill="rgb(217,39,19)"/><text x="1113.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.17%)</title><rect x="1112" y="244" width="2" height="15" fill="rgb(217,219,30)"/><text x="1115.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1112" y="260" width="2" height="15" fill="rgb(243,228,30)"/><text x="1115.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1112" y="276" width="2" height="15" fill="rgb(245,66,24)"/><text x="1115.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1112" y="292" width="2" height="15" fill="rgb(222,213,8)"/><text x="1115.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.17%)</title><rect x="1112" y="308" width="2" height="15" fill="rgb(227,109,0)"/><text x="1115.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1112" y="324" width="2" height="15" fill="rgb(209,50,52)"/><text x="1115.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="1112" y="340" width="2" height="15" fill="rgb(226,4,37)"/><text x="1115.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (4 samples, 0.67%)</title><rect x="1114" y="276" width="8" height="15" fill="rgb(215,114,36)"/><text x="1117.00" y="286.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (4 samples, 0.67%)</title><rect x="1114" y="292" width="8" height="15" fill="rgb(238,168,34)"/><text x="1117.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (4 samples, 0.67%)</title><rect x="1114" y="308" width="8" height="15" fill="rgb(212,107,4)"/><text x="1117.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.67%)</title><rect x="1114" y="324" width="8" height="15" fill="rgb(234,81,45)"/><text x="1117.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.84%)</title><rect x="1114" y="260" width="10" height="15" fill="rgb(215,189,54)"/><text x="1117.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.17%)</title><rect x="1122" y="276" width="2" height="15" fill="rgb(250,107,22)"/><text x="1125.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="1122" y="292" width="2" height="15" fill="rgb(242,9,38)"/><text x="1125.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1122" y="308" width="2" height="15" fill="rgb(238,192,44)"/><text x="1125.00" y="318.50"></text></g><g><title>0x7f7863755b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1124" y="292" width="2" height="15" fill="rgb(248,140,27)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f78646801b0 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1130" y="308" width="2" height="15" fill="rgb(226,28,0)"/><text x="1133.00" y="318.50"></text></g><g><title>0x7f7864706bb4 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1132" y="308" width="2" height="15" fill="rgb(217,146,17)"/><text x="1135.00" y="318.50"></text></g><g><title>0x7f7864706c0c (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1134" y="308" width="2" height="15" fill="rgb(246,51,3)"/><text x="1137.00" y="318.50"></text></g><g><title>0x7f7864706c32 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1136" y="308" width="2" height="15" fill="rgb(213,63,16)"/><text x="1139.00" y="318.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (8 samples, 1.34%)</title><rect x="1124" y="276" width="16" height="15" fill="rgb(248,1,7)"/><text x="1127.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (7 samples, 1.17%)</title><rect x="1126" y="292" width="14" height="15" fill="rgb(215,205,50)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7f7864706d70 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1138" y="308" width="2" height="15" fill="rgb(243,179,1)"/><text x="1141.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 2.35%)</title><rect x="1114" y="244" width="28" height="15" fill="rgb(236,64,25)"/><text x="1117.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.51%)</title><rect x="1124" y="260" width="18" height="15" fill="rgb(236,118,42)"/><text x="1127.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1140" y="276" width="2" height="15" fill="rgb(231,60,53)"/><text x="1143.00" y="286.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (18 samples, 3.02%)</title><rect x="1108" y="196" width="36" height="15" fill="rgb(244,120,42)"/><text x="1111.00" y="206.50">sof..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.52%)</title><rect x="1114" y="212" width="30" height="15" fill="rgb(222,29,43)"/><text x="1117.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 2.52%)</title><rect x="1114" y="228" width="30" height="15" fill="rgb(243,155,53)"/><text x="1117.00" y="238.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1142" y="244" width="2" height="15" fill="rgb(229,228,31)"/><text x="1145.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1142" y="260" width="2" height="15" fill="rgb(205,141,36)"/><text x="1145.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="1142" y="276" width="2" height="15" fill="rgb(240,9,35)"/><text x="1145.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (5 samples, 0.84%)</title><rect x="1144" y="308" width="10" height="15" fill="rgb(205,52,23)"/><text x="1147.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 1.34%)</title><rect x="1144" y="260" width="16" height="15" fill="rgb(236,219,11)"/><text x="1147.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (8 samples, 1.34%)</title><rect x="1144" y="276" width="16" height="15" fill="rgb(233,191,26)"/><text x="1147.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (8 samples, 1.34%)</title><rect x="1144" y="292" width="16" height="15" fill="rgb(230,51,18)"/><text x="1147.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.50%)</title><rect x="1154" y="308" width="6" height="15" fill="rgb(210,89,25)"/><text x="1157.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="1160" y="276" width="2" height="15" fill="rgb(229,86,29)"/><text x="1163.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (153 samples, 25.67%)</title><rect x="861" y="180" width="303" height="15" fill="rgb(245,102,4)"/><text x="864.00" y="190.50">_forward_pass (sklearn/neural_network/_m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.68%)</title><rect x="1144" y="196" width="20" height="15" fill="rgb(231,138,35)"/><text x="1147.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.68%)</title><rect x="1144" y="212" width="20" height="15" fill="rgb(227,193,24)"/><text x="1147.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.68%)</title><rect x="1144" y="228" width="20" height="15" fill="rgb(237,36,11)"/><text x="1147.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.68%)</title><rect x="1144" y="244" width="20" height="15" fill="rgb(219,119,15)"/><text x="1147.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.34%)</title><rect x="1160" y="260" width="4" height="15" fill="rgb(252,136,24)"/><text x="1163.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(212,60,23)"/><text x="1165.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(251,67,17)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7f7864554f5d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1162" y="308" width="2" height="15" fill="rgb(214,196,31)"/><text x="1165.00" y="318.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.50%)</title><rect x="1170" y="196" width="6" height="15" fill="rgb(234,57,2)"/><text x="1173.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1174" y="212" width="2" height="15" fill="rgb(225,1,15)"/><text x="1177.00" y="222.50"></text></g><g><title>0x7f786454ae7a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(219,211,18)"/><text x="1177.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (160 samples, 26.85%)</title><rect x="861" y="164" width="317" height="15" fill="rgb(215,52,16)"/><text x="864.00" y="174.50">_predict (sklearn/neural_network/_multilay..</text></g><g><title>check_array (sklearn/utils/validation.py) (7 samples, 1.17%)</title><rect x="1164" y="180" width="14" height="15" fill="rgb(240,162,22)"/><text x="1167.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.17%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(254,96,16)"/><text x="1179.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.17%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(208,213,45)"/><text x="1179.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="1180" y="196" width="2" height="15" fill="rgb(235,220,24)"/><text x="1183.00" y="206.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (164 samples, 27.52%)</title><rect x="859" y="68" width="325" height="15" fill="rgb(239,203,15)"/><text x="862.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (164 samples, 27.52%)</title><rect x="859" y="84" width="325" height="15" fill="rgb(238,210,25)"/><text x="862.00" y="94.50">setup_profile (bench_MLPClassifier_default_..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (164 samples, 27.52%)</title><rect x="859" y="100" width="325" height="15" fill="rgb(207,192,8)"/><text x="862.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (164 samples, 27.52%)</title><rect x="859" y="116" width="325" height="15" fill="rgb(247,145,50)"/><text x="862.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (163 samples, 27.35%)</title><rect x="861" y="132" width="323" height="15" fill="rgb(246,103,52)"/><text x="864.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (163 samples, 27.35%)</title><rect x="861" y="148" width="323" height="15" fill="rgb(223,99,20)"/><text x="864.00" y="158.50">predict_proba (sklearn/neural_network/_mult..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.50%)</title><rect x="1178" y="164" width="6" height="15" fill="rgb(227,50,48)"/><text x="1181.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.50%)</title><rect x="1178" y="180" width="6" height="15" fill="rgb(233,152,50)"/><text x="1181.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(238,132,7)"/><text x="1185.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.17%)</title><rect x="1184" y="180" width="2" height="15" fill="rgb(243,45,19)"/><text x="1187.00" y="190.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (1 samples, 0.17%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(230,73,21)"/><text x="1187.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="1184" y="212" width="2" height="15" fill="rgb(248,115,3)"/><text x="1187.00" y="222.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(238,169,52)"/><text x="1187.00" y="238.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(207,194,7)"/><text x="1187.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.17%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(243,124,12)"/><text x="1187.00" y="270.50"></text></g><g><title>_select_matrix_shape (cblasfuncs.c) (1 samples, 0.17%)</title><rect x="1184" y="276" width="2" height="15" fill="rgb(211,30,29)"/><text x="1187.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.17%)</title><rect x="1186" y="180" width="2" height="15" fill="rgb(206,214,8)"/><text x="1189.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.17%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(226,135,17)"/><text x="1189.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(243,154,17)"/><text x="1189.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(215,211,11)"/><text x="1189.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(243,90,9)"/><text x="1189.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.17%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(206,123,54)"/><text x="1189.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(253,221,3)"/><text x="1189.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(229,64,4)"/><text x="1189.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(232,93,19)"/><text x="1189.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1186" y="324" width="2" height="15" fill="rgb(237,182,10)"/><text x="1189.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="1186" y="340" width="2" height="15" fill="rgb(227,228,43)"/><text x="1189.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1186" y="356" width="2" height="15" fill="rgb(220,146,52)"/><text x="1189.00" y="366.50"></text></g><g><title>all (596 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,181,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (596 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(252,119,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py) (3 samples, 0.50%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(220,43,54)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (3 samples, 0.50%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(238,190,3)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.50%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(222,223,14)"/><text x="1187.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.50%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(245,206,22)"/><text x="1187.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.50%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(216,1,11)"/><text x="1187.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.50%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(243,70,47)"/><text x="1187.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.50%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(236,149,24)"/><text x="1187.00" y="174.50"></text></g><g><title>inplace_relu_derivative (sklearn/neural_network/_base.py) (1 samples, 0.17%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(239,207,32)"/><text x="1191.00" y="190.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(213,53,17)"/><text x="1191.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(211,42,40)"/><text x="1191.00" y="222.50"></text></g></g></svg>