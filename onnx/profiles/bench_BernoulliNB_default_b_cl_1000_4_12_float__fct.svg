<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>0x7f386a1c8b1c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(241,14,30)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(216,220,40)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(211,53,51)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(216,98,15)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(224,78,22)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(217,37,53)"/><text x="15.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="12" y="836" width="4" height="15" fill="rgb(235,48,27)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="12" y="852" width="4" height="15" fill="rgb(220,208,42)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(240,154,33)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(206,7,15)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(244,214,15)"/><text x="17.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.17%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(212,199,20)"/><text x="17.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.17%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(237,68,16)"/><text x="17.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.17%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(246,189,26)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.51%)</title><rect x="12" y="292" width="6" height="15" fill="rgb(252,119,45)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="308" width="6" height="15" fill="rgb(252,166,32)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="324" width="6" height="15" fill="rgb(241,68,5)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="340" width="6" height="15" fill="rgb(227,36,33)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="12" y="356" width="6" height="15" fill="rgb(213,105,33)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="372" width="6" height="15" fill="rgb(247,139,21)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.51%)</title><rect x="12" y="388" width="6" height="15" fill="rgb(206,4,25)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="404" width="6" height="15" fill="rgb(231,40,29)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="420" width="6" height="15" fill="rgb(228,221,0)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="436" width="6" height="15" fill="rgb(234,229,3)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="12" y="452" width="6" height="15" fill="rgb(242,89,39)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="468" width="6" height="15" fill="rgb(220,99,13)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.51%)</title><rect x="12" y="484" width="6" height="15" fill="rgb(241,200,36)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="500" width="6" height="15" fill="rgb(235,103,18)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="516" width="6" height="15" fill="rgb(253,156,4)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="532" width="6" height="15" fill="rgb(207,116,44)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="12" y="548" width="6" height="15" fill="rgb(230,3,43)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="564" width="6" height="15" fill="rgb(244,200,18)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.51%)</title><rect x="12" y="580" width="6" height="15" fill="rgb(213,207,11)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="596" width="6" height="15" fill="rgb(235,60,16)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="612" width="6" height="15" fill="rgb(220,67,6)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="628" width="6" height="15" fill="rgb(219,25,39)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="644" width="6" height="15" fill="rgb(240,172,45)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="660" width="6" height="15" fill="rgb(215,152,17)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="676" width="6" height="15" fill="rgb(251,118,14)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="12" y="692" width="6" height="15" fill="rgb(223,120,0)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="708" width="6" height="15" fill="rgb(210,70,3)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.51%)</title><rect x="12" y="724" width="6" height="15" fill="rgb(237,52,53)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="740" width="6" height="15" fill="rgb(226,80,50)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="756" width="6" height="15" fill="rgb(232,12,5)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="772" width="6" height="15" fill="rgb(221,149,24)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="12" y="788" width="6" height="15" fill="rgb(230,200,41)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="12" y="804" width="6" height="15" fill="rgb(217,10,48)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="12" y="820" width="6" height="15" fill="rgb(237,65,7)"/><text x="15.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(208,197,0)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(232,154,5)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(248,6,23)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(212,76,16)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(242,22,10)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.17%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(249,9,29)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(224,19,13)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(216,151,21)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(209,69,12)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(214,121,19)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(251,166,44)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (dis.py) (1 samples, 0.17%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(243,151,14)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(243,211,50)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(232,187,28)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(229,5,38)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(236,180,41)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(240,153,45)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (opcode.py) (1 samples, 0.17%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(239,181,44)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(205,78,27)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(224,191,0)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(220,115,7)"/><text x="19.00" y="1166.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(234,75,12)"/><text x="19.00" y="1182.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(228,17,7)"/><text x="19.00" y="1198.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(238,185,51)"/><text x="19.00" y="1214.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(240,76,13)"/><text x="19.00" y="1230.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(207,126,12)"/><text x="19.00" y="1246.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="16" y="1252" width="2" height="15" fill="rgb(234,192,1)"/><text x="19.00" y="1262.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="16" y="1268" width="2" height="15" fill="rgb(242,92,17)"/><text x="19.00" y="1278.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.17%)</title><rect x="16" y="1284" width="2" height="15" fill="rgb(247,124,4)"/><text x="19.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="12" y="196" width="8" height="15" fill="rgb(209,146,20)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="12" y="212" width="8" height="15" fill="rgb(224,29,36)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="12" y="228" width="8" height="15" fill="rgb(211,223,0)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="12" y="244" width="8" height="15" fill="rgb(228,92,29)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.68%)</title><rect x="12" y="260" width="8" height="15" fill="rgb(234,8,6)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="12" y="276" width="8" height="15" fill="rgb(229,207,1)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.17%)</title><rect x="18" y="292" width="2" height="15" fill="rgb(221,220,3)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="308" width="2" height="15" fill="rgb(209,221,2)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="324" width="2" height="15" fill="rgb(215,149,43)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="340" width="2" height="15" fill="rgb(235,180,5)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="18" y="356" width="2" height="15" fill="rgb(243,215,15)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="372" width="2" height="15" fill="rgb(239,91,17)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.17%)</title><rect x="18" y="388" width="2" height="15" fill="rgb(214,122,11)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="404" width="2" height="15" fill="rgb(207,175,19)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="420" width="2" height="15" fill="rgb(244,134,19)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="436" width="2" height="15" fill="rgb(206,213,5)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="18" y="452" width="2" height="15" fill="rgb(213,83,38)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="468" width="2" height="15" fill="rgb(224,130,5)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.17%)</title><rect x="18" y="484" width="2" height="15" fill="rgb(236,191,34)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="500" width="2" height="15" fill="rgb(247,195,52)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="516" width="2" height="15" fill="rgb(226,160,0)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="532" width="2" height="15" fill="rgb(237,210,33)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="18" y="548" width="2" height="15" fill="rgb(230,117,9)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="18" y="564" width="2" height="15" fill="rgb(229,37,40)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.17%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(218,113,30)"/><text x="21.00" y="590.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(219,25,26)"/><text x="21.00" y="606.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(228,160,40)"/><text x="21.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(232,226,10)"/><text x="23.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(228,52,14)"/><text x="23.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(214,159,43)"/><text x="23.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(205,86,25)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(226,186,7)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(246,178,40)"/><text x="23.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(253,218,0)"/><text x="23.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(245,105,39)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(223,11,35)"/><text x="23.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(242,144,18)"/><text x="23.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(228,38,11)"/><text x="23.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(234,10,53)"/><text x="23.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.17%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(224,98,10)"/><text x="23.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(232,66,16)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(208,9,49)"/><text x="23.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(225,8,15)"/><text x="23.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(249,208,17)"/><text x="23.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(221,171,19)"/><text x="23.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(230,151,43)"/><text x="23.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(216,113,13)"/><text x="23.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(234,146,17)"/><text x="23.00" y="1806.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(253,116,53)"/><text x="23.00" y="1822.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(243,13,0)"/><text x="23.00" y="1838.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1844" width="2" height="15" fill="rgb(231,183,20)"/><text x="23.00" y="1854.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1860" width="2" height="15" fill="rgb(250,155,17)"/><text x="23.00" y="1870.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1876" width="2" height="15" fill="rgb(209,8,30)"/><text x="23.00" y="1886.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1892" width="2" height="15" fill="rgb(233,229,12)"/><text x="23.00" y="1902.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.51%)</title><rect x="22" y="1508" width="6" height="15" fill="rgb(233,173,47)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.51%)</title><rect x="22" y="1524" width="6" height="15" fill="rgb(209,10,41)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.51%)</title><rect x="22" y="1540" width="6" height="15" fill="rgb(239,36,49)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.51%)</title><rect x="22" y="1556" width="6" height="15" fill="rgb(226,177,0)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.51%)</title><rect x="22" y="1572" width="6" height="15" fill="rgb(218,209,14)"/><text x="25.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.34%)</title><rect x="24" y="1588" width="4" height="15" fill="rgb(227,51,11)"/><text x="27.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(237,14,47)"/><text x="29.00" y="1614.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="26" y="1620" width="2" height="15" fill="rgb(239,163,15)"/><text x="29.00" y="1630.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="26" y="1636" width="2" height="15" fill="rgb(219,18,38)"/><text x="29.00" y="1646.50"></text></g><g><title>pybind11::detail::all_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="26" y="1652" width="2" height="15" fill="rgb(209,142,31)"/><text x="29.00" y="1662.50"></text></g><g><title>0x7f385a263da0 (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="26" y="1668" width="2" height="15" fill="rgb(215,115,29)"/><text x="29.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="484" width="10" height="15" fill="rgb(248,194,42)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="500" width="10" height="15" fill="rgb(251,206,30)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="516" width="10" height="15" fill="rgb(240,133,6)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="532" width="10" height="15" fill="rgb(219,17,43)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="548" width="10" height="15" fill="rgb(215,127,17)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="564" width="10" height="15" fill="rgb(231,115,38)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.86%)</title><rect x="20" y="580" width="10" height="15" fill="rgb(218,50,51)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="596" width="10" height="15" fill="rgb(223,87,16)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="612" width="10" height="15" fill="rgb(215,135,11)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="628" width="10" height="15" fill="rgb(243,36,17)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="644" width="10" height="15" fill="rgb(252,9,31)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="660" width="10" height="15" fill="rgb(236,168,22)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.86%)</title><rect x="20" y="676" width="10" height="15" fill="rgb(218,215,19)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="692" width="10" height="15" fill="rgb(254,215,1)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="708" width="10" height="15" fill="rgb(247,195,50)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="724" width="10" height="15" fill="rgb(234,167,45)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="740" width="10" height="15" fill="rgb(234,79,4)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="756" width="10" height="15" fill="rgb(247,189,11)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.86%)</title><rect x="20" y="772" width="10" height="15" fill="rgb(252,126,46)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="788" width="10" height="15" fill="rgb(253,29,5)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="804" width="10" height="15" fill="rgb(211,121,47)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="820" width="10" height="15" fill="rgb(229,142,10)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="836" width="10" height="15" fill="rgb(216,153,42)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="852" width="10" height="15" fill="rgb(207,175,3)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.86%)</title><rect x="20" y="868" width="10" height="15" fill="rgb(222,136,30)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="884" width="10" height="15" fill="rgb(215,23,14)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="900" width="10" height="15" fill="rgb(250,44,30)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="916" width="10" height="15" fill="rgb(226,105,33)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="932" width="10" height="15" fill="rgb(212,19,23)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="948" width="10" height="15" fill="rgb(230,185,12)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="964" width="10" height="15" fill="rgb(253,158,40)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="980" width="10" height="15" fill="rgb(222,61,49)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="996" width="10" height="15" fill="rgb(210,215,54)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.86%)</title><rect x="20" y="1012" width="10" height="15" fill="rgb(233,33,38)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1028" width="10" height="15" fill="rgb(205,20,49)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1044" width="10" height="15" fill="rgb(224,178,41)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1060" width="10" height="15" fill="rgb(232,60,27)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="1076" width="10" height="15" fill="rgb(239,187,47)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1092" width="10" height="15" fill="rgb(240,41,39)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.86%)</title><rect x="20" y="1108" width="10" height="15" fill="rgb(229,124,33)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1124" width="10" height="15" fill="rgb(208,60,13)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1140" width="10" height="15" fill="rgb(214,146,24)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1156" width="10" height="15" fill="rgb(214,43,44)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1172" width="10" height="15" fill="rgb(209,121,36)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1188" width="10" height="15" fill="rgb(223,196,3)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="1204" width="10" height="15" fill="rgb(232,5,29)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1220" width="10" height="15" fill="rgb(234,50,44)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 0.86%)</title><rect x="20" y="1236" width="10" height="15" fill="rgb(228,175,3)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1252" width="10" height="15" fill="rgb(243,77,53)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1268" width="10" height="15" fill="rgb(245,68,48)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1284" width="10" height="15" fill="rgb(252,55,25)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1300" width="10" height="15" fill="rgb(214,54,10)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1316" width="10" height="15" fill="rgb(251,66,42)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="1332" width="10" height="15" fill="rgb(222,166,30)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1348" width="10" height="15" fill="rgb(223,197,43)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 0.86%)</title><rect x="20" y="1364" width="10" height="15" fill="rgb(212,142,32)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1380" width="10" height="15" fill="rgb(249,192,32)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1396" width="10" height="15" fill="rgb(240,214,37)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1412" width="10" height="15" fill="rgb(243,97,5)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.86%)</title><rect x="20" y="1428" width="10" height="15" fill="rgb(254,117,36)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.86%)</title><rect x="20" y="1444" width="10" height="15" fill="rgb(226,186,1)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 0.86%)</title><rect x="20" y="1460" width="10" height="15" fill="rgb(214,63,10)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.68%)</title><rect x="22" y="1476" width="8" height="15" fill="rgb(218,13,23)"/><text x="25.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.68%)</title><rect x="22" y="1492" width="8" height="15" fill="rgb(253,105,6)"/><text x="25.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(229,97,5)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(209,94,28)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(219,139,22)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(210,176,12)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(224,13,31)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(214,124,49)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.17%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(249,35,23)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(233,152,28)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(240,82,37)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(208,131,19)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(222,173,42)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(235,69,41)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.17%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(238,99,0)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(253,76,19)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(209,37,46)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(227,173,34)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(220,96,46)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(235,112,5)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.17%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(252,189,50)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(244,58,19)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(211,177,17)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(212,10,25)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(209,79,17)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(224,138,44)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.17%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(242,23,36)"/><text x="33.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(230,128,27)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(222,100,27)"/><text x="33.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(233,13,46)"/><text x="33.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(209,9,45)"/><text x="33.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(223,200,30)"/><text x="33.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.17%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(247,62,30)"/><text x="33.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(205,218,20)"/><text x="33.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(241,7,12)"/><text x="33.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(243,77,17)"/><text x="33.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(233,211,31)"/><text x="33.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(223,119,0)"/><text x="33.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.17%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(235,109,53)"/><text x="33.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(222,54,39)"/><text x="33.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1716" width="2" height="15" fill="rgb(235,6,9)"/><text x="33.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1732" width="2" height="15" fill="rgb(250,35,19)"/><text x="33.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1748" width="2" height="15" fill="rgb(231,184,16)"/><text x="33.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1764" width="2" height="15" fill="rgb(252,166,7)"/><text x="33.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.17%)</title><rect x="30" y="1780" width="2" height="15" fill="rgb(252,56,23)"/><text x="33.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1796" width="2" height="15" fill="rgb(250,183,23)"/><text x="33.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1812" width="2" height="15" fill="rgb(252,227,13)"/><text x="33.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1828" width="2" height="15" fill="rgb(231,61,23)"/><text x="33.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="1844" width="2" height="15" fill="rgb(212,223,34)"/><text x="33.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1860" width="2" height="15" fill="rgb(230,59,3)"/><text x="33.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.17%)</title><rect x="30" y="1876" width="2" height="15" fill="rgb(219,144,46)"/><text x="33.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="30" y="1892" width="2" height="15" fill="rgb(214,102,46)"/><text x="33.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="30" y="1908" width="2" height="15" fill="rgb(248,37,18)"/><text x="33.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="30" y="1924" width="2" height="15" fill="rgb(247,128,30)"/><text x="33.00" y="1934.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.17%)</title><rect x="30" y="1940" width="2" height="15" fill="rgb(230,50,21)"/><text x="33.00" y="1950.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.17%)</title><rect x="30" y="1956" width="2" height="15" fill="rgb(241,35,16)"/><text x="33.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.34%)</title><rect x="30" y="724" width="4" height="15" fill="rgb(231,90,46)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="740" width="4" height="15" fill="rgb(219,198,18)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="756" width="4" height="15" fill="rgb(209,66,26)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="772" width="4" height="15" fill="rgb(223,84,12)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="30" y="788" width="4" height="15" fill="rgb(221,217,15)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="804" width="4" height="15" fill="rgb(226,62,9)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.34%)</title><rect x="30" y="820" width="4" height="15" fill="rgb(217,102,24)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(229,157,38)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(220,113,1)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="868" width="4" height="15" fill="rgb(236,142,47)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="30" y="884" width="4" height="15" fill="rgb(222,2,14)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(213,170,33)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.34%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(211,159,39)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(211,167,22)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(227,27,46)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(234,162,49)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(213,140,38)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="996" width="4" height="15" fill="rgb(221,2,40)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.34%)</title><rect x="30" y="1012" width="4" height="15" fill="rgb(250,2,32)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="1028" width="4" height="15" fill="rgb(244,8,33)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="1044" width="4" height="15" fill="rgb(209,183,14)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="1060" width="4" height="15" fill="rgb(254,47,51)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="30" y="1076" width="4" height="15" fill="rgb(236,0,24)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="30" y="1092" width="4" height="15" fill="rgb(237,101,43)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.34%)</title><rect x="30" y="1108" width="4" height="15" fill="rgb(220,85,17)"/><text x="33.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(229,79,2)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(245,109,36)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(240,121,40)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1172" width="2" height="15" fill="rgb(216,132,17)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1188" width="2" height="15" fill="rgb(213,16,44)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="1204" width="2" height="15" fill="rgb(211,192,7)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="1220" width="2" height="15" fill="rgb(205,65,33)"/><text x="35.00" y="1230.50"></text></g><g><title>0x7f383d0f46b8 (?) (1 samples, 0.17%)</title><rect x="32" y="1236" width="2" height="15" fill="rgb(212,26,46)"/><text x="35.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.37%)</title><rect x="20" y="436" width="16" height="15" fill="rgb(244,131,49)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.37%)</title><rect x="20" y="452" width="16" height="15" fill="rgb(235,142,44)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.37%)</title><rect x="20" y="468" width="16" height="15" fill="rgb(221,54,44)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="484" width="6" height="15" fill="rgb(245,156,3)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="30" y="500" width="6" height="15" fill="rgb(238,198,54)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="516" width="6" height="15" fill="rgb(205,39,9)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.51%)</title><rect x="30" y="532" width="6" height="15" fill="rgb(216,148,15)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="548" width="6" height="15" fill="rgb(253,171,7)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="564" width="6" height="15" fill="rgb(253,79,12)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="580" width="6" height="15" fill="rgb(250,117,19)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="30" y="596" width="6" height="15" fill="rgb(230,151,23)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="612" width="6" height="15" fill="rgb(225,224,37)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.51%)</title><rect x="30" y="628" width="6" height="15" fill="rgb(252,100,49)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="644" width="6" height="15" fill="rgb(208,0,15)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="660" width="6" height="15" fill="rgb(236,120,13)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="676" width="6" height="15" fill="rgb(208,28,32)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="30" y="692" width="6" height="15" fill="rgb(225,94,23)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="30" y="708" width="6" height="15" fill="rgb(218,9,14)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/api.py) (1 samples, 0.17%)</title><rect x="34" y="724" width="2" height="15" fill="rgb(234,193,10)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="740" width="2" height="15" fill="rgb(223,17,50)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="756" width="2" height="15" fill="rgb(216,163,39)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="772" width="2" height="15" fill="rgb(212,72,34)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="788" width="2" height="15" fill="rgb(250,135,12)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="804" width="2" height="15" fill="rgb(224,61,24)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/eval.py) (1 samples, 0.17%)</title><rect x="34" y="820" width="2" height="15" fill="rgb(248,160,53)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(210,172,10)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(222,151,25)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(235,216,50)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(223,175,37)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(207,84,41)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/engines.py) (1 samples, 0.17%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(244,59,33)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(244,0,33)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(205,130,38)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(254,168,24)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(253,80,31)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(236,221,17)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/ops.py) (1 samples, 0.17%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(246,6,14)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 1.54%)</title><rect x="20" y="340" width="18" height="15" fill="rgb(227,75,28)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.54%)</title><rect x="20" y="356" width="18" height="15" fill="rgb(214,182,15)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.54%)</title><rect x="20" y="372" width="18" height="15" fill="rgb(245,114,18)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.54%)</title><rect x="20" y="388" width="18" height="15" fill="rgb(208,184,45)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.54%)</title><rect x="20" y="404" width="18" height="15" fill="rgb(223,138,9)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.54%)</title><rect x="20" y="420" width="18" height="15" fill="rgb(248,190,35)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.17%)</title><rect x="36" y="436" width="2" height="15" fill="rgb(235,72,6)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="452" width="2" height="15" fill="rgb(223,223,6)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="468" width="2" height="15" fill="rgb(233,188,5)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="484" width="2" height="15" fill="rgb(216,21,37)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="500" width="2" height="15" fill="rgb(235,163,10)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="516" width="2" height="15" fill="rgb(247,180,40)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.17%)</title><rect x="36" y="532" width="2" height="15" fill="rgb(226,15,8)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="548" width="2" height="15" fill="rgb(228,21,52)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="564" width="2" height="15" fill="rgb(236,156,8)"/><text x="39.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="580" width="2" height="15" fill="rgb(211,168,48)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="596" width="2" height="15" fill="rgb(209,83,54)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="612" width="2" height="15" fill="rgb(244,79,10)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="628" width="2" height="15" fill="rgb(221,183,22)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="644" width="2" height="15" fill="rgb(251,215,40)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="660" width="2" height="15" fill="rgb(246,141,6)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.17%)</title><rect x="36" y="676" width="2" height="15" fill="rgb(205,28,36)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="692" width="2" height="15" fill="rgb(227,71,14)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="708" width="2" height="15" fill="rgb(209,73,36)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="724" width="2" height="15" fill="rgb(218,65,41)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="740" width="2" height="15" fill="rgb(225,224,42)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="756" width="2" height="15" fill="rgb(232,49,15)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.17%)</title><rect x="36" y="772" width="2" height="15" fill="rgb(239,229,30)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="788" width="2" height="15" fill="rgb(237,36,9)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="804" width="2" height="15" fill="rgb(221,198,25)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="820" width="2" height="15" fill="rgb(216,73,19)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="836" width="2" height="15" fill="rgb(212,131,33)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="852" width="2" height="15" fill="rgb(227,34,8)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.17%)</title><rect x="36" y="868" width="2" height="15" fill="rgb(220,58,28)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="884" width="2" height="15" fill="rgb(253,205,39)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="900" width="2" height="15" fill="rgb(247,2,13)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="916" width="2" height="15" fill="rgb(242,9,13)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="932" width="2" height="15" fill="rgb(242,96,4)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="948" width="2" height="15" fill="rgb(238,126,17)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/miobase.py) (1 samples, 0.17%)</title><rect x="36" y="964" width="2" height="15" fill="rgb(211,177,8)"/><text x="39.00" y="974.50"></text></g><g><title>filldoc (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="36" y="980" width="2" height="15" fill="rgb(247,123,47)"/><text x="39.00" y="990.50"></text></g><g><title>unindent_dict (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="36" y="996" width="2" height="15" fill="rgb(231,64,15)"/><text x="39.00" y="1006.50"></text></g><g><title>unindent_string (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="36" y="1012" width="2" height="15" fill="rgb(206,182,19)"/><text x="39.00" y="1022.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="36" y="1028" width="2" height="15" fill="rgb(221,100,39)"/><text x="39.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.17%)</title><rect x="38" y="580" width="2" height="15" fill="rgb(244,84,52)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="596" width="2" height="15" fill="rgb(241,210,36)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="612" width="2" height="15" fill="rgb(237,192,6)"/><text x="41.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="628" width="2" height="15" fill="rgb(248,136,40)"/><text x="41.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="38" y="644" width="2" height="15" fill="rgb(231,215,39)"/><text x="41.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="660" width="2" height="15" fill="rgb(242,143,11)"/><text x="41.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.17%)</title><rect x="38" y="676" width="2" height="15" fill="rgb(224,154,20)"/><text x="41.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="692" width="2" height="15" fill="rgb(222,12,21)"/><text x="41.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="708" width="2" height="15" fill="rgb(236,121,15)"/><text x="41.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="724" width="2" height="15" fill="rgb(241,162,14)"/><text x="41.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="38" y="740" width="2" height="15" fill="rgb(242,63,33)"/><text x="41.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="38" y="756" width="2" height="15" fill="rgb(225,69,31)"/><text x="41.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.17%)</title><rect x="38" y="772" width="2" height="15" fill="rgb(208,182,46)"/><text x="41.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="38" y="788" width="2" height="15" fill="rgb(246,217,2)"/><text x="41.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="38" y="804" width="2" height="15" fill="rgb(246,109,18)"/><text x="41.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="820" width="2" height="15" fill="rgb(230,99,12)"/><text x="41.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="836" width="2" height="15" fill="rgb(234,142,11)"/><text x="41.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="852" width="2" height="15" fill="rgb(219,149,50)"/><text x="41.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="868" width="2" height="15" fill="rgb(207,45,7)"/><text x="41.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="884" width="2" height="15" fill="rgb(206,74,37)"/><text x="41.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="900" width="2" height="15" fill="rgb(211,176,9)"/><text x="41.00" y="910.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="916" width="2" height="15" fill="rgb(233,6,51)"/><text x="41.00" y="926.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.17%)</title><rect x="38" y="932" width="2" height="15" fill="rgb(233,28,50)"/><text x="41.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 1.88%)</title><rect x="20" y="244" width="22" height="15" fill="rgb(234,17,23)"/><text x="23.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.88%)</title><rect x="20" y="260" width="22" height="15" fill="rgb(245,144,32)"/><text x="23.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.88%)</title><rect x="20" y="276" width="22" height="15" fill="rgb(237,209,28)"/><text x="23.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.88%)</title><rect x="20" y="292" width="22" height="15" fill="rgb(231,111,19)"/><text x="23.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.88%)</title><rect x="20" y="308" width="22" height="15" fill="rgb(251,148,54)"/><text x="23.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.88%)</title><rect x="20" y="324" width="22" height="15" fill="rgb(211,32,46)"/><text x="23.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.34%)</title><rect x="38" y="340" width="4" height="15" fill="rgb(234,9,15)"/><text x="41.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="356" width="4" height="15" fill="rgb(205,35,33)"/><text x="41.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="372" width="4" height="15" fill="rgb(213,40,24)"/><text x="41.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="388" width="4" height="15" fill="rgb(238,48,6)"/><text x="41.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="404" width="4" height="15" fill="rgb(226,162,34)"/><text x="41.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="420" width="4" height="15" fill="rgb(231,20,29)"/><text x="41.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="436" width="4" height="15" fill="rgb(230,213,30)"/><text x="41.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="38" y="452" width="4" height="15" fill="rgb(209,163,41)"/><text x="41.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="468" width="4" height="15" fill="rgb(243,5,47)"/><text x="41.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.34%)</title><rect x="38" y="484" width="4" height="15" fill="rgb(205,36,48)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="500" width="4" height="15" fill="rgb(234,113,3)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="516" width="4" height="15" fill="rgb(251,15,54)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="532" width="4" height="15" fill="rgb(236,58,21)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="38" y="548" width="4" height="15" fill="rgb(219,190,38)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="38" y="564" width="4" height="15" fill="rgb(224,150,13)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.17%)</title><rect x="40" y="580" width="2" height="15" fill="rgb(249,200,20)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="596" width="2" height="15" fill="rgb(210,129,7)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="612" width="2" height="15" fill="rgb(224,90,9)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="628" width="2" height="15" fill="rgb(228,72,2)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="644" width="2" height="15" fill="rgb(224,26,23)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="660" width="2" height="15" fill="rgb(217,158,19)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.17%)</title><rect x="40" y="676" width="2" height="15" fill="rgb(225,191,48)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="692" width="2" height="15" fill="rgb(232,118,17)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="708" width="2" height="15" fill="rgb(211,46,4)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="724" width="2" height="15" fill="rgb(230,206,49)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="740" width="2" height="15" fill="rgb(252,81,29)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="756" width="2" height="15" fill="rgb(216,105,50)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.17%)</title><rect x="40" y="772" width="2" height="15" fill="rgb(253,159,14)"/><text x="43.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="788" width="2" height="15" fill="rgb(245,229,13)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="804" width="2" height="15" fill="rgb(247,155,34)"/><text x="43.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="820" width="2" height="15" fill="rgb(214,92,10)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(249,215,32)"/><text x="43.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(208,181,52)"/><text x="43.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(216,223,47)"/><text x="43.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(234,137,36)"/><text x="43.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.17%)</title><rect x="40" y="900" width="2" height="15" fill="rgb(231,227,16)"/><text x="43.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="916" width="2" height="15" fill="rgb(212,94,38)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(249,42,8)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(228,40,12)"/><text x="43.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(242,170,13)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(251,195,52)"/><text x="43.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(212,229,50)"/><text x="43.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(241,59,3)"/><text x="43.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(236,213,0)"/><text x="43.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.17%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(246,65,5)"/><text x="43.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(250,184,25)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(220,212,8)"/><text x="43.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(230,35,4)"/><text x="43.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(238,72,41)"/><text x="43.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(212,20,29)"/><text x="43.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(207,125,13)"/><text x="43.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(211,154,30)"/><text x="43.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.17%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(253,64,23)"/><text x="43.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(240,227,39)"/><text x="43.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(212,27,38)"/><text x="43.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(244,36,19)"/><text x="43.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(242,3,48)"/><text x="43.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1252" width="2" height="15" fill="rgb(250,60,32)"/><text x="43.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.17%)</title><rect x="40" y="1268" width="2" height="15" fill="rgb(220,223,31)"/><text x="43.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1284" width="2" height="15" fill="rgb(240,16,36)"/><text x="43.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1300" width="2" height="15" fill="rgb(225,111,42)"/><text x="43.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1316" width="2" height="15" fill="rgb(235,114,30)"/><text x="43.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="1332" width="2" height="15" fill="rgb(224,199,28)"/><text x="43.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1348" width="2" height="15" fill="rgb(230,35,52)"/><text x="43.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.17%)</title><rect x="40" y="1364" width="2" height="15" fill="rgb(244,46,25)"/><text x="43.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.17%)</title><rect x="40" y="1380" width="2" height="15" fill="rgb(234,82,31)"/><text x="43.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.17%)</title><rect x="40" y="1396" width="2" height="15" fill="rgb(212,161,5)"/><text x="43.00" y="1406.50"></text></g><g><title>0x7f383503654d (?) (1 samples, 0.17%)</title><rect x="40" y="1412" width="2" height="15" fill="rgb(248,162,37)"/><text x="43.00" y="1422.50"></text></g><g><title>0x7f3835077231 (?) (1 samples, 0.17%)</title><rect x="40" y="1428" width="2" height="15" fill="rgb(218,152,32)"/><text x="43.00" y="1438.50"></text></g><g><title>0x7f3835138480 (?) (1 samples, 0.17%)</title><rect x="40" y="1444" width="2" height="15" fill="rgb(228,60,25)"/><text x="43.00" y="1454.50"></text></g><g><title>0x7f3835176d69 (?) (1 samples, 0.17%)</title><rect x="40" y="1460" width="2" height="15" fill="rgb(232,82,38)"/><text x="43.00" y="1470.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="1476" width="2" height="15" fill="rgb(238,173,42)"/><text x="43.00" y="1486.50"></text></g><g><title>0x7f3835137d30 (?) (1 samples, 0.17%)</title><rect x="40" y="1492" width="2" height="15" fill="rgb(214,13,15)"/><text x="43.00" y="1502.50"></text></g><g><title>0x7f38350e3e38 (?) (1 samples, 0.17%)</title><rect x="40" y="1508" width="2" height="15" fill="rgb(237,141,23)"/><text x="43.00" y="1518.50"></text></g><g><title>0x7f3835138514 (?) (1 samples, 0.17%)</title><rect x="40" y="1524" width="2" height="15" fill="rgb(223,157,10)"/><text x="43.00" y="1534.50"></text></g><g><title>0x7f3835176d69 (?) (1 samples, 0.17%)</title><rect x="40" y="1540" width="2" height="15" fill="rgb(251,123,33)"/><text x="43.00" y="1550.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="1556" width="2" height="15" fill="rgb(226,26,45)"/><text x="43.00" y="1566.50"></text></g><g><title>0x7f3835137cb9 (?) (1 samples, 0.17%)</title><rect x="40" y="1572" width="2" height="15" fill="rgb(234,219,8)"/><text x="43.00" y="1582.50"></text></g><g><title>0x7f383511ed16 (?) (1 samples, 0.17%)</title><rect x="40" y="1588" width="2" height="15" fill="rgb(249,72,6)"/><text x="43.00" y="1598.50"></text></g><g><title>0x7f383511e7d2 (?) (1 samples, 0.17%)</title><rect x="40" y="1604" width="2" height="15" fill="rgb(246,133,4)"/><text x="43.00" y="1614.50"></text></g><g><title>0x7f3835138343 (?) (1 samples, 0.17%)</title><rect x="40" y="1620" width="2" height="15" fill="rgb(225,30,1)"/><text x="43.00" y="1630.50"></text></g><g><title>0x7f3835176d69 (?) (1 samples, 0.17%)</title><rect x="40" y="1636" width="2" height="15" fill="rgb(213,26,46)"/><text x="43.00" y="1646.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="1652" width="2" height="15" fill="rgb(252,77,44)"/><text x="43.00" y="1662.50"></text></g><g><title>0x7f3835137da9 (?) (1 samples, 0.17%)</title><rect x="40" y="1668" width="2" height="15" fill="rgb(208,211,4)"/><text x="43.00" y="1678.50"></text></g><g><title>0x7f38352044a5 (?) (1 samples, 0.17%)</title><rect x="40" y="1684" width="2" height="15" fill="rgb(224,135,40)"/><text x="43.00" y="1694.50"></text></g><g><title>0x7f383522bb4c (?) (1 samples, 0.17%)</title><rect x="40" y="1700" width="2" height="15" fill="rgb(226,1,45)"/><text x="43.00" y="1710.50"></text></g><g><title>0x7f383511dd89 (?) (1 samples, 0.17%)</title><rect x="40" y="1716" width="2" height="15" fill="rgb(218,17,7)"/><text x="43.00" y="1726.50"></text></g><g><title>0x7f383511daab (?) (1 samples, 0.17%)</title><rect x="40" y="1732" width="2" height="15" fill="rgb(228,1,21)"/><text x="43.00" y="1742.50"></text></g><g><title>0x7f383513a520 (?) (1 samples, 0.17%)</title><rect x="40" y="1748" width="2" height="15" fill="rgb(244,151,24)"/><text x="43.00" y="1758.50"></text></g><g><title>0x7f383513a1a9 (?) (1 samples, 0.17%)</title><rect x="40" y="1764" width="2" height="15" fill="rgb(229,228,2)"/><text x="43.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="260" width="2" height="15" fill="rgb(210,4,1)"/><text x="45.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="276" width="2" height="15" fill="rgb(212,30,25)"/><text x="45.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="292" width="2" height="15" fill="rgb(234,89,23)"/><text x="45.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="308" width="2" height="15" fill="rgb(212,57,36)"/><text x="45.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="324" width="2" height="15" fill="rgb(209,42,17)"/><text x="45.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.17%)</title><rect x="42" y="340" width="2" height="15" fill="rgb(221,208,6)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="356" width="2" height="15" fill="rgb(249,188,44)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="372" width="2" height="15" fill="rgb(206,60,52)"/><text x="45.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="388" width="2" height="15" fill="rgb(216,198,8)"/><text x="45.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="404" width="2" height="15" fill="rgb(224,7,5)"/><text x="45.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="420" width="2" height="15" fill="rgb(250,215,50)"/><text x="45.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.17%)</title><rect x="42" y="436" width="2" height="15" fill="rgb(244,74,35)"/><text x="45.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="452" width="2" height="15" fill="rgb(211,194,28)"/><text x="45.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="468" width="2" height="15" fill="rgb(238,172,41)"/><text x="45.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="484" width="2" height="15" fill="rgb(223,197,48)"/><text x="45.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="500" width="2" height="15" fill="rgb(251,125,29)"/><text x="45.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="516" width="2" height="15" fill="rgb(227,91,15)"/><text x="45.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="532" width="2" height="15" fill="rgb(254,187,40)"/><text x="45.00" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.17%)</title><rect x="44" y="372" width="2" height="15" fill="rgb(251,151,45)"/><text x="47.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="388" width="2" height="15" fill="rgb(252,95,34)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="404" width="2" height="15" fill="rgb(247,84,20)"/><text x="47.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="420" width="2" height="15" fill="rgb(233,191,23)"/><text x="47.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="436" width="2" height="15" fill="rgb(248,161,9)"/><text x="47.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="452" width="2" height="15" fill="rgb(205,17,1)"/><text x="47.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.17%)</title><rect x="44" y="468" width="2" height="15" fill="rgb(225,18,46)"/><text x="47.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="484" width="2" height="15" fill="rgb(239,144,31)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="500" width="2" height="15" fill="rgb(252,151,40)"/><text x="47.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="516" width="2" height="15" fill="rgb(238,198,23)"/><text x="47.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="532" width="2" height="15" fill="rgb(249,131,27)"/><text x="47.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="548" width="2" height="15" fill="rgb(212,104,1)"/><text x="47.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.17%)</title><rect x="44" y="564" width="2" height="15" fill="rgb(246,27,36)"/><text x="47.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="580" width="2" height="15" fill="rgb(240,203,49)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="596" width="2" height="15" fill="rgb(208,111,32)"/><text x="47.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="612" width="2" height="15" fill="rgb(208,28,13)"/><text x="47.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="628" width="2" height="15" fill="rgb(219,128,44)"/><text x="47.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="644" width="2" height="15" fill="rgb(208,21,30)"/><text x="47.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.17%)</title><rect x="44" y="660" width="2" height="15" fill="rgb(229,58,14)"/><text x="47.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(236,58,48)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(227,201,48)"/><text x="47.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(241,166,43)"/><text x="47.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(206,21,47)"/><text x="47.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(218,91,20)"/><text x="47.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.17%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(218,204,39)"/><text x="47.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(238,123,1)"/><text x="47.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(212,169,2)"/><text x="47.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(237,88,48)"/><text x="47.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(211,82,13)"/><text x="47.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(220,100,25)"/><text x="47.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.17%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(226,89,10)"/><text x="47.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(216,123,12)"/><text x="47.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(223,201,0)"/><text x="47.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(251,40,4)"/><text x="47.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(229,68,48)"/><text x="47.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(252,171,1)"/><text x="47.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.17%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(251,124,13)"/><text x="47.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.17%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(220,145,49)"/><text x="47.00" y="974.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.17%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(226,128,10)"/><text x="47.00" y="990.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.17%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(242,216,24)"/><text x="47.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="68" width="36" height="15" fill="rgb(227,161,37)"/><text x="15.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="84" width="36" height="15" fill="rgb(209,37,12)"/><text x="15.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="100" width="36" height="15" fill="rgb(214,219,33)"/><text x="15.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 3.08%)</title><rect x="12" y="116" width="36" height="15" fill="rgb(219,16,51)"/><text x="15.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="132" width="36" height="15" fill="rgb(208,108,37)"/><text x="15.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py) (18 samples, 3.08%)</title><rect x="12" y="148" width="36" height="15" fill="rgb(232,115,35)"/><text x="15.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="164" width="36" height="15" fill="rgb(239,128,28)"/><text x="15.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 3.08%)</title><rect x="12" y="180" width="36" height="15" fill="rgb(250,163,7)"/><text x="15.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.40%)</title><rect x="20" y="196" width="28" height="15" fill="rgb(248,133,4)"/><text x="23.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.40%)</title><rect x="20" y="212" width="28" height="15" fill="rgb(227,167,53)"/><text x="23.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.40%)</title><rect x="20" y="228" width="28" height="15" fill="rgb(232,26,2)"/><text x="23.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.51%)</title><rect x="42" y="244" width="6" height="15" fill="rgb(209,80,0)"/><text x="45.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="260" width="4" height="15" fill="rgb(254,99,48)"/><text x="47.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="276" width="4" height="15" fill="rgb(250,63,14)"/><text x="47.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="292" width="4" height="15" fill="rgb(220,215,52)"/><text x="47.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="308" width="4" height="15" fill="rgb(251,221,22)"/><text x="47.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="324" width="4" height="15" fill="rgb(238,35,2)"/><text x="47.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="44" y="340" width="4" height="15" fill="rgb(235,48,19)"/><text x="47.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="44" y="356" width="4" height="15" fill="rgb(254,74,23)"/><text x="47.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.17%)</title><rect x="46" y="372" width="2" height="15" fill="rgb(235,118,4)"/><text x="49.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="46" y="388" width="2" height="15" fill="rgb(207,0,13)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="46" y="404" width="2" height="15" fill="rgb(241,126,38)"/><text x="49.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="46" y="420" width="2" height="15" fill="rgb(213,96,48)"/><text x="49.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="46" y="436" width="2" height="15" fill="rgb(241,193,53)"/><text x="49.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="46" y="452" width="2" height="15" fill="rgb(227,58,52)"/><text x="49.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="46" y="468" width="2" height="15" fill="rgb(207,88,27)"/><text x="49.00" y="478.50"></text></g><g><title>0x7f386a1c7b9b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="74" y="132" width="2" height="15" fill="rgb(250,183,38)"/><text x="77.00" y="142.50"></text></g><g><title>0x7f386a1c7bc6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="76" y="132" width="2" height="15" fill="rgb(205,142,26)"/><text x="79.00" y="142.50"></text></g><g><title>0x7f386a1c7bdf (libc-2.29.so) (1 samples, 0.17%)</title><rect x="78" y="132" width="2" height="15" fill="rgb(226,81,15)"/><text x="81.00" y="142.50"></text></g><g><title>0x7f386a1c7c14 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="80" y="132" width="2" height="15" fill="rgb(211,48,23)"/><text x="83.00" y="142.50"></text></g><g><title>0x7f386a1c7c1c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="82" y="132" width="2" height="15" fill="rgb(210,89,8)"/><text x="85.00" y="142.50"></text></g><g><title>0x7f386a1c7c36 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="84" y="132" width="2" height="15" fill="rgb(246,58,3)"/><text x="87.00" y="142.50"></text></g><g><title>0x7f386a1c7c49 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="86" y="132" width="2" height="15" fill="rgb(231,115,43)"/><text x="89.00" y="142.50"></text></g><g><title>0x7f386a1c8eb0 (libc-2.29.so) (8 samples, 1.37%)</title><rect x="74" y="116" width="16" height="15" fill="rgb(246,106,30)"/><text x="77.00" y="126.50"></text></g><g><title>0x7f386a1c7c73 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="88" y="132" width="2" height="15" fill="rgb(250,10,54)"/><text x="91.00" y="142.50"></text></g><g><title>0x7f386a1c7aa4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="88" y="148" width="2" height="15" fill="rgb(231,163,3)"/><text x="91.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="94" y="180" width="2" height="15" fill="rgb(238,37,42)"/><text x="97.00" y="190.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="104" y="292" width="2" height="15" fill="rgb(231,54,25)"/><text x="107.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="104" y="308" width="2" height="15" fill="rgb(226,64,21)"/><text x="107.00" y="318.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.68%)</title><rect x="109" y="372" width="8" height="15" fill="rgb(229,89,54)"/><text x="112.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="115" y="388" width="2" height="15" fill="rgb(228,180,5)"/><text x="118.00" y="398.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.03%)</title><rect x="109" y="340" width="12" height="15" fill="rgb(218,39,14)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.03%)</title><rect x="109" y="356" width="12" height="15" fill="rgb(239,44,1)"/><text x="112.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="117" y="372" width="4" height="15" fill="rgb(245,100,37)"/><text x="120.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="117" y="388" width="4" height="15" fill="rgb(231,49,22)"/><text x="120.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="117" y="404" width="4" height="15" fill="rgb(233,116,14)"/><text x="120.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="117" y="420" width="4" height="15" fill="rgb(251,224,47)"/><text x="120.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="117" y="436" width="4" height="15" fill="rgb(214,11,53)"/><text x="120.00" y="446.50"></text></g><g><title>0x7f386a1c8f71 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="125" y="356" width="2" height="15" fill="rgb(247,127,34)"/><text x="128.00" y="366.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.20%)</title><rect x="121" y="340" width="14" height="15" fill="rgb(210,131,20)"/><text x="124.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.68%)</title><rect x="127" y="356" width="8" height="15" fill="rgb(236,112,30)"/><text x="130.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.68%)</title><rect x="135" y="340" width="8" height="15" fill="rgb(239,123,37)"/><text x="138.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="143" y="356" width="2" height="15" fill="rgb(205,169,49)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="143" y="340" width="4" height="15" fill="rgb(218,99,4)"/><text x="146.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="145" y="356" width="2" height="15" fill="rgb(215,26,38)"/><text x="148.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="145" y="372" width="2" height="15" fill="rgb(222,39,37)"/><text x="148.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="153" y="372" width="2" height="15" fill="rgb(209,136,19)"/><text x="156.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="155" y="372" width="2" height="15" fill="rgb(217,127,25)"/><text x="158.00" y="382.50"></text></g><g><title>0x7f386a1c89a1 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="155" y="388" width="2" height="15" fill="rgb(221,121,21)"/><text x="158.00" y="398.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.03%)</title><rect x="147" y="340" width="12" height="15" fill="rgb(244,203,43)"/><text x="150.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.03%)</title><rect x="147" y="356" width="12" height="15" fill="rgb(215,74,12)"/><text x="150.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="372" width="2" height="15" fill="rgb(218,51,10)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="388" width="2" height="15" fill="rgb(222,12,23)"/><text x="160.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="404" width="2" height="15" fill="rgb(252,122,48)"/><text x="160.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="420" width="2" height="15" fill="rgb(215,175,0)"/><text x="160.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="436" width="2" height="15" fill="rgb(206,223,41)"/><text x="160.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="452" width="2" height="15" fill="rgb(221,117,26)"/><text x="160.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="468" width="2" height="15" fill="rgb(220,168,34)"/><text x="160.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="157" y="484" width="2" height="15" fill="rgb(253,145,8)"/><text x="160.00" y="494.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="159" y="340" width="4" height="15" fill="rgb(245,193,27)"/><text x="162.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="159" y="356" width="4" height="15" fill="rgb(251,126,29)"/><text x="162.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="372" width="4" height="15" fill="rgb(219,38,14)"/><text x="162.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="388" width="4" height="15" fill="rgb(213,7,0)"/><text x="162.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="404" width="4" height="15" fill="rgb(220,110,20)"/><text x="162.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="420" width="4" height="15" fill="rgb(208,218,14)"/><text x="162.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="436" width="4" height="15" fill="rgb(245,137,53)"/><text x="162.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="452" width="4" height="15" fill="rgb(254,181,41)"/><text x="162.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_nocopy_anbn_b0 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.34%)</title><rect x="159" y="468" width="4" height="15" fill="rgb(206,34,13)"/><text x="162.00" y="478.50"></text></g><g><title>0x7f386a1c8dfb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="169" y="356" width="2" height="15" fill="rgb(237,157,35)"/><text x="172.00" y="366.50"></text></g><g><title>0x7f386a1c7ab9 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="169" y="372" width="2" height="15" fill="rgb(242,229,1)"/><text x="172.00" y="382.50"></text></g><g><title>0x7f386a347e17 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="171" y="356" width="2" height="15" fill="rgb(215,105,29)"/><text x="174.00" y="366.50"></text></g><g><title>0x7f386a347e71 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="173" y="356" width="4" height="15" fill="rgb(239,90,52)"/><text x="176.00" y="366.50"></text></g><g><title>0x7f386a347e86 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="177" y="356" width="2" height="15" fill="rgb(220,49,7)"/><text x="180.00" y="366.50"></text></g><g><title>0x7f386a347e9e (libm-2.29.so) (2 samples, 0.34%)</title><rect x="179" y="356" width="4" height="15" fill="rgb(238,8,4)"/><text x="182.00" y="366.50"></text></g><g><title>0x7f386a347ea2 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="183" y="356" width="4" height="15" fill="rgb(228,137,20)"/><text x="186.00" y="366.50"></text></g><g><title>0x7f386a347ea6 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="187" y="356" width="2" height="15" fill="rgb(211,89,22)"/><text x="190.00" y="366.50"></text></g><g><title>0x7f386a34a973 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="189" y="356" width="2" height="15" fill="rgb(243,6,54)"/><text x="192.00" y="366.50"></text></g><g><title>0x7f386a34a9a9 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="191" y="356" width="2" height="15" fill="rgb(221,107,25)"/><text x="194.00" y="366.50"></text></g><g><title>0x7f386a34a9c8 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="193" y="356" width="2" height="15" fill="rgb(232,160,29)"/><text x="196.00" y="366.50"></text></g><g><title>0x7f386a34a9f4 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="195" y="356" width="2" height="15" fill="rgb(207,136,45)"/><text x="198.00" y="366.50"></text></g><g><title>0x7f386a34aa15 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="197" y="356" width="4" height="15" fill="rgb(207,111,24)"/><text x="200.00" y="366.50"></text></g><g><title>0x7f386a34aa1d (libm-2.29.so) (1 samples, 0.17%)</title><rect x="201" y="356" width="2" height="15" fill="rgb(232,14,16)"/><text x="204.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.28%)</title><rect x="163" y="340" width="51" height="15" fill="rgb(244,21,43)"/><text x="166.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.86%)</title><rect x="203" y="356" width="11" height="15" fill="rgb(212,173,42)"/><text x="206.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="212" y="372" width="2" height="15" fill="rgb(233,111,42)"/><text x="215.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="340" width="2" height="15" fill="rgb(233,116,36)"/><text x="217.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="356" width="2" height="15" fill="rgb(238,219,43)"/><text x="217.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="372" width="2" height="15" fill="rgb(236,185,11)"/><text x="217.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="388" width="2" height="15" fill="rgb(249,167,18)"/><text x="217.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="404" width="2" height="15" fill="rgb(213,178,32)"/><text x="217.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="420" width="2" height="15" fill="rgb(219,5,47)"/><text x="217.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="214" y="436" width="2" height="15" fill="rgb(227,218,35)"/><text x="217.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="214" y="452" width="2" height="15" fill="rgb(236,106,42)"/><text x="217.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="214" y="468" width="2" height="15" fill="rgb(247,184,45)"/><text x="217.00" y="478.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="216" y="340" width="2" height="15" fill="rgb(224,227,30)"/><text x="219.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(206,173,6)"/><text x="219.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="216" y="372" width="2" height="15" fill="rgb(238,210,20)"/><text x="219.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.71%)</title><rect x="218" y="340" width="20" height="15" fill="rgb(243,23,24)"/><text x="221.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.71%)</title><rect x="218" y="356" width="20" height="15" fill="rgb(211,75,42)"/><text x="221.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.71%)</title><rect x="218" y="372" width="20" height="15" fill="rgb(219,124,37)"/><text x="221.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.51%)</title><rect x="232" y="388" width="6" height="15" fill="rgb(220,10,45)"/><text x="235.00" y="398.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="238" y="340" width="4" height="15" fill="rgb(250,81,37)"/><text x="241.00" y="350.50"></text></g><g><title>0x7f3859c94d50 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="254" y="372" width="2" height="15" fill="rgb(249,45,29)"/><text x="257.00" y="382.50"></text></g><g><title>0x7f386a1c9b1c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="300" y="388" width="2" height="15" fill="rgb(250,38,53)"/><text x="303.00" y="398.50"></text></g><g><title>0x7f386a1c9b49 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="302" y="388" width="3" height="15" fill="rgb(222,123,35)"/><text x="305.00" y="398.50"></text></g><g><title>0x7f386a1c9b76 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="305" y="388" width="2" height="15" fill="rgb(245,98,8)"/><text x="308.00" y="398.50"></text></g><g><title>0x7f386a1c9d36 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="307" y="388" width="2" height="15" fill="rgb(233,9,52)"/><text x="310.00" y="398.50"></text></g><g><title>0x7f386a1c9d48 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="309" y="388" width="2" height="15" fill="rgb(252,31,0)"/><text x="312.00" y="398.50"></text></g><g><title>0x7f386a1c9db4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="311" y="388" width="2" height="15" fill="rgb(228,125,25)"/><text x="314.00" y="398.50"></text></g><g><title>0x7f386a1c9f2a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="313" y="388" width="2" height="15" fill="rgb(212,223,3)"/><text x="316.00" y="398.50"></text></g><g><title>0x7f386a1c9fd2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="315" y="388" width="2" height="15" fill="rgb(209,72,30)"/><text x="318.00" y="398.50"></text></g><g><title>0x7f386a1c9fde (libc-2.29.so) (1 samples, 0.17%)</title><rect x="317" y="388" width="2" height="15" fill="rgb(228,46,25)"/><text x="320.00" y="398.50"></text></g><g><title>0x7f386a1ca040 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(206,30,7)"/><text x="322.00" y="398.50"></text></g><g><title>0x7f386a1ca050 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="321" y="388" width="2" height="15" fill="rgb(229,88,11)"/><text x="324.00" y="398.50"></text></g><g><title>0x7f386a1ca07f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(238,129,32)"/><text x="326.00" y="398.50"></text></g><g><title>0x7f386a1ca384 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="325" y="388" width="2" height="15" fill="rgb(232,42,42)"/><text x="328.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (39 samples, 6.68%)</title><rect x="250" y="356" width="79" height="15" fill="rgb(251,191,5)"/><text x="253.00" y="366.50">operator ..</text></g><g><title>malloc (libc-2.29.so) (36 samples, 6.16%)</title><rect x="256" y="372" width="73" height="15" fill="rgb(238,146,33)"/><text x="259.00" y="382.50">malloc (..</text></g><g><title>0x7f386a1ca3d1 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="327" y="388" width="2" height="15" fill="rgb(230,71,13)"/><text x="330.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (116 samples, 19.86%)</title><rect x="104" y="260" width="235" height="15" fill="rgb(208,158,3)"/><text x="107.00" y="270.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (116 samples, 19.86%)</title><rect x="104" y="276" width="235" height="15" fill="rgb(224,121,10)"/><text x="107.00" y="286.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.69%)</title><rect x="106" y="292" width="233" height="15" fill="rgb(226,70,2)"/><text x="109.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.69%)</title><rect x="106" y="308" width="233" height="15" fill="rgb(231,48,32)"/><text x="109.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.69%)</title><rect x="106" y="324" width="233" height="15" fill="rgb(224,5,51)"/><text x="109.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 8.22%)</title><rect x="242" y="340" width="97" height="15" fill="rgb(233,182,4)"/><text x="245.00" y="350.50">onnxruntime..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.86%)</title><rect x="329" y="356" width="10" height="15" fill="rgb(227,92,9)"/><text x="332.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="339" y="260" width="2" height="15" fill="rgb(205,27,20)"/><text x="342.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="341" y="260" width="2" height="15" fill="rgb(216,138,43)"/><text x="344.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="341" y="276" width="2" height="15" fill="rgb(231,136,44)"/><text x="344.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="341" y="292" width="2" height="15" fill="rgb(232,32,16)"/><text x="344.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="341" y="308" width="2" height="15" fill="rgb(237,149,54)"/><text x="344.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="341" y="324" width="2" height="15" fill="rgb(225,57,10)"/><text x="344.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="341" y="340" width="2" height="15" fill="rgb(210,27,28)"/><text x="344.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="341" y="356" width="2" height="15" fill="rgb(230,180,54)"/><text x="344.00" y="366.50"></text></g><g><title>0x7f386a1c9e4c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="341" y="372" width="2" height="15" fill="rgb(253,126,53)"/><text x="344.00" y="382.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.54%)</title><rect x="406" y="276" width="18" height="15" fill="rgb(216,195,34)"/><text x="409.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 7.02%)</title><rect x="343" y="260" width="83" height="15" fill="rgb(224,50,41)"/><text x="346.00" y="270.50">pybind11:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="424" y="276" width="2" height="15" fill="rgb(241,179,51)"/><text x="427.00" y="286.50"></text></g><g><title>0x7f386a1c8906 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="426" y="292" width="2" height="15" fill="rgb(209,68,41)"/><text x="429.00" y="302.50"></text></g><g><title>0x7f386a1c899b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="428" y="292" width="2" height="15" fill="rgb(233,167,18)"/><text x="431.00" y="302.50"></text></g><g><title>0x7f386a1c89ff (libc-2.29.so) (1 samples, 0.17%)</title><rect x="430" y="292" width="2" height="15" fill="rgb(231,19,28)"/><text x="433.00" y="302.50"></text></g><g><title>0x7f386a1c8d02 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="432" y="292" width="2" height="15" fill="rgb(218,221,50)"/><text x="435.00" y="302.50"></text></g><g><title>0x7f386a1c8d07 (libc-2.29.so) (3 samples, 0.51%)</title><rect x="434" y="292" width="6" height="15" fill="rgb(229,151,19)"/><text x="437.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="440" y="292" width="2" height="15" fill="rgb(229,165,7)"/><text x="443.00" y="302.50"></text></g><g><title>0x7f386a1c8a33 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="442" y="308" width="2" height="15" fill="rgb(213,22,16)"/><text x="445.00" y="318.50"></text></g><g><title>0x7f386a1c8a4b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="444" y="308" width="2" height="15" fill="rgb(226,23,23)"/><text x="447.00" y="318.50"></text></g><g><title>0x7f386a1c8d07 (libc-2.29.so) (6 samples, 1.03%)</title><rect x="446" y="308" width="12" height="15" fill="rgb(220,193,4)"/><text x="449.00" y="318.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (204 samples, 34.93%)</title><rect x="48" y="100" width="412" height="15" fill="rgb(234,154,23)"/><text x="51.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 31.34%)</title><rect x="90" y="116" width="370" height="15" fill="rgb(241,129,33)"/><text x="93.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 31.34%)</title><rect x="90" y="132" width="370" height="15" fill="rgb(243,71,28)"/><text x="93.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (183 samples, 31.34%)</title><rect x="90" y="148" width="370" height="15" fill="rgb(253,183,29)"/><text x="93.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (183 samples, 31.34%)</title><rect x="90" y="164" width="370" height="15" fill="rgb(228,120,23)"/><text x="93.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (180 samples, 30.82%)</title><rect x="96" y="180" width="364" height="15" fill="rgb(206,134,25)"/><text x="99.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (179 samples, 30.65%)</title><rect x="98" y="196" width="362" height="15" fill="rgb(244,217,41)"/><text x="101.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 30.48%)</title><rect x="100" y="212" width="360" height="15" fill="rgb(217,210,2)"/><text x="103.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 30.48%)</title><rect x="100" y="228" width="360" height="15" fill="rgb(229,97,54)"/><text x="103.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 30.31%)</title><rect x="102" y="244" width="358" height="15" fill="rgb(205,131,24)"/><text x="105.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.91%)</title><rect x="426" y="260" width="34" height="15" fill="rgb(216,23,43)"/><text x="429.00" y="270.50">st..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.91%)</title><rect x="426" y="276" width="34" height="15" fill="rgb(231,139,23)"/><text x="429.00" y="286.50">on..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.54%)</title><rect x="442" y="292" width="18" height="15" fill="rgb(234,97,14)"/><text x="445.00" y="302.50"></text></g><g><title>0x7f386a1c8d13 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(228,207,33)"/><text x="461.00" y="318.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (205 samples, 35.10%)</title><rect x="48" y="68" width="414" height="15" fill="rgb(223,206,23)"/><text x="51.00" y="78.50">profile_ort (bench_BernoulliNB_default_b_cl_1000_4_12_fl..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (205 samples, 35.10%)</title><rect x="48" y="84" width="414" height="15" fill="rgb(214,16,45)"/><text x="51.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="460" y="100" width="2" height="15" fill="rgb(210,131,15)"/><text x="463.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="460" y="116" width="2" height="15" fill="rgb(237,119,47)"/><text x="463.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="460" y="132" width="2" height="15" fill="rgb(230,34,29)"/><text x="463.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="460" y="148" width="2" height="15" fill="rgb(241,159,54)"/><text x="463.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="460" y="164" width="2" height="15" fill="rgb(247,47,8)"/><text x="463.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="180" width="2" height="15" fill="rgb(224,117,9)"/><text x="463.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="196" width="2" height="15" fill="rgb(239,157,6)"/><text x="463.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="212" width="2" height="15" fill="rgb(230,209,46)"/><text x="463.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="460" y="228" width="2" height="15" fill="rgb(242,67,35)"/><text x="463.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="244" width="2" height="15" fill="rgb(230,139,23)"/><text x="463.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.17%)</title><rect x="460" y="260" width="2" height="15" fill="rgb(240,143,1)"/><text x="463.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="276" width="2" height="15" fill="rgb(227,24,52)"/><text x="463.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="292" width="2" height="15" fill="rgb(248,191,44)"/><text x="463.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="308" width="2" height="15" fill="rgb(214,6,32)"/><text x="463.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="460" y="324" width="2" height="15" fill="rgb(238,55,35)"/><text x="463.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(235,167,13)"/><text x="463.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.17%)</title><rect x="460" y="356" width="2" height="15" fill="rgb(232,153,51)"/><text x="463.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="372" width="2" height="15" fill="rgb(247,19,3)"/><text x="463.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="388" width="2" height="15" fill="rgb(217,156,52)"/><text x="463.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="404" width="2" height="15" fill="rgb(217,136,19)"/><text x="463.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="460" y="420" width="2" height="15" fill="rgb(230,22,23)"/><text x="463.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="436" width="2" height="15" fill="rgb(237,37,24)"/><text x="463.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.17%)</title><rect x="460" y="452" width="2" height="15" fill="rgb(215,3,28)"/><text x="463.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="468" width="2" height="15" fill="rgb(232,201,40)"/><text x="463.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="484" width="2" height="15" fill="rgb(241,39,26)"/><text x="463.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="500" width="2" height="15" fill="rgb(243,28,3)"/><text x="463.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="516" width="2" height="15" fill="rgb(241,83,30)"/><text x="463.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="460" y="532" width="2" height="15" fill="rgb(245,185,16)"/><text x="463.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="460" y="548" width="2" height="15" fill="rgb(215,153,14)"/><text x="463.00" y="558.50"></text></g><g><title>0x7f382a213af0 (?) (1 samples, 0.17%)</title><rect x="460" y="564" width="2" height="15" fill="rgb(241,94,24)"/><text x="463.00" y="574.50"></text></g><g><title>0x7f382a2261d2 (?) (1 samples, 0.17%)</title><rect x="460" y="580" width="2" height="15" fill="rgb(222,88,51)"/><text x="463.00" y="590.50"></text></g><g><title>0x7f382a2257b8 (?) (1 samples, 0.17%)</title><rect x="460" y="596" width="2" height="15" fill="rgb(253,121,0)"/><text x="463.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="460" y="612" width="2" height="15" fill="rgb(250,19,21)"/><text x="463.00" y="622.50"></text></g><g><title>0x7f382a223994 (?) (1 samples, 0.17%)</title><rect x="460" y="628" width="2" height="15" fill="rgb(208,55,7)"/><text x="463.00" y="638.50"></text></g><g><title>0x7f382a2224f7 (?) (1 samples, 0.17%)</title><rect x="460" y="644" width="2" height="15" fill="rgb(251,226,8)"/><text x="463.00" y="654.50"></text></g><g><title>0x7f382a7cceb1 (?) (1 samples, 0.17%)</title><rect x="460" y="660" width="2" height="15" fill="rgb(221,55,43)"/><text x="463.00" y="670.50"></text></g><g><title>0x7f382a22459c (?) (1 samples, 0.17%)</title><rect x="460" y="676" width="2" height="15" fill="rgb(251,64,10)"/><text x="463.00" y="686.50"></text></g><g><title>0x7f382a7c93ad (?) (1 samples, 0.17%)</title><rect x="460" y="692" width="2" height="15" fill="rgb(234,217,33)"/><text x="463.00" y="702.50"></text></g><g><title>0x7f382a7c9023 (?) (1 samples, 0.17%)</title><rect x="460" y="708" width="2" height="15" fill="rgb(205,206,39)"/><text x="463.00" y="718.50"></text></g><g><title>0x7f382a7cd749 (?) (1 samples, 0.17%)</title><rect x="460" y="724" width="2" height="15" fill="rgb(224,107,31)"/><text x="463.00" y="734.50"></text></g><g><title>0x7f382a7cd5fa (?) (1 samples, 0.17%)</title><rect x="460" y="740" width="2" height="15" fill="rgb(220,221,35)"/><text x="463.00" y="750.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="460" y="756" width="2" height="15" fill="rgb(205,117,29)"/><text x="463.00" y="766.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="460" y="772" width="2" height="15" fill="rgb(242,52,0)"/><text x="463.00" y="782.50"></text></g><g><title>0x7f386a1c9d67 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="460" y="788" width="2" height="15" fill="rgb(233,74,16)"/><text x="463.00" y="798.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.51%)</title><rect x="523" y="196" width="6" height="15" fill="rgb(212,187,41)"/><text x="526.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.17%)</title><rect x="545" y="228" width="2" height="15" fill="rgb(232,35,10)"/><text x="548.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.17%)</title><rect x="545" y="244" width="2" height="15" fill="rgb(208,39,31)"/><text x="548.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.17%)</title><rect x="545" y="260" width="2" height="15" fill="rgb(226,32,18)"/><text x="548.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.17%)</title><rect x="547" y="228" width="2" height="15" fill="rgb(222,102,43)"/><text x="550.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.17%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(253,94,11)"/><text x="550.00" y="254.50"></text></g><g><title>0x7f386a1de776 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="547" y="260" width="2" height="15" fill="rgb(251,153,53)"/><text x="550.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="549" y="244" width="2" height="15" fill="rgb(207,29,38)"/><text x="552.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="549" y="260" width="2" height="15" fill="rgb(205,101,46)"/><text x="552.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="549" y="276" width="2" height="15" fill="rgb(212,17,28)"/><text x="552.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.17%)</title><rect x="549" y="292" width="2" height="15" fill="rgb(238,141,23)"/><text x="552.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="549" y="308" width="2" height="15" fill="rgb(251,45,27)"/><text x="552.00" y="318.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="551" y="244" width="2" height="15" fill="rgb(238,144,15)"/><text x="554.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (8 samples, 1.37%)</title><rect x="553" y="276" width="16" height="15" fill="rgb(232,6,8)"/><text x="556.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (8 samples, 1.37%)</title><rect x="553" y="292" width="16" height="15" fill="rgb(242,64,43)"/><text x="556.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (7 samples, 1.20%)</title><rect x="555" y="308" width="14" height="15" fill="rgb(218,204,27)"/><text x="558.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (7 samples, 1.20%)</title><rect x="555" y="324" width="14" height="15" fill="rgb(207,4,30)"/><text x="558.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (3 samples, 0.51%)</title><rect x="563" y="340" width="6" height="15" fill="rgb(248,49,32)"/><text x="566.00" y="350.50"></text></g><g><title>0x7f38693ea740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(250,223,45)"/><text x="570.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.17%)</title><rect x="585" y="340" width="2" height="15" fill="rgb(232,93,43)"/><text x="588.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (3 samples, 0.51%)</title><rect x="591" y="356" width="6" height="15" fill="rgb(224,166,21)"/><text x="594.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (16 samples, 2.74%)</title><rect x="569" y="292" width="33" height="15" fill="rgb(251,52,33)"/><text x="572.00" y="302.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (16 samples, 2.74%)</title><rect x="569" y="308" width="33" height="15" fill="rgb(232,162,3)"/><text x="572.00" y="318.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (16 samples, 2.74%)</title><rect x="569" y="324" width="33" height="15" fill="rgb(245,77,12)"/><text x="572.00" y="334.50">Py..</text></g><g><title>_array_find_python_scalar_type (common.c) (7 samples, 1.20%)</title><rect x="587" y="340" width="15" height="15" fill="rgb(221,1,7)"/><text x="590.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h) (2 samples, 0.34%)</title><rect x="597" y="356" width="5" height="15" fill="rgb(210,92,4)"/><text x="600.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (40 samples, 6.85%)</title><rect x="541" y="212" width="81" height="15" fill="rgb(239,179,47)"/><text x="544.00" y="222.50">_run (mlp..</text></g><g><title>array_subscript (mapping.c) (36 samples, 6.16%)</title><rect x="549" y="228" width="73" height="15" fill="rgb(243,136,5)"/><text x="552.00" y="238.50">array_su..</text></g><g><title>prepare_index (mapping.c) (34 samples, 5.82%)</title><rect x="553" y="244" width="69" height="15" fill="rgb(224,63,10)"/><text x="556.00" y="254.50">prepare..</text></g><g><title>PyArray_FromAny (ctors.c) (34 samples, 5.82%)</title><rect x="553" y="260" width="69" height="15" fill="rgb(233,158,15)"/><text x="556.00" y="270.50">PyArray..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (26 samples, 4.45%)</title><rect x="569" y="276" width="53" height="15" fill="rgb(239,188,10)"/><text x="572.00" y="286.50">PyArr..</text></g><g><title>discover_dimensions (ctors.c) (10 samples, 1.71%)</title><rect x="602" y="292" width="20" height="15" fill="rgb(236,170,29)"/><text x="605.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (7 samples, 1.20%)</title><rect x="608" y="308" width="14" height="15" fill="rgb(208,154,54)"/><text x="611.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.17%)</title><rect x="626" y="260" width="2" height="15" fill="rgb(250,174,45)"/><text x="629.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.17%)</title><rect x="626" y="276" width="2" height="15" fill="rgb(234,109,49)"/><text x="629.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="626" y="292" width="2" height="15" fill="rgb(213,135,9)"/><text x="629.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 0.68%)</title><rect x="622" y="212" width="8" height="15" fill="rgb(208,166,45)"/><text x="625.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.34%)</title><rect x="626" y="228" width="4" height="15" fill="rgb(207,148,53)"/><text x="629.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.34%)</title><rect x="626" y="244" width="4" height="15" fill="rgb(219,89,33)"/><text x="629.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.17%)</title><rect x="628" y="260" width="2" height="15" fill="rgb(234,116,12)"/><text x="631.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="628" y="276" width="2" height="15" fill="rgb(254,109,40)"/><text x="631.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.17%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(210,105,15)"/><text x="631.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="628" y="308" width="2" height="15" fill="rgb(220,129,49)"/><text x="631.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.17%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(242,36,1)"/><text x="631.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (1 samples, 0.17%)</title><rect x="630" y="212" width="2" height="15" fill="rgb(212,169,26)"/><text x="633.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.17%)</title><rect x="630" y="228" width="2" height="15" fill="rgb(216,216,50)"/><text x="633.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="630" y="244" width="2" height="15" fill="rgb(232,83,45)"/><text x="633.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(224,11,21)"/><text x="633.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(254,149,15)"/><text x="633.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src) (1 samples, 0.17%)</title><rect x="630" y="292" width="2" height="15" fill="rgb(250,24,11)"/><text x="633.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="630" y="308" width="2" height="15" fill="rgb(249,166,45)"/><text x="633.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="630" y="324" width="2" height="15" fill="rgb(205,133,3)"/><text x="633.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="630" y="340" width="2" height="15" fill="rgb(241,41,39)"/><text x="633.00" y="350.50"></text></g><g><title>_mm_and_si128 (emmintrin.h) (1 samples, 0.17%)</title><rect x="630" y="356" width="2" height="15" fill="rgb(252,174,44)"/><text x="633.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (2 samples, 0.34%)</title><rect x="632" y="212" width="4" height="15" fill="rgb(206,89,3)"/><text x="635.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.34%)</title><rect x="632" y="228" width="4" height="15" fill="rgb(241,81,1)"/><text x="635.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.34%)</title><rect x="632" y="244" width="4" height="15" fill="rgb(225,1,7)"/><text x="635.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.34%)</title><rect x="632" y="260" width="4" height="15" fill="rgb(220,55,22)"/><text x="635.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (2 samples, 0.34%)</title><rect x="632" y="276" width="4" height="15" fill="rgb(249,108,52)"/><text x="635.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.34%)</title><rect x="632" y="292" width="4" height="15" fill="rgb(250,114,6)"/><text x="635.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="638" y="260" width="2" height="15" fill="rgb(215,85,49)"/><text x="641.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="638" y="276" width="2" height="15" fill="rgb(251,41,47)"/><text x="641.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.17%)</title><rect x="638" y="292" width="2" height="15" fill="rgb(236,176,44)"/><text x="641.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="640" y="276" width="2" height="15" fill="rgb(211,189,14)"/><text x="643.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(215,119,34)"/><text x="643.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="640" y="308" width="2" height="15" fill="rgb(213,6,17)"/><text x="643.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.17%)</title><rect x="640" y="324" width="2" height="15" fill="rgb(236,59,34)"/><text x="643.00" y="334.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.17%)</title><rect x="648" y="308" width="2" height="15" fill="rgb(208,122,43)"/><text x="651.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="648" y="324" width="2" height="15" fill="rgb(207,19,42)"/><text x="651.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="648" y="340" width="2" height="15" fill="rgb(251,113,50)"/><text x="651.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.17%)</title><rect x="648" y="356" width="2" height="15" fill="rgb(224,42,2)"/><text x="651.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.51%)</title><rect x="650" y="324" width="6" height="15" fill="rgb(220,104,50)"/><text x="653.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.68%)</title><rect x="650" y="308" width="8" height="15" fill="rgb(220,155,46)"/><text x="653.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.17%)</title><rect x="656" y="324" width="2" height="15" fill="rgb(236,148,41)"/><text x="659.00" y="334.50"></text></g><g><title>0x7f386a1e8d50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(226,19,34)"/><text x="665.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (12 samples, 2.05%)</title><rect x="642" y="292" width="24" height="15" fill="rgb(226,135,34)"/><text x="645.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.68%)</title><rect x="658" y="308" width="8" height="15" fill="rgb(243,118,18)"/><text x="661.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.68%)</title><rect x="658" y="324" width="8" height="15" fill="rgb(208,103,36)"/><text x="661.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.68%)</title><rect x="658" y="340" width="8" height="15" fill="rgb(210,153,6)"/><text x="661.00" y="350.50"></text></g><g><title>0x7f386a1e8dbb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="664" y="356" width="2" height="15" fill="rgb(212,19,49)"/><text x="667.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 2.23%)</title><rect x="642" y="276" width="26" height="15" fill="rgb(230,215,49)"/><text x="645.00" y="286.50">e..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="666" y="292" width="2" height="15" fill="rgb(239,196,13)"/><text x="669.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.17%)</title><rect x="666" y="308" width="2" height="15" fill="rgb(219,173,43)"/><text x="669.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(206,20,46)"/><text x="669.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="666" y="340" width="2" height="15" fill="rgb(237,26,10)"/><text x="669.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.51%)</title><rect x="668" y="308" width="6" height="15" fill="rgb(231,125,29)"/><text x="671.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.17%)</title><rect x="672" y="324" width="2" height="15" fill="rgb(246,83,49)"/><text x="675.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (20 samples, 3.42%)</title><rect x="636" y="212" width="40" height="15" fill="rgb(212,161,31)"/><text x="639.00" y="222.50">_ru..</text></g><g><title>array_add (number.c) (19 samples, 3.25%)</title><rect x="638" y="228" width="38" height="15" fill="rgb(235,155,16)"/><text x="641.00" y="238.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 3.25%)</title><rect x="638" y="244" width="38" height="15" fill="rgb(237,107,34)"/><text x="641.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 3.08%)</title><rect x="640" y="260" width="36" height="15" fill="rgb(249,198,10)"/><text x="643.00" y="270.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.68%)</title><rect x="668" y="276" width="8" height="15" fill="rgb(251,219,14)"/><text x="671.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.68%)</title><rect x="668" y="292" width="8" height="15" fill="rgb(215,49,5)"/><text x="671.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.17%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(238,39,23)"/><text x="677.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="674" y="324" width="2" height="15" fill="rgb(234,20,21)"/><text x="677.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="674" y="340" width="2" height="15" fill="rgb(227,59,25)"/><text x="677.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.17%)</title><rect x="690" y="308" width="2" height="15" fill="rgb(226,166,11)"/><text x="693.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="690" y="324" width="2" height="15" fill="rgb(207,207,37)"/><text x="693.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="690" y="340" width="2" height="15" fill="rgb(251,132,5)"/><text x="693.00" y="350.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="690" y="356" width="2" height="15" fill="rgb(228,211,43)"/><text x="693.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="692" y="324" width="2" height="15" fill="rgb(211,207,14)"/><text x="695.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(217,169,50)"/><text x="695.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.17%)</title><rect x="694" y="324" width="2" height="15" fill="rgb(239,29,37)"/><text x="697.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="694" y="340" width="2" height="15" fill="rgb(228,18,2)"/><text x="697.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="694" y="356" width="2" height="15" fill="rgb(252,114,39)"/><text x="697.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="694" y="372" width="2" height="15" fill="rgb(252,133,34)"/><text x="697.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.51%)</title><rect x="692" y="308" width="7" height="15" fill="rgb(210,21,53)"/><text x="695.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="696" y="324" width="3" height="15" fill="rgb(205,61,4)"/><text x="699.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.86%)</title><rect x="699" y="324" width="10" height="15" fill="rgb(235,75,54)"/><text x="702.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.86%)</title><rect x="699" y="340" width="10" height="15" fill="rgb(254,90,15)"/><text x="702.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.68%)</title><rect x="701" y="356" width="8" height="15" fill="rgb(253,11,0)"/><text x="704.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.71%)</title><rect x="690" y="276" width="21" height="15" fill="rgb(233,36,6)"/><text x="693.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.71%)</title><rect x="690" y="292" width="21" height="15" fill="rgb(205,56,28)"/><text x="693.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.03%)</title><rect x="699" y="308" width="12" height="15" fill="rgb(213,55,45)"/><text x="702.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.17%)</title><rect x="709" y="324" width="2" height="15" fill="rgb(244,179,45)"/><text x="712.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (15 samples, 2.57%)</title><rect x="682" y="228" width="31" height="15" fill="rgb(242,161,45)"/><text x="685.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.88%)</title><rect x="690" y="244" width="23" height="15" fill="rgb(244,67,29)"/><text x="693.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.88%)</title><rect x="690" y="260" width="23" height="15" fill="rgb(227,106,36)"/><text x="693.00" y="270.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="711" y="276" width="2" height="15" fill="rgb(216,19,7)"/><text x="714.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.17%)</title><rect x="717" y="276" width="2" height="15" fill="rgb(225,27,42)"/><text x="720.00" y="286.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (2 samples, 0.34%)</title><rect x="719" y="276" width="4" height="15" fill="rgb(215,160,43)"/><text x="722.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.34%)</title><rect x="719" y="292" width="4" height="15" fill="rgb(236,62,9)"/><text x="722.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.34%)</title><rect x="719" y="308" width="4" height="15" fill="rgb(250,198,44)"/><text x="722.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.17%)</title><rect x="721" y="324" width="2" height="15" fill="rgb(254,27,30)"/><text x="724.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.17%)</title><rect x="721" y="340" width="2" height="15" fill="rgb(207,149,21)"/><text x="724.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.17%)</title><rect x="721" y="356" width="2" height="15" fill="rgb(233,172,40)"/><text x="724.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="721" y="372" width="2" height="15" fill="rgb(220,71,40)"/><text x="724.00" y="382.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.34%)</title><rect x="723" y="276" width="4" height="15" fill="rgb(241,76,46)"/><text x="726.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (2 samples, 0.34%)</title><rect x="723" y="292" width="4" height="15" fill="rgb(227,225,1)"/><text x="726.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="725" y="308" width="2" height="15" fill="rgb(223,228,38)"/><text x="728.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.17%)</title><rect x="725" y="324" width="2" height="15" fill="rgb(250,97,29)"/><text x="728.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="725" y="340" width="2" height="15" fill="rgb(233,96,36)"/><text x="728.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.17%)</title><rect x="725" y="356" width="2" height="15" fill="rgb(234,97,31)"/><text x="728.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="725" y="372" width="2" height="15" fill="rgb(229,139,34)"/><text x="728.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="725" y="388" width="2" height="15" fill="rgb(243,109,49)"/><text x="728.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (9 samples, 1.54%)</title><rect x="713" y="228" width="18" height="15" fill="rgb(231,215,4)"/><text x="716.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (9 samples, 1.54%)</title><rect x="713" y="244" width="18" height="15" fill="rgb(223,224,30)"/><text x="716.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (9 samples, 1.54%)</title><rect x="713" y="260" width="18" height="15" fill="rgb(239,227,30)"/><text x="716.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (2 samples, 0.34%)</title><rect x="727" y="276" width="4" height="15" fill="rgb(206,21,45)"/><text x="730.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.34%)</title><rect x="727" y="292" width="4" height="15" fill="rgb(217,25,6)"/><text x="730.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (2 samples, 0.34%)</title><rect x="727" y="308" width="4" height="15" fill="rgb(211,52,21)"/><text x="730.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="733" y="260" width="2" height="15" fill="rgb(243,75,45)"/><text x="736.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="733" y="276" width="2" height="15" fill="rgb(236,36,10)"/><text x="736.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.17%)</title><rect x="733" y="292" width="2" height="15" fill="rgb(239,29,12)"/><text x="736.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="733" y="308" width="2" height="15" fill="rgb(207,29,3)"/><text x="736.00" y="318.50"></text></g><g><title>0x7f386a347e37 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="747" y="340" width="2" height="15" fill="rgb(249,158,6)"/><text x="750.00" y="350.50"></text></g><g><title>0x7f386a347e4e (libm-2.29.so) (3 samples, 0.51%)</title><rect x="749" y="340" width="6" height="15" fill="rgb(206,176,52)"/><text x="752.00" y="350.50"></text></g><g><title>0x7f386a347ea2 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="755" y="340" width="4" height="15" fill="rgb(252,201,23)"/><text x="758.00" y="350.50"></text></g><g><title>expf (libm-2.29.so) (12 samples, 2.05%)</title><rect x="737" y="324" width="24" height="15" fill="rgb(206,15,45)"/><text x="740.00" y="334.50">e..</text></g><g><title>0x7f386a347ea6 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="759" y="340" width="2" height="15" fill="rgb(231,67,35)"/><text x="762.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (13 samples, 2.23%)</title><rect x="737" y="308" width="26" height="15" fill="rgb(226,39,24)"/><text x="740.00" y="318.50">F..</text></g><g><title>npy_expf (npy_math_internal.h.src) (1 samples, 0.17%)</title><rect x="761" y="324" width="2" height="15" fill="rgb(217,12,12)"/><text x="764.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (17 samples, 2.91%)</title><rect x="731" y="228" width="34" height="15" fill="rgb(231,149,34)"/><text x="734.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.74%)</title><rect x="733" y="244" width="32" height="15" fill="rgb(209,62,51)"/><text x="736.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 2.57%)</title><rect x="735" y="260" width="30" height="15" fill="rgb(215,204,3)"/><text x="738.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.57%)</title><rect x="735" y="276" width="30" height="15" fill="rgb(219,28,5)"/><text x="738.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (14 samples, 2.40%)</title><rect x="737" y="292" width="28" height="15" fill="rgb(241,131,44)"/><text x="740.00" y="302.50">t..</text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="763" y="308" width="2" height="15" fill="rgb(236,178,52)"/><text x="766.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="765" y="276" width="2" height="15" fill="rgb(233,220,28)"/><text x="768.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="765" y="292" width="2" height="15" fill="rgb(234,9,18)"/><text x="768.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="765" y="308" width="2" height="15" fill="rgb(226,209,16)"/><text x="768.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.17%)</title><rect x="765" y="324" width="2" height="15" fill="rgb(239,58,26)"/><text x="768.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (2 samples, 0.34%)</title><rect x="765" y="228" width="4" height="15" fill="rgb(205,121,47)"/><text x="768.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.34%)</title><rect x="765" y="244" width="4" height="15" fill="rgb(225,23,31)"/><text x="768.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.34%)</title><rect x="765" y="260" width="4" height="15" fill="rgb(220,213,11)"/><text x="768.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="767" y="276" width="2" height="15" fill="rgb(249,179,51)"/><text x="770.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="767" y="292" width="2" height="15" fill="rgb(236,125,22)"/><text x="770.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="767" y="308" width="2" height="15" fill="rgb(215,115,35)"/><text x="770.00" y="318.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(233,157,39)"/><text x="774.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="771" y="388" width="2" height="15" fill="rgb(220,151,31)"/><text x="774.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.34%)</title><rect x="771" y="276" width="4" height="15" fill="rgb(241,210,41)"/><text x="774.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (2 samples, 0.34%)</title><rect x="771" y="292" width="4" height="15" fill="rgb(220,12,42)"/><text x="774.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.34%)</title><rect x="771" y="308" width="4" height="15" fill="rgb(248,1,25)"/><text x="774.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.34%)</title><rect x="771" y="324" width="4" height="15" fill="rgb(242,115,37)"/><text x="774.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.34%)</title><rect x="771" y="340" width="4" height="15" fill="rgb(215,159,2)"/><text x="774.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="771" y="356" width="4" height="15" fill="rgb(254,92,48)"/><text x="774.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="773" y="372" width="2" height="15" fill="rgb(218,14,5)"/><text x="776.00" y="382.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="775" y="276" width="4" height="15" fill="rgb(211,109,40)"/><text x="778.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (9 samples, 1.54%)</title><rect x="769" y="228" width="18" height="15" fill="rgb(219,145,9)"/><text x="772.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 1.54%)</title><rect x="769" y="244" width="18" height="15" fill="rgb(213,172,1)"/><text x="772.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 1.37%)</title><rect x="771" y="260" width="16" height="15" fill="rgb(245,183,17)"/><text x="774.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.68%)</title><rect x="779" y="276" width="8" height="15" fill="rgb(225,117,48)"/><text x="782.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="791" y="324" width="2" height="15" fill="rgb(222,150,15)"/><text x="794.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="791" y="340" width="2" height="15" fill="rgb(217,151,46)"/><text x="794.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.17%)</title><rect x="791" y="356" width="2" height="15" fill="rgb(232,136,41)"/><text x="794.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="791" y="372" width="2" height="15" fill="rgb(232,77,38)"/><text x="794.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.17%)</title><rect x="791" y="388" width="2" height="15" fill="rgb(224,194,31)"/><text x="794.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="793" y="372" width="2" height="15" fill="rgb(227,17,38)"/><text x="796.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="793" y="388" width="2" height="15" fill="rgb(220,42,1)"/><text x="796.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="795" y="372" width="3" height="15" fill="rgb(247,18,12)"/><text x="798.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="795" y="388" width="3" height="15" fill="rgb(248,211,13)"/><text x="798.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="795" y="404" width="3" height="15" fill="rgb(205,17,39)"/><text x="798.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="795" y="420" width="3" height="15" fill="rgb(238,138,0)"/><text x="798.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.17%)</title><rect x="795" y="436" width="3" height="15" fill="rgb(243,110,6)"/><text x="798.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="795" y="452" width="3" height="15" fill="rgb(224,123,48)"/><text x="798.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="795" y="468" width="3" height="15" fill="rgb(242,105,10)"/><text x="798.00" y="478.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.51%)</title><rect x="798" y="388" width="6" height="15" fill="rgb(243,38,18)"/><text x="801.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.17%)</title><rect x="802" y="404" width="2" height="15" fill="rgb(230,201,26)"/><text x="805.00" y="414.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (10 samples, 1.71%)</title><rect x="787" y="244" width="21" height="15" fill="rgb(216,174,17)"/><text x="790.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.37%)</title><rect x="791" y="260" width="17" height="15" fill="rgb(216,92,2)"/><text x="794.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 1.37%)</title><rect x="791" y="276" width="17" height="15" fill="rgb(208,228,7)"/><text x="794.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (8 samples, 1.37%)</title><rect x="791" y="292" width="17" height="15" fill="rgb(232,210,29)"/><text x="794.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.37%)</title><rect x="791" y="308" width="17" height="15" fill="rgb(231,169,2)"/><text x="794.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.20%)</title><rect x="793" y="324" width="15" height="15" fill="rgb(217,18,44)"/><text x="796.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.20%)</title><rect x="793" y="340" width="15" height="15" fill="rgb(224,38,28)"/><text x="796.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.20%)</title><rect x="793" y="356" width="15" height="15" fill="rgb(245,206,43)"/><text x="796.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (5 samples, 0.86%)</title><rect x="798" y="372" width="10" height="15" fill="rgb(232,134,5)"/><text x="801.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.34%)</title><rect x="804" y="388" width="4" height="15" fill="rgb(245,120,53)"/><text x="807.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.34%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(224,65,29)"/><text x="811.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.34%)</title><rect x="808" y="276" width="4" height="15" fill="rgb(218,55,23)"/><text x="811.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.17%)</title><rect x="810" y="292" width="2" height="15" fill="rgb(224,93,49)"/><text x="813.00" y="302.50"></text></g><g><title>0x7f38693eb2e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="812" y="324" width="2" height="15" fill="rgb(245,80,38)"/><text x="815.00" y="334.50"></text></g><g><title>0x7f386a347e37 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="828" y="340" width="2" height="15" fill="rgb(250,99,13)"/><text x="831.00" y="350.50"></text></g><g><title>0x7f386a347e62 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="830" y="340" width="2" height="15" fill="rgb(238,207,12)"/><text x="833.00" y="350.50"></text></g><g><title>0x7f386a347e96 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="832" y="340" width="2" height="15" fill="rgb(230,125,11)"/><text x="835.00" y="350.50"></text></g><g><title>0x7f386a347ea2 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="834" y="340" width="2" height="15" fill="rgb(254,131,34)"/><text x="837.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (15 samples, 2.57%)</title><rect x="812" y="308" width="30" height="15" fill="rgb(234,88,47)"/><text x="815.00" y="318.50">FL..</text></g><g><title>expf (libm-2.29.so) (14 samples, 2.40%)</title><rect x="814" y="324" width="28" height="15" fill="rgb(252,10,7)"/><text x="817.00" y="334.50">e..</text></g><g><title>0x7f386a347ea6 (libm-2.29.so) (3 samples, 0.51%)</title><rect x="836" y="340" width="6" height="15" fill="rgb(243,9,36)"/><text x="839.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (28 samples, 4.79%)</title><rect x="787" y="228" width="57" height="15" fill="rgb(240,92,40)"/><text x="790.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 3.08%)</title><rect x="808" y="244" width="36" height="15" fill="rgb(218,97,27)"/><text x="811.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.74%)</title><rect x="812" y="260" width="32" height="15" fill="rgb(246,116,50)"/><text x="815.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 2.74%)</title><rect x="812" y="276" width="32" height="15" fill="rgb(224,200,22)"/><text x="815.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (16 samples, 2.74%)</title><rect x="812" y="292" width="32" height="15" fill="rgb(216,203,39)"/><text x="815.00" y="302.50">tr..</text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.17%)</title><rect x="842" y="308" width="2" height="15" fill="rgb(218,107,42)"/><text x="845.00" y="318.50"></text></g><g><title>0x7f386a34a997 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="842" y="324" width="2" height="15" fill="rgb(232,42,0)"/><text x="845.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="846" y="324" width="2" height="15" fill="rgb(249,111,7)"/><text x="849.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="846" y="340" width="2" height="15" fill="rgb(210,192,49)"/><text x="849.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.17%)</title><rect x="846" y="356" width="2" height="15" fill="rgb(253,70,2)"/><text x="849.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="848" y="340" width="2" height="15" fill="rgb(213,115,40)"/><text x="851.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (193 samples, 33.05%)</title><rect x="462" y="164" width="390" height="15" fill="rgb(222,178,33)"/><text x="465.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (190 samples, 32.53%)</title><rect x="468" y="180" width="384" height="15" fill="rgb(207,146,32)"/><text x="471.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (160 samples, 27.40%)</title><rect x="529" y="196" width="323" height="15" fill="rgb(240,156,3)"/><text x="532.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (87 samples, 14.90%)</title><rect x="676" y="212" width="176" height="15" fill="rgb(243,14,14)"/><text x="679.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (4 samples, 0.68%)</title><rect x="844" y="228" width="8" height="15" fill="rgb(238,116,16)"/><text x="847.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 0.68%)</title><rect x="844" y="244" width="8" height="15" fill="rgb(234,185,48)"/><text x="847.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.68%)</title><rect x="844" y="260" width="8" height="15" fill="rgb(246,79,11)"/><text x="847.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (3 samples, 0.51%)</title><rect x="846" y="276" width="6" height="15" fill="rgb(245,116,53)"/><text x="849.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.51%)</title><rect x="846" y="292" width="6" height="15" fill="rgb(230,149,1)"/><text x="849.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.51%)</title><rect x="846" y="308" width="6" height="15" fill="rgb(219,155,41)"/><text x="849.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.34%)</title><rect x="848" y="324" width="4" height="15" fill="rgb(224,186,29)"/><text x="851.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.17%)</title><rect x="850" y="340" width="2" height="15" fill="rgb(216,10,18)"/><text x="853.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.17%)</title><rect x="850" y="356" width="2" height="15" fill="rgb(239,74,46)"/><text x="853.00" y="366.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (194 samples, 33.22%)</title><rect x="462" y="68" width="392" height="15" fill="rgb(230,123,4)"/><text x="465.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1000_4_1..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (194 samples, 33.22%)</title><rect x="462" y="84" width="392" height="15" fill="rgb(227,115,45)"/><text x="465.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1000_4_..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (194 samples, 33.22%)</title><rect x="462" y="100" width="392" height="15" fill="rgb(208,114,22)"/><text x="465.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 33.22%)</title><rect x="462" y="116" width="392" height="15" fill="rgb(218,190,23)"/><text x="465.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 33.22%)</title><rect x="462" y="132" width="392" height="15" fill="rgb(235,226,15)"/><text x="465.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (194 samples, 33.22%)</title><rect x="462" y="148" width="392" height="15" fill="rgb(222,29,32)"/><text x="465.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="852" y="164" width="2" height="15" fill="rgb(229,148,19)"/><text x="855.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="854" y="116" width="2" height="15" fill="rgb(231,89,15)"/><text x="857.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="854" y="132" width="2" height="15" fill="rgb(251,50,22)"/><text x="857.00" y="142.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.17%)</title><rect x="862" y="228" width="2" height="15" fill="rgb(215,33,1)"/><text x="865.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.34%)</title><rect x="864" y="228" width="4" height="15" fill="rgb(231,115,49)"/><text x="867.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.51%)</title><rect x="868" y="228" width="6" height="15" fill="rgb(253,37,43)"/><text x="871.00" y="238.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.17%)</title><rect x="872" y="244" width="2" height="15" fill="rgb(207,144,47)"/><text x="875.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.34%)</title><rect x="874" y="228" width="4" height="15" fill="rgb(226,46,36)"/><text x="877.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.17%)</title><rect x="876" y="244" width="2" height="15" fill="rgb(245,144,42)"/><text x="879.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (11 samples, 1.88%)</title><rect x="858" y="196" width="22" height="15" fill="rgb(223,221,28)"/><text x="861.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py) (11 samples, 1.88%)</title><rect x="858" y="212" width="22" height="15" fill="rgb(246,42,3)"/><text x="861.00" y="222.50">c..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.17%)</title><rect x="878" y="228" width="2" height="15" fill="rgb(206,12,45)"/><text x="881.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.17%)</title><rect x="878" y="244" width="2" height="15" fill="rgb(229,42,7)"/><text x="881.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c) (5 samples, 0.86%)</title><rect x="880" y="212" width="10" height="15" fill="rgb(207,178,39)"/><text x="883.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (5 samples, 0.86%)</title><rect x="880" y="228" width="10" height="15" fill="rgb(222,55,34)"/><text x="883.00" y="238.50"></text></g><g><title>npy_memchr (common.h) (5 samples, 0.86%)</title><rect x="880" y="244" width="10" height="15" fill="rgb(236,14,20)"/><text x="883.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="890" y="276" width="2" height="15" fill="rgb(235,164,31)"/><text x="893.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.17%)</title><rect x="890" y="292" width="2" height="15" fill="rgb(212,21,5)"/><text x="893.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="890" y="308" width="2" height="15" fill="rgb(241,157,0)"/><text x="893.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="890" y="324" width="2" height="15" fill="rgb(224,71,54)"/><text x="893.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.34%)</title><rect x="890" y="260" width="4" height="15" fill="rgb(236,92,6)"/><text x="893.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="892" y="276" width="2" height="15" fill="rgb(247,36,1)"/><text x="895.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="892" y="292" width="2" height="15" fill="rgb(247,47,12)"/><text x="895.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.17%)</title><rect x="892" y="308" width="2" height="15" fill="rgb(217,8,49)"/><text x="895.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 0.51%)</title><rect x="890" y="212" width="7" height="15" fill="rgb(228,139,19)"/><text x="893.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.51%)</title><rect x="890" y="228" width="7" height="15" fill="rgb(223,74,16)"/><text x="893.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.51%)</title><rect x="890" y="244" width="7" height="15" fill="rgb(207,92,20)"/><text x="893.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="894" y="260" width="3" height="15" fill="rgb(245,84,49)"/><text x="897.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="894" y="276" width="3" height="15" fill="rgb(214,97,2)"/><text x="897.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src) (1 samples, 0.17%)</title><rect x="894" y="292" width="3" height="15" fill="rgb(238,85,30)"/><text x="897.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="894" y="308" width="3" height="15" fill="rgb(211,2,12)"/><text x="897.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="894" y="324" width="3" height="15" fill="rgb(236,206,26)"/><text x="897.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h) (1 samples, 0.17%)</title><rect x="894" y="340" width="3" height="15" fill="rgb(224,178,13)"/><text x="897.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.34%)</title><rect x="907" y="228" width="4" height="15" fill="rgb(223,19,27)"/><text x="910.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c) (1 samples, 0.17%)</title><rect x="909" y="244" width="2" height="15" fill="rgb(230,215,28)"/><text x="912.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.17%)</title><rect x="909" y="260" width="2" height="15" fill="rgb(206,75,2)"/><text x="912.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="909" y="276" width="2" height="15" fill="rgb(245,82,7)"/><text x="912.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.17%)</title><rect x="909" y="292" width="2" height="15" fill="rgb(216,150,31)"/><text x="912.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="909" y="308" width="2" height="15" fill="rgb(240,99,44)"/><text x="912.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="909" y="324" width="2" height="15" fill="rgb(218,217,10)"/><text x="912.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="909" y="340" width="2" height="15" fill="rgb(249,32,15)"/><text x="912.00" y="350.50"></text></g><g><title>0x7f386a1dee7a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="911" y="244" width="2" height="15" fill="rgb(248,16,7)"/><text x="914.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="913" y="244" width="2" height="15" fill="rgb(227,189,8)"/><text x="916.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.51%)</title><rect x="911" y="228" width="6" height="15" fill="rgb(253,92,33)"/><text x="914.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="915" y="244" width="2" height="15" fill="rgb(219,51,44)"/><text x="918.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.34%)</title><rect x="917" y="228" width="4" height="15" fill="rgb(215,77,1)"/><text x="920.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.17%)</title><rect x="919" y="244" width="2" height="15" fill="rgb(238,75,39)"/><text x="922.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.17%)</title><rect x="921" y="228" width="2" height="15" fill="rgb(229,160,20)"/><text x="924.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="921" y="244" width="2" height="15" fill="rgb(251,81,4)"/><text x="924.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.34%)</title><rect x="923" y="228" width="4" height="15" fill="rgb(227,169,28)"/><text x="926.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.34%)</title><rect x="923" y="244" width="4" height="15" fill="rgb(232,157,29)"/><text x="926.00" y="254.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;) (1 samples, 0.17%)</title><rect x="927" y="228" width="2" height="15" fill="rgb(229,189,41)"/><text x="930.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (17 samples, 2.91%)</title><rect x="897" y="212" width="34" height="15" fill="rgb(209,14,19)"/><text x="900.00" y="222.50">ch..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.17%)</title><rect x="929" y="228" width="2" height="15" fill="rgb(236,149,46)"/><text x="932.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.17%)</title><rect x="929" y="244" width="2" height="15" fill="rgb(247,203,9)"/><text x="932.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (38 samples, 6.51%)</title><rect x="856" y="180" width="77" height="15" fill="rgb(245,132,0)"/><text x="859.00" y="190.50">_check_X..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (26 samples, 4.45%)</title><rect x="880" y="196" width="53" height="15" fill="rgb(210,98,38)"/><text x="883.00" y="206.50">binar..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.17%)</title><rect x="931" y="212" width="2" height="15" fill="rgb(207,153,9)"/><text x="934.00" y="222.50"></text></g><g><title>array_add (number.c) (2 samples, 0.34%)</title><rect x="939" y="196" width="4" height="15" fill="rgb(208,104,15)"/><text x="942.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.34%)</title><rect x="939" y="212" width="4" height="15" fill="rgb(215,197,16)"/><text x="942.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.34%)</title><rect x="939" y="228" width="4" height="15" fill="rgb(248,92,53)"/><text x="942.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="941" y="244" width="2" height="15" fill="rgb(214,154,29)"/><text x="944.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="945" y="228" width="2" height="15" fill="rgb(245,139,37)"/><text x="948.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="945" y="244" width="2" height="15" fill="rgb(214,157,42)"/><text x="948.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.17%)</title><rect x="945" y="260" width="2" height="15" fill="rgb(218,182,39)"/><text x="948.00" y="270.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.51%)</title><rect x="943" y="196" width="6" height="15" fill="rgb(238,82,18)"/><text x="946.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.34%)</title><rect x="945" y="212" width="4" height="15" fill="rgb(214,82,29)"/><text x="948.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="947" y="228" width="2" height="15" fill="rgb(231,160,17)"/><text x="950.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="947" y="244" width="2" height="15" fill="rgb(237,187,9)"/><text x="950.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="947" y="260" width="2" height="15" fill="rgb(220,32,5)"/><text x="950.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.17%)</title><rect x="947" y="276" width="2" height="15" fill="rgb(242,149,10)"/><text x="950.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="947" y="292" width="2" height="15" fill="rgb(230,56,29)"/><text x="950.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="947" y="308" width="2" height="15" fill="rgb(251,93,8)"/><text x="950.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="947" y="324" width="2" height="15" fill="rgb(240,16,25)"/><text x="950.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.34%)</title><rect x="949" y="260" width="4" height="15" fill="rgb(211,220,31)"/><text x="952.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.34%)</title><rect x="949" y="276" width="4" height="15" fill="rgb(225,66,49)"/><text x="952.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.34%)</title><rect x="949" y="292" width="4" height="15" fill="rgb(253,124,42)"/><text x="952.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.34%)</title><rect x="949" y="308" width="4" height="15" fill="rgb(228,223,15)"/><text x="952.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.34%)</title><rect x="949" y="324" width="4" height="15" fill="rgb(213,1,7)"/><text x="952.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="951" y="340" width="2" height="15" fill="rgb(246,126,42)"/><text x="954.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.17%)</title><rect x="953" y="308" width="2" height="15" fill="rgb(218,218,26)"/><text x="956.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="953" y="324" width="2" height="15" fill="rgb(244,4,16)"/><text x="956.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="953" y="340" width="2" height="15" fill="rgb(250,55,4)"/><text x="956.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="953" y="356" width="2" height="15" fill="rgb(249,110,8)"/><text x="956.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="953" y="372" width="2" height="15" fill="rgb(238,137,35)"/><text x="956.00" y="382.50"></text></g><g><title>0x7f386a1e8d62 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="953" y="388" width="2" height="15" fill="rgb(217,91,48)"/><text x="956.00" y="398.50"></text></g><g><title>array_sum (methods.c) (4 samples, 0.68%)</title><rect x="949" y="196" width="8" height="15" fill="rgb(214,186,2)"/><text x="952.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (4 samples, 0.68%)</title><rect x="949" y="212" width="8" height="15" fill="rgb(235,133,2)"/><text x="952.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (4 samples, 0.68%)</title><rect x="949" y="228" width="8" height="15" fill="rgb(227,76,15)"/><text x="952.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.68%)</title><rect x="949" y="244" width="8" height="15" fill="rgb(236,224,51)"/><text x="952.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.34%)</title><rect x="953" y="260" width="4" height="15" fill="rgb(209,50,23)"/><text x="956.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.34%)</title><rect x="953" y="276" width="4" height="15" fill="rgb(218,170,10)"/><text x="956.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.34%)</title><rect x="953" y="292" width="4" height="15" fill="rgb(246,116,50)"/><text x="956.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="955" y="308" width="2" height="15" fill="rgb(235,202,26)"/><text x="958.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="955" y="324" width="2" height="15" fill="rgb(205,24,23)"/><text x="958.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.03%)</title><rect x="957" y="212" width="12" height="15" fill="rgb(212,49,27)"/><text x="960.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.17%)</title><rect x="971" y="260" width="2" height="15" fill="rgb(225,112,2)"/><text x="974.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="971" y="276" width="2" height="15" fill="rgb(212,9,16)"/><text x="974.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="971" y="292" width="2" height="15" fill="rgb(219,27,0)"/><text x="974.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="971" y="308" width="2" height="15" fill="rgb(232,84,42)"/><text x="974.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.86%)</title><rect x="969" y="228" width="10" height="15" fill="rgb(219,136,50)"/><text x="972.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (5 samples, 0.86%)</title><rect x="969" y="244" width="10" height="15" fill="rgb(216,171,4)"/><text x="972.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.51%)</title><rect x="973" y="260" width="6" height="15" fill="rgb(244,62,51)"/><text x="976.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.51%)</title><rect x="973" y="276" width="6" height="15" fill="rgb(240,157,14)"/><text x="976.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.51%)</title><rect x="973" y="292" width="6" height="15" fill="rgb(251,183,21)"/><text x="976.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.34%)</title><rect x="975" y="308" width="4" height="15" fill="rgb(222,142,49)"/><text x="978.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="977" y="324" width="2" height="15" fill="rgb(250,24,48)"/><text x="980.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (12 samples, 2.05%)</title><rect x="957" y="196" width="24" height="15" fill="rgb(227,229,30)"/><text x="960.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.03%)</title><rect x="969" y="212" width="12" height="15" fill="rgb(229,125,25)"/><text x="972.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="979" y="228" width="2" height="15" fill="rgb(249,20,42)"/><text x="982.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.17%)</title><rect x="981" y="260" width="2" height="15" fill="rgb(206,71,16)"/><text x="984.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="981" y="276" width="2" height="15" fill="rgb(209,178,10)"/><text x="984.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="981" y="292" width="2" height="15" fill="rgb(245,36,41)"/><text x="984.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="981" y="308" width="2" height="15" fill="rgb(230,11,25)"/><text x="984.00" y="318.50"></text></g><g><title>0x7f386a1e8d6a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(248,38,33)"/><text x="990.00" y="318.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (29 samples, 4.97%)</title><rect x="933" y="180" width="58" height="15" fill="rgb(238,33,54)"/><text x="936.00" y="190.50">_joint..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.86%)</title><rect x="981" y="196" width="10" height="15" fill="rgb(211,177,40)"/><text x="984.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.86%)</title><rect x="981" y="212" width="10" height="15" fill="rgb(250,2,43)"/><text x="984.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.86%)</title><rect x="981" y="228" width="10" height="15" fill="rgb(228,172,33)"/><text x="984.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.86%)</title><rect x="981" y="244" width="10" height="15" fill="rgb(207,212,52)"/><text x="984.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.68%)</title><rect x="983" y="260" width="8" height="15" fill="rgb(233,39,15)"/><text x="986.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.68%)</title><rect x="983" y="276" width="8" height="15" fill="rgb(206,192,18)"/><text x="986.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.51%)</title><rect x="985" y="292" width="6" height="15" fill="rgb(243,14,49)"/><text x="988.00" y="302.50"></text></g><g><title>0x7f386a1e8d6f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(216,76,23)"/><text x="992.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="991" y="180" width="3" height="15" fill="rgb(227,225,12)"/><text x="994.00" y="190.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.17%)</title><rect x="994" y="228" width="2" height="15" fill="rgb(246,155,35)"/><text x="997.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="994" y="244" width="2" height="15" fill="rgb(233,191,8)"/><text x="997.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.17%)</title><rect x="996" y="260" width="2" height="15" fill="rgb(217,68,10)"/><text x="999.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="996" y="276" width="2" height="15" fill="rgb(211,226,14)"/><text x="999.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="996" y="292" width="2" height="15" fill="rgb(247,61,33)"/><text x="999.00" y="302.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="996" y="308" width="2" height="15" fill="rgb(247,167,48)"/><text x="999.00" y="318.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.51%)</title><rect x="994" y="180" width="6" height="15" fill="rgb(233,70,45)"/><text x="997.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.51%)</title><rect x="994" y="196" width="6" height="15" fill="rgb(221,90,12)"/><text x="997.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.51%)</title><rect x="994" y="212" width="6" height="15" fill="rgb(221,154,39)"/><text x="997.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.34%)</title><rect x="996" y="228" width="4" height="15" fill="rgb(231,56,34)"/><text x="999.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.34%)</title><rect x="996" y="244" width="4" height="15" fill="rgb(211,83,23)"/><text x="999.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.17%)</title><rect x="998" y="260" width="2" height="15" fill="rgb(217,159,9)"/><text x="1001.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="998" y="276" width="2" height="15" fill="rgb(221,29,1)"/><text x="1001.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="998" y="292" width="2" height="15" fill="rgb(246,132,30)"/><text x="1001.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="998" y="308" width="2" height="15" fill="rgb(206,156,4)"/><text x="1001.00" y="318.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (6 samples, 1.03%)</title><rect x="1000" y="180" width="12" height="15" fill="rgb(242,148,25)"/><text x="1003.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.86%)</title><rect x="1002" y="196" width="10" height="15" fill="rgb(249,227,45)"/><text x="1005.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (5 samples, 0.86%)</title><rect x="1002" y="212" width="10" height="15" fill="rgb(226,12,11)"/><text x="1005.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1010" y="228" width="2" height="15" fill="rgb(207,130,12)"/><text x="1013.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.34%)</title><rect x="1012" y="180" width="4" height="15" fill="rgb(242,132,8)"/><text x="1015.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.17%)</title><rect x="1014" y="196" width="2" height="15" fill="rgb(240,52,8)"/><text x="1017.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="1014" y="212" width="2" height="15" fill="rgb(221,101,14)"/><text x="1017.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.17%)</title><rect x="1032" y="228" width="2" height="15" fill="rgb(210,21,48)"/><text x="1035.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (3 samples, 0.51%)</title><rect x="1030" y="196" width="6" height="15" fill="rgb(247,79,0)"/><text x="1033.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 0.51%)</title><rect x="1030" y="212" width="6" height="15" fill="rgb(229,58,52)"/><text x="1033.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1034" y="228" width="2" height="15" fill="rgb(235,172,44)"/><text x="1037.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (1 samples, 0.17%)</title><rect x="1034" y="244" width="2" height="15" fill="rgb(244,59,44)"/><text x="1037.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c) (1 samples, 0.17%)</title><rect x="1034" y="260" width="2" height="15" fill="rgb(247,197,47)"/><text x="1037.00" y="270.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (3 samples, 0.51%)</title><rect x="1036" y="196" width="6" height="15" fill="rgb(251,117,36)"/><text x="1039.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.34%)</title><rect x="1038" y="212" width="4" height="15" fill="rgb(205,174,5)"/><text x="1041.00" y="222.50"></text></g><g><title>ufunc_geterr (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1040" y="228" width="2" height="15" fill="rgb(216,49,20)"/><text x="1043.00" y="238.50"></text></g><g><title>0x7f386a1c8aa7 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1044" y="340" width="2" height="15" fill="rgb(232,189,5)"/><text x="1047.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.34%)</title><rect x="1044" y="324" width="4" height="15" fill="rgb(207,122,7)"/><text x="1047.00" y="334.50"></text></g><g><title>0x7f386a1c8b56 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1046" y="340" width="2" height="15" fill="rgb(231,47,21)"/><text x="1049.00" y="350.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="1048" y="324" width="2" height="15" fill="rgb(234,154,42)"/><text x="1051.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.17%)</title><rect x="1048" y="340" width="2" height="15" fill="rgb(240,107,29)"/><text x="1051.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.17%)</title><rect x="1048" y="356" width="2" height="15" fill="rgb(246,60,50)"/><text x="1051.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1048" y="372" width="2" height="15" fill="rgb(213,142,20)"/><text x="1051.00" y="382.50"></text></g><g><title>0x7f38693e9f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1054" y="356" width="2" height="15" fill="rgb(233,73,8)"/><text x="1057.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (8 samples, 1.37%)</title><rect x="1056" y="356" width="16" height="15" fill="rgb(209,62,24)"/><text x="1059.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (6 samples, 1.03%)</title><rect x="1060" y="372" width="12" height="15" fill="rgb(228,127,15)"/><text x="1063.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (4 samples, 0.68%)</title><rect x="1064" y="388" width="8" height="15" fill="rgb(249,164,1)"/><text x="1067.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (20 samples, 3.42%)</title><rect x="1052" y="340" width="41" height="15" fill="rgb(206,164,45)"/><text x="1055.00" y="350.50">DOU..</text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (10 samples, 1.71%)</title><rect x="1072" y="356" width="21" height="15" fill="rgb(254,78,45)"/><text x="1075.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (9 samples, 1.54%)</title><rect x="1074" y="372" width="19" height="15" fill="rgb(253,114,27)"/><text x="1077.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (7 samples, 1.20%)</title><rect x="1078" y="388" width="15" height="15" fill="rgb(222,182,0)"/><text x="1081.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (7 samples, 1.20%)</title><rect x="1078" y="404" width="15" height="15" fill="rgb(247,43,39)"/><text x="1081.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.51%)</title><rect x="1086" y="420" width="7" height="15" fill="rgb(234,128,40)"/><text x="1089.00" y="430.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (27 samples, 4.62%)</title><rect x="1042" y="196" width="55" height="15" fill="rgb(212,214,10)"/><text x="1045.00" y="206.50">amax ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (27 samples, 4.62%)</title><rect x="1042" y="212" width="55" height="15" fill="rgb(244,55,40)"/><text x="1045.00" y="222.50">array..</text></g><g><title>amax (numpy/core/fromnumeric.py) (27 samples, 4.62%)</title><rect x="1042" y="228" width="55" height="15" fill="rgb(240,67,51)"/><text x="1045.00" y="238.50">amax ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (27 samples, 4.62%)</title><rect x="1042" y="244" width="55" height="15" fill="rgb(212,206,4)"/><text x="1045.00" y="254.50">_wrap..</text></g><g><title>ufunc_reduce (ufunc_object.c) (26 samples, 4.45%)</title><rect x="1044" y="260" width="53" height="15" fill="rgb(236,163,31)"/><text x="1047.00" y="270.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (26 samples, 4.45%)</title><rect x="1044" y="276" width="53" height="15" fill="rgb(208,188,34)"/><text x="1047.00" y="286.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 4.45%)</title><rect x="1044" y="292" width="53" height="15" fill="rgb(232,197,28)"/><text x="1047.00" y="302.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (26 samples, 4.45%)</title><rect x="1044" y="308" width="53" height="15" fill="rgb(246,124,14)"/><text x="1047.00" y="318.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (23 samples, 3.94%)</title><rect x="1050" y="324" width="47" height="15" fill="rgb(249,181,22)"/><text x="1053.00" y="334.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.34%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(246,47,1)"/><text x="1096.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.17%)</title><rect x="1097" y="276" width="2" height="15" fill="rgb(205,202,42)"/><text x="1100.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="1097" y="292" width="2" height="15" fill="rgb(245,4,19)"/><text x="1100.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="1097" y="308" width="2" height="15" fill="rgb(250,136,19)"/><text x="1100.00" y="318.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="1097" y="324" width="2" height="15" fill="rgb(225,9,5)"/><text x="1100.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1099" y="276" width="2" height="15" fill="rgb(230,72,8)"/><text x="1102.00" y="286.50"></text></g><g><title>array_subtract (number.c) (5 samples, 0.86%)</title><rect x="1097" y="196" width="10" height="15" fill="rgb(215,187,19)"/><text x="1100.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.86%)</title><rect x="1097" y="212" width="10" height="15" fill="rgb(212,221,35)"/><text x="1100.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.86%)</title><rect x="1097" y="228" width="10" height="15" fill="rgb(239,67,38)"/><text x="1100.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.86%)</title><rect x="1097" y="244" width="10" height="15" fill="rgb(208,116,0)"/><text x="1100.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.86%)</title><rect x="1097" y="260" width="10" height="15" fill="rgb(248,29,54)"/><text x="1100.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.51%)</title><rect x="1101" y="276" width="6" height="15" fill="rgb(227,173,29)"/><text x="1104.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.51%)</title><rect x="1101" y="292" width="6" height="15" fill="rgb(253,134,16)"/><text x="1104.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.51%)</title><rect x="1101" y="308" width="6" height="15" fill="rgb(223,104,46)"/><text x="1104.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="1103" y="324" width="4" height="15" fill="rgb(232,137,31)"/><text x="1106.00" y="334.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (1 samples, 0.17%)</title><rect x="1107" y="196" width="2" height="15" fill="rgb(219,81,49)"/><text x="1110.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="1107" y="212" width="2" height="15" fill="rgb(209,37,39)"/><text x="1110.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py) (1 samples, 0.17%)</title><rect x="1107" y="228" width="2" height="15" fill="rgb(222,184,14)"/><text x="1110.00" y="238.50"></text></g><g><title>array_squeeze (methods.c) (1 samples, 0.17%)</title><rect x="1107" y="244" width="2" height="15" fill="rgb(232,76,46)"/><text x="1110.00" y="254.50"></text></g><g><title>PyArray_SqueezeSelected (shape.c) (1 samples, 0.17%)</title><rect x="1107" y="260" width="2" height="15" fill="rgb(217,73,50)"/><text x="1110.00" y="270.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.17%)</title><rect x="1107" y="276" width="2" height="15" fill="rgb(243,74,53)"/><text x="1110.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="1107" y="292" width="2" height="15" fill="rgb(240,148,36)"/><text x="1110.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.17%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(210,203,27)"/><text x="1110.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="1111" y="292" width="2" height="15" fill="rgb(226,30,52)"/><text x="1114.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.17%)</title><rect x="1111" y="308" width="2" height="15" fill="rgb(206,94,19)"/><text x="1114.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="1113" y="324" width="2" height="15" fill="rgb(223,1,51)"/><text x="1116.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="1113" y="340" width="2" height="15" fill="rgb(253,220,54)"/><text x="1116.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1113" y="356" width="2" height="15" fill="rgb(238,192,24)"/><text x="1116.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.20%)</title><rect x="1113" y="308" width="14" height="15" fill="rgb(253,25,14)"/><text x="1116.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.03%)</title><rect x="1115" y="324" width="12" height="15" fill="rgb(205,103,4)"/><text x="1118.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.51%)</title><rect x="1121" y="340" width="6" height="15" fill="rgb(223,147,12)"/><text x="1124.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.34%)</title><rect x="1123" y="356" width="4" height="15" fill="rgb(239,90,36)"/><text x="1126.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (10 samples, 1.71%)</title><rect x="1109" y="196" width="20" height="15" fill="rgb(242,21,33)"/><text x="1112.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.71%)</title><rect x="1109" y="212" width="20" height="15" fill="rgb(217,22,52)"/><text x="1112.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (10 samples, 1.71%)</title><rect x="1109" y="228" width="20" height="15" fill="rgb(212,201,9)"/><text x="1112.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (9 samples, 1.54%)</title><rect x="1111" y="244" width="18" height="15" fill="rgb(208,136,9)"/><text x="1114.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 1.54%)</title><rect x="1111" y="260" width="18" height="15" fill="rgb(251,10,13)"/><text x="1114.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.54%)</title><rect x="1111" y="276" width="18" height="15" fill="rgb(227,185,48)"/><text x="1114.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.37%)</title><rect x="1113" y="292" width="16" height="15" fill="rgb(218,151,21)"/><text x="1116.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1127" y="308" width="2" height="15" fill="rgb(208,111,23)"/><text x="1130.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1127" y="324" width="2" height="15" fill="rgb(231,158,10)"/><text x="1130.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1127" y="340" width="2" height="15" fill="rgb(205,171,29)"/><text x="1130.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1129" y="228" width="2" height="15" fill="rgb(224,201,33)"/><text x="1132.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.17%)</title><rect x="1131" y="228" width="2" height="15" fill="rgb(229,180,19)"/><text x="1134.00" y="238.50"></text></g><g><title>_extract_pyvals (extobj.c) (1 samples, 0.17%)</title><rect x="1131" y="244" width="2" height="15" fill="rgb(228,198,7)"/><text x="1134.00" y="254.50"></text></g><g><title>0x7f386a39ae01 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="1133" y="276" width="4" height="15" fill="rgb(211,212,28)"/><text x="1136.00" y="286.50"></text></g><g><title>0x7f386a39aea2 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1137" y="276" width="2" height="15" fill="rgb(242,163,13)"/><text x="1140.00" y="286.50"></text></g><g><title>0x7f386a3141b0 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(231,217,32)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7f386a39ac2e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(233,105,12)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f386a39ac5a (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(240,21,53)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f386a39ac6e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1155" y="292" width="2" height="15" fill="rgb(248,54,27)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f386a39ac7b (libm-2.29.so) (2 samples, 0.34%)</title><rect x="1157" y="292" width="4" height="15" fill="rgb(207,128,26)"/><text x="1160.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.57%)</title><rect x="1133" y="228" width="30" height="15" fill="rgb(230,7,15)"/><text x="1136.00" y="238.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (15 samples, 2.57%)</title><rect x="1133" y="244" width="30" height="15" fill="rgb(223,127,24)"/><text x="1136.00" y="254.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src) (15 samples, 2.57%)</title><rect x="1133" y="260" width="30" height="15" fill="rgb(215,145,18)"/><text x="1136.00" y="270.50">Py..</text></g><g><title>exp (libm-2.29.so) (12 samples, 2.05%)</title><rect x="1139" y="276" width="24" height="15" fill="rgb(234,171,32)"/><text x="1142.00" y="286.50">e..</text></g><g><title>0x7f386a39ad70 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1161" y="292" width="2" height="15" fill="rgb(243,111,22)"/><text x="1164.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1163" y="228" width="2" height="15" fill="rgb(221,226,36)"/><text x="1166.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (154 samples, 26.37%)</title><rect x="856" y="164" width="311" height="15" fill="rgb(236,159,52)"/><text x="859.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (75 samples, 12.84%)</title><rect x="1016" y="180" width="151" height="15" fill="rgb(253,180,20)"/><text x="1019.00" y="190.50">logsumexp (scipy/sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 3.25%)</title><rect x="1129" y="196" width="38" height="15" fill="rgb(214,162,13)"/><text x="1132.00" y="206.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 3.25%)</title><rect x="1129" y="212" width="38" height="15" fill="rgb(224,151,3)"/><text x="1132.00" y="222.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1165" y="228" width="2" height="15" fill="rgb(254,127,5)"/><text x="1168.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1165" y="244" width="2" height="15" fill="rgb(207,4,21)"/><text x="1168.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.17%)</title><rect x="1165" y="260" width="2" height="15" fill="rgb(207,16,13)"/><text x="1168.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(220,47,22)"/><text x="1170.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(250,165,10)"/><text x="1170.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(238,113,18)"/><text x="1170.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(240,91,46)"/><text x="1170.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(220,161,28)"/><text x="1170.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1167" y="292" width="2" height="15" fill="rgb(225,125,20)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7f386a1c9b12 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(222,68,3)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f386a39abf9 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(224,118,31)"/><text x="1180.00" y="270.50"></text></g><g><title>0x7f386a39ac7b (libm-2.29.so) (4 samples, 0.68%)</title><rect x="1179" y="260" width="8" height="15" fill="rgb(220,184,12)"/><text x="1182.00" y="270.50"></text></g><g><title>all (584 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,9,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (583 samples, 99.83%)</title><rect x="12" y="52" width="1178" height="15" fill="rgb(244,180,30)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (166 samples, 28.42%)</title><rect x="854" y="68" width="336" height="15" fill="rgb(238,194,9)"/><text x="857.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (166 samples, 28.42%)</title><rect x="854" y="84" width="336" height="15" fill="rgb(222,214,38)"/><text x="857.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py) (166 samples, 28.42%)</title><rect x="854" y="100" width="336" height="15" fill="rgb(229,186,6)"/><text x="857.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 28.25%)</title><rect x="856" y="116" width="334" height="15" fill="rgb(207,223,39)"/><text x="859.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 28.25%)</title><rect x="856" y="132" width="334" height="15" fill="rgb(228,182,47)"/><text x="859.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (165 samples, 28.25%)</title><rect x="856" y="148" width="334" height="15" fill="rgb(245,163,50)"/><text x="859.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.88%)</title><rect x="1167" y="164" width="23" height="15" fill="rgb(254,22,43)"/><text x="1170.00" y="174.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.88%)</title><rect x="1167" y="180" width="23" height="15" fill="rgb(242,184,48)"/><text x="1170.00" y="190.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.88%)</title><rect x="1167" y="196" width="23" height="15" fill="rgb(253,49,7)"/><text x="1170.00" y="206.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (10 samples, 1.71%)</title><rect x="1169" y="212" width="21" height="15" fill="rgb(253,165,47)"/><text x="1172.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (10 samples, 1.71%)</title><rect x="1169" y="228" width="21" height="15" fill="rgb(235,214,15)"/><text x="1172.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 1.54%)</title><rect x="1171" y="244" width="19" height="15" fill="rgb(214,65,23)"/><text x="1174.00" y="254.50"></text></g><g><title>0x7f386a39ac7f (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(228,101,42)"/><text x="1190.00" y="270.50"></text></g></g></svg>