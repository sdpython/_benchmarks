<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(231,156,31)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(241,57,37)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(249,216,42)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(252,24,15)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(227,136,0)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(240,27,53)"/><text x="13.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(205,68,14)"/><text x="13.00" y="974.50"></text></g><g><title>isabs (ntpath.py) (1 samples, 0.41%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(232,159,51)"/><text x="13.00" y="990.50"></text></g><g><title>splitdrive (ntpath.py) (1 samples, 0.41%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(221,226,20)"/><text x="13.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(250,121,33)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(230,34,52)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(208,20,33)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(223,147,52)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(236,78,31)"/><text x="17.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.41%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(236,116,22)"/><text x="17.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(223,1,19)"/><text x="17.00" y="974.50"></text></g><g><title>0x7f0e3ed75237 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(245,184,14)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.22%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(230,195,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(219,92,14)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(205,47,4)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(253,53,28)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(218,146,49)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(222,47,15)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.22%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(238,146,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(240,43,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(239,27,27)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(220,19,50)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(243,179,7)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(247,185,23)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.22%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(224,121,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(206,117,15)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(223,169,4)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(253,200,29)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(252,189,27)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(236,183,52)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.22%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(234,3,47)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(239,124,20)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(250,37,47)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(225,135,24)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(215,94,11)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(237,75,46)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(244,101,41)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(222,225,1)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(242,89,25)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.22%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(232,69,38)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(213,142,16)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(217,72,36)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(209,217,47)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(235,218,29)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(216,189,3)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.22%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(205,169,51)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.22%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(246,101,52)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.22%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(205,131,6)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(241,117,3)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(214,19,50)"/><text x="22.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(235,206,11)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(249,206,39)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(210,59,17)"/><text x="22.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(252,48,16)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(229,80,5)"/><text x="22.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(224,190,23)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(228,119,26)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(245,50,12)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(240,99,16)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(243,72,41)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(224,10,6)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(233,1,42)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="292" width="5" height="15" fill="rgb(209,203,44)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="308" width="5" height="15" fill="rgb(219,12,37)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="324" width="5" height="15" fill="rgb(206,215,44)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="340" width="5" height="15" fill="rgb(238,77,27)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="356" width="5" height="15" fill="rgb(208,134,12)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="372" width="5" height="15" fill="rgb(229,137,54)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.41%)</title><rect x="24" y="388" width="5" height="15" fill="rgb(251,103,23)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="404" width="5" height="15" fill="rgb(252,70,0)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="420" width="5" height="15" fill="rgb(213,50,13)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="436" width="5" height="15" fill="rgb(218,56,18)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="452" width="5" height="15" fill="rgb(239,11,45)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="468" width="5" height="15" fill="rgb(225,21,36)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="484" width="5" height="15" fill="rgb(206,54,15)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="500" width="5" height="15" fill="rgb(215,149,40)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="516" width="5" height="15" fill="rgb(218,217,53)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="532" width="5" height="15" fill="rgb(243,68,17)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="548" width="5" height="15" fill="rgb(219,3,45)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="564" width="5" height="15" fill="rgb(214,41,40)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.41%)</title><rect x="24" y="580" width="5" height="15" fill="rgb(217,167,19)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="596" width="5" height="15" fill="rgb(221,18,9)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="612" width="5" height="15" fill="rgb(244,174,18)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="628" width="5" height="15" fill="rgb(238,179,22)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="644" width="5" height="15" fill="rgb(228,66,53)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="660" width="5" height="15" fill="rgb(243,44,48)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="676" width="5" height="15" fill="rgb(238,11,22)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="692" width="5" height="15" fill="rgb(250,122,0)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="708" width="5" height="15" fill="rgb(219,196,0)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="724" width="5" height="15" fill="rgb(233,127,13)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="740" width="5" height="15" fill="rgb(207,166,47)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="756" width="5" height="15" fill="rgb(249,132,43)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.41%)</title><rect x="24" y="772" width="5" height="15" fill="rgb(206,186,49)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="788" width="5" height="15" fill="rgb(247,64,33)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="804" width="5" height="15" fill="rgb(231,123,49)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="820" width="5" height="15" fill="rgb(247,71,53)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="836" width="5" height="15" fill="rgb(235,62,46)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="852" width="5" height="15" fill="rgb(223,156,45)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(237,56,51)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(235,79,18)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.41%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(251,89,19)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(234,114,33)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(223,52,32)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="948" width="5" height="15" fill="rgb(241,65,16)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="964" width="5" height="15" fill="rgb(218,68,30)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(218,222,24)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.41%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(248,120,18)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(209,189,6)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1028" width="5" height="15" fill="rgb(230,96,34)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1044" width="5" height="15" fill="rgb(246,84,40)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="24" y="1060" width="5" height="15" fill="rgb(242,19,0)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1076" width="5" height="15" fill="rgb(252,104,38)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="1092" width="5" height="15" fill="rgb(220,200,43)"/><text x="27.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1108" width="5" height="15" fill="rgb(239,11,38)"/><text x="27.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1124" width="5" height="15" fill="rgb(223,159,39)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1140" width="5" height="15" fill="rgb(254,106,2)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="24" y="1156" width="5" height="15" fill="rgb(225,120,0)"/><text x="27.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="484" width="5" height="15" fill="rgb(235,114,45)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="500" width="5" height="15" fill="rgb(223,130,4)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="516" width="5" height="15" fill="rgb(205,202,28)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="532" width="5" height="15" fill="rgb(215,202,22)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="548" width="5" height="15" fill="rgb(216,68,26)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="564" width="5" height="15" fill="rgb(245,101,0)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="580" width="5" height="15" fill="rgb(250,171,40)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="596" width="5" height="15" fill="rgb(232,190,25)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="612" width="5" height="15" fill="rgb(234,205,50)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="628" width="5" height="15" fill="rgb(251,150,24)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="644" width="5" height="15" fill="rgb(225,215,4)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="660" width="5" height="15" fill="rgb(223,171,17)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.41%)</title><rect x="29" y="676" width="5" height="15" fill="rgb(239,85,51)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="692" width="5" height="15" fill="rgb(235,67,22)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="708" width="5" height="15" fill="rgb(227,70,50)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="724" width="5" height="15" fill="rgb(242,213,54)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="740" width="5" height="15" fill="rgb(231,204,32)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="756" width="5" height="15" fill="rgb(222,178,11)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="772" width="5" height="15" fill="rgb(234,39,45)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="788" width="5" height="15" fill="rgb(252,225,24)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="804" width="5" height="15" fill="rgb(214,112,49)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="820" width="5" height="15" fill="rgb(246,68,32)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="836" width="5" height="15" fill="rgb(238,141,4)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="852" width="5" height="15" fill="rgb(220,19,2)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.41%)</title><rect x="29" y="868" width="5" height="15" fill="rgb(227,209,45)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(254,228,51)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(223,181,9)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="916" width="5" height="15" fill="rgb(215,64,38)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="932" width="5" height="15" fill="rgb(206,184,23)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="948" width="5" height="15" fill="rgb(253,12,16)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="964" width="5" height="15" fill="rgb(247,137,52)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="980" width="5" height="15" fill="rgb(226,48,3)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="996" width="5" height="15" fill="rgb(212,218,8)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="1012" width="5" height="15" fill="rgb(232,149,28)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1028" width="5" height="15" fill="rgb(227,99,44)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1044" width="5" height="15" fill="rgb(239,89,20)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1060" width="5" height="15" fill="rgb(230,214,29)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1076" width="5" height="15" fill="rgb(227,126,22)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1092" width="5" height="15" fill="rgb(207,216,40)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.41%)</title><rect x="29" y="1108" width="5" height="15" fill="rgb(221,158,12)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1124" width="5" height="15" fill="rgb(214,85,35)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1140" width="5" height="15" fill="rgb(247,211,41)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1156" width="5" height="15" fill="rgb(239,188,3)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1172" width="5" height="15" fill="rgb(209,97,17)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1188" width="5" height="15" fill="rgb(238,174,37)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1204" width="5" height="15" fill="rgb(229,67,43)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1220" width="5" height="15" fill="rgb(220,104,20)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="1236" width="5" height="15" fill="rgb(253,160,32)"/><text x="32.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1252" width="5" height="15" fill="rgb(219,72,14)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1268" width="5" height="15" fill="rgb(247,32,47)"/><text x="32.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1284" width="5" height="15" fill="rgb(208,121,35)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1300" width="5" height="15" fill="rgb(224,206,2)"/><text x="32.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1316" width="5" height="15" fill="rgb(223,74,27)"/><text x="32.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1332" width="5" height="15" fill="rgb(209,81,49)"/><text x="32.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1348" width="5" height="15" fill="rgb(214,83,52)"/><text x="32.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.41%)</title><rect x="29" y="1364" width="5" height="15" fill="rgb(212,145,9)"/><text x="32.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1380" width="5" height="15" fill="rgb(225,44,11)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1396" width="5" height="15" fill="rgb(213,38,41)"/><text x="32.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1412" width="5" height="15" fill="rgb(213,158,46)"/><text x="32.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1428" width="5" height="15" fill="rgb(252,149,31)"/><text x="32.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1444" width="5" height="15" fill="rgb(215,223,19)"/><text x="32.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.41%)</title><rect x="29" y="1460" width="5" height="15" fill="rgb(216,121,43)"/><text x="32.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1476" width="5" height="15" fill="rgb(249,224,33)"/><text x="32.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1492" width="5" height="15" fill="rgb(237,200,46)"/><text x="32.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1508" width="5" height="15" fill="rgb(231,165,23)"/><text x="32.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1524" width="5" height="15" fill="rgb(225,165,10)"/><text x="32.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1540" width="5" height="15" fill="rgb(245,228,28)"/><text x="32.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.41%)</title><rect x="29" y="1556" width="5" height="15" fill="rgb(246,147,47)"/><text x="32.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.41%)</title><rect x="29" y="1572" width="5" height="15" fill="rgb(209,15,44)"/><text x="32.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1588" width="5" height="15" fill="rgb(228,93,41)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1604" width="5" height="15" fill="rgb(253,56,45)"/><text x="32.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1620" width="5" height="15" fill="rgb(229,105,45)"/><text x="32.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1636" width="5" height="15" fill="rgb(242,42,13)"/><text x="32.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1652" width="5" height="15" fill="rgb(206,180,36)"/><text x="32.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="1668" width="5" height="15" fill="rgb(225,153,47)"/><text x="32.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1684" width="5" height="15" fill="rgb(237,117,4)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1700" width="5" height="15" fill="rgb(212,200,42)"/><text x="32.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1716" width="5" height="15" fill="rgb(245,229,53)"/><text x="32.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1732" width="5" height="15" fill="rgb(228,0,27)"/><text x="32.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1748" width="5" height="15" fill="rgb(229,76,45)"/><text x="32.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="29" y="1764" width="5" height="15" fill="rgb(226,220,2)"/><text x="32.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1780" width="5" height="15" fill="rgb(212,71,4)"/><text x="32.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1796" width="5" height="15" fill="rgb(247,17,42)"/><text x="32.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1812" width="5" height="15" fill="rgb(205,6,1)"/><text x="32.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1828" width="5" height="15" fill="rgb(240,15,52)"/><text x="32.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1844" width="5" height="15" fill="rgb(226,2,31)"/><text x="32.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1860" width="5" height="15" fill="rgb(218,63,48)"/><text x="32.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1876" width="5" height="15" fill="rgb(215,172,25)"/><text x="32.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py) (1 samples, 0.41%)</title><rect x="29" y="1892" width="5" height="15" fill="rgb(235,19,51)"/><text x="32.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1908" width="5" height="15" fill="rgb(248,11,20)"/><text x="32.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1924" width="5" height="15" fill="rgb(209,17,7)"/><text x="32.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1940" width="5" height="15" fill="rgb(213,186,39)"/><text x="32.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="1956" width="5" height="15" fill="rgb(253,93,15)"/><text x="32.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="1972" width="5" height="15" fill="rgb(210,111,5)"/><text x="32.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py) (1 samples, 0.41%)</title><rect x="29" y="1988" width="5" height="15" fill="rgb(254,93,48)"/><text x="32.00" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="2004" width="5" height="15" fill="rgb(222,144,22)"/><text x="32.00" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="2020" width="5" height="15" fill="rgb(221,84,15)"/><text x="32.00" y="2030.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="29" y="2036" width="5" height="15" fill="rgb(205,181,18)"/><text x="32.00" y="2046.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="2052" width="5" height="15" fill="rgb(236,47,32)"/><text x="32.00" y="2062.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="2068" width="5" height="15" fill="rgb(237,84,47)"/><text x="32.00" y="2078.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="2084" width="5" height="15" fill="rgb(227,114,33)"/><text x="32.00" y="2094.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="2100" width="5" height="15" fill="rgb(205,219,6)"/><text x="32.00" y="2110.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="29" y="2116" width="5" height="15" fill="rgb(250,66,51)"/><text x="32.00" y="2126.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.41%)</title><rect x="34" y="724" width="4" height="15" fill="rgb(245,67,29)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="740" width="4" height="15" fill="rgb(239,45,29)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="756" width="4" height="15" fill="rgb(225,208,50)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="772" width="4" height="15" fill="rgb(252,164,45)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="788" width="4" height="15" fill="rgb(243,46,31)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(254,224,7)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.41%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(240,156,37)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(213,90,34)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(236,229,43)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(208,111,15)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(236,21,35)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(238,52,9)"/><text x="37.00" y="910.50"></text></g><g><title>0x7f0e15ebc40e (?) (1 samples, 0.41%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(250,56,40)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(233,29,24)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(251,59,29)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(241,97,9)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(241,120,25)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(252,78,0)"/><text x="37.00" y="1006.50"></text></g><g><title>0x7f0e15c75bb0 (?) (1 samples, 0.41%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(205,3,37)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(248,159,32)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(225,49,23)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(214,120,0)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(211,17,2)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1092" width="4" height="15" fill="rgb(219,99,48)"/><text x="37.00" y="1102.50"></text></g><g><title>0x7f0e155fc5bc (?) (1 samples, 0.41%)</title><rect x="34" y="1108" width="4" height="15" fill="rgb(225,168,26)"/><text x="37.00" y="1118.50"></text></g><g><title>0x7f0e155fa97c (?) (1 samples, 0.41%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(237,213,19)"/><text x="37.00" y="1134.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.41%)</title><rect x="38" y="1588" width="5" height="15" fill="rgb(239,144,53)"/><text x="41.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1604" width="5" height="15" fill="rgb(217,194,26)"/><text x="41.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1620" width="5" height="15" fill="rgb(214,130,54)"/><text x="41.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1636" width="5" height="15" fill="rgb(239,19,47)"/><text x="41.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="38" y="1652" width="5" height="15" fill="rgb(213,36,4)"/><text x="41.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="38" y="1668" width="5" height="15" fill="rgb(206,105,38)"/><text x="41.00" y="1678.50"></text></g><g><title>&lt;module&gt; (matplotlib/transforms.py) (1 samples, 0.41%)</title><rect x="38" y="1684" width="5" height="15" fill="rgb(218,26,5)"/><text x="41.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.63%)</title><rect x="29" y="340" width="19" height="15" fill="rgb(220,67,53)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="356" width="19" height="15" fill="rgb(238,112,39)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="372" width="19" height="15" fill="rgb(228,1,28)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="388" width="19" height="15" fill="rgb(253,215,11)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.63%)</title><rect x="29" y="404" width="19" height="15" fill="rgb(214,30,41)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="420" width="19" height="15" fill="rgb(237,30,7)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.63%)</title><rect x="29" y="436" width="19" height="15" fill="rgb(211,128,31)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="452" width="19" height="15" fill="rgb(247,67,21)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.63%)</title><rect x="29" y="468" width="19" height="15" fill="rgb(213,193,30)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="484" width="14" height="15" fill="rgb(238,78,34)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="34" y="500" width="14" height="15" fill="rgb(244,40,21)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="516" width="14" height="15" fill="rgb(211,28,27)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.22%)</title><rect x="34" y="532" width="14" height="15" fill="rgb(252,144,47)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="548" width="14" height="15" fill="rgb(205,202,33)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="564" width="14" height="15" fill="rgb(240,107,47)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="580" width="14" height="15" fill="rgb(244,74,34)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="34" y="596" width="14" height="15" fill="rgb(216,138,11)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="612" width="14" height="15" fill="rgb(227,80,48)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.22%)</title><rect x="34" y="628" width="14" height="15" fill="rgb(243,222,43)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="644" width="14" height="15" fill="rgb(235,161,49)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="660" width="14" height="15" fill="rgb(214,78,50)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="676" width="14" height="15" fill="rgb(242,101,40)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="34" y="692" width="14" height="15" fill="rgb(243,202,10)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="34" y="708" width="14" height="15" fill="rgb(219,57,39)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.82%)</title><rect x="38" y="724" width="10" height="15" fill="rgb(240,134,15)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="740" width="10" height="15" fill="rgb(249,90,49)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="756" width="10" height="15" fill="rgb(237,175,49)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="772" width="10" height="15" fill="rgb(224,204,32)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="788" width="10" height="15" fill="rgb(238,152,5)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="804" width="10" height="15" fill="rgb(251,212,50)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.82%)</title><rect x="38" y="820" width="10" height="15" fill="rgb(206,178,16)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="836" width="10" height="15" fill="rgb(236,27,28)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="852" width="10" height="15" fill="rgb(208,175,50)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="868" width="10" height="15" fill="rgb(244,192,28)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="884" width="10" height="15" fill="rgb(217,178,53)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="900" width="10" height="15" fill="rgb(251,218,34)"/><text x="41.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.82%)</title><rect x="38" y="916" width="10" height="15" fill="rgb(250,35,30)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="932" width="10" height="15" fill="rgb(213,118,11)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="948" width="10" height="15" fill="rgb(226,48,41)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="964" width="10" height="15" fill="rgb(239,185,19)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="980" width="10" height="15" fill="rgb(230,190,25)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="996" width="10" height="15" fill="rgb(214,17,42)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.82%)</title><rect x="38" y="1012" width="10" height="15" fill="rgb(214,167,15)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1028" width="10" height="15" fill="rgb(223,29,47)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1044" width="10" height="15" fill="rgb(249,112,14)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1060" width="10" height="15" fill="rgb(218,62,41)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1076" width="10" height="15" fill="rgb(226,191,49)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1092" width="10" height="15" fill="rgb(214,180,16)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.82%)</title><rect x="38" y="1108" width="10" height="15" fill="rgb(250,163,7)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1124" width="10" height="15" fill="rgb(219,159,0)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1140" width="10" height="15" fill="rgb(242,99,8)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1156" width="10" height="15" fill="rgb(236,73,52)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1172" width="10" height="15" fill="rgb(238,163,48)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1188" width="10" height="15" fill="rgb(225,82,26)"/><text x="41.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.82%)</title><rect x="38" y="1204" width="10" height="15" fill="rgb(228,169,37)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1220" width="10" height="15" fill="rgb(216,56,15)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1236" width="10" height="15" fill="rgb(220,74,6)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1252" width="10" height="15" fill="rgb(231,58,35)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1268" width="10" height="15" fill="rgb(246,175,31)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1284" width="10" height="15" fill="rgb(221,38,24)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.82%)</title><rect x="38" y="1300" width="10" height="15" fill="rgb(214,90,4)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1316" width="10" height="15" fill="rgb(222,181,45)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1332" width="10" height="15" fill="rgb(240,210,20)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1348" width="10" height="15" fill="rgb(240,35,10)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1364" width="10" height="15" fill="rgb(223,16,51)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1380" width="10" height="15" fill="rgb(226,185,49)"/><text x="41.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.82%)</title><rect x="38" y="1396" width="10" height="15" fill="rgb(205,74,39)"/><text x="41.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1412" width="10" height="15" fill="rgb(240,135,51)"/><text x="41.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1428" width="10" height="15" fill="rgb(219,109,13)"/><text x="41.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1444" width="10" height="15" fill="rgb(237,80,45)"/><text x="41.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1460" width="10" height="15" fill="rgb(217,123,29)"/><text x="41.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1476" width="10" height="15" fill="rgb(240,68,16)"/><text x="41.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.82%)</title><rect x="38" y="1492" width="10" height="15" fill="rgb(226,134,18)"/><text x="41.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1508" width="10" height="15" fill="rgb(244,191,51)"/><text x="41.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1524" width="10" height="15" fill="rgb(217,150,15)"/><text x="41.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1540" width="10" height="15" fill="rgb(219,145,4)"/><text x="41.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="38" y="1556" width="10" height="15" fill="rgb(240,24,4)"/><text x="41.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="38" y="1572" width="10" height="15" fill="rgb(240,44,13)"/><text x="41.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.41%)</title><rect x="43" y="1588" width="5" height="15" fill="rgb(208,120,22)"/><text x="46.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1604" width="5" height="15" fill="rgb(205,103,48)"/><text x="46.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1620" width="5" height="15" fill="rgb(226,67,27)"/><text x="46.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1636" width="5" height="15" fill="rgb(244,47,30)"/><text x="46.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="43" y="1652" width="5" height="15" fill="rgb(249,217,20)"/><text x="46.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1668" width="5" height="15" fill="rgb(218,144,1)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.41%)</title><rect x="43" y="1684" width="5" height="15" fill="rgb(218,83,8)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1700" width="5" height="15" fill="rgb(234,3,27)"/><text x="46.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1716" width="5" height="15" fill="rgb(223,31,17)"/><text x="46.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1732" width="5" height="15" fill="rgb(214,95,25)"/><text x="46.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="43" y="1748" width="5" height="15" fill="rgb(254,166,25)"/><text x="46.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1764" width="5" height="15" fill="rgb(236,1,13)"/><text x="46.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.41%)</title><rect x="43" y="1780" width="5" height="15" fill="rgb(251,0,14)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1796" width="5" height="15" fill="rgb(227,198,53)"/><text x="46.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1812" width="5" height="15" fill="rgb(226,156,12)"/><text x="46.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1828" width="5" height="15" fill="rgb(207,177,8)"/><text x="46.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="43" y="1844" width="5" height="15" fill="rgb(231,164,35)"/><text x="46.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="43" y="1860" width="5" height="15" fill="rgb(222,216,14)"/><text x="46.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.41%)</title><rect x="43" y="1876" width="5" height="15" fill="rgb(212,83,0)"/><text x="46.00" y="1886.50"></text></g><g><title>_pprint_styles (matplotlib/patches.py) (1 samples, 0.41%)</title><rect x="43" y="1892" width="5" height="15" fill="rgb(236,63,2)"/><text x="46.00" y="1902.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.41%)</title><rect x="43" y="1908" width="5" height="15" fill="rgb(251,24,31)"/><text x="46.00" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="628" width="5" height="15" fill="rgb(251,168,24)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="644" width="5" height="15" fill="rgb(250,202,47)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="660" width="5" height="15" fill="rgb(226,225,15)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="676" width="5" height="15" fill="rgb(207,172,22)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="692" width="5" height="15" fill="rgb(232,29,13)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="708" width="5" height="15" fill="rgb(245,20,1)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.41%)</title><rect x="48" y="724" width="5" height="15" fill="rgb(245,205,2)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="740" width="5" height="15" fill="rgb(228,53,52)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="756" width="5" height="15" fill="rgb(230,70,22)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="772" width="5" height="15" fill="rgb(217,68,54)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="788" width="5" height="15" fill="rgb(248,207,32)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="804" width="5" height="15" fill="rgb(209,155,19)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.41%)</title><rect x="48" y="820" width="5" height="15" fill="rgb(225,162,34)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="836" width="5" height="15" fill="rgb(224,181,49)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="852" width="5" height="15" fill="rgb(251,39,2)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="868" width="5" height="15" fill="rgb(240,108,24)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="884" width="5" height="15" fill="rgb(229,65,8)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="900" width="5" height="15" fill="rgb(217,165,6)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.41%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(208,123,12)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="932" width="5" height="15" fill="rgb(231,44,49)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="948" width="5" height="15" fill="rgb(221,92,39)"/><text x="51.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="964" width="5" height="15" fill="rgb(226,222,47)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="980" width="5" height="15" fill="rgb(215,12,5)"/><text x="51.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="996" width="5" height="15" fill="rgb(242,137,1)"/><text x="51.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="1012" width="5" height="15" fill="rgb(205,26,15)"/><text x="51.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="1028" width="5" height="15" fill="rgb(250,98,18)"/><text x="51.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="1044" width="5" height="15" fill="rgb(224,23,38)"/><text x="51.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.41%)</title><rect x="48" y="1060" width="5" height="15" fill="rgb(228,174,23)"/><text x="51.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="1076" width="5" height="15" fill="rgb(229,101,50)"/><text x="51.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="1092" width="5" height="15" fill="rgb(250,0,7)"/><text x="51.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="48" y="1108" width="5" height="15" fill="rgb(219,49,38)"/><text x="51.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="1124" width="5" height="15" fill="rgb(222,92,11)"/><text x="51.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="1140" width="5" height="15" fill="rgb(208,107,29)"/><text x="51.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="48" y="1156" width="5" height="15" fill="rgb(238,94,22)"/><text x="51.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.82%)</title><rect x="48" y="580" width="10" height="15" fill="rgb(218,159,34)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="48" y="596" width="10" height="15" fill="rgb(212,173,50)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="48" y="612" width="10" height="15" fill="rgb(227,177,36)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="628" width="5" height="15" fill="rgb(226,57,45)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="644" width="5" height="15" fill="rgb(248,48,4)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="660" width="5" height="15" fill="rgb(208,110,11)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.41%)</title><rect x="53" y="676" width="5" height="15" fill="rgb(211,50,18)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="692" width="5" height="15" fill="rgb(205,74,37)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="708" width="5" height="15" fill="rgb(242,41,15)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="724" width="5" height="15" fill="rgb(206,46,3)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="740" width="5" height="15" fill="rgb(253,33,19)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="756" width="5" height="15" fill="rgb(234,142,6)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.41%)</title><rect x="53" y="772" width="5" height="15" fill="rgb(206,100,41)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="788" width="5" height="15" fill="rgb(245,4,3)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="804" width="5" height="15" fill="rgb(225,222,46)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="53" y="820" width="5" height="15" fill="rgb(211,72,53)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="836" width="5" height="15" fill="rgb(254,33,25)"/><text x="56.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="852" width="5" height="15" fill="rgb(221,107,34)"/><text x="56.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="53" y="868" width="5" height="15" fill="rgb(206,110,51)"/><text x="56.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.86%)</title><rect x="29" y="244" width="33" height="15" fill="rgb(245,121,44)"/><text x="32.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.86%)</title><rect x="29" y="260" width="33" height="15" fill="rgb(220,225,16)"/><text x="32.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.86%)</title><rect x="29" y="276" width="33" height="15" fill="rgb(248,88,2)"/><text x="32.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.86%)</title><rect x="29" y="292" width="33" height="15" fill="rgb(254,63,21)"/><text x="32.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.86%)</title><rect x="29" y="308" width="33" height="15" fill="rgb(245,115,0)"/><text x="32.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.86%)</title><rect x="29" y="324" width="33" height="15" fill="rgb(253,172,45)"/><text x="32.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.22%)</title><rect x="48" y="340" width="14" height="15" fill="rgb(222,5,16)"/><text x="51.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="356" width="14" height="15" fill="rgb(248,163,50)"/><text x="51.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="372" width="14" height="15" fill="rgb(235,140,36)"/><text x="51.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="388" width="14" height="15" fill="rgb(219,140,6)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="404" width="14" height="15" fill="rgb(225,119,32)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="420" width="14" height="15" fill="rgb(210,148,5)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="436" width="14" height="15" fill="rgb(218,88,8)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="48" y="452" width="14" height="15" fill="rgb(207,7,1)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="468" width="14" height="15" fill="rgb(227,85,50)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.22%)</title><rect x="48" y="484" width="14" height="15" fill="rgb(219,180,47)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="500" width="14" height="15" fill="rgb(247,191,16)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="516" width="14" height="15" fill="rgb(213,11,39)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="532" width="14" height="15" fill="rgb(241,7,21)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.22%)</title><rect x="48" y="548" width="14" height="15" fill="rgb(236,96,48)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.22%)</title><rect x="48" y="564" width="14" height="15" fill="rgb(220,40,30)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.41%)</title><rect x="58" y="580" width="4" height="15" fill="rgb(246,4,6)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="596" width="4" height="15" fill="rgb(242,81,1)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="612" width="4" height="15" fill="rgb(219,51,26)"/><text x="61.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="628" width="4" height="15" fill="rgb(248,183,31)"/><text x="61.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="58" y="644" width="4" height="15" fill="rgb(212,128,40)"/><text x="61.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="660" width="4" height="15" fill="rgb(220,137,43)"/><text x="61.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.41%)</title><rect x="58" y="676" width="4" height="15" fill="rgb(242,118,53)"/><text x="61.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="692" width="4" height="15" fill="rgb(212,126,2)"/><text x="61.00" y="702.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="708" width="4" height="15" fill="rgb(218,146,18)"/><text x="61.00" y="718.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="58" y="724" width="4" height="15" fill="rgb(251,48,34)"/><text x="61.00" y="734.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.41%)</title><rect x="62" y="372" width="5" height="15" fill="rgb(248,144,18)"/><text x="65.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="388" width="5" height="15" fill="rgb(234,133,42)"/><text x="65.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="404" width="5" height="15" fill="rgb(239,120,39)"/><text x="65.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="420" width="5" height="15" fill="rgb(227,209,0)"/><text x="65.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="436" width="5" height="15" fill="rgb(241,208,7)"/><text x="65.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="452" width="5" height="15" fill="rgb(227,20,28)"/><text x="65.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="62" y="468" width="5" height="15" fill="rgb(225,12,25)"/><text x="65.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="484" width="5" height="15" fill="rgb(230,130,26)"/><text x="65.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.41%)</title><rect x="62" y="500" width="5" height="15" fill="rgb(210,107,45)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="516" width="5" height="15" fill="rgb(229,173,0)"/><text x="65.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="532" width="5" height="15" fill="rgb(227,182,45)"/><text x="65.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="548" width="5" height="15" fill="rgb(226,174,15)"/><text x="65.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="62" y="564" width="5" height="15" fill="rgb(239,83,52)"/><text x="65.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="62" y="580" width="5" height="15" fill="rgb(220,75,46)"/><text x="65.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.41%)</title><rect x="62" y="596" width="5" height="15" fill="rgb(238,164,37)"/><text x="65.00" y="606.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.41%)</title><rect x="62" y="612" width="5" height="15" fill="rgb(213,197,26)"/><text x="65.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="68" width="62" height="15" fill="rgb(223,104,31)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="84" width="62" height="15" fill="rgb(237,107,49)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="100" width="62" height="15" fill="rgb(210,13,28)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.31%)</title><rect x="10" y="116" width="62" height="15" fill="rgb(251,40,42)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="132" width="62" height="15" fill="rgb(235,225,28)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py) (13 samples, 5.31%)</title><rect x="10" y="148" width="62" height="15" fill="rgb(239,51,13)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="164" width="62" height="15" fill="rgb(252,218,1)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.31%)</title><rect x="10" y="180" width="62" height="15" fill="rgb(207,139,15)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="29" y="196" width="43" height="15" fill="rgb(242,170,41)"/><text x="32.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.67%)</title><rect x="29" y="212" width="43" height="15" fill="rgb(208,93,22)"/><text x="32.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.67%)</title><rect x="29" y="228" width="43" height="15" fill="rgb(236,198,40)"/><text x="32.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.82%)</title><rect x="62" y="244" width="10" height="15" fill="rgb(207,190,22)"/><text x="65.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="260" width="10" height="15" fill="rgb(218,173,4)"/><text x="65.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="276" width="10" height="15" fill="rgb(249,175,15)"/><text x="65.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="292" width="10" height="15" fill="rgb(240,178,23)"/><text x="65.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="308" width="10" height="15" fill="rgb(249,167,24)"/><text x="65.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="324" width="10" height="15" fill="rgb(227,99,43)"/><text x="65.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.82%)</title><rect x="62" y="340" width="10" height="15" fill="rgb(213,183,6)"/><text x="65.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="62" y="356" width="10" height="15" fill="rgb(249,26,53)"/><text x="65.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py) (1 samples, 0.41%)</title><rect x="67" y="372" width="5" height="15" fill="rgb(205,175,48)"/><text x="70.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="67" y="388" width="5" height="15" fill="rgb(246,115,34)"/><text x="70.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="67" y="404" width="5" height="15" fill="rgb(212,33,37)"/><text x="70.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="67" y="420" width="5" height="15" fill="rgb(217,50,7)"/><text x="70.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="67" y="436" width="5" height="15" fill="rgb(237,74,25)"/><text x="70.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="67" y="452" width="5" height="15" fill="rgb(208,71,35)"/><text x="70.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/fft/_pocketfft.py) (1 samples, 0.41%)</title><rect x="67" y="468" width="5" height="15" fill="rgb(231,17,41)"/><text x="70.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.41%)</title><rect x="67" y="484" width="5" height="15" fill="rgb(250,77,9)"/><text x="70.00" y="494.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.41%)</title><rect x="67" y="500" width="5" height="15" fill="rgb(244,210,17)"/><text x="70.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="72" y="116" width="5" height="15" fill="rgb(216,141,27)"/><text x="75.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="72" y="132" width="5" height="15" fill="rgb(230,221,20)"/><text x="75.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="72" y="148" width="5" height="15" fill="rgb(209,58,38)"/><text x="75.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="115" y="180" width="5" height="15" fill="rgb(213,84,32)"/><text x="118.00" y="190.50"></text></g><g><title>0x7f0dfeda5ff9 (?) (1 samples, 0.41%)</title><rect x="140" y="212" width="4" height="15" fill="rgb(225,2,16)"/><text x="143.00" y="222.50"></text></g><g><title>0x7f0dfeda0ef6 (?) (1 samples, 0.41%)</title><rect x="140" y="228" width="4" height="15" fill="rgb(239,85,53)"/><text x="143.00" y="238.50"></text></g><g><title>0x7f0dfed95962 (?) (1 samples, 0.41%)</title><rect x="140" y="244" width="4" height="15" fill="rgb(223,146,40)"/><text x="143.00" y="254.50"></text></g><g><title>0x7f0dfedc97a7 (?) (1 samples, 0.41%)</title><rect x="140" y="260" width="4" height="15" fill="rgb(236,18,25)"/><text x="143.00" y="270.50"></text></g><g><title>0x7f0dfedc9379 (?) (1 samples, 0.41%)</title><rect x="140" y="276" width="4" height="15" fill="rgb(234,129,27)"/><text x="143.00" y="286.50"></text></g><g><title>0x7f0dff2278b8 (?) (1 samples, 0.41%)</title><rect x="140" y="292" width="4" height="15" fill="rgb(220,203,4)"/><text x="143.00" y="302.50"></text></g><g><title>0x7f0dff225c7f (?) (1 samples, 0.41%)</title><rect x="140" y="308" width="4" height="15" fill="rgb(241,206,29)"/><text x="143.00" y="318.50"></text></g><g><title>0x7f0dff2382e5 (?) (1 samples, 0.41%)</title><rect x="140" y="324" width="4" height="15" fill="rgb(210,44,48)"/><text x="143.00" y="334.50"></text></g><g><title>0x7f0dff1e076a (?) (1 samples, 0.41%)</title><rect x="140" y="340" width="4" height="15" fill="rgb(236,64,1)"/><text x="143.00" y="350.50"></text></g><g><title>0x7f0dff1c60b5 (?) (1 samples, 0.41%)</title><rect x="140" y="356" width="4" height="15" fill="rgb(219,121,22)"/><text x="143.00" y="366.50"></text></g><g><title>0x7f0dff1beeba (?) (1 samples, 0.41%)</title><rect x="140" y="372" width="4" height="15" fill="rgb(218,105,52)"/><text x="143.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.41%)</title><rect x="144" y="212" width="5" height="15" fill="rgb(206,2,31)"/><text x="147.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.41%)</title><rect x="149" y="212" width="5" height="15" fill="rgb(238,20,3)"/><text x="152.00" y="222.50"></text></g><g><title>0x7ffe03b7eb28 ([vdso]) (1 samples, 0.41%)</title><rect x="149" y="228" width="5" height="15" fill="rgb(235,169,35)"/><text x="152.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="154" y="228" width="5" height="15" fill="rgb(253,29,10)"/><text x="157.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="154" y="244" width="5" height="15" fill="rgb(249,68,36)"/><text x="157.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="164" y="292" width="4" height="15" fill="rgb(214,32,25)"/><text x="167.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="168" y="292" width="5" height="15" fill="rgb(251,127,51)"/><text x="171.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="183" y="356" width="5" height="15" fill="rgb(254,48,42)"/><text x="186.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="183" y="372" width="5" height="15" fill="rgb(252,29,9)"/><text x="186.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="183" y="388" width="5" height="15" fill="rgb(247,109,5)"/><text x="186.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="183" y="404" width="5" height="15" fill="rgb(208,103,28)"/><text x="186.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.04%)</title><rect x="178" y="340" width="24" height="15" fill="rgb(216,158,5)"/><text x="181.00" y="350.50">o..</text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="188" y="356" width="14" height="15" fill="rgb(232,114,14)"/><text x="191.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="202" y="340" width="15" height="15" fill="rgb(209,6,46)"/><text x="205.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="212" y="356" width="5" height="15" fill="rgb(207,166,40)"/><text x="215.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.31%)</title><rect x="164" y="260" width="62" height="15" fill="rgb(241,79,40)"/><text x="167.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.31%)</title><rect x="164" y="276" width="62" height="15" fill="rgb(229,131,29)"/><text x="167.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.49%)</title><rect x="173" y="292" width="53" height="15" fill="rgb(208,131,29)"/><text x="176.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.49%)</title><rect x="173" y="308" width="53" height="15" fill="rgb(238,45,22)"/><text x="176.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.49%)</title><rect x="173" y="324" width="53" height="15" fill="rgb(216,110,13)"/><text x="176.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="217" y="340" width="9" height="15" fill="rgb(244,156,35)"/><text x="220.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="221" y="356" width="5" height="15" fill="rgb(241,208,37)"/><text x="224.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="221" y="372" width="5" height="15" fill="rgb(211,45,12)"/><text x="224.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="221" y="388" width="5" height="15" fill="rgb(225,82,0)"/><text x="224.00" y="398.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="231" y="276" width="5" height="15" fill="rgb(234,212,48)"/><text x="234.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="231" y="292" width="5" height="15" fill="rgb(243,134,3)"/><text x="234.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="231" y="308" width="5" height="15" fill="rgb(253,224,0)"/><text x="234.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="226" y="260" width="15" height="15" fill="rgb(241,17,27)"/><text x="229.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="236" y="276" width="5" height="15" fill="rgb(244,25,51)"/><text x="239.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="241" y="260" width="5" height="15" fill="rgb(228,30,14)"/><text x="244.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="246" y="260" width="4" height="15" fill="rgb(230,94,5)"/><text x="249.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="246" y="276" width="4" height="15" fill="rgb(227,112,46)"/><text x="249.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="250" y="260" width="15" height="15" fill="rgb(220,221,4)"/><text x="253.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="260" y="276" width="5" height="15" fill="rgb(217,95,47)"/><text x="263.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 9.39%)</title><rect x="159" y="244" width="111" height="15" fill="rgb(230,49,15)"/><text x="162.00" y="254.50">onnxruntime::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="260" width="5" height="15" fill="rgb(243,116,12)"/><text x="268.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="276" width="5" height="15" fill="rgb(234,184,43)"/><text x="268.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="292" width="5" height="15" fill="rgb(206,163,51)"/><text x="268.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="308" width="5" height="15" fill="rgb(235,191,48)"/><text x="268.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="324" width="5" height="15" fill="rgb(238,135,49)"/><text x="268.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="340" width="5" height="15" fill="rgb(245,121,44)"/><text x="268.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="356" width="5" height="15" fill="rgb(251,23,24)"/><text x="268.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="265" y="372" width="5" height="15" fill="rgb(251,165,41)"/><text x="268.00" y="382.50"></text></g><g><title>profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (46 samples, 18.78%)</title><rect x="72" y="68" width="222" height="15" fill="rgb(215,54,51)"/><text x="75.00" y="78.50">profile_ort (bench_SVC_linear..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (46 samples, 18.78%)</title><rect x="72" y="84" width="222" height="15" fill="rgb(207,175,40)"/><text x="75.00" y="94.50">setup_profile (bench_SVC_line..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (46 samples, 18.78%)</title><rect x="72" y="100" width="222" height="15" fill="rgb(242,162,42)"/><text x="75.00" y="110.50">profile (bench_SVC_linear_m_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (45 samples, 18.37%)</title><rect x="77" y="116" width="217" height="15" fill="rgb(209,111,32)"/><text x="80.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 17.55%)</title><rect x="87" y="132" width="207" height="15" fill="rgb(237,49,49)"/><text x="90.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (43 samples, 17.55%)</title><rect x="87" y="148" width="207" height="15" fill="rgb(230,100,36)"/><text x="90.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (41 samples, 16.73%)</title><rect x="96" y="164" width="198" height="15" fill="rgb(238,7,49)"/><text x="99.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (36 samples, 14.69%)</title><rect x="120" y="180" width="174" height="15" fill="rgb(242,115,40)"/><text x="123.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (34 samples, 13.88%)</title><rect x="130" y="196" width="164" height="15" fill="rgb(207,186,44)"/><text x="133.00" y="206.50">run (onnxruntime/capi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 11.84%)</title><rect x="154" y="212" width="140" height="15" fill="rgb(224,136,0)"/><text x="157.00" y="222.50">pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 11.43%)</title><rect x="159" y="228" width="135" height="15" fill="rgb(237,125,7)"/><text x="162.00" y="238.50">void pybind11::cp..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.04%)</title><rect x="270" y="244" width="24" height="15" fill="rgb(213,112,26)"/><text x="273.00" y="254.50">p..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.63%)</title><rect x="274" y="260" width="20" height="15" fill="rgb(246,9,0)"/><text x="277.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="289" y="276" width="5" height="15" fill="rgb(220,22,35)"/><text x="292.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="342" y="180" width="5" height="15" fill="rgb(232,204,15)"/><text x="345.00" y="190.50"></text></g><g><title>0x7f0e3ed56124 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="424" y="196" width="5" height="15" fill="rgb(242,149,32)"/><text x="427.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.41%)</title><rect x="429" y="196" width="4" height="15" fill="rgb(241,57,53)"/><text x="432.00" y="206.50"></text></g><g><title>0x7f0e3ee13fd0 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="443" y="212" width="5" height="15" fill="rgb(216,150,16)"/><text x="446.00" y="222.50"></text></g><g><title>0x7f0e3ed56120 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="457" y="292" width="5" height="15" fill="rgb(213,89,53)"/><text x="460.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.63%)</title><rect x="448" y="212" width="19" height="15" fill="rgb(238,57,41)"/><text x="451.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.63%)</title><rect x="448" y="228" width="19" height="15" fill="rgb(238,41,27)"/><text x="451.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 1.63%)</title><rect x="448" y="244" width="19" height="15" fill="rgb(250,213,47)"/><text x="451.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.63%)</title><rect x="448" y="260" width="19" height="15" fill="rgb(232,186,1)"/><text x="451.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.22%)</title><rect x="453" y="276" width="14" height="15" fill="rgb(209,41,4)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.41%)</title><rect x="462" y="292" width="5" height="15" fill="rgb(243,88,31)"/><text x="465.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.41%)</title><rect x="462" y="308" width="5" height="15" fill="rgb(250,104,2)"/><text x="465.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 1.22%)</title><rect x="467" y="212" width="15" height="15" fill="rgb(221,72,11)"/><text x="470.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.41%)</title><rect x="477" y="228" width="5" height="15" fill="rgb(234,194,36)"/><text x="480.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.41%)</title><rect x="482" y="212" width="4" height="15" fill="rgb(234,119,1)"/><text x="485.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.41%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(206,203,17)"/><text x="485.00" y="238.50"></text></g><g><title>0x7f0dffea4c29 (?) (1 samples, 0.41%)</title><rect x="515" y="244" width="5" height="15" fill="rgb(254,147,36)"/><text x="518.00" y="254.50"></text></g><g><title>0x7f0dffeabd9e (?) (1 samples, 0.41%)</title><rect x="515" y="260" width="5" height="15" fill="rgb(218,58,48)"/><text x="518.00" y="270.50"></text></g><g><title>0x7f0dffeabc56 (?) (1 samples, 0.41%)</title><rect x="515" y="276" width="5" height="15" fill="rgb(234,105,26)"/><text x="518.00" y="286.50"></text></g><g><title>0x7f0dffeb1ac7 (?) (1 samples, 0.41%)</title><rect x="515" y="292" width="5" height="15" fill="rgb(230,43,35)"/><text x="518.00" y="302.50"></text></g><g><title>0x7f0dffeb0de5 (?) (1 samples, 0.41%)</title><rect x="515" y="308" width="5" height="15" fill="rgb(209,42,48)"/><text x="518.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.41%)</title><rect x="520" y="244" width="5" height="15" fill="rgb(247,228,45)"/><text x="523.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.82%)</title><rect x="525" y="244" width="9" height="15" fill="rgb(218,30,54)"/><text x="528.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.82%)</title><rect x="525" y="260" width="9" height="15" fill="rgb(212,51,46)"/><text x="528.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.82%)</title><rect x="525" y="276" width="9" height="15" fill="rgb(229,142,1)"/><text x="528.00" y="286.50"></text></g><g><title>0x7f0e3df57ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="530" y="292" width="4" height="15" fill="rgb(216,225,8)"/><text x="533.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (2 samples, 0.82%)</title><rect x="534" y="292" width="10" height="15" fill="rgb(246,67,50)"/><text x="537.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (2 samples, 0.82%)</title><rect x="534" y="308" width="10" height="15" fill="rgb(228,149,46)"/><text x="537.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (2 samples, 0.82%)</title><rect x="534" y="324" width="10" height="15" fill="rgb(242,175,7)"/><text x="537.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (2 samples, 0.82%)</title><rect x="534" y="340" width="10" height="15" fill="rgb(210,87,29)"/><text x="537.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h) (2 samples, 0.82%)</title><rect x="534" y="356" width="10" height="15" fill="rgb(207,224,40)"/><text x="537.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (2 samples, 0.82%)</title><rect x="534" y="372" width="10" height="15" fill="rgb(228,162,0)"/><text x="537.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (2 samples, 0.82%)</title><rect x="534" y="388" width="10" height="15" fill="rgb(252,172,54)"/><text x="537.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (2 samples, 0.82%)</title><rect x="534" y="404" width="10" height="15" fill="rgb(254,16,25)"/><text x="537.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.82%)</title><rect x="534" y="420" width="10" height="15" fill="rgb(237,57,11)"/><text x="537.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (2 samples, 0.82%)</title><rect x="534" y="436" width="10" height="15" fill="rgb(223,90,44)"/><text x="537.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.82%)</title><rect x="534" y="452" width="10" height="15" fill="rgb(252,192,20)"/><text x="537.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.82%)</title><rect x="534" y="468" width="10" height="15" fill="rgb(228,95,25)"/><text x="537.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.82%)</title><rect x="534" y="484" width="10" height="15" fill="rgb(238,78,24)"/><text x="537.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (1 samples, 0.41%)</title><rect x="539" y="500" width="5" height="15" fill="rgb(220,154,21)"/><text x="542.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.41%)</title><rect x="539" y="516" width="5" height="15" fill="rgb(211,59,5)"/><text x="542.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.41%)</title><rect x="539" y="532" width="5" height="15" fill="rgb(218,140,4)"/><text x="542.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.41%)</title><rect x="539" y="548" width="5" height="15" fill="rgb(208,128,25)"/><text x="542.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="539" y="564" width="5" height="15" fill="rgb(224,180,25)"/><text x="542.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="539" y="580" width="5" height="15" fill="rgb(245,126,28)"/><text x="542.00" y="590.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.41%)</title><rect x="544" y="340" width="5" height="15" fill="rgb(205,18,45)"/><text x="547.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.41%)</title><rect x="544" y="356" width="5" height="15" fill="rgb(209,3,26)"/><text x="547.00" y="366.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.41%)</title><rect x="544" y="372" width="5" height="15" fill="rgb(242,26,17)"/><text x="547.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.41%)</title><rect x="544" y="388" width="5" height="15" fill="rgb(225,28,19)"/><text x="547.00" y="398.50"></text></g><g><title>profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (54 samples, 22.04%)</title><rect x="294" y="68" width="260" height="15" fill="rgb(224,128,8)"/><text x="297.00" y="78.50">profile_pyrt (bench_SVC_linear_m_c..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (54 samples, 22.04%)</title><rect x="294" y="84" width="260" height="15" fill="rgb(212,187,6)"/><text x="297.00" y="94.50">setup_profile (bench_SVC_linear_m_..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (54 samples, 22.04%)</title><rect x="294" y="100" width="260" height="15" fill="rgb(214,47,6)"/><text x="297.00" y="110.50">profile (bench_SVC_linear_m_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (54 samples, 22.04%)</title><rect x="294" y="116" width="260" height="15" fill="rgb(247,99,30)"/><text x="297.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 21.63%)</title><rect x="298" y="132" width="256" height="15" fill="rgb(209,85,24)"/><text x="301.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (53 samples, 21.63%)</title><rect x="298" y="148" width="256" height="15" fill="rgb(224,150,9)"/><text x="301.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (47 samples, 19.18%)</title><rect x="327" y="164" width="227" height="15" fill="rgb(243,213,13)"/><text x="330.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (43 samples, 17.55%)</title><rect x="347" y="180" width="207" height="15" fill="rgb(211,125,3)"/><text x="350.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 10.20%)</title><rect x="433" y="196" width="121" height="15" fill="rgb(224,128,9)"/><text x="436.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (14 samples, 5.71%)</title><rect x="486" y="212" width="68" height="15" fill="rgb(215,177,52)"/><text x="489.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (11 samples, 4.49%)</title><rect x="501" y="228" width="53" height="15" fill="rgb(243,161,37)"/><text x="504.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (4 samples, 1.63%)</title><rect x="534" y="244" width="20" height="15" fill="rgb(240,208,18)"/><text x="537.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (4 samples, 1.63%)</title><rect x="534" y="260" width="20" height="15" fill="rgb(250,199,17)"/><text x="537.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (4 samples, 1.63%)</title><rect x="534" y="276" width="20" height="15" fill="rgb(221,225,37)"/><text x="537.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (2 samples, 0.82%)</title><rect x="544" y="292" width="10" height="15" fill="rgb(224,187,0)"/><text x="547.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (2 samples, 0.82%)</title><rect x="544" y="308" width="10" height="15" fill="rgb(217,16,25)"/><text x="547.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (2 samples, 0.82%)</title><rect x="544" y="324" width="10" height="15" fill="rgb(233,82,29)"/><text x="547.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (1 samples, 0.41%)</title><rect x="549" y="340" width="5" height="15" fill="rgb(227,146,33)"/><text x="552.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (1 samples, 0.41%)</title><rect x="549" y="356" width="5" height="15" fill="rgb(225,210,32)"/><text x="552.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (1 samples, 0.41%)</title><rect x="549" y="372" width="5" height="15" fill="rgb(242,14,12)"/><text x="552.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (1 samples, 0.41%)</title><rect x="549" y="388" width="5" height="15" fill="rgb(228,82,29)"/><text x="552.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.41%)</title><rect x="549" y="404" width="5" height="15" fill="rgb(252,14,11)"/><text x="552.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="549" y="420" width="5" height="15" fill="rgb(223,18,24)"/><text x="552.00" y="430.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.41%)</title><rect x="549" y="436" width="5" height="15" fill="rgb(229,33,40)"/><text x="552.00" y="446.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.41%)</title><rect x="549" y="452" width="5" height="15" fill="rgb(244,158,13)"/><text x="552.00" y="462.50"></text></g><g><title>0x7f0e19826247 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="578" y="180" width="9" height="15" fill="rgb(209,114,34)"/><text x="581.00" y="190.50"></text></g><g><title>0x7f0e1980de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="587" y="212" width="5" height="15" fill="rgb(236,198,48)"/><text x="590.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="587" y="228" width="5" height="15" fill="rgb(232,221,0)"/><text x="590.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="587" y="244" width="5" height="15" fill="rgb(227,138,2)"/><text x="590.00" y="254.50"></text></g><g><title>0x7f0e19823d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="587" y="196" width="10" height="15" fill="rgb(224,51,37)"/><text x="590.00" y="206.50"></text></g><g><title>0x7f0e1980df13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(252,91,37)"/><text x="595.00" y="222.50"></text></g><g><title>0x7f0e1980d320 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="592" y="228" width="5" height="15" fill="rgb(215,119,14)"/><text x="595.00" y="238.50"></text></g><g><title>0x7f0e19823d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="597" y="196" width="5" height="15" fill="rgb(236,96,37)"/><text x="600.00" y="206.50"></text></g><g><title>0x7f0e1980d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="597" y="212" width="5" height="15" fill="rgb(223,95,22)"/><text x="600.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="228" width="5" height="15" fill="rgb(214,213,0)"/><text x="600.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(218,85,30)"/><text x="600.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(209,13,10)"/><text x="600.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="276" width="5" height="15" fill="rgb(212,71,3)"/><text x="600.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="292" width="5" height="15" fill="rgb(241,103,15)"/><text x="600.00" y="302.50"></text></g><g><title>0x7f0e19823f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="602" y="196" width="10" height="15" fill="rgb(214,2,1)"/><text x="605.00" y="206.50"></text></g><g><title>0x7f0e1980de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="602" y="212" width="10" height="15" fill="rgb(229,0,51)"/><text x="605.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.82%)</title><rect x="602" y="228" width="10" height="15" fill="rgb(238,154,1)"/><text x="605.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.82%)</title><rect x="602" y="244" width="10" height="15" fill="rgb(225,154,34)"/><text x="605.00" y="254.50"></text></g><g><title>0x7f0e19823ff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="612" y="196" width="9" height="15" fill="rgb(215,17,32)"/><text x="615.00" y="206.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.82%)</title><rect x="631" y="228" width="9" height="15" fill="rgb(238,167,38)"/><text x="634.00" y="238.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.41%)</title><rect x="640" y="228" width="5" height="15" fill="rgb(229,98,10)"/><text x="643.00" y="238.50"></text></g><g><title>0x7f0e1982412f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.86%)</title><rect x="621" y="196" width="34" height="15" fill="rgb(242,147,25)"/><text x="624.00" y="206.50">0x..</text></g><g><title>array_arange (multiarraymodule.c) (7 samples, 2.86%)</title><rect x="621" y="212" width="34" height="15" fill="rgb(235,113,44)"/><text x="624.00" y="222.50">ar..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.82%)</title><rect x="645" y="228" width="10" height="15" fill="rgb(224,113,50)"/><text x="648.00" y="238.50"></text></g><g><title>0x7f0e1980bf60 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="655" y="228" width="5" height="15" fill="rgb(209,83,53)"/><text x="658.00" y="238.50"></text></g><g><title>0x7f0e19824237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="655" y="196" width="10" height="15" fill="rgb(218,63,15)"/><text x="658.00" y="206.50"></text></g><g><title>0x7f0e1980ece3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="655" y="212" width="10" height="15" fill="rgb(210,43,8)"/><text x="658.00" y="222.50"></text></g><g><title>0x7f0e3ee13130 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="660" y="228" width="5" height="15" fill="rgb(243,113,10)"/><text x="663.00" y="238.50"></text></g><g><title>0x7f0e198242b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="665" y="196" width="4" height="15" fill="rgb(248,71,7)"/><text x="668.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="665" y="212" width="4" height="15" fill="rgb(242,122,44)"/><text x="668.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="665" y="228" width="4" height="15" fill="rgb(219,78,33)"/><text x="668.00" y="238.50"></text></g><g><title>0x7f0e3ed36ff7 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="665" y="244" width="4" height="15" fill="rgb(231,126,38)"/><text x="668.00" y="254.50"></text></g><g><title>0x7f0e198243f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="669" y="196" width="5" height="15" fill="rgb(207,40,0)"/><text x="672.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.41%)</title><rect x="674" y="228" width="5" height="15" fill="rgb(247,91,29)"/><text x="677.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.82%)</title><rect x="679" y="228" width="10" height="15" fill="rgb(209,54,31)"/><text x="682.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.82%)</title><rect x="679" y="244" width="10" height="15" fill="rgb(206,124,20)"/><text x="682.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.82%)</title><rect x="679" y="260" width="10" height="15" fill="rgb(224,118,37)"/><text x="682.00" y="270.50"></text></g><g><title>0x7f0e1982446c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.63%)</title><rect x="674" y="196" width="19" height="15" fill="rgb(212,10,38)"/><text x="677.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (4 samples, 1.63%)</title><rect x="674" y="212" width="19" height="15" fill="rgb(207,216,29)"/><text x="677.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="689" y="228" width="4" height="15" fill="rgb(239,141,26)"/><text x="692.00" y="238.50"></text></g><g><title>0x7f0e1980de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="693" y="212" width="10" height="15" fill="rgb(226,45,50)"/><text x="696.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="698" y="228" width="5" height="15" fill="rgb(249,67,45)"/><text x="701.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="698" y="244" width="5" height="15" fill="rgb(234,66,21)"/><text x="701.00" y="254.50"></text></g><g><title>0x7f0e19824528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.22%)</title><rect x="693" y="196" width="15" height="15" fill="rgb(213,151,51)"/><text x="696.00" y="206.50"></text></g><g><title>0x7f0e1980df13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="703" y="212" width="5" height="15" fill="rgb(225,94,28)"/><text x="706.00" y="222.50"></text></g><g><title>0x7f0e1980d33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="703" y="228" width="5" height="15" fill="rgb(208,165,4)"/><text x="706.00" y="238.50"></text></g><g><title>0x7f0e1980cc38 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="703" y="244" width="5" height="15" fill="rgb(218,64,38)"/><text x="706.00" y="254.50"></text></g><g><title>0x7f0e3ef07ba0 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="718" y="260" width="4" height="15" fill="rgb(213,47,13)"/><text x="721.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.82%)</title><rect x="718" y="244" width="9" height="15" fill="rgb(209,133,36)"/><text x="721.00" y="254.50"></text></g><g><title>0x7f0e3ef07ba5 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="722" y="260" width="5" height="15" fill="rgb(248,32,13)"/><text x="725.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="727" y="244" width="5" height="15" fill="rgb(230,37,25)"/><text x="730.00" y="254.50"></text></g><g><title>0x7f0e3ed3707f (libc-2.29.so) (1 samples, 0.41%)</title><rect x="727" y="260" width="5" height="15" fill="rgb(242,121,9)"/><text x="730.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="732" y="260" width="5" height="15" fill="rgb(220,62,48)"/><text x="735.00" y="270.50"></text></g><g><title>0x7f0e19824553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.86%)</title><rect x="708" y="196" width="34" height="15" fill="rgb(206,154,12)"/><text x="711.00" y="206.50">0x..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.86%)</title><rect x="708" y="212" width="34" height="15" fill="rgb(236,100,13)"/><text x="711.00" y="222.50">co..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.86%)</title><rect x="708" y="228" width="34" height="15" fill="rgb(229,170,54)"/><text x="711.00" y="238.50">sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="732" y="244" width="10" height="15" fill="rgb(207,2,41)"/><text x="735.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="737" y="260" width="5" height="15" fill="rgb(212,111,14)"/><text x="740.00" y="270.50"></text></g><g><title>0x7f0e1982455e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="742" y="196" width="4" height="15" fill="rgb(237,201,50)"/><text x="745.00" y="206.50"></text></g><g><title>0x7f0e198247b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="746" y="196" width="5" height="15" fill="rgb(254,202,41)"/><text x="749.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="746" y="212" width="5" height="15" fill="rgb(236,132,21)"/><text x="749.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="746" y="228" width="5" height="15" fill="rgb(227,176,21)"/><text x="749.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="746" y="244" width="5" height="15" fill="rgb(220,12,49)"/><text x="749.00" y="254.50"></text></g><g><title>0x7f0e198263fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (35 samples, 14.29%)</title><rect x="587" y="180" width="169" height="15" fill="rgb(235,109,50)"/><text x="590.00" y="190.50">0x7f0e198263fd (sklea..</text></g><g><title>0x7f0e19825d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="751" y="196" width="5" height="15" fill="rgb(252,4,37)"/><text x="754.00" y="206.50"></text></g><g><title>0x7f0e1980d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="751" y="212" width="5" height="15" fill="rgb(242,62,44)"/><text x="754.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="751" y="228" width="5" height="15" fill="rgb(239,103,35)"/><text x="754.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="751" y="244" width="5" height="15" fill="rgb(229,73,13)"/><text x="754.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="751" y="260" width="5" height="15" fill="rgb(248,156,25)"/><text x="754.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.41%)</title><rect x="751" y="276" width="5" height="15" fill="rgb(242,121,39)"/><text x="754.00" y="286.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (41 samples, 16.73%)</title><rect x="563" y="164" width="198" height="15" fill="rgb(231,56,17)"/><text x="566.00" y="174.50">_dense_predict_proba (skl..</text></g><g><title>0x7f0e198271cf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="756" y="180" width="5" height="15" fill="rgb(233,148,23)"/><text x="759.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.41%)</title><rect x="828" y="196" width="5" height="15" fill="rgb(216,21,42)"/><text x="831.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.41%)</title><rect x="833" y="196" width="5" height="15" fill="rgb(241,157,23)"/><text x="836.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (5 samples, 2.04%)</title><rect x="838" y="196" width="24" height="15" fill="rgb(254,189,34)"/><text x="841.00" y="206.50">_..</text></g><g><title>__init__ (warnings.py) (4 samples, 1.63%)</title><rect x="862" y="196" width="19" height="15" fill="rgb(228,197,40)"/><text x="865.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="905" y="212" width="10" height="15" fill="rgb(220,169,47)"/><text x="908.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 3.67%)</title><rect x="881" y="196" width="44" height="15" fill="rgb(245,206,8)"/><text x="884.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.82%)</title><rect x="915" y="212" width="10" height="15" fill="rgb(229,145,40)"/><text x="918.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.41%)</title><rect x="925" y="196" width="4" height="15" fill="rgb(219,158,51)"/><text x="928.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.82%)</title><rect x="954" y="212" width="9" height="15" fill="rgb(216,94,20)"/><text x="957.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 3.67%)</title><rect x="929" y="196" width="44" height="15" fill="rgb(245,134,24)"/><text x="932.00" y="206.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.82%)</title><rect x="963" y="212" width="10" height="15" fill="rgb(229,151,32)"/><text x="966.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.41%)</title><rect x="968" y="228" width="5" height="15" fill="rgb(230,67,28)"/><text x="971.00" y="238.50"></text></g><g><title>0x7f0e3df58dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="973" y="212" width="5" height="15" fill="rgb(223,27,18)"/><text x="976.00" y="222.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.41%)</title><rect x="978" y="244" width="4" height="15" fill="rgb(206,150,49)"/><text x="981.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 1.22%)</title><rect x="973" y="196" width="14" height="15" fill="rgb(238,144,24)"/><text x="976.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.82%)</title><rect x="978" y="212" width="9" height="15" fill="rgb(211,98,37)"/><text x="981.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.82%)</title><rect x="978" y="228" width="9" height="15" fill="rgb(249,198,0)"/><text x="981.00" y="238.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.41%)</title><rect x="982" y="244" width="5" height="15" fill="rgb(254,221,9)"/><text x="985.00" y="254.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.41%)</title><rect x="982" y="260" width="5" height="15" fill="rgb(227,26,42)"/><text x="985.00" y="270.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.41%)</title><rect x="1002" y="260" width="4" height="15" fill="rgb(234,40,46)"/><text x="1005.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c) (2 samples, 0.82%)</title><rect x="1006" y="292" width="10" height="15" fill="rgb(246,37,20)"/><text x="1009.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.82%)</title><rect x="1006" y="308" width="10" height="15" fill="rgb(244,172,23)"/><text x="1009.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.41%)</title><rect x="1011" y="324" width="5" height="15" fill="rgb(230,169,40)"/><text x="1014.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.41%)</title><rect x="1011" y="340" width="5" height="15" fill="rgb(212,2,11)"/><text x="1014.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.22%)</title><rect x="1006" y="276" width="15" height="15" fill="rgb(254,61,45)"/><text x="1009.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.41%)</title><rect x="1016" y="292" width="5" height="15" fill="rgb(244,81,30)"/><text x="1019.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (8 samples, 3.27%)</title><rect x="987" y="196" width="39" height="15" fill="rgb(236,30,18)"/><text x="990.00" y="206.50">asa..</text></g><g><title>_array_fromobject (multiarraymodule.c) (8 samples, 3.27%)</title><rect x="987" y="212" width="39" height="15" fill="rgb(234,190,51)"/><text x="990.00" y="222.50">_ar..</text></g><g><title>PyArray_CheckFromAny (ctors.c) (6 samples, 2.45%)</title><rect x="997" y="228" width="29" height="15" fill="rgb(246,144,16)"/><text x="1000.00" y="238.50">Py..</text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 2.04%)</title><rect x="1002" y="244" width="24" height="15" fill="rgb(221,34,16)"/><text x="1005.00" y="254.50">P..</text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 1.63%)</title><rect x="1006" y="260" width="20" height="15" fill="rgb(253,39,37)"/><text x="1009.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.41%)</title><rect x="1021" y="276" width="5" height="15" fill="rgb(205,167,5)"/><text x="1024.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.41%)</title><rect x="1021" y="292" width="5" height="15" fill="rgb(225,151,48)"/><text x="1024.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.41%)</title><rect x="1021" y="308" width="5" height="15" fill="rgb(210,164,9)"/><text x="1024.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="1021" y="324" width="5" height="15" fill="rgb(241,114,5)"/><text x="1024.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="1021" y="340" width="5" height="15" fill="rgb(227,189,39)"/><text x="1024.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (63 samples, 25.71%)</title><rect x="770" y="180" width="304" height="15" fill="rgb(243,157,14)"/><text x="773.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (10 samples, 4.08%)</title><rect x="1026" y="196" width="48" height="15" fill="rgb(236,73,12)"/><text x="1029.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py) (8 samples, 3.27%)</title><rect x="1035" y="212" width="39" height="15" fill="rgb(249,185,52)"/><text x="1038.00" y="222.50">_ad..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.41%)</title><rect x="1069" y="228" width="5" height="15" fill="rgb(212,32,43)"/><text x="1072.00" y="238.50"></text></g><g><title>0x7f0e3ed5612f (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1132" y="212" width="5" height="15" fill="rgb(212,115,4)"/><text x="1135.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.63%)</title><rect x="1137" y="212" width="19" height="15" fill="rgb(205,57,13)"/><text x="1140.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (18 samples, 7.35%)</title><rect x="1079" y="196" width="86" height="15" fill="rgb(218,197,34)"/><text x="1082.00" y="206.50">&lt;listcomp&gt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.82%)</title><rect x="1156" y="212" width="9" height="15" fill="rgb(209,106,44)"/><text x="1159.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (126 samples, 51.43%)</title><rect x="563" y="148" width="607" height="15" fill="rgb(250,175,53)"/><text x="566.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (85 samples, 34.69%)</title><rect x="761" y="164" width="409" height="15" fill="rgb(229,5,10)"/><text x="764.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 8.16%)</title><rect x="1074" y="180" width="96" height="15" fill="rgb(206,138,13)"/><text x="1077.00" y="190.50">check_is_fi..</text></g><g><title>isclass (inspect.py) (1 samples, 0.41%)</title><rect x="1165" y="196" width="5" height="15" fill="rgb(209,43,42)"/><text x="1168.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.82%)</title><rect x="1170" y="148" width="10" height="15" fill="rgb(253,141,13)"/><text x="1173.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.82%)</title><rect x="1170" y="164" width="10" height="15" fill="rgb(233,205,31)"/><text x="1173.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.82%)</title><rect x="1170" y="180" width="10" height="15" fill="rgb(251,184,22)"/><text x="1173.00" y="190.50"></text></g><g><title>all (245 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,139,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (245 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(238,75,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (132 samples, 53.88%)</title><rect x="554" y="68" width="636" height="15" fill="rgb(240,147,33)"/><text x="557.00" y="78.50">profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (132 samples, 53.88%)</title><rect x="554" y="84" width="636" height="15" fill="rgb(205,80,52)"/><text x="557.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py) (132 samples, 53.88%)</title><rect x="554" y="100" width="636" height="15" fill="rgb(251,109,17)"/><text x="557.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 53.47%)</title><rect x="559" y="116" width="631" height="15" fill="rgb(234,92,2)"/><text x="562.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 53.06%)</title><rect x="563" y="132" width="627" height="15" fill="rgb(240,111,42)"/><text x="566.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (2 samples, 0.82%)</title><rect x="1180" y="148" width="10" height="15" fill="rgb(241,114,20)"/><text x="1183.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (1 samples, 0.41%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(249,199,21)"/><text x="1188.00" y="174.50"></text></g></g></svg>