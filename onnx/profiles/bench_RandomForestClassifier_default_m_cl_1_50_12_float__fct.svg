<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(217,115,3)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(208,141,25)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(231,79,5)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(235,212,11)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(219,194,26)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(221,104,37)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(221,184,53)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(224,193,0)"/><text x="16.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(212,147,2)"/><text x="16.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.34%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(227,38,34)"/><text x="16.00" y="1022.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(247,170,45)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(226,178,13)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(213,100,19)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(210,156,54)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(248,226,3)"/><text x="20.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.35%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(246,195,7)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.35%)</title><rect x="10" y="852" width="15" height="15" fill="rgb(210,46,16)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="17" y="868" width="8" height="15" fill="rgb(217,10,40)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="17" y="884" width="8" height="15" fill="rgb(221,203,23)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(237,129,20)"/><text x="24.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(221,111,40)"/><text x="24.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(207,150,46)"/><text x="24.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(220,178,14)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(235,49,52)"/><text x="24.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(239,173,41)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.69%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(225,185,5)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(217,110,19)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(215,45,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(229,227,49)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(246,34,52)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(206,56,2)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.69%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(239,149,38)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(232,213,23)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(246,20,36)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(215,63,46)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(233,73,54)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(244,214,37)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.69%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(239,199,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(226,182,1)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(254,65,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(230,172,12)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(233,226,43)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(232,145,14)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.69%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(206,183,44)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(241,62,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(242,24,36)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(234,77,43)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(252,64,14)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(244,77,34)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(231,55,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(235,83,40)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(241,216,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.69%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(208,114,16)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(241,224,35)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(224,32,44)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(238,58,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(227,97,0)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(229,9,38)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.69%)</title><rect x="10" y="820" width="19" height="15" fill="rgb(251,161,29)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(216,122,48)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(243,150,19)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(215,209,14)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(232,140,49)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(242,164,40)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.34%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(243,178,6)"/><text x="28.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(219,48,53)"/><text x="28.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(230,5,50)"/><text x="28.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(240,42,34)"/><text x="28.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(218,148,7)"/><text x="28.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(239,57,18)"/><text x="28.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(214,158,54)"/><text x="28.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(225,110,51)"/><text x="28.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(205,175,10)"/><text x="28.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(211,134,22)"/><text x="28.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(235,145,51)"/><text x="28.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(216,133,49)"/><text x="28.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(236,187,13)"/><text x="28.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(217,45,51)"/><text x="28.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="196" width="23" height="15" fill="rgb(212,96,9)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="212" width="23" height="15" fill="rgb(221,65,25)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="228" width="23" height="15" fill="rgb(247,90,8)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="244" width="23" height="15" fill="rgb(228,223,11)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="10" y="260" width="23" height="15" fill="rgb(224,214,2)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="10" y="276" width="23" height="15" fill="rgb(212,217,12)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="292" width="4" height="15" fill="rgb(237,224,51)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="308" width="4" height="15" fill="rgb(243,177,34)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="324" width="4" height="15" fill="rgb(244,96,52)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="340" width="4" height="15" fill="rgb(224,174,11)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="356" width="4" height="15" fill="rgb(243,95,27)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="372" width="4" height="15" fill="rgb(246,43,49)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.34%)</title><rect x="29" y="388" width="4" height="15" fill="rgb(252,169,13)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="404" width="4" height="15" fill="rgb(209,155,41)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="420" width="4" height="15" fill="rgb(220,70,15)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="436" width="4" height="15" fill="rgb(248,181,38)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="452" width="4" height="15" fill="rgb(247,136,13)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="468" width="4" height="15" fill="rgb(228,182,38)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="484" width="4" height="15" fill="rgb(254,152,50)"/><text x="32.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="500" width="4" height="15" fill="rgb(209,50,49)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="516" width="4" height="15" fill="rgb(251,8,24)"/><text x="32.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="532" width="4" height="15" fill="rgb(210,182,40)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="548" width="4" height="15" fill="rgb(241,189,27)"/><text x="32.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="564" width="4" height="15" fill="rgb(241,80,11)"/><text x="32.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="580" width="4" height="15" fill="rgb(250,4,51)"/><text x="32.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="596" width="4" height="15" fill="rgb(225,107,29)"/><text x="32.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.34%)</title><rect x="29" y="612" width="4" height="15" fill="rgb(236,107,52)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="628" width="4" height="15" fill="rgb(251,4,37)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="644" width="4" height="15" fill="rgb(247,201,52)"/><text x="32.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="660" width="4" height="15" fill="rgb(212,73,14)"/><text x="32.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="676" width="4" height="15" fill="rgb(236,186,9)"/><text x="32.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="692" width="4" height="15" fill="rgb(230,102,29)"/><text x="32.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="708" width="4" height="15" fill="rgb(219,155,10)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="724" width="4" height="15" fill="rgb(212,107,4)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="740" width="4" height="15" fill="rgb(244,135,3)"/><text x="32.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="756" width="4" height="15" fill="rgb(246,224,50)"/><text x="32.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="772" width="4" height="15" fill="rgb(208,51,41)"/><text x="32.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="788" width="4" height="15" fill="rgb(228,16,43)"/><text x="32.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="29" y="804" width="4" height="15" fill="rgb(216,177,21)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="820" width="4" height="15" fill="rgb(229,102,32)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="836" width="4" height="15" fill="rgb(241,199,25)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="852" width="4" height="15" fill="rgb(218,51,8)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="868" width="4" height="15" fill="rgb(228,141,42)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="884" width="4" height="15" fill="rgb(238,75,13)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="29" y="900" width="4" height="15" fill="rgb(212,165,30)"/><text x="32.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(219,135,29)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(235,141,5)"/><text x="32.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(210,120,22)"/><text x="32.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(211,122,14)"/><text x="32.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(243,90,40)"/><text x="32.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.34%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(206,71,2)"/><text x="32.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1012" width="4" height="15" fill="rgb(253,101,9)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1028" width="4" height="15" fill="rgb(205,197,30)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1044" width="4" height="15" fill="rgb(213,173,16)"/><text x="32.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1060" width="4" height="15" fill="rgb(243,31,25)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1076" width="4" height="15" fill="rgb(229,229,31)"/><text x="32.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1092" width="4" height="15" fill="rgb(206,132,37)"/><text x="32.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1108" width="4" height="15" fill="rgb(212,194,49)"/><text x="32.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(216,126,5)"/><text x="32.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(232,43,41)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(248,33,26)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(228,229,49)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(221,50,52)"/><text x="32.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(253,168,46)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(244,196,38)"/><text x="32.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1236" width="4" height="15" fill="rgb(235,3,0)"/><text x="32.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1252" width="4" height="15" fill="rgb(237,35,51)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1268" width="4" height="15" fill="rgb(254,210,52)"/><text x="32.00" y="1278.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="1284" width="4" height="15" fill="rgb(226,15,21)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1300" width="4" height="15" fill="rgb(217,155,11)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1316" width="4" height="15" fill="rgb(215,163,17)"/><text x="32.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1332" width="4" height="15" fill="rgb(228,29,37)"/><text x="32.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1348" width="4" height="15" fill="rgb(241,75,0)"/><text x="32.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1364" width="4" height="15" fill="rgb(207,79,43)"/><text x="32.00" y="1374.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/context.py) (1 samples, 0.34%)</title><rect x="29" y="1380" width="4" height="15" fill="rgb(228,173,27)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1396" width="4" height="15" fill="rgb(245,45,43)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1412" width="4" height="15" fill="rgb(208,144,17)"/><text x="32.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1428" width="4" height="15" fill="rgb(217,124,6)"/><text x="32.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1444" width="4" height="15" fill="rgb(211,135,15)"/><text x="32.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1460" width="4" height="15" fill="rgb(232,60,7)"/><text x="32.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/process.py) (1 samples, 0.34%)</title><rect x="29" y="1476" width="4" height="15" fill="rgb(216,209,8)"/><text x="32.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1492" width="4" height="15" fill="rgb(217,48,1)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1508" width="4" height="15" fill="rgb(225,95,23)"/><text x="32.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1524" width="4" height="15" fill="rgb(223,181,54)"/><text x="32.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(231,158,52)"/><text x="32.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(209,138,21)"/><text x="32.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat.py) (1 samples, 0.34%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(241,78,27)"/><text x="32.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1588" width="4" height="15" fill="rgb(211,8,9)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1604" width="4" height="15" fill="rgb(225,88,5)"/><text x="32.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1620" width="4" height="15" fill="rgb(247,83,20)"/><text x="32.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(221,100,13)"/><text x="32.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(252,198,13)"/><text x="32.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat_posix.py) (1 samples, 0.34%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(232,84,33)"/><text x="32.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1684" width="4" height="15" fill="rgb(242,6,1)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1700" width="4" height="15" fill="rgb(249,75,45)"/><text x="32.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="1716" width="4" height="15" fill="rgb(224,215,21)"/><text x="32.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1732" width="4" height="15" fill="rgb(217,57,34)"/><text x="32.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1748" width="4" height="15" fill="rgb(212,172,27)"/><text x="32.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="1764" width="4" height="15" fill="rgb(220,20,8)"/><text x="32.00" y="1774.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="29" y="1780" width="4" height="15" fill="rgb(238,83,25)"/><text x="32.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="1332" width="4" height="15" fill="rgb(210,64,49)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1348" width="4" height="15" fill="rgb(212,214,14)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.34%)</title><rect x="33" y="1364" width="4" height="15" fill="rgb(229,73,33)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1380" width="4" height="15" fill="rgb(251,27,6)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1396" width="4" height="15" fill="rgb(207,15,42)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1412" width="4" height="15" fill="rgb(254,145,13)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="1428" width="4" height="15" fill="rgb(205,166,39)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1444" width="4" height="15" fill="rgb(210,179,46)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="33" y="1460" width="4" height="15" fill="rgb(233,97,19)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="33" y="1476" width="4" height="15" fill="rgb(218,16,32)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="33" y="1492" width="4" height="15" fill="rgb(244,164,30)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="33" y="1508" width="4" height="15" fill="rgb(250,201,7)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.34%)</title><rect x="33" y="1524" width="4" height="15" fill="rgb(213,187,47)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="33" y="1540" width="4" height="15" fill="rgb(248,36,35)"/><text x="36.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="33" y="1556" width="4" height="15" fill="rgb(214,219,14)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.34%)</title><rect x="33" y="1572" width="4" height="15" fill="rgb(210,11,52)"/><text x="36.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="484" width="8" height="15" fill="rgb(209,155,35)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="500" width="8" height="15" fill="rgb(241,2,42)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="516" width="8" height="15" fill="rgb(253,140,38)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="532" width="8" height="15" fill="rgb(208,105,20)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="548" width="8" height="15" fill="rgb(206,169,24)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="564" width="8" height="15" fill="rgb(219,115,14)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.68%)</title><rect x="33" y="580" width="8" height="15" fill="rgb(213,47,52)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="596" width="8" height="15" fill="rgb(248,58,3)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="612" width="8" height="15" fill="rgb(251,82,15)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="628" width="8" height="15" fill="rgb(225,9,1)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="644" width="8" height="15" fill="rgb(229,13,29)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="660" width="8" height="15" fill="rgb(220,161,12)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.68%)</title><rect x="33" y="676" width="8" height="15" fill="rgb(215,115,11)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="692" width="8" height="15" fill="rgb(216,50,30)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="708" width="8" height="15" fill="rgb(214,106,49)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="724" width="8" height="15" fill="rgb(215,156,4)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="740" width="8" height="15" fill="rgb(215,79,12)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="756" width="8" height="15" fill="rgb(212,94,51)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.68%)</title><rect x="33" y="772" width="8" height="15" fill="rgb(212,154,8)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="788" width="8" height="15" fill="rgb(238,133,49)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="804" width="8" height="15" fill="rgb(252,215,46)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="820" width="8" height="15" fill="rgb(206,209,20)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="836" width="8" height="15" fill="rgb(221,184,21)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="852" width="8" height="15" fill="rgb(253,116,38)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.68%)</title><rect x="33" y="868" width="8" height="15" fill="rgb(246,20,21)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="884" width="8" height="15" fill="rgb(223,140,50)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="900" width="8" height="15" fill="rgb(241,81,17)"/><text x="36.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="916" width="8" height="15" fill="rgb(210,116,44)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="932" width="8" height="15" fill="rgb(239,30,40)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="948" width="8" height="15" fill="rgb(225,87,18)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="964" width="8" height="15" fill="rgb(252,123,3)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="980" width="8" height="15" fill="rgb(228,178,15)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="996" width="8" height="15" fill="rgb(242,20,46)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.68%)</title><rect x="33" y="1012" width="8" height="15" fill="rgb(215,37,7)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1028" width="8" height="15" fill="rgb(235,121,24)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1044" width="8" height="15" fill="rgb(249,31,10)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1060" width="8" height="15" fill="rgb(233,190,13)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1076" width="8" height="15" fill="rgb(207,19,4)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1092" width="8" height="15" fill="rgb(215,130,53)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.68%)</title><rect x="33" y="1108" width="8" height="15" fill="rgb(244,151,35)"/><text x="36.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1124" width="8" height="15" fill="rgb(231,134,21)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1140" width="8" height="15" fill="rgb(239,2,40)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1156" width="8" height="15" fill="rgb(206,208,49)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1172" width="8" height="15" fill="rgb(242,33,51)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1188" width="8" height="15" fill="rgb(214,76,32)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="33" y="1204" width="8" height="15" fill="rgb(218,142,2)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1220" width="8" height="15" fill="rgb(235,104,20)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.68%)</title><rect x="33" y="1236" width="8" height="15" fill="rgb(216,188,2)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1252" width="8" height="15" fill="rgb(235,115,32)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1268" width="8" height="15" fill="rgb(209,105,24)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1284" width="8" height="15" fill="rgb(251,106,15)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1300" width="8" height="15" fill="rgb(240,10,29)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="33" y="1316" width="8" height="15" fill="rgb(244,64,26)"/><text x="36.00" y="1326.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1332" width="4" height="15" fill="rgb(245,85,54)"/><text x="40.00" y="1342.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1348" width="4" height="15" fill="rgb(251,81,15)"/><text x="40.00" y="1358.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1364" width="4" height="15" fill="rgb(221,63,19)"/><text x="40.00" y="1374.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1380" width="4" height="15" fill="rgb(232,33,0)"/><text x="40.00" y="1390.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1396" width="4" height="15" fill="rgb(216,142,18)"/><text x="40.00" y="1406.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1412" width="4" height="15" fill="rgb(249,62,12)"/><text x="40.00" y="1422.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1428" width="4" height="15" fill="rgb(246,9,9)"/><text x="40.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="772" width="4" height="15" fill="rgb(246,188,26)"/><text x="44.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="788" width="4" height="15" fill="rgb(250,223,4)"/><text x="44.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="804" width="4" height="15" fill="rgb(243,159,46)"/><text x="44.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="820" width="4" height="15" fill="rgb(209,125,29)"/><text x="44.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="836" width="4" height="15" fill="rgb(223,84,2)"/><text x="44.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="852" width="4" height="15" fill="rgb(243,178,45)"/><text x="44.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.34%)</title><rect x="41" y="868" width="4" height="15" fill="rgb(219,226,31)"/><text x="44.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="884" width="4" height="15" fill="rgb(241,44,9)"/><text x="44.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(212,58,7)"/><text x="44.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(239,207,16)"/><text x="44.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(245,179,20)"/><text x="44.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(224,199,14)"/><text x="44.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/integer.py) (1 samples, 0.34%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(209,194,31)"/><text x="44.00" y="974.50"></text></g><g><title>_add_arithmetic_ops (pandas/core/arrays/base.py) (1 samples, 0.34%)</title><rect x="41" y="980" width="4" height="15" fill="rgb(232,37,5)"/><text x="44.00" y="990.50"></text></g><g><title>_create_arithmetic_method (pandas/core/arrays/integer.py) (1 samples, 0.34%)</title><rect x="41" y="996" width="4" height="15" fill="rgb(241,194,53)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.34%)</title><rect x="45" y="916" width="4" height="15" fill="rgb(231,80,17)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="932" width="4" height="15" fill="rgb(224,64,2)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="948" width="4" height="15" fill="rgb(215,137,38)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(214,15,24)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(225,171,4)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(237,73,46)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.34%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(213,126,12)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(235,191,7)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(218,181,47)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1060" width="4" height="15" fill="rgb(223,126,25)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1076" width="4" height="15" fill="rgb(253,23,7)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1092" width="4" height="15" fill="rgb(232,2,25)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.34%)</title><rect x="45" y="1108" width="4" height="15" fill="rgb(241,219,0)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(206,37,6)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(249,146,47)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(232,124,20)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(236,147,39)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(242,187,50)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.34%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(236,170,52)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(223,104,9)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(214,131,3)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(250,40,6)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(248,72,50)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(220,107,6)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.34%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(238,68,7)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(243,200,5)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(233,42,7)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(224,184,5)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(254,121,48)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(236,29,22)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(224,31,3)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(215,24,7)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1428" width="4" height="15" fill="rgb(249,121,10)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1444" width="4" height="15" fill="rgb(205,119,2)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1460" width="4" height="15" fill="rgb(236,224,49)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1476" width="4" height="15" fill="rgb(243,2,26)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.34%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(247,71,8)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(246,110,27)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1524" width="4" height="15" fill="rgb(234,137,19)"/><text x="48.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1540" width="4" height="15" fill="rgb(253,0,31)"/><text x="48.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1556" width="4" height="15" fill="rgb(236,54,9)"/><text x="48.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1572" width="4" height="15" fill="rgb(216,59,5)"/><text x="48.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.34%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(251,124,6)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1604" width="4" height="15" fill="rgb(207,128,42)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1620" width="4" height="15" fill="rgb(205,81,36)"/><text x="48.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1636" width="4" height="15" fill="rgb(210,41,34)"/><text x="48.00" y="1646.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1652" width="4" height="15" fill="rgb(243,67,15)"/><text x="48.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.69%)</title><rect x="33" y="340" width="20" height="15" fill="rgb(215,198,11)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="356" width="20" height="15" fill="rgb(205,103,29)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="372" width="20" height="15" fill="rgb(222,81,52)"/><text x="36.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="388" width="20" height="15" fill="rgb(218,197,15)"/><text x="36.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.69%)</title><rect x="33" y="404" width="20" height="15" fill="rgb(251,184,3)"/><text x="36.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="420" width="20" height="15" fill="rgb(237,46,41)"/><text x="36.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.69%)</title><rect x="33" y="436" width="20" height="15" fill="rgb(248,80,11)"/><text x="36.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="452" width="20" height="15" fill="rgb(248,197,20)"/><text x="36.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.69%)</title><rect x="33" y="468" width="20" height="15" fill="rgb(222,180,54)"/><text x="36.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="484" width="12" height="15" fill="rgb(239,210,32)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="41" y="500" width="12" height="15" fill="rgb(222,114,51)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="516" width="12" height="15" fill="rgb(218,104,3)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.01%)</title><rect x="41" y="532" width="12" height="15" fill="rgb(240,114,17)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="548" width="12" height="15" fill="rgb(234,204,53)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="564" width="12" height="15" fill="rgb(245,97,14)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="580" width="12" height="15" fill="rgb(232,139,44)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="41" y="596" width="12" height="15" fill="rgb(243,123,40)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="612" width="12" height="15" fill="rgb(239,198,1)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.01%)</title><rect x="41" y="628" width="12" height="15" fill="rgb(219,192,9)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="644" width="12" height="15" fill="rgb(238,15,20)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="660" width="12" height="15" fill="rgb(206,12,8)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="676" width="12" height="15" fill="rgb(242,145,46)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="41" y="692" width="12" height="15" fill="rgb(218,200,31)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="708" width="12" height="15" fill="rgb(244,46,15)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.01%)</title><rect x="41" y="724" width="12" height="15" fill="rgb(236,185,25)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="740" width="12" height="15" fill="rgb(240,35,52)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="756" width="12" height="15" fill="rgb(220,51,2)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="772" width="8" height="15" fill="rgb(207,175,15)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="45" y="788" width="8" height="15" fill="rgb(206,154,52)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="804" width="8" height="15" fill="rgb(213,208,18)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.68%)</title><rect x="45" y="820" width="8" height="15" fill="rgb(233,144,44)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="836" width="8" height="15" fill="rgb(244,22,18)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="852" width="8" height="15" fill="rgb(244,133,14)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="868" width="8" height="15" fill="rgb(233,61,54)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="45" y="884" width="8" height="15" fill="rgb(232,134,1)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="45" y="900" width="8" height="15" fill="rgb(212,153,28)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py) (1 samples, 0.34%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(206,160,2)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(222,114,38)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(221,70,27)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(211,9,31)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(215,52,5)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(225,173,7)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/ops.py) (1 samples, 0.34%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(205,113,38)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(220,192,34)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(238,121,15)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(212,220,53)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(213,99,27)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(242,225,1)"/><text x="52.00" y="1102.50"></text></g><g><title>0x7fe2d7c45b9f (?) (1 samples, 0.34%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(252,67,18)"/><text x="52.00" y="1118.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(215,15,34)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(206,228,35)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(251,190,46)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(250,149,16)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.05%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(206,198,13)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(254,65,0)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (12 samples, 4.05%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(238,60,14)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(246,114,4)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.05%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(222,145,35)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="196" width="24" height="15" fill="rgb(252,151,54)"/><text x="36.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="33" y="212" width="24" height="15" fill="rgb(236,213,40)"/><text x="36.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="228" width="24" height="15" fill="rgb(218,64,10)"/><text x="36.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 2.03%)</title><rect x="33" y="244" width="24" height="15" fill="rgb(245,127,22)"/><text x="36.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="260" width="24" height="15" fill="rgb(208,227,25)"/><text x="36.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="276" width="24" height="15" fill="rgb(207,180,4)"/><text x="36.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="292" width="24" height="15" fill="rgb(254,145,10)"/><text x="36.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.03%)</title><rect x="33" y="308" width="24" height="15" fill="rgb(225,28,50)"/><text x="36.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.03%)</title><rect x="33" y="324" width="24" height="15" fill="rgb(231,86,29)"/><text x="36.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.34%)</title><rect x="53" y="340" width="4" height="15" fill="rgb(236,153,35)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="356" width="4" height="15" fill="rgb(224,55,0)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="372" width="4" height="15" fill="rgb(236,83,33)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="388" width="4" height="15" fill="rgb(211,60,43)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="404" width="4" height="15" fill="rgb(224,182,7)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="420" width="4" height="15" fill="rgb(224,218,43)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="436" width="4" height="15" fill="rgb(253,151,54)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="452" width="4" height="15" fill="rgb(223,190,50)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="468" width="4" height="15" fill="rgb(212,109,48)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="484" width="4" height="15" fill="rgb(207,5,31)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="500" width="4" height="15" fill="rgb(205,54,48)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="516" width="4" height="15" fill="rgb(238,193,26)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="532" width="4" height="15" fill="rgb(230,50,38)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="548" width="4" height="15" fill="rgb(222,154,47)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="564" width="4" height="15" fill="rgb(224,34,5)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.34%)</title><rect x="53" y="580" width="4" height="15" fill="rgb(250,124,25)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="596" width="4" height="15" fill="rgb(249,89,53)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="612" width="4" height="15" fill="rgb(210,101,50)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="628" width="4" height="15" fill="rgb(206,75,42)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="644" width="4" height="15" fill="rgb(213,227,47)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="660" width="4" height="15" fill="rgb(247,73,39)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.34%)</title><rect x="53" y="676" width="4" height="15" fill="rgb(229,86,4)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="692" width="4" height="15" fill="rgb(212,195,2)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(228,59,13)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(229,3,4)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(220,218,22)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="756" width="4" height="15" fill="rgb(237,190,40)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="772" width="4" height="15" fill="rgb(223,65,32)"/><text x="56.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="788" width="4" height="15" fill="rgb(247,5,30)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="804" width="4" height="15" fill="rgb(242,105,42)"/><text x="56.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="820" width="4" height="15" fill="rgb(227,109,43)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="836" width="4" height="15" fill="rgb(230,188,35)"/><text x="56.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="852" width="4" height="15" fill="rgb(254,94,31)"/><text x="56.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="868" width="4" height="15" fill="rgb(232,187,25)"/><text x="56.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="884" width="4" height="15" fill="rgb(208,209,18)"/><text x="56.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.34%)</title><rect x="53" y="900" width="4" height="15" fill="rgb(229,79,29)"/><text x="56.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="916" width="4" height="15" fill="rgb(234,168,13)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="932" width="4" height="15" fill="rgb(207,192,50)"/><text x="56.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="948" width="4" height="15" fill="rgb(215,67,9)"/><text x="56.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="964" width="4" height="15" fill="rgb(223,64,50)"/><text x="56.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="980" width="4" height="15" fill="rgb(231,20,26)"/><text x="56.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="996" width="4" height="15" fill="rgb(248,228,21)"/><text x="56.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1012" width="4" height="15" fill="rgb(219,185,40)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1028" width="4" height="15" fill="rgb(238,137,51)"/><text x="56.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1044" width="4" height="15" fill="rgb(221,194,9)"/><text x="56.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1060" width="4" height="15" fill="rgb(215,58,2)"/><text x="56.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1076" width="4" height="15" fill="rgb(236,87,29)"/><text x="56.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.34%)</title><rect x="53" y="1092" width="4" height="15" fill="rgb(212,30,43)"/><text x="56.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(253,78,41)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(230,190,37)"/><text x="56.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(245,20,0)"/><text x="56.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(209,50,39)"/><text x="56.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(220,51,19)"/><text x="56.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py) (1 samples, 0.34%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(213,64,29)"/><text x="56.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(231,173,28)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(246,147,21)"/><text x="56.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(214,99,10)"/><text x="56.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(212,52,3)"/><text x="56.00" y="1262.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(219,142,42)"/><text x="56.00" y="1278.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1284" width="4" height="15" fill="rgb(232,142,15)"/><text x="56.00" y="1294.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (1 samples, 0.34%)</title><rect x="57" y="100" width="4" height="15" fill="rgb(249,172,48)"/><text x="60.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="57" y="116" width="4" height="15" fill="rgb(213,53,20)"/><text x="60.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="57" y="132" width="4" height="15" fill="rgb(234,114,6)"/><text x="60.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="57" y="148" width="4" height="15" fill="rgb(210,169,54)"/><text x="60.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="57" y="164" width="4" height="15" fill="rgb(248,13,50)"/><text x="60.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.34%)</title><rect x="57" y="180" width="4" height="15" fill="rgb(242,159,43)"/><text x="60.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py) (1 samples, 0.34%)</title><rect x="57" y="196" width="4" height="15" fill="rgb(232,215,5)"/><text x="60.00" y="206.50"></text></g><g><title>0x7fe2c9a9aff9 (?) (1 samples, 0.34%)</title><rect x="57" y="212" width="4" height="15" fill="rgb(227,190,7)"/><text x="60.00" y="222.50"></text></g><g><title>0x7fe2c9a95ef6 (?) (1 samples, 0.34%)</title><rect x="57" y="228" width="4" height="15" fill="rgb(250,57,16)"/><text x="60.00" y="238.50"></text></g><g><title>0x7fe2c9a8a962 (?) (1 samples, 0.34%)</title><rect x="57" y="244" width="4" height="15" fill="rgb(242,115,53)"/><text x="60.00" y="254.50"></text></g><g><title>0x7fe2c9abe7a7 (?) (1 samples, 0.34%)</title><rect x="57" y="260" width="4" height="15" fill="rgb(225,188,47)"/><text x="60.00" y="270.50"></text></g><g><title>0x7fe2c9abe379 (?) (1 samples, 0.34%)</title><rect x="57" y="276" width="4" height="15" fill="rgb(249,141,1)"/><text x="60.00" y="286.50"></text></g><g><title>0x7fe2c9f1c8b8 (?) (1 samples, 0.34%)</title><rect x="57" y="292" width="4" height="15" fill="rgb(220,194,37)"/><text x="60.00" y="302.50"></text></g><g><title>0x7fe2c9f1ac7f (?) (1 samples, 0.34%)</title><rect x="57" y="308" width="4" height="15" fill="rgb(252,78,36)"/><text x="60.00" y="318.50"></text></g><g><title>0x7fe2c9f2d99c (?) (1 samples, 0.34%)</title><rect x="57" y="324" width="4" height="15" fill="rgb(221,119,23)"/><text x="60.00" y="334.50"></text></g><g><title>0x7fe2c9c582c0 (?) (1 samples, 0.34%)</title><rect x="57" y="340" width="4" height="15" fill="rgb(207,204,12)"/><text x="60.00" y="350.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (2 samples, 0.68%)</title><rect x="57" y="68" width="8" height="15" fill="rgb(229,48,47)"/><text x="60.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (2 samples, 0.68%)</title><rect x="57" y="84" width="8" height="15" fill="rgb(214,15,5)"/><text x="60.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="61" y="100" width="4" height="15" fill="rgb(232,49,31)"/><text x="64.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="61" y="116" width="4" height="15" fill="rgb(221,203,38)"/><text x="64.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="61" y="132" width="4" height="15" fill="rgb(211,5,14)"/><text x="64.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.34%)</title><rect x="61" y="148" width="4" height="15" fill="rgb(207,187,5)"/><text x="64.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.34%)</title><rect x="61" y="164" width="4" height="15" fill="rgb(206,167,13)"/><text x="64.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.34%)</title><rect x="61" y="180" width="4" height="15" fill="rgb(254,163,38)"/><text x="64.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.34%)</title><rect x="61" y="196" width="4" height="15" fill="rgb(207,79,15)"/><text x="64.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.34%)</title><rect x="61" y="212" width="4" height="15" fill="rgb(216,204,26)"/><text x="64.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.34%)</title><rect x="61" y="228" width="4" height="15" fill="rgb(221,131,30)"/><text x="64.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.34%)</title><rect x="61" y="244" width="4" height="15" fill="rgb(251,197,47)"/><text x="64.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src) (1 samples, 0.34%)</title><rect x="61" y="260" width="4" height="15" fill="rgb(229,82,41)"/><text x="64.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src) (1 samples, 0.34%)</title><rect x="61" y="276" width="4" height="15" fill="rgb(218,122,42)"/><text x="64.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.34%)</title><rect x="61" y="292" width="4" height="15" fill="rgb(236,209,32)"/><text x="64.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.34%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(243,44,40)"/><text x="64.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.34%)</title><rect x="61" y="324" width="4" height="15" fill="rgb(217,107,11)"/><text x="64.00" y="334.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="61" y="340" width="4" height="15" fill="rgb(232,191,46)"/><text x="64.00" y="350.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="61" y="356" width="4" height="15" fill="rgb(205,133,12)"/><text x="64.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="61" y="372" width="4" height="15" fill="rgb(252,28,0)"/><text x="64.00" y="382.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.34%)</title><rect x="61" y="388" width="4" height="15" fill="rgb(242,124,9)"/><text x="64.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="61" y="404" width="4" height="15" fill="rgb(240,83,19)"/><text x="64.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="61" y="420" width="4" height="15" fill="rgb(217,84,22)"/><text x="64.00" y="430.50"></text></g><g><title>0x7fe2ca73a422 (?) (1 samples, 0.34%)</title><rect x="65" y="244" width="4" height="15" fill="rgb(242,138,35)"/><text x="68.00" y="254.50"></text></g><g><title>0x7fe2ca74089e (?) (1 samples, 0.34%)</title><rect x="65" y="260" width="4" height="15" fill="rgb(245,66,15)"/><text x="68.00" y="270.50"></text></g><g><title>0x7fe2ca74074f (?) (1 samples, 0.34%)</title><rect x="65" y="276" width="4" height="15" fill="rgb(206,45,0)"/><text x="68.00" y="286.50"></text></g><g><title>0x7fe2ca746a3a (?) (1 samples, 0.34%)</title><rect x="65" y="292" width="4" height="15" fill="rgb(211,212,2)"/><text x="68.00" y="302.50"></text></g><g><title>0x7fe2d3a62ab9 (?) (1 samples, 0.34%)</title><rect x="65" y="308" width="4" height="15" fill="rgb(215,216,30)"/><text x="68.00" y="318.50"></text></g><g><title>0x7fe2d3a63ead (?) (1 samples, 0.34%)</title><rect x="65" y="324" width="4" height="15" fill="rgb(230,77,42)"/><text x="68.00" y="334.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (2 samples, 0.68%)</title><rect x="65" y="100" width="8" height="15" fill="rgb(214,119,41)"/><text x="68.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.68%)</title><rect x="65" y="116" width="8" height="15" fill="rgb(211,179,21)"/><text x="68.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.68%)</title><rect x="65" y="132" width="8" height="15" fill="rgb(235,197,28)"/><text x="68.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.68%)</title><rect x="65" y="148" width="8" height="15" fill="rgb(223,221,15)"/><text x="68.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.68%)</title><rect x="65" y="164" width="8" height="15" fill="rgb(213,115,27)"/><text x="68.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.68%)</title><rect x="65" y="180" width="8" height="15" fill="rgb(223,136,3)"/><text x="68.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.68%)</title><rect x="65" y="196" width="8" height="15" fill="rgb(216,6,49)"/><text x="68.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.68%)</title><rect x="65" y="212" width="8" height="15" fill="rgb(243,167,25)"/><text x="68.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (2 samples, 0.68%)</title><rect x="65" y="228" width="8" height="15" fill="rgb(249,134,48)"/><text x="68.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (1 samples, 0.34%)</title><rect x="69" y="244" width="4" height="15" fill="rgb(210,117,28)"/><text x="72.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (1 samples, 0.34%)</title><rect x="69" y="260" width="4" height="15" fill="rgb(218,74,12)"/><text x="72.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (1 samples, 0.34%)</title><rect x="69" y="276" width="4" height="15" fill="rgb(250,221,1)"/><text x="72.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (1 samples, 0.34%)</title><rect x="69" y="292" width="4" height="15" fill="rgb(230,96,32)"/><text x="72.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (1 samples, 0.34%)</title><rect x="69" y="308" width="4" height="15" fill="rgb(252,119,35)"/><text x="72.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (1 samples, 0.34%)</title><rect x="69" y="324" width="4" height="15" fill="rgb(232,23,4)"/><text x="72.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (1 samples, 0.34%)</title><rect x="69" y="340" width="4" height="15" fill="rgb(242,15,10)"/><text x="72.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 0.34%)</title><rect x="69" y="356" width="4" height="15" fill="rgb(225,131,20)"/><text x="72.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 0.34%)</title><rect x="69" y="372" width="4" height="15" fill="rgb(245,161,5)"/><text x="72.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.34%)</title><rect x="69" y="388" width="4" height="15" fill="rgb(230,83,52)"/><text x="72.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.34%)</title><rect x="69" y="404" width="4" height="15" fill="rgb(215,146,43)"/><text x="72.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.34%)</title><rect x="69" y="420" width="4" height="15" fill="rgb(218,199,38)"/><text x="72.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (1 samples, 0.34%)</title><rect x="69" y="436" width="4" height="15" fill="rgb(233,19,16)"/><text x="72.00" y="446.50"></text></g><g><title>0x7fe2d3a62ab9 (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="69" y="452" width="4" height="15" fill="rgb(216,159,19)"/><text x="72.00" y="462.50"></text></g><g><title>0x7fe2d3a63eab (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="69" y="468" width="4" height="15" fill="rgb(233,108,42)"/><text x="72.00" y="478.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="73" y="132" width="4" height="15" fill="rgb(219,95,34)"/><text x="76.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="73" y="148" width="4" height="15" fill="rgb(236,69,20)"/><text x="76.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="73" y="164" width="4" height="15" fill="rgb(229,62,12)"/><text x="76.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="73" y="180" width="4" height="15" fill="rgb(234,224,22)"/><text x="76.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.34%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(242,177,6)"/><text x="76.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.34%)</title><rect x="73" y="212" width="4" height="15" fill="rgb(245,165,50)"/><text x="76.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.34%)</title><rect x="73" y="228" width="4" height="15" fill="rgb(249,116,38)"/><text x="76.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.34%)</title><rect x="73" y="244" width="4" height="15" fill="rgb(233,156,39)"/><text x="76.00" y="254.50"></text></g><g><title>_init (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.34%)</title><rect x="73" y="260" width="4" height="15" fill="rgb(236,153,39)"/><text x="76.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.34%)</title><rect x="73" y="276" width="4" height="15" fill="rgb(235,185,13)"/><text x="76.00" y="286.50"></text></g><g><title>_get_typed_attributes (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.34%)</title><rect x="73" y="292" width="4" height="15" fill="rgb(253,84,44)"/><text x="76.00" y="302.50"></text></g><g><title>_get_typed_class_attribute (mlprodict/onnxrt/ops_cpu/_op_helper.py) (1 samples, 0.34%)</title><rect x="73" y="308" width="4" height="15" fill="rgb(238,18,7)"/><text x="76.00" y="318.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (5 samples, 1.69%)</title><rect x="65" y="68" width="20" height="15" fill="rgb(216,21,25)"/><text x="68.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (5 samples, 1.69%)</title><rect x="65" y="84" width="20" height="15" fill="rgb(247,44,40)"/><text x="68.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="73" y="100" width="12" height="15" fill="rgb(243,45,46)"/><text x="76.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="73" y="116" width="12" height="15" fill="rgb(216,15,23)"/><text x="76.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.68%)</title><rect x="77" y="132" width="8" height="15" fill="rgb(232,180,21)"/><text x="80.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.68%)</title><rect x="77" y="148" width="8" height="15" fill="rgb(221,161,37)"/><text x="80.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.68%)</title><rect x="77" y="164" width="8" height="15" fill="rgb(214,102,36)"/><text x="80.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.68%)</title><rect x="77" y="180" width="8" height="15" fill="rgb(221,17,44)"/><text x="80.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (2 samples, 0.68%)</title><rect x="77" y="196" width="8" height="15" fill="rgb(231,118,11)"/><text x="80.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.68%)</title><rect x="77" y="212" width="8" height="15" fill="rgb(228,180,14)"/><text x="80.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.68%)</title><rect x="77" y="228" width="8" height="15" fill="rgb(221,30,39)"/><text x="80.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="77" y="244" width="8" height="15" fill="rgb(207,158,32)"/><text x="80.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.68%)</title><rect x="77" y="260" width="8" height="15" fill="rgb(211,177,5)"/><text x="80.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.68%)</title><rect x="77" y="276" width="8" height="15" fill="rgb(230,111,14)"/><text x="80.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.68%)</title><rect x="77" y="292" width="8" height="15" fill="rgb(210,159,30)"/><text x="80.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (2 samples, 0.68%)</title><rect x="77" y="308" width="8" height="15" fill="rgb(251,109,4)"/><text x="80.00" y="318.50"></text></g><g><title>update_wrapper (functools.py) (5 samples, 1.69%)</title><rect x="189" y="228" width="20" height="15" fill="rgb(222,143,5)"/><text x="192.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py) (10 samples, 3.38%)</title><rect x="177" y="212" width="40" height="15" fill="rgb(249,55,21)"/><text x="180.00" y="222.50">del..</text></g><g><title>wraps (functools.py) (2 samples, 0.68%)</title><rect x="209" y="228" width="8" height="15" fill="rgb(251,138,16)"/><text x="212.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (14 samples, 4.73%)</title><rect x="165" y="196" width="56" height="15" fill="rgb(228,56,49)"/><text x="168.00" y="206.50">&lt;gene..</text></g><g><title>delayed_function (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="217" y="212" width="4" height="15" fill="rgb(252,30,31)"/><text x="220.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 1.01%)</title><rect x="221" y="196" width="12" height="15" fill="rgb(247,160,17)"/><text x="224.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="273" y="212" width="4" height="15" fill="rgb(231,12,51)"/><text x="276.00" y="222.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="277" y="212" width="4" height="15" fill="rgb(214,50,30)"/><text x="280.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.35%)</title><rect x="297" y="228" width="15" height="15" fill="rgb(206,36,31)"/><text x="300.00" y="238.50"></text></g><g><title>0x7fe2e34dff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="444" y="324" width="8" height="15" fill="rgb(251,61,52)"/><text x="447.00" y="334.50"></text></g><g><title>0x7fe2e34cfd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="444" y="340" width="8" height="15" fill="rgb(233,119,40)"/><text x="447.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.68%)</title><rect x="444" y="356" width="8" height="15" fill="rgb(250,48,17)"/><text x="447.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="448" y="372" width="4" height="15" fill="rgb(215,175,28)"/><text x="451.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="448" y="388" width="4" height="15" fill="rgb(223,44,28)"/><text x="451.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="448" y="404" width="4" height="15" fill="rgb(227,97,51)"/><text x="451.00" y="414.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="448" y="420" width="4" height="15" fill="rgb(238,111,33)"/><text x="451.00" y="430.50"></text></g><g><title>0x7fe2e34ee1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="452" y="356" width="4" height="15" fill="rgb(244,41,11)"/><text x="455.00" y="366.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.34%)</title><rect x="452" y="372" width="4" height="15" fill="rgb(216,212,4)"/><text x="455.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.34%)</title><rect x="456" y="388" width="4" height="15" fill="rgb(215,153,38)"/><text x="459.00" y="398.50"></text></g><g><title>0x7fe2e34ee225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="456" y="356" width="8" height="15" fill="rgb(207,165,39)"/><text x="459.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.68%)</title><rect x="456" y="372" width="8" height="15" fill="rgb(233,157,2)"/><text x="459.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="460" y="388" width="4" height="15" fill="rgb(224,30,49)"/><text x="463.00" y="398.50"></text></g><g><title>0x7fe2e34d2c9d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="464" y="372" width="4" height="15" fill="rgb(243,194,17)"/><text x="467.00" y="382.50"></text></g><g><title>0x7fe2e34d2ce0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="468" y="372" width="4" height="15" fill="rgb(212,158,54)"/><text x="471.00" y="382.50"></text></g><g><title>0x7fe2e34d2604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="472" y="388" width="4" height="15" fill="rgb(227,136,33)"/><text x="475.00" y="398.50"></text></g><g><title>0x7fe309abd120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="472" y="404" width="4" height="15" fill="rgb(225,122,29)"/><text x="475.00" y="414.50"></text></g><g><title>0x7fe2e34c8232 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="476" y="404" width="4" height="15" fill="rgb(210,93,45)"/><text x="479.00" y="414.50"></text></g><g><title>0x7fe2e34c8277 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="480" y="404" width="4" height="15" fill="rgb(216,65,38)"/><text x="483.00" y="414.50"></text></g><g><title>0x7fe308cbde90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="496" y="468" width="4" height="15" fill="rgb(236,101,28)"/><text x="499.00" y="478.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (2 samples, 0.68%)</title><rect x="496" y="452" width="8" height="15" fill="rgb(248,75,24)"/><text x="499.00" y="462.50"></text></g><g><title>0x7fe309aab6e3 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="500" y="468" width="4" height="15" fill="rgb(239,84,19)"/><text x="503.00" y="478.50"></text></g><g><title>0x7fe2e34d2d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.04%)</title><rect x="472" y="372" width="36" height="15" fill="rgb(228,203,2)"/><text x="475.00" y="382.50">0x7..</text></g><g><title>0x7fe2e34d2666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.70%)</title><rect x="476" y="388" width="32" height="15" fill="rgb(206,64,31)"/><text x="479.00" y="398.50">0x..</text></g><g><title>0x7fe2e34c82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.03%)</title><rect x="484" y="404" width="24" height="15" fill="rgb(254,146,29)"/><text x="487.00" y="414.50">0..</text></g><g><title>array_getbuffer (buffer.c) (6 samples, 2.03%)</title><rect x="484" y="420" width="24" height="15" fill="rgb(251,201,5)"/><text x="487.00" y="430.50">a..</text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.35%)</title><rect x="492" y="436" width="16" height="15" fill="rgb(249,73,22)"/><text x="495.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.34%)</title><rect x="504" y="452" width="4" height="15" fill="rgb(213,57,13)"/><text x="507.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="504" y="468" width="4" height="15" fill="rgb(227,64,41)"/><text x="507.00" y="478.50"></text></g><g><title>0x7fe2e34ee2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 4.05%)</title><rect x="464" y="356" width="48" height="15" fill="rgb(230,44,52)"/><text x="467.00" y="366.50">0x7f..</text></g><g><title>0x7fe2e34d2f49 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="508" y="372" width="4" height="15" fill="rgb(225,41,38)"/><text x="511.00" y="382.50"></text></g><g><title>0x7fe2e34ee456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="512" y="356" width="4" height="15" fill="rgb(244,74,51)"/><text x="515.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.34%)</title><rect x="532" y="388" width="4" height="15" fill="rgb(228,91,22)"/><text x="535.00" y="398.50"></text></g><g><title>0x7fe308cbf0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="532" y="404" width="4" height="15" fill="rgb(248,29,10)"/><text x="535.00" y="414.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.68%)</title><rect x="536" y="388" width="8" height="15" fill="rgb(251,228,36)"/><text x="539.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.68%)</title><rect x="536" y="404" width="8" height="15" fill="rgb(215,81,11)"/><text x="539.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="540" y="420" width="4" height="15" fill="rgb(249,160,23)"/><text x="543.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="540" y="436" width="4" height="15" fill="rgb(217,81,36)"/><text x="543.00" y="446.50"></text></g><g><title>0x7fe2e34ee592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.70%)</title><rect x="516" y="356" width="32" height="15" fill="rgb(248,199,23)"/><text x="519.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c) (7 samples, 2.36%)</title><rect x="520" y="372" width="28" height="15" fill="rgb(228,166,6)"/><text x="523.00" y="382.50">a..</text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.34%)</title><rect x="544" y="388" width="4" height="15" fill="rgb(224,82,42)"/><text x="547.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.34%)</title><rect x="544" y="404" width="4" height="15" fill="rgb(242,224,38)"/><text x="547.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="544" y="420" width="4" height="15" fill="rgb(207,172,37)"/><text x="547.00" y="430.50"></text></g><g><title>0x7fe309abcd97 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="544" y="436" width="4" height="15" fill="rgb(243,191,23)"/><text x="547.00" y="446.50"></text></g><g><title>0x7fe2e34ee644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="548" y="356" width="4" height="15" fill="rgb(245,103,50)"/><text x="551.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="548" y="372" width="4" height="15" fill="rgb(246,209,40)"/><text x="551.00" y="382.50"></text></g><g><title>0x7fe2e34ef405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 10.47%)</title><rect x="452" y="340" width="124" height="15" fill="rgb(225,228,9)"/><text x="455.00" y="350.50">0x7fe2e34ef405 ..</text></g><g><title>0x7fe2e34eec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.03%)</title><rect x="552" y="356" width="24" height="15" fill="rgb(221,74,2)"/><text x="555.00" y="366.50">0..</text></g><g><title>0x7fe2e34c6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.03%)</title><rect x="552" y="372" width="24" height="15" fill="rgb(237,96,11)"/><text x="555.00" y="382.50">0..</text></g><g><title>array_getbuffer (buffer.c) (6 samples, 2.03%)</title><rect x="552" y="388" width="24" height="15" fill="rgb(224,144,6)"/><text x="555.00" y="398.50">a..</text></g><g><title>_buffer_get_info (buffer.c) (6 samples, 2.03%)</title><rect x="552" y="404" width="24" height="15" fill="rgb(207,94,25)"/><text x="555.00" y="414.50">_..</text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.34%)</title><rect x="572" y="420" width="4" height="15" fill="rgb(237,47,48)"/><text x="575.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.34%)</title><rect x="572" y="436" width="4" height="15" fill="rgb(233,203,40)"/><text x="575.00" y="446.50"></text></g><g><title>0x7fe2e34c34f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="576" y="372" width="4" height="15" fill="rgb(221,181,46)"/><text x="579.00" y="382.50"></text></g><g><title>0x7fe2e34dffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 11.15%)</title><rect x="452" y="324" width="132" height="15" fill="rgb(219,222,20)"/><text x="455.00" y="334.50">0x7fe2e34dffa6 (..</text></g><g><title>0x7fe2e34ef540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="576" y="340" width="8" height="15" fill="rgb(247,177,12)"/><text x="579.00" y="350.50"></text></g><g><title>0x7fe2e34c42f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="576" y="356" width="8" height="15" fill="rgb(233,84,12)"/><text x="579.00" y="366.50"></text></g><g><title>0x7fe2e34c3570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="580" y="372" width="4" height="15" fill="rgb(225,1,33)"/><text x="583.00" y="382.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="588" y="356" width="4" height="15" fill="rgb(229,51,13)"/><text x="591.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="588" y="372" width="4" height="15" fill="rgb(250,82,37)"/><text x="591.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="588" y="388" width="4" height="15" fill="rgb(209,26,4)"/><text x="591.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="592" y="356" width="4" height="15" fill="rgb(234,120,21)"/><text x="595.00" y="366.50"></text></g><g><title>0x7fe2e34e005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.35%)</title><rect x="584" y="324" width="16" height="15" fill="rgb(212,19,42)"/><text x="587.00" y="334.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.35%)</title><rect x="584" y="340" width="16" height="15" fill="rgb(245,127,27)"/><text x="587.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.34%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(222,175,29)"/><text x="599.00" y="366.50"></text></g><g><title>0x7fe2e34e013a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.01%)</title><rect x="600" y="324" width="11" height="15" fill="rgb(224,192,13)"/><text x="603.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.01%)</title><rect x="600" y="340" width="11" height="15" fill="rgb(209,172,4)"/><text x="603.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="607" y="356" width="4" height="15" fill="rgb(213,77,7)"/><text x="610.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="607" y="372" width="4" height="15" fill="rgb(250,151,47)"/><text x="610.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.01%)</title><rect x="615" y="356" width="12" height="15" fill="rgb(231,106,46)"/><text x="618.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.01%)</title><rect x="615" y="372" width="12" height="15" fill="rgb(254,94,50)"/><text x="618.00" y="382.50"></text></g><g><title>0x7fe2e34e014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.69%)</title><rect x="611" y="324" width="20" height="15" fill="rgb(232,77,36)"/><text x="614.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 1.35%)</title><rect x="615" y="340" width="16" height="15" fill="rgb(220,165,7)"/><text x="618.00" y="350.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="627" y="356" width="4" height="15" fill="rgb(239,152,15)"/><text x="630.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="627" y="372" width="4" height="15" fill="rgb(210,200,49)"/><text x="630.00" y="382.50"></text></g><g><title>0x7fe2e34e023a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="631" y="324" width="4" height="15" fill="rgb(213,101,43)"/><text x="634.00" y="334.50"></text></g><g><title>0x7fe2e34e0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 16.55%)</title><rect x="444" y="308" width="195" height="15" fill="rgb(245,11,26)"/><text x="447.00" y="318.50">0x7fe2e34e0d2e (sklearn/t..</text></g><g><title>0x7fe2e34e05f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="635" y="324" width="4" height="15" fill="rgb(231,56,3)"/><text x="638.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.34%)</title><rect x="639" y="308" width="4" height="15" fill="rgb(208,55,53)"/><text x="642.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(247,155,22)"/><text x="646.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(245,59,29)"/><text x="646.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="643" y="356" width="4" height="15" fill="rgb(206,163,23)"/><text x="646.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.68%)</title><rect x="643" y="308" width="8" height="15" fill="rgb(219,35,30)"/><text x="646.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.34%)</title><rect x="647" y="324" width="4" height="15" fill="rgb(238,44,26)"/><text x="650.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.34%)</title><rect x="647" y="340" width="4" height="15" fill="rgb(225,73,27)"/><text x="650.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="651" y="308" width="4" height="15" fill="rgb(239,162,6)"/><text x="654.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(205,208,20)"/><text x="654.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="651" y="340" width="4" height="15" fill="rgb(252,200,9)"/><text x="654.00" y="350.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.34%)</title><rect x="655" y="324" width="4" height="15" fill="rgb(231,125,46)"/><text x="658.00" y="334.50"></text></g><g><title>0x7fe308cbe7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="663" y="356" width="4" height="15" fill="rgb(242,83,43)"/><text x="666.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (4 samples, 1.35%)</title><rect x="667" y="356" width="16" height="15" fill="rgb(236,196,50)"/><text x="670.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (4 samples, 1.35%)</title><rect x="667" y="372" width="16" height="15" fill="rgb(219,147,40)"/><text x="670.00" y="382.50"></text></g><g><title>promote_types (convert_datatype.c) (3 samples, 1.01%)</title><rect x="671" y="388" width="12" height="15" fill="rgb(214,208,25)"/><text x="674.00" y="398.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (3 samples, 1.01%)</title><rect x="671" y="404" width="12" height="15" fill="rgb(224,146,17)"/><text x="674.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.36%)</title><rect x="659" y="340" width="28" height="15" fill="rgb(209,147,12)"/><text x="662.00" y="350.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="683" y="356" width="4" height="15" fill="rgb(241,46,21)"/><text x="686.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="683" y="372" width="4" height="15" fill="rgb(232,89,4)"/><text x="686.00" y="382.50"></text></g><g><title>array_richcompare (arrayobject.c) (9 samples, 3.04%)</title><rect x="655" y="308" width="36" height="15" fill="rgb(254,38,19)"/><text x="658.00" y="318.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.70%)</title><rect x="659" y="324" width="32" height="15" fill="rgb(219,142,0)"/><text x="662.00" y="334.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(239,47,18)"/><text x="690.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="687" y="356" width="4" height="15" fill="rgb(226,76,27)"/><text x="690.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="687" y="372" width="4" height="15" fill="rgb(233,171,15)"/><text x="690.00" y="382.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.34%)</title><rect x="691" y="324" width="4" height="15" fill="rgb(232,184,31)"/><text x="694.00" y="334.50"></text></g><g><title>long_index (scalartypes.c.src) (1 samples, 0.34%)</title><rect x="691" y="340" width="4" height="15" fill="rgb(217,48,35)"/><text x="694.00" y="350.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.68%)</title><rect x="691" y="308" width="8" height="15" fill="rgb(224,31,23)"/><text x="694.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.34%)</title><rect x="695" y="324" width="4" height="15" fill="rgb(219,109,30)"/><text x="698.00" y="334.50"></text></g><g><title>0x7fe309ab2e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="719" y="452" width="4" height="15" fill="rgb(218,93,29)"/><text x="722.00" y="462.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.69%)</title><rect x="707" y="372" width="20" height="15" fill="rgb(254,70,36)"/><text x="710.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.69%)</title><rect x="707" y="388" width="20" height="15" fill="rgb(238,128,3)"/><text x="710.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 1.69%)</title><rect x="707" y="404" width="20" height="15" fill="rgb(239,40,29)"/><text x="710.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 1.69%)</title><rect x="707" y="420" width="20" height="15" fill="rgb(228,35,46)"/><text x="710.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 1.69%)</title><rect x="707" y="436" width="20" height="15" fill="rgb(237,85,26)"/><text x="710.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="723" y="452" width="4" height="15" fill="rgb(210,53,32)"/><text x="726.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="731" y="388" width="4" height="15" fill="rgb(230,59,51)"/><text x="734.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.34%)</title><rect x="735" y="388" width="4" height="15" fill="rgb(232,104,10)"/><text x="738.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="735" y="404" width="4" height="15" fill="rgb(222,114,17)"/><text x="738.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="735" y="420" width="4" height="15" fill="rgb(205,78,11)"/><text x="738.00" y="430.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.34%)</title><rect x="743" y="436" width="4" height="15" fill="rgb(212,7,32)"/><text x="746.00" y="446.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="747" y="436" width="4" height="15" fill="rgb(208,173,13)"/><text x="750.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.35%)</title><rect x="743" y="420" width="16" height="15" fill="rgb(211,102,25)"/><text x="746.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.68%)</title><rect x="751" y="436" width="8" height="15" fill="rgb(217,67,4)"/><text x="754.00" y="446.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.34%)</title><rect x="759" y="420" width="4" height="15" fill="rgb(205,53,50)"/><text x="762.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.34%)</title><rect x="759" y="436" width="4" height="15" fill="rgb(243,44,53)"/><text x="762.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="759" y="452" width="4" height="15" fill="rgb(225,147,4)"/><text x="762.00" y="462.50"></text></g><g><title>0x7fe309a54a19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="759" y="468" width="4" height="15" fill="rgb(235,147,29)"/><text x="762.00" y="478.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.34%)</title><rect x="759" y="484" width="4" height="15" fill="rgb(222,63,29)"/><text x="762.00" y="494.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="771" y="468" width="4" height="15" fill="rgb(238,152,49)"/><text x="774.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (5 samples, 1.69%)</title><rect x="763" y="420" width="20" height="15" fill="rgb(243,81,52)"/><text x="766.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 1.35%)</title><rect x="767" y="436" width="16" height="15" fill="rgb(214,135,16)"/><text x="770.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 1.01%)</title><rect x="771" y="452" width="12" height="15" fill="rgb(230,10,9)"/><text x="774.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (2 samples, 0.68%)</title><rect x="775" y="468" width="8" height="15" fill="rgb(206,185,39)"/><text x="778.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (2 samples, 0.68%)</title><rect x="775" y="484" width="8" height="15" fill="rgb(209,40,10)"/><text x="778.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (12 samples, 4.05%)</title><rect x="739" y="404" width="48" height="15" fill="rgb(208,218,32)"/><text x="742.00" y="414.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="783" y="420" width="4" height="15" fill="rgb(237,2,10)"/><text x="786.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.34%)</title><rect x="783" y="436" width="4" height="15" fill="rgb(227,18,10)"/><text x="786.00" y="446.50"></text></g><g><title>array_sum (methods.c) (23 samples, 7.77%)</title><rect x="699" y="308" width="92" height="15" fill="rgb(212,144,50)"/><text x="702.00" y="318.50">array_sum ..</text></g><g><title>forward_ndarray_method (methods.c) (23 samples, 7.77%)</title><rect x="699" y="324" width="92" height="15" fill="rgb(244,183,16)"/><text x="702.00" y="334.50">forward_nd..</text></g><g><title>_sum (numpy/core/_methods.py) (22 samples, 7.43%)</title><rect x="703" y="340" width="88" height="15" fill="rgb(238,40,11)"/><text x="706.00" y="350.50">_sum (nump..</text></g><g><title>ufunc_reduce (ufunc_object.c) (21 samples, 7.09%)</title><rect x="707" y="356" width="84" height="15" fill="rgb(246,184,4)"/><text x="710.00" y="366.50">ufunc_red..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (16 samples, 5.41%)</title><rect x="727" y="372" width="64" height="15" fill="rgb(225,176,22)"/><text x="730.00" y="382.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 4.39%)</title><rect x="739" y="388" width="52" height="15" fill="rgb(224,24,38)"/><text x="742.00" y="398.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="787" y="404" width="4" height="15" fill="rgb(236,105,52)"/><text x="790.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="787" y="420" width="4" height="15" fill="rgb(235,199,1)"/><text x="790.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="787" y="436" width="4" height="15" fill="rgb(248,93,50)"/><text x="790.00" y="446.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 4.73%)</title><rect x="791" y="308" width="56" height="15" fill="rgb(246,148,45)"/><text x="794.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 3.72%)</title><rect x="803" y="324" width="44" height="15" fill="rgb(211,102,22)"/><text x="806.00" y="334.50">&lt;lis..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="843" y="340" width="4" height="15" fill="rgb(250,209,5)"/><text x="846.00" y="350.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.34%)</title><rect x="851" y="340" width="4" height="15" fill="rgb(227,188,28)"/><text x="854.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="855" y="388" width="4" height="15" fill="rgb(237,141,35)"/><text x="858.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.68%)</title><rect x="855" y="372" width="8" height="15" fill="rgb(209,173,32)"/><text x="858.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="859" y="388" width="4" height="15" fill="rgb(212,50,38)"/><text x="862.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.34%)</title><rect x="859" y="404" width="4" height="15" fill="rgb(240,34,25)"/><text x="862.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="855" y="340" width="12" height="15" fill="rgb(223,113,0)"/><text x="858.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="855" y="356" width="12" height="15" fill="rgb(253,89,47)"/><text x="858.00" y="366.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.34%)</title><rect x="863" y="372" width="4" height="15" fill="rgb(213,186,47)"/><text x="866.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (120 samples, 40.54%)</title><rect x="392" y="292" width="479" height="15" fill="rgb(235,138,36)"/><text x="395.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.03%)</title><rect x="847" y="308" width="24" height="15" fill="rgb(230,203,35)"/><text x="850.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.03%)</title><rect x="847" y="324" width="24" height="15" fill="rgb(225,183,48)"/><text x="850.00" y="334.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(217,85,19)"/><text x="870.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(211,102,23)"/><text x="870.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="871" y="324" width="4" height="15" fill="rgb(217,155,4)"/><text x="874.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="871" y="340" width="4" height="15" fill="rgb(230,61,1)"/><text x="874.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.34%)</title><rect x="871" y="356" width="4" height="15" fill="rgb(214,76,15)"/><text x="874.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.34%)</title><rect x="871" y="372" width="4" height="15" fill="rgb(231,90,17)"/><text x="874.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="875" y="324" width="4" height="15" fill="rgb(227,153,54)"/><text x="878.00" y="334.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="875" y="340" width="4" height="15" fill="rgb(209,45,2)"/><text x="878.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.68%)</title><rect x="879" y="340" width="8" height="15" fill="rgb(238,120,3)"/><text x="882.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.68%)</title><rect x="879" y="356" width="8" height="15" fill="rgb(216,152,39)"/><text x="882.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.68%)</title><rect x="879" y="372" width="8" height="15" fill="rgb(223,6,18)"/><text x="882.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="883" y="388" width="4" height="15" fill="rgb(244,91,52)"/><text x="886.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="883" y="404" width="4" height="15" fill="rgb(248,161,54)"/><text x="886.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="879" y="324" width="12" height="15" fill="rgb(218,167,27)"/><text x="882.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="887" y="340" width="4" height="15" fill="rgb(233,84,47)"/><text x="890.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.34%)</title><rect x="887" y="356" width="4" height="15" fill="rgb(218,197,24)"/><text x="890.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.34%)</title><rect x="887" y="372" width="4" height="15" fill="rgb(236,120,21)"/><text x="890.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (134 samples, 45.27%)</title><rect x="360" y="260" width="535" height="15" fill="rgb(238,16,44)"/><text x="363.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (132 samples, 44.59%)</title><rect x="368" y="276" width="527" height="15" fill="rgb(235,175,43)"/><text x="371.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.03%)</title><rect x="871" y="292" width="24" height="15" fill="rgb(243,7,9)"/><text x="874.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.03%)</title><rect x="871" y="308" width="24" height="15" fill="rgb(225,214,33)"/><text x="874.00" y="318.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="891" y="324" width="4" height="15" fill="rgb(216,221,5)"/><text x="894.00" y="334.50"></text></g><g><title>__exit__ (joblib/parallel.py) (5 samples, 1.69%)</title><rect x="895" y="260" width="19" height="15" fill="rgb(245,206,19)"/><text x="898.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (3 samples, 1.01%)</title><rect x="902" y="276" width="12" height="15" fill="rgb(209,78,31)"/><text x="905.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (164 samples, 55.41%)</title><rect x="281" y="212" width="653" height="15" fill="rgb(244,71,32)"/><text x="284.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (156 samples, 52.70%)</title><rect x="312" y="228" width="622" height="15" fill="rgb(207,6,19)"/><text x="315.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (156 samples, 52.70%)</title><rect x="312" y="244" width="622" height="15" fill="rgb(231,35,1)"/><text x="315.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (5 samples, 1.69%)</title><rect x="914" y="260" width="20" height="15" fill="rgb(232,42,9)"/><text x="917.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py) (177 samples, 59.80%)</title><rect x="233" y="196" width="705" height="15" fill="rgb(248,221,24)"/><text x="236.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.34%)</title><rect x="934" y="212" width="4" height="15" fill="rgb(233,229,27)"/><text x="937.00" y="222.50"></text></g><g><title>get (queue.py) (11 samples, 3.72%)</title><rect x="938" y="196" width="44" height="15" fill="rgb(253,101,27)"/><text x="941.00" y="206.50">get ..</text></g><g><title>notify (threading.py) (2 samples, 0.68%)</title><rect x="974" y="212" width="8" height="15" fill="rgb(254,75,29)"/><text x="977.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1014" y="212" width="8" height="15" fill="rgb(245,64,24)"/><text x="1017.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (12 samples, 4.05%)</title><rect x="1022" y="212" width="48" height="15" fill="rgb(227,5,29)"/><text x="1025.00" y="222.50">get_..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 2.36%)</title><rect x="1042" y="228" width="28" height="15" fill="rgb(239,171,52)"/><text x="1045.00" y="238.50">_..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="1066" y="244" width="4" height="15" fill="rgb(223,146,41)"/><text x="1069.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="1070" y="212" width="8" height="15" fill="rgb(226,10,35)"/><text x="1073.00" y="222.50"></text></g><g><title>0x7fe309aad8e5 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1074" y="228" width="4" height="15" fill="rgb(252,101,6)"/><text x="1077.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (28 samples, 9.46%)</title><rect x="982" y="196" width="112" height="15" fill="rgb(241,120,45)"/><text x="985.00" y="206.50">get_nested_ba..</text></g><g><title>unicode_hash (python3.7) (4 samples, 1.35%)</title><rect x="1078" y="212" width="16" height="15" fill="rgb(252,148,31)"/><text x="1081.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (2 samples, 0.68%)</title><rect x="1106" y="212" width="8" height="15" fill="rgb(253,65,10)"/><text x="1109.00" y="222.50"></text></g><g><title>_put (queue.py) (1 samples, 0.34%)</title><rect x="1114" y="212" width="4" height="15" fill="rgb(235,168,32)"/><text x="1117.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (261 samples, 88.18%)</title><rect x="89" y="180" width="1041" height="15" fill="rgb(218,25,34)"/><text x="92.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (9 samples, 3.04%)</title><rect x="1094" y="196" width="36" height="15" fill="rgb(223,30,54)"/><text x="1097.00" y="206.50">put..</text></g><g><title>notify (threading.py) (3 samples, 1.01%)</title><rect x="1118" y="212" width="12" height="15" fill="rgb(238,102,4)"/><text x="1121.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.34%)</title><rect x="1126" y="228" width="4" height="15" fill="rgb(230,81,35)"/><text x="1129.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.34%)</title><rect x="1126" y="244" width="4" height="15" fill="rgb(229,4,38)"/><text x="1129.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (264 samples, 89.19%)</title><rect x="85" y="164" width="1053" height="15" fill="rgb(224,203,8)"/><text x="88.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.68%)</title><rect x="1130" y="180" width="8" height="15" fill="rgb(205,167,32)"/><text x="1133.00" y="190.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.34%)</title><rect x="1142" y="180" width="4" height="15" fill="rgb(249,189,16)"/><text x="1145.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 1.01%)</title><rect x="1138" y="164" width="12" height="15" fill="rgb(243,3,35)"/><text x="1141.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="1146" y="180" width="4" height="15" fill="rgb(238,66,52)"/><text x="1149.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.34%)</title><rect x="1146" y="196" width="4" height="15" fill="rgb(250,144,35)"/><text x="1149.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (2 samples, 0.68%)</title><rect x="1150" y="164" width="8" height="15" fill="rgb(241,109,4)"/><text x="1153.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.34%)</title><rect x="1154" y="180" width="4" height="15" fill="rgb(254,9,4)"/><text x="1157.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.34%)</title><rect x="1154" y="196" width="4" height="15" fill="rgb(215,51,5)"/><text x="1157.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1154" y="212" width="4" height="15" fill="rgb(222,106,6)"/><text x="1157.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1154" y="228" width="4" height="15" fill="rgb(248,113,54)"/><text x="1157.00" y="238.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.34%)</title><rect x="1154" y="244" width="4" height="15" fill="rgb(252,123,42)"/><text x="1157.00" y="254.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.34%)</title><rect x="1154" y="260" width="4" height="15" fill="rgb(249,219,47)"/><text x="1157.00" y="270.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.34%)</title><rect x="1154" y="276" width="4" height="15" fill="rgb(211,225,31)"/><text x="1157.00" y="286.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1154" y="292" width="4" height="15" fill="rgb(212,113,24)"/><text x="1157.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1154" y="308" width="4" height="15" fill="rgb(229,32,51)"/><text x="1157.00" y="318.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1162" y="212" width="4" height="15" fill="rgb(242,28,12)"/><text x="1165.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (3 samples, 1.01%)</title><rect x="1158" y="164" width="12" height="15" fill="rgb(244,75,14)"/><text x="1161.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (3 samples, 1.01%)</title><rect x="1158" y="180" width="12" height="15" fill="rgb(227,23,23)"/><text x="1161.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.68%)</title><rect x="1162" y="196" width="8" height="15" fill="rgb(240,22,21)"/><text x="1165.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1166" y="212" width="4" height="15" fill="rgb(247,54,14)"/><text x="1169.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.34%)</title><rect x="1166" y="228" width="4" height="15" fill="rgb(246,215,21)"/><text x="1169.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.34%)</title><rect x="1166" y="244" width="4" height="15" fill="rgb(228,68,20)"/><text x="1169.00" y="254.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (274 samples, 92.57%)</title><rect x="85" y="100" width="1093" height="15" fill="rgb(213,127,15)"/><text x="88.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (274 samples, 92.57%)</title><rect x="85" y="116" width="1093" height="15" fill="rgb(254,208,24)"/><text x="88.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (274 samples, 92.57%)</title><rect x="85" y="132" width="1093" height="15" fill="rgb(208,161,33)"/><text x="88.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (274 samples, 92.57%)</title><rect x="85" y="148" width="1093" height="15" fill="rgb(213,128,34)"/><text x="88.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.68%)</title><rect x="1170" y="164" width="8" height="15" fill="rgb(249,73,45)"/><text x="1173.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.68%)</title><rect x="1170" y="180" width="8" height="15" fill="rgb(238,2,23)"/><text x="1173.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="1174" y="196" width="4" height="15" fill="rgb(235,219,35)"/><text x="1177.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.34%)</title><rect x="1178" y="292" width="4" height="15" fill="rgb(228,112,40)"/><text x="1181.00" y="302.50"></text></g><g><title>all (296 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,172,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (296 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,214,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (277 samples, 93.58%)</title><rect x="85" y="68" width="1105" height="15" fill="rgb(223,157,31)"/><text x="88.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (277 samples, 93.58%)</title><rect x="85" y="84" width="1105" height="15" fill="rgb(239,47,33)"/><text x="88.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(235,182,23)"/><text x="1181.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(208,127,11)"/><text x="1181.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.01%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(212,133,25)"/><text x="1181.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 1.01%)</title><rect x="1178" y="148" width="12" height="15" fill="rgb(226,158,20)"/><text x="1181.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 1.01%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(239,136,25)"/><text x="1181.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 1.01%)</title><rect x="1178" y="180" width="12" height="15" fill="rgb(217,176,13)"/><text x="1181.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (3 samples, 1.01%)</title><rect x="1178" y="196" width="12" height="15" fill="rgb(218,164,21)"/><text x="1181.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (3 samples, 1.01%)</title><rect x="1178" y="212" width="12" height="15" fill="rgb(244,137,30)"/><text x="1181.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (3 samples, 1.01%)</title><rect x="1178" y="228" width="12" height="15" fill="rgb(211,226,29)"/><text x="1181.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.01%)</title><rect x="1178" y="244" width="12" height="15" fill="rgb(237,13,11)"/><text x="1181.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (3 samples, 1.01%)</title><rect x="1178" y="260" width="12" height="15" fill="rgb(246,227,25)"/><text x="1181.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (3 samples, 1.01%)</title><rect x="1178" y="276" width="12" height="15" fill="rgb(240,140,39)"/><text x="1181.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.68%)</title><rect x="1182" y="292" width="8" height="15" fill="rgb(205,155,36)"/><text x="1185.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (2 samples, 0.68%)</title><rect x="1182" y="308" width="8" height="15" fill="rgb(227,105,2)"/><text x="1185.00" y="318.50"></text></g></g></svg>