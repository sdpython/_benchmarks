<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(240,76,40)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(213,82,31)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(251,223,5)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(250,18,20)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(240,80,23)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(226,104,41)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="13" y="964" width="4" height="15" fill="rgb(225,76,0)"/><text x="16.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(217,109,28)"/><text x="20.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(208,185,6)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(247,84,13)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(245,209,9)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(207,180,26)"/><text x="20.00" y="1006.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(205,86,35)"/><text x="23.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(209,85,42)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(221,55,53)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(213,170,28)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(221,123,37)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(246,66,49)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(251,70,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(207,180,35)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(213,139,35)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.55%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(219,146,1)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(227,56,20)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(253,169,29)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(235,48,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(227,31,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(213,112,31)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.55%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(230,168,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(231,34,51)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(224,50,37)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(230,72,53)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(207,47,45)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(238,37,46)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.55%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(246,169,48)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(217,55,22)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(253,51,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(226,125,16)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(222,70,8)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(228,69,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(219,101,48)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(254,134,32)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(236,82,21)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(238,130,20)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(213,156,6)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(250,27,51)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(230,112,42)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(208,222,25)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(234,127,46)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(205,3,36)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(213,111,15)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(250,74,8)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="868" width="11" height="15" fill="rgb(212,224,1)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="884" width="11" height="15" fill="rgb(234,61,11)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="900" width="11" height="15" fill="rgb(231,14,44)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="916" width="11" height="15" fill="rgb(218,204,51)"/><text x="20.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="20" y="932" width="8" height="15" fill="rgb(239,209,2)"/><text x="23.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="20" y="948" width="8" height="15" fill="rgb(208,127,46)"/><text x="23.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.31%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(229,60,45)"/><text x="27.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.31%)</title><rect x="24" y="980" width="4" height="15" fill="rgb(253,95,0)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(242,163,27)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(219,39,45)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(210,171,26)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(217,179,29)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(214,19,42)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(207,157,12)"/><text x="31.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(213,117,8)"/><text x="31.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(240,76,48)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(226,151,17)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(220,24,19)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(245,212,43)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(231,211,45)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(250,55,36)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(253,77,7)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(210,78,35)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(254,173,29)"/><text x="31.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(211,110,28)"/><text x="31.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(212,146,19)"/><text x="31.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(242,113,34)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.31%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(254,17,30)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(215,135,39)"/><text x="31.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(220,129,43)"/><text x="31.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(222,140,14)"/><text x="31.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(248,185,18)"/><text x="31.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(231,95,24)"/><text x="31.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py) (1 samples, 0.31%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(227,116,24)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(246,13,41)"/><text x="31.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(205,31,37)"/><text x="31.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(236,93,28)"/><text x="31.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(222,1,32)"/><text x="31.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(243,179,14)"/><text x="31.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(211,108,27)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(239,229,33)"/><text x="31.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(254,98,44)"/><text x="31.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1460" width="3" height="15" fill="rgb(241,200,27)"/><text x="31.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(232,214,53)"/><text x="31.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(233,194,35)"/><text x="31.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/least_squares.py) (1 samples, 0.31%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(247,99,42)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1524" width="3" height="15" fill="rgb(225,184,53)"/><text x="31.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1540" width="3" height="15" fill="rgb(223,24,44)"/><text x="31.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1556" width="3" height="15" fill="rgb(243,10,53)"/><text x="31.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1572" width="3" height="15" fill="rgb(214,187,35)"/><text x="31.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1588" width="3" height="15" fill="rgb(253,15,20)"/><text x="31.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/trf.py) (1 samples, 0.31%)</title><rect x="28" y="1604" width="3" height="15" fill="rgb(218,92,19)"/><text x="31.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1620" width="3" height="15" fill="rgb(205,36,35)"/><text x="31.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1636" width="3" height="15" fill="rgb(247,70,27)"/><text x="31.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1652" width="3" height="15" fill="rgb(251,16,53)"/><text x="31.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1668" width="3" height="15" fill="rgb(250,114,42)"/><text x="31.00" y="1678.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1684" width="3" height="15" fill="rgb(223,138,28)"/><text x="31.00" y="1694.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="1700" width="3" height="15" fill="rgb(224,149,23)"/><text x="31.00" y="1710.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="788" width="7" height="15" fill="rgb(231,186,37)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="804" width="7" height="15" fill="rgb(240,167,52)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="820" width="7" height="15" fill="rgb(246,171,30)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="836" width="7" height="15" fill="rgb(246,100,24)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="852" width="7" height="15" fill="rgb(215,184,16)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="28" y="868" width="7" height="15" fill="rgb(233,59,38)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="28" y="884" width="7" height="15" fill="rgb(224,90,42)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.62%)</title><rect x="28" y="900" width="7" height="15" fill="rgb(218,149,32)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(248,6,39)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(218,63,50)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(243,212,24)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(215,175,7)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(246,19,12)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(210,168,39)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(212,15,19)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.31%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(220,89,6)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(229,13,14)"/><text x="34.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(235,15,16)"/><text x="34.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.31%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(233,161,51)"/><text x="34.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.31%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(229,93,8)"/><text x="34.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(236,198,16)"/><text x="34.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(252,204,16)"/><text x="34.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(242,123,35)"/><text x="34.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="10" y="196" width="29" height="15" fill="rgb(234,184,4)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="10" y="212" width="29" height="15" fill="rgb(224,218,52)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="10" y="228" width="29" height="15" fill="rgb(228,18,18)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="10" y="244" width="29" height="15" fill="rgb(224,126,24)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.48%)</title><rect x="10" y="260" width="29" height="15" fill="rgb(250,27,9)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="10" y="276" width="29" height="15" fill="rgb(230,123,43)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.93%)</title><rect x="28" y="292" width="11" height="15" fill="rgb(250,169,8)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="308" width="11" height="15" fill="rgb(250,87,5)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="324" width="11" height="15" fill="rgb(228,58,10)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="340" width="11" height="15" fill="rgb(239,99,3)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="28" y="356" width="11" height="15" fill="rgb(242,157,44)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="372" width="11" height="15" fill="rgb(245,12,12)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.93%)</title><rect x="28" y="388" width="11" height="15" fill="rgb(234,0,32)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="404" width="11" height="15" fill="rgb(253,116,14)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="420" width="11" height="15" fill="rgb(241,101,50)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="436" width="11" height="15" fill="rgb(240,15,39)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="28" y="452" width="11" height="15" fill="rgb(218,133,10)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="468" width="11" height="15" fill="rgb(238,19,51)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.93%)</title><rect x="28" y="484" width="11" height="15" fill="rgb(233,46,31)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="500" width="11" height="15" fill="rgb(211,175,3)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="516" width="11" height="15" fill="rgb(231,200,17)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="532" width="11" height="15" fill="rgb(217,207,46)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="28" y="548" width="11" height="15" fill="rgb(217,182,34)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="564" width="11" height="15" fill="rgb(214,27,36)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.93%)</title><rect x="28" y="580" width="11" height="15" fill="rgb(226,202,6)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="596" width="11" height="15" fill="rgb(244,33,41)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="612" width="11" height="15" fill="rgb(252,170,24)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="628" width="11" height="15" fill="rgb(218,64,35)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="28" y="644" width="11" height="15" fill="rgb(228,82,18)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="660" width="11" height="15" fill="rgb(248,116,5)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.93%)</title><rect x="28" y="676" width="11" height="15" fill="rgb(246,129,38)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="692" width="11" height="15" fill="rgb(242,117,2)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="708" width="11" height="15" fill="rgb(216,44,3)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="724" width="11" height="15" fill="rgb(219,27,40)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="28" y="740" width="11" height="15" fill="rgb(254,15,15)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="28" y="756" width="11" height="15" fill="rgb(226,166,52)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.93%)</title><rect x="28" y="772" width="11" height="15" fill="rgb(216,134,24)"/><text x="31.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="788" width="4" height="15" fill="rgb(237,161,38)"/><text x="38.00" y="798.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.62%)</title><rect x="39" y="1588" width="7" height="15" fill="rgb(254,154,30)"/><text x="42.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (2 samples, 0.62%)</title><rect x="39" y="1604" width="7" height="15" fill="rgb(222,111,6)"/><text x="42.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="39" y="1620" width="7" height="15" fill="rgb(252,169,1)"/><text x="42.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="39" y="1636" width="7" height="15" fill="rgb(220,192,10)"/><text x="42.00" y="1646.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="39" y="1652" width="7" height="15" fill="rgb(246,59,21)"/><text x="42.00" y="1662.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="42" y="1668" width="4" height="15" fill="rgb(210,120,5)"/><text x="45.00" y="1678.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="42" y="1684" width="4" height="15" fill="rgb(213,148,33)"/><text x="45.00" y="1694.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="42" y="1700" width="4" height="15" fill="rgb(233,150,33)"/><text x="45.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="484" width="11" height="15" fill="rgb(248,196,28)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="500" width="11" height="15" fill="rgb(233,44,21)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="516" width="11" height="15" fill="rgb(214,24,40)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="532" width="11" height="15" fill="rgb(209,74,49)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="548" width="11" height="15" fill="rgb(229,29,38)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="564" width="11" height="15" fill="rgb(206,52,45)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.93%)</title><rect x="39" y="580" width="11" height="15" fill="rgb(246,197,20)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="596" width="11" height="15" fill="rgb(213,229,54)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="612" width="11" height="15" fill="rgb(251,83,53)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="628" width="11" height="15" fill="rgb(252,82,51)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="644" width="11" height="15" fill="rgb(245,170,37)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="660" width="11" height="15" fill="rgb(229,58,48)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.93%)</title><rect x="39" y="676" width="11" height="15" fill="rgb(209,51,12)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="692" width="11" height="15" fill="rgb(212,24,42)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="708" width="11" height="15" fill="rgb(238,3,14)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="724" width="11" height="15" fill="rgb(208,197,47)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="740" width="11" height="15" fill="rgb(241,134,1)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="756" width="11" height="15" fill="rgb(253,174,49)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.93%)</title><rect x="39" y="772" width="11" height="15" fill="rgb(217,171,35)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="788" width="11" height="15" fill="rgb(215,126,2)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="804" width="11" height="15" fill="rgb(253,133,30)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="820" width="11" height="15" fill="rgb(231,182,32)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="836" width="11" height="15" fill="rgb(237,90,51)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="852" width="11" height="15" fill="rgb(230,188,0)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.93%)</title><rect x="39" y="868" width="11" height="15" fill="rgb(227,64,46)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="884" width="11" height="15" fill="rgb(231,42,3)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="900" width="11" height="15" fill="rgb(224,11,39)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="916" width="11" height="15" fill="rgb(242,181,43)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="932" width="11" height="15" fill="rgb(251,21,40)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="948" width="11" height="15" fill="rgb(238,170,47)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="964" width="11" height="15" fill="rgb(233,8,45)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="980" width="11" height="15" fill="rgb(226,14,16)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="996" width="11" height="15" fill="rgb(253,124,38)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.93%)</title><rect x="39" y="1012" width="11" height="15" fill="rgb(215,109,37)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1028" width="11" height="15" fill="rgb(254,60,42)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1044" width="11" height="15" fill="rgb(222,89,30)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1060" width="11" height="15" fill="rgb(240,105,23)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="1076" width="11" height="15" fill="rgb(254,203,10)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1092" width="11" height="15" fill="rgb(224,92,29)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.93%)</title><rect x="39" y="1108" width="11" height="15" fill="rgb(249,52,54)"/><text x="42.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1124" width="11" height="15" fill="rgb(237,86,1)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1140" width="11" height="15" fill="rgb(226,158,15)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1156" width="11" height="15" fill="rgb(238,181,18)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1172" width="11" height="15" fill="rgb(234,47,15)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1188" width="11" height="15" fill="rgb(251,144,26)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="1204" width="11" height="15" fill="rgb(215,52,15)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1220" width="11" height="15" fill="rgb(208,27,8)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.93%)</title><rect x="39" y="1236" width="11" height="15" fill="rgb(215,28,3)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1252" width="11" height="15" fill="rgb(214,79,54)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1268" width="11" height="15" fill="rgb(219,196,12)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1284" width="11" height="15" fill="rgb(234,218,35)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1300" width="11" height="15" fill="rgb(247,86,36)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1316" width="11" height="15" fill="rgb(210,71,32)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="1332" width="11" height="15" fill="rgb(212,16,24)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1348" width="11" height="15" fill="rgb(223,113,47)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.93%)</title><rect x="39" y="1364" width="11" height="15" fill="rgb(216,38,12)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1380" width="11" height="15" fill="rgb(247,221,1)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1396" width="11" height="15" fill="rgb(212,174,47)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1412" width="11" height="15" fill="rgb(217,128,32)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="39" y="1428" width="11" height="15" fill="rgb(241,74,14)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="39" y="1444" width="11" height="15" fill="rgb(230,194,25)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.93%)</title><rect x="39" y="1460" width="11" height="15" fill="rgb(230,90,11)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.93%)</title><rect x="39" y="1476" width="11" height="15" fill="rgb(222,175,38)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.93%)</title><rect x="39" y="1492" width="11" height="15" fill="rgb(228,21,53)"/><text x="42.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.93%)</title><rect x="39" y="1508" width="11" height="15" fill="rgb(241,197,2)"/><text x="42.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.93%)</title><rect x="39" y="1524" width="11" height="15" fill="rgb(252,187,22)"/><text x="42.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.93%)</title><rect x="39" y="1540" width="11" height="15" fill="rgb(225,152,27)"/><text x="42.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.93%)</title><rect x="39" y="1556" width="11" height="15" fill="rgb(213,109,41)"/><text x="42.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.93%)</title><rect x="39" y="1572" width="11" height="15" fill="rgb(237,146,29)"/><text x="42.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="46" y="1588" width="4" height="15" fill="rgb(214,41,5)"/><text x="49.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.31%)</title><rect x="50" y="1108" width="3" height="15" fill="rgb(213,156,9)"/><text x="53.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1124" width="3" height="15" fill="rgb(231,52,28)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1140" width="3" height="15" fill="rgb(235,44,2)"/><text x="53.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1156" width="3" height="15" fill="rgb(243,74,47)"/><text x="53.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1172" width="3" height="15" fill="rgb(252,24,50)"/><text x="53.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1188" width="3" height="15" fill="rgb(239,42,48)"/><text x="53.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.31%)</title><rect x="50" y="1204" width="3" height="15" fill="rgb(249,14,43)"/><text x="53.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1220" width="3" height="15" fill="rgb(244,175,16)"/><text x="53.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1236" width="3" height="15" fill="rgb(233,218,51)"/><text x="53.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1252" width="3" height="15" fill="rgb(216,30,43)"/><text x="53.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1268" width="3" height="15" fill="rgb(247,166,5)"/><text x="53.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1284" width="3" height="15" fill="rgb(217,136,31)"/><text x="53.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.31%)</title><rect x="50" y="1300" width="3" height="15" fill="rgb(231,221,11)"/><text x="53.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1316" width="3" height="15" fill="rgb(223,223,44)"/><text x="53.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1332" width="3" height="15" fill="rgb(249,59,37)"/><text x="53.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1348" width="3" height="15" fill="rgb(205,65,29)"/><text x="53.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1364" width="3" height="15" fill="rgb(235,64,15)"/><text x="53.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1380" width="3" height="15" fill="rgb(205,123,13)"/><text x="53.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.31%)</title><rect x="50" y="1396" width="3" height="15" fill="rgb(215,73,50)"/><text x="53.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1412" width="3" height="15" fill="rgb(246,185,44)"/><text x="53.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1428" width="3" height="15" fill="rgb(243,205,28)"/><text x="53.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1444" width="3" height="15" fill="rgb(212,75,5)"/><text x="53.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1460" width="3" height="15" fill="rgb(239,79,36)"/><text x="53.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1476" width="3" height="15" fill="rgb(246,44,31)"/><text x="53.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1492" width="3" height="15" fill="rgb(225,188,20)"/><text x="53.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.62%)</title><rect x="50" y="1012" width="7" height="15" fill="rgb(212,4,9)"/><text x="53.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="50" y="1028" width="7" height="15" fill="rgb(227,223,0)"/><text x="53.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="50" y="1044" width="7" height="15" fill="rgb(245,6,20)"/><text x="53.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="50" y="1060" width="7" height="15" fill="rgb(215,138,47)"/><text x="53.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="50" y="1076" width="7" height="15" fill="rgb(208,58,35)"/><text x="53.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="50" y="1092" width="7" height="15" fill="rgb(213,110,46)"/><text x="53.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.31%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(226,114,15)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(231,140,17)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(221,46,26)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(205,56,38)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(220,146,7)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(254,109,5)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(232,113,49)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(234,63,20)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(246,154,0)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(241,101,41)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(237,112,18)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1284" width="4" height="15" fill="rgb(223,87,6)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.31%)</title><rect x="53" y="1300" width="4" height="15" fill="rgb(217,75,36)"/><text x="56.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1316" width="4" height="15" fill="rgb(212,152,50)"/><text x="56.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1332" width="4" height="15" fill="rgb(211,158,41)"/><text x="56.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1348" width="4" height="15" fill="rgb(248,38,8)"/><text x="56.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1364" width="4" height="15" fill="rgb(228,114,29)"/><text x="56.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1380" width="4" height="15" fill="rgb(216,14,19)"/><text x="56.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="1396" width="4" height="15" fill="rgb(213,175,26)"/><text x="56.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1412" width="4" height="15" fill="rgb(216,182,29)"/><text x="56.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1428" width="4" height="15" fill="rgb(213,214,0)"/><text x="56.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1444" width="4" height="15" fill="rgb(253,68,39)"/><text x="56.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1460" width="4" height="15" fill="rgb(220,69,45)"/><text x="56.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(251,179,23)"/><text x="56.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.31%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(236,183,30)"/><text x="56.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1508" width="4" height="15" fill="rgb(252,147,3)"/><text x="56.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1524" width="4" height="15" fill="rgb(221,193,31)"/><text x="56.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1540" width="4" height="15" fill="rgb(243,0,22)"/><text x="56.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1556" width="4" height="15" fill="rgb(226,25,11)"/><text x="56.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1572" width="4" height="15" fill="rgb(213,129,40)"/><text x="56.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.31%)</title><rect x="53" y="1588" width="4" height="15" fill="rgb(208,73,35)"/><text x="56.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1604" width="4" height="15" fill="rgb(249,113,12)"/><text x="56.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1620" width="4" height="15" fill="rgb(229,125,29)"/><text x="56.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1636" width="4" height="15" fill="rgb(245,98,22)"/><text x="56.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1652" width="4" height="15" fill="rgb(251,103,41)"/><text x="56.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1668" width="4" height="15" fill="rgb(213,179,54)"/><text x="56.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.31%)</title><rect x="53" y="1684" width="4" height="15" fill="rgb(236,35,29)"/><text x="56.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1700" width="4" height="15" fill="rgb(236,16,48)"/><text x="56.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1716" width="4" height="15" fill="rgb(219,208,26)"/><text x="56.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1732" width="4" height="15" fill="rgb(251,132,41)"/><text x="56.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1748" width="4" height="15" fill="rgb(236,215,14)"/><text x="56.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1764" width="4" height="15" fill="rgb(251,96,38)"/><text x="56.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.31%)</title><rect x="53" y="1780" width="4" height="15" fill="rgb(222,156,12)"/><text x="56.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1796" width="4" height="15" fill="rgb(243,109,14)"/><text x="56.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1812" width="4" height="15" fill="rgb(253,44,12)"/><text x="56.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1828" width="4" height="15" fill="rgb(214,89,12)"/><text x="56.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1844" width="4" height="15" fill="rgb(226,9,21)"/><text x="56.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1860" width="4" height="15" fill="rgb(249,113,6)"/><text x="56.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.31%)</title><rect x="53" y="1876" width="4" height="15" fill="rgb(210,26,30)"/><text x="56.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1892" width="4" height="15" fill="rgb(245,113,32)"/><text x="56.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1908" width="4" height="15" fill="rgb(218,63,3)"/><text x="56.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1924" width="4" height="15" fill="rgb(223,226,54)"/><text x="56.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1940" width="4" height="15" fill="rgb(209,201,1)"/><text x="56.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1956" width="4" height="15" fill="rgb(223,211,29)"/><text x="56.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.31%)</title><rect x="53" y="1972" width="4" height="15" fill="rgb(211,93,12)"/><text x="56.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1988" width="4" height="15" fill="rgb(243,103,31)"/><text x="56.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2004" width="4" height="15" fill="rgb(250,170,33)"/><text x="56.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2020" width="4" height="15" fill="rgb(214,146,7)"/><text x="56.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="2036" width="4" height="15" fill="rgb(228,99,26)"/><text x="56.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2052" width="4" height="15" fill="rgb(241,185,27)"/><text x="56.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py) (1 samples, 0.31%)</title><rect x="53" y="2068" width="4" height="15" fill="rgb(242,115,54)"/><text x="56.00" y="2078.50"></text></g><g><title>MathtextBackendPdf (matplotlib/mathtext.py) (1 samples, 0.31%)</title><rect x="53" y="2084" width="4" height="15" fill="rgb(238,159,35)"/><text x="56.00" y="2094.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="2100" width="4" height="15" fill="rgb(214,217,24)"/><text x="56.00" y="2110.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.31%)</title><rect x="53" y="2116" width="4" height="15" fill="rgb(212,50,19)"/><text x="56.00" y="2126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="932" width="11" height="15" fill="rgb(230,209,50)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="948" width="11" height="15" fill="rgb(253,65,36)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="964" width="11" height="15" fill="rgb(249,20,11)"/><text x="53.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="980" width="11" height="15" fill="rgb(219,38,23)"/><text x="53.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="996" width="11" height="15" fill="rgb(223,10,30)"/><text x="53.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.31%)</title><rect x="57" y="1012" width="4" height="15" fill="rgb(213,96,0)"/><text x="60.00" y="1022.50"></text></g><g><title>GroupBy (pandas/core/groupby/groupby.py) (1 samples, 0.31%)</title><rect x="57" y="1028" width="4" height="15" fill="rgb(225,63,9)"/><text x="60.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.31%)</title><rect x="57" y="1044" width="4" height="15" fill="rgb(247,43,47)"/><text x="60.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="57" y="1060" width="4" height="15" fill="rgb(210,223,37)"/><text x="60.00" y="1070.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="57" y="1076" width="4" height="15" fill="rgb(239,146,45)"/><text x="60.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 2.17%)</title><rect x="39" y="436" width="25" height="15" fill="rgb(217,138,32)"/><text x="42.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="39" y="452" width="25" height="15" fill="rgb(234,109,7)"/><text x="42.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="39" y="468" width="25" height="15" fill="rgb(205,91,50)"/><text x="42.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="484" width="14" height="15" fill="rgb(230,151,46)"/><text x="53.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="50" y="500" width="14" height="15" fill="rgb(239,131,20)"/><text x="53.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="516" width="14" height="15" fill="rgb(206,92,15)"/><text x="53.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.24%)</title><rect x="50" y="532" width="14" height="15" fill="rgb(248,97,25)"/><text x="53.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="548" width="14" height="15" fill="rgb(206,4,39)"/><text x="53.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="564" width="14" height="15" fill="rgb(244,19,6)"/><text x="53.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="580" width="14" height="15" fill="rgb(215,191,28)"/><text x="53.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="50" y="596" width="14" height="15" fill="rgb(244,60,39)"/><text x="53.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="612" width="14" height="15" fill="rgb(227,60,13)"/><text x="53.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.24%)</title><rect x="50" y="628" width="14" height="15" fill="rgb(209,128,47)"/><text x="53.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="644" width="14" height="15" fill="rgb(245,86,43)"/><text x="53.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="660" width="14" height="15" fill="rgb(211,100,1)"/><text x="53.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="676" width="14" height="15" fill="rgb(251,185,47)"/><text x="53.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="50" y="692" width="14" height="15" fill="rgb(244,81,51)"/><text x="53.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="708" width="14" height="15" fill="rgb(233,160,32)"/><text x="53.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.24%)</title><rect x="50" y="724" width="14" height="15" fill="rgb(217,220,11)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="740" width="14" height="15" fill="rgb(254,12,44)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="756" width="14" height="15" fill="rgb(208,69,23)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="772" width="14" height="15" fill="rgb(246,21,3)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="50" y="788" width="14" height="15" fill="rgb(211,224,25)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="804" width="14" height="15" fill="rgb(223,20,4)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.24%)</title><rect x="50" y="820" width="14" height="15" fill="rgb(231,144,19)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="836" width="14" height="15" fill="rgb(243,6,0)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="852" width="14" height="15" fill="rgb(230,205,12)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="868" width="14" height="15" fill="rgb(250,90,34)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.24%)</title><rect x="50" y="884" width="14" height="15" fill="rgb(237,26,48)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.24%)</title><rect x="50" y="900" width="14" height="15" fill="rgb(217,214,44)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.24%)</title><rect x="50" y="916" width="14" height="15" fill="rgb(217,93,29)"/><text x="53.00" y="926.50"></text></g><g><title>inner (typing.py) (1 samples, 0.31%)</title><rect x="61" y="932" width="3" height="15" fill="rgb(239,170,44)"/><text x="64.00" y="942.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.31%)</title><rect x="61" y="948" width="3" height="15" fill="rgb(223,223,2)"/><text x="64.00" y="958.50"></text></g><g><title>_subs_tvars (typing.py) (1 samples, 0.31%)</title><rect x="61" y="964" width="3" height="15" fill="rgb(245,17,33)"/><text x="64.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.48%)</title><rect x="39" y="244" width="29" height="15" fill="rgb(233,51,18)"/><text x="42.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="260" width="29" height="15" fill="rgb(251,123,9)"/><text x="42.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="276" width="29" height="15" fill="rgb(246,97,28)"/><text x="42.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="292" width="29" height="15" fill="rgb(212,125,27)"/><text x="42.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.48%)</title><rect x="39" y="308" width="29" height="15" fill="rgb(224,30,45)"/><text x="42.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="324" width="29" height="15" fill="rgb(222,33,18)"/><text x="42.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.48%)</title><rect x="39" y="340" width="29" height="15" fill="rgb(209,66,23)"/><text x="42.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="356" width="29" height="15" fill="rgb(229,210,31)"/><text x="42.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="372" width="29" height="15" fill="rgb(250,10,51)"/><text x="42.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="388" width="29" height="15" fill="rgb(248,172,30)"/><text x="42.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.48%)</title><rect x="39" y="404" width="29" height="15" fill="rgb(248,194,21)"/><text x="42.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="39" y="420" width="29" height="15" fill="rgb(241,109,31)"/><text x="42.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.31%)</title><rect x="64" y="436" width="4" height="15" fill="rgb(252,20,17)"/><text x="67.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="452" width="4" height="15" fill="rgb(244,211,4)"/><text x="67.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="468" width="4" height="15" fill="rgb(212,48,20)"/><text x="67.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="484" width="4" height="15" fill="rgb(244,228,15)"/><text x="67.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="500" width="4" height="15" fill="rgb(223,122,37)"/><text x="67.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="516" width="4" height="15" fill="rgb(226,44,19)"/><text x="67.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (1 samples, 0.31%)</title><rect x="64" y="532" width="4" height="15" fill="rgb(234,195,41)"/><text x="67.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="548" width="4" height="15" fill="rgb(212,74,10)"/><text x="67.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="564" width="4" height="15" fill="rgb(244,190,48)"/><text x="67.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="580" width="4" height="15" fill="rgb(223,9,28)"/><text x="67.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="596" width="4" height="15" fill="rgb(231,183,33)"/><text x="67.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="612" width="4" height="15" fill="rgb(254,53,53)"/><text x="67.00" y="622.50"></text></g><g><title>&lt;module&gt; (tarfile.py) (1 samples, 0.31%)</title><rect x="64" y="628" width="4" height="15" fill="rgb(238,153,10)"/><text x="67.00" y="638.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="372" width="4" height="15" fill="rgb(225,181,1)"/><text x="71.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="388" width="4" height="15" fill="rgb(224,146,27)"/><text x="71.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="404" width="4" height="15" fill="rgb(206,42,20)"/><text x="71.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="420" width="4" height="15" fill="rgb(248,69,18)"/><text x="71.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="436" width="4" height="15" fill="rgb(242,5,17)"/><text x="71.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="452" width="4" height="15" fill="rgb(252,77,23)"/><text x="71.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.31%)</title><rect x="68" y="468" width="4" height="15" fill="rgb(242,65,43)"/><text x="71.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="68" y="484" width="4" height="15" fill="rgb(206,43,34)"/><text x="71.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="68" width="65" height="15" fill="rgb(239,140,27)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="84" width="65" height="15" fill="rgb(252,204,46)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="100" width="65" height="15" fill="rgb(240,171,28)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 5.59%)</title><rect x="10" y="116" width="65" height="15" fill="rgb(206,124,2)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="132" width="65" height="15" fill="rgb(232,41,45)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (18 samples, 5.59%)</title><rect x="10" y="148" width="65" height="15" fill="rgb(236,219,38)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="164" width="65" height="15" fill="rgb(240,181,46)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 5.59%)</title><rect x="10" y="180" width="65" height="15" fill="rgb(238,206,50)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.11%)</title><rect x="39" y="196" width="36" height="15" fill="rgb(220,158,47)"/><text x="42.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.11%)</title><rect x="39" y="212" width="36" height="15" fill="rgb(232,132,7)"/><text x="42.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.11%)</title><rect x="39" y="228" width="36" height="15" fill="rgb(221,185,35)"/><text x="42.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.62%)</title><rect x="68" y="244" width="7" height="15" fill="rgb(221,97,34)"/><text x="71.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="260" width="7" height="15" fill="rgb(249,37,32)"/><text x="71.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="276" width="7" height="15" fill="rgb(222,227,2)"/><text x="71.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="292" width="7" height="15" fill="rgb(240,9,34)"/><text x="71.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="308" width="7" height="15" fill="rgb(210,154,22)"/><text x="71.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="324" width="7" height="15" fill="rgb(245,199,40)"/><text x="71.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="68" y="340" width="7" height="15" fill="rgb(237,29,37)"/><text x="71.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="68" y="356" width="7" height="15" fill="rgb(254,201,52)"/><text x="71.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.31%)</title><rect x="72" y="372" width="3" height="15" fill="rgb(239,97,31)"/><text x="75.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="388" width="3" height="15" fill="rgb(227,55,22)"/><text x="75.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="404" width="3" height="15" fill="rgb(237,3,26)"/><text x="75.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="420" width="3" height="15" fill="rgb(227,23,24)"/><text x="75.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="436" width="3" height="15" fill="rgb(246,95,49)"/><text x="75.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="452" width="3" height="15" fill="rgb(213,225,51)"/><text x="75.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="468" width="3" height="15" fill="rgb(215,178,5)"/><text x="75.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="484" width="3" height="15" fill="rgb(232,80,1)"/><text x="75.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.31%)</title><rect x="72" y="500" width="3" height="15" fill="rgb(248,101,11)"/><text x="75.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="516" width="3" height="15" fill="rgb(240,81,22)"/><text x="75.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="532" width="3" height="15" fill="rgb(226,213,6)"/><text x="75.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="548" width="3" height="15" fill="rgb(220,156,5)"/><text x="75.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="564" width="3" height="15" fill="rgb(227,119,12)"/><text x="75.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="580" width="3" height="15" fill="rgb(234,222,22)"/><text x="75.00" y="590.50"></text></g><g><title>0x7fde01ded585 (?) (1 samples, 0.31%)</title><rect x="72" y="596" width="3" height="15" fill="rgb(240,148,22)"/><text x="75.00" y="606.50"></text></g><g><title>0x7fde01df3075 (?) (1 samples, 0.31%)</title><rect x="72" y="612" width="3" height="15" fill="rgb(219,211,27)"/><text x="75.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="628" width="3" height="15" fill="rgb(235,160,44)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="644" width="3" height="15" fill="rgb(248,171,52)"/><text x="75.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="660" width="3" height="15" fill="rgb(247,3,22)"/><text x="75.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="676" width="3" height="15" fill="rgb(238,227,33)"/><text x="75.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="692" width="3" height="15" fill="rgb(250,54,4)"/><text x="75.00" y="702.50"></text></g><g><title>0x7fde0172a543 (?) (1 samples, 0.31%)</title><rect x="72" y="708" width="3" height="15" fill="rgb(220,3,19)"/><text x="75.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="724" width="3" height="15" fill="rgb(205,1,18)"/><text x="75.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="740" width="3" height="15" fill="rgb(242,143,5)"/><text x="75.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="756" width="3" height="15" fill="rgb(247,98,30)"/><text x="75.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="772" width="3" height="15" fill="rgb(238,175,54)"/><text x="75.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="788" width="3" height="15" fill="rgb(212,172,20)"/><text x="75.00" y="798.50"></text></g><g><title>0x7fde015017f8 (?) (1 samples, 0.31%)</title><rect x="72" y="804" width="3" height="15" fill="rgb(240,209,27)"/><text x="75.00" y="814.50"></text></g><g><title>0x7fde014fd5ce (?) (1 samples, 0.31%)</title><rect x="72" y="820" width="3" height="15" fill="rgb(219,179,15)"/><text x="75.00" y="830.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.31%)</title><rect x="72" y="836" width="3" height="15" fill="rgb(206,55,14)"/><text x="75.00" y="846.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (15 samples, 4.66%)</title><rect x="178" y="196" width="55" height="15" fill="rgb(209,146,2)"/><text x="181.00" y="206.50">&lt;gene..</text></g><g><title>delayed (joblib/parallel.py) (12 samples, 3.73%)</title><rect x="189" y="212" width="44" height="15" fill="rgb(223,212,6)"/><text x="192.00" y="222.50">dela..</text></g><g><title>update_wrapper (functools.py) (10 samples, 3.11%)</title><rect x="196" y="228" width="37" height="15" fill="rgb(207,206,48)"/><text x="199.00" y="238.50">upd..</text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.93%)</title><rect x="233" y="196" width="11" height="15" fill="rgb(231,155,26)"/><text x="236.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="244" y="196" width="4" height="15" fill="rgb(237,190,1)"/><text x="247.00" y="206.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.31%)</title><rect x="273" y="212" width="4" height="15" fill="rgb(210,124,10)"/><text x="276.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.93%)</title><rect x="277" y="212" width="11" height="15" fill="rgb(238,11,49)"/><text x="280.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 1.86%)</title><rect x="303" y="228" width="22" height="15" fill="rgb(238,5,9)"/><text x="306.00" y="238.50">_..</text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="321" y="244" width="4" height="15" fill="rgb(214,213,53)"/><text x="324.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="372" y="308" width="4" height="15" fill="rgb(208,97,27)"/><text x="375.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="372" y="324" width="4" height="15" fill="rgb(234,45,39)"/><text x="375.00" y="334.50"></text></g><g><title>0x7fde0f526922 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="376" y="324" width="4" height="15" fill="rgb(254,99,43)"/><text x="379.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.93%)</title><rect x="372" y="292" width="11" height="15" fill="rgb(233,36,7)"/><text x="375.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.62%)</title><rect x="376" y="308" width="7" height="15" fill="rgb(254,206,8)"/><text x="379.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="380" y="324" width="3" height="15" fill="rgb(210,41,34)"/><text x="383.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="383" y="292" width="4" height="15" fill="rgb(223,12,6)"/><text x="386.00" y="302.50"></text></g><g><title>0x7fde0f53c730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="383" y="308" width="4" height="15" fill="rgb(214,91,40)"/><text x="386.00" y="318.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="387" y="292" width="4" height="15" fill="rgb(252,155,26)"/><text x="390.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="387" y="308" width="4" height="15" fill="rgb(233,87,42)"/><text x="390.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="387" y="324" width="4" height="15" fill="rgb(209,69,1)"/><text x="390.00" y="334.50"></text></g><g><title>0x7fdde8f6ad24 (?) (1 samples, 0.31%)</title><rect x="405" y="308" width="4" height="15" fill="rgb(244,97,53)"/><text x="408.00" y="318.50"></text></g><g><title>0x7fdde8f59cd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="409" y="340" width="4" height="15" fill="rgb(210,3,8)"/><text x="412.00" y="350.50"></text></g><g><title>0x7fdde8f69f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="409" y="324" width="7" height="15" fill="rgb(233,144,15)"/><text x="412.00" y="334.50"></text></g><g><title>0x7fdde8f59d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="413" y="340" width="3" height="15" fill="rgb(228,86,49)"/><text x="416.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.31%)</title><rect x="413" y="356" width="3" height="15" fill="rgb(216,72,23)"/><text x="416.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="413" y="372" width="3" height="15" fill="rgb(241,112,28)"/><text x="416.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="413" y="388" width="3" height="15" fill="rgb(226,224,10)"/><text x="416.00" y="398.50"></text></g><g><title>0x7fdde8f69f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="416" y="324" width="4" height="15" fill="rgb(213,213,36)"/><text x="419.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="420" y="436" width="4" height="15" fill="rgb(227,140,7)"/><text x="423.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (2 samples, 0.62%)</title><rect x="427" y="452" width="8" height="15" fill="rgb(239,0,19)"/><text x="430.00" y="462.50"></text></g><g><title>0x7fde0f5356a2 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="431" y="468" width="4" height="15" fill="rgb(206,88,45)"/><text x="434.00" y="478.50"></text></g><g><title>0x7fdde8f5cd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.55%)</title><rect x="420" y="372" width="18" height="15" fill="rgb(226,75,52)"/><text x="423.00" y="382.50"></text></g><g><title>0x7fdde8f5c666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.55%)</title><rect x="420" y="388" width="18" height="15" fill="rgb(220,168,54)"/><text x="423.00" y="398.50"></text></g><g><title>0x7fdde8f522fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.55%)</title><rect x="420" y="404" width="18" height="15" fill="rgb(206,212,4)"/><text x="423.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 1.55%)</title><rect x="420" y="420" width="18" height="15" fill="rgb(205,9,31)"/><text x="423.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.24%)</title><rect x="424" y="436" width="14" height="15" fill="rgb(208,106,47)"/><text x="427.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.31%)</title><rect x="435" y="452" width="3" height="15" fill="rgb(246,200,24)"/><text x="438.00" y="462.50"></text></g><g><title>0x7fde0f526902 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="435" y="468" width="3" height="15" fill="rgb(205,141,4)"/><text x="438.00" y="478.50"></text></g><g><title>0x7fdde8f782df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.86%)</title><rect x="420" y="356" width="22" height="15" fill="rgb(240,34,1)"/><text x="423.00" y="366.50">0..</text></g><g><title>0x7fdde8f5ce72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="438" y="372" width="4" height="15" fill="rgb(243,201,24)"/><text x="441.00" y="382.50"></text></g><g><title>0x7fdde8f502bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="438" y="388" width="4" height="15" fill="rgb(234,198,4)"/><text x="441.00" y="398.50"></text></g><g><title>0x7fdde8f4fa87 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="438" y="404" width="4" height="15" fill="rgb(252,194,2)"/><text x="441.00" y="414.50"></text></g><g><title>0x7fdde8f78456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="442" y="356" width="4" height="15" fill="rgb(241,161,9)"/><text x="445.00" y="366.50"></text></g><g><title>0x7fdde8f784b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="446" y="356" width="3" height="15" fill="rgb(245,25,15)"/><text x="449.00" y="366.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.62%)</title><rect x="460" y="388" width="8" height="15" fill="rgb(206,184,5)"/><text x="463.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.62%)</title><rect x="460" y="404" width="8" height="15" fill="rgb(245,186,22)"/><text x="463.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="464" y="420" width="4" height="15" fill="rgb(228,48,46)"/><text x="467.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="464" y="436" width="4" height="15" fill="rgb(236,178,8)"/><text x="467.00" y="446.50"></text></g><g><title>0x7fde0e748600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="464" y="452" width="4" height="15" fill="rgb(228,88,52)"/><text x="467.00" y="462.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.31%)</title><rect x="468" y="388" width="3" height="15" fill="rgb(210,221,43)"/><text x="471.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.31%)</title><rect x="468" y="404" width="3" height="15" fill="rgb(253,78,19)"/><text x="471.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="468" y="420" width="3" height="15" fill="rgb(227,226,17)"/><text x="471.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.31%)</title><rect x="468" y="436" width="3" height="15" fill="rgb(236,23,33)"/><text x="471.00" y="446.50"></text></g><g><title>0x7fde0f547124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="468" y="452" width="3" height="15" fill="rgb(226,35,28)"/><text x="471.00" y="462.50"></text></g><g><title>0x7fdde8f78592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.48%)</title><rect x="449" y="356" width="30" height="15" fill="rgb(245,30,38)"/><text x="452.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c) (8 samples, 2.48%)</title><rect x="449" y="372" width="30" height="15" fill="rgb(215,209,25)"/><text x="452.00" y="382.50">ar..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="471" y="388" width="8" height="15" fill="rgb(211,169,51)"/><text x="474.00" y="398.50"></text></g><g><title>0x7fdde8f786fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="479" y="356" width="3" height="15" fill="rgb(243,81,14)"/><text x="482.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="479" y="372" width="3" height="15" fill="rgb(249,117,30)"/><text x="482.00" y="382.50"></text></g><g><title>0x7fdde8f78881 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="482" y="356" width="4" height="15" fill="rgb(240,25,17)"/><text x="485.00" y="366.50"></text></g><g><title>0x7fdde8f788aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="486" y="356" width="4" height="15" fill="rgb(224,58,54)"/><text x="489.00" y="366.50"></text></g><g><title>0x7fdde8f7892f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="490" y="356" width="3" height="15" fill="rgb(227,42,10)"/><text x="493.00" y="366.50"></text></g><g><title>0x7fdde8f4d9b8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="490" y="372" width="3" height="15" fill="rgb(239,124,9)"/><text x="493.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="493" y="404" width="4" height="15" fill="rgb(245,24,48)"/><text x="496.00" y="414.50"></text></g><g><title>0x7fdde8f50529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="493" y="372" width="11" height="15" fill="rgb(210,106,26)"/><text x="496.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.93%)</title><rect x="493" y="388" width="11" height="15" fill="rgb(236,114,5)"/><text x="496.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.62%)</title><rect x="497" y="404" width="7" height="15" fill="rgb(218,119,49)"/><text x="500.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.31%)</title><rect x="501" y="420" width="3" height="15" fill="rgb(206,29,19)"/><text x="504.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.31%)</title><rect x="501" y="436" width="3" height="15" fill="rgb(219,118,29)"/><text x="504.00" y="446.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.31%)</title><rect x="501" y="452" width="3" height="15" fill="rgb(212,86,6)"/><text x="504.00" y="462.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="501" y="468" width="3" height="15" fill="rgb(209,22,37)"/><text x="504.00" y="478.50"></text></g><g><title>0x7fdde8f79405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 7.45%)</title><rect x="420" y="340" width="88" height="15" fill="rgb(246,147,9)"/><text x="423.00" y="350.50">0x7fdde8f7..</text></g><g><title>0x7fdde8f78c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="493" y="356" width="15" height="15" fill="rgb(243,189,27)"/><text x="496.00" y="366.50"></text></g><g><title>0x7fdde8f50605 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="504" y="372" width="4" height="15" fill="rgb(205,126,6)"/><text x="507.00" y="382.50"></text></g><g><title>0x7fdde8f4e178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="508" y="356" width="4" height="15" fill="rgb(220,176,9)"/><text x="511.00" y="366.50"></text></g><g><title>0x7fdde8f69fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 8.39%)</title><rect x="420" y="324" width="99" height="15" fill="rgb(246,166,47)"/><text x="423.00" y="334.50">0x7fdde8f69..</text></g><g><title>0x7fdde8f79540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="508" y="340" width="11" height="15" fill="rgb(213,127,18)"/><text x="511.00" y="350.50"></text></g><g><title>0x7fdde8f4e2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="512" y="356" width="7" height="15" fill="rgb(209,196,22)"/><text x="515.00" y="366.50"></text></g><g><title>0x7fdde8f4d4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="512" y="372" width="7" height="15" fill="rgb(228,51,40)"/><text x="515.00" y="382.50"></text></g><g><title>0x7fde0f53c730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="526" y="356" width="4" height="15" fill="rgb(247,183,10)"/><text x="529.00" y="366.50"></text></g><g><title>0x7fdde8f6a05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.24%)</title><rect x="519" y="324" width="15" height="15" fill="rgb(245,136,35)"/><text x="522.00" y="334.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.24%)</title><rect x="519" y="340" width="15" height="15" fill="rgb(248,116,25)"/><text x="522.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.31%)</title><rect x="530" y="356" width="4" height="15" fill="rgb(213,150,14)"/><text x="533.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="530" y="372" width="4" height="15" fill="rgb(220,213,14)"/><text x="533.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="530" y="388" width="4" height="15" fill="rgb(218,6,2)"/><text x="533.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="530" y="404" width="4" height="15" fill="rgb(223,63,40)"/><text x="533.00" y="414.50"></text></g><g><title>0x7fdde8f6a13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="534" y="324" width="11" height="15" fill="rgb(234,70,49)"/><text x="537.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.93%)</title><rect x="534" y="340" width="11" height="15" fill="rgb(238,6,18)"/><text x="537.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.93%)</title><rect x="534" y="356" width="11" height="15" fill="rgb(240,76,34)"/><text x="537.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.93%)</title><rect x="534" y="372" width="11" height="15" fill="rgb(205,110,11)"/><text x="537.00" y="382.50"></text></g><g><title>0x7fdde8f6a14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="545" y="324" width="7" height="15" fill="rgb(250,139,29)"/><text x="548.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.62%)</title><rect x="545" y="340" width="7" height="15" fill="rgb(213,191,51)"/><text x="548.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.62%)</title><rect x="545" y="356" width="7" height="15" fill="rgb(226,138,15)"/><text x="548.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.62%)</title><rect x="545" y="372" width="7" height="15" fill="rgb(233,117,35)"/><text x="548.00" y="382.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.31%)</title><rect x="552" y="356" width="4" height="15" fill="rgb(215,63,34)"/><text x="555.00" y="366.50"></text></g><g><title>0x7fdde8f6ad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (42 samples, 13.04%)</title><rect x="409" y="308" width="154" height="15" fill="rgb(249,228,41)"/><text x="412.00" y="318.50">0x7fdde8f6ad2e (skl..</text></g><g><title>0x7fdde8f6a328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="552" y="324" width="11" height="15" fill="rgb(225,144,41)"/><text x="555.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.93%)</title><rect x="552" y="340" width="11" height="15" fill="rgb(231,116,8)"/><text x="555.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.62%)</title><rect x="556" y="356" width="7" height="15" fill="rgb(215,192,27)"/><text x="559.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.31%)</title><rect x="559" y="372" width="4" height="15" fill="rgb(246,68,44)"/><text x="562.00" y="382.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="563" y="308" width="4" height="15" fill="rgb(225,71,11)"/><text x="566.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.31%)</title><rect x="567" y="308" width="3" height="15" fill="rgb(252,213,1)"/><text x="570.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="567" y="324" width="3" height="15" fill="rgb(225,99,39)"/><text x="570.00" y="334.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.31%)</title><rect x="581" y="324" width="4" height="15" fill="rgb(248,181,9)"/><text x="584.00" y="334.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.31%)</title><rect x="585" y="324" width="4" height="15" fill="rgb(207,90,21)"/><text x="588.00" y="334.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="585" y="340" width="4" height="15" fill="rgb(242,97,1)"/><text x="588.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.31%)</title><rect x="585" y="356" width="4" height="15" fill="rgb(240,202,2)"/><text x="588.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.31%)</title><rect x="589" y="356" width="3" height="15" fill="rgb(242,77,22)"/><text x="592.00" y="366.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.31%)</title><rect x="589" y="372" width="3" height="15" fill="rgb(228,91,11)"/><text x="592.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.31%)</title><rect x="592" y="356" width="4" height="15" fill="rgb(215,164,26)"/><text x="595.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (2 samples, 0.62%)</title><rect x="596" y="356" width="7" height="15" fill="rgb(238,143,37)"/><text x="599.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="603" y="356" width="4" height="15" fill="rgb(236,77,5)"/><text x="606.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="603" y="372" width="4" height="15" fill="rgb(223,183,13)"/><text x="606.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.17%)</title><rect x="589" y="340" width="25" height="15" fill="rgb(214,199,50)"/><text x="592.00" y="350.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.62%)</title><rect x="607" y="356" width="7" height="15" fill="rgb(240,56,31)"/><text x="610.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="610" y="372" width="4" height="15" fill="rgb(228,157,47)"/><text x="613.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="610" y="388" width="4" height="15" fill="rgb(222,41,11)"/><text x="613.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c) (13 samples, 4.04%)</title><rect x="570" y="308" width="48" height="15" fill="rgb(211,131,31)"/><text x="573.00" y="318.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.48%)</title><rect x="589" y="324" width="29" height="15" fill="rgb(213,134,8)"/><text x="592.00" y="334.50">uf..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.31%)</title><rect x="614" y="340" width="4" height="15" fill="rgb(239,88,44)"/><text x="617.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.62%)</title><rect x="618" y="324" width="7" height="15" fill="rgb(207,172,40)"/><text x="621.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.93%)</title><rect x="618" y="308" width="11" height="15" fill="rgb(248,68,32)"/><text x="621.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.31%)</title><rect x="625" y="324" width="4" height="15" fill="rgb(210,0,6)"/><text x="628.00" y="334.50"></text></g><g><title>0x7fde0f547120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="640" y="340" width="3" height="15" fill="rgb(224,31,7)"/><text x="643.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.55%)</title><rect x="643" y="372" width="19" height="15" fill="rgb(233,168,5)"/><text x="646.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.55%)</title><rect x="643" y="388" width="19" height="15" fill="rgb(213,111,20)"/><text x="646.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 1.55%)</title><rect x="643" y="404" width="19" height="15" fill="rgb(227,176,3)"/><text x="646.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 1.55%)</title><rect x="643" y="420" width="19" height="15" fill="rgb(246,153,20)"/><text x="646.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 1.55%)</title><rect x="643" y="436" width="19" height="15" fill="rgb(222,148,21)"/><text x="646.00" y="446.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="658" y="452" width="4" height="15" fill="rgb(214,113,38)"/><text x="661.00" y="462.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="665" y="436" width="4" height="15" fill="rgb(239,188,27)"/><text x="668.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="665" y="420" width="8" height="15" fill="rgb(221,198,17)"/><text x="668.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="669" y="436" width="4" height="15" fill="rgb(219,37,46)"/><text x="672.00" y="446.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="673" y="420" width="3" height="15" fill="rgb(219,155,19)"/><text x="676.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="676" y="452" width="4" height="15" fill="rgb(215,78,21)"/><text x="679.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="676" y="468" width="4" height="15" fill="rgb(212,142,26)"/><text x="679.00" y="478.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="676" y="484" width="4" height="15" fill="rgb(229,225,16)"/><text x="679.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="676" y="500" width="4" height="15" fill="rgb(216,28,12)"/><text x="679.00" y="510.50"></text></g><g><title>0x7fde0f4de760 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="680" y="468" width="4" height="15" fill="rgb(211,215,31)"/><text x="683.00" y="478.50"></text></g><g><title>0x7fde0f4dea19 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="684" y="468" width="3" height="15" fill="rgb(224,220,1)"/><text x="687.00" y="478.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.31%)</title><rect x="684" y="484" width="3" height="15" fill="rgb(246,82,53)"/><text x="687.00" y="494.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 1.24%)</title><rect x="676" y="420" width="15" height="15" fill="rgb(207,136,13)"/><text x="679.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 1.24%)</title><rect x="676" y="436" width="15" height="15" fill="rgb(236,206,37)"/><text x="679.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (3 samples, 0.93%)</title><rect x="680" y="452" width="11" height="15" fill="rgb(216,23,50)"/><text x="683.00" y="462.50"></text></g><g><title>0x7fde0f546d50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="687" y="468" width="4" height="15" fill="rgb(242,201,33)"/><text x="690.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.62%)</title><rect x="691" y="420" width="7" height="15" fill="rgb(222,66,43)"/><text x="694.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.62%)</title><rect x="691" y="436" width="7" height="15" fill="rgb(220,24,4)"/><text x="694.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.62%)</title><rect x="691" y="452" width="7" height="15" fill="rgb(228,114,54)"/><text x="694.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="695" y="468" width="3" height="15" fill="rgb(248,175,47)"/><text x="698.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="695" y="484" width="3" height="15" fill="rgb(212,165,38)"/><text x="698.00" y="494.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="695" y="500" width="3" height="15" fill="rgb(243,70,43)"/><text x="698.00" y="510.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.31%)</title><rect x="698" y="420" width="4" height="15" fill="rgb(246,57,26)"/><text x="701.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (12 samples, 3.73%)</title><rect x="665" y="404" width="44" height="15" fill="rgb(214,45,36)"/><text x="668.00" y="414.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.62%)</title><rect x="702" y="420" width="7" height="15" fill="rgb(247,164,33)"/><text x="705.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.62%)</title><rect x="702" y="436" width="7" height="15" fill="rgb(235,162,25)"/><text x="705.00" y="446.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (2 samples, 0.62%)</title><rect x="709" y="420" width="8" height="15" fill="rgb(207,229,14)"/><text x="712.00" y="430.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 4.66%)</title><rect x="665" y="388" width="55" height="15" fill="rgb(253,7,28)"/><text x="668.00" y="398.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.93%)</title><rect x="709" y="404" width="11" height="15" fill="rgb(214,180,19)"/><text x="712.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="717" y="420" width="3" height="15" fill="rgb(224,188,24)"/><text x="720.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="717" y="436" width="3" height="15" fill="rgb(252,220,47)"/><text x="720.00" y="446.50"></text></g><g><title>array_sum (methods.c) (26 samples, 8.07%)</title><rect x="629" y="308" width="95" height="15" fill="rgb(241,24,2)"/><text x="632.00" y="318.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c) (26 samples, 8.07%)</title><rect x="629" y="324" width="95" height="15" fill="rgb(224,26,31)"/><text x="632.00" y="334.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py) (22 samples, 6.83%)</title><rect x="643" y="340" width="81" height="15" fill="rgb(244,162,11)"/><text x="646.00" y="350.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c) (22 samples, 6.83%)</title><rect x="643" y="356" width="81" height="15" fill="rgb(226,143,27)"/><text x="646.00" y="366.50">ufunc_red..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 5.28%)</title><rect x="662" y="372" width="62" height="15" fill="rgb(208,12,25)"/><text x="665.00" y="382.50">PyUFun..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.31%)</title><rect x="720" y="388" width="4" height="15" fill="rgb(236,168,44)"/><text x="723.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.55%)</title><rect x="775" y="340" width="19" height="15" fill="rgb(236,225,1)"/><text x="778.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (21 samples, 6.52%)</title><rect x="728" y="324" width="77" height="15" fill="rgb(234,115,26)"/><text x="731.00" y="334.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.93%)</title><rect x="794" y="340" width="11" height="15" fill="rgb(206,205,5)"/><text x="797.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (23 samples, 7.14%)</title><rect x="724" y="308" width="84" height="15" fill="rgb(251,80,52)"/><text x="727.00" y="318.50">check_is_..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="805" y="324" width="3" height="15" fill="rgb(237,91,50)"/><text x="808.00" y="334.50"></text></g><g><title>0x7fde0f54714e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="816" y="388" width="3" height="15" fill="rgb(239,52,44)"/><text x="819.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.31%)</title><rect x="823" y="404" width="4" height="15" fill="rgb(250,78,47)"/><text x="826.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.31%)</title><rect x="823" y="420" width="4" height="15" fill="rgb(251,154,20)"/><text x="826.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.93%)</title><rect x="819" y="388" width="11" height="15" fill="rgb(214,9,46)"/><text x="822.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.31%)</title><rect x="827" y="404" width="3" height="15" fill="rgb(213,94,33)"/><text x="830.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.31%)</title><rect x="827" y="420" width="3" height="15" fill="rgb(232,31,11)"/><text x="830.00" y="430.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.31%)</title><rect x="827" y="436" width="3" height="15" fill="rgb(242,195,51)"/><text x="830.00" y="446.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="830" y="388" width="4" height="15" fill="rgb(205,101,10)"/><text x="833.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 2.48%)</title><rect x="816" y="372" width="29" height="15" fill="rgb(247,24,38)"/><text x="819.00" y="382.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (3 samples, 0.93%)</title><rect x="834" y="388" width="11" height="15" fill="rgb(246,115,31)"/><text x="837.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 3.11%)</title><rect x="812" y="340" width="37" height="15" fill="rgb(208,204,36)"/><text x="815.00" y="350.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 3.11%)</title><rect x="812" y="356" width="37" height="15" fill="rgb(207,110,22)"/><text x="815.00" y="366.50">ite..</text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.31%)</title><rect x="845" y="372" width="4" height="15" fill="rgb(206,153,29)"/><text x="848.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="849" y="340" width="3" height="15" fill="rgb(224,142,14)"/><text x="852.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="849" y="356" width="3" height="15" fill="rgb(228,113,8)"/><text x="852.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="849" y="372" width="3" height="15" fill="rgb(210,118,43)"/><text x="852.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (127 samples, 39.44%)</title><rect x="391" y="292" width="465" height="15" fill="rgb(219,136,39)"/><text x="394.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.04%)</title><rect x="808" y="308" width="48" height="15" fill="rgb(250,86,41)"/><text x="811.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 4.04%)</title><rect x="808" y="324" width="48" height="15" fill="rgb(218,91,50)"/><text x="811.00" y="334.50">PyUF..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="852" y="340" width="4" height="15" fill="rgb(235,5,22)"/><text x="855.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="860" y="340" width="3" height="15" fill="rgb(234,102,54)"/><text x="863.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="871" y="404" width="3" height="15" fill="rgb(225,65,12)"/><text x="874.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="871" y="420" width="3" height="15" fill="rgb(246,51,48)"/><text x="874.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (143 samples, 44.41%)</title><rect x="354" y="276" width="524" height="15" fill="rgb(233,141,50)"/><text x="357.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.86%)</title><rect x="856" y="292" width="22" height="15" fill="rgb(240,70,3)"/><text x="859.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.55%)</title><rect x="860" y="308" width="18" height="15" fill="rgb(252,109,41)"/><text x="863.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.55%)</title><rect x="860" y="324" width="18" height="15" fill="rgb(251,188,52)"/><text x="863.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.24%)</title><rect x="863" y="340" width="15" height="15" fill="rgb(253,5,8)"/><text x="866.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.24%)</title><rect x="863" y="356" width="15" height="15" fill="rgb(218,38,52)"/><text x="866.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (4 samples, 1.24%)</title><rect x="863" y="372" width="15" height="15" fill="rgb(225,94,50)"/><text x="866.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.93%)</title><rect x="867" y="388" width="11" height="15" fill="rgb(229,173,39)"/><text x="870.00" y="398.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="874" y="404" width="4" height="15" fill="rgb(215,167,54)"/><text x="877.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (146 samples, 45.34%)</title><rect x="347" y="260" width="535" height="15" fill="rgb(251,145,1)"/><text x="350.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="878" y="276" width="4" height="15" fill="rgb(222,63,21)"/><text x="881.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="878" y="292" width="4" height="15" fill="rgb(220,60,47)"/><text x="881.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="878" y="308" width="4" height="15" fill="rgb(211,23,45)"/><text x="881.00" y="318.50"></text></g><g><title>__enter__ (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="882" y="260" width="3" height="15" fill="rgb(231,185,45)"/><text x="885.00" y="270.50"></text></g><g><title>__exit__ (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="885" y="260" width="15" height="15" fill="rgb(235,199,14)"/><text x="888.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="896" y="276" width="4" height="15" fill="rgb(251,65,2)"/><text x="899.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (181 samples, 56.21%)</title><rect x="248" y="196" width="663" height="15" fill="rgb(209,75,45)"/><text x="251.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (170 samples, 52.80%)</title><rect x="288" y="212" width="623" height="15" fill="rgb(221,69,14)"/><text x="291.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (160 samples, 49.69%)</title><rect x="325" y="228" width="586" height="15" fill="rgb(234,37,34)"/><text x="328.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (159 samples, 49.38%)</title><rect x="328" y="244" width="583" height="15" fill="rgb(219,29,49)"/><text x="331.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.93%)</title><rect x="900" y="260" width="11" height="15" fill="rgb(247,15,34)"/><text x="903.00" y="270.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.62%)</title><rect x="940" y="212" width="8" height="15" fill="rgb(235,159,36)"/><text x="943.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="944" y="228" width="4" height="15" fill="rgb(250,96,5)"/><text x="947.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="944" y="244" width="4" height="15" fill="rgb(253,158,8)"/><text x="947.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="944" y="260" width="4" height="15" fill="rgb(209,49,23)"/><text x="947.00" y="270.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.31%)</title><rect x="948" y="212" width="3" height="15" fill="rgb(226,158,7)"/><text x="951.00" y="222.50"></text></g><g><title>_get (queue.py) (1 samples, 0.31%)</title><rect x="951" y="212" width="4" height="15" fill="rgb(207,187,25)"/><text x="954.00" y="222.50"></text></g><g><title>_qsize (queue.py) (3 samples, 0.93%)</title><rect x="955" y="212" width="11" height="15" fill="rgb(245,65,54)"/><text x="958.00" y="222.50"></text></g><g><title>get (queue.py) (19 samples, 5.90%)</title><rect x="911" y="196" width="70" height="15" fill="rgb(234,229,6)"/><text x="914.00" y="206.50">get (qu..</text></g><g><title>notify (threading.py) (4 samples, 1.24%)</title><rect x="966" y="212" width="15" height="15" fill="rgb(222,3,13)"/><text x="969.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.48%)</title><rect x="1021" y="212" width="29" height="15" fill="rgb(244,75,22)"/><text x="1024.00" y="222.50">_h..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (33 samples, 10.25%)</title><rect x="981" y="196" width="121" height="15" fill="rgb(240,199,36)"/><text x="984.00" y="206.50">get_nested_back..</text></g><g><title>get_active_backend (joblib/parallel.py) (14 samples, 4.35%)</title><rect x="1050" y="212" width="52" height="15" fill="rgb(244,93,10)"/><text x="1053.00" y="222.50">get_a..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.62%)</title><rect x="1094" y="228" width="8" height="15" fill="rgb(208,41,40)"/><text x="1097.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="1098" y="244" width="4" height="15" fill="rgb(225,159,24)"/><text x="1101.00" y="254.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.31%)</title><rect x="1105" y="212" width="4" height="15" fill="rgb(242,125,21)"/><text x="1108.00" y="222.50"></text></g><g><title>_put (queue.py) (1 samples, 0.31%)</title><rect x="1109" y="212" width="4" height="15" fill="rgb(253,36,17)"/><text x="1112.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (286 samples, 88.82%)</title><rect x="86" y="180" width="1049" height="15" fill="rgb(225,191,48)"/><text x="89.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (9 samples, 2.80%)</title><rect x="1102" y="196" width="33" height="15" fill="rgb(231,110,26)"/><text x="1105.00" y="206.50">pu..</text></g><g><title>notify (threading.py) (6 samples, 1.86%)</title><rect x="1113" y="212" width="22" height="15" fill="rgb(226,92,28)"/><text x="1116.00" y="222.50">n..</text></g><g><title>_is_owned (threading.py) (1 samples, 0.31%)</title><rect x="1131" y="228" width="4" height="15" fill="rgb(209,43,45)"/><text x="1134.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="1131" y="244" width="4" height="15" fill="rgb(208,135,3)"/><text x="1134.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (292 samples, 90.68%)</title><rect x="75" y="164" width="1071" height="15" fill="rgb(221,153,2)"/><text x="78.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (3 samples, 0.93%)</title><rect x="1135" y="180" width="11" height="15" fill="rgb(205,160,50)"/><text x="1138.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.62%)</title><rect x="1146" y="164" width="7" height="15" fill="rgb(208,101,19)"/><text x="1149.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.31%)</title><rect x="1149" y="180" width="4" height="15" fill="rgb(253,167,51)"/><text x="1152.00" y="190.50"></text></g><g><title>__init__ (threading.py) (1 samples, 0.31%)</title><rect x="1149" y="196" width="4" height="15" fill="rgb(214,41,28)"/><text x="1152.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.31%)</title><rect x="1153" y="164" width="4" height="15" fill="rgb(214,67,23)"/><text x="1156.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="1153" y="180" width="4" height="15" fill="rgb(216,179,48)"/><text x="1156.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="1153" y="196" width="4" height="15" fill="rgb(246,158,35)"/><text x="1156.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="1153" y="212" width="4" height="15" fill="rgb(253,100,14)"/><text x="1156.00" y="222.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (296 samples, 91.93%)</title><rect x="75" y="100" width="1085" height="15" fill="rgb(217,26,25)"/><text x="78.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (296 samples, 91.93%)</title><rect x="75" y="116" width="1085" height="15" fill="rgb(238,208,53)"/><text x="78.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (296 samples, 91.93%)</title><rect x="75" y="132" width="1085" height="15" fill="rgb(232,216,9)"/><text x="78.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (296 samples, 91.93%)</title><rect x="75" y="148" width="1085" height="15" fill="rgb(254,172,37)"/><text x="78.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.31%)</title><rect x="1157" y="164" width="3" height="15" fill="rgb(213,196,39)"/><text x="1160.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(205,154,5)"/><text x="1160.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(212,143,26)"/><text x="1160.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="1157" y="212" width="3" height="15" fill="rgb(230,192,11)"/><text x="1160.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.31%)</title><rect x="1157" y="228" width="3" height="15" fill="rgb(246,204,25)"/><text x="1160.00" y="238.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (297 samples, 92.24%)</title><rect x="75" y="68" width="1089" height="15" fill="rgb(229,108,39)"/><text x="78.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (297 samples, 92.24%)</title><rect x="75" y="84" width="1089" height="15" fill="rgb(224,115,26)"/><text x="78.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1160" y="100" width="4" height="15" fill="rgb(224,201,46)"/><text x="1163.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1160" y="116" width="4" height="15" fill="rgb(235,134,48)"/><text x="1163.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1160" y="132" width="4" height="15" fill="rgb(212,65,38)"/><text x="1163.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.31%)</title><rect x="1160" y="148" width="4" height="15" fill="rgb(235,14,24)"/><text x="1163.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.31%)</title><rect x="1160" y="164" width="4" height="15" fill="rgb(217,0,50)"/><text x="1163.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="1160" y="180" width="4" height="15" fill="rgb(210,195,54)"/><text x="1163.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.31%)</title><rect x="1160" y="196" width="4" height="15" fill="rgb(250,120,10)"/><text x="1163.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="1160" y="212" width="4" height="15" fill="rgb(252,55,42)"/><text x="1163.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="1160" y="228" width="4" height="15" fill="rgb(228,72,3)"/><text x="1163.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (1 samples, 0.31%)</title><rect x="1160" y="244" width="4" height="15" fill="rgb(207,147,6)"/><text x="1163.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1160" y="260" width="4" height="15" fill="rgb(247,218,45)"/><text x="1163.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1160" y="276" width="4" height="15" fill="rgb(251,152,43)"/><text x="1163.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1160" y="292" width="4" height="15" fill="rgb(253,23,46)"/><text x="1163.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="1160" y="308" width="4" height="15" fill="rgb(231,176,17)"/><text x="1163.00" y="318.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.31%)</title><rect x="1160" y="324" width="4" height="15" fill="rgb(253,168,22)"/><text x="1163.00" y="334.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.31%)</title><rect x="1160" y="340" width="4" height="15" fill="rgb(239,167,9)"/><text x="1163.00" y="350.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (2 samples, 0.62%)</title><rect x="1164" y="164" width="7" height="15" fill="rgb(226,7,51)"/><text x="1167.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (2 samples, 0.62%)</title><rect x="1164" y="180" width="7" height="15" fill="rgb(249,161,24)"/><text x="1167.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1168" y="196" width="3" height="15" fill="rgb(250,226,52)"/><text x="1171.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.31%)</title><rect x="1168" y="212" width="3" height="15" fill="rgb(254,152,15)"/><text x="1171.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1168" y="228" width="3" height="15" fill="rgb(235,202,16)"/><text x="1171.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1168" y="244" width="3" height="15" fill="rgb(252,193,27)"/><text x="1171.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.31%)</title><rect x="1168" y="260" width="3" height="15" fill="rgb(225,176,7)"/><text x="1171.00" y="270.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.31%)</title><rect x="1168" y="276" width="3" height="15" fill="rgb(254,117,46)"/><text x="1171.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (3 samples, 0.93%)</title><rect x="1164" y="132" width="11" height="15" fill="rgb(225,190,44)"/><text x="1167.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (3 samples, 0.93%)</title><rect x="1164" y="148" width="11" height="15" fill="rgb(218,218,17)"/><text x="1167.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="164" width="4" height="15" fill="rgb(248,69,49)"/><text x="1174.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="180" width="4" height="15" fill="rgb(245,132,24)"/><text x="1174.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.31%)</title><rect x="1171" y="196" width="4" height="15" fill="rgb(233,70,32)"/><text x="1174.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="212" width="4" height="15" fill="rgb(227,43,23)"/><text x="1174.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="228" width="4" height="15" fill="rgb(229,137,42)"/><text x="1174.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="244" width="4" height="15" fill="rgb(209,200,36)"/><text x="1174.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="260" width="4" height="15" fill="rgb(224,162,46)"/><text x="1174.00" y="270.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.31%)</title><rect x="1171" y="276" width="4" height="15" fill="rgb(248,66,4)"/><text x="1174.00" y="286.50"></text></g><g><title>__Pyx_PyUnicode_Equals (mtrand.c) (1 samples, 0.31%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(239,114,7)"/><text x="1178.00" y="318.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (3 samples, 0.93%)</title><rect x="1175" y="260" width="11" height="15" fill="rgb(236,179,49)"/><text x="1178.00" y="270.50"></text></g><g><title>randint (mtrand.c) (3 samples, 0.93%)</title><rect x="1175" y="276" width="11" height="15" fill="rgb(233,215,37)"/><text x="1178.00" y="286.50"></text></g><g><title>randint (mtrand.c) (3 samples, 0.93%)</title><rect x="1175" y="292" width="11" height="15" fill="rgb(222,139,2)"/><text x="1178.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c) (2 samples, 0.62%)</title><rect x="1179" y="308" width="7" height="15" fill="rgb(220,146,47)"/><text x="1182.00" y="318.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;) (2 samples, 0.62%)</title><rect x="1179" y="324" width="7" height="15" fill="rgb(225,225,51)"/><text x="1182.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.62%)</title><rect x="1179" y="340" width="7" height="15" fill="rgb(224,209,46)"/><text x="1182.00" y="350.50"></text></g><g><title>prod (numpy/core/fromnumeric.py) (2 samples, 0.62%)</title><rect x="1179" y="356" width="7" height="15" fill="rgb(223,83,5)"/><text x="1182.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.62%)</title><rect x="1179" y="372" width="7" height="15" fill="rgb(227,110,46)"/><text x="1182.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1182" y="388" width="4" height="15" fill="rgb(253,202,54)"/><text x="1185.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1182" y="404" width="4" height="15" fill="rgb(251,206,30)"/><text x="1185.00" y="414.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="1182" y="420" width="4" height="15" fill="rgb(249,104,32)"/><text x="1185.00" y="430.50"></text></g><g><title>all (322 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(232,116,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (322 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(239,71,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py) (7 samples, 2.17%)</title><rect x="1164" y="68" width="26" height="15" fill="rgb(251,203,13)"/><text x="1167.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (7 samples, 2.17%)</title><rect x="1164" y="84" width="26" height="15" fill="rgb(237,141,40)"/><text x="1167.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.17%)</title><rect x="1164" y="100" width="26" height="15" fill="rgb(223,226,37)"/><text x="1167.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py) (7 samples, 2.17%)</title><rect x="1164" y="116" width="26" height="15" fill="rgb(242,89,32)"/><text x="1167.00" y="126.50">f..</text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="132" width="15" height="15" fill="rgb(222,129,25)"/><text x="1178.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="148" width="15" height="15" fill="rgb(217,169,51)"/><text x="1178.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(239,125,47)"/><text x="1178.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.24%)</title><rect x="1175" y="180" width="15" height="15" fill="rgb(214,136,9)"/><text x="1178.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.24%)</title><rect x="1175" y="196" width="15" height="15" fill="rgb(236,127,51)"/><text x="1178.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="212" width="15" height="15" fill="rgb(221,93,32)"/><text x="1178.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.24%)</title><rect x="1175" y="228" width="15" height="15" fill="rgb(249,61,44)"/><text x="1178.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.24%)</title><rect x="1175" y="244" width="15" height="15" fill="rgb(231,104,45)"/><text x="1178.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(221,90,20)"/><text x="1189.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(251,200,45)"/><text x="1189.00" y="286.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;) (1 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(240,219,7)"/><text x="1189.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.31%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(254,205,46)"/><text x="1189.00" y="318.50"></text></g><g><title>copy (numpy/lib/function_base.py) (1 samples, 0.31%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(210,141,39)"/><text x="1189.00" y="334.50"></text></g></g></svg>