<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2406" onload="init(evt)" viewBox="0 0 1200 2406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2406" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2389.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2389.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(235,87,6)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(247,158,1)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(230,44,24)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(231,98,45)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(205,37,19)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(237,59,52)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(229,154,23)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(228,87,43)"/><text x="13.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(247,92,38)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(242,214,27)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(219,202,30)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(209,168,2)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(222,97,19)"/><text x="16.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(212,99,9)"/><text x="16.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(206,202,34)"/><text x="16.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="292" width="9" height="15" fill="rgb(227,173,24)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="308" width="9" height="15" fill="rgb(211,107,18)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="324" width="9" height="15" fill="rgb(250,28,12)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(226,117,52)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(233,132,12)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(212,180,4)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.77%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(217,184,25)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(223,6,41)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(242,121,46)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(247,187,35)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(250,74,36)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(242,120,46)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.77%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(215,48,7)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(243,153,32)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(211,106,54)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(215,100,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(224,40,33)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(223,7,32)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.77%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(222,58,35)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(205,10,8)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(212,162,10)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="628" width="9" height="15" fill="rgb(209,13,28)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="644" width="9" height="15" fill="rgb(241,130,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="660" width="9" height="15" fill="rgb(211,168,24)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="676" width="9" height="15" fill="rgb(239,69,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="692" width="9" height="15" fill="rgb(208,7,40)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="708" width="9" height="15" fill="rgb(206,192,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="724" width="9" height="15" fill="rgb(221,228,1)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="740" width="9" height="15" fill="rgb(236,176,53)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="756" width="9" height="15" fill="rgb(208,148,33)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="772" width="9" height="15" fill="rgb(217,131,23)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="788" width="9" height="15" fill="rgb(241,66,31)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="804" width="9" height="15" fill="rgb(220,168,54)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="820" width="9" height="15" fill="rgb(212,158,28)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(216,30,29)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(207,121,25)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(210,142,14)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(233,74,40)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(238,33,53)"/><text x="19.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.26%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(247,163,12)"/><text x="19.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.26%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(235,104,38)"/><text x="19.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.26%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(230,209,35)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="788" width="3" height="15" fill="rgb(209,137,47)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="804" width="3" height="15" fill="rgb(209,47,26)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(237,212,41)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(228,19,17)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(220,128,26)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(222,88,26)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(212,137,51)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(219,7,24)"/><text x="22.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(248,48,45)"/><text x="22.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(246,225,15)"/><text x="22.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(239,83,21)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(212,222,43)"/><text x="22.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(254,95,51)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(237,139,43)"/><text x="22.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(242,152,39)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(213,26,10)"/><text x="22.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(233,146,43)"/><text x="22.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(213,6,44)"/><text x="22.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(214,0,30)"/><text x="22.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.26%)</title><rect x="19" y="1092" width="3" height="15" fill="rgb(217,194,22)"/><text x="22.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1108" width="3" height="15" fill="rgb(226,63,10)"/><text x="22.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1124" width="3" height="15" fill="rgb(229,161,54)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1140" width="3" height="15" fill="rgb(212,153,40)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1156" width="3" height="15" fill="rgb(248,169,5)"/><text x="22.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1172" width="3" height="15" fill="rgb(212,59,32)"/><text x="22.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="1188" width="3" height="15" fill="rgb(241,114,26)"/><text x="22.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(238,103,2)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(221,89,44)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(252,149,3)"/><text x="22.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(228,175,46)"/><text x="22.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(254,210,9)"/><text x="22.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(221,130,16)"/><text x="22.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(208,43,48)"/><text x="22.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/misc.py) (1 samples, 0.26%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(217,221,46)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(224,204,38)"/><text x="22.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(231,41,7)"/><text x="22.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1364" width="3" height="15" fill="rgb(219,6,12)"/><text x="22.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="1380" width="3" height="15" fill="rgb(231,70,19)"/><text x="22.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1396" width="3" height="15" fill="rgb(213,77,46)"/><text x="22.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/lapack.py) (1 samples, 0.26%)</title><rect x="19" y="1412" width="3" height="15" fill="rgb(234,125,50)"/><text x="22.00" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1428" width="3" height="15" fill="rgb(231,192,0)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1444" width="3" height="15" fill="rgb(214,132,8)"/><text x="22.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1460" width="3" height="15" fill="rgb(225,109,19)"/><text x="22.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1476" width="3" height="15" fill="rgb(245,190,45)"/><text x="22.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1492" width="3" height="15" fill="rgb(237,104,50)"/><text x="22.00" y="1502.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1508" width="3" height="15" fill="rgb(247,134,50)"/><text x="22.00" y="1518.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="19" y="1524" width="3" height="15" fill="rgb(216,205,36)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="1540" width="3" height="15" fill="rgb(212,27,53)"/><text x="22.00" y="1550.50"></text></g><g><title>0x7f1e52883869 (?) (1 samples, 0.26%)</title><rect x="19" y="1556" width="3" height="15" fill="rgb(245,225,23)"/><text x="22.00" y="1566.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="19" y="1572" width="3" height="15" fill="rgb(232,157,1)"/><text x="22.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.28%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(214,92,14)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.28%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(206,18,32)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.28%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(230,84,32)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.28%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(249,8,54)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.28%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(239,65,4)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.28%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(243,119,43)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.51%)</title><rect x="19" y="292" width="6" height="15" fill="rgb(215,116,11)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="308" width="6" height="15" fill="rgb(233,67,24)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="324" width="6" height="15" fill="rgb(231,225,53)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="340" width="6" height="15" fill="rgb(243,164,43)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="356" width="6" height="15" fill="rgb(237,79,45)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="372" width="6" height="15" fill="rgb(237,224,14)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.51%)</title><rect x="19" y="388" width="6" height="15" fill="rgb(214,46,10)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="404" width="6" height="15" fill="rgb(210,12,29)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="420" width="6" height="15" fill="rgb(237,75,19)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="436" width="6" height="15" fill="rgb(210,178,9)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="452" width="6" height="15" fill="rgb(212,128,10)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="468" width="6" height="15" fill="rgb(231,199,15)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.51%)</title><rect x="19" y="484" width="6" height="15" fill="rgb(217,49,17)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="500" width="6" height="15" fill="rgb(244,4,21)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="516" width="6" height="15" fill="rgb(208,167,13)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="532" width="6" height="15" fill="rgb(219,43,8)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="548" width="6" height="15" fill="rgb(230,107,16)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="564" width="6" height="15" fill="rgb(251,209,35)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.51%)</title><rect x="19" y="580" width="6" height="15" fill="rgb(212,112,50)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="596" width="6" height="15" fill="rgb(243,212,1)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="612" width="6" height="15" fill="rgb(246,212,50)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="628" width="6" height="15" fill="rgb(208,19,42)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="644" width="6" height="15" fill="rgb(209,114,31)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="660" width="6" height="15" fill="rgb(205,65,1)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.51%)</title><rect x="19" y="676" width="6" height="15" fill="rgb(227,104,17)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="692" width="6" height="15" fill="rgb(247,52,6)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="708" width="6" height="15" fill="rgb(217,16,29)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="724" width="6" height="15" fill="rgb(230,25,14)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="740" width="6" height="15" fill="rgb(231,219,17)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="756" width="6" height="15" fill="rgb(211,22,3)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.51%)</title><rect x="19" y="772" width="6" height="15" fill="rgb(248,79,43)"/><text x="22.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(211,187,10)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(243,7,22)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(210,7,34)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(223,11,47)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(231,149,45)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(249,164,19)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(235,2,25)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.26%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(217,149,27)"/><text x="25.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(249,196,49)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(250,229,12)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(224,89,14)"/><text x="25.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(211,33,51)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(235,110,52)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.26%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(206,146,28)"/><text x="25.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1012" width="3" height="15" fill="rgb(247,52,42)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1028" width="3" height="15" fill="rgb(235,11,13)"/><text x="25.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1044" width="3" height="15" fill="rgb(208,218,28)"/><text x="25.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="1060" width="3" height="15" fill="rgb(212,174,11)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1076" width="3" height="15" fill="rgb(206,99,12)"/><text x="25.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.26%)</title><rect x="22" y="1092" width="3" height="15" fill="rgb(221,117,54)"/><text x="25.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1108" width="3" height="15" fill="rgb(214,29,34)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1124" width="3" height="15" fill="rgb(209,73,38)"/><text x="25.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="1140" width="3" height="15" fill="rgb(209,213,4)"/><text x="25.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="1156" width="3" height="15" fill="rgb(220,91,24)"/><text x="25.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="1172" width="3" height="15" fill="rgb(247,137,52)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1124" width="6" height="15" fill="rgb(251,220,5)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1140" width="6" height="15" fill="rgb(216,165,6)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1156" width="6" height="15" fill="rgb(246,83,24)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="25" y="1172" width="6" height="15" fill="rgb(215,184,6)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1188" width="6" height="15" fill="rgb(242,83,21)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.51%)</title><rect x="25" y="1204" width="6" height="15" fill="rgb(241,29,5)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1220" width="6" height="15" fill="rgb(248,2,20)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1236" width="6" height="15" fill="rgb(234,33,24)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1252" width="6" height="15" fill="rgb(239,152,13)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="25" y="1268" width="6" height="15" fill="rgb(222,92,8)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="25" y="1284" width="6" height="15" fill="rgb(234,189,52)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.51%)</title><rect x="25" y="1300" width="6" height="15" fill="rgb(234,205,34)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.51%)</title><rect x="25" y="1316" width="6" height="15" fill="rgb(230,146,25)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.51%)</title><rect x="25" y="1332" width="6" height="15" fill="rgb(228,139,30)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.51%)</title><rect x="25" y="1348" width="6" height="15" fill="rgb(242,146,39)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.51%)</title><rect x="25" y="1364" width="6" height="15" fill="rgb(219,141,12)"/><text x="28.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.51%)</title><rect x="25" y="1380" width="6" height="15" fill="rgb(220,7,42)"/><text x="28.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (2 samples, 0.51%)</title><rect x="25" y="1396" width="6" height="15" fill="rgb(216,225,49)"/><text x="28.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.51%)</title><rect x="25" y="1412" width="6" height="15" fill="rgb(207,85,50)"/><text x="28.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.51%)</title><rect x="25" y="1428" width="6" height="15" fill="rgb(205,55,35)"/><text x="28.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1444" width="6" height="15" fill="rgb(236,74,4)"/><text x="28.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1460" width="6" height="15" fill="rgb(206,165,22)"/><text x="28.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1476" width="6" height="15" fill="rgb(205,82,19)"/><text x="28.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1492" width="6" height="15" fill="rgb(209,26,54)"/><text x="28.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1508" width="6" height="15" fill="rgb(234,151,30)"/><text x="28.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1524" width="6" height="15" fill="rgb(233,133,40)"/><text x="28.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1540" width="6" height="15" fill="rgb(241,141,45)"/><text x="28.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1556" width="6" height="15" fill="rgb(221,147,46)"/><text x="28.00" y="1566.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1572" width="6" height="15" fill="rgb(215,189,39)"/><text x="28.00" y="1582.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="25" y="1588" width="6" height="15" fill="rgb(245,203,45)"/><text x="28.00" y="1598.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="28" y="1604" width="3" height="15" fill="rgb(233,171,46)"/><text x="31.00" y="1614.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.26%)</title><rect x="28" y="1620" width="3" height="15" fill="rgb(226,144,34)"/><text x="31.00" y="1630.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="31" y="1588" width="3" height="15" fill="rgb(248,97,12)"/><text x="34.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="31" y="1604" width="3" height="15" fill="rgb(238,17,47)"/><text x="34.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="31" y="1620" width="3" height="15" fill="rgb(230,132,5)"/><text x="34.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="31" y="1636" width="3" height="15" fill="rgb(232,177,8)"/><text x="34.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1652" width="3" height="15" fill="rgb(236,72,36)"/><text x="34.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1668" width="3" height="15" fill="rgb(229,48,25)"/><text x="34.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1684" width="3" height="15" fill="rgb(223,159,0)"/><text x="34.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1700" width="3" height="15" fill="rgb(207,53,49)"/><text x="34.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1716" width="3" height="15" fill="rgb(231,14,36)"/><text x="34.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1732" width="3" height="15" fill="rgb(207,44,20)"/><text x="34.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1748" width="3" height="15" fill="rgb(230,122,5)"/><text x="34.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1764" width="3" height="15" fill="rgb(236,53,38)"/><text x="34.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1780" width="3" height="15" fill="rgb(205,137,0)"/><text x="34.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1796" width="3" height="15" fill="rgb(224,79,33)"/><text x="34.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1812" width="3" height="15" fill="rgb(233,128,22)"/><text x="34.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="31" y="1828" width="3" height="15" fill="rgb(237,35,43)"/><text x="34.00" y="1838.50"></text></g><g><title>analyze_node (jinja2/idtracking.py) (1 samples, 0.26%)</title><rect x="31" y="1844" width="3" height="15" fill="rgb(214,71,26)"/><text x="34.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1860" width="3" height="15" fill="rgb(232,197,15)"/><text x="34.00" y="1870.50"></text></g><g><title>visit_For (jinja2/idtracking.py) (1 samples, 0.26%)</title><rect x="31" y="1876" width="3" height="15" fill="rgb(246,155,41)"/><text x="34.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1892" width="3" height="15" fill="rgb(242,86,48)"/><text x="34.00" y="1902.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1908" width="3" height="15" fill="rgb(243,31,52)"/><text x="34.00" y="1918.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1924" width="3" height="15" fill="rgb(205,98,26)"/><text x="34.00" y="1934.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="31" y="1940" width="3" height="15" fill="rgb(235,89,21)"/><text x="34.00" y="1950.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="31" y="1956" width="3" height="15" fill="rgb(247,78,24)"/><text x="34.00" y="1966.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="31" y="1972" width="3" height="15" fill="rgb(231,134,0)"/><text x="34.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="484" width="12" height="15" fill="rgb(253,10,23)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="500" width="12" height="15" fill="rgb(251,146,17)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="516" width="12" height="15" fill="rgb(219,224,23)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="532" width="12" height="15" fill="rgb(244,218,28)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="548" width="12" height="15" fill="rgb(217,202,26)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="564" width="12" height="15" fill="rgb(208,173,10)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.02%)</title><rect x="25" y="580" width="12" height="15" fill="rgb(247,15,50)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="596" width="12" height="15" fill="rgb(238,29,21)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="612" width="12" height="15" fill="rgb(210,186,46)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="628" width="12" height="15" fill="rgb(230,112,23)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="644" width="12" height="15" fill="rgb(218,178,42)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="660" width="12" height="15" fill="rgb(254,190,37)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.02%)</title><rect x="25" y="676" width="12" height="15" fill="rgb(218,100,45)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="692" width="12" height="15" fill="rgb(214,63,40)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="708" width="12" height="15" fill="rgb(248,209,20)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="724" width="12" height="15" fill="rgb(227,67,48)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="740" width="12" height="15" fill="rgb(248,37,41)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="756" width="12" height="15" fill="rgb(251,152,26)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.02%)</title><rect x="25" y="772" width="12" height="15" fill="rgb(252,55,44)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="788" width="12" height="15" fill="rgb(246,105,10)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="804" width="12" height="15" fill="rgb(214,171,32)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="820" width="12" height="15" fill="rgb(246,122,7)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="836" width="12" height="15" fill="rgb(225,228,37)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="852" width="12" height="15" fill="rgb(241,217,52)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.02%)</title><rect x="25" y="868" width="12" height="15" fill="rgb(222,17,19)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="884" width="12" height="15" fill="rgb(248,35,5)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="900" width="12" height="15" fill="rgb(207,214,15)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="916" width="12" height="15" fill="rgb(224,108,38)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="932" width="12" height="15" fill="rgb(226,161,2)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="948" width="12" height="15" fill="rgb(251,123,36)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="964" width="12" height="15" fill="rgb(243,141,42)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="980" width="12" height="15" fill="rgb(226,112,49)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="996" width="12" height="15" fill="rgb(214,162,44)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.02%)</title><rect x="25" y="1012" width="12" height="15" fill="rgb(215,8,46)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="1028" width="12" height="15" fill="rgb(219,70,5)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="1044" width="12" height="15" fill="rgb(214,171,47)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="1060" width="12" height="15" fill="rgb(246,191,51)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="25" y="1076" width="12" height="15" fill="rgb(233,158,39)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="25" y="1092" width="12" height="15" fill="rgb(230,149,48)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.02%)</title><rect x="25" y="1108" width="12" height="15" fill="rgb(243,184,37)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1124" width="6" height="15" fill="rgb(217,130,48)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1140" width="6" height="15" fill="rgb(211,212,29)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1156" width="6" height="15" fill="rgb(249,102,41)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1172" width="6" height="15" fill="rgb(251,122,15)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1188" width="6" height="15" fill="rgb(205,30,10)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="31" y="1204" width="6" height="15" fill="rgb(236,82,40)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1220" width="6" height="15" fill="rgb(233,116,44)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.51%)</title><rect x="31" y="1236" width="6" height="15" fill="rgb(222,124,21)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1252" width="6" height="15" fill="rgb(223,223,26)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1268" width="6" height="15" fill="rgb(240,163,19)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1284" width="6" height="15" fill="rgb(217,196,15)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1300" width="6" height="15" fill="rgb(234,110,9)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1316" width="6" height="15" fill="rgb(254,107,10)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="31" y="1332" width="6" height="15" fill="rgb(209,155,20)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1348" width="6" height="15" fill="rgb(216,41,12)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.51%)</title><rect x="31" y="1364" width="6" height="15" fill="rgb(207,122,35)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1380" width="6" height="15" fill="rgb(208,85,33)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1396" width="6" height="15" fill="rgb(249,1,54)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1412" width="6" height="15" fill="rgb(239,155,7)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="31" y="1428" width="6" height="15" fill="rgb(253,47,8)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1444" width="6" height="15" fill="rgb(226,135,15)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.51%)</title><rect x="31" y="1460" width="6" height="15" fill="rgb(249,132,22)"/><text x="34.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1476" width="6" height="15" fill="rgb(219,7,39)"/><text x="34.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1492" width="6" height="15" fill="rgb(241,125,12)"/><text x="34.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1508" width="6" height="15" fill="rgb(237,215,48)"/><text x="34.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="31" y="1524" width="6" height="15" fill="rgb(242,107,8)"/><text x="34.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="31" y="1540" width="6" height="15" fill="rgb(218,94,9)"/><text x="34.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.51%)</title><rect x="31" y="1556" width="6" height="15" fill="rgb(212,57,47)"/><text x="34.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.51%)</title><rect x="31" y="1572" width="6" height="15" fill="rgb(238,180,13)"/><text x="34.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1588" width="3" height="15" fill="rgb(240,106,0)"/><text x="37.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1604" width="3" height="15" fill="rgb(243,61,33)"/><text x="37.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1620" width="3" height="15" fill="rgb(213,191,36)"/><text x="37.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1636" width="3" height="15" fill="rgb(206,120,40)"/><text x="37.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1652" width="3" height="15" fill="rgb(224,186,12)"/><text x="37.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="1668" width="3" height="15" fill="rgb(207,27,12)"/><text x="37.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="1684" width="3" height="15" fill="rgb(218,49,30)"/><text x="37.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1700" width="3" height="15" fill="rgb(236,82,9)"/><text x="37.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1716" width="3" height="15" fill="rgb(227,112,18)"/><text x="37.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1732" width="3" height="15" fill="rgb(244,26,45)"/><text x="37.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1748" width="3" height="15" fill="rgb(248,220,27)"/><text x="37.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1764" width="3" height="15" fill="rgb(233,89,23)"/><text x="37.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.26%)</title><rect x="34" y="1780" width="3" height="15" fill="rgb(244,7,29)"/><text x="37.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1796" width="3" height="15" fill="rgb(209,140,0)"/><text x="37.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1812" width="3" height="15" fill="rgb(221,178,24)"/><text x="37.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1828" width="3" height="15" fill="rgb(220,12,20)"/><text x="37.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1844" width="3" height="15" fill="rgb(243,89,23)"/><text x="37.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1860" width="3" height="15" fill="rgb(250,140,52)"/><text x="37.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="1876" width="3" height="15" fill="rgb(208,62,25)"/><text x="37.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1892" width="3" height="15" fill="rgb(214,224,24)"/><text x="37.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1908" width="3" height="15" fill="rgb(216,132,1)"/><text x="37.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1924" width="3" height="15" fill="rgb(233,140,10)"/><text x="37.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1940" width="3" height="15" fill="rgb(222,166,2)"/><text x="37.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1956" width="3" height="15" fill="rgb(221,209,49)"/><text x="37.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.26%)</title><rect x="34" y="1972" width="3" height="15" fill="rgb(225,200,46)"/><text x="37.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1988" width="3" height="15" fill="rgb(245,181,8)"/><text x="37.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2004" width="3" height="15" fill="rgb(229,80,41)"/><text x="37.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2020" width="3" height="15" fill="rgb(253,129,38)"/><text x="37.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2036" width="3" height="15" fill="rgb(248,86,47)"/><text x="37.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2052" width="3" height="15" fill="rgb(253,106,34)"/><text x="37.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="2068" width="3" height="15" fill="rgb(210,57,14)"/><text x="37.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2084" width="3" height="15" fill="rgb(235,45,25)"/><text x="37.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/coroutines.py) (1 samples, 0.26%)</title><rect x="34" y="2100" width="3" height="15" fill="rgb(224,101,52)"/><text x="37.00" y="2110.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2116" width="3" height="15" fill="rgb(225,162,46)"/><text x="37.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2132" width="3" height="15" fill="rgb(222,156,15)"/><text x="37.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2148" width="3" height="15" fill="rgb(246,102,32)"/><text x="37.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2164" width="3" height="15" fill="rgb(205,5,5)"/><text x="37.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2180" width="3" height="15" fill="rgb(236,167,13)"/><text x="37.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="2196" width="3" height="15" fill="rgb(241,95,45)"/><text x="37.00" y="2206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2212" width="3" height="15" fill="rgb(247,149,52)"/><text x="37.00" y="2222.50"></text></g><g><title>&lt;module&gt; (asyncio/base_futures.py) (1 samples, 0.26%)</title><rect x="34" y="2228" width="3" height="15" fill="rgb(229,25,14)"/><text x="37.00" y="2238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2244" width="3" height="15" fill="rgb(252,37,45)"/><text x="37.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2260" width="3" height="15" fill="rgb(213,89,10)"/><text x="37.00" y="2270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2276" width="3" height="15" fill="rgb(229,49,25)"/><text x="37.00" y="2286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2292" width="3" height="15" fill="rgb(232,124,35)"/><text x="37.00" y="2302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="2308" width="3" height="15" fill="rgb(254,98,11)"/><text x="37.00" y="2318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="2324" width="3" height="15" fill="rgb(224,115,24)"/><text x="37.00" y="2334.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="2340" width="3" height="15" fill="rgb(245,126,18)"/><text x="37.00" y="2350.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="2356" width="3" height="15" fill="rgb(254,157,7)"/><text x="37.00" y="2366.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.26%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(247,6,36)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1028" width="3" height="15" fill="rgb(216,207,40)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1044" width="3" height="15" fill="rgb(242,119,48)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(228,39,45)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1076" width="3" height="15" fill="rgb(206,128,2)"/><text x="40.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(251,183,38)"/><text x="40.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(216,75,2)"/><text x="40.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.53%)</title><rect x="25" y="340" width="18" height="15" fill="rgb(232,205,6)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="356" width="18" height="15" fill="rgb(219,48,39)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="372" width="18" height="15" fill="rgb(252,166,19)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="388" width="18" height="15" fill="rgb(215,178,47)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="25" y="404" width="18" height="15" fill="rgb(230,138,9)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="420" width="18" height="15" fill="rgb(205,222,28)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.53%)</title><rect x="25" y="436" width="18" height="15" fill="rgb(254,45,34)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="452" width="18" height="15" fill="rgb(252,24,12)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="25" y="468" width="18" height="15" fill="rgb(213,156,48)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="484" width="6" height="15" fill="rgb(253,26,45)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="500" width="6" height="15" fill="rgb(232,184,50)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="516" width="6" height="15" fill="rgb(212,42,53)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.51%)</title><rect x="37" y="532" width="6" height="15" fill="rgb(219,102,46)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="548" width="6" height="15" fill="rgb(234,166,52)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="564" width="6" height="15" fill="rgb(222,161,19)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="580" width="6" height="15" fill="rgb(205,103,30)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="596" width="6" height="15" fill="rgb(238,172,48)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="612" width="6" height="15" fill="rgb(253,140,16)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.51%)</title><rect x="37" y="628" width="6" height="15" fill="rgb(226,124,1)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="644" width="6" height="15" fill="rgb(221,32,6)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="660" width="6" height="15" fill="rgb(234,142,38)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="676" width="6" height="15" fill="rgb(242,148,14)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="692" width="6" height="15" fill="rgb(211,105,44)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="708" width="6" height="15" fill="rgb(233,115,53)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.51%)</title><rect x="37" y="724" width="6" height="15" fill="rgb(216,215,14)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="740" width="6" height="15" fill="rgb(212,8,35)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="756" width="6" height="15" fill="rgb(244,19,54)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="772" width="6" height="15" fill="rgb(248,180,13)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="788" width="6" height="15" fill="rgb(225,71,30)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="804" width="6" height="15" fill="rgb(231,3,49)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.51%)</title><rect x="37" y="820" width="6" height="15" fill="rgb(249,182,4)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="836" width="6" height="15" fill="rgb(246,195,6)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="852" width="6" height="15" fill="rgb(245,0,16)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="868" width="6" height="15" fill="rgb(211,116,2)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="884" width="6" height="15" fill="rgb(249,40,51)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="900" width="6" height="15" fill="rgb(221,210,43)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.51%)</title><rect x="37" y="916" width="6" height="15" fill="rgb(250,228,12)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="932" width="6" height="15" fill="rgb(206,34,42)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="948" width="6" height="15" fill="rgb(238,155,52)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="964" width="6" height="15" fill="rgb(211,25,40)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="37" y="980" width="6" height="15" fill="rgb(251,144,22)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="37" y="996" width="6" height="15" fill="rgb(231,95,32)"/><text x="40.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.26%)</title><rect x="40" y="1012" width="3" height="15" fill="rgb(214,170,33)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1028" width="3" height="15" fill="rgb(233,10,38)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1044" width="3" height="15" fill="rgb(208,45,33)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1060" width="3" height="15" fill="rgb(247,26,10)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1076" width="3" height="15" fill="rgb(220,93,20)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1092" width="3" height="15" fill="rgb(217,224,38)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/series.py) (1 samples, 0.26%)</title><rect x="40" y="1108" width="3" height="15" fill="rgb(208,170,18)"/><text x="43.00" y="1118.50"></text></g><g><title>SparseSeries (pandas/core/sparse/series.py) (1 samples, 0.26%)</title><rect x="40" y="1124" width="3" height="15" fill="rgb(241,130,1)"/><text x="43.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.26%)</title><rect x="40" y="1140" width="3" height="15" fill="rgb(210,204,42)"/><text x="43.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="40" y="1156" width="3" height="15" fill="rgb(239,78,25)"/><text x="43.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="40" y="1172" width="3" height="15" fill="rgb(224,189,24)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="628" width="3" height="15" fill="rgb(252,3,26)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="644" width="3" height="15" fill="rgb(232,157,17)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="660" width="3" height="15" fill="rgb(215,54,11)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="676" width="3" height="15" fill="rgb(248,220,4)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="692" width="3" height="15" fill="rgb(211,150,12)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="708" width="3" height="15" fill="rgb(207,162,33)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.26%)</title><rect x="43" y="724" width="3" height="15" fill="rgb(232,172,45)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="740" width="3" height="15" fill="rgb(235,107,52)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="756" width="3" height="15" fill="rgb(244,72,46)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="772" width="3" height="15" fill="rgb(241,15,21)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="788" width="3" height="15" fill="rgb(254,98,38)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="804" width="3" height="15" fill="rgb(233,222,13)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.26%)</title><rect x="43" y="820" width="3" height="15" fill="rgb(233,134,36)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="836" width="3" height="15" fill="rgb(240,115,16)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="852" width="3" height="15" fill="rgb(235,25,28)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="868" width="3" height="15" fill="rgb(245,226,12)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="884" width="3" height="15" fill="rgb(238,29,22)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="900" width="3" height="15" fill="rgb(230,228,45)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.26%)</title><rect x="43" y="916" width="3" height="15" fill="rgb(214,70,23)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="932" width="3" height="15" fill="rgb(231,143,23)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="948" width="3" height="15" fill="rgb(229,217,41)"/><text x="46.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="964" width="3" height="15" fill="rgb(228,229,37)"/><text x="46.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="980" width="3" height="15" fill="rgb(214,206,37)"/><text x="46.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="996" width="3" height="15" fill="rgb(243,132,3)"/><text x="46.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="1012" width="3" height="15" fill="rgb(214,175,38)"/><text x="46.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1028" width="3" height="15" fill="rgb(209,220,28)"/><text x="46.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="1044" width="3" height="15" fill="rgb(239,227,7)"/><text x="46.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.26%)</title><rect x="43" y="1060" width="3" height="15" fill="rgb(221,8,4)"/><text x="46.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="1076" width="3" height="15" fill="rgb(253,181,16)"/><text x="46.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="1092" width="3" height="15" fill="rgb(231,71,18)"/><text x="46.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="43" y="1108" width="3" height="15" fill="rgb(227,95,14)"/><text x="46.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1124" width="3" height="15" fill="rgb(239,34,31)"/><text x="46.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1140" width="3" height="15" fill="rgb(215,91,43)"/><text x="46.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1156" width="3" height="15" fill="rgb(237,206,48)"/><text x="46.00" y="1166.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1172" width="3" height="15" fill="rgb(242,212,36)"/><text x="46.00" y="1182.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1188" width="3" height="15" fill="rgb(217,2,18)"/><text x="46.00" y="1198.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1204" width="3" height="15" fill="rgb(226,99,41)"/><text x="46.00" y="1214.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="43" y="1220" width="3" height="15" fill="rgb(223,112,49)"/><text x="46.00" y="1230.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.26%)</title><rect x="43" y="1236" width="3" height="15" fill="rgb(245,46,8)"/><text x="46.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.05%)</title><rect x="25" y="244" width="24" height="15" fill="rgb(231,98,32)"/><text x="28.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.05%)</title><rect x="25" y="260" width="24" height="15" fill="rgb(210,87,41)"/><text x="28.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.05%)</title><rect x="25" y="276" width="24" height="15" fill="rgb(224,99,24)"/><text x="28.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.05%)</title><rect x="25" y="292" width="24" height="15" fill="rgb(249,158,41)"/><text x="28.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.05%)</title><rect x="25" y="308" width="24" height="15" fill="rgb(217,125,25)"/><text x="28.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.05%)</title><rect x="25" y="324" width="24" height="15" fill="rgb(211,40,40)"/><text x="28.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.51%)</title><rect x="43" y="340" width="6" height="15" fill="rgb(216,79,40)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="356" width="6" height="15" fill="rgb(222,35,15)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="372" width="6" height="15" fill="rgb(215,155,52)"/><text x="46.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="388" width="6" height="15" fill="rgb(231,201,43)"/><text x="46.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="404" width="6" height="15" fill="rgb(235,100,3)"/><text x="46.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="420" width="6" height="15" fill="rgb(220,98,7)"/><text x="46.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="436" width="6" height="15" fill="rgb(220,12,9)"/><text x="46.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="43" y="452" width="6" height="15" fill="rgb(251,151,29)"/><text x="46.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="468" width="6" height="15" fill="rgb(215,43,51)"/><text x="46.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.51%)</title><rect x="43" y="484" width="6" height="15" fill="rgb(215,161,53)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="500" width="6" height="15" fill="rgb(238,126,53)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="516" width="6" height="15" fill="rgb(232,68,45)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="532" width="6" height="15" fill="rgb(245,144,32)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="43" y="548" width="6" height="15" fill="rgb(243,71,9)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="564" width="6" height="15" fill="rgb(237,85,1)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.51%)</title><rect x="43" y="580" width="6" height="15" fill="rgb(224,159,26)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="596" width="6" height="15" fill="rgb(253,106,25)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="43" y="612" width="6" height="15" fill="rgb(221,88,35)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="628" width="3" height="15" fill="rgb(246,168,28)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="644" width="3" height="15" fill="rgb(207,5,1)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="660" width="3" height="15" fill="rgb(233,153,26)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.26%)</title><rect x="46" y="676" width="3" height="15" fill="rgb(240,51,40)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="692" width="3" height="15" fill="rgb(241,59,46)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="708" width="3" height="15" fill="rgb(234,203,46)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="724" width="3" height="15" fill="rgb(221,168,0)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="740" width="3" height="15" fill="rgb(232,181,42)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="756" width="3" height="15" fill="rgb(243,168,53)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.26%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(245,184,6)"/><text x="49.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py) (1 samples, 0.26%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(252,146,23)"/><text x="49.00" y="798.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(219,12,15)"/><text x="49.00" y="814.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(215,157,23)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="260" width="3" height="15" fill="rgb(251,72,33)"/><text x="52.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="276" width="3" height="15" fill="rgb(210,10,12)"/><text x="52.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="292" width="3" height="15" fill="rgb(231,67,50)"/><text x="52.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="308" width="3" height="15" fill="rgb(250,52,36)"/><text x="52.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="324" width="3" height="15" fill="rgb(240,198,1)"/><text x="52.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="340" width="3" height="15" fill="rgb(208,148,33)"/><text x="52.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="356" width="3" height="15" fill="rgb(245,116,19)"/><text x="52.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="372" width="3" height="15" fill="rgb(207,84,9)"/><text x="52.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="388" width="3" height="15" fill="rgb(234,2,0)"/><text x="52.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="404" width="3" height="15" fill="rgb(220,90,50)"/><text x="52.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="420" width="3" height="15" fill="rgb(205,99,18)"/><text x="52.00" y="430.50"></text></g><g><title>&lt;module&gt; (numpy/testing/_private/utils.py) (1 samples, 0.26%)</title><rect x="49" y="436" width="3" height="15" fill="rgb(249,151,35)"/><text x="52.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="452" width="3" height="15" fill="rgb(236,149,40)"/><text x="52.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="468" width="3" height="15" fill="rgb(208,76,15)"/><text x="52.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="484" width="3" height="15" fill="rgb(243,214,50)"/><text x="52.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="500" width="3" height="15" fill="rgb(209,68,26)"/><text x="52.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="516" width="3" height="15" fill="rgb(234,136,4)"/><text x="52.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="532" width="3" height="15" fill="rgb(220,14,6)"/><text x="52.00" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.26%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(236,101,43)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(224,92,11)"/><text x="55.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(218,32,47)"/><text x="55.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(228,123,6)"/><text x="55.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(249,26,43)"/><text x="55.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(246,3,0)"/><text x="55.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.26%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(250,177,39)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(235,141,15)"/><text x="55.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(239,74,8)"/><text x="55.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="644" width="3" height="15" fill="rgb(206,214,19)"/><text x="55.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="52" y="660" width="3" height="15" fill="rgb(242,148,9)"/><text x="55.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="676" width="3" height="15" fill="rgb(216,132,39)"/><text x="55.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.26%)</title><rect x="52" y="692" width="3" height="15" fill="rgb(206,172,19)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="708" width="3" height="15" fill="rgb(240,32,12)"/><text x="55.00" y="718.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(244,201,51)"/><text x="55.00" y="734.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(212,3,41)"/><text x="55.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.77%)</title><rect x="49" y="244" width="9" height="15" fill="rgb(211,105,45)"/><text x="52.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="260" width="6" height="15" fill="rgb(224,173,42)"/><text x="55.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="276" width="6" height="15" fill="rgb(236,88,36)"/><text x="55.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="292" width="6" height="15" fill="rgb(227,15,7)"/><text x="55.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="308" width="6" height="15" fill="rgb(209,30,2)"/><text x="55.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="324" width="6" height="15" fill="rgb(210,200,3)"/><text x="55.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="52" y="340" width="6" height="15" fill="rgb(249,140,5)"/><text x="55.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="356" width="6" height="15" fill="rgb(249,171,13)"/><text x="55.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.51%)</title><rect x="52" y="372" width="6" height="15" fill="rgb(224,159,5)"/><text x="55.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="388" width="6" height="15" fill="rgb(215,65,10)"/><text x="55.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="404" width="6" height="15" fill="rgb(209,81,34)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="420" width="6" height="15" fill="rgb(248,198,34)"/><text x="55.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="436" width="6" height="15" fill="rgb(209,146,44)"/><text x="55.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="452" width="6" height="15" fill="rgb(227,165,24)"/><text x="55.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="52" y="468" width="6" height="15" fill="rgb(245,7,43)"/><text x="55.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="52" y="484" width="6" height="15" fill="rgb(226,48,13)"/><text x="55.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.26%)</title><rect x="55" y="500" width="3" height="15" fill="rgb(243,143,44)"/><text x="58.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.26%)</title><rect x="55" y="516" width="3" height="15" fill="rgb(238,23,41)"/><text x="58.00" y="526.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="55" y="532" width="3" height="15" fill="rgb(214,1,4)"/><text x="58.00" y="542.50"></text></g><g><title>sub (re.py) (1 samples, 0.26%)</title><rect x="55" y="548" width="3" height="15" fill="rgb(234,125,18)"/><text x="58.00" y="558.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="55" y="564" width="3" height="15" fill="rgb(241,161,52)"/><text x="58.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="68" width="51" height="15" fill="rgb(239,91,25)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="84" width="51" height="15" fill="rgb(246,210,38)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="100" width="51" height="15" fill="rgb(221,126,13)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 4.35%)</title><rect x="10" y="116" width="51" height="15" fill="rgb(206,48,43)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="132" width="51" height="15" fill="rgb(250,173,16)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (17 samples, 4.35%)</title><rect x="10" y="148" width="51" height="15" fill="rgb(219,96,20)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="164" width="51" height="15" fill="rgb(232,161,42)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.35%)</title><rect x="10" y="180" width="51" height="15" fill="rgb(216,76,2)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.07%)</title><rect x="25" y="196" width="36" height="15" fill="rgb(254,216,33)"/><text x="28.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.07%)</title><rect x="25" y="212" width="36" height="15" fill="rgb(251,6,46)"/><text x="28.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.07%)</title><rect x="25" y="228" width="36" height="15" fill="rgb(240,66,31)"/><text x="28.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.26%)</title><rect x="58" y="244" width="3" height="15" fill="rgb(238,83,9)"/><text x="61.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="260" width="3" height="15" fill="rgb(210,216,31)"/><text x="61.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="276" width="3" height="15" fill="rgb(242,43,44)"/><text x="61.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="292" width="3" height="15" fill="rgb(212,186,1)"/><text x="61.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="58" y="308" width="3" height="15" fill="rgb(215,211,14)"/><text x="61.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="324" width="3" height="15" fill="rgb(244,128,23)"/><text x="61.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.26%)</title><rect x="58" y="340" width="3" height="15" fill="rgb(254,69,7)"/><text x="61.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="356" width="3" height="15" fill="rgb(240,54,25)"/><text x="61.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="372" width="3" height="15" fill="rgb(229,84,50)"/><text x="61.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="388" width="3" height="15" fill="rgb(213,54,32)"/><text x="61.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="58" y="404" width="3" height="15" fill="rgb(228,224,50)"/><text x="61.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="420" width="3" height="15" fill="rgb(252,30,53)"/><text x="61.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.26%)</title><rect x="58" y="436" width="3" height="15" fill="rgb(253,228,41)"/><text x="61.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="452" width="3" height="15" fill="rgb(231,35,50)"/><text x="61.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="468" width="3" height="15" fill="rgb(253,70,7)"/><text x="61.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="484" width="3" height="15" fill="rgb(232,202,53)"/><text x="61.00" y="494.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="500" width="3" height="15" fill="rgb(237,180,2)"/><text x="61.00" y="510.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="516" width="3" height="15" fill="rgb(246,164,36)"/><text x="61.00" y="526.50"></text></g><g><title>has_location (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="58" y="532" width="3" height="15" fill="rgb(216,59,32)"/><text x="61.00" y="542.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="64" y="116" width="3" height="15" fill="rgb(239,182,33)"/><text x="67.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="64" y="132" width="3" height="15" fill="rgb(237,146,41)"/><text x="67.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="64" y="148" width="3" height="15" fill="rgb(246,210,10)"/><text x="67.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="85" y="180" width="3" height="15" fill="rgb(221,62,36)"/><text x="88.00" y="190.50"></text></g><g><title>0x7f1e31740ff9 (?) (1 samples, 0.26%)</title><rect x="91" y="212" width="3" height="15" fill="rgb(216,150,35)"/><text x="94.00" y="222.50"></text></g><g><title>0x7f1e3173bef6 (?) (1 samples, 0.26%)</title><rect x="91" y="228" width="3" height="15" fill="rgb(229,186,27)"/><text x="94.00" y="238.50"></text></g><g><title>0x7f1e31730962 (?) (1 samples, 0.26%)</title><rect x="91" y="244" width="3" height="15" fill="rgb(249,201,52)"/><text x="94.00" y="254.50"></text></g><g><title>0x7f1e317647a7 (?) (1 samples, 0.26%)</title><rect x="91" y="260" width="3" height="15" fill="rgb(232,83,5)"/><text x="94.00" y="270.50"></text></g><g><title>0x7f1e31763f29 (?) (1 samples, 0.26%)</title><rect x="91" y="276" width="3" height="15" fill="rgb(218,144,44)"/><text x="94.00" y="286.50"></text></g><g><title>0x7f1e3175c291 (?) (1 samples, 0.26%)</title><rect x="91" y="292" width="3" height="15" fill="rgb(207,65,44)"/><text x="94.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.26%)</title><rect x="94" y="212" width="3" height="15" fill="rgb(226,163,29)"/><text x="97.00" y="222.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="100" y="228" width="3" height="15" fill="rgb(235,65,26)"/><text x="103.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="100" y="244" width="3" height="15" fill="rgb(245,163,12)"/><text x="103.00" y="254.50"></text></g><g><title>0x7f1e716f1124 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="106" y="260" width="3" height="15" fill="rgb(242,61,11)"/><text x="109.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="109" y="260" width="3" height="15" fill="rgb(240,190,9)"/><text x="112.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="112" y="292" width="3" height="15" fill="rgb(205,33,51)"/><text x="115.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="112" y="308" width="3" height="15" fill="rgb(205,54,49)"/><text x="115.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="112" y="324" width="3" height="15" fill="rgb(224,172,45)"/><text x="115.00" y="334.50"></text></g><g><title>0x7f1e716f0d50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="112" y="340" width="3" height="15" fill="rgb(218,197,40)"/><text x="115.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="115" y="292" width="3" height="15" fill="rgb(221,128,39)"/><text x="118.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="115" y="308" width="3" height="15" fill="rgb(245,95,22)"/><text x="118.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="118" y="292" width="6" height="15" fill="rgb(243,56,7)"/><text x="121.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="121" y="308" width="3" height="15" fill="rgb(226,38,14)"/><text x="124.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="121" y="324" width="3" height="15" fill="rgb(224,105,17)"/><text x="124.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="121" y="340" width="3" height="15" fill="rgb(237,87,37)"/><text x="124.00" y="350.50"></text></g><g><title>0x7f1e716d200a (libc-2.29.so) (1 samples, 0.26%)</title><rect x="121" y="356" width="3" height="15" fill="rgb(213,150,12)"/><text x="124.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="124" y="292" width="3" height="15" fill="rgb(248,13,35)"/><text x="127.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="127" y="292" width="3" height="15" fill="rgb(240,94,28)"/><text x="130.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="130" y="292" width="3" height="15" fill="rgb(241,70,36)"/><text x="133.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::AsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="130" y="308" width="3" height="15" fill="rgb(250,203,37)"/><text x="133.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="133" y="292" width="3" height="15" fill="rgb(214,82,44)"/><text x="136.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="136" y="356" width="3" height="15" fill="rgb(233,39,17)"/><text x="139.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="136" y="340" width="6" height="15" fill="rgb(208,158,23)"/><text x="139.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="139" y="356" width="3" height="15" fill="rgb(216,34,36)"/><text x="142.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="142" y="340" width="6" height="15" fill="rgb(234,166,13)"/><text x="145.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="356" width="3" height="15" fill="rgb(252,112,12)"/><text x="148.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="372" width="3" height="15" fill="rgb(207,62,23)"/><text x="148.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="388" width="3" height="15" fill="rgb(229,150,35)"/><text x="148.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="404" width="3" height="15" fill="rgb(212,192,6)"/><text x="148.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="420" width="3" height="15" fill="rgb(231,94,3)"/><text x="148.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="148" y="340" width="3" height="15" fill="rgb(248,103,16)"/><text x="151.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="148" y="356" width="3" height="15" fill="rgb(254,112,20)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="151" y="356" width="6" height="15" fill="rgb(230,215,20)"/><text x="154.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="154" y="372" width="3" height="15" fill="rgb(253,73,35)"/><text x="157.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="154" y="388" width="3" height="15" fill="rgb(231,8,45)"/><text x="157.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="356" width="3" height="15" fill="rgb(251,113,45)"/><text x="160.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="372" width="3" height="15" fill="rgb(208,187,51)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="388" width="3" height="15" fill="rgb(236,93,27)"/><text x="160.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="404" width="3" height="15" fill="rgb(213,124,46)"/><text x="160.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="420" width="3" height="15" fill="rgb(234,63,25)"/><text x="160.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="436" width="3" height="15" fill="rgb(233,14,32)"/><text x="160.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="157" y="452" width="3" height="15" fill="rgb(209,72,27)"/><text x="160.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.35%)</title><rect x="112" y="260" width="51" height="15" fill="rgb(234,226,22)"/><text x="115.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.35%)</title><rect x="112" y="276" width="51" height="15" fill="rgb(241,100,43)"/><text x="115.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.30%)</title><rect x="136" y="292" width="27" height="15" fill="rgb(230,179,37)"/><text x="139.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.30%)</title><rect x="136" y="308" width="27" height="15" fill="rgb(217,117,4)"/><text x="139.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.30%)</title><rect x="136" y="324" width="27" height="15" fill="rgb(253,10,7)"/><text x="139.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="151" y="340" width="12" height="15" fill="rgb(242,70,28)"/><text x="154.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="356" width="3" height="15" fill="rgb(207,65,39)"/><text x="163.00" y="366.50"></text></g><g><title>0x7f1e7184fe6d (libm-2.29.so) (1 samples, 0.26%)</title><rect x="160" y="372" width="3" height="15" fill="rgb(238,40,38)"/><text x="163.00" y="382.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="163" y="260" width="9" height="15" fill="rgb(242,69,21)"/><text x="166.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="169" y="276" width="3" height="15" fill="rgb(243,6,22)"/><text x="172.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="169" y="292" width="3" height="15" fill="rgb(207,207,11)"/><text x="172.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="169" y="308" width="3" height="15" fill="rgb(237,207,29)"/><text x="172.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="172" y="308" width="3" height="15" fill="rgb(206,228,4)"/><text x="175.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.51%)</title><rect x="172" y="276" width="7" height="15" fill="rgb(249,51,29)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.51%)</title><rect x="172" y="292" width="7" height="15" fill="rgb(245,66,22)"/><text x="175.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="175" y="308" width="4" height="15" fill="rgb(208,122,42)"/><text x="178.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="172" y="260" width="10" height="15" fill="rgb(234,81,36)"/><text x="175.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="179" y="276" width="3" height="15" fill="rgb(242,74,35)"/><text x="182.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="179" y="292" width="3" height="15" fill="rgb(253,12,12)"/><text x="182.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="179" y="308" width="3" height="15" fill="rgb(235,61,29)"/><text x="182.00" y="318.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="182" y="260" width="6" height="15" fill="rgb(251,189,1)"/><text x="185.00" y="270.50"></text></g><g><title>0x7f1e716d0900 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="188" y="308" width="3" height="15" fill="rgb(245,67,34)"/><text x="191.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="194" y="356" width="3" height="15" fill="rgb(209,78,39)"/><text x="197.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 7.93%)</title><rect x="106" y="244" width="94" height="15" fill="rgb(234,194,15)"/><text x="109.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="188" y="260" width="12" height="15" fill="rgb(212,88,33)"/><text x="191.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="188" y="276" width="12" height="15" fill="rgb(237,124,18)"/><text x="191.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="188" y="292" width="12" height="15" fill="rgb(240,60,0)"/><text x="191.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="191" y="308" width="9" height="15" fill="rgb(235,56,48)"/><text x="194.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="194" y="324" width="6" height="15" fill="rgb(212,111,18)"/><text x="197.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="194" y="340" width="6" height="15" fill="rgb(233,9,48)"/><text x="197.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="197" y="356" width="3" height="15" fill="rgb(215,69,32)"/><text x="200.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="197" y="372" width="3" height="15" fill="rgb(251,56,41)"/><text x="200.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="197" y="388" width="3" height="15" fill="rgb(232,201,37)"/><text x="200.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="200" y="244" width="3" height="15" fill="rgb(213,81,14)"/><text x="203.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="200" y="260" width="3" height="15" fill="rgb(228,182,46)"/><text x="203.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="203" y="244" width="3" height="15" fill="rgb(242,139,48)"/><text x="206.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (50 samples, 12.79%)</title><rect x="61" y="68" width="151" height="15" fill="rgb(225,191,52)"/><text x="64.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (50 samples, 12.79%)</title><rect x="61" y="84" width="151" height="15" fill="rgb(216,31,9)"/><text x="64.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (50 samples, 12.79%)</title><rect x="61" y="100" width="151" height="15" fill="rgb(234,176,50)"/><text x="64.00" y="110.50">profile (bench_Logi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 12.28%)</title><rect x="67" y="116" width="145" height="15" fill="rgb(217,201,24)"/><text x="70.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 11.76%)</title><rect x="73" y="132" width="139" height="15" fill="rgb(241,150,9)"/><text x="76.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (45 samples, 11.51%)</title><rect x="76" y="148" width="136" height="15" fill="rgb(214,115,11)"/><text x="79.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (45 samples, 11.51%)</title><rect x="76" y="164" width="136" height="15" fill="rgb(210,52,29)"/><text x="79.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (41 samples, 10.49%)</title><rect x="88" y="180" width="124" height="15" fill="rgb(205,140,36)"/><text x="91.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py) (40 samples, 10.23%)</title><rect x="91" y="196" width="121" height="15" fill="rgb(236,94,13)"/><text x="94.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 9.72%)</title><rect x="97" y="212" width="115" height="15" fill="rgb(239,149,54)"/><text x="100.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 9.21%)</title><rect x="103" y="228" width="109" height="15" fill="rgb(216,211,44)"/><text x="106.00" y="238.50">void pybind11..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="206" y="244" width="6" height="15" fill="rgb(234,135,2)"/><text x="209.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="206" y="260" width="6" height="15" fill="rgb(231,48,32)"/><text x="209.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="212" y="116" width="3" height="15" fill="rgb(220,188,5)"/><text x="215.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.51%)</title><rect x="272" y="180" width="6" height="15" fill="rgb(226,228,31)"/><text x="275.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.51%)</title><rect x="320" y="196" width="6" height="15" fill="rgb(252,34,14)"/><text x="323.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.51%)</title><rect x="338" y="212" width="6" height="15" fill="rgb(205,126,42)"/><text x="341.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.51%)</title><rect x="338" y="228" width="6" height="15" fill="rgb(234,89,38)"/><text x="341.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.26%)</title><rect x="341" y="244" width="3" height="15" fill="rgb(254,2,51)"/><text x="344.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(241,215,24)"/><text x="344.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(233,54,41)"/><text x="344.00" y="286.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="369" y="340" width="3" height="15" fill="rgb(236,135,16)"/><text x="372.00" y="350.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.26%)</title><rect x="372" y="340" width="3" height="15" fill="rgb(247,184,41)"/><text x="375.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="375" y="340" width="3" height="15" fill="rgb(252,42,29)"/><text x="378.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="375" y="356" width="3" height="15" fill="rgb(250,74,45)"/><text x="378.00" y="366.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (5 samples, 1.28%)</title><rect x="366" y="324" width="15" height="15" fill="rgb(248,134,37)"/><text x="369.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="378" y="340" width="3" height="15" fill="rgb(237,77,42)"/><text x="381.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 2.30%)</title><rect x="357" y="244" width="27" height="15" fill="rgb(222,219,12)"/><text x="360.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.30%)</title><rect x="357" y="260" width="27" height="15" fill="rgb(254,127,33)"/><text x="360.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 2.30%)</title><rect x="357" y="276" width="27" height="15" fill="rgb(243,202,53)"/><text x="360.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.53%)</title><rect x="366" y="292" width="18" height="15" fill="rgb(232,143,43)"/><text x="369.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (6 samples, 1.53%)</title><rect x="366" y="308" width="18" height="15" fill="rgb(218,125,24)"/><text x="369.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="381" y="324" width="3" height="15" fill="rgb(219,70,10)"/><text x="384.00" y="334.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (2 samples, 0.51%)</title><rect x="402" y="324" width="6" height="15" fill="rgb(207,168,8)"/><text x="405.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (2 samples, 0.51%)</title><rect x="402" y="340" width="6" height="15" fill="rgb(229,74,33)"/><text x="405.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.51%)</title><rect x="402" y="356" width="6" height="15" fill="rgb(216,194,46)"/><text x="405.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.26%)</title><rect x="405" y="372" width="3" height="15" fill="rgb(212,86,22)"/><text x="408.00" y="382.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="405" y="388" width="3" height="15" fill="rgb(242,169,33)"/><text x="408.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.53%)</title><rect x="393" y="276" width="18" height="15" fill="rgb(225,195,44)"/><text x="396.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 1.02%)</title><rect x="399" y="292" width="12" height="15" fill="rgb(246,123,6)"/><text x="402.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.77%)</title><rect x="402" y="308" width="9" height="15" fill="rgb(223,204,31)"/><text x="405.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.26%)</title><rect x="408" y="324" width="3" height="15" fill="rgb(232,74,46)"/><text x="411.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.26%)</title><rect x="408" y="340" width="3" height="15" fill="rgb(232,192,36)"/><text x="411.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 2.56%)</title><rect x="384" y="244" width="30" height="15" fill="rgb(225,54,35)"/><text x="387.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.05%)</title><rect x="390" y="260" width="24" height="15" fill="rgb(244,71,49)"/><text x="393.00" y="270.50">d..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.26%)</title><rect x="411" y="276" width="3" height="15" fill="rgb(253,82,45)"/><text x="414.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.77%)</title><rect x="414" y="260" width="9" height="15" fill="rgb(209,57,16)"/><text x="417.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.51%)</title><rect x="417" y="276" width="6" height="15" fill="rgb(212,122,4)"/><text x="420.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.51%)</title><rect x="417" y="292" width="6" height="15" fill="rgb(237,2,25)"/><text x="420.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.26%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(229,219,18)"/><text x="435.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="432" y="292" width="3" height="15" fill="rgb(226,164,35)"/><text x="435.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="432" y="308" width="3" height="15" fill="rgb(247,68,26)"/><text x="435.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.26%)</title><rect x="438" y="324" width="3" height="15" fill="rgb(239,17,49)"/><text x="441.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="438" y="340" width="3" height="15" fill="rgb(230,61,16)"/><text x="441.00" y="350.50"></text></g><g><title>0x7f1e716887a5 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="438" y="356" width="3" height="15" fill="rgb(210,225,34)"/><text x="441.00" y="366.50"></text></g><g><title>0x7f1e716f0d62 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(240,111,7)"/><text x="441.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.51%)</title><rect x="438" y="292" width="6" height="15" fill="rgb(205,36,35)"/><text x="441.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.51%)</title><rect x="438" y="308" width="6" height="15" fill="rgb(209,136,31)"/><text x="441.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.26%)</title><rect x="441" y="324" width="3" height="15" fill="rgb(224,89,8)"/><text x="444.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.26%)</title><rect x="441" y="340" width="3" height="15" fill="rgb(231,120,42)"/><text x="444.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="441" y="356" width="3" height="15" fill="rgb(225,226,28)"/><text x="444.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="441" y="372" width="3" height="15" fill="rgb(212,86,9)"/><text x="444.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="444" y="308" width="3" height="15" fill="rgb(206,148,14)"/><text x="447.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.26%)</title><rect x="447" y="308" width="3" height="15" fill="rgb(231,52,17)"/><text x="450.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.77%)</title><rect x="444" y="292" width="9" height="15" fill="rgb(205,4,48)"/><text x="447.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.26%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(207,217,16)"/><text x="453.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.79%)</title><rect x="435" y="276" width="21" height="15" fill="rgb(220,187,31)"/><text x="438.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="453" y="292" width="3" height="15" fill="rgb(237,2,18)"/><text x="456.00" y="302.50"></text></g><g><title>0x7f1e5c9b833d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="453" y="308" width="3" height="15" fill="rgb(231,124,1)"/><text x="456.00" y="318.50"></text></g><g><title>0x7f1e5c9da214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="453" y="324" width="3" height="15" fill="rgb(241,112,23)"/><text x="456.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.26%)</title><rect x="453" y="340" width="3" height="15" fill="rgb(238,1,10)"/><text x="456.00" y="350.50"></text></g><g><title>0x7f1e7184fe71 (libm-2.29.so) (1 samples, 0.26%)</title><rect x="453" y="356" width="3" height="15" fill="rgb(230,48,29)"/><text x="456.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.77%)</title><rect x="456" y="276" width="9" height="15" fill="rgb(240,219,42)"/><text x="459.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.26%)</title><rect x="462" y="292" width="3" height="15" fill="rgb(225,183,33)"/><text x="465.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 3.84%)</title><rect x="423" y="260" width="45" height="15" fill="rgb(250,218,11)"/><text x="426.00" y="270.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="465" y="276" width="3" height="15" fill="rgb(227,9,22)"/><text x="468.00" y="286.50"></text></g><g><title>0x7f1e716f1120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(232,14,14)"/><text x="468.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (41 samples, 10.49%)</title><rect x="348" y="228" width="123" height="15" fill="rgb(254,182,2)"/><text x="351.00" y="238.50">_run (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 4.86%)</title><rect x="414" y="244" width="57" height="15" fill="rgb(225,147,33)"/><text x="417.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="468" y="260" width="3" height="15" fill="rgb(233,70,13)"/><text x="471.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="489" y="260" width="3" height="15" fill="rgb(237,94,42)"/><text x="492.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="489" y="276" width="3" height="15" fill="rgb(209,166,38)"/><text x="492.00" y="286.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.26%)</title><rect x="498" y="276" width="3" height="15" fill="rgb(246,146,31)"/><text x="501.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="501" y="276" width="3" height="15" fill="rgb(242,57,41)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.26%)</title><rect x="501" y="292" width="3" height="15" fill="rgb(216,155,29)"/><text x="504.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.28%)</title><rect x="492" y="260" width="15" height="15" fill="rgb(245,155,19)"/><text x="495.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.26%)</title><rect x="504" y="276" width="3" height="15" fill="rgb(232,111,2)"/><text x="507.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.26%)</title><rect x="504" y="292" width="3" height="15" fill="rgb(228,80,50)"/><text x="507.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="504" y="308" width="3" height="15" fill="rgb(236,89,29)"/><text x="507.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.26%)</title><rect x="504" y="324" width="3" height="15" fill="rgb(245,172,2)"/><text x="507.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="510" y="324" width="3" height="15" fill="rgb(226,99,17)"/><text x="513.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="510" y="340" width="3" height="15" fill="rgb(244,66,30)"/><text x="513.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.26%)</title><rect x="510" y="356" width="3" height="15" fill="rgb(245,23,38)"/><text x="513.00" y="366.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="517" y="340" width="3" height="15" fill="rgb(208,135,2)"/><text x="520.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="523" y="372" width="3" height="15" fill="rgb(210,25,15)"/><text x="526.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="526" y="372" width="3" height="15" fill="rgb(233,27,22)"/><text x="529.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="526" y="388" width="3" height="15" fill="rgb(220,84,32)"/><text x="529.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="532" y="436" width="3" height="15" fill="rgb(234,54,2)"/><text x="535.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="532" y="452" width="3" height="15" fill="rgb(234,157,26)"/><text x="535.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="532" y="468" width="3" height="15" fill="rgb(252,97,43)"/><text x="535.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.77%)</title><rect x="529" y="372" width="9" height="15" fill="rgb(247,217,54)"/><text x="532.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.51%)</title><rect x="532" y="388" width="6" height="15" fill="rgb(242,24,15)"/><text x="535.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.51%)</title><rect x="532" y="404" width="6" height="15" fill="rgb(210,154,54)"/><text x="535.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.51%)</title><rect x="532" y="420" width="6" height="15" fill="rgb(214,14,44)"/><text x="535.00" y="430.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.26%)</title><rect x="535" y="436" width="3" height="15" fill="rgb(252,120,26)"/><text x="538.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.79%)</title><rect x="520" y="356" width="21" height="15" fill="rgb(212,227,11)"/><text x="523.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.26%)</title><rect x="538" y="372" width="3" height="15" fill="rgb(235,121,21)"/><text x="541.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="538" y="388" width="3" height="15" fill="rgb(217,37,4)"/><text x="541.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="538" y="404" width="3" height="15" fill="rgb(219,118,48)"/><text x="541.00" y="414.50"></text></g><g><title>array_sum (methods.c) (13 samples, 3.32%)</title><rect x="507" y="260" width="40" height="15" fill="rgb(231,84,49)"/><text x="510.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 3.07%)</title><rect x="510" y="276" width="37" height="15" fill="rgb(209,210,36)"/><text x="513.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 3.07%)</title><rect x="510" y="292" width="37" height="15" fill="rgb(217,132,16)"/><text x="513.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 3.07%)</title><rect x="510" y="308" width="37" height="15" fill="rgb(209,200,5)"/><text x="513.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.81%)</title><rect x="513" y="324" width="34" height="15" fill="rgb(223,26,34)"/><text x="516.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 2.30%)</title><rect x="520" y="340" width="27" height="15" fill="rgb(239,185,5)"/><text x="523.00" y="350.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.51%)</title><rect x="541" y="356" width="6" height="15" fill="rgb(208,123,41)"/><text x="544.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(254,164,16)"/><text x="547.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(215,141,16)"/><text x="547.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.51%)</title><rect x="547" y="276" width="6" height="15" fill="rgb(230,156,27)"/><text x="550.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.51%)</title><rect x="547" y="292" width="6" height="15" fill="rgb(236,189,21)"/><text x="550.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.51%)</title><rect x="547" y="308" width="6" height="15" fill="rgb(244,221,18)"/><text x="550.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="550" y="324" width="3" height="15" fill="rgb(246,124,18)"/><text x="553.00" y="334.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="556" y="292" width="3" height="15" fill="rgb(251,155,32)"/><text x="559.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="559" y="292" width="3" height="15" fill="rgb(248,227,54)"/><text x="562.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="559" y="308" width="3" height="15" fill="rgb(253,20,33)"/><text x="562.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="562" y="308" width="3" height="15" fill="rgb(231,229,23)"/><text x="565.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="562" y="324" width="3" height="15" fill="rgb(206,171,27)"/><text x="565.00" y="334.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.26%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(244,17,28)"/><text x="565.00" y="350.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.26%)</title><rect x="565" y="324" width="3" height="15" fill="rgb(250,213,12)"/><text x="568.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(245,210,42)"/><text x="571.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="568" y="340" width="3" height="15" fill="rgb(229,5,32)"/><text x="571.00" y="350.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.26%)</title><rect x="568" y="356" width="3" height="15" fill="rgb(235,205,11)"/><text x="571.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.02%)</title><rect x="562" y="292" width="12" height="15" fill="rgb(250,110,5)"/><text x="565.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.77%)</title><rect x="565" y="308" width="9" height="15" fill="rgb(210,83,13)"/><text x="568.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="571" y="324" width="3" height="15" fill="rgb(234,190,35)"/><text x="574.00" y="334.50"></text></g><g><title>0x7f1e716d0bc0 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="571" y="340" width="3" height="15" fill="rgb(228,82,6)"/><text x="574.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="574" y="292" width="3" height="15" fill="rgb(220,206,39)"/><text x="577.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="577" y="292" width="3" height="15" fill="rgb(223,30,24)"/><text x="580.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="577" y="308" width="3" height="15" fill="rgb(243,213,49)"/><text x="580.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="577" y="324" width="3" height="15" fill="rgb(241,225,31)"/><text x="580.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="577" y="340" width="3" height="15" fill="rgb(206,189,24)"/><text x="580.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (123 samples, 31.46%)</title><rect x="212" y="100" width="371" height="15" fill="rgb(233,56,33)"/><text x="215.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 31.20%)</title><rect x="215" y="116" width="368" height="15" fill="rgb(224,6,6)"/><text x="218.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (118 samples, 30.18%)</title><rect x="227" y="132" width="356" height="15" fill="rgb(248,229,28)"/><text x="230.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (115 samples, 29.41%)</title><rect x="236" y="148" width="347" height="15" fill="rgb(234,87,30)"/><text x="239.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (112 samples, 28.64%)</title><rect x="245" y="164" width="338" height="15" fill="rgb(218,62,34)"/><text x="248.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (101 samples, 25.83%)</title><rect x="278" y="180" width="305" height="15" fill="rgb(228,202,32)"/><text x="281.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (85 samples, 21.74%)</title><rect x="326" y="196" width="257" height="15" fill="rgb(209,37,40)"/><text x="329.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (79 samples, 20.20%)</title><rect x="344" y="212" width="239" height="15" fill="rgb(231,161,29)"/><text x="347.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (37 samples, 9.46%)</title><rect x="471" y="228" width="112" height="15" fill="rgb(205,133,19)"/><text x="474.00" y="238.50">_run (mlprodi..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 8.95%)</title><rect x="477" y="244" width="106" height="15" fill="rgb(250,113,24)"/><text x="480.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.07%)</title><rect x="547" y="260" width="36" height="15" fill="rgb(216,30,3)"/><text x="550.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.56%)</title><rect x="553" y="276" width="30" height="15" fill="rgb(214,200,33)"/><text x="556.00" y="286.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="580" y="292" width="3" height="15" fill="rgb(247,71,35)"/><text x="583.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="580" y="308" width="3" height="15" fill="rgb(221,23,21)"/><text x="583.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="580" y="324" width="3" height="15" fill="rgb(214,3,2)"/><text x="583.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="583" y="404" width="3" height="15" fill="rgb(207,7,42)"/><text x="586.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="583" y="420" width="3" height="15" fill="rgb(229,40,17)"/><text x="586.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="583" y="436" width="3" height="15" fill="rgb(221,195,4)"/><text x="586.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="583" y="452" width="3" height="15" fill="rgb(254,15,50)"/><text x="586.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="583" y="468" width="3" height="15" fill="rgb(238,217,22)"/><text x="586.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="583" y="484" width="3" height="15" fill="rgb(238,85,3)"/><text x="586.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="583" y="500" width="3" height="15" fill="rgb(218,171,11)"/><text x="586.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="583" y="516" width="3" height="15" fill="rgb(242,76,1)"/><text x="586.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="583" y="532" width="3" height="15" fill="rgb(254,57,47)"/><text x="586.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="583" y="548" width="3" height="15" fill="rgb(213,225,15)"/><text x="586.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="583" y="564" width="3" height="15" fill="rgb(238,179,4)"/><text x="586.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="583" y="580" width="3" height="15" fill="rgb(228,209,38)"/><text x="586.00" y="590.50"></text></g><g><title>set_environment (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="583" y="596" width="3" height="15" fill="rgb(209,22,47)"/><text x="586.00" y="606.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="583" y="612" width="3" height="15" fill="rgb(231,70,25)"/><text x="586.00" y="622.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (125 samples, 31.97%)</title><rect x="212" y="68" width="377" height="15" fill="rgb(233,123,43)"/><text x="215.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (125 samples, 31.97%)</title><rect x="212" y="84" width="377" height="15" fill="rgb(223,178,25)"/><text x="215.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.51%)</title><rect x="583" y="100" width="6" height="15" fill="rgb(220,213,29)"/><text x="586.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.51%)</title><rect x="583" y="116" width="6" height="15" fill="rgb(224,56,24)"/><text x="586.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.51%)</title><rect x="583" y="132" width="6" height="15" fill="rgb(207,47,45)"/><text x="586.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.51%)</title><rect x="583" y="148" width="6" height="15" fill="rgb(240,78,26)"/><text x="586.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.51%)</title><rect x="583" y="164" width="6" height="15" fill="rgb(221,211,21)"/><text x="586.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.51%)</title><rect x="583" y="180" width="6" height="15" fill="rgb(225,79,22)"/><text x="586.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.51%)</title><rect x="583" y="196" width="6" height="15" fill="rgb(210,64,9)"/><text x="586.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="212" width="6" height="15" fill="rgb(239,153,39)"/><text x="586.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="228" width="6" height="15" fill="rgb(226,156,45)"/><text x="586.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="244" width="6" height="15" fill="rgb(208,120,14)"/><text x="586.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="583" y="260" width="6" height="15" fill="rgb(250,18,38)"/><text x="586.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="276" width="6" height="15" fill="rgb(227,117,46)"/><text x="586.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.51%)</title><rect x="583" y="292" width="6" height="15" fill="rgb(235,116,28)"/><text x="586.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="308" width="6" height="15" fill="rgb(221,114,11)"/><text x="586.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="324" width="6" height="15" fill="rgb(239,42,35)"/><text x="586.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="340" width="6" height="15" fill="rgb(234,30,50)"/><text x="586.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="583" y="356" width="6" height="15" fill="rgb(236,134,37)"/><text x="586.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="583" y="372" width="6" height="15" fill="rgb(213,197,20)"/><text x="586.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.51%)</title><rect x="583" y="388" width="6" height="15" fill="rgb(208,29,23)"/><text x="586.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="586" y="404" width="3" height="15" fill="rgb(235,112,19)"/><text x="589.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.26%)</title><rect x="586" y="420" width="3" height="15" fill="rgb(215,15,54)"/><text x="589.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="586" y="436" width="3" height="15" fill="rgb(209,151,22)"/><text x="589.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="586" y="452" width="3" height="15" fill="rgb(220,56,14)"/><text x="589.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.26%)</title><rect x="586" y="468" width="3" height="15" fill="rgb(228,141,37)"/><text x="589.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.26%)</title><rect x="586" y="484" width="3" height="15" fill="rgb(219,227,17)"/><text x="589.00" y="494.50"></text></g><g><title>type_mapping (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="586" y="500" width="3" height="15" fill="rgb(245,174,51)"/><text x="589.00" y="510.50"></text></g><g><title>0x7f1e716f1120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="634" y="180" width="3" height="15" fill="rgb(229,197,8)"/><text x="637.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="637" y="180" width="3" height="15" fill="rgb(211,118,26)"/><text x="640.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.26%)</title><rect x="640" y="196" width="3" height="15" fill="rgb(220,193,32)"/><text x="643.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="643" y="196" width="3" height="15" fill="rgb(242,178,32)"/><text x="646.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="643" y="212" width="3" height="15" fill="rgb(225,126,46)"/><text x="646.00" y="222.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="643" y="228" width="3" height="15" fill="rgb(214,215,21)"/><text x="646.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.26%)</title><rect x="649" y="244" width="3" height="15" fill="rgb(214,192,7)"/><text x="652.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.28%)</title><rect x="640" y="180" width="15" height="15" fill="rgb(248,126,16)"/><text x="643.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.77%)</title><rect x="646" y="196" width="9" height="15" fill="rgb(241,54,14)"/><text x="649.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (3 samples, 0.77%)</title><rect x="646" y="212" width="9" height="15" fill="rgb(245,220,10)"/><text x="649.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.51%)</title><rect x="649" y="228" width="6" height="15" fill="rgb(248,133,2)"/><text x="652.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="652" y="244" width="3" height="15" fill="rgb(231,221,5)"/><text x="655.00" y="254.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.26%)</title><rect x="655" y="308" width="3" height="15" fill="rgb(237,59,16)"/><text x="658.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.51%)</title><rect x="655" y="244" width="6" height="15" fill="rgb(213,35,49)"/><text x="658.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.51%)</title><rect x="655" y="260" width="6" height="15" fill="rgb(228,141,6)"/><text x="658.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.51%)</title><rect x="655" y="276" width="6" height="15" fill="rgb(232,165,4)"/><text x="658.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.51%)</title><rect x="655" y="292" width="6" height="15" fill="rgb(221,181,36)"/><text x="658.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.26%)</title><rect x="658" y="308" width="3" height="15" fill="rgb(223,19,21)"/><text x="661.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="664" y="260" width="3" height="15" fill="rgb(226,51,42)"/><text x="667.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="664" y="276" width="3" height="15" fill="rgb(237,128,44)"/><text x="667.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (3 samples, 0.77%)</title><rect x="667" y="260" width="9" height="15" fill="rgb(226,120,9)"/><text x="670.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (2 samples, 0.51%)</title><rect x="670" y="276" width="6" height="15" fill="rgb(221,37,46)"/><text x="673.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.51%)</title><rect x="670" y="292" width="6" height="15" fill="rgb(230,19,40)"/><text x="673.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="676" y="308" width="3" height="15" fill="rgb(251,201,46)"/><text x="679.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.26%)</title><rect x="676" y="324" width="3" height="15" fill="rgb(241,177,24)"/><text x="679.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.26%)</title><rect x="676" y="340" width="3" height="15" fill="rgb(229,107,47)"/><text x="679.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.26%)</title><rect x="679" y="308" width="3" height="15" fill="rgb(217,127,23)"/><text x="682.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.77%)</title><rect x="676" y="292" width="10" height="15" fill="rgb(210,66,29)"/><text x="679.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="682" y="308" width="4" height="15" fill="rgb(230,216,40)"/><text x="685.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.26%)</title><rect x="682" y="324" width="4" height="15" fill="rgb(233,213,43)"/><text x="685.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.26%)</title><rect x="682" y="340" width="4" height="15" fill="rgb(250,6,31)"/><text x="685.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.26%)</title><rect x="686" y="292" width="3" height="15" fill="rgb(226,12,14)"/><text x="689.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.26%)</title><rect x="686" y="308" width="3" height="15" fill="rgb(250,65,44)"/><text x="689.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="686" y="324" width="3" height="15" fill="rgb(214,223,46)"/><text x="689.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="686" y="340" width="3" height="15" fill="rgb(246,7,37)"/><text x="689.00" y="350.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.26%)</title><rect x="689" y="324" width="3" height="15" fill="rgb(240,194,54)"/><text x="692.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.26%)</title><rect x="692" y="340" width="3" height="15" fill="rgb(219,120,21)"/><text x="695.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.26%)</title><rect x="692" y="356" width="3" height="15" fill="rgb(214,8,17)"/><text x="695.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.77%)</title><rect x="689" y="292" width="9" height="15" fill="rgb(221,127,38)"/><text x="692.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.77%)</title><rect x="689" y="308" width="9" height="15" fill="rgb(215,73,26)"/><text x="692.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.51%)</title><rect x="692" y="324" width="6" height="15" fill="rgb(224,99,5)"/><text x="695.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.26%)</title><rect x="695" y="340" width="3" height="15" fill="rgb(213,58,27)"/><text x="698.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 2.05%)</title><rect x="676" y="276" width="25" height="15" fill="rgb(244,107,20)"/><text x="679.00" y="286.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="698" y="292" width="3" height="15" fill="rgb(221,91,12)"/><text x="701.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.26%)</title><rect x="701" y="276" width="3" height="15" fill="rgb(227,79,24)"/><text x="704.00" y="286.50"></text></g><g><title>array_sum (methods.c) (19 samples, 4.86%)</title><rect x="655" y="180" width="58" height="15" fill="rgb(239,34,25)"/><text x="658.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 4.86%)</title><rect x="655" y="196" width="58" height="15" fill="rgb(243,144,18)"/><text x="658.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 4.86%)</title><rect x="655" y="212" width="58" height="15" fill="rgb(241,193,43)"/><text x="658.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 4.86%)</title><rect x="655" y="228" width="58" height="15" fill="rgb(233,225,42)"/><text x="658.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 4.35%)</title><rect x="661" y="244" width="52" height="15" fill="rgb(236,53,24)"/><text x="664.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 3.07%)</title><rect x="676" y="260" width="37" height="15" fill="rgb(225,170,9)"/><text x="679.00" y="270.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.77%)</title><rect x="704" y="276" width="9" height="15" fill="rgb(251,156,31)"/><text x="707.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.51%)</title><rect x="707" y="292" width="6" height="15" fill="rgb(252,119,6)"/><text x="710.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.51%)</title><rect x="707" y="308" width="6" height="15" fill="rgb(247,221,11)"/><text x="710.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="710" y="324" width="3" height="15" fill="rgb(210,168,37)"/><text x="713.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="725" y="196" width="3" height="15" fill="rgb(229,191,24)"/><text x="728.00" y="206.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.26%)</title><rect x="728" y="196" width="3" height="15" fill="rgb(206,178,34)"/><text x="731.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="728" y="212" width="3" height="15" fill="rgb(205,26,43)"/><text x="731.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="728" y="228" width="3" height="15" fill="rgb(254,193,3)"/><text x="731.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="728" y="244" width="3" height="15" fill="rgb(206,57,30)"/><text x="731.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="734" y="244" width="3" height="15" fill="rgb(240,186,39)"/><text x="737.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="743" y="292" width="3" height="15" fill="rgb(221,83,21)"/><text x="746.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.26%)</title><rect x="743" y="308" width="3" height="15" fill="rgb(242,43,1)"/><text x="746.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="746" y="292" width="3" height="15" fill="rgb(228,51,6)"/><text x="749.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.02%)</title><rect x="740" y="276" width="12" height="15" fill="rgb(213,83,27)"/><text x="743.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="749" y="292" width="3" height="15" fill="rgb(205,212,34)"/><text x="752.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="752" y="276" width="3" height="15" fill="rgb(250,169,26)"/><text x="755.00" y="286.50"></text></g><g><title>0x7f1e708f2e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="752" y="292" width="3" height="15" fill="rgb(212,193,29)"/><text x="755.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="755" y="292" width="3" height="15" fill="rgb(221,173,28)"/><text x="758.00" y="302.50"></text></g><g><title>array_add (number.c) (10 samples, 2.56%)</title><rect x="731" y="196" width="30" height="15" fill="rgb(218,76,42)"/><text x="734.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.56%)</title><rect x="731" y="212" width="30" height="15" fill="rgb(252,105,3)"/><text x="734.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.56%)</title><rect x="731" y="228" width="30" height="15" fill="rgb(253,88,46)"/><text x="734.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.05%)</title><rect x="737" y="244" width="24" height="15" fill="rgb(248,137,31)"/><text x="740.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.79%)</title><rect x="740" y="260" width="21" height="15" fill="rgb(224,59,48)"/><text x="743.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.51%)</title><rect x="755" y="276" width="6" height="15" fill="rgb(239,199,14)"/><text x="758.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="758" y="292" width="3" height="15" fill="rgb(210,190,22)"/><text x="761.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="761" y="196" width="3" height="15" fill="rgb(222,48,7)"/><text x="764.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="761" y="212" width="3" height="15" fill="rgb(216,153,1)"/><text x="764.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="761" y="228" width="3" height="15" fill="rgb(208,129,20)"/><text x="764.00" y="238.50"></text></g><g><title>0x7f1e717aecfa (libc-2.29.so) (1 samples, 0.26%)</title><rect x="812" y="212" width="3" height="15" fill="rgb(250,214,42)"/><text x="815.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.77%)</title><rect x="815" y="212" width="9" height="15" fill="rgb(252,184,6)"/><text x="818.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.51%)</title><rect x="824" y="212" width="6" height="15" fill="rgb(229,135,5)"/><text x="827.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.51%)</title><rect x="830" y="212" width="6" height="15" fill="rgb(250,198,41)"/><text x="833.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="851" y="228" width="4" height="15" fill="rgb(227,224,5)"/><text x="854.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="855" y="228" width="9" height="15" fill="rgb(214,7,54)"/><text x="858.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 2.56%)</title><rect x="836" y="212" width="31" height="15" fill="rgb(226,135,14)"/><text x="839.00" y="222.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="864" y="228" width="3" height="15" fill="rgb(238,138,2)"/><text x="867.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="915" y="228" width="3" height="15" fill="rgb(217,122,30)"/><text x="918.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (21 samples, 5.37%)</title><rect x="867" y="212" width="63" height="15" fill="rgb(218,120,30)"/><text x="870.00" y="222.50">_num_s..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.02%)</title><rect x="918" y="228" width="12" height="15" fill="rgb(228,69,33)"/><text x="921.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.26%)</title><rect x="927" y="244" width="3" height="15" fill="rgb(250,91,4)"/><text x="930.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.77%)</title><rect x="930" y="212" width="9" height="15" fill="rgb(211,117,9)"/><text x="933.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.51%)</title><rect x="933" y="228" width="6" height="15" fill="rgb(216,67,22)"/><text x="936.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (64 samples, 16.37%)</title><rect x="764" y="196" width="193" height="15" fill="rgb(244,181,3)"/><text x="767.00" y="206.50">check_array (sklearn/util..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.53%)</title><rect x="939" y="212" width="18" height="15" fill="rgb(212,125,39)"/><text x="942.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (5 samples, 1.28%)</title><rect x="942" y="228" width="15" height="15" fill="rgb(246,100,38)"/><text x="945.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.26%)</title><rect x="999" y="228" width="3" height="15" fill="rgb(249,8,1)"/><text x="1002.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 3.84%)</title><rect x="969" y="212" width="45" height="15" fill="rgb(249,225,23)"/><text x="972.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.02%)</title><rect x="1002" y="228" width="12" height="15" fill="rgb(253,20,49)"/><text x="1005.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 5.37%)</title><rect x="957" y="196" width="63" height="15" fill="rgb(233,193,45)"/><text x="960.00" y="206.50">check_..</text></g><g><title>isclass (inspect.py) (2 samples, 0.51%)</title><rect x="1014" y="212" width="6" height="15" fill="rgb(222,105,49)"/><text x="1017.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="1036" y="212" width="3" height="15" fill="rgb(231,29,40)"/><text x="1039.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.51%)</title><rect x="1039" y="212" width="6" height="15" fill="rgb(251,190,16)"/><text x="1042.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="1045" y="228" width="3" height="15" fill="rgb(216,147,35)"/><text x="1048.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="1045" y="244" width="3" height="15" fill="rgb(217,43,15)"/><text x="1048.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.26%)</title><rect x="1045" y="260" width="3" height="15" fill="rgb(223,160,9)"/><text x="1048.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.51%)</title><rect x="1048" y="260" width="6" height="15" fill="rgb(219,182,3)"/><text x="1051.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1054" y="276" width="3" height="15" fill="rgb(227,5,52)"/><text x="1057.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1054" y="292" width="3" height="15" fill="rgb(234,90,54)"/><text x="1057.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="1054" y="308" width="3" height="15" fill="rgb(207,83,20)"/><text x="1057.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="1054" y="324" width="3" height="15" fill="rgb(248,68,7)"/><text x="1057.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="1054" y="340" width="3" height="15" fill="rgb(253,11,24)"/><text x="1057.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="1054" y="356" width="3" height="15" fill="rgb(224,162,36)"/><text x="1057.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1054" y="372" width="3" height="15" fill="rgb(212,147,42)"/><text x="1057.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.51%)</title><rect x="1054" y="260" width="6" height="15" fill="rgb(206,120,6)"/><text x="1057.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1057" y="276" width="3" height="15" fill="rgb(253,160,22)"/><text x="1060.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1060" y="260" width="3" height="15" fill="rgb(244,201,27)"/><text x="1063.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="1060" y="276" width="3" height="15" fill="rgb(237,179,15)"/><text x="1063.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="1060" y="292" width="3" height="15" fill="rgb(249,76,17)"/><text x="1063.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="1060" y="308" width="3" height="15" fill="rgb(246,27,47)"/><text x="1063.00" y="318.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.26%)</title><rect x="1063" y="260" width="3" height="15" fill="rgb(229,132,11)"/><text x="1066.00" y="270.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.26%)</title><rect x="1066" y="260" width="3" height="15" fill="rgb(223,106,2)"/><text x="1069.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.26%)</title><rect x="1066" y="276" width="3" height="15" fill="rgb(239,138,36)"/><text x="1069.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1069" y="260" width="3" height="15" fill="rgb(216,119,21)"/><text x="1072.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.26%)</title><rect x="1072" y="260" width="3" height="15" fill="rgb(221,118,14)"/><text x="1075.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="1072" y="276" width="3" height="15" fill="rgb(222,212,21)"/><text x="1075.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1075" y="260" width="3" height="15" fill="rgb(237,130,51)"/><text x="1078.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.81%)</title><rect x="1048" y="228" width="33" height="15" fill="rgb(213,77,27)"/><text x="1051.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 2.81%)</title><rect x="1048" y="244" width="33" height="15" fill="rgb(253,145,40)"/><text x="1051.00" y="254.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1078" y="260" width="3" height="15" fill="rgb(235,188,51)"/><text x="1081.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (123 samples, 31.46%)</title><rect x="713" y="180" width="371" height="15" fill="rgb(212,80,42)"/><text x="716.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (21 samples, 5.37%)</title><rect x="1020" y="196" width="64" height="15" fill="rgb(237,39,7)"/><text x="1023.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.32%)</title><rect x="1045" y="212" width="39" height="15" fill="rgb(228,129,48)"/><text x="1048.00" y="222.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1081" y="228" width="3" height="15" fill="rgb(222,175,19)"/><text x="1084.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="1084" y="196" width="3" height="15" fill="rgb(246,193,49)"/><text x="1087.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="1084" y="212" width="3" height="15" fill="rgb(213,35,35)"/><text x="1087.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.26%)</title><rect x="1084" y="228" width="3" height="15" fill="rgb(228,142,21)"/><text x="1087.00" y="238.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1090" y="212" width="3" height="15" fill="rgb(252,51,23)"/><text x="1093.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1090" y="228" width="3" height="15" fill="rgb(208,83,39)"/><text x="1093.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1090" y="244" width="3" height="15" fill="rgb(253,88,21)"/><text x="1093.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.26%)</title><rect x="1093" y="212" width="3" height="15" fill="rgb(228,172,8)"/><text x="1096.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="1093" y="228" width="3" height="15" fill="rgb(226,96,28)"/><text x="1096.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="1093" y="244" width="3" height="15" fill="rgb(248,161,8)"/><text x="1096.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1096" y="260" width="3" height="15" fill="rgb(206,60,14)"/><text x="1099.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1096" y="276" width="3" height="15" fill="rgb(239,193,17)"/><text x="1099.00" y="286.50"></text></g><g><title>0x7f1e716d0bd8 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1099" y="276" width="3" height="15" fill="rgb(247,121,35)"/><text x="1102.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.77%)</title><rect x="1096" y="228" width="9" height="15" fill="rgb(229,200,18)"/><text x="1099.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.77%)</title><rect x="1096" y="244" width="9" height="15" fill="rgb(251,84,3)"/><text x="1099.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.51%)</title><rect x="1099" y="260" width="6" height="15" fill="rgb(248,158,38)"/><text x="1102.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1102" y="276" width="3" height="15" fill="rgb(214,172,3)"/><text x="1105.00" y="286.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="1102" y="292" width="3" height="15" fill="rgb(245,108,37)"/><text x="1105.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.51%)</title><rect x="1108" y="260" width="6" height="15" fill="rgb(224,55,54)"/><text x="1111.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1114" y="260" width="3" height="15" fill="rgb(218,114,2)"/><text x="1117.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.28%)</title><rect x="1105" y="228" width="15" height="15" fill="rgb(231,61,4)"/><text x="1108.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.28%)</title><rect x="1105" y="244" width="15" height="15" fill="rgb(247,170,16)"/><text x="1108.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1117" y="260" width="3" height="15" fill="rgb(243,143,42)"/><text x="1120.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1117" y="276" width="3" height="15" fill="rgb(234,11,7)"/><text x="1120.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 2.56%)</title><rect x="1096" y="212" width="30" height="15" fill="rgb(232,137,5)"/><text x="1099.00" y="222.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.51%)</title><rect x="1120" y="228" width="6" height="15" fill="rgb(220,101,4)"/><text x="1123.00" y="238.50"></text></g><g><title>0x7f1e5c9da13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1123" y="244" width="3" height="15" fill="rgb(224,163,10)"/><text x="1126.00" y="254.50"></text></g><g><title>0x7f1e5c9d9ef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1123" y="260" width="3" height="15" fill="rgb(230,50,21)"/><text x="1126.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (171 samples, 43.73%)</title><rect x="613" y="164" width="516" height="15" fill="rgb(240,30,0)"/><text x="616.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 3.84%)</title><rect x="1084" y="180" width="45" height="15" fill="rgb(212,138,7)"/><text x="1087.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 3.58%)</title><rect x="1087" y="196" width="42" height="15" fill="rgb(253,138,54)"/><text x="1090.00" y="206.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1126" y="212" width="3" height="15" fill="rgb(214,110,19)"/><text x="1129.00" y="222.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="1126" y="228" width="3" height="15" fill="rgb(245,135,27)"/><text x="1129.00" y="238.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.26%)</title><rect x="1129" y="164" width="3" height="15" fill="rgb(217,5,19)"/><text x="1132.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1129" y="180" width="3" height="15" fill="rgb(240,168,39)"/><text x="1132.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.28%)</title><rect x="1153" y="196" width="15" height="15" fill="rgb(237,30,40)"/><text x="1156.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 3.84%)</title><rect x="1138" y="180" width="45" height="15" fill="rgb(224,122,6)"/><text x="1141.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.28%)</title><rect x="1168" y="196" width="15" height="15" fill="rgb(231,204,26)"/><text x="1171.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 49.87%)</title><rect x="598" y="132" width="588" height="15" fill="rgb(232,36,34)"/><text x="601.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (195 samples, 49.87%)</title><rect x="598" y="148" width="588" height="15" fill="rgb(231,181,27)"/><text x="601.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 4.60%)</title><rect x="1132" y="164" width="54" height="15" fill="rgb(220,27,51)"/><text x="1135.00" y="174.50">check..</text></g><g><title>isclass (inspect.py) (1 samples, 0.26%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(239,33,7)"/><text x="1186.00" y="190.50"></text></g><g><title>all (391 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,203,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (391 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,134,32)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (199 samples, 50.90%)</title><rect x="589" y="68" width="601" height="15" fill="rgb(207,19,21)"/><text x="592.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (199 samples, 50.90%)</title><rect x="589" y="84" width="601" height="15" fill="rgb(238,75,50)"/><text x="592.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_floa..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py) (199 samples, 50.90%)</title><rect x="589" y="100" width="601" height="15" fill="rgb(237,173,25)"/><text x="592.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (198 samples, 50.64%)</title><rect x="592" y="116" width="598" height="15" fill="rgb(219,91,12)"/><text x="595.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(234,145,47)"/><text x="1189.00" y="142.50"></text></g></g></svg>