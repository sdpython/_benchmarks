<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1574" onload="init(evt)" viewBox="0 0 1200 1574" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1574" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1557.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1557.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:31) (1 samples, 0.31%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(240,99,7)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:11) (1 samples, 0.31%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(215,201,13)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:41) (1 samples, 0.31%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(251,149,9)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.31%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(219,84,16)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(225,90,14)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(234,141,15)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:233) (1 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(253,215,21)"/><text x="13.00" y="158.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(233,22,51)"/><text x="13.00" y="174.50"></text></g><g><title>0x7fca157e0db0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(218,62,38)"/><text x="13.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="13" y="116" width="4" height="15" fill="rgb(240,174,23)"/><text x="16.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="13" y="132" width="4" height="15" fill="rgb(254,104,31)"/><text x="16.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(232,78,49)"/><text x="16.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.31%)</title><rect x="32" y="164" width="3" height="15" fill="rgb(209,101,18)"/><text x="35.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (10 samples, 3.12%)</title><rect x="32" y="148" width="37" height="15" fill="rgb(246,106,8)"/><text x="35.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 2.81%)</title><rect x="35" y="164" width="34" height="15" fill="rgb(207,7,41)"/><text x="38.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.88%)</title><rect x="46" y="180" width="23" height="15" fill="rgb(240,181,25)"/><text x="49.00" y="190.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.62%)</title><rect x="61" y="196" width="8" height="15" fill="rgb(230,57,13)"/><text x="64.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.56%)</title><rect x="76" y="212" width="18" height="15" fill="rgb(241,140,18)"/><text x="79.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="91" y="228" width="3" height="15" fill="rgb(232,109,15)"/><text x="94.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (8 samples, 2.50%)</title><rect x="72" y="180" width="30" height="15" fill="rgb(240,154,46)"/><text x="75.00" y="190.50">de..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.19%)</title><rect x="76" y="196" width="26" height="15" fill="rgb(205,185,49)"/><text x="79.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.62%)</title><rect x="94" y="212" width="8" height="15" fill="rgb(218,204,11)"/><text x="97.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="98" y="228" width="4" height="15" fill="rgb(243,40,17)"/><text x="101.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (2 samples, 0.62%)</title><rect x="105" y="196" width="8" height="15" fill="rgb(238,139,18)"/><text x="108.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.31%)</title><rect x="109" y="212" width="4" height="15" fill="rgb(222,191,34)"/><text x="112.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.31%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(210,151,16)"/><text x="116.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.31%)</title><rect x="116" y="196" width="4" height="15" fill="rgb(234,14,27)"/><text x="119.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.31%)</title><rect x="120" y="196" width="4" height="15" fill="rgb(254,220,53)"/><text x="123.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.31%)</title><rect x="135" y="212" width="4" height="15" fill="rgb(240,112,52)"/><text x="138.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.62%)</title><rect x="139" y="212" width="7" height="15" fill="rgb(220,150,45)"/><text x="142.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.62%)</title><rect x="146" y="212" width="7" height="15" fill="rgb(226,219,36)"/><text x="149.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 2.81%)</title><rect x="124" y="196" width="33" height="15" fill="rgb(249,38,21)"/><text x="127.00" y="206.50">ch..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.31%)</title><rect x="153" y="212" width="4" height="15" fill="rgb(238,171,23)"/><text x="156.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.31%)</title><rect x="157" y="212" width="4" height="15" fill="rgb(228,186,17)"/><text x="160.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.31%)</title><rect x="161" y="212" width="3" height="15" fill="rgb(226,66,24)"/><text x="164.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.62%)</title><rect x="172" y="228" width="7" height="15" fill="rgb(222,11,7)"/><text x="175.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 2.19%)</title><rect x="157" y="196" width="26" height="15" fill="rgb(210,109,9)"/><text x="160.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.56%)</title><rect x="164" y="212" width="19" height="15" fill="rgb(226,216,25)"/><text x="167.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.31%)</title><rect x="179" y="228" width="4" height="15" fill="rgb(228,194,47)"/><text x="182.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.31%)</title><rect x="183" y="196" width="4" height="15" fill="rgb(218,50,22)"/><text x="186.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.31%)</title><rect x="183" y="212" width="4" height="15" fill="rgb(221,125,49)"/><text x="186.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.62%)</title><rect x="187" y="196" width="7" height="15" fill="rgb(208,201,40)"/><text x="190.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.62%)</title><rect x="187" y="212" width="7" height="15" fill="rgb(229,191,22)"/><text x="190.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.62%)</title><rect x="194" y="196" width="7" height="15" fill="rgb(238,200,29)"/><text x="197.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.31%)</title><rect x="198" y="212" width="3" height="15" fill="rgb(217,102,14)"/><text x="201.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.31%)</title><rect x="201" y="196" width="4" height="15" fill="rgb(241,165,8)"/><text x="204.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.62%)</title><rect x="205" y="212" width="7" height="15" fill="rgb(239,162,52)"/><text x="208.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.62%)</title><rect x="205" y="228" width="7" height="15" fill="rgb(237,194,13)"/><text x="208.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.56%)</title><rect x="205" y="196" width="18" height="15" fill="rgb(235,132,0)"/><text x="208.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (3 samples, 0.94%)</title><rect x="212" y="212" width="11" height="15" fill="rgb(207,107,31)"/><text x="215.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (2 samples, 0.62%)</title><rect x="216" y="228" width="7" height="15" fill="rgb(230,119,17)"/><text x="219.00" y="238.50"></text></g><g><title>0x7fca157f5757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="220" y="244" width="3" height="15" fill="rgb(232,192,46)"/><text x="223.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.56%)</title><rect x="223" y="212" width="19" height="15" fill="rgb(230,201,12)"/><text x="226.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.62%)</title><rect x="234" y="228" width="8" height="15" fill="rgb(216,189,37)"/><text x="237.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.19%)</title><rect x="223" y="196" width="26" height="15" fill="rgb(251,31,51)"/><text x="226.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.62%)</title><rect x="242" y="212" width="7" height="15" fill="rgb(241,129,4)"/><text x="245.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.31%)</title><rect x="246" y="228" width="3" height="15" fill="rgb(212,31,36)"/><text x="249.00" y="238.50"></text></g><g><title>0x7fca157f5b89 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="257" y="228" width="3" height="15" fill="rgb(236,127,43)"/><text x="260.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 1.25%)</title><rect x="249" y="212" width="15" height="15" fill="rgb(247,98,49)"/><text x="252.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="260" y="228" width="4" height="15" fill="rgb(220,31,40)"/><text x="263.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.31%)</title><rect x="264" y="212" width="4" height="15" fill="rgb(224,6,26)"/><text x="267.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.31%)</title><rect x="268" y="212" width="3" height="15" fill="rgb(249,93,50)"/><text x="271.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.94%)</title><rect x="271" y="212" width="11" height="15" fill="rgb(213,120,6)"/><text x="274.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.94%)</title><rect x="271" y="228" width="11" height="15" fill="rgb(242,126,16)"/><text x="274.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.62%)</title><rect x="275" y="244" width="7" height="15" fill="rgb(240,143,45)"/><text x="278.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (50 samples, 15.62%)</title><rect x="102" y="180" width="184" height="15" fill="rgb(244,224,49)"/><text x="105.00" y="190.50">decision_function (skle..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 3.12%)</title><rect x="249" y="196" width="37" height="15" fill="rgb(209,150,7)"/><text x="252.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.31%)</title><rect x="282" y="212" width="4" height="15" fill="rgb(236,40,26)"/><text x="285.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.31%)</title><rect x="282" y="228" width="4" height="15" fill="rgb(216,97,20)"/><text x="285.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.31%)</title><rect x="286" y="180" width="4" height="15" fill="rgb(241,135,9)"/><text x="289.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.62%)</title><rect x="290" y="180" width="7" height="15" fill="rgb(205,0,42)"/><text x="293.00" y="190.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.31%)</title><rect x="297" y="292" width="4" height="15" fill="rgb(210,159,16)"/><text x="300.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2590) (1 samples, 0.31%)</title><rect x="297" y="308" width="4" height="15" fill="rgb(245,185,21)"/><text x="300.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.62%)</title><rect x="297" y="260" width="8" height="15" fill="rgb(222,93,44)"/><text x="300.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.62%)</title><rect x="297" y="276" width="8" height="15" fill="rgb(230,166,7)"/><text x="300.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.31%)</title><rect x="301" y="292" width="4" height="15" fill="rgb(220,8,39)"/><text x="304.00" y="302.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.94%)</title><rect x="297" y="196" width="11" height="15" fill="rgb(229,52,23)"/><text x="300.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.94%)</title><rect x="297" y="212" width="11" height="15" fill="rgb(247,61,40)"/><text x="300.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.94%)</title><rect x="297" y="228" width="11" height="15" fill="rgb(241,120,7)"/><text x="300.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.94%)</title><rect x="297" y="244" width="11" height="15" fill="rgb(240,122,30)"/><text x="300.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1559) (1 samples, 0.31%)</title><rect x="305" y="260" width="3" height="15" fill="rgb(206,220,32)"/><text x="308.00" y="270.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.31%)</title><rect x="305" y="276" width="3" height="15" fill="rgb(208,159,39)"/><text x="308.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="308" y="196" width="4" height="15" fill="rgb(242,46,15)"/><text x="311.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="308" y="212" width="4" height="15" fill="rgb(210,102,2)"/><text x="311.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="308" y="228" width="4" height="15" fill="rgb(246,217,13)"/><text x="311.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.62%)</title><rect x="312" y="196" width="7" height="15" fill="rgb(215,53,6)"/><text x="315.00" y="206.50"></text></g><g><title>array_matrix_multiply (number.c:388) (1 samples, 0.31%)</title><rect x="323" y="212" width="4" height="15" fill="rgb(245,182,32)"/><text x="326.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.31%)</title><rect x="327" y="244" width="3" height="15" fill="rgb(246,103,15)"/><text x="330.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2397) (1 samples, 0.31%)</title><rect x="327" y="260" width="3" height="15" fill="rgb(251,161,16)"/><text x="330.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.31%)</title><rect x="330" y="276" width="4" height="15" fill="rgb(212,192,50)"/><text x="333.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (3 samples, 0.94%)</title><rect x="330" y="244" width="11" height="15" fill="rgb(225,46,12)"/><text x="333.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (3 samples, 0.94%)</title><rect x="330" y="260" width="11" height="15" fill="rgb(253,215,12)"/><text x="333.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (2 samples, 0.62%)</title><rect x="334" y="276" width="7" height="15" fill="rgb(252,37,14)"/><text x="337.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (2 samples, 0.62%)</title><rect x="334" y="292" width="7" height="15" fill="rgb(248,148,38)"/><text x="337.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (2 samples, 0.62%)</title><rect x="334" y="308" width="7" height="15" fill="rgb(228,202,51)"/><text x="337.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.31%)</title><rect x="341" y="260" width="4" height="15" fill="rgb(251,212,24)"/><text x="344.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2832) (1 samples, 0.31%)</title><rect x="345" y="276" width="4" height="15" fill="rgb(226,145,39)"/><text x="348.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.62%)</title><rect x="349" y="324" width="7" height="15" fill="rgb(222,57,21)"/><text x="352.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.62%)</title><rect x="349" y="340" width="7" height="15" fill="rgb(251,222,35)"/><text x="352.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.62%)</title><rect x="349" y="356" width="7" height="15" fill="rgb(241,57,3)"/><text x="352.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.62%)</title><rect x="349" y="372" width="7" height="15" fill="rgb(213,72,54)"/><text x="352.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (3 samples, 0.94%)</title><rect x="349" y="276" width="11" height="15" fill="rgb(216,154,29)"/><text x="352.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (3 samples, 0.94%)</title><rect x="349" y="292" width="11" height="15" fill="rgb(254,140,21)"/><text x="352.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.94%)</title><rect x="349" y="308" width="11" height="15" fill="rgb(225,45,23)"/><text x="352.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="356" y="324" width="4" height="15" fill="rgb(207,185,4)"/><text x="359.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.31%)</title><rect x="356" y="340" width="4" height="15" fill="rgb(247,7,2)"/><text x="359.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.31%)</title><rect x="356" y="356" width="4" height="15" fill="rgb(206,208,41)"/><text x="359.00" y="366.50"></text></g><g><title>0x7fca14a01d70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="360" y="324" width="4" height="15" fill="rgb(234,210,4)"/><text x="363.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="364" y="324" width="3" height="15" fill="rgb(240,47,18)"/><text x="367.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (3 samples, 0.94%)</title><rect x="360" y="308" width="11" height="15" fill="rgb(223,138,7)"/><text x="363.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="367" y="324" width="4" height="15" fill="rgb(233,31,36)"/><text x="370.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.31%)</title><rect x="371" y="308" width="4" height="15" fill="rgb(211,19,28)"/><text x="374.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.31%)</title><rect x="371" y="324" width="4" height="15" fill="rgb(245,154,25)"/><text x="374.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.31%)</title><rect x="375" y="308" width="3" height="15" fill="rgb(215,109,45)"/><text x="378.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (11 samples, 3.44%)</title><rect x="341" y="244" width="41" height="15" fill="rgb(226,33,35)"/><text x="344.00" y="254.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (10 samples, 3.12%)</title><rect x="345" y="260" width="37" height="15" fill="rgb(206,139,36)"/><text x="348.00" y="270.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (6 samples, 1.88%)</title><rect x="360" y="276" width="22" height="15" fill="rgb(205,212,45)"/><text x="363.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.88%)</title><rect x="360" y="292" width="22" height="15" fill="rgb(238,191,7)"/><text x="363.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.31%)</title><rect x="378" y="308" width="4" height="15" fill="rgb(220,27,30)"/><text x="381.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.31%)</title><rect x="378" y="324" width="4" height="15" fill="rgb(228,111,4)"/><text x="381.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="378" y="340" width="4" height="15" fill="rgb(222,120,46)"/><text x="381.00" y="350.50"></text></g><g><title>0x7fca157978c0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="378" y="356" width="4" height="15" fill="rgb(238,213,0)"/><text x="381.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2951) (1 samples, 0.31%)</title><rect x="382" y="244" width="4" height="15" fill="rgb(235,83,11)"/><text x="385.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.31%)</title><rect x="386" y="244" width="3" height="15" fill="rgb(235,23,13)"/><text x="389.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.31%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(240,194,22)"/><text x="389.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.31%)</title><rect x="386" y="276" width="3" height="15" fill="rgb(206,206,1)"/><text x="389.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="386" y="292" width="3" height="15" fill="rgb(233,105,1)"/><text x="389.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.31%)</title><rect x="389" y="244" width="4" height="15" fill="rgb(242,150,12)"/><text x="392.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.31%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(210,226,26)"/><text x="396.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="397" y="276" width="3" height="15" fill="rgb(251,55,52)"/><text x="400.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="397" y="292" width="3" height="15" fill="rgb(205,114,51)"/><text x="400.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="397" y="308" width="3" height="15" fill="rgb(205,158,34)"/><text x="400.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.62%)</title><rect x="397" y="244" width="7" height="15" fill="rgb(212,188,50)"/><text x="400.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.62%)</title><rect x="397" y="260" width="7" height="15" fill="rgb(223,42,47)"/><text x="400.00" y="270.50"></text></g><g><title>array_free (arrayobject.c:1776) (1 samples, 0.31%)</title><rect x="400" y="276" width="4" height="15" fill="rgb(241,213,28)"/><text x="403.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (24 samples, 7.50%)</title><rect x="319" y="196" width="89" height="15" fill="rgb(245,52,38)"/><text x="322.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 6.88%)</title><rect x="327" y="212" width="81" height="15" fill="rgb(217,165,15)"/><text x="330.00" y="222.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (22 samples, 6.88%)</title><rect x="327" y="228" width="81" height="15" fill="rgb(237,165,54)"/><text x="330.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3090) (1 samples, 0.31%)</title><rect x="404" y="244" width="4" height="15" fill="rgb(234,160,53)"/><text x="407.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (32 samples, 10.00%)</title><rect x="297" y="180" width="118" height="15" fill="rgb(227,139,31)"/><text x="300.00" y="190.50">decision_funct..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.62%)</title><rect x="408" y="196" width="7" height="15" fill="rgb(241,72,10)"/><text x="411.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.62%)</title><rect x="408" y="212" width="7" height="15" fill="rgb(219,6,5)"/><text x="411.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (95 samples, 29.69%)</title><rect x="69" y="164" width="350" height="15" fill="rgb(237,70,3)"/><text x="72.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.p..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.31%)</title><rect x="415" y="180" width="4" height="15" fill="rgb(246,164,2)"/><text x="418.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="423" y="196" width="3" height="15" fill="rgb(249,69,0)"/><text x="426.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.31%)</title><rect x="423" y="212" width="3" height="15" fill="rgb(206,117,22)"/><text x="426.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="426" y="196" width="4" height="15" fill="rgb(205,179,44)"/><text x="429.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.31%)</title><rect x="426" y="212" width="4" height="15" fill="rgb(251,17,47)"/><text x="429.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.31%)</title><rect x="426" y="228" width="4" height="15" fill="rgb(245,213,5)"/><text x="429.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.31%)</title><rect x="426" y="244" width="4" height="15" fill="rgb(219,50,48)"/><text x="429.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.31%)</title><rect x="426" y="260" width="4" height="15" fill="rgb(210,66,27)"/><text x="429.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1516) (1 samples, 0.31%)</title><rect x="426" y="276" width="4" height="15" fill="rgb(214,155,37)"/><text x="429.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.56%)</title><rect x="419" y="164" width="18" height="15" fill="rgb(227,53,45)"/><text x="422.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.25%)</title><rect x="423" y="180" width="14" height="15" fill="rgb(235,122,1)"/><text x="426.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.62%)</title><rect x="430" y="196" width="7" height="15" fill="rgb(223,124,19)"/><text x="433.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.31%)</title><rect x="434" y="212" width="3" height="15" fill="rgb(209,64,14)"/><text x="437.00" y="222.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.31%)</title><rect x="459" y="180" width="4" height="15" fill="rgb(222,183,0)"/><text x="462.00" y="190.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.31%)</title><rect x="463" y="180" width="4" height="15" fill="rgb(229,18,4)"/><text x="466.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.31%)</title><rect x="463" y="196" width="4" height="15" fill="rgb(252,24,30)"/><text x="466.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.31%)</title><rect x="463" y="212" width="4" height="15" fill="rgb(239,28,34)"/><text x="466.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="474" y="276" width="4" height="15" fill="rgb(242,208,32)"/><text x="477.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="474" y="292" width="4" height="15" fill="rgb(244,150,50)"/><text x="477.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="474" y="308" width="4" height="15" fill="rgb(218,106,47)"/><text x="477.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.62%)</title><rect x="474" y="228" width="8" height="15" fill="rgb(242,101,13)"/><text x="477.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.62%)</title><rect x="474" y="244" width="8" height="15" fill="rgb(222,204,7)"/><text x="477.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.62%)</title><rect x="474" y="260" width="8" height="15" fill="rgb(207,123,34)"/><text x="477.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.31%)</title><rect x="478" y="276" width="4" height="15" fill="rgb(210,110,43)"/><text x="481.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.31%)</title><rect x="482" y="260" width="3" height="15" fill="rgb(229,99,15)"/><text x="485.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.31%)</title><rect x="482" y="276" width="3" height="15" fill="rgb(205,85,2)"/><text x="485.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="482" y="292" width="3" height="15" fill="rgb(235,5,44)"/><text x="485.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.31%)</title><rect x="482" y="308" width="3" height="15" fill="rgb(232,185,9)"/><text x="485.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="485" y="324" width="4" height="15" fill="rgb(240,200,12)"/><text x="488.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.31%)</title><rect x="485" y="340" width="4" height="15" fill="rgb(242,159,27)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.31%)</title><rect x="485" y="356" width="4" height="15" fill="rgb(213,93,35)"/><text x="488.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:85) (1 samples, 0.31%)</title><rect x="489" y="324" width="4" height="15" fill="rgb(253,64,30)"/><text x="492.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.94%)</title><rect x="485" y="276" width="11" height="15" fill="rgb(249,182,7)"/><text x="488.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.94%)</title><rect x="485" y="292" width="11" height="15" fill="rgb(244,2,22)"/><text x="488.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.94%)</title><rect x="485" y="308" width="11" height="15" fill="rgb(250,220,44)"/><text x="488.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.31%)</title><rect x="493" y="324" width="3" height="15" fill="rgb(228,203,15)"/><text x="496.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.31%)</title><rect x="493" y="340" width="3" height="15" fill="rgb(220,72,6)"/><text x="496.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (6 samples, 1.88%)</title><rect x="496" y="292" width="22" height="15" fill="rgb(240,180,15)"/><text x="499.00" y="302.50">N..</text></g><g><title>mmap64 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="515" y="308" width="3" height="15" fill="rgb(222,139,1)"/><text x="518.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (8 samples, 2.50%)</title><rect x="496" y="276" width="30" height="15" fill="rgb(211,172,41)"/><text x="499.00" y="286.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.62%)</title><rect x="518" y="292" width="8" height="15" fill="rgb(216,186,43)"/><text x="521.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (2 samples, 0.62%)</title><rect x="518" y="308" width="8" height="15" fill="rgb(229,189,6)"/><text x="521.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (2 samples, 0.62%)</title><rect x="518" y="324" width="8" height="15" fill="rgb(218,83,0)"/><text x="521.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.31%)</title><rect x="526" y="276" width="3" height="15" fill="rgb(210,151,3)"/><text x="529.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.31%)</title><rect x="526" y="292" width="3" height="15" fill="rgb(249,74,44)"/><text x="529.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.31%)</title><rect x="529" y="276" width="4" height="15" fill="rgb(241,204,10)"/><text x="532.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.31%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(243,80,25)"/><text x="532.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.31%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(232,33,8)"/><text x="532.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1867) (1 samples, 0.31%)</title><rect x="529" y="324" width="4" height="15" fill="rgb(226,128,9)"/><text x="532.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (24 samples, 7.50%)</title><rect x="482" y="244" width="88" height="15" fill="rgb(219,200,19)"/><text x="485.00" y="254.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (23 samples, 7.19%)</title><rect x="485" y="260" width="85" height="15" fill="rgb(230,147,46)"/><text x="488.00" y="270.50">PyUFunc_Re..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (10 samples, 3.12%)</title><rect x="533" y="276" width="37" height="15" fill="rgb(233,112,47)"/><text x="536.00" y="286.50">PyU..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (10 samples, 3.12%)</title><rect x="533" y="292" width="37" height="15" fill="rgb(206,30,26)"/><text x="536.00" y="302.50">Npy..</text></g><g><title>__munmap (libc-2.29.so) (10 samples, 3.12%)</title><rect x="533" y="308" width="37" height="15" fill="rgb(247,90,46)"/><text x="536.00" y="318.50">__m..</text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.31%)</title><rect x="570" y="260" width="4" height="15" fill="rgb(241,203,23)"/><text x="573.00" y="270.50"></text></g><g><title>array_sum (methods.c:2215) (30 samples, 9.38%)</title><rect x="467" y="180" width="110" height="15" fill="rgb(221,51,49)"/><text x="470.00" y="190.50">array_sum (me..</text></g><g><title>forward_ndarray_method (methods.c:108) (30 samples, 9.38%)</title><rect x="467" y="196" width="110" height="15" fill="rgb(250,228,37)"/><text x="470.00" y="206.50">forward_ndarr..</text></g><g><title>_sum (numpy/core/_methods.py:38) (28 samples, 8.75%)</title><rect x="474" y="212" width="103" height="15" fill="rgb(207,39,4)"/><text x="477.00" y="222.50">_sum (numpy/..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (26 samples, 8.12%)</title><rect x="482" y="228" width="95" height="15" fill="rgb(246,114,44)"/><text x="485.00" y="238.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (2 samples, 0.62%)</title><rect x="570" y="244" width="7" height="15" fill="rgb(227,72,19)"/><text x="573.00" y="254.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.31%)</title><rect x="574" y="260" width="3" height="15" fill="rgb(221,199,48)"/><text x="577.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="577" y="180" width="4" height="15" fill="rgb(222,39,9)"/><text x="580.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="577" y="196" width="4" height="15" fill="rgb(226,1,3)"/><text x="580.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="577" y="212" width="4" height="15" fill="rgb(250,79,37)"/><text x="580.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.31%)</title><rect x="577" y="228" width="4" height="15" fill="rgb(248,1,41)"/><text x="580.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="581" y="196" width="4" height="15" fill="rgb(230,13,0)"/><text x="584.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.31%)</title><rect x="581" y="212" width="4" height="15" fill="rgb(233,113,12)"/><text x="584.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.31%)</title><rect x="581" y="228" width="4" height="15" fill="rgb(244,83,28)"/><text x="584.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.31%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(216,7,3)"/><text x="584.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.31%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(205,206,48)"/><text x="584.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.62%)</title><rect x="581" y="180" width="7" height="15" fill="rgb(236,196,47)"/><text x="584.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="585" y="196" width="3" height="15" fill="rgb(206,214,15)"/><text x="588.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.31%)</title><rect x="585" y="212" width="3" height="15" fill="rgb(244,156,33)"/><text x="588.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.31%)</title><rect x="585" y="228" width="3" height="15" fill="rgb(242,189,19)"/><text x="588.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="585" y="244" width="3" height="15" fill="rgb(238,5,53)"/><text x="588.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.31%)</title><rect x="585" y="260" width="3" height="15" fill="rgb(223,66,35)"/><text x="588.00" y="270.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:853) (1 samples, 0.31%)</title><rect x="585" y="276" width="3" height="15" fill="rgb(208,215,29)"/><text x="588.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (155 samples, 48.44%)</title><rect x="21" y="132" width="571" height="15" fill="rgb(209,127,19)"/><text x="24.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (142 samples, 44.38%)</title><rect x="69" y="148" width="523" height="15" fill="rgb(213,121,40)"/><text x="72.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (42 samples, 13.12%)</title><rect x="437" y="164" width="155" height="15" fill="rgb(208,60,4)"/><text x="440.00" y="174.50">_predict_proba_lr (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="588" y="180" width="4" height="15" fill="rgb(216,205,15)"/><text x="591.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="588" y="196" width="4" height="15" fill="rgb(229,73,42)"/><text x="591.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:38) (158 samples, 49.38%)</title><rect x="13" y="52" width="583" height="15" fill="rgb(247,216,51)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_f..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:37) (158 samples, 49.38%)</title><rect x="13" y="68" width="583" height="15" fill="rgb(218,48,52)"/><text x="16.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:29) (158 samples, 49.38%)</title><rect x="13" y="84" width="583" height="15" fill="rgb(240,113,21)"/><text x="16.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:23) (158 samples, 49.38%)</title><rect x="13" y="100" width="583" height="15" fill="rgb(213,65,20)"/><text x="16.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (157 samples, 49.06%)</title><rect x="17" y="116" width="579" height="15" fill="rgb(221,189,20)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="592" y="132" width="4" height="15" fill="rgb(250,62,24)"/><text x="595.00" y="142.50"></text></g><g><title>0x7fca158bd134 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="592" y="148" width="4" height="15" fill="rgb(222,210,24)"/><text x="595.00" y="158.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.31%)</title><rect x="596" y="852" width="4" height="15" fill="rgb(251,32,10)"/><text x="599.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.31%)</title><rect x="596" y="868" width="4" height="15" fill="rgb(227,36,31)"/><text x="599.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.31%)</title><rect x="596" y="884" width="4" height="15" fill="rgb(243,135,38)"/><text x="599.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="596" y="900" width="4" height="15" fill="rgb(248,63,19)"/><text x="599.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="596" y="916" width="4" height="15" fill="rgb(225,108,36)"/><text x="599.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.31%)</title><rect x="596" y="932" width="4" height="15" fill="rgb(218,1,21)"/><text x="599.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.31%)</title><rect x="596" y="948" width="4" height="15" fill="rgb(231,65,13)"/><text x="599.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.31%)</title><rect x="596" y="964" width="4" height="15" fill="rgb(236,67,39)"/><text x="599.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:134) (1 samples, 0.31%)</title><rect x="596" y="980" width="4" height="15" fill="rgb(244,217,18)"/><text x="599.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="600" y="852" width="3" height="15" fill="rgb(212,174,12)"/><text x="603.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="600" y="868" width="3" height="15" fill="rgb(253,207,37)"/><text x="603.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.31%)</title><rect x="600" y="884" width="3" height="15" fill="rgb(234,163,49)"/><text x="603.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.31%)</title><rect x="600" y="900" width="3" height="15" fill="rgb(225,84,15)"/><text x="603.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.31%)</title><rect x="600" y="916" width="3" height="15" fill="rgb(228,43,10)"/><text x="603.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.31%)</title><rect x="600" y="932" width="3" height="15" fill="rgb(237,114,38)"/><text x="603.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.31%)</title><rect x="600" y="948" width="3" height="15" fill="rgb(254,10,54)"/><text x="603.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.31%)</title><rect x="600" y="964" width="3" height="15" fill="rgb(215,15,44)"/><text x="603.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.31%)</title><rect x="600" y="980" width="3" height="15" fill="rgb(234,8,19)"/><text x="603.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.31%)</title><rect x="600" y="996" width="3" height="15" fill="rgb(229,34,24)"/><text x="603.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.31%)</title><rect x="600" y="1012" width="3" height="15" fill="rgb(241,48,10)"/><text x="603.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="600" y="1028" width="3" height="15" fill="rgb(248,87,34)"/><text x="603.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.94%)</title><rect x="596" y="820" width="11" height="15" fill="rgb(221,71,35)"/><text x="599.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.94%)</title><rect x="596" y="836" width="11" height="15" fill="rgb(249,192,10)"/><text x="599.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.31%)</title><rect x="603" y="852" width="4" height="15" fill="rgb(210,199,29)"/><text x="606.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="603" y="868" width="4" height="15" fill="rgb(226,22,46)"/><text x="606.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.31%)</title><rect x="603" y="884" width="4" height="15" fill="rgb(235,121,28)"/><text x="606.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.31%)</title><rect x="603" y="900" width="4" height="15" fill="rgb(220,186,41)"/><text x="606.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="603" y="916" width="4" height="15" fill="rgb(216,227,15)"/><text x="606.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="603" y="932" width="4" height="15" fill="rgb(242,98,18)"/><text x="606.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="603" y="948" width="4" height="15" fill="rgb(231,123,54)"/><text x="606.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.31%)</title><rect x="603" y="964" width="4" height="15" fill="rgb(238,72,14)"/><text x="606.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.31%)</title><rect x="603" y="980" width="4" height="15" fill="rgb(215,51,9)"/><text x="606.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="603" y="996" width="4" height="15" fill="rgb(214,13,22)"/><text x="606.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="603" y="1012" width="4" height="15" fill="rgb(241,168,18)"/><text x="606.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (4 samples, 1.25%)</title><rect x="596" y="148" width="15" height="15" fill="rgb(253,161,21)"/><text x="599.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="164" width="15" height="15" fill="rgb(205,216,52)"/><text x="599.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="596" y="180" width="15" height="15" fill="rgb(218,146,49)"/><text x="599.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="196" width="15" height="15" fill="rgb(212,53,21)"/><text x="599.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="212" width="15" height="15" fill="rgb(205,180,46)"/><text x="599.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="228" width="15" height="15" fill="rgb(245,175,4)"/><text x="599.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="244" width="15" height="15" fill="rgb(222,107,0)"/><text x="599.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="260" width="15" height="15" fill="rgb(224,29,21)"/><text x="599.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="276" width="15" height="15" fill="rgb(238,81,15)"/><text x="599.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.25%)</title><rect x="596" y="292" width="15" height="15" fill="rgb(252,101,23)"/><text x="599.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="308" width="15" height="15" fill="rgb(207,98,35)"/><text x="599.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="324" width="15" height="15" fill="rgb(211,116,39)"/><text x="599.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="340" width="15" height="15" fill="rgb(217,80,19)"/><text x="599.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="356" width="15" height="15" fill="rgb(225,222,25)"/><text x="599.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="372" width="15" height="15" fill="rgb(219,27,0)"/><text x="599.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.25%)</title><rect x="596" y="388" width="15" height="15" fill="rgb(213,43,44)"/><text x="599.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="404" width="15" height="15" fill="rgb(241,48,38)"/><text x="599.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="420" width="15" height="15" fill="rgb(213,47,33)"/><text x="599.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="436" width="15" height="15" fill="rgb(222,30,5)"/><text x="599.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="452" width="15" height="15" fill="rgb(241,185,35)"/><text x="599.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="468" width="15" height="15" fill="rgb(229,90,16)"/><text x="599.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.25%)</title><rect x="596" y="484" width="15" height="15" fill="rgb(242,0,9)"/><text x="599.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="500" width="15" height="15" fill="rgb(223,101,49)"/><text x="599.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="516" width="15" height="15" fill="rgb(210,202,6)"/><text x="599.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="532" width="15" height="15" fill="rgb(214,157,8)"/><text x="599.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="548" width="15" height="15" fill="rgb(227,54,6)"/><text x="599.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="564" width="15" height="15" fill="rgb(218,25,25)"/><text x="599.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.25%)</title><rect x="596" y="580" width="15" height="15" fill="rgb(244,214,44)"/><text x="599.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="596" width="15" height="15" fill="rgb(247,51,28)"/><text x="599.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="596" y="612" width="15" height="15" fill="rgb(244,109,39)"/><text x="599.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="628" width="15" height="15" fill="rgb(211,194,37)"/><text x="599.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="644" width="15" height="15" fill="rgb(214,146,17)"/><text x="599.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="660" width="15" height="15" fill="rgb(242,0,38)"/><text x="599.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="676" width="15" height="15" fill="rgb(241,199,12)"/><text x="599.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="692" width="15" height="15" fill="rgb(231,150,2)"/><text x="599.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="708" width="15" height="15" fill="rgb(243,179,37)"/><text x="599.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.25%)</title><rect x="596" y="724" width="15" height="15" fill="rgb(248,12,23)"/><text x="599.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="596" y="740" width="15" height="15" fill="rgb(231,175,54)"/><text x="599.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="596" y="756" width="15" height="15" fill="rgb(237,85,24)"/><text x="599.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="596" y="772" width="15" height="15" fill="rgb(216,84,18)"/><text x="599.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="596" y="788" width="15" height="15" fill="rgb(214,166,50)"/><text x="599.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="596" y="804" width="15" height="15" fill="rgb(246,178,29)"/><text x="599.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.31%)</title><rect x="607" y="820" width="4" height="15" fill="rgb(245,151,30)"/><text x="610.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="607" y="836" width="4" height="15" fill="rgb(212,106,15)"/><text x="610.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="607" y="852" width="4" height="15" fill="rgb(235,34,41)"/><text x="610.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="607" y="868" width="4" height="15" fill="rgb(246,203,28)"/><text x="610.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="607" y="884" width="4" height="15" fill="rgb(221,112,32)"/><text x="610.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="607" y="900" width="4" height="15" fill="rgb(206,40,25)"/><text x="610.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.31%)</title><rect x="607" y="916" width="4" height="15" fill="rgb(214,13,13)"/><text x="610.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="607" y="932" width="4" height="15" fill="rgb(210,24,53)"/><text x="610.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="607" y="948" width="4" height="15" fill="rgb(234,211,9)"/><text x="610.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.31%)</title><rect x="607" y="964" width="4" height="15" fill="rgb(254,221,13)"/><text x="610.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.31%)</title><rect x="607" y="980" width="4" height="15" fill="rgb(222,181,19)"/><text x="610.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.31%)</title><rect x="607" y="996" width="4" height="15" fill="rgb(236,35,17)"/><text x="610.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="607" y="1012" width="4" height="15" fill="rgb(208,155,50)"/><text x="610.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="607" y="1028" width="4" height="15" fill="rgb(238,223,8)"/><text x="610.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="607" y="1044" width="4" height="15" fill="rgb(229,11,14)"/><text x="610.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="607" y="1060" width="4" height="15" fill="rgb(250,158,22)"/><text x="610.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="607" y="1076" width="4" height="15" fill="rgb(216,127,36)"/><text x="610.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5151) (1 samples, 0.31%)</title><rect x="607" y="1092" width="4" height="15" fill="rgb(249,59,6)"/><text x="610.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:4255) (1 samples, 0.31%)</title><rect x="607" y="1108" width="4" height="15" fill="rgb(234,137,43)"/><text x="610.00" y="1118.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3745) (1 samples, 0.31%)</title><rect x="607" y="1124" width="4" height="15" fill="rgb(251,114,50)"/><text x="610.00" y="1134.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.31%)</title><rect x="607" y="1140" width="4" height="15" fill="rgb(229,69,34)"/><text x="610.00" y="1150.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.31%)</title><rect x="607" y="1156" width="4" height="15" fill="rgb(227,40,37)"/><text x="610.00" y="1166.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:1183) (1 samples, 0.31%)</title><rect x="607" y="1172" width="4" height="15" fill="rgb(244,115,1)"/><text x="610.00" y="1182.50"></text></g><g><title>copy (copy.py:96) (1 samples, 0.31%)</title><rect x="607" y="1188" width="4" height="15" fill="rgb(222,110,49)"/><text x="610.00" y="1198.50"></text></g><g><title>_slotnames (copyreg.py:108) (1 samples, 0.31%)</title><rect x="607" y="1204" width="4" height="15" fill="rgb(241,192,25)"/><text x="610.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:11) (1 samples, 0.31%)</title><rect x="611" y="388" width="3" height="15" fill="rgb(220,130,25)"/><text x="614.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="611" y="404" width="3" height="15" fill="rgb(231,19,32)"/><text x="614.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="611" y="420" width="3" height="15" fill="rgb(229,93,28)"/><text x="614.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="611" y="436" width="3" height="15" fill="rgb(244,36,1)"/><text x="614.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="611" y="452" width="3" height="15" fill="rgb(225,165,33)"/><text x="614.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="611" y="468" width="3" height="15" fill="rgb(233,219,50)"/><text x="614.00" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:233) (1 samples, 0.31%)</title><rect x="611" y="484" width="3" height="15" fill="rgb(229,206,21)"/><text x="614.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="611" y="500" width="3" height="15" fill="rgb(233,193,50)"/><text x="614.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="611" y="516" width="3" height="15" fill="rgb(223,158,47)"/><text x="614.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="611" y="532" width="3" height="15" fill="rgb(238,58,43)"/><text x="614.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="611" y="548" width="3" height="15" fill="rgb(231,127,6)"/><text x="614.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="611" y="564" width="3" height="15" fill="rgb(226,40,36)"/><text x="614.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="611" y="580" width="3" height="15" fill="rgb(246,179,40)"/><text x="614.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="614" y="756" width="4" height="15" fill="rgb(232,120,2)"/><text x="617.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="614" y="772" width="4" height="15" fill="rgb(240,217,42)"/><text x="617.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="614" y="788" width="4" height="15" fill="rgb(213,215,35)"/><text x="617.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="614" y="804" width="4" height="15" fill="rgb(228,5,16)"/><text x="617.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.31%)</title><rect x="614" y="820" width="4" height="15" fill="rgb(248,105,30)"/><text x="617.00" y="830.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.31%)</title><rect x="614" y="836" width="4" height="15" fill="rgb(235,54,17)"/><text x="617.00" y="846.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="614" y="852" width="4" height="15" fill="rgb(248,137,38)"/><text x="617.00" y="862.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="614" y="868" width="4" height="15" fill="rgb(231,102,50)"/><text x="617.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.94%)</title><rect x="611" y="292" width="11" height="15" fill="rgb(214,204,10)"/><text x="614.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="611" y="308" width="11" height="15" fill="rgb(248,191,33)"/><text x="614.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="611" y="324" width="11" height="15" fill="rgb(251,224,12)"/><text x="614.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="611" y="340" width="11" height="15" fill="rgb(222,182,39)"/><text x="614.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="611" y="356" width="11" height="15" fill="rgb(248,133,46)"/><text x="614.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="611" y="372" width="11" height="15" fill="rgb(234,200,8)"/><text x="614.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.62%)</title><rect x="614" y="388" width="8" height="15" fill="rgb(217,103,9)"/><text x="617.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="614" y="404" width="8" height="15" fill="rgb(254,19,6)"/><text x="617.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="614" y="420" width="8" height="15" fill="rgb(241,53,17)"/><text x="617.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="614" y="436" width="8" height="15" fill="rgb(245,33,51)"/><text x="617.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="614" y="452" width="8" height="15" fill="rgb(212,52,40)"/><text x="617.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="614" y="468" width="8" height="15" fill="rgb(206,115,20)"/><text x="617.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.62%)</title><rect x="614" y="484" width="8" height="15" fill="rgb(211,15,30)"/><text x="617.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="614" y="500" width="8" height="15" fill="rgb(211,208,39)"/><text x="617.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="614" y="516" width="8" height="15" fill="rgb(239,10,31)"/><text x="617.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="614" y="532" width="8" height="15" fill="rgb(236,105,22)"/><text x="617.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="614" y="548" width="8" height="15" fill="rgb(221,160,39)"/><text x="617.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="614" y="564" width="8" height="15" fill="rgb(215,10,11)"/><text x="617.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.62%)</title><rect x="614" y="580" width="8" height="15" fill="rgb(243,152,39)"/><text x="617.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="614" y="596" width="8" height="15" fill="rgb(253,46,24)"/><text x="617.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="614" y="612" width="8" height="15" fill="rgb(235,150,21)"/><text x="617.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="614" y="628" width="8" height="15" fill="rgb(205,207,51)"/><text x="617.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="614" y="644" width="8" height="15" fill="rgb(222,178,30)"/><text x="617.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="614" y="660" width="8" height="15" fill="rgb(251,159,6)"/><text x="617.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="614" y="676" width="8" height="15" fill="rgb(226,133,4)"/><text x="617.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="614" y="692" width="8" height="15" fill="rgb(238,112,25)"/><text x="617.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="614" y="708" width="8" height="15" fill="rgb(211,60,14)"/><text x="617.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (2 samples, 0.62%)</title><rect x="614" y="724" width="8" height="15" fill="rgb(211,133,3)"/><text x="617.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="614" y="740" width="8" height="15" fill="rgb(214,145,54)"/><text x="617.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="618" y="756" width="4" height="15" fill="rgb(232,2,12)"/><text x="621.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="618" y="772" width="4" height="15" fill="rgb(212,97,32)"/><text x="621.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="618" y="788" width="4" height="15" fill="rgb(240,200,28)"/><text x="621.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="618" y="804" width="4" height="15" fill="rgb(220,132,20)"/><text x="621.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:141) (1 samples, 0.31%)</title><rect x="618" y="820" width="4" height="15" fill="rgb(219,134,51)"/><text x="621.00" y="830.50"></text></g><g><title>IntervalArray (pandas/core/arrays/interval.py:982) (1 samples, 0.31%)</title><rect x="618" y="836" width="4" height="15" fill="rgb(216,166,18)"/><text x="621.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (1 samples, 0.31%)</title><rect x="622" y="532" width="3" height="15" fill="rgb(249,98,40)"/><text x="625.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="548" width="3" height="15" fill="rgb(238,215,44)"/><text x="625.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="564" width="3" height="15" fill="rgb(229,147,36)"/><text x="625.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="580" width="3" height="15" fill="rgb(247,1,10)"/><text x="625.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="596" width="3" height="15" fill="rgb(236,101,34)"/><text x="625.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="612" width="3" height="15" fill="rgb(225,167,15)"/><text x="625.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.31%)</title><rect x="622" y="628" width="3" height="15" fill="rgb(207,180,46)"/><text x="625.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="644" width="3" height="15" fill="rgb(248,226,30)"/><text x="625.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="660" width="3" height="15" fill="rgb(238,69,6)"/><text x="625.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="676" width="3" height="15" fill="rgb(222,75,45)"/><text x="625.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="692" width="3" height="15" fill="rgb(246,19,10)"/><text x="625.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="708" width="3" height="15" fill="rgb(230,131,22)"/><text x="625.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.31%)</title><rect x="622" y="724" width="3" height="15" fill="rgb(223,222,27)"/><text x="625.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="740" width="3" height="15" fill="rgb(213,173,8)"/><text x="625.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="756" width="3" height="15" fill="rgb(238,206,19)"/><text x="625.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="772" width="3" height="15" fill="rgb(208,92,13)"/><text x="625.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="788" width="3" height="15" fill="rgb(216,9,9)"/><text x="625.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="804" width="3" height="15" fill="rgb(216,137,52)"/><text x="625.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.31%)</title><rect x="622" y="820" width="3" height="15" fill="rgb(209,206,45)"/><text x="625.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="836" width="3" height="15" fill="rgb(211,210,4)"/><text x="625.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="852" width="3" height="15" fill="rgb(221,68,4)"/><text x="625.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="868" width="3" height="15" fill="rgb(226,80,11)"/><text x="625.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="884" width="3" height="15" fill="rgb(241,112,4)"/><text x="625.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="900" width="3" height="15" fill="rgb(213,191,2)"/><text x="625.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.31%)</title><rect x="622" y="916" width="3" height="15" fill="rgb(235,212,15)"/><text x="625.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="932" width="3" height="15" fill="rgb(209,203,14)"/><text x="625.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="948" width="3" height="15" fill="rgb(242,136,54)"/><text x="625.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="964" width="3" height="15" fill="rgb(211,140,11)"/><text x="625.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="980" width="3" height="15" fill="rgb(251,169,16)"/><text x="625.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="996" width="3" height="15" fill="rgb(218,24,40)"/><text x="625.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.31%)</title><rect x="622" y="1012" width="3" height="15" fill="rgb(238,224,9)"/><text x="625.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="1028" width="3" height="15" fill="rgb(240,116,7)"/><text x="625.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="1044" width="3" height="15" fill="rgb(218,59,22)"/><text x="625.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="1060" width="3" height="15" fill="rgb(214,86,54)"/><text x="625.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="1076" width="3" height="15" fill="rgb(207,170,3)"/><text x="625.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="1092" width="3" height="15" fill="rgb(205,228,20)"/><text x="625.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.31%)</title><rect x="622" y="1108" width="3" height="15" fill="rgb(217,132,44)"/><text x="625.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="622" y="1124" width="3" height="15" fill="rgb(217,177,19)"/><text x="625.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="1140" width="3" height="15" fill="rgb(206,176,38)"/><text x="625.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="1156" width="3" height="15" fill="rgb(209,157,24)"/><text x="625.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="1172" width="3" height="15" fill="rgb(237,140,54)"/><text x="625.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="1188" width="3" height="15" fill="rgb(252,5,41)"/><text x="625.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="1204" width="3" height="15" fill="rgb(237,72,52)"/><text x="625.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="1220" width="3" height="15" fill="rgb(249,96,16)"/><text x="625.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.31%)</title><rect x="622" y="1236" width="3" height="15" fill="rgb(253,149,46)"/><text x="625.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="622" y="1252" width="3" height="15" fill="rgb(226,183,8)"/><text x="625.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="1268" width="3" height="15" fill="rgb(215,212,28)"/><text x="625.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="622" y="1284" width="3" height="15" fill="rgb(206,22,44)"/><text x="625.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="622" y="1300" width="3" height="15" fill="rgb(229,26,24)"/><text x="625.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="622" y="1316" width="3" height="15" fill="rgb(205,61,50)"/><text x="625.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="622" y="1332" width="3" height="15" fill="rgb(227,62,20)"/><text x="625.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="622" y="1348" width="3" height="15" fill="rgb(236,157,37)"/><text x="625.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:280) (1 samples, 0.31%)</title><rect x="622" y="1364" width="3" height="15" fill="rgb(212,11,53)"/><text x="625.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.31%)</title><rect x="622" y="1380" width="3" height="15" fill="rgb(248,163,30)"/><text x="625.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.31%)</title><rect x="622" y="1396" width="3" height="15" fill="rgb(206,75,9)"/><text x="625.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:65) (1 samples, 0.31%)</title><rect x="622" y="1412" width="3" height="15" fill="rgb(226,79,27)"/><text x="625.00" y="1422.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="622" y="1428" width="3" height="15" fill="rgb(212,221,42)"/><text x="625.00" y="1438.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="622" y="1444" width="3" height="15" fill="rgb(217,165,51)"/><text x="625.00" y="1454.50"></text></g><g><title>0x7fca157e18a4 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="622" y="1460" width="3" height="15" fill="rgb(239,132,9)"/><text x="625.00" y="1470.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (5 samples, 1.56%)</title><rect x="611" y="148" width="18" height="15" fill="rgb(210,114,15)"/><text x="614.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="611" y="164" width="18" height="15" fill="rgb(249,152,25)"/><text x="614.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.56%)</title><rect x="611" y="180" width="18" height="15" fill="rgb(249,19,22)"/><text x="614.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="611" y="196" width="18" height="15" fill="rgb(236,152,48)"/><text x="614.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="611" y="212" width="18" height="15" fill="rgb(227,134,1)"/><text x="614.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="611" y="228" width="18" height="15" fill="rgb(235,153,32)"/><text x="614.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="611" y="244" width="18" height="15" fill="rgb(225,109,22)"/><text x="614.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="611" y="260" width="18" height="15" fill="rgb(207,75,9)"/><text x="614.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="611" y="276" width="18" height="15" fill="rgb(236,217,54)"/><text x="614.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.62%)</title><rect x="622" y="292" width="7" height="15" fill="rgb(243,68,13)"/><text x="625.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="622" y="308" width="7" height="15" fill="rgb(253,161,49)"/><text x="625.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="622" y="324" width="7" height="15" fill="rgb(249,159,28)"/><text x="625.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="622" y="340" width="7" height="15" fill="rgb(207,57,39)"/><text x="625.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="622" y="356" width="7" height="15" fill="rgb(233,145,37)"/><text x="625.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="622" y="372" width="7" height="15" fill="rgb(221,78,16)"/><text x="625.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="622" y="388" width="7" height="15" fill="rgb(251,11,5)"/><text x="625.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="622" y="404" width="7" height="15" fill="rgb(224,214,23)"/><text x="625.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="622" y="420" width="7" height="15" fill="rgb(242,212,14)"/><text x="625.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.62%)</title><rect x="622" y="436" width="7" height="15" fill="rgb(250,203,35)"/><text x="625.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="622" y="452" width="7" height="15" fill="rgb(219,141,45)"/><text x="625.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="622" y="468" width="7" height="15" fill="rgb(244,83,12)"/><text x="625.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="622" y="484" width="7" height="15" fill="rgb(216,7,54)"/><text x="625.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="622" y="500" width="7" height="15" fill="rgb(205,40,17)"/><text x="625.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="622" y="516" width="7" height="15" fill="rgb(251,155,54)"/><text x="625.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.31%)</title><rect x="625" y="532" width="4" height="15" fill="rgb(212,163,26)"/><text x="628.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="548" width="4" height="15" fill="rgb(222,53,25)"/><text x="628.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="564" width="4" height="15" fill="rgb(232,219,54)"/><text x="628.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="580" width="4" height="15" fill="rgb(226,1,19)"/><text x="628.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="596" width="4" height="15" fill="rgb(227,87,21)"/><text x="628.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="612" width="4" height="15" fill="rgb(215,11,49)"/><text x="628.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.31%)</title><rect x="625" y="628" width="4" height="15" fill="rgb(252,11,7)"/><text x="628.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="644" width="4" height="15" fill="rgb(215,29,26)"/><text x="628.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="660" width="4" height="15" fill="rgb(253,216,38)"/><text x="628.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="676" width="4" height="15" fill="rgb(207,86,49)"/><text x="628.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="692" width="4" height="15" fill="rgb(210,182,31)"/><text x="628.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="708" width="4" height="15" fill="rgb(220,8,7)"/><text x="628.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.31%)</title><rect x="625" y="724" width="4" height="15" fill="rgb(216,174,10)"/><text x="628.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="740" width="4" height="15" fill="rgb(218,142,50)"/><text x="628.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="625" y="756" width="4" height="15" fill="rgb(242,200,16)"/><text x="628.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="772" width="4" height="15" fill="rgb(234,122,52)"/><text x="628.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="788" width="4" height="15" fill="rgb(234,22,41)"/><text x="628.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="804" width="4" height="15" fill="rgb(229,179,23)"/><text x="628.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="820" width="4" height="15" fill="rgb(230,49,22)"/><text x="628.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="836" width="4" height="15" fill="rgb(207,39,45)"/><text x="628.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="852" width="4" height="15" fill="rgb(252,141,16)"/><text x="628.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.31%)</title><rect x="625" y="868" width="4" height="15" fill="rgb(212,126,20)"/><text x="628.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="884" width="4" height="15" fill="rgb(228,86,16)"/><text x="628.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="900" width="4" height="15" fill="rgb(219,115,28)"/><text x="628.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="916" width="4" height="15" fill="rgb(224,117,46)"/><text x="628.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="932" width="4" height="15" fill="rgb(218,76,34)"/><text x="628.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="948" width="4" height="15" fill="rgb(229,129,44)"/><text x="628.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.31%)</title><rect x="625" y="964" width="4" height="15" fill="rgb(213,108,11)"/><text x="628.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="625" y="980" width="4" height="15" fill="rgb(249,100,6)"/><text x="628.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="996" width="4" height="15" fill="rgb(239,81,34)"/><text x="628.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="1012" width="4" height="15" fill="rgb(250,86,5)"/><text x="628.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="1028" width="4" height="15" fill="rgb(214,132,46)"/><text x="628.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="1044" width="4" height="15" fill="rgb(235,134,2)"/><text x="628.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="1060" width="4" height="15" fill="rgb(252,165,38)"/><text x="628.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="1076" width="4" height="15" fill="rgb(237,176,29)"/><text x="628.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.31%)</title><rect x="625" y="1092" width="4" height="15" fill="rgb(234,74,20)"/><text x="628.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="625" y="1108" width="4" height="15" fill="rgb(210,44,51)"/><text x="628.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="1124" width="4" height="15" fill="rgb(218,77,10)"/><text x="628.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="1140" width="4" height="15" fill="rgb(246,69,39)"/><text x="628.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="1156" width="4" height="15" fill="rgb(225,53,26)"/><text x="628.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="1172" width="4" height="15" fill="rgb(219,206,25)"/><text x="628.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="1188" width="4" height="15" fill="rgb(211,123,47)"/><text x="628.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="1204" width="4" height="15" fill="rgb(254,16,42)"/><text x="628.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.31%)</title><rect x="625" y="1220" width="4" height="15" fill="rgb(222,60,48)"/><text x="628.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="625" y="1236" width="4" height="15" fill="rgb(221,91,53)"/><text x="628.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="625" y="1252" width="4" height="15" fill="rgb(212,23,43)"/><text x="628.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="625" y="1268" width="4" height="15" fill="rgb(243,108,50)"/><text x="628.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="625" y="1284" width="4" height="15" fill="rgb(224,103,22)"/><text x="628.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="625" y="1300" width="4" height="15" fill="rgb(239,129,41)"/><text x="628.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.31%)</title><rect x="625" y="1316" width="4" height="15" fill="rgb(227,83,17)"/><text x="628.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.31%)</title><rect x="625" y="1332" width="4" height="15" fill="rgb(219,183,26)"/><text x="628.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.31%)</title><rect x="625" y="1348" width="4" height="15" fill="rgb(220,104,3)"/><text x="628.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.31%)</title><rect x="625" y="1364" width="4" height="15" fill="rgb(231,2,22)"/><text x="628.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.31%)</title><rect x="625" y="1380" width="4" height="15" fill="rgb(241,56,14)"/><text x="628.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.31%)</title><rect x="625" y="1396" width="4" height="15" fill="rgb(220,24,11)"/><text x="628.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="625" y="1412" width="4" height="15" fill="rgb(228,107,40)"/><text x="628.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.31%)</title><rect x="625" y="1428" width="4" height="15" fill="rgb(222,108,25)"/><text x="628.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.31%)</title><rect x="625" y="1444" width="4" height="15" fill="rgb(219,179,53)"/><text x="628.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.31%)</title><rect x="625" y="1460" width="4" height="15" fill="rgb(214,104,8)"/><text x="628.00" y="1470.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.31%)</title><rect x="625" y="1476" width="4" height="15" fill="rgb(239,90,18)"/><text x="628.00" y="1486.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="625" y="1492" width="4" height="15" fill="rgb(207,160,38)"/><text x="628.00" y="1502.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="625" y="1508" width="4" height="15" fill="rgb(246,21,19)"/><text x="628.00" y="1518.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="625" y="1524" width="4" height="15" fill="rgb(235,20,2)"/><text x="628.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.31%)</title><rect x="629" y="484" width="4" height="15" fill="rgb(247,195,14)"/><text x="632.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="500" width="4" height="15" fill="rgb(250,162,28)"/><text x="632.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="516" width="4" height="15" fill="rgb(241,174,31)"/><text x="632.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="532" width="4" height="15" fill="rgb(216,179,31)"/><text x="632.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="548" width="4" height="15" fill="rgb(223,92,9)"/><text x="632.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="564" width="4" height="15" fill="rgb(220,129,4)"/><text x="632.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.31%)</title><rect x="629" y="580" width="4" height="15" fill="rgb(210,218,23)"/><text x="632.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="596" width="4" height="15" fill="rgb(228,28,0)"/><text x="632.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="612" width="4" height="15" fill="rgb(219,54,44)"/><text x="632.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="628" width="4" height="15" fill="rgb(251,95,18)"/><text x="632.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="644" width="4" height="15" fill="rgb(228,36,27)"/><text x="632.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="660" width="4" height="15" fill="rgb(251,117,5)"/><text x="632.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.31%)</title><rect x="629" y="676" width="4" height="15" fill="rgb(239,216,36)"/><text x="632.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="692" width="4" height="15" fill="rgb(229,23,47)"/><text x="632.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="708" width="4" height="15" fill="rgb(239,100,21)"/><text x="632.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="724" width="4" height="15" fill="rgb(239,190,12)"/><text x="632.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="740" width="4" height="15" fill="rgb(228,154,2)"/><text x="632.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="756" width="4" height="15" fill="rgb(208,58,6)"/><text x="632.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.31%)</title><rect x="629" y="772" width="4" height="15" fill="rgb(229,150,44)"/><text x="632.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="629" y="788" width="4" height="15" fill="rgb(212,83,49)"/><text x="632.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="804" width="4" height="15" fill="rgb(235,207,10)"/><text x="632.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="820" width="4" height="15" fill="rgb(231,35,40)"/><text x="632.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="836" width="4" height="15" fill="rgb(216,144,48)"/><text x="632.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="852" width="4" height="15" fill="rgb(208,125,10)"/><text x="632.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="868" width="4" height="15" fill="rgb(222,66,26)"/><text x="632.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="884" width="4" height="15" fill="rgb(221,15,12)"/><text x="632.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.31%)</title><rect x="629" y="900" width="4" height="15" fill="rgb(240,159,14)"/><text x="632.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="916" width="4" height="15" fill="rgb(229,106,54)"/><text x="632.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="932" width="4" height="15" fill="rgb(212,8,40)"/><text x="632.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="948" width="4" height="15" fill="rgb(249,25,42)"/><text x="632.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="964" width="4" height="15" fill="rgb(218,1,31)"/><text x="632.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="980" width="4" height="15" fill="rgb(220,185,48)"/><text x="632.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.31%)</title><rect x="629" y="996" width="4" height="15" fill="rgb(243,112,20)"/><text x="632.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="629" y="1012" width="4" height="15" fill="rgb(215,140,41)"/><text x="632.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="629" y="1028" width="4" height="15" fill="rgb(215,20,3)"/><text x="632.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="629" y="1044" width="4" height="15" fill="rgb(236,141,11)"/><text x="632.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="629" y="1060" width="4" height="15" fill="rgb(224,69,9)"/><text x="632.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="629" y="1076" width="4" height="15" fill="rgb(248,72,11)"/><text x="632.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.31%)</title><rect x="629" y="1092" width="4" height="15" fill="rgb(254,172,4)"/><text x="632.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.31%)</title><rect x="629" y="1108" width="4" height="15" fill="rgb(220,85,27)"/><text x="632.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.31%)</title><rect x="629" y="1124" width="4" height="15" fill="rgb(234,125,27)"/><text x="632.00" y="1134.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.31%)</title><rect x="629" y="1140" width="4" height="15" fill="rgb(210,221,52)"/><text x="632.00" y="1150.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.31%)</title><rect x="629" y="1156" width="4" height="15" fill="rgb(222,123,36)"/><text x="632.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.31%)</title><rect x="629" y="1172" width="4" height="15" fill="rgb(212,1,21)"/><text x="632.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.31%)</title><rect x="629" y="1188" width="4" height="15" fill="rgb(244,42,25)"/><text x="632.00" y="1198.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.31%)</title><rect x="629" y="1204" width="4" height="15" fill="rgb(214,137,49)"/><text x="632.00" y="1214.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:4) (11 samples, 3.44%)</title><rect x="596" y="52" width="40" height="15" fill="rgb(250,41,38)"/><text x="599.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.44%)</title><rect x="596" y="68" width="40" height="15" fill="rgb(207,130,43)"/><text x="599.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.44%)</title><rect x="596" y="84" width="40" height="15" fill="rgb(217,221,11)"/><text x="599.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.44%)</title><rect x="596" y="100" width="40" height="15" fill="rgb(249,151,0)"/><text x="599.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.44%)</title><rect x="596" y="116" width="40" height="15" fill="rgb(230,21,29)"/><text x="599.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.44%)</title><rect x="596" y="132" width="40" height="15" fill="rgb(222,135,11)"/><text x="599.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (2 samples, 0.62%)</title><rect x="629" y="148" width="7" height="15" fill="rgb(227,199,43)"/><text x="632.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="629" y="164" width="7" height="15" fill="rgb(227,103,5)"/><text x="632.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="629" y="180" width="7" height="15" fill="rgb(213,194,33)"/><text x="632.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="629" y="196" width="7" height="15" fill="rgb(213,72,5)"/><text x="632.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="629" y="212" width="7" height="15" fill="rgb(208,50,14)"/><text x="632.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="629" y="228" width="7" height="15" fill="rgb(243,79,43)"/><text x="632.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.62%)</title><rect x="629" y="244" width="7" height="15" fill="rgb(229,136,27)"/><text x="632.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="629" y="260" width="7" height="15" fill="rgb(208,31,21)"/><text x="632.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="629" y="276" width="7" height="15" fill="rgb(244,77,1)"/><text x="632.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="629" y="292" width="7" height="15" fill="rgb(248,88,28)"/><text x="632.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="629" y="308" width="7" height="15" fill="rgb(210,152,25)"/><text x="632.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="629" y="324" width="7" height="15" fill="rgb(240,5,17)"/><text x="632.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.62%)</title><rect x="629" y="340" width="7" height="15" fill="rgb(212,165,23)"/><text x="632.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="629" y="356" width="7" height="15" fill="rgb(239,211,35)"/><text x="632.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="629" y="372" width="7" height="15" fill="rgb(222,9,42)"/><text x="632.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="629" y="388" width="7" height="15" fill="rgb(237,38,0)"/><text x="632.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="629" y="404" width="7" height="15" fill="rgb(223,31,54)"/><text x="632.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="629" y="420" width="7" height="15" fill="rgb(233,160,7)"/><text x="632.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="629" y="436" width="7" height="15" fill="rgb(230,122,52)"/><text x="632.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="629" y="452" width="7" height="15" fill="rgb(248,187,10)"/><text x="632.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="629" y="468" width="7" height="15" fill="rgb(206,137,14)"/><text x="632.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.31%)</title><rect x="633" y="484" width="3" height="15" fill="rgb(254,120,30)"/><text x="636.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="633" y="500" width="3" height="15" fill="rgb(238,132,49)"/><text x="636.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="633" y="516" width="3" height="15" fill="rgb(244,198,23)"/><text x="636.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="633" y="532" width="3" height="15" fill="rgb(253,222,5)"/><text x="636.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="633" y="548" width="3" height="15" fill="rgb(209,9,5)"/><text x="636.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="633" y="564" width="3" height="15" fill="rgb(228,125,2)"/><text x="636.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.31%)</title><rect x="633" y="580" width="3" height="15" fill="rgb(209,72,11)"/><text x="636.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="633" y="596" width="3" height="15" fill="rgb(218,98,39)"/><text x="636.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="633" y="612" width="3" height="15" fill="rgb(212,99,12)"/><text x="636.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="633" y="628" width="3" height="15" fill="rgb(246,40,19)"/><text x="636.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="633" y="644" width="3" height="15" fill="rgb(251,119,20)"/><text x="636.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="633" y="660" width="3" height="15" fill="rgb(233,119,21)"/><text x="636.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.31%)</title><rect x="633" y="676" width="3" height="15" fill="rgb(220,33,0)"/><text x="636.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="633" y="692" width="3" height="15" fill="rgb(235,129,13)"/><text x="636.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="633" y="708" width="3" height="15" fill="rgb(237,60,24)"/><text x="636.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="633" y="724" width="3" height="15" fill="rgb(236,135,24)"/><text x="636.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="633" y="740" width="3" height="15" fill="rgb(251,222,34)"/><text x="636.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="633" y="756" width="3" height="15" fill="rgb(225,104,46)"/><text x="636.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.31%)</title><rect x="633" y="772" width="3" height="15" fill="rgb(214,106,53)"/><text x="636.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="633" y="788" width="3" height="15" fill="rgb(244,8,26)"/><text x="636.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="633" y="804" width="3" height="15" fill="rgb(252,126,31)"/><text x="636.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="633" y="820" width="3" height="15" fill="rgb(251,79,45)"/><text x="636.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="633" y="836" width="3" height="15" fill="rgb(223,174,41)"/><text x="636.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="633" y="852" width="3" height="15" fill="rgb(227,158,52)"/><text x="636.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="633" y="868" width="3" height="15" fill="rgb(230,155,33)"/><text x="636.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="633" y="884" width="3" height="15" fill="rgb(230,103,16)"/><text x="636.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.31%)</title><rect x="633" y="900" width="3" height="15" fill="rgb(248,7,52)"/><text x="636.00" y="910.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:28) (1 samples, 0.31%)</title><rect x="636" y="84" width="4" height="15" fill="rgb(249,86,18)"/><text x="639.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="636" y="100" width="4" height="15" fill="rgb(245,69,21)"/><text x="639.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.31%)</title><rect x="636" y="116" width="4" height="15" fill="rgb(234,94,7)"/><text x="639.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.31%)</title><rect x="636" y="132" width="4" height="15" fill="rgb(221,136,47)"/><text x="639.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.31%)</title><rect x="636" y="148" width="4" height="15" fill="rgb(220,78,15)"/><text x="639.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.31%)</title><rect x="636" y="164" width="4" height="15" fill="rgb(225,98,29)"/><text x="639.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.31%)</title><rect x="636" y="180" width="4" height="15" fill="rgb(254,212,13)"/><text x="639.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.31%)</title><rect x="636" y="196" width="4" height="15" fill="rgb(216,119,41)"/><text x="639.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="636" y="212" width="4" height="15" fill="rgb(248,134,9)"/><text x="639.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="636" y="228" width="4" height="15" fill="rgb(241,211,6)"/><text x="639.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="636" y="244" width="4" height="15" fill="rgb(224,152,22)"/><text x="639.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="636" y="260" width="4" height="15" fill="rgb(245,94,24)"/><text x="639.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="636" y="276" width="4" height="15" fill="rgb(223,80,52)"/><text x="639.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.31%)</title><rect x="636" y="292" width="4" height="15" fill="rgb(223,143,49)"/><text x="639.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="636" y="308" width="4" height="15" fill="rgb(232,104,49)"/><text x="639.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="636" y="324" width="4" height="15" fill="rgb(218,207,34)"/><text x="639.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="636" y="340" width="4" height="15" fill="rgb(229,142,16)"/><text x="639.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="636" y="356" width="4" height="15" fill="rgb(207,167,10)"/><text x="639.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="636" y="372" width="4" height="15" fill="rgb(245,49,24)"/><text x="639.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.31%)</title><rect x="636" y="388" width="4" height="15" fill="rgb(253,220,50)"/><text x="639.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.31%)</title><rect x="636" y="404" width="4" height="15" fill="rgb(218,138,22)"/><text x="639.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.31%)</title><rect x="636" y="420" width="4" height="15" fill="rgb(212,189,44)"/><text x="639.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.31%)</title><rect x="636" y="436" width="4" height="15" fill="rgb(216,172,13)"/><text x="639.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="636" y="452" width="4" height="15" fill="rgb(243,115,20)"/><text x="639.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:48) (1 samples, 0.31%)</title><rect x="636" y="468" width="4" height="15" fill="rgb(235,202,42)"/><text x="639.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.31%)</title><rect x="636" y="484" width="4" height="15" fill="rgb(246,170,41)"/><text x="639.00" y="494.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:18) (1 samples, 0.31%)</title><rect x="640" y="100" width="4" height="15" fill="rgb(209,109,46)"/><text x="643.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="640" y="116" width="4" height="15" fill="rgb(241,150,10)"/><text x="643.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="640" y="132" width="4" height="15" fill="rgb(244,226,17)"/><text x="643.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="640" y="148" width="4" height="15" fill="rgb(210,112,44)"/><text x="643.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.31%)</title><rect x="640" y="164" width="4" height="15" fill="rgb(218,44,5)"/><text x="643.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.31%)</title><rect x="640" y="180" width="4" height="15" fill="rgb(237,98,51)"/><text x="643.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.31%)</title><rect x="640" y="196" width="4" height="15" fill="rgb(232,181,49)"/><text x="643.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.31%)</title><rect x="640" y="212" width="4" height="15" fill="rgb(228,50,24)"/><text x="643.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.31%)</title><rect x="640" y="228" width="4" height="15" fill="rgb(237,167,53)"/><text x="643.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="640" y="244" width="4" height="15" fill="rgb(205,82,19)"/><text x="643.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="640" y="260" width="4" height="15" fill="rgb(211,48,45)"/><text x="643.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1655) (1 samples, 0.31%)</title><rect x="640" y="276" width="4" height="15" fill="rgb(239,126,2)"/><text x="643.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="647" y="116" width="4" height="15" fill="rgb(250,182,20)"/><text x="650.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="647" y="132" width="4" height="15" fill="rgb(237,128,35)"/><text x="650.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="647" y="148" width="4" height="15" fill="rgb(240,193,23)"/><text x="650.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.31%)</title><rect x="651" y="116" width="4" height="15" fill="rgb(211,138,22)"/><text x="654.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="651" y="132" width="4" height="15" fill="rgb(216,128,27)"/><text x="654.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 3.75%)</title><rect x="673" y="180" width="45" height="15" fill="rgb(245,102,31)"/><text x="676.00" y="190.50">run ..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.94%)</title><rect x="706" y="196" width="12" height="15" fill="rgb(217,2,29)"/><text x="709.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.31%)</title><rect x="732" y="212" width="4" height="15" fill="rgb(222,36,6)"/><text x="735.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.31%)</title><rect x="732" y="228" width="4" height="15" fill="rgb(224,64,45)"/><text x="735.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.31%)</title><rect x="732" y="244" width="4" height="15" fill="rgb(236,98,20)"/><text x="735.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.31%)</title><rect x="732" y="260" width="4" height="15" fill="rgb(205,158,0)"/><text x="735.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.31%)</title><rect x="732" y="276" width="4" height="15" fill="rgb(250,55,28)"/><text x="735.00" y="286.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.31%)</title><rect x="736" y="228" width="4" height="15" fill="rgb(244,31,21)"/><text x="739.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (3 samples, 0.94%)</title><rect x="740" y="228" width="11" height="15" fill="rgb(233,47,29)"/><text x="743.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 2.19%)</title><rect x="729" y="196" width="25" height="15" fill="rgb(246,165,37)"/><text x="732.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (5 samples, 1.56%)</title><rect x="736" y="212" width="18" height="15" fill="rgb(225,6,8)"/><text x="739.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:108) (1 samples, 0.31%)</title><rect x="751" y="228" width="3" height="15" fill="rgb(245,108,27)"/><text x="754.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="769" y="260" width="4" height="15" fill="rgb(234,191,48)"/><text x="772.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="769" y="276" width="4" height="15" fill="rgb(244,1,5)"/><text x="772.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="769" y="292" width="4" height="15" fill="rgb(219,199,18)"/><text x="772.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.31%)</title><rect x="773" y="260" width="4" height="15" fill="rgb(215,36,26)"/><text x="776.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.31%)</title><rect x="773" y="276" width="4" height="15" fill="rgb(221,184,25)"/><text x="776.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:277) (1 samples, 0.31%)</title><rect x="773" y="292" width="4" height="15" fill="rgb(229,189,24)"/><text x="776.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.62%)</title><rect x="777" y="308" width="7" height="15" fill="rgb(236,25,40)"/><text x="780.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.62%)</title><rect x="777" y="324" width="7" height="15" fill="rgb(241,63,44)"/><text x="780.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.62%)</title><rect x="777" y="340" width="7" height="15" fill="rgb(251,50,39)"/><text x="780.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.62%)</title><rect x="777" y="356" width="7" height="15" fill="rgb(210,144,52)"/><text x="780.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.62%)</title><rect x="777" y="372" width="7" height="15" fill="rgb(225,99,25)"/><text x="780.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.62%)</title><rect x="777" y="388" width="7" height="15" fill="rgb(229,34,41)"/><text x="780.00" y="398.50"></text></g><g><title>0x7fca14a01930 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="784" y="340" width="4" height="15" fill="rgb(223,55,39)"/><text x="787.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.62%)</title><rect x="784" y="324" width="7" height="15" fill="rgb(230,36,12)"/><text x="787.00" y="334.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.31%)</title><rect x="788" y="340" width="3" height="15" fill="rgb(254,133,45)"/><text x="791.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.31%)</title><rect x="791" y="356" width="4" height="15" fill="rgb(244,5,17)"/><text x="794.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.62%)</title><rect x="791" y="340" width="8" height="15" fill="rgb(237,80,35)"/><text x="794.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.31%)</title><rect x="795" y="356" width="4" height="15" fill="rgb(225,61,29)"/><text x="798.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="795" y="372" width="4" height="15" fill="rgb(242,224,23)"/><text x="798.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.31%)</title><rect x="795" y="388" width="4" height="15" fill="rgb(225,24,18)"/><text x="798.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1788) (1 samples, 0.31%)</title><rect x="795" y="404" width="4" height="15" fill="rgb(209,40,6)"/><text x="798.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.31%)</title><rect x="799" y="372" width="3" height="15" fill="rgb(216,67,9)"/><text x="802.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3158) (1 samples, 0.31%)</title><rect x="799" y="388" width="3" height="15" fill="rgb(207,169,22)"/><text x="802.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2143) (1 samples, 0.31%)</title><rect x="802" y="388" width="4" height="15" fill="rgb(233,91,43)"/><text x="805.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.94%)</title><rect x="799" y="356" width="11" height="15" fill="rgb(208,216,45)"/><text x="802.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.62%)</title><rect x="802" y="372" width="8" height="15" fill="rgb(246,106,15)"/><text x="805.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.31%)</title><rect x="806" y="388" width="4" height="15" fill="rgb(247,218,32)"/><text x="809.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.12%)</title><rect x="777" y="260" width="36" height="15" fill="rgb(218,63,31)"/><text x="780.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.12%)</title><rect x="777" y="276" width="36" height="15" fill="rgb(241,151,38)"/><text x="780.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.12%)</title><rect x="777" y="292" width="36" height="15" fill="rgb(243,176,38)"/><text x="780.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.50%)</title><rect x="784" y="308" width="29" height="15" fill="rgb(241,19,0)"/><text x="787.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.88%)</title><rect x="791" y="324" width="22" height="15" fill="rgb(205,57,3)"/><text x="794.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.25%)</title><rect x="799" y="340" width="14" height="15" fill="rgb(234,191,51)"/><text x="802.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.31%)</title><rect x="810" y="356" width="3" height="15" fill="rgb(225,187,46)"/><text x="813.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.31%)</title><rect x="810" y="372" width="3" height="15" fill="rgb(231,193,6)"/><text x="813.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.31%)</title><rect x="810" y="388" width="3" height="15" fill="rgb(235,122,13)"/><text x="813.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="810" y="404" width="3" height="15" fill="rgb(239,98,15)"/><text x="813.00" y="414.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (15 samples, 4.69%)</title><rect x="762" y="244" width="55" height="15" fill="rgb(235,74,37)"/><text x="765.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="813" y="260" width="4" height="15" fill="rgb(254,222,26)"/><text x="816.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="813" y="276" width="4" height="15" fill="rgb(234,214,3)"/><text x="816.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.31%)</title><rect x="813" y="292" width="4" height="15" fill="rgb(250,129,11)"/><text x="816.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="821" y="260" width="3" height="15" fill="rgb(212,86,50)"/><text x="824.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(227,44,51)"/><text x="824.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.31%)</title><rect x="821" y="292" width="3" height="15" fill="rgb(210,49,28)"/><text x="824.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.31%)</title><rect x="821" y="308" width="3" height="15" fill="rgb(228,54,40)"/><text x="824.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(242,68,23)"/><text x="824.00" y="334.50"></text></g><g><title>0x7fca158be004 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(216,75,44)"/><text x="824.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.31%)</title><rect x="824" y="324" width="4" height="15" fill="rgb(230,129,52)"/><text x="827.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.31%)</title><rect x="824" y="340" width="4" height="15" fill="rgb(216,68,48)"/><text x="827.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.31%)</title><rect x="828" y="340" width="4" height="15" fill="rgb(225,44,19)"/><text x="831.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.31%)</title><rect x="828" y="356" width="4" height="15" fill="rgb(222,168,18)"/><text x="831.00" y="366.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.31%)</title><rect x="828" y="372" width="4" height="15" fill="rgb(248,158,54)"/><text x="831.00" y="382.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:676) (1 samples, 0.31%)</title><rect x="828" y="388" width="4" height="15" fill="rgb(236,111,22)"/><text x="831.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.94%)</title><rect x="824" y="308" width="12" height="15" fill="rgb(208,36,28)"/><text x="827.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.62%)</title><rect x="828" y="324" width="8" height="15" fill="rgb(213,105,49)"/><text x="831.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.31%)</title><rect x="832" y="340" width="4" height="15" fill="rgb(220,43,15)"/><text x="835.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.31%)</title><rect x="832" y="356" width="4" height="15" fill="rgb(228,143,14)"/><text x="835.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.25%)</title><rect x="824" y="276" width="15" height="15" fill="rgb(247,131,50)"/><text x="827.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.25%)</title><rect x="824" y="292" width="15" height="15" fill="rgb(205,15,22)"/><text x="827.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="836" y="308" width="3" height="15" fill="rgb(225,117,27)"/><text x="839.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:698) (1 samples, 0.31%)</title><rect x="836" y="324" width="3" height="15" fill="rgb(223,42,34)"/><text x="839.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.31%)</title><rect x="839" y="276" width="4" height="15" fill="rgb(209,54,27)"/><text x="842.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (25 samples, 7.81%)</title><rect x="754" y="196" width="93" height="15" fill="rgb(224,111,31)"/><text x="757.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 7.81%)</title><rect x="754" y="212" width="93" height="15" fill="rgb(212,186,13)"/><text x="757.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (25 samples, 7.81%)</title><rect x="754" y="228" width="93" height="15" fill="rgb(226,134,29)"/><text x="757.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 2.50%)</title><rect x="817" y="244" width="30" height="15" fill="rgb(218,218,42)"/><text x="820.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.88%)</title><rect x="824" y="260" width="23" height="15" fill="rgb(208,42,18)"/><text x="827.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.31%)</title><rect x="843" y="276" width="4" height="15" fill="rgb(231,180,46)"/><text x="846.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.31%)</title><rect x="847" y="196" width="3" height="15" fill="rgb(239,77,3)"/><text x="850.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.31%)</title><rect x="850" y="212" width="4" height="15" fill="rgb(219,112,31)"/><text x="853.00" y="222.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.31%)</title><rect x="861" y="244" width="4" height="15" fill="rgb(224,62,12)"/><text x="864.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.31%)</title><rect x="869" y="260" width="3" height="15" fill="rgb(244,147,48)"/><text x="872.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (3 samples, 0.94%)</title><rect x="872" y="292" width="11" height="15" fill="rgb(217,156,28)"/><text x="875.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.31%)</title><rect x="883" y="308" width="4" height="15" fill="rgb(244,24,8)"/><text x="886.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.31%)</title><rect x="883" y="324" width="4" height="15" fill="rgb(236,189,18)"/><text x="886.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.31%)</title><rect x="883" y="340" width="4" height="15" fill="rgb(212,140,2)"/><text x="886.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="887" y="340" width="4" height="15" fill="rgb(226,150,5)"/><text x="890.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.88%)</title><rect x="872" y="276" width="23" height="15" fill="rgb(237,23,25)"/><text x="875.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.94%)</title><rect x="883" y="292" width="12" height="15" fill="rgb(224,115,21)"/><text x="886.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.62%)</title><rect x="887" y="308" width="8" height="15" fill="rgb(241,44,4)"/><text x="890.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.62%)</title><rect x="887" y="324" width="8" height="15" fill="rgb(251,184,35)"/><text x="890.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:74) (1 samples, 0.31%)</title><rect x="891" y="340" width="4" height="15" fill="rgb(223,12,28)"/><text x="894.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (11 samples, 3.44%)</title><rect x="858" y="228" width="40" height="15" fill="rgb(253,207,5)"/><text x="861.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (9 samples, 2.81%)</title><rect x="865" y="244" width="33" height="15" fill="rgb(206,127,12)"/><text x="868.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 2.19%)</title><rect x="872" y="260" width="26" height="15" fill="rgb(224,14,51)"/><text x="875.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="895" y="276" width="3" height="15" fill="rgb(242,83,15)"/><text x="898.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.31%)</title><rect x="895" y="292" width="3" height="15" fill="rgb(239,45,13)"/><text x="898.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="895" y="308" width="3" height="15" fill="rgb(240,21,41)"/><text x="898.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.31%)</title><rect x="902" y="276" width="4" height="15" fill="rgb(234,166,23)"/><text x="905.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.31%)</title><rect x="906" y="308" width="3" height="15" fill="rgb(245,60,50)"/><text x="909.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.31%)</title><rect x="909" y="308" width="4" height="15" fill="rgb(213,155,39)"/><text x="912.00" y="318.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.31%)</title><rect x="909" y="324" width="4" height="15" fill="rgb(212,114,43)"/><text x="912.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.94%)</title><rect x="906" y="292" width="11" height="15" fill="rgb(249,38,37)"/><text x="909.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="913" y="308" width="4" height="15" fill="rgb(228,136,5)"/><text x="916.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.31%)</title><rect x="913" y="324" width="4" height="15" fill="rgb(214,136,21)"/><text x="916.00" y="334.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:203) (1 samples, 0.31%)</title><rect x="913" y="340" width="4" height="15" fill="rgb(246,95,48)"/><text x="916.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.56%)</title><rect x="902" y="260" width="18" height="15" fill="rgb(217,50,49)"/><text x="905.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.25%)</title><rect x="906" y="276" width="14" height="15" fill="rgb(214,85,3)"/><text x="909.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.31%)</title><rect x="917" y="292" width="3" height="15" fill="rgb(245,116,29)"/><text x="920.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.31%)</title><rect x="917" y="308" width="3" height="15" fill="rgb(209,127,34)"/><text x="920.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.31%)</title><rect x="917" y="324" width="3" height="15" fill="rgb(253,92,9)"/><text x="920.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.19%)</title><rect x="898" y="228" width="26" height="15" fill="rgb(252,124,17)"/><text x="901.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.88%)</title><rect x="902" y="244" width="22" height="15" fill="rgb(231,165,26)"/><text x="905.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.31%)</title><rect x="920" y="260" width="4" height="15" fill="rgb(245,192,7)"/><text x="923.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.31%)</title><rect x="920" y="276" width="4" height="15" fill="rgb(237,203,8)"/><text x="923.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="924" y="244" width="4" height="15" fill="rgb(208,112,22)"/><text x="927.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="924" y="260" width="4" height="15" fill="rgb(216,78,50)"/><text x="927.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.31%)</title><rect x="924" y="276" width="4" height="15" fill="rgb(230,105,34)"/><text x="927.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.31%)</title><rect x="924" y="292" width="4" height="15" fill="rgb(240,86,18)"/><text x="927.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="928" y="244" width="3" height="15" fill="rgb(221,218,7)"/><text x="931.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="928" y="260" width="3" height="15" fill="rgb(247,112,47)"/><text x="931.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1985) (1 samples, 0.31%)</title><rect x="928" y="276" width="3" height="15" fill="rgb(218,191,38)"/><text x="931.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (3 samples, 0.94%)</title><rect x="924" y="228" width="11" height="15" fill="rgb(253,102,15)"/><text x="927.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="931" y="244" width="4" height="15" fill="rgb(225,78,48)"/><text x="934.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="931" y="260" width="4" height="15" fill="rgb(252,81,31)"/><text x="934.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.31%)</title><rect x="935" y="244" width="4" height="15" fill="rgb(242,165,31)"/><text x="938.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.31%)</title><rect x="946" y="292" width="4" height="15" fill="rgb(209,139,14)"/><text x="949.00" y="302.50"></text></g><g><title>0x7fca157f5730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="950" y="324" width="4" height="15" fill="rgb(249,8,39)"/><text x="953.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.62%)</title><rect x="950" y="308" width="7" height="15" fill="rgb(206,22,29)"/><text x="953.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="954" y="324" width="3" height="15" fill="rgb(247,166,3)"/><text x="957.00" y="334.50"></text></g><g><title>0x7fca158bd130 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="954" y="340" width="3" height="15" fill="rgb(218,42,34)"/><text x="957.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (30 samples, 9.38%)</title><rect x="850" y="196" width="111" height="15" fill="rgb(214,45,4)"/><text x="853.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 9.06%)</title><rect x="854" y="212" width="107" height="15" fill="rgb(222,32,35)"/><text x="857.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 2.19%)</title><rect x="935" y="228" width="26" height="15" fill="rgb(240,37,5)"/><text x="938.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.88%)</title><rect x="939" y="244" width="22" height="15" fill="rgb(217,162,20)"/><text x="942.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.56%)</title><rect x="942" y="260" width="19" height="15" fill="rgb(230,64,27)"/><text x="945.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.56%)</title><rect x="942" y="276" width="19" height="15" fill="rgb(242,217,34)"/><text x="945.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.94%)</title><rect x="950" y="292" width="11" height="15" fill="rgb(248,77,20)"/><text x="953.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.31%)</title><rect x="957" y="308" width="4" height="15" fill="rgb(213,151,23)"/><text x="960.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:42) (1 samples, 0.31%)</title><rect x="957" y="324" width="4" height="15" fill="rgb(213,96,38)"/><text x="960.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (68 samples, 21.25%)</title><rect x="718" y="180" width="250" height="15" fill="rgb(219,21,16)"/><text x="721.00" y="190.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.62%)</title><rect x="961" y="196" width="7" height="15" fill="rgb(211,14,31)"/><text x="964.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.31%)</title><rect x="968" y="180" width="4" height="15" fill="rgb(234,212,11)"/><text x="971.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.31%)</title><rect x="972" y="180" width="4" height="15" fill="rgb(206,113,12)"/><text x="975.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.31%)</title><rect x="976" y="180" width="3" height="15" fill="rgb(214,29,11)"/><text x="979.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (91 samples, 28.44%)</title><rect x="673" y="164" width="336" height="15" fill="rgb(220,67,51)"/><text x="676.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 2.50%)</title><rect x="979" y="180" width="30" height="15" fill="rgb(212,125,37)"/><text x="982.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 0.94%)</title><rect x="1009" y="164" width="11" height="15" fill="rgb(225,113,3)"/><text x="1012.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.62%)</title><rect x="1013" y="180" width="7" height="15" fill="rgb(252,189,39)"/><text x="1016.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:45) (105 samples, 32.81%)</title><rect x="636" y="52" width="388" height="15" fill="rgb(216,228,0)"/><text x="639.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:44) (105 samples, 32.81%)</title><rect x="636" y="68" width="388" height="15" fill="rgb(250,165,44)"/><text x="639.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_c..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:29) (104 samples, 32.50%)</title><rect x="640" y="84" width="384" height="15" fill="rgb(212,211,17)"/><text x="643.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:23) (103 samples, 32.19%)</title><rect x="644" y="100" width="380" height="15" fill="rgb(225,215,54)"/><text x="647.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 31.25%)</title><rect x="655" y="116" width="369" height="15" fill="rgb(234,70,46)"/><text x="658.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (98 samples, 30.62%)</title><rect x="662" y="132" width="362" height="15" fill="rgb(218,20,9)"/><text x="665.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (97 samples, 30.31%)</title><rect x="666" y="148" width="358" height="15" fill="rgb(230,203,20)"/><text x="669.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="1020" y="164" width="4" height="15" fill="rgb(250,59,52)"/><text x="1023.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="1020" y="180" width="4" height="15" fill="rgb(243,37,18)"/><text x="1023.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.31%)</title><rect x="1020" y="196" width="4" height="15" fill="rgb(207,50,2)"/><text x="1023.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (2 samples, 0.62%)</title><rect x="1038" y="148" width="8" height="15" fill="rgb(241,32,52)"/><text x="1041.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.62%)</title><rect x="1046" y="196" width="7" height="15" fill="rgb(240,20,54)"/><text x="1049.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.31%)</title><rect x="1049" y="212" width="4" height="15" fill="rgb(246,217,7)"/><text x="1052.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1049" y="228" width="4" height="15" fill="rgb(239,149,21)"/><text x="1052.00" y="238.50"></text></g><g><title>0x7fc9d6048ff9 (?) (1 samples, 0.31%)</title><rect x="1060" y="212" width="4" height="15" fill="rgb(254,117,49)"/><text x="1063.00" y="222.50"></text></g><g><title>0x7fc9d6043ef6 (?) (1 samples, 0.31%)</title><rect x="1060" y="228" width="4" height="15" fill="rgb(223,51,3)"/><text x="1063.00" y="238.50"></text></g><g><title>0x7fc9d6038962 (?) (1 samples, 0.31%)</title><rect x="1060" y="244" width="4" height="15" fill="rgb(242,62,44)"/><text x="1063.00" y="254.50"></text></g><g><title>0x7fc9d606c7a7 (?) (1 samples, 0.31%)</title><rect x="1060" y="260" width="4" height="15" fill="rgb(223,227,36)"/><text x="1063.00" y="270.50"></text></g><g><title>0x7fc9d606c379 (?) (1 samples, 0.31%)</title><rect x="1060" y="276" width="4" height="15" fill="rgb(227,40,5)"/><text x="1063.00" y="286.50"></text></g><g><title>0x7fc9d64ca8b8 (?) (1 samples, 0.31%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(207,33,6)"/><text x="1063.00" y="302.50"></text></g><g><title>0x7fc9d64c8c7f (?) (1 samples, 0.31%)</title><rect x="1060" y="308" width="4" height="15" fill="rgb(252,178,16)"/><text x="1063.00" y="318.50"></text></g><g><title>0x7fc9d64db99c (?) (1 samples, 0.31%)</title><rect x="1060" y="324" width="4" height="15" fill="rgb(235,60,52)"/><text x="1063.00" y="334.50"></text></g><g><title>0x7fc9d61c09ae (?) (1 samples, 0.31%)</title><rect x="1060" y="340" width="4" height="15" fill="rgb(238,189,6)"/><text x="1063.00" y="350.50"></text></g><g><title>0x7fc9d64975e6 (?) (1 samples, 0.31%)</title><rect x="1060" y="356" width="4" height="15" fill="rgb(239,106,0)"/><text x="1063.00" y="366.50"></text></g><g><title>0x7fc9d6497486 (?) (1 samples, 0.31%)</title><rect x="1060" y="372" width="4" height="15" fill="rgb(224,84,9)"/><text x="1063.00" y="382.50"></text></g><g><title>0x7fc9d6481c8d (?) (1 samples, 0.31%)</title><rect x="1060" y="388" width="4" height="15" fill="rgb(249,136,0)"/><text x="1063.00" y="398.50"></text></g><g><title>0x7fc9d6481202 (?) (1 samples, 0.31%)</title><rect x="1060" y="404" width="4" height="15" fill="rgb(242,101,27)"/><text x="1063.00" y="414.50"></text></g><g><title>0x7fc9d6480913 (?) (1 samples, 0.31%)</title><rect x="1060" y="420" width="4" height="15" fill="rgb(207,98,37)"/><text x="1063.00" y="430.50"></text></g><g><title>0x7fc9d647fdaf (?) (1 samples, 0.31%)</title><rect x="1060" y="436" width="4" height="15" fill="rgb(234,105,39)"/><text x="1063.00" y="446.50"></text></g><g><title>0x7fc9d647a78f (?) (1 samples, 0.31%)</title><rect x="1060" y="452" width="4" height="15" fill="rgb(211,21,0)"/><text x="1063.00" y="462.50"></text></g><g><title>0x7fc9d64afe78 (?) (1 samples, 0.31%)</title><rect x="1060" y="468" width="4" height="15" fill="rgb(217,138,12)"/><text x="1063.00" y="478.50"></text></g><g><title>0x7fc9d64afb3d (?) (1 samples, 0.31%)</title><rect x="1060" y="484" width="4" height="15" fill="rgb(213,142,20)"/><text x="1063.00" y="494.50"></text></g><g><title>0x7fc9d6164413 (?) (1 samples, 0.31%)</title><rect x="1060" y="500" width="4" height="15" fill="rgb(252,152,51)"/><text x="1063.00" y="510.50"></text></g><g><title>0x7fca052bb6f5 (?) (1 samples, 0.31%)</title><rect x="1060" y="516" width="4" height="15" fill="rgb(235,218,43)"/><text x="1063.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1060" y="532" width="4" height="15" fill="rgb(213,109,2)"/><text x="1063.00" y="542.50"></text></g><g><title>0x7fca157e0b76 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1060" y="548" width="4" height="15" fill="rgb(240,184,41)"/><text x="1063.00" y="558.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1075" y="260" width="4" height="15" fill="rgb(232,128,27)"/><text x="1078.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1075" y="276" width="4" height="15" fill="rgb(241,40,47)"/><text x="1078.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1075" y="292" width="4" height="15" fill="rgb(248,27,0)"/><text x="1078.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1079" y="292" width="4" height="15" fill="rgb(211,29,44)"/><text x="1082.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1079" y="308" width="4" height="15" fill="rgb(233,121,8)"/><text x="1082.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1083" y="292" width="3" height="15" fill="rgb(235,157,49)"/><text x="1086.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1083" y="308" width="3" height="15" fill="rgb(250,38,36)"/><text x="1086.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1086" y="292" width="4" height="15" fill="rgb(245,100,19)"/><text x="1089.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1090" y="292" width="4" height="15" fill="rgb(233,39,4)"/><text x="1093.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="340" width="4" height="15" fill="rgb(240,72,7)"/><text x="1100.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="356" width="4" height="15" fill="rgb(245,131,23)"/><text x="1100.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="372" width="4" height="15" fill="rgb(245,138,3)"/><text x="1100.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="388" width="4" height="15" fill="rgb(251,147,42)"/><text x="1100.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="404" width="4" height="15" fill="rgb(221,96,50)"/><text x="1100.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="420" width="4" height="15" fill="rgb(232,83,34)"/><text x="1100.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="436" width="4" height="15" fill="rgb(249,122,1)"/><text x="1100.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="452" width="4" height="15" fill="rgb(249,19,52)"/><text x="1100.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1097" y="468" width="4" height="15" fill="rgb(237,133,34)"/><text x="1100.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="356" width="4" height="15" fill="rgb(222,221,45)"/><text x="1104.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="372" width="4" height="15" fill="rgb(219,10,38)"/><text x="1104.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1101" y="388" width="4" height="15" fill="rgb(213,107,12)"/><text x="1104.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1101" y="340" width="7" height="15" fill="rgb(214,31,46)"/><text x="1104.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1105" y="356" width="3" height="15" fill="rgb(211,44,21)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(253,124,27)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1108" y="340" width="4" height="15" fill="rgb(214,58,30)"/><text x="1111.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1108" y="356" width="4" height="15" fill="rgb(231,168,38)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1112" y="340" width="7" height="15" fill="rgb(221,83,44)"/><text x="1115.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1112" y="356" width="7" height="15" fill="rgb(229,46,28)"/><text x="1115.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1112" y="372" width="7" height="15" fill="rgb(244,197,19)"/><text x="1115.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1119" y="340" width="4" height="15" fill="rgb(245,26,42)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1123" y="340" width="4" height="15" fill="rgb(246,147,34)"/><text x="1126.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1127" y="340" width="4" height="15" fill="rgb(247,115,39)"/><text x="1130.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1127" y="356" width="4" height="15" fill="rgb(249,99,7)"/><text x="1130.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.69%)</title><rect x="1079" y="260" width="55" height="15" fill="rgb(254,72,11)"/><text x="1082.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.69%)</title><rect x="1079" y="276" width="55" height="15" fill="rgb(210,120,45)"/><text x="1082.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.44%)</title><rect x="1094" y="292" width="40" height="15" fill="rgb(217,157,45)"/><text x="1097.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.44%)</title><rect x="1094" y="308" width="40" height="15" fill="rgb(225,125,25)"/><text x="1097.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.44%)</title><rect x="1094" y="324" width="40" height="15" fill="rgb(235,136,37)"/><text x="1097.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1131" y="340" width="3" height="15" fill="rgb(232,30,45)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1134" y="276" width="4" height="15" fill="rgb(225,67,49)"/><text x="1137.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="276" width="4" height="15" fill="rgb(246,66,29)"/><text x="1141.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="292" width="4" height="15" fill="rgb(224,221,40)"/><text x="1141.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1138" y="308" width="4" height="15" fill="rgb(229,197,5)"/><text x="1141.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="1142" y="276" width="3" height="15" fill="rgb(230,86,29)"/><text x="1145.00" y="286.50"></text></g><g><title>0x7fca158bde61 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1142" y="292" width="3" height="15" fill="rgb(214,194,15)"/><text x="1145.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.56%)</title><rect x="1134" y="260" width="19" height="15" fill="rgb(210,9,19)"/><text x="1137.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="1145" y="276" width="8" height="15" fill="rgb(243,224,24)"/><text x="1148.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1153" y="260" width="3" height="15" fill="rgb(250,190,12)"/><text x="1156.00" y="270.50"></text></g><g><title>0x7fca157ffdbb (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1153" y="276" width="3" height="15" fill="rgb(209,114,1)"/><text x="1156.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1156" y="260" width="8" height="15" fill="rgb(222,90,39)"/><text x="1159.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1164" y="260" width="3" height="15" fill="rgb(250,137,29)"/><text x="1167.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1164" y="276" width="3" height="15" fill="rgb(211,121,14)"/><text x="1167.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1164" y="292" width="3" height="15" fill="rgb(238,91,10)"/><text x="1167.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1164" y="308" width="3" height="15" fill="rgb(232,217,15)"/><text x="1167.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 8.44%)</title><rect x="1072" y="244" width="99" height="15" fill="rgb(206,53,16)"/><text x="1075.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::emplace_back&lt;pybind11::object&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1167" y="260" width="4" height="15" fill="rgb(233,45,18)"/><text x="1170.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (37 samples, 11.56%)</title><rect x="1046" y="164" width="136" height="15" fill="rgb(212,26,17)"/><text x="1049.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (37 samples, 11.56%)</title><rect x="1046" y="180" width="136" height="15" fill="rgb(232,46,47)"/><text x="1049.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (onnxruntime/capi/session.py:136) (35 samples, 10.94%)</title><rect x="1053" y="196" width="129" height="15" fill="rgb(220,171,8)"/><text x="1056.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.00%)</title><rect x="1064" y="212" width="118" height="15" fill="rgb(237,102,35)"/><text x="1067.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.00%)</title><rect x="1064" y="228" width="118" height="15" fill="rgb(219,211,6)"/><text x="1067.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="1171" y="244" width="11" height="15" fill="rgb(228,104,46)"/><text x="1174.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1178" y="260" width="4" height="15" fill="rgb(237,178,50)"/><text x="1181.00" y="270.50"></text></g><g><title>0x7fc9d600ff90 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1178" y="276" width="4" height="15" fill="rgb(234,221,41)"/><text x="1181.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (42 samples, 13.12%)</title><rect x="1031" y="132" width="155" height="15" fill="rgb(237,44,15)"/><text x="1034.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (38 samples, 11.88%)</title><rect x="1046" y="148" width="140" height="15" fill="rgb(216,180,5)"/><text x="1049.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.31%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(213,5,6)"/><text x="1185.00" y="174.50"></text></g><g><title>all (320 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,21,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:52) (45 samples, 14.06%)</title><rect x="1024" y="52" width="166" height="15" fill="rgb(251,175,52)"/><text x="1027.00" y="62.50">&lt;module&gt; (bench_Logis..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:51) (45 samples, 14.06%)</title><rect x="1024" y="68" width="166" height="15" fill="rgb(249,149,4)"/><text x="1027.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:29) (45 samples, 14.06%)</title><rect x="1024" y="84" width="166" height="15" fill="rgb(244,194,6)"/><text x="1027.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py:23) (45 samples, 14.06%)</title><rect x="1024" y="100" width="166" height="15" fill="rgb(246,151,29)"/><text x="1027.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (44 samples, 13.75%)</title><rect x="1027" y="116" width="163" height="15" fill="rgb(213,78,20)"/><text x="1030.00" y="126.50">time_predict (mlprodi..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(222,116,36)"/><text x="1189.00" y="142.50"></text></g></g></svg>