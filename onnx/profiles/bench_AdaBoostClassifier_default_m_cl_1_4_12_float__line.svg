<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.22%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(249,31,30)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:69) (1 samples, 0.22%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(240,173,52)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.22%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(240,212,51)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.22%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(243,197,54)"/><text x="13.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.22%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(224,132,51)"/><text x="13.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.22%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(233,26,18)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.22%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(206,165,27)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.22%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(211,20,51)"/><text x="13.00" y="302.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.22%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(227,151,45)"/><text x="13.00" y="318.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.22%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(234,143,52)"/><text x="15.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.22%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(212,132,48)"/><text x="15.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.22%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(241,198,48)"/><text x="15.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.22%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(216,81,42)"/><text x="15.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.22%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(220,48,42)"/><text x="15.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.22%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(216,138,39)"/><text x="15.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.22%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(225,216,42)"/><text x="15.00" y="302.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (3 samples, 0.65%)</title><rect x="10" y="164" width="7" height="15" fill="rgb(226,213,28)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.43%)</title><rect x="12" y="180" width="5" height="15" fill="rgb(214,188,51)"/><text x="15.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.22%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(226,117,54)"/><text x="18.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.22%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(241,40,12)"/><text x="18.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:31) (4 samples, 0.86%)</title><rect x="10" y="52" width="10" height="15" fill="rgb(234,9,44)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:11) (4 samples, 0.86%)</title><rect x="10" y="68" width="10" height="15" fill="rgb(250,55,42)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (4 samples, 0.86%)</title><rect x="10" y="84" width="10" height="15" fill="rgb(216,75,52)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 0.86%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(247,9,20)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (4 samples, 0.86%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(243,28,29)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (4 samples, 0.86%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(240,208,36)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (4 samples, 0.86%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(250,74,49)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.22%)</title><rect x="17" y="164" width="3" height="15" fill="rgb(237,214,26)"/><text x="20.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.22%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(227,0,20)"/><text x="20.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.22%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(219,162,38)"/><text x="20.00" y="206.50"></text></g><g><title>0x7f051fff6b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(213,160,27)"/><text x="20.00" y="222.50"></text></g><g><title>0x7f052002810a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="17" y="228" width="3" height="15" fill="rgb(235,22,45)"/><text x="20.00" y="238.50"></text></g><g><title>0x7f0520253e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(245,204,36)"/><text x="20.00" y="254.50"></text></g><g><title>0x7f0520486c77 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(254,39,28)"/><text x="20.00" y="270.50"></text></g><g><title>0x7f052048715e (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="17" y="276" width="3" height="15" fill="rgb(253,213,9)"/><text x="20.00" y="286.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:85) (1 samples, 0.22%)</title><rect x="20" y="212" width="2" height="15" fill="rgb(253,48,4)"/><text x="23.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.22%)</title><rect x="20" y="228" width="2" height="15" fill="rgb(208,75,26)"/><text x="23.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.22%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(219,9,49)"/><text x="23.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.22%)</title><rect x="20" y="260" width="2" height="15" fill="rgb(215,220,43)"/><text x="23.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.22%)</title><rect x="20" y="276" width="2" height="15" fill="rgb(238,29,50)"/><text x="23.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.22%)</title><rect x="20" y="292" width="2" height="15" fill="rgb(251,55,44)"/><text x="23.00" y="302.50"></text></g><g><title>extract (traceback.py:350) (1 samples, 0.22%)</title><rect x="20" y="308" width="2" height="15" fill="rgb(230,50,29)"/><text x="23.00" y="318.50"></text></g><g><title>lazycache (linecache.py:161) (1 samples, 0.22%)</title><rect x="20" y="324" width="2" height="15" fill="rgb(252,99,12)"/><text x="23.00" y="334.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (2 samples, 0.43%)</title><rect x="20" y="84" width="5" height="15" fill="rgb(225,207,33)"/><text x="23.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.43%)</title><rect x="20" y="100" width="5" height="15" fill="rgb(235,194,12)"/><text x="23.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.43%)</title><rect x="20" y="116" width="5" height="15" fill="rgb(242,71,26)"/><text x="23.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.43%)</title><rect x="20" y="132" width="5" height="15" fill="rgb(239,34,13)"/><text x="23.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.43%)</title><rect x="20" y="148" width="5" height="15" fill="rgb(247,106,38)"/><text x="23.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.43%)</title><rect x="20" y="164" width="5" height="15" fill="rgb(241,159,27)"/><text x="23.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.43%)</title><rect x="20" y="180" width="5" height="15" fill="rgb(222,186,5)"/><text x="23.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.43%)</title><rect x="20" y="196" width="5" height="15" fill="rgb(229,206,9)"/><text x="23.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.22%)</title><rect x="22" y="212" width="3" height="15" fill="rgb(215,120,42)"/><text x="25.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.22%)</title><rect x="22" y="228" width="3" height="15" fill="rgb(253,102,43)"/><text x="25.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.22%)</title><rect x="22" y="244" width="3" height="15" fill="rgb(241,130,4)"/><text x="25.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.22%)</title><rect x="22" y="260" width="3" height="15" fill="rgb(220,158,25)"/><text x="25.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.22%)</title><rect x="25" y="148" width="2" height="15" fill="rgb(208,81,23)"/><text x="28.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.22%)</title><rect x="25" y="164" width="2" height="15" fill="rgb(206,105,48)"/><text x="28.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.22%)</title><rect x="25" y="180" width="2" height="15" fill="rgb(221,224,2)"/><text x="28.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:696) (1 samples, 0.22%)</title><rect x="27" y="180" width="3" height="15" fill="rgb(246,23,40)"/><text x="30.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.22%)</title><rect x="32" y="228" width="3" height="15" fill="rgb(220,33,9)"/><text x="35.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.65%)</title><rect x="32" y="212" width="8" height="15" fill="rgb(247,228,8)"/><text x="35.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.43%)</title><rect x="35" y="228" width="5" height="15" fill="rgb(224,88,39)"/><text x="38.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.43%)</title><rect x="35" y="244" width="5" height="15" fill="rgb(253,72,24)"/><text x="38.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.22%)</title><rect x="37" y="260" width="3" height="15" fill="rgb(207,162,1)"/><text x="40.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.22%)</title><rect x="42" y="244" width="3" height="15" fill="rgb(233,33,33)"/><text x="45.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.22%)</title><rect x="45" y="244" width="3" height="15" fill="rgb(238,225,14)"/><text x="48.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.22%)</title><rect x="50" y="276" width="3" height="15" fill="rgb(239,8,14)"/><text x="53.00" y="286.50"></text></g><g><title>0x7f05465d4e50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="50" y="292" width="3" height="15" fill="rgb(240,4,23)"/><text x="53.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.65%)</title><rect x="48" y="244" width="7" height="15" fill="rgb(252,157,14)"/><text x="51.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.43%)</title><rect x="50" y="260" width="5" height="15" fill="rgb(228,116,51)"/><text x="53.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.22%)</title><rect x="53" y="276" width="2" height="15" fill="rgb(224,189,26)"/><text x="56.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.22%)</title><rect x="55" y="244" width="3" height="15" fill="rgb(248,139,25)"/><text x="58.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.22%)</title><rect x="55" y="260" width="3" height="15" fill="rgb(234,64,44)"/><text x="58.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.22%)</title><rect x="55" y="276" width="3" height="15" fill="rgb(241,39,35)"/><text x="58.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.22%)</title><rect x="55" y="292" width="3" height="15" fill="rgb(229,172,10)"/><text x="58.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.22%)</title><rect x="55" y="308" width="3" height="15" fill="rgb(230,134,37)"/><text x="58.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.22%)</title><rect x="55" y="324" width="3" height="15" fill="rgb(248,95,49)"/><text x="58.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.22%)</title><rect x="58" y="244" width="2" height="15" fill="rgb(249,55,39)"/><text x="61.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.22%)</title><rect x="58" y="260" width="2" height="15" fill="rgb(208,223,50)"/><text x="61.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.22%)</title><rect x="60" y="244" width="3" height="15" fill="rgb(249,112,29)"/><text x="63.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.22%)</title><rect x="63" y="244" width="2" height="15" fill="rgb(241,196,18)"/><text x="66.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.22%)</title><rect x="63" y="260" width="2" height="15" fill="rgb(225,111,27)"/><text x="66.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.22%)</title><rect x="65" y="260" width="3" height="15" fill="rgb(210,132,45)"/><text x="68.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (12 samples, 2.58%)</title><rect x="40" y="212" width="30" height="15" fill="rgb(245,30,51)"/><text x="43.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (12 samples, 2.58%)</title><rect x="40" y="228" width="30" height="15" fill="rgb(215,87,54)"/><text x="43.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.43%)</title><rect x="65" y="244" width="5" height="15" fill="rgb(224,107,16)"/><text x="68.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.22%)</title><rect x="68" y="260" width="2" height="15" fill="rgb(240,4,23)"/><text x="71.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.22%)</title><rect x="68" y="276" width="2" height="15" fill="rgb(228,132,34)"/><text x="71.00" y="286.50"></text></g><g><title>0x7f051fff4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="70" y="308" width="3" height="15" fill="rgb(245,27,40)"/><text x="73.00" y="318.50"></text></g><g><title>0x7f051ffea2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="70" y="324" width="3" height="15" fill="rgb(218,146,41)"/><text x="73.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.22%)</title><rect x="70" y="340" width="3" height="15" fill="rgb(248,121,0)"/><text x="73.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.22%)</title><rect x="70" y="356" width="3" height="15" fill="rgb(223,89,17)"/><text x="73.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.22%)</title><rect x="70" y="372" width="3" height="15" fill="rgb(234,210,48)"/><text x="73.00" y="382.50"></text></g><g><title>0x7f05465be902 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="70" y="388" width="3" height="15" fill="rgb(238,110,39)"/><text x="73.00" y="398.50"></text></g><g><title>0x7f05200102df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.43%)</title><rect x="70" y="276" width="5" height="15" fill="rgb(243,182,13)"/><text x="73.00" y="286.50"></text></g><g><title>0x7f051fff4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.43%)</title><rect x="70" y="292" width="5" height="15" fill="rgb(224,223,33)"/><text x="73.00" y="302.50"></text></g><g><title>0x7f051fff46fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="73" y="308" width="2" height="15" fill="rgb(237,116,19)"/><text x="76.00" y="318.50"></text></g><g><title>0x7f052001092f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="75" y="276" width="3" height="15" fill="rgb(244,77,25)"/><text x="78.00" y="286.50"></text></g><g><title>0x7f051ffe5a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="75" y="292" width="3" height="15" fill="rgb(234,4,6)"/><text x="78.00" y="302.50"></text></g><g><title>0x7f0520001fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.86%)</title><rect x="70" y="244" width="11" height="15" fill="rgb(242,145,36)"/><text x="73.00" y="254.50"></text></g><g><title>0x7f0520011405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.86%)</title><rect x="70" y="260" width="11" height="15" fill="rgb(250,59,28)"/><text x="73.00" y="270.50"></text></g><g><title>0x7f0520010c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="78" y="276" width="3" height="15" fill="rgb(207,178,2)"/><text x="81.00" y="286.50"></text></g><g><title>0x7f051ffe8529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="78" y="292" width="3" height="15" fill="rgb(212,224,54)"/><text x="81.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.22%)</title><rect x="78" y="308" width="3" height="15" fill="rgb(240,137,53)"/><text x="81.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.22%)</title><rect x="78" y="324" width="3" height="15" fill="rgb(228,187,27)"/><text x="81.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (5 samples, 1.08%)</title><rect x="70" y="212" width="13" height="15" fill="rgb(223,188,10)"/><text x="73.00" y="222.50"></text></g><g><title>0x7f0520002d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.08%)</title><rect x="70" y="228" width="13" height="15" fill="rgb(249,1,4)"/><text x="73.00" y="238.50"></text></g><g><title>0x7f052000214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(247,84,5)"/><text x="84.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="81" y="260" width="2" height="15" fill="rgb(237,114,15)"/><text x="84.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="81" y="276" width="2" height="15" fill="rgb(251,190,25)"/><text x="84.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.22%)</title><rect x="81" y="292" width="2" height="15" fill="rgb(230,28,0)"/><text x="84.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.22%)</title><rect x="81" y="308" width="2" height="15" fill="rgb(245,154,35)"/><text x="84.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.43%)</title><rect x="83" y="212" width="5" height="15" fill="rgb(249,129,41)"/><text x="86.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.43%)</title><rect x="83" y="228" width="5" height="15" fill="rgb(216,82,41)"/><text x="86.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:376) (2 samples, 0.43%)</title><rect x="83" y="244" width="5" height="15" fill="rgb(223,174,24)"/><text x="86.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.22%)</title><rect x="88" y="228" width="3" height="15" fill="rgb(220,38,0)"/><text x="91.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.22%)</title><rect x="88" y="244" width="3" height="15" fill="rgb(205,87,1)"/><text x="91.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="91" y="228" width="2" height="15" fill="rgb(235,217,32)"/><text x="94.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="91" y="244" width="2" height="15" fill="rgb(253,104,6)"/><text x="94.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.22%)</title><rect x="91" y="260" width="2" height="15" fill="rgb(205,178,0)"/><text x="94.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="93" y="308" width="3" height="15" fill="rgb(215,136,31)"/><text x="96.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.22%)</title><rect x="93" y="324" width="3" height="15" fill="rgb(240,50,52)"/><text x="96.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.86%)</title><rect x="88" y="212" width="10" height="15" fill="rgb(239,46,17)"/><text x="91.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.43%)</title><rect x="93" y="228" width="5" height="15" fill="rgb(248,71,11)"/><text x="96.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="93" y="244" width="5" height="15" fill="rgb(226,221,44)"/><text x="96.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="93" y="260" width="5" height="15" fill="rgb(245,191,32)"/><text x="96.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.43%)</title><rect x="93" y="276" width="5" height="15" fill="rgb(208,106,32)"/><text x="96.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.43%)</title><rect x="93" y="292" width="5" height="15" fill="rgb(227,24,51)"/><text x="96.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.22%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(229,113,22)"/><text x="99.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="98" y="292" width="3" height="15" fill="rgb(205,174,45)"/><text x="101.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1178) (1 samples, 0.22%)</title><rect x="98" y="308" width="3" height="15" fill="rgb(238,98,40)"/><text x="101.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (29 samples, 6.24%)</title><rect x="30" y="196" width="73" height="15" fill="rgb(222,203,19)"/><text x="33.00" y="206.50">_samme_p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (2 samples, 0.43%)</title><rect x="98" y="212" width="5" height="15" fill="rgb(253,16,6)"/><text x="101.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="98" y="228" width="5" height="15" fill="rgb(252,193,1)"/><text x="101.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="98" y="244" width="5" height="15" fill="rgb(253,125,0)"/><text x="101.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.43%)</title><rect x="98" y="260" width="5" height="15" fill="rgb(215,184,23)"/><text x="101.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.43%)</title><rect x="98" y="276" width="5" height="15" fill="rgb(238,150,29)"/><text x="101.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="101" y="292" width="2" height="15" fill="rgb(225,56,52)"/><text x="104.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.22%)</title><rect x="101" y="308" width="2" height="15" fill="rgb(210,82,6)"/><text x="104.00" y="318.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:5) (1 samples, 0.22%)</title><rect x="103" y="212" width="3" height="15" fill="rgb(205,159,18)"/><text x="106.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.22%)</title><rect x="106" y="260" width="2" height="15" fill="rgb(249,20,23)"/><text x="109.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.65%)</title><rect x="108" y="308" width="8" height="15" fill="rgb(242,63,4)"/><text x="111.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.65%)</title><rect x="108" y="324" width="8" height="15" fill="rgb(217,77,25)"/><text x="111.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.65%)</title><rect x="108" y="340" width="8" height="15" fill="rgb(229,73,10)"/><text x="111.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.22%)</title><rect x="119" y="404" width="2" height="15" fill="rgb(210,64,32)"/><text x="122.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.86%)</title><rect x="116" y="324" width="10" height="15" fill="rgb(254,197,21)"/><text x="119.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.65%)</title><rect x="119" y="340" width="7" height="15" fill="rgb(237,229,14)"/><text x="122.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.65%)</title><rect x="119" y="356" width="7" height="15" fill="rgb(207,0,28)"/><text x="122.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.65%)</title><rect x="119" y="372" width="7" height="15" fill="rgb(254,47,32)"/><text x="122.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.65%)</title><rect x="119" y="388" width="7" height="15" fill="rgb(210,198,8)"/><text x="122.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.43%)</title><rect x="121" y="404" width="5" height="15" fill="rgb(239,74,42)"/><text x="124.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.43%)</title><rect x="121" y="420" width="5" height="15" fill="rgb(252,181,12)"/><text x="124.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.43%)</title><rect x="121" y="436" width="5" height="15" fill="rgb(227,39,50)"/><text x="124.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.43%)</title><rect x="121" y="452" width="5" height="15" fill="rgb(228,142,5)"/><text x="124.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 1.08%)</title><rect x="116" y="308" width="13" height="15" fill="rgb(230,78,44)"/><text x="119.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.22%)</title><rect x="126" y="324" width="3" height="15" fill="rgb(234,158,29)"/><text x="129.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="126" y="340" width="3" height="15" fill="rgb(252,144,46)"/><text x="129.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="126" y="356" width="3" height="15" fill="rgb(216,135,45)"/><text x="129.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.22%)</title><rect x="126" y="372" width="3" height="15" fill="rgb(231,197,24)"/><text x="129.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="131" y="356" width="3" height="15" fill="rgb(212,132,39)"/><text x="134.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="131" y="372" width="3" height="15" fill="rgb(229,220,31)"/><text x="134.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="131" y="388" width="3" height="15" fill="rgb(244,105,7)"/><text x="134.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="131" y="404" width="3" height="15" fill="rgb(240,22,50)"/><text x="134.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.22%)</title><rect x="131" y="420" width="3" height="15" fill="rgb(254,78,10)"/><text x="134.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.43%)</title><rect x="131" y="340" width="5" height="15" fill="rgb(233,214,26)"/><text x="134.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:581) (1 samples, 0.22%)</title><rect x="134" y="356" width="2" height="15" fill="rgb(246,155,16)"/><text x="137.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (14 samples, 3.01%)</title><rect x="103" y="196" width="36" height="15" fill="rgb(237,217,29)"/><text x="106.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (13 samples, 2.80%)</title><rect x="106" y="212" width="33" height="15" fill="rgb(220,46,28)"/><text x="109.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (13 samples, 2.80%)</title><rect x="106" y="228" width="33" height="15" fill="rgb(206,168,6)"/><text x="109.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (13 samples, 2.80%)</title><rect x="106" y="244" width="33" height="15" fill="rgb(245,163,36)"/><text x="109.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 2.58%)</title><rect x="108" y="260" width="31" height="15" fill="rgb(249,27,11)"/><text x="111.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (12 samples, 2.58%)</title><rect x="108" y="276" width="31" height="15" fill="rgb(218,134,15)"/><text x="111.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 2.58%)</title><rect x="108" y="292" width="31" height="15" fill="rgb(225,168,54)"/><text x="111.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (4 samples, 0.86%)</title><rect x="129" y="308" width="10" height="15" fill="rgb(226,161,4)"/><text x="132.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (3 samples, 0.65%)</title><rect x="131" y="324" width="8" height="15" fill="rgb(214,223,32)"/><text x="134.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.22%)</title><rect x="136" y="340" width="3" height="15" fill="rgb(228,83,16)"/><text x="139.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.22%)</title><rect x="136" y="356" width="3" height="15" fill="rgb(251,157,13)"/><text x="139.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.22%)</title><rect x="139" y="196" width="2" height="15" fill="rgb(240,136,27)"/><text x="142.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="141" y="244" width="3" height="15" fill="rgb(245,125,42)"/><text x="144.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.22%)</title><rect x="141" y="260" width="3" height="15" fill="rgb(205,113,43)"/><text x="144.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.22%)</title><rect x="141" y="276" width="3" height="15" fill="rgb(244,51,11)"/><text x="144.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.22%)</title><rect x="141" y="292" width="3" height="15" fill="rgb(248,124,3)"/><text x="144.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:208) (1 samples, 0.22%)</title><rect x="141" y="308" width="3" height="15" fill="rgb(211,111,9)"/><text x="144.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="144" y="244" width="3" height="15" fill="rgb(238,99,23)"/><text x="147.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.22%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(248,136,28)"/><text x="147.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.22%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(227,19,41)"/><text x="147.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:693) (1 samples, 0.22%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(222,51,15)"/><text x="147.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="141" y="228" width="8" height="15" fill="rgb(232,40,51)"/><text x="144.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.22%)</title><rect x="147" y="244" width="2" height="15" fill="rgb(221,51,4)"/><text x="150.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 0.86%)</title><rect x="141" y="212" width="11" height="15" fill="rgb(237,0,38)"/><text x="144.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.22%)</title><rect x="149" y="228" width="3" height="15" fill="rgb(223,164,24)"/><text x="152.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="149" y="244" width="3" height="15" fill="rgb(222,9,50)"/><text x="152.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="149" y="260" width="3" height="15" fill="rgb(211,226,34)"/><text x="152.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.22%)</title><rect x="149" y="276" width="3" height="15" fill="rgb(214,23,0)"/><text x="152.00" y="286.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (50 samples, 10.75%)</title><rect x="27" y="148" width="127" height="15" fill="rgb(217,106,49)"/><text x="30.00" y="158.50">predict_proba (..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (50 samples, 10.75%)</title><rect x="27" y="164" width="127" height="15" fill="rgb(241,188,12)"/><text x="30.00" y="174.50">decision_functi..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (49 samples, 10.54%)</title><rect x="30" y="180" width="124" height="15" fill="rgb(212,161,35)"/><text x="33.00" y="190.50">&lt;genexpr&gt; (skle..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (5 samples, 1.08%)</title><rect x="141" y="196" width="13" height="15" fill="rgb(233,26,14)"/><text x="144.00" y="206.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.22%)</title><rect x="152" y="212" width="2" height="15" fill="rgb(244,14,29)"/><text x="155.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="152" y="228" width="2" height="15" fill="rgb(208,78,33)"/><text x="155.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="152" y="244" width="2" height="15" fill="rgb(211,109,43)"/><text x="155.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.22%)</title><rect x="152" y="260" width="2" height="15" fill="rgb(205,216,4)"/><text x="155.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="152" y="276" width="2" height="15" fill="rgb(228,131,10)"/><text x="155.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.22%)</title><rect x="152" y="292" width="2" height="15" fill="rgb(231,161,40)"/><text x="155.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.22%)</title><rect x="152" y="308" width="2" height="15" fill="rgb(213,46,30)"/><text x="155.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.22%)</title><rect x="152" y="324" width="2" height="15" fill="rgb(238,212,38)"/><text x="155.00" y="334.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (52 samples, 11.18%)</title><rect x="25" y="100" width="132" height="15" fill="rgb(233,4,17)"/><text x="28.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 11.18%)</title><rect x="25" y="116" width="132" height="15" fill="rgb(223,50,21)"/><text x="28.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (52 samples, 11.18%)</title><rect x="25" y="132" width="132" height="15" fill="rgb(250,87,2)"/><text x="28.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.22%)</title><rect x="154" y="148" width="3" height="15" fill="rgb(210,210,4)"/><text x="157.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.22%)</title><rect x="154" y="164" width="3" height="15" fill="rgb(218,16,15)"/><text x="157.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.22%)</title><rect x="154" y="180" width="3" height="15" fill="rgb(230,219,8)"/><text x="157.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="154" y="196" width="3" height="15" fill="rgb(244,144,18)"/><text x="157.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="154" y="212" width="3" height="15" fill="rgb(217,103,44)"/><text x="157.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.22%)</title><rect x="154" y="228" width="3" height="15" fill="rgb(206,202,44)"/><text x="157.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.22%)</title><rect x="154" y="244" width="3" height="15" fill="rgb(210,60,52)"/><text x="157.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.22%)</title><rect x="154" y="260" width="3" height="15" fill="rgb(211,83,1)"/><text x="157.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.22%)</title><rect x="154" y="276" width="3" height="15" fill="rgb(232,124,49)"/><text x="157.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.22%)</title><rect x="154" y="292" width="3" height="15" fill="rgb(215,4,7)"/><text x="157.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.22%)</title><rect x="154" y="308" width="3" height="15" fill="rgb(220,36,31)"/><text x="157.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:316) (1 samples, 0.22%)</title><rect x="154" y="324" width="3" height="15" fill="rgb(236,104,29)"/><text x="157.00" y="334.50"></text></g><g><title>PyArray_View (convert.c:574) (1 samples, 0.22%)</title><rect x="154" y="340" width="3" height="15" fill="rgb(229,66,0)"/><text x="157.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.22%)</title><rect x="157" y="148" width="2" height="15" fill="rgb(212,140,9)"/><text x="160.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.22%)</title><rect x="157" y="164" width="2" height="15" fill="rgb(220,78,36)"/><text x="160.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.22%)</title><rect x="157" y="180" width="2" height="15" fill="rgb(254,216,9)"/><text x="160.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.22%)</title><rect x="157" y="196" width="2" height="15" fill="rgb(249,30,30)"/><text x="160.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.22%)</title><rect x="159" y="164" width="3" height="15" fill="rgb(240,61,18)"/><text x="162.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.22%)</title><rect x="159" y="180" width="3" height="15" fill="rgb(229,229,39)"/><text x="162.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.22%)</title><rect x="159" y="196" width="3" height="15" fill="rgb(238,102,43)"/><text x="162.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.22%)</title><rect x="159" y="212" width="3" height="15" fill="rgb(224,171,19)"/><text x="162.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.22%)</title><rect x="169" y="228" width="3" height="15" fill="rgb(206,87,14)"/><text x="172.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.43%)</title><rect x="172" y="228" width="5" height="15" fill="rgb(233,55,6)"/><text x="175.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.43%)</title><rect x="172" y="244" width="5" height="15" fill="rgb(226,127,22)"/><text x="175.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.22%)</title><rect x="185" y="244" width="2" height="15" fill="rgb(219,51,23)"/><text x="188.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (6 samples, 1.29%)</title><rect x="197" y="260" width="16" height="15" fill="rgb(207,172,51)"/><text x="200.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (18 samples, 3.87%)</title><rect x="169" y="212" width="46" height="15" fill="rgb(241,136,1)"/><text x="172.00" y="222.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 3.23%)</title><rect x="177" y="228" width="38" height="15" fill="rgb(236,147,47)"/><text x="180.00" y="238.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 2.37%)</title><rect x="187" y="244" width="28" height="15" fill="rgb(210,114,27)"/><text x="190.00" y="254.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="213" y="260" width="2" height="15" fill="rgb(225,74,20)"/><text x="216.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.22%)</title><rect x="220" y="244" width="3" height="15" fill="rgb(221,228,31)"/><text x="223.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.43%)</title><rect x="223" y="244" width="5" height="15" fill="rgb(240,32,36)"/><text x="226.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.22%)</title><rect x="228" y="244" width="2" height="15" fill="rgb(240,34,29)"/><text x="231.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.22%)</title><rect x="230" y="260" width="3" height="15" fill="rgb(250,216,24)"/><text x="233.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.22%)</title><rect x="233" y="260" width="2" height="15" fill="rgb(239,225,12)"/><text x="236.00" y="270.50"></text></g><g><title>__init__ (warnings.py:461) (3 samples, 0.65%)</title><rect x="235" y="260" width="8" height="15" fill="rgb(214,3,31)"/><text x="238.00" y="270.50"></text></g><g><title>0x7f05465df18b (libc-2.29.so) (1 samples, 0.22%)</title><rect x="240" y="276" width="3" height="15" fill="rgb(247,183,43)"/><text x="243.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 1.94%)</title><rect x="230" y="244" width="23" height="15" fill="rgb(230,136,43)"/><text x="233.00" y="254.50">c..</text></g><g><title>__init__ (warnings.py:462) (4 samples, 0.86%)</title><rect x="243" y="260" width="10" height="15" fill="rgb(246,229,7)"/><text x="246.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 1.08%)</title><rect x="258" y="276" width="13" height="15" fill="rgb(205,190,27)"/><text x="261.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.22%)</title><rect x="271" y="276" width="2" height="15" fill="rgb(250,207,5)"/><text x="274.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 2.15%)</title><rect x="253" y="244" width="25" height="15" fill="rgb(219,35,45)"/><text x="256.00" y="254.50">c..</text></g><g><title>simplefilter (warnings.py:179) (8 samples, 1.72%)</title><rect x="258" y="260" width="20" height="15" fill="rgb(225,205,54)"/><text x="261.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:188) (2 samples, 0.43%)</title><rect x="273" y="276" width="5" height="15" fill="rgb(254,9,46)"/><text x="276.00" y="286.50"></text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.43%)</title><rect x="273" y="292" width="5" height="15" fill="rgb(222,184,47)"/><text x="276.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.65%)</title><rect x="278" y="244" width="8" height="15" fill="rgb(232,81,46)"/><text x="281.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (2 samples, 0.43%)</title><rect x="281" y="260" width="5" height="15" fill="rgb(219,178,28)"/><text x="284.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.43%)</title><rect x="286" y="244" width="5" height="15" fill="rgb(213,57,38)"/><text x="289.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.43%)</title><rect x="286" y="260" width="5" height="15" fill="rgb(229,219,9)"/><text x="289.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.22%)</title><rect x="289" y="276" width="2" height="15" fill="rgb(208,218,21)"/><text x="292.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(240,52,30)"/><text x="292.00" y="302.50"></text></g><g><title>0x7f054669c14d (libc-2.29.so) (1 samples, 0.22%)</title><rect x="289" y="308" width="2" height="15" fill="rgb(216,221,21)"/><text x="292.00" y="318.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.22%)</title><rect x="304" y="276" width="2" height="15" fill="rgb(231,187,50)"/><text x="307.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 1.72%)</title><rect x="291" y="244" width="20" height="15" fill="rgb(213,145,12)"/><text x="294.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 1.72%)</title><rect x="291" y="260" width="20" height="15" fill="rgb(244,204,50)"/><text x="294.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.43%)</title><rect x="306" y="276" width="5" height="15" fill="rgb(233,16,49)"/><text x="309.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.65%)</title><rect x="311" y="260" width="8" height="15" fill="rgb(246,117,15)"/><text x="314.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.22%)</title><rect x="319" y="260" width="3" height="15" fill="rgb(224,83,29)"/><text x="322.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 0.43%)</title><rect x="322" y="260" width="5" height="15" fill="rgb(205,152,27)"/><text x="325.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 1.94%)</title><rect x="311" y="244" width="23" height="15" fill="rgb(249,67,12)"/><text x="314.00" y="254.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.65%)</title><rect x="327" y="260" width="7" height="15" fill="rgb(232,9,47)"/><text x="330.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.22%)</title><rect x="332" y="276" width="2" height="15" fill="rgb(252,52,4)"/><text x="335.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (47 samples, 10.11%)</title><rect x="218" y="228" width="119" height="15" fill="rgb(224,112,37)"/><text x="221.00" y="238.50">_validate_X_pr..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.22%)</title><rect x="334" y="244" width="3" height="15" fill="rgb(227,32,26)"/><text x="337.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.22%)</title><rect x="337" y="228" width="2" height="15" fill="rgb(219,47,6)"/><text x="340.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (51 samples, 10.97%)</title><rect x="215" y="212" width="129" height="15" fill="rgb(223,56,6)"/><text x="218.00" y="222.50">predict_proba (s..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (2 samples, 0.43%)</title><rect x="339" y="228" width="5" height="15" fill="rgb(207,5,14)"/><text x="342.00" y="238.50"></text></g><g><title>0x7f0520001f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="347" y="244" width="3" height="15" fill="rgb(207,135,3)"/><text x="350.00" y="254.50"></text></g><g><title>0x7f05200112b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="350" y="260" width="2" height="15" fill="rgb(227,176,47)"/><text x="353.00" y="270.50"></text></g><g><title>0x7f05200101dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="352" y="276" width="3" height="15" fill="rgb(242,130,2)"/><text x="355.00" y="286.50"></text></g><g><title>0x7f05200102a3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="355" y="276" width="2" height="15" fill="rgb(211,35,41)"/><text x="358.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.22%)</title><rect x="357" y="356" width="3" height="15" fill="rgb(236,50,10)"/><text x="360.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:583) (1 samples, 0.22%)</title><rect x="357" y="372" width="3" height="15" fill="rgb(219,115,46)"/><text x="360.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.22%)</title><rect x="360" y="356" width="2" height="15" fill="rgb(222,58,43)"/><text x="363.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:620) (1 samples, 0.22%)</title><rect x="360" y="372" width="2" height="15" fill="rgb(209,67,34)"/><text x="363.00" y="382.50"></text></g><g><title>0x7f051fff4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.65%)</title><rect x="357" y="308" width="8" height="15" fill="rgb(232,66,34)"/><text x="360.00" y="318.50"></text></g><g><title>0x7f051ffea2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.65%)</title><rect x="357" y="324" width="8" height="15" fill="rgb(227,154,35)"/><text x="360.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.65%)</title><rect x="357" y="340" width="8" height="15" fill="rgb(227,46,35)"/><text x="360.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.22%)</title><rect x="362" y="356" width="3" height="15" fill="rgb(240,148,51)"/><text x="365.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.22%)</title><rect x="362" y="372" width="3" height="15" fill="rgb(230,45,11)"/><text x="365.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="362" y="388" width="3" height="15" fill="rgb(220,37,41)"/><text x="365.00" y="398.50"></text></g><g><title>0x7f05200102df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.86%)</title><rect x="357" y="276" width="10" height="15" fill="rgb(252,218,5)"/><text x="360.00" y="286.50"></text></g><g><title>0x7f051fff4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.86%)</title><rect x="357" y="292" width="10" height="15" fill="rgb(210,125,8)"/><text x="360.00" y="302.50"></text></g><g><title>0x7f051fff46b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="365" y="308" width="2" height="15" fill="rgb(217,96,22)"/><text x="368.00" y="318.50"></text></g><g><title>0x7f0520010592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.43%)</title><rect x="367" y="276" width="5" height="15" fill="rgb(212,209,8)"/><text x="370.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.22%)</title><rect x="370" y="292" width="2" height="15" fill="rgb(222,214,30)"/><text x="373.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.22%)</title><rect x="370" y="308" width="2" height="15" fill="rgb(237,195,18)"/><text x="373.00" y="318.50"></text></g><g><title>0x7f0520001fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.15%)</title><rect x="350" y="244" width="25" height="15" fill="rgb(243,170,1)"/><text x="353.00" y="254.50">0..</text></g><g><title>0x7f0520011405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.94%)</title><rect x="352" y="260" width="23" height="15" fill="rgb(240,39,35)"/><text x="355.00" y="270.50">0..</text></g><g><title>0x7f0520010c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="372" y="276" width="3" height="15" fill="rgb(217,47,53)"/><text x="375.00" y="286.50"></text></g><g><title>0x7f051ffe8529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="372" y="292" width="3" height="15" fill="rgb(215,141,1)"/><text x="375.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.22%)</title><rect x="372" y="308" width="3" height="15" fill="rgb(231,179,49)"/><text x="375.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.22%)</title><rect x="372" y="324" width="3" height="15" fill="rgb(253,27,2)"/><text x="375.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.22%)</title><rect x="375" y="260" width="2" height="15" fill="rgb(250,25,18)"/><text x="378.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.22%)</title><rect x="375" y="276" width="2" height="15" fill="rgb(215,22,14)"/><text x="378.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(239,4,19)"/><text x="380.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.22%)</title><rect x="377" y="324" width="3" height="15" fill="rgb(243,42,23)"/><text x="380.00" y="334.50"></text></g><g><title>0x7f052000205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.65%)</title><rect x="375" y="244" width="8" height="15" fill="rgb(220,56,52)"/><text x="378.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.43%)</title><rect x="377" y="260" width="6" height="15" fill="rgb(218,83,28)"/><text x="380.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.43%)</title><rect x="377" y="276" width="6" height="15" fill="rgb(237,49,17)"/><text x="380.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.43%)</title><rect x="377" y="292" width="6" height="15" fill="rgb(208,108,43)"/><text x="380.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="380" y="308" width="3" height="15" fill="rgb(243,221,18)"/><text x="383.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="380" y="324" width="3" height="15" fill="rgb(240,155,45)"/><text x="383.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.22%)</title><rect x="380" y="340" width="3" height="15" fill="rgb(217,70,35)"/><text x="383.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:40) (1 samples, 0.22%)</title><rect x="383" y="276" width="2" height="15" fill="rgb(224,125,7)"/><text x="386.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (17 samples, 3.66%)</title><rect x="344" y="212" width="44" height="15" fill="rgb(228,126,14)"/><text x="347.00" y="222.50">pred..</text></g><g><title>0x7f0520002d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 3.44%)</title><rect x="347" y="228" width="41" height="15" fill="rgb(245,83,24)"/><text x="350.00" y="238.50">0x7..</text></g><g><title>0x7f0520002328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.43%)</title><rect x="383" y="244" width="5" height="15" fill="rgb(214,163,31)"/><text x="386.00" y="254.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.43%)</title><rect x="383" y="260" width="5" height="15" fill="rgb(216,108,15)"/><text x="386.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:51) (1 samples, 0.22%)</title><rect x="385" y="276" width="3" height="15" fill="rgb(231,27,44)"/><text x="388.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.22%)</title><rect x="388" y="212" width="2" height="15" fill="rgb(234,123,43)"/><text x="391.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.22%)</title><rect x="393" y="228" width="2" height="15" fill="rgb(207,97,45)"/><text x="396.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:920) (1 samples, 0.22%)</title><rect x="393" y="244" width="2" height="15" fill="rgb(227,110,10)"/><text x="396.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.43%)</title><rect x="398" y="292" width="5" height="15" fill="rgb(225,49,37)"/><text x="401.00" y="302.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.22%)</title><rect x="400" y="308" width="3" height="15" fill="rgb(250,113,5)"/><text x="403.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.22%)</title><rect x="403" y="308" width="2" height="15" fill="rgb(212,222,18)"/><text x="406.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.22%)</title><rect x="403" y="324" width="2" height="15" fill="rgb(224,176,27)"/><text x="406.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="405" y="324" width="3" height="15" fill="rgb(232,62,13)"/><text x="408.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="405" y="340" width="3" height="15" fill="rgb(236,21,15)"/><text x="408.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.22%)</title><rect x="405" y="356" width="3" height="15" fill="rgb(228,214,50)"/><text x="408.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="405" y="372" width="3" height="15" fill="rgb(241,44,19)"/><text x="408.00" y="382.50"></text></g><g><title>0x7f0546576762 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="405" y="388" width="3" height="15" fill="rgb(210,128,26)"/><text x="408.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.22%)</title><rect x="408" y="324" width="2" height="15" fill="rgb(241,161,28)"/><text x="411.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.22%)</title><rect x="408" y="340" width="2" height="15" fill="rgb(252,184,23)"/><text x="411.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.22%)</title><rect x="408" y="356" width="2" height="15" fill="rgb(227,121,48)"/><text x="411.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.22%)</title><rect x="408" y="372" width="2" height="15" fill="rgb(252,211,7)"/><text x="411.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3899) (1 samples, 0.22%)</title><rect x="408" y="388" width="2" height="15" fill="rgb(217,109,45)"/><text x="411.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:196) (1 samples, 0.22%)</title><rect x="410" y="340" width="3" height="15" fill="rgb(245,97,30)"/><text x="413.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="413" y="340" width="3" height="15" fill="rgb(254,17,42)"/><text x="416.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.22%)</title><rect x="413" y="356" width="3" height="15" fill="rgb(214,51,15)"/><text x="416.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.65%)</title><rect x="410" y="324" width="8" height="15" fill="rgb(230,136,21)"/><text x="413.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.22%)</title><rect x="416" y="340" width="2" height="15" fill="rgb(206,150,15)"/><text x="419.00" y="350.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1360) (1 samples, 0.22%)</title><rect x="416" y="356" width="2" height="15" fill="rgb(228,180,21)"/><text x="419.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.22%)</title><rect x="418" y="324" width="3" height="15" fill="rgb(205,99,22)"/><text x="421.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.22%)</title><rect x="418" y="340" width="3" height="15" fill="rgb(241,106,18)"/><text x="421.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 2.80%)</title><rect x="390" y="212" width="33" height="15" fill="rgb(227,0,11)"/><text x="393.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.37%)</title><rect x="395" y="228" width="28" height="15" fill="rgb(233,77,31)"/><text x="398.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.37%)</title><rect x="395" y="244" width="28" height="15" fill="rgb(221,116,25)"/><text x="398.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 2.15%)</title><rect x="398" y="260" width="25" height="15" fill="rgb(232,55,25)"/><text x="401.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 2.15%)</title><rect x="398" y="276" width="25" height="15" fill="rgb(249,95,42)"/><text x="401.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.72%)</title><rect x="403" y="292" width="20" height="15" fill="rgb(235,24,0)"/><text x="406.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.51%)</title><rect x="405" y="308" width="18" height="15" fill="rgb(217,79,46)"/><text x="408.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.22%)</title><rect x="421" y="324" width="2" height="15" fill="rgb(241,30,25)"/><text x="424.00" y="334.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:346) (1 samples, 0.22%)</title><rect x="421" y="340" width="2" height="15" fill="rgb(251,211,6)"/><text x="424.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.22%)</title><rect x="426" y="228" width="2" height="15" fill="rgb(216,224,40)"/><text x="429.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.22%)</title><rect x="426" y="244" width="2" height="15" fill="rgb(207,121,26)"/><text x="429.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="426" y="260" width="2" height="15" fill="rgb(239,70,7)"/><text x="429.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.22%)</title><rect x="426" y="276" width="2" height="15" fill="rgb(248,196,37)"/><text x="429.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.22%)</title><rect x="428" y="228" width="3" height="15" fill="rgb(249,97,31)"/><text x="431.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.22%)</title><rect x="428" y="244" width="3" height="15" fill="rgb(207,153,9)"/><text x="431.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2028) (1 samples, 0.22%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(228,7,6)"/><text x="431.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="431" y="228" width="2" height="15" fill="rgb(233,43,20)"/><text x="434.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="431" y="244" width="2" height="15" fill="rgb(241,217,16)"/><text x="434.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="431" y="260" width="2" height="15" fill="rgb(223,21,10)"/><text x="434.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="433" y="260" width="3" height="15" fill="rgb(252,186,53)"/><text x="436.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.22%)</title><rect x="433" y="276" width="3" height="15" fill="rgb(228,211,1)"/><text x="436.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1910) (1 samples, 0.22%)</title><rect x="433" y="292" width="3" height="15" fill="rgb(239,59,16)"/><text x="436.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="436" y="260" width="2" height="15" fill="rgb(251,104,15)"/><text x="439.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.22%)</title><rect x="436" y="276" width="2" height="15" fill="rgb(254,12,1)"/><text x="439.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="433" y="244" width="8" height="15" fill="rgb(220,112,14)"/><text x="436.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(224,162,1)"/><text x="441.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.22%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(206,117,6)"/><text x="441.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.22%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(228,137,17)"/><text x="441.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.22%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(224,55,54)"/><text x="441.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.72%)</title><rect x="423" y="212" width="20" height="15" fill="rgb(212,65,35)"/><text x="426.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 0.86%)</title><rect x="433" y="228" width="10" height="15" fill="rgb(250,149,15)"/><text x="436.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4778) (1 samples, 0.22%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(243,156,34)"/><text x="444.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="443" y="292" width="3" height="15" fill="rgb(245,55,43)"/><text x="446.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="443" y="308" width="3" height="15" fill="rgb(228,188,44)"/><text x="446.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.22%)</title><rect x="443" y="324" width="3" height="15" fill="rgb(215,13,5)"/><text x="446.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.22%)</title><rect x="443" y="340" width="3" height="15" fill="rgb(237,124,49)"/><text x="446.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.22%)</title><rect x="443" y="356" width="3" height="15" fill="rgb(254,192,43)"/><text x="446.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="446" y="292" width="3" height="15" fill="rgb(237,97,8)"/><text x="449.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.22%)</title><rect x="446" y="308" width="3" height="15" fill="rgb(230,118,6)"/><text x="449.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (112 samples, 24.09%)</title><rect x="167" y="196" width="284" height="15" fill="rgb(229,15,14)"/><text x="170.00" y="206.50">_samme_proba (sklearn/ensemble/_weight..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (3 samples, 0.65%)</title><rect x="443" y="212" width="8" height="15" fill="rgb(253,125,50)"/><text x="446.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="443" y="228" width="8" height="15" fill="rgb(221,102,33)"/><text x="446.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.65%)</title><rect x="443" y="244" width="8" height="15" fill="rgb(253,185,37)"/><text x="446.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.65%)</title><rect x="443" y="260" width="8" height="15" fill="rgb(218,180,49)"/><text x="446.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.65%)</title><rect x="443" y="276" width="8" height="15" fill="rgb(250,3,2)"/><text x="446.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="449" y="292" width="2" height="15" fill="rgb(239,53,49)"/><text x="452.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3241) (1 samples, 0.22%)</title><rect x="449" y="308" width="2" height="15" fill="rgb(249,100,36)"/><text x="452.00" y="318.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:373) (1 samples, 0.22%)</title><rect x="451" y="212" width="3" height="15" fill="rgb(249,144,25)"/><text x="454.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:374) (1 samples, 0.22%)</title><rect x="454" y="212" width="2" height="15" fill="rgb(225,44,7)"/><text x="457.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="456" y="212" width="3" height="15" fill="rgb(208,84,42)"/><text x="459.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.22%)</title><rect x="459" y="228" width="2" height="15" fill="rgb(222,78,32)"/><text x="462.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.22%)</title><rect x="459" y="244" width="2" height="15" fill="rgb(229,16,18)"/><text x="462.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.22%)</title><rect x="459" y="260" width="2" height="15" fill="rgb(250,134,54)"/><text x="462.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="459" y="276" width="2" height="15" fill="rgb(245,89,21)"/><text x="462.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="459" y="292" width="2" height="15" fill="rgb(248,12,9)"/><text x="462.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.22%)</title><rect x="476" y="260" width="3" height="15" fill="rgb(211,127,29)"/><text x="479.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.22%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(233,60,45)"/><text x="485.00" y="334.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:131) (1 samples, 0.22%)</title><rect x="487" y="372" width="2" height="15" fill="rgb(219,224,38)"/><text x="490.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.22%)</title><rect x="489" y="420" width="3" height="15" fill="rgb(250,113,8)"/><text x="492.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (4 samples, 0.86%)</title><rect x="487" y="356" width="10" height="15" fill="rgb(250,194,31)"/><text x="490.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.65%)</title><rect x="489" y="372" width="8" height="15" fill="rgb(230,158,30)"/><text x="492.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.65%)</title><rect x="489" y="388" width="8" height="15" fill="rgb(212,192,3)"/><text x="492.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.65%)</title><rect x="489" y="404" width="8" height="15" fill="rgb(222,10,41)"/><text x="492.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.43%)</title><rect x="492" y="420" width="5" height="15" fill="rgb(241,171,33)"/><text x="495.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.29%)</title><rect x="484" y="324" width="15" height="15" fill="rgb(216,72,44)"/><text x="487.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (5 samples, 1.08%)</title><rect x="487" y="340" width="12" height="15" fill="rgb(212,137,11)"/><text x="490.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(216,133,26)"/><text x="500.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="497" y="372" width="2" height="15" fill="rgb(251,102,51)"/><text x="500.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="499" y="340" width="3" height="15" fill="rgb(232,77,21)"/><text x="502.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="499" y="356" width="3" height="15" fill="rgb(228,162,23)"/><text x="502.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="499" y="372" width="3" height="15" fill="rgb(224,125,53)"/><text x="502.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="499" y="388" width="3" height="15" fill="rgb(233,55,24)"/><text x="502.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="499" y="404" width="3" height="15" fill="rgb(225,66,3)"/><text x="502.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.22%)</title><rect x="499" y="420" width="3" height="15" fill="rgb(233,27,24)"/><text x="502.00" y="430.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.22%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(232,76,10)"/><text x="505.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.43%)</title><rect x="502" y="356" width="5" height="15" fill="rgb(247,34,36)"/><text x="505.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="504" y="372" width="3" height="15" fill="rgb(206,44,47)"/><text x="507.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (11 samples, 2.37%)</title><rect x="482" y="308" width="27" height="15" fill="rgb(246,98,53)"/><text x="485.00" y="318.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.86%)</title><rect x="499" y="324" width="10" height="15" fill="rgb(232,170,8)"/><text x="502.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="502" y="340" width="7" height="15" fill="rgb(251,65,35)"/><text x="505.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.22%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(220,171,4)"/><text x="510.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.22%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(249,159,12)"/><text x="510.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.43%)</title><rect x="509" y="324" width="5" height="15" fill="rgb(227,77,5)"/><text x="512.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.22%)</title><rect x="512" y="340" width="2" height="15" fill="rgb(234,191,25)"/><text x="515.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="514" y="372" width="3" height="15" fill="rgb(211,81,40)"/><text x="517.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.22%)</title><rect x="517" y="372" width="3" height="15" fill="rgb(208,194,38)"/><text x="520.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.22%)</title><rect x="527" y="452" width="3" height="15" fill="rgb(228,75,26)"/><text x="530.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.51%)</title><rect x="514" y="324" width="18" height="15" fill="rgb(252,193,21)"/><text x="517.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.51%)</title><rect x="514" y="340" width="18" height="15" fill="rgb(225,140,7)"/><text x="517.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.51%)</title><rect x="514" y="356" width="18" height="15" fill="rgb(241,159,50)"/><text x="517.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 1.08%)</title><rect x="520" y="372" width="12" height="15" fill="rgb(217,93,15)"/><text x="523.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.86%)</title><rect x="522" y="388" width="10" height="15" fill="rgb(207,183,39)"/><text x="525.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.43%)</title><rect x="527" y="404" width="5" height="15" fill="rgb(236,175,49)"/><text x="530.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.43%)</title><rect x="527" y="420" width="5" height="15" fill="rgb(224,50,43)"/><text x="530.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.43%)</title><rect x="527" y="436" width="5" height="15" fill="rgb(236,6,19)"/><text x="530.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1696) (1 samples, 0.22%)</title><rect x="530" y="452" width="2" height="15" fill="rgb(234,68,10)"/><text x="533.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c:2615) (1 samples, 0.22%)</title><rect x="530" y="468" width="2" height="15" fill="rgb(251,45,49)"/><text x="533.00" y="478.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:123) (1 samples, 0.22%)</title><rect x="530" y="484" width="2" height="15" fill="rgb(232,202,45)"/><text x="533.00" y="494.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:15) (1 samples, 0.22%)</title><rect x="530" y="500" width="2" height="15" fill="rgb(210,229,52)"/><text x="533.00" y="510.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.43%)</title><rect x="537" y="388" width="5" height="15" fill="rgb(224,21,33)"/><text x="540.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.43%)</title><rect x="537" y="404" width="5" height="15" fill="rgb(233,77,43)"/><text x="540.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.65%)</title><rect x="537" y="356" width="8" height="15" fill="rgb(214,183,20)"/><text x="540.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.65%)</title><rect x="537" y="372" width="8" height="15" fill="rgb(213,167,2)"/><text x="540.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.22%)</title><rect x="542" y="388" width="3" height="15" fill="rgb(239,119,49)"/><text x="545.00" y="398.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.22%)</title><rect x="542" y="404" width="3" height="15" fill="rgb(253,75,44)"/><text x="545.00" y="414.50"></text></g><g><title>OBJECT_setitem (arraytypes.c.src:635) (1 samples, 0.22%)</title><rect x="542" y="420" width="3" height="15" fill="rgb(254,68,31)"/><text x="545.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="545" y="356" width="2" height="15" fill="rgb(254,189,31)"/><text x="548.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="545" y="372" width="2" height="15" fill="rgb(218,19,29)"/><text x="548.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.22%)</title><rect x="545" y="388" width="2" height="15" fill="rgb(235,225,47)"/><text x="548.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.22%)</title><rect x="545" y="404" width="2" height="15" fill="rgb(252,68,26)"/><text x="548.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.22%)</title><rect x="545" y="420" width="2" height="15" fill="rgb(232,80,44)"/><text x="548.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.22%)</title><rect x="545" y="436" width="2" height="15" fill="rgb(246,32,29)"/><text x="548.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.22%)</title><rect x="545" y="452" width="2" height="15" fill="rgb(239,37,25)"/><text x="548.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.51%)</title><rect x="532" y="324" width="18" height="15" fill="rgb(205,54,6)"/><text x="535.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="537" y="340" width="13" height="15" fill="rgb(236,228,7)"/><text x="540.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.22%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(209,36,23)"/><text x="550.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="547" y="372" width="3" height="15" fill="rgb(247,129,5)"/><text x="550.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="547" y="388" width="3" height="15" fill="rgb(237,55,21)"/><text x="550.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.22%)</title><rect x="547" y="404" width="3" height="15" fill="rgb(219,181,39)"/><text x="550.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (17 samples, 3.66%)</title><rect x="509" y="308" width="44" height="15" fill="rgb(224,88,33)"/><text x="512.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:70) (1 samples, 0.22%)</title><rect x="550" y="324" width="3" height="15" fill="rgb(213,176,51)"/><text x="553.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.43%)</title><rect x="555" y="340" width="5" height="15" fill="rgb(227,42,46)"/><text x="558.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.43%)</title><rect x="555" y="356" width="5" height="15" fill="rgb(209,61,28)"/><text x="558.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.43%)</title><rect x="555" y="372" width="5" height="15" fill="rgb(230,103,2)"/><text x="558.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.43%)</title><rect x="555" y="388" width="5" height="15" fill="rgb(225,133,46)"/><text x="558.00" y="398.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="558" y="404" width="2" height="15" fill="rgb(242,16,12)"/><text x="561.00" y="414.50"></text></g><g><title>0x7f054669d004 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="558" y="420" width="2" height="15" fill="rgb(218,79,41)"/><text x="561.00" y="430.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.22%)</title><rect x="560" y="388" width="3" height="15" fill="rgb(250,5,43)"/><text x="563.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.22%)</title><rect x="560" y="404" width="3" height="15" fill="rgb(250,209,20)"/><text x="563.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.22%)</title><rect x="560" y="420" width="3" height="15" fill="rgb(209,122,35)"/><text x="563.00" y="430.50"></text></g><g><title>0x7f05457e02d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="560" y="436" width="3" height="15" fill="rgb(222,183,51)"/><text x="563.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="560" y="356" width="5" height="15" fill="rgb(249,103,30)"/><text x="563.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.43%)</title><rect x="560" y="372" width="5" height="15" fill="rgb(217,101,17)"/><text x="563.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:731) (1 samples, 0.22%)</title><rect x="563" y="388" width="2" height="15" fill="rgb(241,76,47)"/><text x="566.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.22%)</title><rect x="563" y="404" width="2" height="15" fill="rgb(215,28,29)"/><text x="566.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="560" y="340" width="8" height="15" fill="rgb(240,222,39)"/><text x="563.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.22%)</title><rect x="565" y="356" width="3" height="15" fill="rgb(222,7,53)"/><text x="568.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (47 samples, 10.11%)</title><rect x="451" y="196" width="119" height="15" fill="rgb(213,58,28)"/><text x="454.00" y="206.50">_samme_proba (..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (44 samples, 9.46%)</title><rect x="459" y="212" width="111" height="15" fill="rgb(238,75,54)"/><text x="462.00" y="222.50">clip (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (43 samples, 9.25%)</title><rect x="461" y="228" width="109" height="15" fill="rgb(240,40,50)"/><text x="464.00" y="238.50">array_impleme..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (41 samples, 8.82%)</title><rect x="466" y="244" width="104" height="15" fill="rgb(243,79,27)"/><text x="469.00" y="254.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (36 samples, 7.74%)</title><rect x="479" y="260" width="91" height="15" fill="rgb(225,67,45)"/><text x="482.00" y="270.50">_wrapfunc ..</text></g><g><title>array_clip (methods.c:2381) (36 samples, 7.74%)</title><rect x="479" y="276" width="91" height="15" fill="rgb(205,55,50)"/><text x="482.00" y="286.50">array_clip..</text></g><g><title>forward_ndarray_method (methods.c:108) (36 samples, 7.74%)</title><rect x="479" y="292" width="91" height="15" fill="rgb(243,4,19)"/><text x="482.00" y="302.50">forward_nd..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 1.51%)</title><rect x="553" y="308" width="17" height="15" fill="rgb(252,59,11)"/><text x="556.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (6 samples, 1.29%)</title><rect x="555" y="324" width="15" height="15" fill="rgb(209,26,14)"/><text x="558.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.22%)</title><rect x="568" y="340" width="2" height="15" fill="rgb(249,228,23)"/><text x="571.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.22%)</title><rect x="568" y="356" width="2" height="15" fill="rgb(234,41,51)"/><text x="571.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.22%)</title><rect x="570" y="244" width="3" height="15" fill="rgb(237,222,29)"/><text x="573.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.22%)</title><rect x="570" y="260" width="3" height="15" fill="rgb(224,35,22)"/><text x="573.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.65%)</title><rect x="570" y="228" width="8" height="15" fill="rgb(230,15,31)"/><text x="573.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (2 samples, 0.43%)</title><rect x="573" y="244" width="5" height="15" fill="rgb(229,188,16)"/><text x="576.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="578" y="228" width="2" height="15" fill="rgb(239,176,11)"/><text x="581.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.22%)</title><rect x="578" y="244" width="2" height="15" fill="rgb(241,67,50)"/><text x="581.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.22%)</title><rect x="578" y="260" width="2" height="15" fill="rgb(252,45,50)"/><text x="581.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.22%)</title><rect x="578" y="276" width="2" height="15" fill="rgb(210,106,32)"/><text x="581.00" y="286.50"></text></g><g><title>0x7f0546790eb6 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="578" y="292" width="2" height="15" fill="rgb(252,216,21)"/><text x="581.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (5 samples, 1.08%)</title><rect x="570" y="196" width="13" height="15" fill="rgb(206,129,48)"/><text x="573.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="570" y="212" width="13" height="15" fill="rgb(213,17,0)"/><text x="573.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.22%)</title><rect x="580" y="228" width="3" height="15" fill="rgb(207,148,18)"/><text x="583.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="586" y="260" width="2" height="15" fill="rgb(213,156,16)"/><text x="589.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1895) (1 samples, 0.22%)</title><rect x="586" y="276" width="2" height="15" fill="rgb(211,25,41)"/><text x="589.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.22%)</title><rect x="586" y="292" width="2" height="15" fill="rgb(245,199,2)"/><text x="589.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.43%)</title><rect x="586" y="244" width="5" height="15" fill="rgb(244,35,26)"/><text x="589.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.22%)</title><rect x="588" y="260" width="3" height="15" fill="rgb(214,226,4)"/><text x="591.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.22%)</title><rect x="588" y="276" width="3" height="15" fill="rgb(246,34,26)"/><text x="591.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.22%)</title><rect x="588" y="292" width="3" height="15" fill="rgb(234,119,29)"/><text x="591.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.22%)</title><rect x="588" y="308" width="3" height="15" fill="rgb(247,135,22)"/><text x="591.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.22%)</title><rect x="588" y="324" width="3" height="15" fill="rgb(210,82,34)"/><text x="591.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1516) (1 samples, 0.22%)</title><rect x="588" y="340" width="3" height="15" fill="rgb(231,22,15)"/><text x="591.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.22%)</title><rect x="591" y="308" width="2" height="15" fill="rgb(216,11,39)"/><text x="594.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.86%)</title><rect x="586" y="228" width="10" height="15" fill="rgb(252,194,36)"/><text x="589.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.43%)</title><rect x="591" y="244" width="5" height="15" fill="rgb(232,132,12)"/><text x="594.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.43%)</title><rect x="591" y="260" width="5" height="15" fill="rgb(235,191,42)"/><text x="594.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.43%)</title><rect x="591" y="276" width="5" height="15" fill="rgb(218,181,50)"/><text x="594.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.43%)</title><rect x="591" y="292" width="5" height="15" fill="rgb(217,41,20)"/><text x="594.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.22%)</title><rect x="593" y="308" width="3" height="15" fill="rgb(210,228,39)"/><text x="596.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.22%)</title><rect x="593" y="324" width="3" height="15" fill="rgb(207,185,17)"/><text x="596.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.22%)</title><rect x="593" y="340" width="3" height="15" fill="rgb(231,195,43)"/><text x="596.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.22%)</title><rect x="593" y="356" width="3" height="15" fill="rgb(221,52,22)"/><text x="596.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1498) (1 samples, 0.22%)</title><rect x="593" y="372" width="3" height="15" fill="rgb(227,141,12)"/><text x="596.00" y="382.50"></text></g><g><title>array_multiply (number.c:354) (5 samples, 1.08%)</title><rect x="586" y="212" width="12" height="15" fill="rgb(249,158,14)"/><text x="589.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.22%)</title><rect x="596" y="228" width="2" height="15" fill="rgb(237,179,50)"/><text x="599.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.22%)</title><rect x="596" y="244" width="2" height="15" fill="rgb(217,92,4)"/><text x="599.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.22%)</title><rect x="598" y="212" width="3" height="15" fill="rgb(250,180,20)"/><text x="601.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:834) (1 samples, 0.22%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(232,199,38)"/><text x="601.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="601" y="228" width="2" height="15" fill="rgb(233,168,30)"/><text x="604.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(248,15,50)"/><text x="604.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.22%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(210,11,46)"/><text x="604.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="603" y="244" width="3" height="15" fill="rgb(219,183,41)"/><text x="606.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.22%)</title><rect x="603" y="260" width="3" height="15" fill="rgb(238,68,49)"/><text x="606.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="603" y="276" width="3" height="15" fill="rgb(245,17,24)"/><text x="606.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.22%)</title><rect x="603" y="292" width="3" height="15" fill="rgb(215,157,45)"/><text x="606.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.22%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(252,206,4)"/><text x="606.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.22%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(252,190,31)"/><text x="606.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.65%)</title><rect x="601" y="212" width="7" height="15" fill="rgb(232,141,24)"/><text x="604.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="603" y="228" width="5" height="15" fill="rgb(238,110,14)"/><text x="606.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="606" y="244" width="2" height="15" fill="rgb(240,53,26)"/><text x="609.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.22%)</title><rect x="606" y="260" width="2" height="15" fill="rgb(210,190,48)"/><text x="609.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(222,169,13)"/><text x="609.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(208,170,2)"/><text x="609.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1536) (1 samples, 0.22%)</title><rect x="606" y="308" width="2" height="15" fill="rgb(229,34,4)"/><text x="609.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.43%)</title><rect x="608" y="260" width="5" height="15" fill="rgb(212,102,10)"/><text x="611.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.43%)</title><rect x="608" y="276" width="5" height="15" fill="rgb(228,215,48)"/><text x="611.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.43%)</title><rect x="608" y="292" width="5" height="15" fill="rgb(209,30,4)"/><text x="611.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.43%)</title><rect x="608" y="308" width="5" height="15" fill="rgb(254,113,19)"/><text x="611.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.43%)</title><rect x="608" y="324" width="5" height="15" fill="rgb(233,6,52)"/><text x="611.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.43%)</title><rect x="608" y="340" width="5" height="15" fill="rgb(209,68,5)"/><text x="611.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.22%)</title><rect x="613" y="340" width="3" height="15" fill="rgb(211,40,3)"/><text x="616.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(236,10,34)"/><text x="616.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="613" y="372" width="3" height="15" fill="rgb(232,192,6)"/><text x="616.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.43%)</title><rect x="613" y="308" width="6" height="15" fill="rgb(244,187,24)"/><text x="616.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.43%)</title><rect x="613" y="324" width="6" height="15" fill="rgb(211,212,38)"/><text x="616.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="616" y="340" width="3" height="15" fill="rgb(208,122,9)"/><text x="619.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="616" y="356" width="3" height="15" fill="rgb(239,98,31)"/><text x="619.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.22%)</title><rect x="616" y="372" width="3" height="15" fill="rgb(229,156,48)"/><text x="619.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.22%)</title><rect x="616" y="388" width="3" height="15" fill="rgb(250,89,27)"/><text x="619.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.22%)</title><rect x="616" y="404" width="3" height="15" fill="rgb(248,46,53)"/><text x="619.00" y="414.50"></text></g><g><title>PyArray_DIMS (ndarraytypes.h:1498) (1 samples, 0.22%)</title><rect x="616" y="420" width="3" height="15" fill="rgb(254,148,53)"/><text x="619.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.22%)</title><rect x="619" y="308" width="2" height="15" fill="rgb(244,167,47)"/><text x="622.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.22%)</title><rect x="619" y="324" width="2" height="15" fill="rgb(245,179,26)"/><text x="622.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.22%)</title><rect x="619" y="340" width="2" height="15" fill="rgb(228,163,18)"/><text x="622.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.22%)</title><rect x="619" y="356" width="2" height="15" fill="rgb(227,164,6)"/><text x="622.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="621" y="308" width="3" height="15" fill="rgb(214,55,47)"/><text x="624.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="621" y="324" width="3" height="15" fill="rgb(212,206,4)"/><text x="624.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.22%)</title><rect x="621" y="340" width="3" height="15" fill="rgb(218,28,53)"/><text x="624.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (183 samples, 39.35%)</title><rect x="162" y="180" width="464" height="15" fill="rgb(231,120,39)"/><text x="165.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (17 samples, 3.66%)</title><rect x="583" y="196" width="43" height="15" fill="rgb(247,0,11)"/><text x="586.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.51%)</title><rect x="608" y="212" width="18" height="15" fill="rgb(246,186,40)"/><text x="611.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.51%)</title><rect x="608" y="228" width="18" height="15" fill="rgb(215,200,20)"/><text x="611.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 1.51%)</title><rect x="608" y="244" width="18" height="15" fill="rgb(215,28,6)"/><text x="611.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.08%)</title><rect x="613" y="260" width="13" height="15" fill="rgb(206,136,16)"/><text x="616.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.08%)</title><rect x="613" y="276" width="13" height="15" fill="rgb(233,122,11)"/><text x="616.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.08%)</title><rect x="613" y="292" width="13" height="15" fill="rgb(248,69,13)"/><text x="616.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.22%)</title><rect x="624" y="308" width="2" height="15" fill="rgb(253,51,43)"/><text x="627.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="624" y="324" width="2" height="15" fill="rgb(219,69,24)"/><text x="627.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.22%)</title><rect x="624" y="340" width="2" height="15" fill="rgb(247,61,29)"/><text x="627.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="624" y="356" width="2" height="15" fill="rgb(212,61,41)"/><text x="627.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:38) (240 samples, 51.61%)</title><rect x="20" y="52" width="609" height="15" fill="rgb(235,142,42)"/><text x="23.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:37) (240 samples, 51.61%)</title><rect x="20" y="68" width="609" height="15" fill="rgb(216,41,9)"/><text x="23.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (238 samples, 51.18%)</title><rect x="25" y="84" width="604" height="15" fill="rgb(248,188,43)"/><text x="28.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (186 samples, 40.00%)</title><rect x="157" y="100" width="472" height="15" fill="rgb(241,169,39)"/><text x="160.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (186 samples, 40.00%)</title><rect x="157" y="116" width="472" height="15" fill="rgb(239,116,37)"/><text x="160.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (186 samples, 40.00%)</title><rect x="157" y="132" width="472" height="15" fill="rgb(229,221,42)"/><text x="160.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (185 samples, 39.78%)</title><rect x="159" y="148" width="470" height="15" fill="rgb(218,22,24)"/><text x="162.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (184 samples, 39.57%)</title><rect x="162" y="164" width="467" height="15" fill="rgb(253,56,8)"/><text x="165.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_add (number.c:330) (1 samples, 0.22%)</title><rect x="626" y="180" width="3" height="15" fill="rgb(208,40,13)"/><text x="629.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="626" y="196" width="3" height="15" fill="rgb(241,128,1)"/><text x="629.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="626" y="212" width="3" height="15" fill="rgb(216,132,45)"/><text x="629.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="626" y="228" width="3" height="15" fill="rgb(247,45,46)"/><text x="629.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.22%)</title><rect x="626" y="244" width="3" height="15" fill="rgb(230,220,50)"/><text x="629.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.22%)</title><rect x="626" y="260" width="3" height="15" fill="rgb(219,208,44)"/><text x="629.00" y="270.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.22%)</title><rect x="626" y="276" width="3" height="15" fill="rgb(238,108,51)"/><text x="629.00" y="286.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.22%)</title><rect x="629" y="244" width="2" height="15" fill="rgb(222,119,0)"/><text x="632.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="629" y="260" width="2" height="15" fill="rgb(217,83,15)"/><text x="632.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="629" y="276" width="2" height="15" fill="rgb(239,177,48)"/><text x="632.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="629" y="292" width="2" height="15" fill="rgb(240,138,49)"/><text x="632.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="629" y="308" width="2" height="15" fill="rgb(251,29,13)"/><text x="632.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="629" y="324" width="2" height="15" fill="rgb(225,96,45)"/><text x="632.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="629" y="340" width="2" height="15" fill="rgb(249,27,33)"/><text x="632.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="629" y="356" width="2" height="15" fill="rgb(209,30,23)"/><text x="632.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.22%)</title><rect x="629" y="372" width="2" height="15" fill="rgb(222,1,3)"/><text x="632.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="629" y="388" width="2" height="15" fill="rgb(227,34,44)"/><text x="632.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="629" y="404" width="2" height="15" fill="rgb(236,126,25)"/><text x="632.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="629" y="420" width="2" height="15" fill="rgb(225,211,16)"/><text x="632.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="629" y="436" width="2" height="15" fill="rgb(249,130,27)"/><text x="632.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="629" y="452" width="2" height="15" fill="rgb(216,142,52)"/><text x="632.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="629" y="468" width="2" height="15" fill="rgb(205,215,32)"/><text x="632.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="629" y="484" width="2" height="15" fill="rgb(231,165,0)"/><text x="632.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.22%)</title><rect x="629" y="500" width="2" height="15" fill="rgb(247,207,9)"/><text x="632.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="629" y="516" width="2" height="15" fill="rgb(238,107,42)"/><text x="632.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="629" y="532" width="2" height="15" fill="rgb(237,63,51)"/><text x="632.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="629" y="548" width="2" height="15" fill="rgb(243,120,44)"/><text x="632.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="629" y="564" width="2" height="15" fill="rgb(239,181,17)"/><text x="632.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="629" y="580" width="2" height="15" fill="rgb(239,91,0)"/><text x="632.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:174) (1 samples, 0.22%)</title><rect x="629" y="596" width="2" height="15" fill="rgb(230,109,39)"/><text x="632.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.22%)</title><rect x="629" y="612" width="2" height="15" fill="rgb(238,77,52)"/><text x="632.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.22%)</title><rect x="629" y="628" width="2" height="15" fill="rgb(223,33,30)"/><text x="632.00" y="638.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.22%)</title><rect x="629" y="644" width="2" height="15" fill="rgb(249,37,1)"/><text x="632.00" y="654.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.22%)</title><rect x="629" y="660" width="2" height="15" fill="rgb(242,29,23)"/><text x="632.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.22%)</title><rect x="629" y="676" width="2" height="15" fill="rgb(232,160,19)"/><text x="632.00" y="686.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.22%)</title><rect x="629" y="692" width="2" height="15" fill="rgb(218,108,35)"/><text x="632.00" y="702.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.22%)</title><rect x="629" y="708" width="2" height="15" fill="rgb(236,225,23)"/><text x="632.00" y="718.50"></text></g><g><title>_parse (sre_parse.py:483) (1 samples, 0.22%)</title><rect x="629" y="724" width="2" height="15" fill="rgb(215,134,12)"/><text x="632.00" y="734.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (2 samples, 0.43%)</title><rect x="629" y="148" width="5" height="15" fill="rgb(213,153,15)"/><text x="632.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.43%)</title><rect x="629" y="164" width="5" height="15" fill="rgb(226,214,24)"/><text x="632.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.43%)</title><rect x="629" y="180" width="5" height="15" fill="rgb(226,117,49)"/><text x="632.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.43%)</title><rect x="629" y="196" width="5" height="15" fill="rgb(215,199,8)"/><text x="632.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.43%)</title><rect x="629" y="212" width="5" height="15" fill="rgb(253,140,53)"/><text x="632.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.43%)</title><rect x="629" y="228" width="5" height="15" fill="rgb(208,95,16)"/><text x="632.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.22%)</title><rect x="631" y="244" width="3" height="15" fill="rgb(214,81,19)"/><text x="634.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="631" y="260" width="3" height="15" fill="rgb(254,189,38)"/><text x="634.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="276" width="3" height="15" fill="rgb(220,71,21)"/><text x="634.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="292" width="3" height="15" fill="rgb(212,80,10)"/><text x="634.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="308" width="3" height="15" fill="rgb(244,221,20)"/><text x="634.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="324" width="3" height="15" fill="rgb(230,40,50)"/><text x="634.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="631" y="340" width="3" height="15" fill="rgb(215,164,25)"/><text x="634.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="356" width="3" height="15" fill="rgb(207,182,45)"/><text x="634.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.22%)</title><rect x="631" y="372" width="3" height="15" fill="rgb(224,47,26)"/><text x="634.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="631" y="388" width="3" height="15" fill="rgb(250,192,52)"/><text x="634.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="404" width="3" height="15" fill="rgb(212,162,17)"/><text x="634.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="420" width="3" height="15" fill="rgb(219,108,26)"/><text x="634.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="436" width="3" height="15" fill="rgb(220,102,53)"/><text x="634.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="452" width="3" height="15" fill="rgb(252,20,49)"/><text x="634.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="631" y="468" width="3" height="15" fill="rgb(219,115,47)"/><text x="634.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="484" width="3" height="15" fill="rgb(252,212,48)"/><text x="634.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.22%)</title><rect x="631" y="500" width="3" height="15" fill="rgb(222,105,19)"/><text x="634.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="516" width="3" height="15" fill="rgb(251,211,23)"/><text x="634.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="532" width="3" height="15" fill="rgb(229,8,41)"/><text x="634.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="548" width="3" height="15" fill="rgb(246,159,9)"/><text x="634.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="631" y="564" width="3" height="15" fill="rgb(210,186,20)"/><text x="634.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="580" width="3" height="15" fill="rgb(245,174,7)"/><text x="634.00" y="590.50"></text></g><g><title>0x7f0538e85585 (?) (1 samples, 0.22%)</title><rect x="631" y="596" width="3" height="15" fill="rgb(215,144,47)"/><text x="634.00" y="606.50"></text></g><g><title>0x7f0538e8b075 (?) (1 samples, 0.22%)</title><rect x="631" y="612" width="3" height="15" fill="rgb(215,138,49)"/><text x="634.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="628" width="3" height="15" fill="rgb(222,158,12)"/><text x="634.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="644" width="3" height="15" fill="rgb(227,96,22)"/><text x="634.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="660" width="3" height="15" fill="rgb(247,42,49)"/><text x="634.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="631" y="676" width="3" height="15" fill="rgb(250,103,36)"/><text x="634.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="692" width="3" height="15" fill="rgb(239,26,8)"/><text x="634.00" y="702.50"></text></g><g><title>0x7f05387c2543 (?) (1 samples, 0.22%)</title><rect x="631" y="708" width="3" height="15" fill="rgb(220,19,51)"/><text x="634.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="724" width="3" height="15" fill="rgb(216,221,40)"/><text x="634.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="740" width="3" height="15" fill="rgb(251,29,38)"/><text x="634.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="756" width="3" height="15" fill="rgb(215,75,41)"/><text x="634.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="631" y="772" width="3" height="15" fill="rgb(229,200,19)"/><text x="634.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="788" width="3" height="15" fill="rgb(238,59,30)"/><text x="634.00" y="798.50"></text></g><g><title>0x7f0538597b9c (?) (1 samples, 0.22%)</title><rect x="631" y="804" width="3" height="15" fill="rgb(239,49,53)"/><text x="634.00" y="814.50"></text></g><g><title>0x7f053859b885 (?) (1 samples, 0.22%)</title><rect x="631" y="820" width="3" height="15" fill="rgb(209,215,22)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="836" width="3" height="15" fill="rgb(222,162,7)"/><text x="634.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="852" width="3" height="15" fill="rgb(245,217,1)"/><text x="634.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="868" width="3" height="15" fill="rgb(226,121,1)"/><text x="634.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="631" y="884" width="3" height="15" fill="rgb(230,27,5)"/><text x="634.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="900" width="3" height="15" fill="rgb(223,200,5)"/><text x="634.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:20) (1 samples, 0.22%)</title><rect x="631" y="916" width="3" height="15" fill="rgb(240,162,54)"/><text x="634.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="932" width="3" height="15" fill="rgb(236,131,35)"/><text x="634.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="948" width="3" height="15" fill="rgb(247,201,40)"/><text x="634.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="631" y="964" width="3" height="15" fill="rgb(211,192,18)"/><text x="634.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="631" y="980" width="3" height="15" fill="rgb(223,54,37)"/><text x="634.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="996" width="3" height="15" fill="rgb(217,219,2)"/><text x="634.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py:70) (1 samples, 0.22%)</title><rect x="631" y="1012" width="3" height="15" fill="rgb(253,82,48)"/><text x="634.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="631" y="1028" width="3" height="15" fill="rgb(240,223,2)"/><text x="634.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="631" y="1044" width="3" height="15" fill="rgb(246,164,22)"/><text x="634.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="631" y="1060" width="3" height="15" fill="rgb(240,68,25)"/><text x="634.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.22%)</title><rect x="631" y="1076" width="3" height="15" fill="rgb(208,131,37)"/><text x="634.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.22%)</title><rect x="631" y="1092" width="3" height="15" fill="rgb(224,40,14)"/><text x="634.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="631" y="1108" width="3" height="15" fill="rgb(239,54,39)"/><text x="634.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1124" width="3" height="15" fill="rgb(251,226,10)"/><text x="634.00" y="1134.50"></text></g><g><title>0x7f0546846995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1140" width="3" height="15" fill="rgb(221,102,38)"/><text x="634.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1156" width="3" height="15" fill="rgb(223,103,1)"/><text x="634.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1172" width="3" height="15" fill="rgb(236,4,15)"/><text x="634.00" y="1182.50"></text></g><g><title>0x7f0546846258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1188" width="3" height="15" fill="rgb(242,156,46)"/><text x="634.00" y="1198.50"></text></g><g><title>0x7f0546893d7a (ld-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1204" width="3" height="15" fill="rgb(228,176,35)"/><text x="634.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1220" width="3" height="15" fill="rgb(212,220,51)"/><text x="634.00" y="1230.50"></text></g><g><title>0x7f054689418b (ld-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1236" width="3" height="15" fill="rgb(212,124,14)"/><text x="634.00" y="1246.50"></text></g><g><title>0x7f0546889ace (ld-2.29.so) (1 samples, 0.22%)</title><rect x="631" y="1252" width="3" height="15" fill="rgb(241,12,20)"/><text x="634.00" y="1262.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.22%)</title><rect x="634" y="948" width="2" height="15" fill="rgb(249,131,53)"/><text x="637.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.22%)</title><rect x="634" y="964" width="2" height="15" fill="rgb(240,15,25)"/><text x="637.00" y="974.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.22%)</title><rect x="634" y="980" width="2" height="15" fill="rgb(254,229,26)"/><text x="637.00" y="990.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.22%)</title><rect x="636" y="948" width="3" height="15" fill="rgb(207,116,4)"/><text x="639.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.22%)</title><rect x="636" y="964" width="3" height="15" fill="rgb(219,76,36)"/><text x="639.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:132) (1 samples, 0.22%)</title><rect x="636" y="980" width="3" height="15" fill="rgb(246,123,34)"/><text x="639.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.22%)</title><rect x="639" y="996" width="2" height="15" fill="rgb(233,227,42)"/><text x="642.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (4 samples, 0.86%)</title><rect x="634" y="916" width="10" height="15" fill="rgb(229,119,35)"/><text x="637.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (4 samples, 0.86%)</title><rect x="634" y="932" width="10" height="15" fill="rgb(245,208,8)"/><text x="637.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.43%)</title><rect x="639" y="948" width="5" height="15" fill="rgb(205,37,6)"/><text x="642.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.43%)</title><rect x="639" y="964" width="5" height="15" fill="rgb(249,198,53)"/><text x="642.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.43%)</title><rect x="639" y="980" width="5" height="15" fill="rgb(211,165,20)"/><text x="642.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.22%)</title><rect x="641" y="996" width="3" height="15" fill="rgb(207,44,26)"/><text x="644.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (5 samples, 1.08%)</title><rect x="634" y="852" width="12" height="15" fill="rgb(238,74,53)"/><text x="637.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (5 samples, 1.08%)</title><rect x="634" y="868" width="12" height="15" fill="rgb(214,1,54)"/><text x="637.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (5 samples, 1.08%)</title><rect x="634" y="884" width="12" height="15" fill="rgb(252,164,4)"/><text x="637.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 1.08%)</title><rect x="634" y="900" width="12" height="15" fill="rgb(231,216,7)"/><text x="637.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.22%)</title><rect x="644" y="916" width="2" height="15" fill="rgb(227,125,6)"/><text x="647.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.22%)</title><rect x="644" y="932" width="2" height="15" fill="rgb(211,134,46)"/><text x="647.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="644" y="948" width="2" height="15" fill="rgb(236,74,14)"/><text x="647.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="644" y="964" width="2" height="15" fill="rgb(235,68,31)"/><text x="647.00" y="974.50"></text></g><g><title>0x7f05465fe237 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="644" y="980" width="2" height="15" fill="rgb(206,51,7)"/><text x="647.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1381) (1 samples, 0.22%)</title><rect x="649" y="964" width="3" height="15" fill="rgb(225,100,27)"/><text x="652.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="649" y="980" width="3" height="15" fill="rgb(215,127,8)"/><text x="652.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.65%)</title><rect x="646" y="852" width="8" height="15" fill="rgb(230,70,24)"/><text x="649.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.65%)</title><rect x="646" y="868" width="8" height="15" fill="rgb(241,71,41)"/><text x="649.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.43%)</title><rect x="649" y="884" width="5" height="15" fill="rgb(254,216,51)"/><text x="652.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.43%)</title><rect x="649" y="900" width="5" height="15" fill="rgb(222,148,45)"/><text x="652.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.43%)</title><rect x="649" y="916" width="5" height="15" fill="rgb(247,76,48)"/><text x="652.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.43%)</title><rect x="649" y="932" width="5" height="15" fill="rgb(219,186,50)"/><text x="652.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.43%)</title><rect x="649" y="948" width="5" height="15" fill="rgb(222,183,53)"/><text x="652.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.22%)</title><rect x="652" y="964" width="2" height="15" fill="rgb(245,164,20)"/><text x="655.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.22%)</title><rect x="652" y="980" width="2" height="15" fill="rgb(238,75,40)"/><text x="655.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.22%)</title><rect x="652" y="996" width="2" height="15" fill="rgb(220,75,11)"/><text x="655.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.22%)</title><rect x="652" y="1012" width="2" height="15" fill="rgb(249,118,28)"/><text x="655.00" y="1022.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.22%)</title><rect x="654" y="900" width="3" height="15" fill="rgb(226,223,41)"/><text x="657.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (11 samples, 2.37%)</title><rect x="634" y="148" width="28" height="15" fill="rgb(209,126,31)"/><text x="637.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="164" width="28" height="15" fill="rgb(225,5,27)"/><text x="637.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 2.37%)</title><rect x="634" y="180" width="28" height="15" fill="rgb(207,127,11)"/><text x="637.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="196" width="28" height="15" fill="rgb(238,140,5)"/><text x="637.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="212" width="28" height="15" fill="rgb(228,9,35)"/><text x="637.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="228" width="28" height="15" fill="rgb(213,139,18)"/><text x="637.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="244" width="28" height="15" fill="rgb(206,61,53)"/><text x="637.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="260" width="28" height="15" fill="rgb(223,148,32)"/><text x="637.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="276" width="28" height="15" fill="rgb(220,203,37)"/><text x="637.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (11 samples, 2.37%)</title><rect x="634" y="292" width="28" height="15" fill="rgb(231,28,24)"/><text x="637.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="308" width="28" height="15" fill="rgb(246,125,25)"/><text x="637.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="324" width="28" height="15" fill="rgb(220,1,20)"/><text x="637.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="340" width="28" height="15" fill="rgb(235,198,14)"/><text x="637.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="356" width="28" height="15" fill="rgb(250,77,8)"/><text x="637.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="372" width="28" height="15" fill="rgb(234,49,49)"/><text x="637.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (11 samples, 2.37%)</title><rect x="634" y="388" width="28" height="15" fill="rgb(249,145,48)"/><text x="637.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="404" width="28" height="15" fill="rgb(218,2,25)"/><text x="637.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="420" width="28" height="15" fill="rgb(213,47,46)"/><text x="637.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="436" width="28" height="15" fill="rgb(214,134,34)"/><text x="637.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="452" width="28" height="15" fill="rgb(235,110,15)"/><text x="637.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="468" width="28" height="15" fill="rgb(240,95,48)"/><text x="637.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (11 samples, 2.37%)</title><rect x="634" y="484" width="28" height="15" fill="rgb(216,158,16)"/><text x="637.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="500" width="28" height="15" fill="rgb(222,183,12)"/><text x="637.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="516" width="28" height="15" fill="rgb(208,104,14)"/><text x="637.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="532" width="28" height="15" fill="rgb(243,142,10)"/><text x="637.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="548" width="28" height="15" fill="rgb(246,103,53)"/><text x="637.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="564" width="28" height="15" fill="rgb(235,97,40)"/><text x="637.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (11 samples, 2.37%)</title><rect x="634" y="580" width="28" height="15" fill="rgb(222,216,29)"/><text x="637.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="596" width="28" height="15" fill="rgb(218,168,9)"/><text x="637.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 2.37%)</title><rect x="634" y="612" width="28" height="15" fill="rgb(244,50,4)"/><text x="637.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="628" width="28" height="15" fill="rgb(252,133,26)"/><text x="637.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="644" width="28" height="15" fill="rgb(215,84,50)"/><text x="637.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="660" width="28" height="15" fill="rgb(211,119,17)"/><text x="637.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="676" width="28" height="15" fill="rgb(224,187,26)"/><text x="637.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="692" width="28" height="15" fill="rgb(228,161,40)"/><text x="637.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="708" width="28" height="15" fill="rgb(211,0,26)"/><text x="637.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (11 samples, 2.37%)</title><rect x="634" y="724" width="28" height="15" fill="rgb(242,114,30)"/><text x="637.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.37%)</title><rect x="634" y="740" width="28" height="15" fill="rgb(244,8,32)"/><text x="637.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.37%)</title><rect x="634" y="756" width="28" height="15" fill="rgb(248,6,23)"/><text x="637.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.37%)</title><rect x="634" y="772" width="28" height="15" fill="rgb(250,202,24)"/><text x="637.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.37%)</title><rect x="634" y="788" width="28" height="15" fill="rgb(228,3,23)"/><text x="637.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.37%)</title><rect x="634" y="804" width="28" height="15" fill="rgb(206,35,52)"/><text x="637.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (11 samples, 2.37%)</title><rect x="634" y="820" width="28" height="15" fill="rgb(233,196,50)"/><text x="637.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (11 samples, 2.37%)</title><rect x="634" y="836" width="28" height="15" fill="rgb(236,53,46)"/><text x="637.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.65%)</title><rect x="654" y="852" width="8" height="15" fill="rgb(226,60,19)"/><text x="657.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.65%)</title><rect x="654" y="868" width="8" height="15" fill="rgb(213,160,49)"/><text x="657.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.65%)</title><rect x="654" y="884" width="8" height="15" fill="rgb(253,217,15)"/><text x="657.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (2 samples, 0.43%)</title><rect x="657" y="900" width="5" height="15" fill="rgb(238,130,53)"/><text x="660.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (2 samples, 0.43%)</title><rect x="657" y="916" width="5" height="15" fill="rgb(208,135,24)"/><text x="660.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (2 samples, 0.43%)</title><rect x="657" y="932" width="5" height="15" fill="rgb(218,225,25)"/><text x="660.00" y="942.50"></text></g><g><title>0x7f05465fe237 (libc-2.29.so) (2 samples, 0.43%)</title><rect x="657" y="948" width="5" height="15" fill="rgb(252,46,32)"/><text x="660.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (1 samples, 0.22%)</title><rect x="662" y="148" width="2" height="15" fill="rgb(226,223,10)"/><text x="665.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="164" width="2" height="15" fill="rgb(226,2,37)"/><text x="665.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="662" y="180" width="2" height="15" fill="rgb(224,200,24)"/><text x="665.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="196" width="2" height="15" fill="rgb(237,204,7)"/><text x="665.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="212" width="2" height="15" fill="rgb(253,164,45)"/><text x="665.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="228" width="2" height="15" fill="rgb(253,167,4)"/><text x="665.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="244" width="2" height="15" fill="rgb(245,32,25)"/><text x="665.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="260" width="2" height="15" fill="rgb(218,18,26)"/><text x="665.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="276" width="2" height="15" fill="rgb(232,81,13)"/><text x="665.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.22%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(232,130,8)"/><text x="665.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(244,39,40)"/><text x="665.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(211,206,10)"/><text x="665.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="340" width="2" height="15" fill="rgb(222,199,2)"/><text x="665.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(237,78,50)"/><text x="665.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(247,74,6)"/><text x="665.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.22%)</title><rect x="662" y="388" width="2" height="15" fill="rgb(237,162,6)"/><text x="665.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="404" width="2" height="15" fill="rgb(249,226,54)"/><text x="665.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="420" width="2" height="15" fill="rgb(218,99,9)"/><text x="665.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="436" width="2" height="15" fill="rgb(237,206,4)"/><text x="665.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="452" width="2" height="15" fill="rgb(225,116,47)"/><text x="665.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="468" width="2" height="15" fill="rgb(215,175,38)"/><text x="665.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.22%)</title><rect x="662" y="484" width="2" height="15" fill="rgb(252,60,49)"/><text x="665.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="662" y="500" width="2" height="15" fill="rgb(245,88,25)"/><text x="665.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="516" width="2" height="15" fill="rgb(239,50,51)"/><text x="665.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="532" width="2" height="15" fill="rgb(243,117,8)"/><text x="665.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="548" width="2" height="15" fill="rgb(230,228,9)"/><text x="665.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="564" width="2" height="15" fill="rgb(234,219,34)"/><text x="665.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="580" width="2" height="15" fill="rgb(215,102,33)"/><text x="665.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="596" width="2" height="15" fill="rgb(220,55,22)"/><text x="665.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.22%)</title><rect x="662" y="612" width="2" height="15" fill="rgb(253,181,47)"/><text x="665.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="628" width="2" height="15" fill="rgb(206,170,19)"/><text x="665.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="644" width="2" height="15" fill="rgb(205,154,45)"/><text x="665.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="660" width="2" height="15" fill="rgb(224,67,52)"/><text x="665.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="676" width="2" height="15" fill="rgb(223,169,43)"/><text x="665.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="692" width="2" height="15" fill="rgb(213,92,18)"/><text x="665.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.22%)</title><rect x="662" y="708" width="2" height="15" fill="rgb(233,128,46)"/><text x="665.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="724" width="2" height="15" fill="rgb(207,227,5)"/><text x="665.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="740" width="2" height="15" fill="rgb(250,42,9)"/><text x="665.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="756" width="2" height="15" fill="rgb(219,40,0)"/><text x="665.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="772" width="2" height="15" fill="rgb(208,184,37)"/><text x="665.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="788" width="2" height="15" fill="rgb(235,29,31)"/><text x="665.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.22%)</title><rect x="662" y="804" width="2" height="15" fill="rgb(220,13,4)"/><text x="665.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="820" width="2" height="15" fill="rgb(241,135,7)"/><text x="665.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="836" width="2" height="15" fill="rgb(228,24,24)"/><text x="665.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="852" width="2" height="15" fill="rgb(252,222,14)"/><text x="665.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="868" width="2" height="15" fill="rgb(205,209,15)"/><text x="665.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="884" width="2" height="15" fill="rgb(233,71,36)"/><text x="665.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.22%)</title><rect x="662" y="900" width="2" height="15" fill="rgb(205,32,14)"/><text x="665.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="916" width="2" height="15" fill="rgb(219,66,45)"/><text x="665.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="932" width="2" height="15" fill="rgb(236,30,21)"/><text x="665.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="948" width="2" height="15" fill="rgb(244,200,29)"/><text x="665.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="964" width="2" height="15" fill="rgb(210,187,10)"/><text x="665.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="980" width="2" height="15" fill="rgb(211,15,7)"/><text x="665.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.22%)</title><rect x="662" y="996" width="2" height="15" fill="rgb(241,227,8)"/><text x="665.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1012" width="2" height="15" fill="rgb(234,121,47)"/><text x="665.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="662" y="1028" width="2" height="15" fill="rgb(230,212,43)"/><text x="665.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1044" width="2" height="15" fill="rgb(240,156,5)"/><text x="665.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1060" width="2" height="15" fill="rgb(242,3,43)"/><text x="665.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1076" width="2" height="15" fill="rgb(234,110,41)"/><text x="665.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1092" width="2" height="15" fill="rgb(212,113,51)"/><text x="665.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="1108" width="2" height="15" fill="rgb(215,7,16)"/><text x="665.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1124" width="2" height="15" fill="rgb(212,71,6)"/><text x="665.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.22%)</title><rect x="662" y="1140" width="2" height="15" fill="rgb(247,93,9)"/><text x="665.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1156" width="2" height="15" fill="rgb(221,78,5)"/><text x="665.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1172" width="2" height="15" fill="rgb(250,39,48)"/><text x="665.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1188" width="2" height="15" fill="rgb(235,26,8)"/><text x="665.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="1204" width="2" height="15" fill="rgb(240,132,30)"/><text x="665.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1220" width="2" height="15" fill="rgb(231,61,35)"/><text x="665.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.22%)</title><rect x="662" y="1236" width="2" height="15" fill="rgb(224,99,24)"/><text x="665.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1252" width="2" height="15" fill="rgb(234,98,38)"/><text x="665.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1268" width="2" height="15" fill="rgb(207,100,6)"/><text x="665.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1284" width="2" height="15" fill="rgb(211,2,7)"/><text x="665.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="1300" width="2" height="15" fill="rgb(245,127,17)"/><text x="665.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1316" width="2" height="15" fill="rgb(215,128,4)"/><text x="665.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.22%)</title><rect x="662" y="1332" width="2" height="15" fill="rgb(222,145,34)"/><text x="665.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1348" width="2" height="15" fill="rgb(240,159,51)"/><text x="665.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1364" width="2" height="15" fill="rgb(252,227,49)"/><text x="665.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1380" width="2" height="15" fill="rgb(220,156,44)"/><text x="665.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="1396" width="2" height="15" fill="rgb(209,50,46)"/><text x="665.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1412" width="2" height="15" fill="rgb(223,130,29)"/><text x="665.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.22%)</title><rect x="662" y="1428" width="2" height="15" fill="rgb(212,140,43)"/><text x="665.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1444" width="2" height="15" fill="rgb(244,213,44)"/><text x="665.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1460" width="2" height="15" fill="rgb(229,170,8)"/><text x="665.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1476" width="2" height="15" fill="rgb(252,3,24)"/><text x="665.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="662" y="1492" width="2" height="15" fill="rgb(212,23,35)"/><text x="665.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1508" width="2" height="15" fill="rgb(229,21,1)"/><text x="665.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.22%)</title><rect x="662" y="1524" width="2" height="15" fill="rgb(250,62,3)"/><text x="665.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="662" y="1540" width="2" height="15" fill="rgb(209,42,33)"/><text x="665.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="662" y="1556" width="2" height="15" fill="rgb(239,158,48)"/><text x="665.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="662" y="1572" width="2" height="15" fill="rgb(254,206,17)"/><text x="665.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="662" y="1588" width="2" height="15" fill="rgb(223,9,32)"/><text x="665.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="662" y="1604" width="2" height="15" fill="rgb(232,0,29)"/><text x="665.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="662" y="1620" width="2" height="15" fill="rgb(241,186,30)"/><text x="665.00" y="1630.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.22%)</title><rect x="662" y="1636" width="2" height="15" fill="rgb(210,43,36)"/><text x="665.00" y="1646.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.22%)</title><rect x="662" y="1652" width="2" height="15" fill="rgb(223,2,26)"/><text x="665.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.22%)</title><rect x="664" y="244" width="3" height="15" fill="rgb(238,38,25)"/><text x="667.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="260" width="3" height="15" fill="rgb(243,61,44)"/><text x="667.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="276" width="3" height="15" fill="rgb(233,56,45)"/><text x="667.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="292" width="3" height="15" fill="rgb(225,208,5)"/><text x="667.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="308" width="3" height="15" fill="rgb(246,170,25)"/><text x="667.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="324" width="3" height="15" fill="rgb(223,104,33)"/><text x="667.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.22%)</title><rect x="664" y="340" width="3" height="15" fill="rgb(221,41,34)"/><text x="667.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="356" width="3" height="15" fill="rgb(223,100,34)"/><text x="667.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="664" y="372" width="3" height="15" fill="rgb(220,29,32)"/><text x="667.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="388" width="3" height="15" fill="rgb(211,221,28)"/><text x="667.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="404" width="3" height="15" fill="rgb(253,202,28)"/><text x="667.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="420" width="3" height="15" fill="rgb(230,136,36)"/><text x="667.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="436" width="3" height="15" fill="rgb(212,94,33)"/><text x="667.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="452" width="3" height="15" fill="rgb(222,185,9)"/><text x="667.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="468" width="3" height="15" fill="rgb(233,187,42)"/><text x="667.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.22%)</title><rect x="664" y="484" width="3" height="15" fill="rgb(246,80,47)"/><text x="667.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="500" width="3" height="15" fill="rgb(235,86,54)"/><text x="667.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="516" width="3" height="15" fill="rgb(250,87,23)"/><text x="667.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="532" width="3" height="15" fill="rgb(228,146,14)"/><text x="667.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="548" width="3" height="15" fill="rgb(217,15,35)"/><text x="667.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="564" width="3" height="15" fill="rgb(225,173,29)"/><text x="667.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.22%)</title><rect x="664" y="580" width="3" height="15" fill="rgb(206,103,17)"/><text x="667.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="596" width="3" height="15" fill="rgb(210,33,16)"/><text x="667.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="612" width="3" height="15" fill="rgb(234,47,3)"/><text x="667.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="628" width="3" height="15" fill="rgb(254,146,18)"/><text x="667.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="644" width="3" height="15" fill="rgb(220,196,53)"/><text x="667.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="660" width="3" height="15" fill="rgb(219,211,4)"/><text x="667.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.22%)</title><rect x="664" y="676" width="3" height="15" fill="rgb(222,79,3)"/><text x="667.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="692" width="3" height="15" fill="rgb(213,192,45)"/><text x="667.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="708" width="3" height="15" fill="rgb(242,136,15)"/><text x="667.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="724" width="3" height="15" fill="rgb(234,145,0)"/><text x="667.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="740" width="3" height="15" fill="rgb(230,90,45)"/><text x="667.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="756" width="3" height="15" fill="rgb(229,46,20)"/><text x="667.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.22%)</title><rect x="664" y="772" width="3" height="15" fill="rgb(229,222,7)"/><text x="667.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="664" y="788" width="3" height="15" fill="rgb(214,59,5)"/><text x="667.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="804" width="3" height="15" fill="rgb(217,19,24)"/><text x="667.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="820" width="3" height="15" fill="rgb(209,11,11)"/><text x="667.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="836" width="3" height="15" fill="rgb(215,137,7)"/><text x="667.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="852" width="3" height="15" fill="rgb(241,41,9)"/><text x="667.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="868" width="3" height="15" fill="rgb(243,56,53)"/><text x="667.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="884" width="3" height="15" fill="rgb(224,216,17)"/><text x="667.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.22%)</title><rect x="664" y="900" width="3" height="15" fill="rgb(225,224,26)"/><text x="667.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="916" width="3" height="15" fill="rgb(217,20,9)"/><text x="667.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="664" y="932" width="3" height="15" fill="rgb(215,38,35)"/><text x="667.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="948" width="3" height="15" fill="rgb(211,97,18)"/><text x="667.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="964" width="3" height="15" fill="rgb(216,95,32)"/><text x="667.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="980" width="3" height="15" fill="rgb(249,81,45)"/><text x="667.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="996" width="3" height="15" fill="rgb(233,37,13)"/><text x="667.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="1012" width="3" height="15" fill="rgb(224,9,45)"/><text x="667.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1028" width="3" height="15" fill="rgb(240,118,10)"/><text x="667.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.22%)</title><rect x="664" y="1044" width="3" height="15" fill="rgb(231,82,9)"/><text x="667.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="664" y="1060" width="3" height="15" fill="rgb(254,41,23)"/><text x="667.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1076" width="3" height="15" fill="rgb(208,176,4)"/><text x="667.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="1092" width="3" height="15" fill="rgb(228,125,32)"/><text x="667.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="1108" width="3" height="15" fill="rgb(250,2,46)"/><text x="667.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="1124" width="3" height="15" fill="rgb(240,81,32)"/><text x="667.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="1140" width="3" height="15" fill="rgb(242,229,45)"/><text x="667.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1156" width="3" height="15" fill="rgb(244,182,37)"/><text x="667.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.22%)</title><rect x="664" y="1172" width="3" height="15" fill="rgb(214,41,24)"/><text x="667.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="664" y="1188" width="3" height="15" fill="rgb(222,226,51)"/><text x="667.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1204" width="3" height="15" fill="rgb(216,50,39)"/><text x="667.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="1220" width="3" height="15" fill="rgb(244,138,9)"/><text x="667.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="1236" width="3" height="15" fill="rgb(210,103,30)"/><text x="667.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="1252" width="3" height="15" fill="rgb(247,19,6)"/><text x="667.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="1268" width="3" height="15" fill="rgb(227,139,46)"/><text x="667.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1284" width="3" height="15" fill="rgb(211,80,10)"/><text x="667.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.22%)</title><rect x="664" y="1300" width="3" height="15" fill="rgb(240,29,3)"/><text x="667.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="1316" width="3" height="15" fill="rgb(236,172,29)"/><text x="667.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="1332" width="3" height="15" fill="rgb(220,23,50)"/><text x="667.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="1348" width="3" height="15" fill="rgb(218,157,36)"/><text x="667.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="1364" width="3" height="15" fill="rgb(242,192,12)"/><text x="667.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1380" width="3" height="15" fill="rgb(215,173,28)"/><text x="667.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.22%)</title><rect x="664" y="1396" width="3" height="15" fill="rgb(238,83,7)"/><text x="667.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="664" y="1412" width="3" height="15" fill="rgb(231,157,12)"/><text x="667.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1428" width="3" height="15" fill="rgb(207,222,24)"/><text x="667.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="664" y="1444" width="3" height="15" fill="rgb(253,148,33)"/><text x="667.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="664" y="1460" width="3" height="15" fill="rgb(241,137,19)"/><text x="667.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="664" y="1476" width="3" height="15" fill="rgb(245,38,7)"/><text x="667.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="664" y="1492" width="3" height="15" fill="rgb(251,214,36)"/><text x="667.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="664" y="1508" width="3" height="15" fill="rgb(217,99,18)"/><text x="667.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ec.py:182) (1 samples, 0.22%)</title><rect x="664" y="1524" width="3" height="15" fill="rgb(236,201,7)"/><text x="667.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.22%)</title><rect x="667" y="436" width="2" height="15" fill="rgb(216,11,43)"/><text x="670.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="452" width="2" height="15" fill="rgb(218,21,39)"/><text x="670.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="468" width="2" height="15" fill="rgb(246,3,43)"/><text x="670.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="484" width="2" height="15" fill="rgb(216,209,25)"/><text x="670.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="500" width="2" height="15" fill="rgb(252,211,16)"/><text x="670.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="516" width="2" height="15" fill="rgb(247,34,25)"/><text x="670.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.22%)</title><rect x="667" y="532" width="2" height="15" fill="rgb(233,150,31)"/><text x="670.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="548" width="2" height="15" fill="rgb(244,65,34)"/><text x="670.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="564" width="2" height="15" fill="rgb(251,228,24)"/><text x="670.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="580" width="2" height="15" fill="rgb(240,36,19)"/><text x="670.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="596" width="2" height="15" fill="rgb(248,107,14)"/><text x="670.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="612" width="2" height="15" fill="rgb(211,84,39)"/><text x="670.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.22%)</title><rect x="667" y="628" width="2" height="15" fill="rgb(214,13,31)"/><text x="670.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="644" width="2" height="15" fill="rgb(251,193,51)"/><text x="670.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="660" width="2" height="15" fill="rgb(227,88,43)"/><text x="670.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="676" width="2" height="15" fill="rgb(238,170,46)"/><text x="670.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="692" width="2" height="15" fill="rgb(232,204,33)"/><text x="670.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="708" width="2" height="15" fill="rgb(229,90,47)"/><text x="670.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.22%)</title><rect x="667" y="724" width="2" height="15" fill="rgb(237,105,14)"/><text x="670.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="740" width="2" height="15" fill="rgb(211,71,47)"/><text x="670.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="756" width="2" height="15" fill="rgb(237,29,26)"/><text x="670.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="772" width="2" height="15" fill="rgb(232,51,28)"/><text x="670.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="788" width="2" height="15" fill="rgb(248,202,29)"/><text x="670.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="804" width="2" height="15" fill="rgb(230,22,5)"/><text x="670.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.22%)</title><rect x="667" y="820" width="2" height="15" fill="rgb(241,112,8)"/><text x="670.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="836" width="2" height="15" fill="rgb(206,105,11)"/><text x="670.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="852" width="2" height="15" fill="rgb(217,19,47)"/><text x="670.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="868" width="2" height="15" fill="rgb(218,179,26)"/><text x="670.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="884" width="2" height="15" fill="rgb(233,60,15)"/><text x="670.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="900" width="2" height="15" fill="rgb(235,225,33)"/><text x="670.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.22%)</title><rect x="667" y="916" width="2" height="15" fill="rgb(206,207,47)"/><text x="670.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="932" width="2" height="15" fill="rgb(216,42,8)"/><text x="670.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="948" width="2" height="15" fill="rgb(228,176,49)"/><text x="670.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="964" width="2" height="15" fill="rgb(229,210,27)"/><text x="670.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="980" width="2" height="15" fill="rgb(247,131,44)"/><text x="670.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="996" width="2" height="15" fill="rgb(254,122,10)"/><text x="670.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.22%)</title><rect x="667" y="1012" width="2" height="15" fill="rgb(243,205,5)"/><text x="670.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1028" width="2" height="15" fill="rgb(216,98,16)"/><text x="670.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1044" width="2" height="15" fill="rgb(227,150,28)"/><text x="670.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1060" width="2" height="15" fill="rgb(206,185,25)"/><text x="670.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1076" width="2" height="15" fill="rgb(226,82,26)"/><text x="670.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1092" width="2" height="15" fill="rgb(249,61,42)"/><text x="670.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.22%)</title><rect x="667" y="1108" width="2" height="15" fill="rgb(239,92,10)"/><text x="670.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1124" width="2" height="15" fill="rgb(224,137,51)"/><text x="670.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1140" width="2" height="15" fill="rgb(211,130,8)"/><text x="670.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1156" width="2" height="15" fill="rgb(226,138,15)"/><text x="670.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1172" width="2" height="15" fill="rgb(239,105,4)"/><text x="670.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1188" width="2" height="15" fill="rgb(209,212,51)"/><text x="670.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.22%)</title><rect x="667" y="1204" width="2" height="15" fill="rgb(212,167,32)"/><text x="670.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1220" width="2" height="15" fill="rgb(242,30,39)"/><text x="670.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1236" width="2" height="15" fill="rgb(214,39,36)"/><text x="670.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1252" width="2" height="15" fill="rgb(249,80,28)"/><text x="670.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1268" width="2" height="15" fill="rgb(206,47,49)"/><text x="670.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1284" width="2" height="15" fill="rgb(210,138,45)"/><text x="670.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.22%)</title><rect x="667" y="1300" width="2" height="15" fill="rgb(219,160,46)"/><text x="670.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1316" width="2" height="15" fill="rgb(224,181,53)"/><text x="670.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1332" width="2" height="15" fill="rgb(221,144,8)"/><text x="670.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1348" width="2" height="15" fill="rgb(209,121,44)"/><text x="670.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1364" width="2" height="15" fill="rgb(215,95,50)"/><text x="670.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1380" width="2" height="15" fill="rgb(252,42,39)"/><text x="670.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.22%)</title><rect x="667" y="1396" width="2" height="15" fill="rgb(213,174,5)"/><text x="670.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1412" width="2" height="15" fill="rgb(240,36,36)"/><text x="670.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1428" width="2" height="15" fill="rgb(217,59,15)"/><text x="670.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1444" width="2" height="15" fill="rgb(241,201,20)"/><text x="670.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1460" width="2" height="15" fill="rgb(213,44,50)"/><text x="670.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1476" width="2" height="15" fill="rgb(223,105,16)"/><text x="670.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.22%)</title><rect x="667" y="1492" width="2" height="15" fill="rgb(238,40,19)"/><text x="670.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1508" width="2" height="15" fill="rgb(229,2,42)"/><text x="670.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="667" y="1524" width="2" height="15" fill="rgb(224,176,28)"/><text x="670.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1540" width="2" height="15" fill="rgb(237,85,20)"/><text x="670.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1556" width="2" height="15" fill="rgb(221,225,50)"/><text x="670.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1572" width="2" height="15" fill="rgb(230,147,52)"/><text x="670.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1588" width="2" height="15" fill="rgb(220,27,53)"/><text x="670.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1604" width="2" height="15" fill="rgb(223,1,23)"/><text x="670.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1620" width="2" height="15" fill="rgb(220,36,47)"/><text x="670.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.22%)</title><rect x="667" y="1636" width="2" height="15" fill="rgb(206,54,48)"/><text x="670.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="667" y="1652" width="2" height="15" fill="rgb(246,53,25)"/><text x="670.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1668" width="2" height="15" fill="rgb(235,173,44)"/><text x="670.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1684" width="2" height="15" fill="rgb(238,136,29)"/><text x="670.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1700" width="2" height="15" fill="rgb(240,24,6)"/><text x="670.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1716" width="2" height="15" fill="rgb(209,78,11)"/><text x="670.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1732" width="2" height="15" fill="rgb(213,180,22)"/><text x="670.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1748" width="2" height="15" fill="rgb(218,216,37)"/><text x="670.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.22%)</title><rect x="667" y="1764" width="2" height="15" fill="rgb(209,157,4)"/><text x="670.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1780" width="2" height="15" fill="rgb(248,80,9)"/><text x="670.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1796" width="2" height="15" fill="rgb(241,211,31)"/><text x="670.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1812" width="2" height="15" fill="rgb(224,5,9)"/><text x="670.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1828" width="2" height="15" fill="rgb(240,55,41)"/><text x="670.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1844" width="2" height="15" fill="rgb(212,136,32)"/><text x="670.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.22%)</title><rect x="667" y="1860" width="2" height="15" fill="rgb(211,176,49)"/><text x="670.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="667" y="1876" width="2" height="15" fill="rgb(207,6,10)"/><text x="670.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="667" y="1892" width="2" height="15" fill="rgb(206,27,34)"/><text x="670.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="667" y="1908" width="2" height="15" fill="rgb(214,107,5)"/><text x="670.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="667" y="1924" width="2" height="15" fill="rgb(245,223,16)"/><text x="670.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="667" y="1940" width="2" height="15" fill="rgb(247,207,4)"/><text x="670.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:5653) (1 samples, 0.22%)</title><rect x="667" y="1956" width="2" height="15" fill="rgb(221,47,2)"/><text x="670.00" y="1966.50"></text></g><g><title>setParseAction (pyparsing.py:1555) (1 samples, 0.22%)</title><rect x="667" y="1972" width="2" height="15" fill="rgb(240,121,21)"/><text x="670.00" y="1982.50"></text></g><g><title>_trim_arity (pyparsing.py:1308) (1 samples, 0.22%)</title><rect x="667" y="1988" width="2" height="15" fill="rgb(206,123,10)"/><text x="670.00" y="1998.50"></text></g><g><title>extract_stack (pyparsing.py:1292) (1 samples, 0.22%)</title><rect x="667" y="2004" width="2" height="15" fill="rgb(252,46,14)"/><text x="670.00" y="2014.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.22%)</title><rect x="667" y="2020" width="2" height="15" fill="rgb(213,8,35)"/><text x="670.00" y="2030.50"></text></g><g><title>extract (traceback.py:363) (1 samples, 0.22%)</title><rect x="667" y="2036" width="2" height="15" fill="rgb(211,150,4)"/><text x="670.00" y="2046.50"></text></g><g><title>line (traceback.py:285) (1 samples, 0.22%)</title><rect x="667" y="2052" width="2" height="15" fill="rgb(206,64,44)"/><text x="670.00" y="2062.50"></text></g><g><title>getline (linecache.py:16) (1 samples, 0.22%)</title><rect x="667" y="2068" width="2" height="15" fill="rgb(214,162,3)"/><text x="670.00" y="2078.50"></text></g><g><title>getlines (linecache.py:47) (1 samples, 0.22%)</title><rect x="667" y="2084" width="2" height="15" fill="rgb(245,111,42)"/><text x="670.00" y="2094.50"></text></g><g><title>updatecache (linecache.py:137) (1 samples, 0.22%)</title><rect x="667" y="2100" width="2" height="15" fill="rgb(225,192,9)"/><text x="670.00" y="2110.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.22%)</title><rect x="669" y="1204" width="3" height="15" fill="rgb(227,111,4)"/><text x="672.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="669" y="1220" width="3" height="15" fill="rgb(238,0,42)"/><text x="672.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="669" y="1236" width="3" height="15" fill="rgb(239,116,5)"/><text x="672.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="669" y="1252" width="3" height="15" fill="rgb(249,116,6)"/><text x="672.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="669" y="1268" width="3" height="15" fill="rgb(218,217,43)"/><text x="672.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="669" y="1284" width="3" height="15" fill="rgb(254,5,24)"/><text x="672.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="669" y="1300" width="3" height="15" fill="rgb(210,67,35)"/><text x="672.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="669" y="1316" width="3" height="15" fill="rgb(219,17,5)"/><text x="672.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="669" y="1332" width="3" height="15" fill="rgb(205,202,33)"/><text x="672.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:23) (1 samples, 0.22%)</title><rect x="669" y="1348" width="3" height="15" fill="rgb(223,121,26)"/><text x="672.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="669" y="1364" width="3" height="15" fill="rgb(233,185,54)"/><text x="672.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="669" y="1380" width="3" height="15" fill="rgb(233,177,13)"/><text x="672.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="669" y="1396" width="3" height="15" fill="rgb(216,209,42)"/><text x="672.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="669" y="1412" width="3" height="15" fill="rgb(252,100,0)"/><text x="672.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (1 samples, 0.22%)</title><rect x="669" y="1428" width="3" height="15" fill="rgb(221,74,45)"/><text x="672.00" y="1438.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.22%)</title><rect x="674" y="1428" width="3" height="15" fill="rgb(253,160,23)"/><text x="677.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (4 samples, 0.86%)</title><rect x="669" y="1108" width="10" height="15" fill="rgb(236,34,37)"/><text x="672.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.86%)</title><rect x="669" y="1124" width="10" height="15" fill="rgb(209,211,22)"/><text x="672.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.86%)</title><rect x="669" y="1140" width="10" height="15" fill="rgb(226,41,1)"/><text x="672.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.86%)</title><rect x="669" y="1156" width="10" height="15" fill="rgb(238,168,20)"/><text x="672.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.86%)</title><rect x="669" y="1172" width="10" height="15" fill="rgb(243,163,0)"/><text x="672.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.86%)</title><rect x="669" y="1188" width="10" height="15" fill="rgb(206,224,39)"/><text x="672.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.65%)</title><rect x="672" y="1204" width="7" height="15" fill="rgb(219,94,1)"/><text x="675.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.65%)</title><rect x="672" y="1220" width="7" height="15" fill="rgb(225,161,0)"/><text x="675.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.65%)</title><rect x="672" y="1236" width="7" height="15" fill="rgb(237,137,23)"/><text x="675.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.65%)</title><rect x="672" y="1252" width="7" height="15" fill="rgb(246,3,51)"/><text x="675.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.65%)</title><rect x="672" y="1268" width="7" height="15" fill="rgb(208,195,17)"/><text x="675.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.65%)</title><rect x="672" y="1284" width="7" height="15" fill="rgb(225,99,46)"/><text x="675.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.65%)</title><rect x="672" y="1300" width="7" height="15" fill="rgb(216,132,29)"/><text x="675.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.65%)</title><rect x="672" y="1316" width="7" height="15" fill="rgb(251,178,52)"/><text x="675.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.65%)</title><rect x="672" y="1332" width="7" height="15" fill="rgb(250,197,53)"/><text x="675.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 0.65%)</title><rect x="672" y="1348" width="7" height="15" fill="rgb(232,97,43)"/><text x="675.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (3 samples, 0.65%)</title><rect x="672" y="1364" width="7" height="15" fill="rgb(226,123,28)"/><text x="675.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (3 samples, 0.65%)</title><rect x="672" y="1380" width="7" height="15" fill="rgb(236,99,11)"/><text x="675.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (3 samples, 0.65%)</title><rect x="672" y="1396" width="7" height="15" fill="rgb(242,161,2)"/><text x="675.00" y="1406.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.43%)</title><rect x="674" y="1412" width="5" height="15" fill="rgb(221,218,18)"/><text x="677.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.22%)</title><rect x="677" y="1428" width="2" height="15" fill="rgb(253,13,18)"/><text x="680.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.22%)</title><rect x="677" y="1444" width="2" height="15" fill="rgb(228,31,6)"/><text x="680.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.22%)</title><rect x="677" y="1460" width="2" height="15" fill="rgb(220,20,40)"/><text x="680.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.22%)</title><rect x="677" y="1476" width="2" height="15" fill="rgb(228,14,13)"/><text x="680.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.22%)</title><rect x="677" y="1492" width="2" height="15" fill="rgb(246,19,36)"/><text x="680.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.22%)</title><rect x="677" y="1508" width="2" height="15" fill="rgb(237,78,51)"/><text x="680.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.22%)</title><rect x="677" y="1524" width="2" height="15" fill="rgb(243,70,51)"/><text x="680.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.22%)</title><rect x="677" y="1540" width="2" height="15" fill="rgb(242,10,2)"/><text x="680.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.22%)</title><rect x="677" y="1556" width="2" height="15" fill="rgb(234,133,39)"/><text x="680.00" y="1566.50"></text></g><g><title>_compile (sre_compile.py:76) (1 samples, 0.22%)</title><rect x="677" y="1572" width="2" height="15" fill="rgb(205,176,28)"/><text x="680.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:4) (21 samples, 4.52%)</title><rect x="629" y="52" width="53" height="15" fill="rgb(218,113,43)"/><text x="632.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 4.52%)</title><rect x="629" y="68" width="53" height="15" fill="rgb(222,167,44)"/><text x="632.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 4.52%)</title><rect x="629" y="84" width="53" height="15" fill="rgb(250,40,12)"/><text x="632.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 4.52%)</title><rect x="629" y="100" width="53" height="15" fill="rgb(235,121,35)"/><text x="632.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 4.52%)</title><rect x="629" y="116" width="53" height="15" fill="rgb(254,13,7)"/><text x="632.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 4.52%)</title><rect x="629" y="132" width="53" height="15" fill="rgb(221,114,10)"/><text x="632.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (7 samples, 1.51%)</title><rect x="664" y="148" width="18" height="15" fill="rgb(233,208,27)"/><text x="667.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.51%)</title><rect x="664" y="164" width="18" height="15" fill="rgb(215,37,10)"/><text x="667.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.51%)</title><rect x="664" y="180" width="18" height="15" fill="rgb(215,109,31)"/><text x="667.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.51%)</title><rect x="664" y="196" width="18" height="15" fill="rgb(241,160,40)"/><text x="667.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.51%)</title><rect x="664" y="212" width="18" height="15" fill="rgb(226,111,0)"/><text x="667.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.51%)</title><rect x="664" y="228" width="18" height="15" fill="rgb(231,116,52)"/><text x="667.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.29%)</title><rect x="667" y="244" width="15" height="15" fill="rgb(241,84,18)"/><text x="670.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="667" y="260" width="15" height="15" fill="rgb(223,22,43)"/><text x="670.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="667" y="276" width="15" height="15" fill="rgb(226,23,49)"/><text x="670.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="667" y="292" width="15" height="15" fill="rgb(212,20,27)"/><text x="670.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="667" y="308" width="15" height="15" fill="rgb(246,35,13)"/><text x="670.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="667" y="324" width="15" height="15" fill="rgb(213,228,25)"/><text x="670.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.29%)</title><rect x="667" y="340" width="15" height="15" fill="rgb(245,143,16)"/><text x="670.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.29%)</title><rect x="667" y="356" width="15" height="15" fill="rgb(224,67,32)"/><text x="670.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.29%)</title><rect x="667" y="372" width="15" height="15" fill="rgb(205,80,16)"/><text x="670.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.29%)</title><rect x="667" y="388" width="15" height="15" fill="rgb(213,49,30)"/><text x="670.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.29%)</title><rect x="667" y="404" width="15" height="15" fill="rgb(237,88,1)"/><text x="670.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.29%)</title><rect x="667" y="420" width="15" height="15" fill="rgb(234,107,51)"/><text x="670.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.08%)</title><rect x="669" y="436" width="13" height="15" fill="rgb(225,90,42)"/><text x="672.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="452" width="13" height="15" fill="rgb(206,228,6)"/><text x="672.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.08%)</title><rect x="669" y="468" width="13" height="15" fill="rgb(206,185,13)"/><text x="672.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="484" width="13" height="15" fill="rgb(219,141,34)"/><text x="672.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="500" width="13" height="15" fill="rgb(212,175,36)"/><text x="672.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="516" width="13" height="15" fill="rgb(252,15,36)"/><text x="672.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="532" width="13" height="15" fill="rgb(240,184,20)"/><text x="672.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="548" width="13" height="15" fill="rgb(214,44,46)"/><text x="672.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="564" width="13" height="15" fill="rgb(216,224,17)"/><text x="672.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.08%)</title><rect x="669" y="580" width="13" height="15" fill="rgb(231,69,46)"/><text x="672.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="596" width="13" height="15" fill="rgb(240,166,5)"/><text x="672.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="612" width="13" height="15" fill="rgb(218,140,21)"/><text x="672.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="628" width="13" height="15" fill="rgb(253,58,15)"/><text x="672.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="644" width="13" height="15" fill="rgb(251,101,32)"/><text x="672.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="660" width="13" height="15" fill="rgb(236,226,19)"/><text x="672.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.08%)</title><rect x="669" y="676" width="13" height="15" fill="rgb(253,136,36)"/><text x="672.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="692" width="13" height="15" fill="rgb(243,91,32)"/><text x="672.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="708" width="13" height="15" fill="rgb(225,221,4)"/><text x="672.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="724" width="13" height="15" fill="rgb(243,90,47)"/><text x="672.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="740" width="13" height="15" fill="rgb(234,47,47)"/><text x="672.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="756" width="13" height="15" fill="rgb(207,127,6)"/><text x="672.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.08%)</title><rect x="669" y="772" width="13" height="15" fill="rgb(254,229,37)"/><text x="672.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="788" width="13" height="15" fill="rgb(209,132,10)"/><text x="672.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="804" width="13" height="15" fill="rgb(251,72,43)"/><text x="672.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="820" width="13" height="15" fill="rgb(228,170,48)"/><text x="672.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="836" width="13" height="15" fill="rgb(250,100,18)"/><text x="672.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="852" width="13" height="15" fill="rgb(253,100,42)"/><text x="672.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.08%)</title><rect x="669" y="868" width="13" height="15" fill="rgb(211,210,9)"/><text x="672.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="884" width="13" height="15" fill="rgb(220,27,23)"/><text x="672.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.08%)</title><rect x="669" y="900" width="13" height="15" fill="rgb(217,199,25)"/><text x="672.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="916" width="13" height="15" fill="rgb(220,181,20)"/><text x="672.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="932" width="13" height="15" fill="rgb(225,182,36)"/><text x="672.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="948" width="13" height="15" fill="rgb(237,134,11)"/><text x="672.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="964" width="13" height="15" fill="rgb(238,42,49)"/><text x="672.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="980" width="13" height="15" fill="rgb(235,152,14)"/><text x="672.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="996" width="13" height="15" fill="rgb(244,3,6)"/><text x="672.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.08%)</title><rect x="669" y="1012" width="13" height="15" fill="rgb(212,64,9)"/><text x="672.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.08%)</title><rect x="669" y="1028" width="13" height="15" fill="rgb(215,7,43)"/><text x="672.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.08%)</title><rect x="669" y="1044" width="13" height="15" fill="rgb(225,2,36)"/><text x="672.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.08%)</title><rect x="669" y="1060" width="13" height="15" fill="rgb(253,46,12)"/><text x="672.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.08%)</title><rect x="669" y="1076" width="13" height="15" fill="rgb(249,206,16)"/><text x="672.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.08%)</title><rect x="669" y="1092" width="13" height="15" fill="rgb(246,189,47)"/><text x="672.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.22%)</title><rect x="679" y="1108" width="3" height="15" fill="rgb(215,0,16)"/><text x="682.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="679" y="1124" width="3" height="15" fill="rgb(206,38,50)"/><text x="682.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="679" y="1140" width="3" height="15" fill="rgb(214,26,0)"/><text x="682.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="679" y="1156" width="3" height="15" fill="rgb(209,214,37)"/><text x="682.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="679" y="1172" width="3" height="15" fill="rgb(223,12,14)"/><text x="682.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="679" y="1188" width="3" height="15" fill="rgb(246,106,12)"/><text x="682.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="679" y="1204" width="3" height="15" fill="rgb(254,135,42)"/><text x="682.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="679" y="1220" width="3" height="15" fill="rgb(218,67,50)"/><text x="682.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.22%)</title><rect x="679" y="1236" width="3" height="15" fill="rgb(246,8,2)"/><text x="682.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="679" y="1252" width="3" height="15" fill="rgb(207,55,50)"/><text x="682.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="679" y="1268" width="3" height="15" fill="rgb(213,81,36)"/><text x="682.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="679" y="1284" width="3" height="15" fill="rgb(232,3,45)"/><text x="682.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="679" y="1300" width="3" height="15" fill="rgb(234,121,32)"/><text x="682.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="679" y="1316" width="3" height="15" fill="rgb(216,65,36)"/><text x="682.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="679" y="1332" width="3" height="15" fill="rgb(227,7,35)"/><text x="682.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="679" y="1348" width="3" height="15" fill="rgb(225,94,1)"/><text x="682.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.22%)</title><rect x="679" y="1364" width="3" height="15" fill="rgb(252,205,22)"/><text x="682.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="679" y="1380" width="3" height="15" fill="rgb(240,68,8)"/><text x="682.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="679" y="1396" width="3" height="15" fill="rgb(220,79,20)"/><text x="682.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="679" y="1412" width="3" height="15" fill="rgb(246,97,38)"/><text x="682.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="679" y="1428" width="3" height="15" fill="rgb(253,127,52)"/><text x="682.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="679" y="1444" width="3" height="15" fill="rgb(212,143,10)"/><text x="682.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.22%)</title><rect x="679" y="1460" width="3" height="15" fill="rgb(253,149,49)"/><text x="682.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.22%)</title><rect x="679" y="1476" width="3" height="15" fill="rgb(225,96,20)"/><text x="682.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.22%)</title><rect x="679" y="1492" width="3" height="15" fill="rgb(221,1,31)"/><text x="682.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.22%)</title><rect x="679" y="1508" width="3" height="15" fill="rgb(237,164,5)"/><text x="682.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.22%)</title><rect x="679" y="1524" width="3" height="15" fill="rgb(242,186,42)"/><text x="682.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.22%)</title><rect x="679" y="1540" width="3" height="15" fill="rgb(211,69,46)"/><text x="682.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="679" y="1556" width="3" height="15" fill="rgb(221,105,3)"/><text x="682.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.22%)</title><rect x="679" y="1572" width="3" height="15" fill="rgb(226,52,2)"/><text x="682.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.22%)</title><rect x="679" y="1588" width="3" height="15" fill="rgb(217,53,32)"/><text x="682.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.22%)</title><rect x="679" y="1604" width="3" height="15" fill="rgb(211,87,30)"/><text x="682.00" y="1614.50"></text></g><g><title>0x7f053491194d (?) (1 samples, 0.22%)</title><rect x="679" y="1620" width="3" height="15" fill="rgb(237,224,50)"/><text x="682.00" y="1630.50"></text></g><g><title>0x7f05349d26bb (?) (1 samples, 0.22%)</title><rect x="679" y="1636" width="3" height="15" fill="rgb(217,63,40)"/><text x="682.00" y="1646.50"></text></g><g><title>0x7f05349d1de2 (?) (1 samples, 0.22%)</title><rect x="679" y="1652" width="3" height="15" fill="rgb(249,53,3)"/><text x="682.00" y="1662.50"></text></g><g><title>0x7f05349d6f27 (?) (1 samples, 0.22%)</title><rect x="679" y="1668" width="3" height="15" fill="rgb(234,166,42)"/><text x="682.00" y="1678.50"></text></g><g><title>0x7f053492fe26 (?) (1 samples, 0.22%)</title><rect x="679" y="1684" width="3" height="15" fill="rgb(219,47,13)"/><text x="682.00" y="1694.50"></text></g><g><title>std::string::_M_replace_safe (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="679" y="1700" width="3" height="15" fill="rgb(241,177,43)"/><text x="682.00" y="1710.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (1 samples, 0.22%)</title><rect x="682" y="84" width="3" height="15" fill="rgb(244,39,24)"/><text x="685.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.22%)</title><rect x="682" y="100" width="3" height="15" fill="rgb(207,96,42)"/><text x="685.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.22%)</title><rect x="682" y="116" width="3" height="15" fill="rgb(218,131,6)"/><text x="685.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.22%)</title><rect x="682" y="132" width="3" height="15" fill="rgb(248,42,11)"/><text x="685.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.22%)</title><rect x="682" y="148" width="3" height="15" fill="rgb(237,95,23)"/><text x="685.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.22%)</title><rect x="682" y="164" width="3" height="15" fill="rgb(209,165,30)"/><text x="685.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.22%)</title><rect x="682" y="180" width="3" height="15" fill="rgb(209,178,7)"/><text x="685.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.22%)</title><rect x="682" y="196" width="3" height="15" fill="rgb(245,136,17)"/><text x="685.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="682" y="212" width="3" height="15" fill="rgb(222,105,10)"/><text x="685.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="682" y="228" width="3" height="15" fill="rgb(247,219,4)"/><text x="685.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="682" y="244" width="3" height="15" fill="rgb(223,71,17)"/><text x="685.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="682" y="260" width="3" height="15" fill="rgb(217,213,32)"/><text x="685.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="682" y="276" width="3" height="15" fill="rgb(240,7,1)"/><text x="685.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.22%)</title><rect x="682" y="292" width="3" height="15" fill="rgb(207,114,46)"/><text x="685.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="682" y="308" width="3" height="15" fill="rgb(239,53,52)"/><text x="685.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="682" y="324" width="3" height="15" fill="rgb(230,120,12)"/><text x="685.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="682" y="340" width="3" height="15" fill="rgb(254,140,3)"/><text x="685.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="682" y="356" width="3" height="15" fill="rgb(214,13,12)"/><text x="685.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="682" y="372" width="3" height="15" fill="rgb(245,51,35)"/><text x="685.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:56) (1 samples, 0.22%)</title><rect x="682" y="388" width="3" height="15" fill="rgb(252,34,28)"/><text x="685.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="682" y="404" width="3" height="15" fill="rgb(207,94,3)"/><text x="685.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="682" y="420" width="3" height="15" fill="rgb(253,189,44)"/><text x="685.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="682" y="436" width="3" height="15" fill="rgb(220,45,53)"/><text x="685.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="682" y="452" width="3" height="15" fill="rgb(239,12,1)"/><text x="685.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.22%)</title><rect x="682" y="468" width="3" height="15" fill="rgb(218,43,6)"/><text x="685.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.22%)</title><rect x="682" y="484" width="3" height="15" fill="rgb(225,120,23)"/><text x="685.00" y="494.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="682" y="500" width="3" height="15" fill="rgb(227,155,49)"/><text x="685.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 1.51%)</title><rect x="690" y="180" width="17" height="15" fill="rgb(217,68,53)"/><text x="693.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.22%)</title><rect x="705" y="196" width="2" height="15" fill="rgb(221,140,30)"/><text x="708.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.22%)</title><rect x="710" y="196" width="2" height="15" fill="rgb(218,122,16)"/><text x="713.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.43%)</title><rect x="715" y="228" width="5" height="15" fill="rgb(254,61,26)"/><text x="718.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="718" y="244" width="2" height="15" fill="rgb(237,181,29)"/><text x="721.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(238,7,22)"/><text x="721.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.22%)</title><rect x="718" y="276" width="2" height="15" fill="rgb(239,5,32)"/><text x="721.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.22%)</title><rect x="720" y="308" width="3" height="15" fill="rgb(247,0,13)"/><text x="723.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="720" y="324" width="3" height="15" fill="rgb(214,44,15)"/><text x="723.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="720" y="340" width="3" height="15" fill="rgb(222,78,42)"/><text x="723.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="720" y="356" width="3" height="15" fill="rgb(206,41,51)"/><text x="723.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="720" y="372" width="3" height="15" fill="rgb(210,68,14)"/><text x="723.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="720" y="388" width="3" height="15" fill="rgb(234,60,10)"/><text x="723.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (5 samples, 1.08%)</title><rect x="712" y="196" width="13" height="15" fill="rgb(254,185,14)"/><text x="715.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (4 samples, 0.86%)</title><rect x="715" y="212" width="10" height="15" fill="rgb(249,83,46)"/><text x="718.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (2 samples, 0.43%)</title><rect x="720" y="228" width="5" height="15" fill="rgb(211,115,25)"/><text x="723.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.43%)</title><rect x="720" y="244" width="5" height="15" fill="rgb(225,91,16)"/><text x="723.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.43%)</title><rect x="720" y="260" width="5" height="15" fill="rgb(234,215,0)"/><text x="723.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.43%)</title><rect x="720" y="276" width="5" height="15" fill="rgb(254,22,42)"/><text x="723.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.43%)</title><rect x="720" y="292" width="5" height="15" fill="rgb(213,207,36)"/><text x="723.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.22%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(217,176,20)"/><text x="726.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.22%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(234,35,22)"/><text x="726.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.22%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(243,185,37)"/><text x="726.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="723" y="356" width="2" height="15" fill="rgb(214,220,54)"/><text x="726.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="723" y="372" width="2" height="15" fill="rgb(242,109,54)"/><text x="726.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="723" y="388" width="2" height="15" fill="rgb(227,2,45)"/><text x="726.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="723" y="404" width="2" height="15" fill="rgb(254,23,4)"/><text x="726.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="723" y="420" width="2" height="15" fill="rgb(243,20,16)"/><text x="726.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="723" y="436" width="2" height="15" fill="rgb(227,68,22)"/><text x="726.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="723" y="452" width="2" height="15" fill="rgb(236,25,10)"/><text x="726.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="723" y="468" width="2" height="15" fill="rgb(213,17,45)"/><text x="726.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="723" y="484" width="2" height="15" fill="rgb(244,177,15)"/><text x="726.00" y="494.50"></text></g><g><title>0x7f050711c422 (?) (1 samples, 0.22%)</title><rect x="725" y="244" width="3" height="15" fill="rgb(253,129,7)"/><text x="728.00" y="254.50"></text></g><g><title>0x7f050712289e (?) (1 samples, 0.22%)</title><rect x="725" y="260" width="3" height="15" fill="rgb(221,103,23)"/><text x="728.00" y="270.50"></text></g><g><title>0x7f050712274f (?) (1 samples, 0.22%)</title><rect x="725" y="276" width="3" height="15" fill="rgb(207,42,12)"/><text x="728.00" y="286.50"></text></g><g><title>0x7f0507128a3a (?) (1 samples, 0.22%)</title><rect x="725" y="292" width="3" height="15" fill="rgb(212,210,5)"/><text x="728.00" y="302.50"></text></g><g><title>0x7f0510584ab9 (?) (1 samples, 0.22%)</title><rect x="725" y="308" width="3" height="15" fill="rgb(205,89,0)"/><text x="728.00" y="318.50"></text></g><g><title>0x7f0510585eab (?) (1 samples, 0.22%)</title><rect x="725" y="324" width="3" height="15" fill="rgb(207,167,4)"/><text x="728.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.43%)</title><rect x="725" y="196" width="5" height="15" fill="rgb(246,190,52)"/><text x="728.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.43%)</title><rect x="725" y="212" width="5" height="15" fill="rgb(246,80,52)"/><text x="728.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (2 samples, 0.43%)</title><rect x="725" y="228" width="5" height="15" fill="rgb(238,68,1)"/><text x="728.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (1 samples, 0.22%)</title><rect x="728" y="244" width="2" height="15" fill="rgb(249,116,16)"/><text x="731.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (1 samples, 0.22%)</title><rect x="728" y="260" width="2" height="15" fill="rgb(210,9,29)"/><text x="731.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (1 samples, 0.22%)</title><rect x="728" y="276" width="2" height="15" fill="rgb(244,186,14)"/><text x="731.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (1 samples, 0.22%)</title><rect x="728" y="292" width="2" height="15" fill="rgb(214,199,38)"/><text x="731.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (1 samples, 0.22%)</title><rect x="728" y="308" width="2" height="15" fill="rgb(240,125,6)"/><text x="731.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (1 samples, 0.22%)</title><rect x="728" y="324" width="2" height="15" fill="rgb(232,195,14)"/><text x="731.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.22%)</title><rect x="728" y="340" width="2" height="15" fill="rgb(248,65,18)"/><text x="731.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.22%)</title><rect x="728" y="356" width="2" height="15" fill="rgb(231,69,10)"/><text x="731.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.22%)</title><rect x="728" y="372" width="2" height="15" fill="rgb(237,130,0)"/><text x="731.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.22%)</title><rect x="728" y="388" width="2" height="15" fill="rgb(241,163,4)"/><text x="731.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.22%)</title><rect x="728" y="404" width="2" height="15" fill="rgb(242,135,36)"/><text x="731.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (1 samples, 0.22%)</title><rect x="728" y="420" width="2" height="15" fill="rgb(223,7,43)"/><text x="731.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (1 samples, 0.22%)</title><rect x="728" y="436" width="2" height="15" fill="rgb(245,8,24)"/><text x="731.00" y="446.50"></text></g><g><title>0x7f0510584ab9 (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="728" y="452" width="2" height="15" fill="rgb(220,113,48)"/><text x="731.00" y="462.50"></text></g><g><title>0x7f0510585ea9 (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="728" y="468" width="2" height="15" fill="rgb(249,72,28)"/><text x="731.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.22%)</title><rect x="730" y="212" width="3" height="15" fill="rgb(251,214,47)"/><text x="733.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="735" y="244" width="3" height="15" fill="rgb(238,199,41)"/><text x="738.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="735" y="260" width="3" height="15" fill="rgb(218,32,28)"/><text x="738.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.22%)</title><rect x="735" y="276" width="3" height="15" fill="rgb(211,80,39)"/><text x="738.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.22%)</title><rect x="735" y="292" width="3" height="15" fill="rgb(254,147,27)"/><text x="738.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4720) (1 samples, 0.22%)</title><rect x="738" y="244" width="2" height="15" fill="rgb(219,1,16)"/><text x="741.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="740" y="260" width="3" height="15" fill="rgb(211,77,14)"/><text x="743.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.22%)</title><rect x="740" y="276" width="3" height="15" fill="rgb(209,58,0)"/><text x="743.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.22%)</title><rect x="743" y="308" width="2" height="15" fill="rgb(209,227,22)"/><text x="746.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2296) (1 samples, 0.22%)</title><rect x="743" y="324" width="2" height="15" fill="rgb(246,49,0)"/><text x="746.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.43%)</title><rect x="743" y="292" width="5" height="15" fill="rgb(218,130,6)"/><text x="746.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="745" y="308" width="3" height="15" fill="rgb(208,25,19)"/><text x="748.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.22%)</title><rect x="745" y="324" width="3" height="15" fill="rgb(227,193,3)"/><text x="748.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.22%)</title><rect x="748" y="308" width="2" height="15" fill="rgb(253,176,7)"/><text x="751.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.22%)</title><rect x="748" y="324" width="2" height="15" fill="rgb(214,132,28)"/><text x="751.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="748" y="340" width="2" height="15" fill="rgb(230,52,18)"/><text x="751.00" y="350.50"></text></g><g><title>0x7f05465bfd67 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="748" y="356" width="2" height="15" fill="rgb(222,61,53)"/><text x="751.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (7 samples, 1.51%)</title><rect x="735" y="228" width="18" height="15" fill="rgb(243,172,31)"/><text x="738.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="740" y="244" width="13" height="15" fill="rgb(235,27,53)"/><text x="743.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.86%)</title><rect x="743" y="260" width="10" height="15" fill="rgb(230,139,35)"/><text x="746.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.86%)</title><rect x="743" y="276" width="10" height="15" fill="rgb(225,70,24)"/><text x="746.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.43%)</title><rect x="748" y="292" width="5" height="15" fill="rgb(222,81,42)"/><text x="751.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="750" y="308" width="3" height="15" fill="rgb(214,209,5)"/><text x="753.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2046) (1 samples, 0.22%)</title><rect x="750" y="324" width="3" height="15" fill="rgb(254,76,40)"/><text x="753.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="753" y="292" width="3" height="15" fill="rgb(238,8,34)"/><text x="756.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="753" y="308" width="3" height="15" fill="rgb(219,88,3)"/><text x="756.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.22%)</title><rect x="753" y="324" width="3" height="15" fill="rgb(252,190,28)"/><text x="756.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.22%)</title><rect x="753" y="340" width="3" height="15" fill="rgb(219,147,29)"/><text x="756.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(209,188,37)"/><text x="756.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.22%)</title><rect x="753" y="372" width="3" height="15" fill="rgb(236,6,31)"/><text x="756.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.22%)</title><rect x="756" y="292" width="2" height="15" fill="rgb(243,161,51)"/><text x="759.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1374) (1 samples, 0.22%)</title><rect x="756" y="308" width="2" height="15" fill="rgb(220,39,26)"/><text x="759.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (12 samples, 2.58%)</title><rect x="730" y="196" width="31" height="15" fill="rgb(224,219,3)"/><text x="733.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (11 samples, 2.37%)</title><rect x="733" y="212" width="28" height="15" fill="rgb(206,106,28)"/><text x="736.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.65%)</title><rect x="753" y="228" width="8" height="15" fill="rgb(232,61,34)"/><text x="756.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="753" y="244" width="8" height="15" fill="rgb(230,142,29)"/><text x="756.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.65%)</title><rect x="753" y="260" width="8" height="15" fill="rgb(221,227,0)"/><text x="756.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.65%)</title><rect x="753" y="276" width="8" height="15" fill="rgb(235,121,15)"/><text x="756.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.22%)</title><rect x="758" y="292" width="3" height="15" fill="rgb(232,79,44)"/><text x="761.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.22%)</title><rect x="758" y="308" width="3" height="15" fill="rgb(212,146,46)"/><text x="761.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:246) (1 samples, 0.22%)</title><rect x="758" y="324" width="3" height="15" fill="rgb(221,111,7)"/><text x="761.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_subtract_FLOAT (simd.inc.src:778) (1 samples, 0.22%)</title><rect x="758" y="340" width="3" height="15" fill="rgb(243,201,7)"/><text x="761.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.22%)</title><rect x="761" y="212" width="2" height="15" fill="rgb(244,158,39)"/><text x="764.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.22%)</title><rect x="771" y="324" width="2" height="15" fill="rgb(220,119,27)"/><text x="774.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.22%)</title><rect x="771" y="340" width="2" height="15" fill="rgb(225,122,18)"/><text x="774.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.22%)</title><rect x="773" y="324" width="3" height="15" fill="rgb(251,192,35)"/><text x="776.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.22%)</title><rect x="773" y="340" width="3" height="15" fill="rgb(216,176,7)"/><text x="776.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.22%)</title><rect x="776" y="340" width="2" height="15" fill="rgb(246,56,15)"/><text x="779.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="778" y="388" width="3" height="15" fill="rgb(254,73,6)"/><text x="781.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.65%)</title><rect x="776" y="324" width="7" height="15" fill="rgb(218,7,8)"/><text x="779.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.43%)</title><rect x="778" y="340" width="5" height="15" fill="rgb(246,35,45)"/><text x="781.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.43%)</title><rect x="778" y="356" width="5" height="15" fill="rgb(221,113,43)"/><text x="781.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.43%)</title><rect x="778" y="372" width="5" height="15" fill="rgb(207,19,32)"/><text x="781.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.22%)</title><rect x="781" y="388" width="2" height="15" fill="rgb(241,174,5)"/><text x="784.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.22%)</title><rect x="781" y="404" width="2" height="15" fill="rgb(247,44,5)"/><text x="784.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.22%)</title><rect x="781" y="420" width="2" height="15" fill="rgb(223,224,14)"/><text x="784.00" y="430.50"></text></g><g><title>0x7f05465d4e66 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="781" y="436" width="2" height="15" fill="rgb(213,173,46)"/><text x="784.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="791" y="356" width="3" height="15" fill="rgb(205,206,3)"/><text x="794.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="791" y="372" width="3" height="15" fill="rgb(226,133,43)"/><text x="794.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.22%)</title><rect x="791" y="388" width="3" height="15" fill="rgb(234,83,47)"/><text x="794.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.22%)</title><rect x="791" y="404" width="3" height="15" fill="rgb(224,24,37)"/><text x="794.00" y="414.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="791" y="420" width="3" height="15" fill="rgb(244,151,27)"/><text x="794.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="794" y="404" width="2" height="15" fill="rgb(222,150,28)"/><text x="797.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="794" y="420" width="2" height="15" fill="rgb(254,128,29)"/><text x="797.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3165) (1 samples, 0.22%)</title><rect x="794" y="436" width="2" height="15" fill="rgb(232,121,25)"/><text x="797.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="796" y="404" width="3" height="15" fill="rgb(218,1,30)"/><text x="799.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="796" y="420" width="3" height="15" fill="rgb(228,80,44)"/><text x="799.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.22%)</title><rect x="796" y="436" width="3" height="15" fill="rgb(236,127,45)"/><text x="799.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:992) (1 samples, 0.22%)</title><rect x="796" y="452" width="3" height="15" fill="rgb(208,92,30)"/><text x="799.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (37 samples, 7.96%)</title><rect x="707" y="180" width="94" height="15" fill="rgb(247,20,39)"/><text x="710.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (16 samples, 3.44%)</title><rect x="761" y="196" width="40" height="15" fill="rgb(238,149,8)"/><text x="764.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (15 samples, 3.23%)</title><rect x="763" y="212" width="38" height="15" fill="rgb(238,158,1)"/><text x="766.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (14 samples, 3.01%)</title><rect x="766" y="228" width="35" height="15" fill="rgb(235,32,5)"/><text x="769.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 3.01%)</title><rect x="766" y="244" width="35" height="15" fill="rgb(210,130,19)"/><text x="769.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (14 samples, 3.01%)</title><rect x="766" y="260" width="35" height="15" fill="rgb(227,191,49)"/><text x="769.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 3.01%)</title><rect x="766" y="276" width="35" height="15" fill="rgb(239,156,41)"/><text x="769.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (13 samples, 2.80%)</title><rect x="768" y="292" width="33" height="15" fill="rgb(225,225,29)"/><text x="771.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.80%)</title><rect x="768" y="308" width="33" height="15" fill="rgb(239,61,7)"/><text x="771.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (7 samples, 1.51%)</title><rect x="783" y="324" width="18" height="15" fill="rgb(233,178,35)"/><text x="786.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.86%)</title><rect x="791" y="340" width="10" height="15" fill="rgb(229,184,21)"/><text x="794.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.65%)</title><rect x="794" y="356" width="7" height="15" fill="rgb(208,227,31)"/><text x="797.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.65%)</title><rect x="794" y="372" width="7" height="15" fill="rgb(208,120,17)"/><text x="797.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.65%)</title><rect x="794" y="388" width="7" height="15" fill="rgb(213,90,17)"/><text x="797.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.22%)</title><rect x="799" y="404" width="2" height="15" fill="rgb(244,184,10)"/><text x="802.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.22%)</title><rect x="799" y="420" width="2" height="15" fill="rgb(223,132,1)"/><text x="802.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.22%)</title><rect x="801" y="180" width="3" height="15" fill="rgb(225,226,40)"/><text x="804.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.43%)</title><rect x="804" y="180" width="5" height="15" fill="rgb(238,146,11)"/><text x="807.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (52 samples, 11.18%)</title><rect x="685" y="100" width="131" height="15" fill="rgb(206,209,7)"/><text x="688.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 11.18%)</title><rect x="685" y="116" width="131" height="15" fill="rgb(229,107,30)"/><text x="688.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (52 samples, 11.18%)</title><rect x="685" y="132" width="131" height="15" fill="rgb(233,80,18)"/><text x="688.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (52 samples, 11.18%)</title><rect x="685" y="148" width="131" height="15" fill="rgb(246,71,9)"/><text x="688.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (52 samples, 11.18%)</title><rect x="685" y="164" width="131" height="15" fill="rgb(243,229,14)"/><text x="688.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.65%)</title><rect x="809" y="180" width="7" height="15" fill="rgb(228,20,47)"/><text x="812.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.22%)</title><rect x="816" y="164" width="3" height="15" fill="rgb(229,59,5)"/><text x="819.00" y="174.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="816" y="180" width="3" height="15" fill="rgb(237,23,49)"/><text x="819.00" y="190.50"></text></g><g><title>0x7f05465c0028 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="816" y="196" width="3" height="15" fill="rgb(232,209,24)"/><text x="819.00" y="206.50"></text></g><g><title>0x7f05465bdbc6 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="816" y="212" width="3" height="15" fill="rgb(220,102,19)"/><text x="819.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.22%)</title><rect x="819" y="164" width="3" height="15" fill="rgb(208,53,1)"/><text x="822.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (13 samples, 2.80%)</title><rect x="837" y="180" width="33" height="15" fill="rgb(236,177,20)"/><text x="840.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.43%)</title><rect x="865" y="196" width="5" height="15" fill="rgb(224,171,22)"/><text x="868.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.22%)</title><rect x="880" y="228" width="2" height="15" fill="rgb(244,180,43)"/><text x="883.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:51) (1 samples, 0.22%)</title><rect x="880" y="244" width="2" height="15" fill="rgb(252,203,21)"/><text x="883.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (4 samples, 0.86%)</title><rect x="877" y="212" width="11" height="15" fill="rgb(211,8,37)"/><text x="880.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.43%)</title><rect x="882" y="228" width="6" height="15" fill="rgb(239,170,22)"/><text x="885.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.43%)</title><rect x="882" y="244" width="6" height="15" fill="rgb(240,69,21)"/><text x="885.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (2 samples, 0.43%)</title><rect x="882" y="260" width="6" height="15" fill="rgb(231,3,39)"/><text x="885.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:141) (1 samples, 0.22%)</title><rect x="885" y="276" width="3" height="15" fill="rgb(240,113,21)"/><text x="888.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.22%)</title><rect x="888" y="260" width="2" height="15" fill="rgb(239,124,39)"/><text x="891.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.29%)</title><rect x="877" y="196" width="16" height="15" fill="rgb(251,176,42)"/><text x="880.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.43%)</title><rect x="888" y="212" width="5" height="15" fill="rgb(243,167,34)"/><text x="891.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.43%)</title><rect x="888" y="228" width="5" height="15" fill="rgb(248,26,21)"/><text x="891.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="888" y="244" width="5" height="15" fill="rgb(247,41,4)"/><text x="891.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(214,151,11)"/><text x="893.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="890" y="276" width="3" height="15" fill="rgb(230,88,23)"/><text x="893.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.22%)</title><rect x="890" y="292" width="3" height="15" fill="rgb(214,92,54)"/><text x="893.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.22%)</title><rect x="893" y="196" width="2" height="15" fill="rgb(223,17,0)"/><text x="896.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.22%)</title><rect x="893" y="212" width="2" height="15" fill="rgb(247,54,47)"/><text x="896.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.22%)</title><rect x="893" y="228" width="2" height="15" fill="rgb(251,171,7)"/><text x="896.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.22%)</title><rect x="893" y="244" width="2" height="15" fill="rgb(235,204,18)"/><text x="896.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.22%)</title><rect x="893" y="260" width="2" height="15" fill="rgb(242,72,12)"/><text x="896.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.22%)</title><rect x="893" y="276" width="2" height="15" fill="rgb(213,64,19)"/><text x="896.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.22%)</title><rect x="893" y="292" width="2" height="15" fill="rgb(251,60,28)"/><text x="896.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="893" y="308" width="2" height="15" fill="rgb(209,152,9)"/><text x="896.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.22%)</title><rect x="893" y="324" width="2" height="15" fill="rgb(236,165,18)"/><text x="896.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="893" y="340" width="2" height="15" fill="rgb(233,17,36)"/><text x="896.00" y="350.50"></text></g><g><title>0x7f05465ded50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="893" y="356" width="2" height="15" fill="rgb(253,83,47)"/><text x="896.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.22%)</title><rect x="898" y="228" width="2" height="15" fill="rgb(223,154,43)"/><text x="901.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="898" y="244" width="2" height="15" fill="rgb(225,36,1)"/><text x="901.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="898" y="260" width="2" height="15" fill="rgb(219,76,36)"/><text x="901.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.22%)</title><rect x="898" y="276" width="2" height="15" fill="rgb(206,156,27)"/><text x="901.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.22%)</title><rect x="898" y="292" width="2" height="15" fill="rgb(247,129,4)"/><text x="901.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.43%)</title><rect x="900" y="228" width="5" height="15" fill="rgb(221,32,50)"/><text x="903.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="903" y="244" width="2" height="15" fill="rgb(216,208,43)"/><text x="906.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="903" y="260" width="2" height="15" fill="rgb(246,197,30)"/><text x="906.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.22%)</title><rect x="903" y="276" width="2" height="15" fill="rgb(218,148,43)"/><text x="906.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.22%)</title><rect x="903" y="292" width="2" height="15" fill="rgb(222,213,19)"/><text x="906.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.22%)</title><rect x="913" y="292" width="2" height="15" fill="rgb(249,20,39)"/><text x="916.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.22%)</title><rect x="918" y="308" width="3" height="15" fill="rgb(246,155,26)"/><text x="921.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="918" y="324" width="3" height="15" fill="rgb(240,121,24)"/><text x="921.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="918" y="340" width="3" height="15" fill="rgb(210,122,7)"/><text x="921.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="918" y="356" width="3" height="15" fill="rgb(219,64,37)"/><text x="921.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="918" y="372" width="3" height="15" fill="rgb(215,206,43)"/><text x="921.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="918" y="388" width="3" height="15" fill="rgb(214,25,52)"/><text x="921.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.22%)</title><rect x="921" y="324" width="2" height="15" fill="rgb(239,157,10)"/><text x="924.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="921" y="340" width="2" height="15" fill="rgb(254,11,1)"/><text x="924.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:444) (1 samples, 0.22%)</title><rect x="923" y="356" width="3" height="15" fill="rgb(247,222,2)"/><text x="926.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="926" y="356" width="2" height="15" fill="rgb(216,72,9)"/><text x="929.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="926" y="372" width="2" height="15" fill="rgb(237,100,50)"/><text x="929.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="926" y="388" width="2" height="15" fill="rgb(247,107,0)"/><text x="929.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="926" y="404" width="2" height="15" fill="rgb(237,112,10)"/><text x="929.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="926" y="420" width="2" height="15" fill="rgb(218,106,45)"/><text x="929.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="926" y="436" width="2" height="15" fill="rgb(217,212,37)"/><text x="929.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.22%)</title><rect x="926" y="452" width="2" height="15" fill="rgb(236,152,6)"/><text x="929.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.22%)</title><rect x="928" y="356" width="3" height="15" fill="rgb(205,193,44)"/><text x="931.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.22%)</title><rect x="928" y="372" width="3" height="15" fill="rgb(213,48,36)"/><text x="931.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.22%)</title><rect x="928" y="388" width="3" height="15" fill="rgb(252,172,0)"/><text x="931.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.22%)</title><rect x="928" y="404" width="3" height="15" fill="rgb(235,17,27)"/><text x="931.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.22%)</title><rect x="928" y="420" width="3" height="15" fill="rgb(208,65,35)"/><text x="931.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (15 samples, 3.23%)</title><rect x="895" y="196" width="38" height="15" fill="rgb(235,210,0)"/><text x="898.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (15 samples, 3.23%)</title><rect x="895" y="212" width="38" height="15" fill="rgb(231,136,6)"/><text x="898.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (11 samples, 2.37%)</title><rect x="905" y="228" width="28" height="15" fill="rgb(207,38,13)"/><text x="908.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (9 samples, 1.94%)</title><rect x="910" y="244" width="23" height="15" fill="rgb(225,135,49)"/><text x="913.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.94%)</title><rect x="910" y="260" width="23" height="15" fill="rgb(249,225,29)"/><text x="913.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 1.94%)</title><rect x="910" y="276" width="23" height="15" fill="rgb(249,70,33)"/><text x="913.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 1.51%)</title><rect x="915" y="292" width="18" height="15" fill="rgb(248,168,35)"/><text x="918.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.08%)</title><rect x="921" y="308" width="12" height="15" fill="rgb(207,195,16)"/><text x="924.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.86%)</title><rect x="923" y="324" width="10" height="15" fill="rgb(239,20,45)"/><text x="926.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.86%)</title><rect x="923" y="340" width="10" height="15" fill="rgb(221,96,21)"/><text x="926.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="931" y="356" width="2" height="15" fill="rgb(207,173,45)"/><text x="934.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="931" y="372" width="2" height="15" fill="rgb(219,66,43)"/><text x="934.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1258) (1 samples, 0.22%)</title><rect x="931" y="388" width="2" height="15" fill="rgb(233,206,29)"/><text x="934.00" y="398.50"></text></g><g><title>0x7f0510585ea9 (libgomp.so.1.0.0) (6 samples, 1.29%)</title><rect x="933" y="468" width="15" height="15" fill="rgb(244,126,39)"/><text x="936.00" y="478.50"></text></g><g><title>0x7f0510585eab (libgomp.so.1.0.0) (4 samples, 0.86%)</title><rect x="948" y="468" width="11" height="15" fill="rgb(222,189,11)"/><text x="951.00" y="478.50"></text></g><g><title>0x7f0510584ab9 (libgomp.so.1.0.0) (16 samples, 3.44%)</title><rect x="933" y="452" width="41" height="15" fill="rgb(252,32,26)"/><text x="936.00" y="462.50">0x7..</text></g><g><title>0x7f0510585ead (libgomp.so.1.0.0) (6 samples, 1.29%)</title><rect x="959" y="468" width="15" height="15" fill="rgb(253,103,29)"/><text x="962.00" y="478.50"></text></g><g><title>0x7f0510583a5c (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="974" y="468" width="2" height="15" fill="rgb(220,48,16)"/><text x="977.00" y="478.50"></text></g><g><title>0x7f051057c5b3 (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="974" y="484" width="2" height="15" fill="rgb(234,60,36)"/><text x="977.00" y="494.50"></text></g><g><title>0x7f0510585cfb (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="976" y="484" width="3" height="15" fill="rgb(241,162,30)"/><text x="979.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (19 samples, 4.09%)</title><rect x="933" y="196" width="48" height="15" fill="rgb(213,16,44)"/><text x="936.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (19 samples, 4.09%)</title><rect x="933" y="212" width="48" height="15" fill="rgb(248,99,11)"/><text x="936.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (19 samples, 4.09%)</title><rect x="933" y="228" width="48" height="15" fill="rgb(216,113,33)"/><text x="936.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (19 samples, 4.09%)</title><rect x="933" y="244" width="48" height="15" fill="rgb(210,34,34)"/><text x="936.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (19 samples, 4.09%)</title><rect x="933" y="260" width="48" height="15" fill="rgb(241,197,34)"/><text x="936.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (19 samples, 4.09%)</title><rect x="933" y="276" width="48" height="15" fill="rgb(250,38,48)"/><text x="936.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (19 samples, 4.09%)</title><rect x="933" y="292" width="48" height="15" fill="rgb(243,63,36)"/><text x="936.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (19 samples, 4.09%)</title><rect x="933" y="308" width="48" height="15" fill="rgb(241,167,41)"/><text x="936.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (19 samples, 4.09%)</title><rect x="933" y="324" width="48" height="15" fill="rgb(247,2,20)"/><text x="936.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (19 samples, 4.09%)</title><rect x="933" y="340" width="48" height="15" fill="rgb(254,172,49)"/><text x="936.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (19 samples, 4.09%)</title><rect x="933" y="356" width="48" height="15" fill="rgb(253,7,4)"/><text x="936.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (19 samples, 4.09%)</title><rect x="933" y="372" width="48" height="15" fill="rgb(254,152,30)"/><text x="936.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (19 samples, 4.09%)</title><rect x="933" y="388" width="48" height="15" fill="rgb(210,149,7)"/><text x="936.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (19 samples, 4.09%)</title><rect x="933" y="404" width="48" height="15" fill="rgb(234,96,4)"/><text x="936.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (19 samples, 4.09%)</title><rect x="933" y="420" width="48" height="15" fill="rgb(253,124,34)"/><text x="936.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (19 samples, 4.09%)</title><rect x="933" y="436" width="48" height="15" fill="rgb(205,138,19)"/><text x="936.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.65%)</title><rect x="974" y="452" width="7" height="15" fill="rgb(250,74,37)"/><text x="977.00" y="462.50"></text></g><g><title>0x7f0510583daa (libgomp.so.1.0.0) (2 samples, 0.43%)</title><rect x="976" y="468" width="5" height="15" fill="rgb(222,210,14)"/><text x="979.00" y="478.50"></text></g><g><title>0x7f0510585d6d (libgomp.so.1.0.0) (1 samples, 0.22%)</title><rect x="979" y="484" width="2" height="15" fill="rgb(254,139,38)"/><text x="982.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.22%)</title><rect x="981" y="228" width="3" height="15" fill="rgb(240,60,13)"/><text x="984.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.43%)</title><rect x="992" y="244" width="5" height="15" fill="rgb(214,67,25)"/><text x="995.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.43%)</title><rect x="992" y="260" width="5" height="15" fill="rgb(214,73,12)"/><text x="995.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.43%)</title><rect x="992" y="276" width="5" height="15" fill="rgb(236,199,17)"/><text x="995.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.43%)</title><rect x="992" y="292" width="5" height="15" fill="rgb(220,16,48)"/><text x="995.00" y="302.50"></text></g><g><title>0x7f05465d4e50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="994" y="308" width="3" height="15" fill="rgb(216,199,37)"/><text x="997.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="997" y="260" width="2" height="15" fill="rgb(254,212,30)"/><text x="1000.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="997" y="276" width="2" height="15" fill="rgb(223,2,41)"/><text x="1000.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.22%)</title><rect x="997" y="292" width="2" height="15" fill="rgb(216,7,43)"/><text x="1000.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.22%)</title><rect x="999" y="260" width="3" height="15" fill="rgb(237,162,28)"/><text x="1002.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.22%)</title><rect x="999" y="276" width="3" height="15" fill="rgb(242,177,32)"/><text x="1002.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="1002" y="260" width="2" height="15" fill="rgb(250,209,40)"/><text x="1005.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.22%)</title><rect x="1002" y="276" width="2" height="15" fill="rgb(231,57,41)"/><text x="1005.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="1004" y="276" width="3" height="15" fill="rgb(228,49,5)"/><text x="1007.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.22%)</title><rect x="1004" y="292" width="3" height="15" fill="rgb(218,189,14)"/><text x="1007.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.22%)</title><rect x="1007" y="292" width="2" height="15" fill="rgb(245,226,43)"/><text x="1010.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="1009" y="292" width="3" height="15" fill="rgb(249,208,23)"/><text x="1012.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:505) (1 samples, 0.22%)</title><rect x="1009" y="308" width="3" height="15" fill="rgb(253,190,30)"/><text x="1012.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.22%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(226,149,4)"/><text x="1015.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.43%)</title><rect x="1012" y="292" width="5" height="15" fill="rgb(249,205,27)"/><text x="1015.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.43%)</title><rect x="1012" y="308" width="5" height="15" fill="rgb(216,111,34)"/><text x="1015.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.22%)</title><rect x="1014" y="324" width="3" height="15" fill="rgb(247,226,36)"/><text x="1017.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.29%)</title><rect x="1004" y="260" width="15" height="15" fill="rgb(230,32,1)"/><text x="1007.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.08%)</title><rect x="1007" y="276" width="12" height="15" fill="rgb(235,121,45)"/><text x="1010.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.22%)</title><rect x="1017" y="292" width="2" height="15" fill="rgb(242,220,28)"/><text x="1020.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1221) (1 samples, 0.22%)</title><rect x="1017" y="308" width="2" height="15" fill="rgb(207,42,36)"/><text x="1020.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (16 samples, 3.44%)</title><rect x="984" y="228" width="41" height="15" fill="rgb(214,133,36)"/><text x="987.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.37%)</title><rect x="997" y="244" width="28" height="15" fill="rgb(240,123,52)"/><text x="1000.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (2 samples, 0.43%)</title><rect x="1019" y="260" width="6" height="15" fill="rgb(230,159,3)"/><text x="1022.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.22%)</title><rect x="1025" y="228" width="2" height="15" fill="rgb(230,88,41)"/><text x="1028.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (1 samples, 0.22%)</title><rect x="1027" y="228" width="3" height="15" fill="rgb(239,185,51)"/><text x="1030.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="1027" y="244" width="3" height="15" fill="rgb(230,73,20)"/><text x="1030.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="1027" y="260" width="3" height="15" fill="rgb(235,19,41)"/><text x="1030.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.22%)</title><rect x="1027" y="276" width="3" height="15" fill="rgb(240,88,10)"/><text x="1030.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="1027" y="292" width="3" height="15" fill="rgb(226,95,54)"/><text x="1030.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="1027" y="308" width="3" height="15" fill="rgb(209,148,16)"/><text x="1030.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.22%)</title><rect x="1027" y="324" width="3" height="15" fill="rgb(252,34,31)"/><text x="1030.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3472) (1 samples, 0.22%)</title><rect x="1027" y="340" width="3" height="15" fill="rgb(242,99,31)"/><text x="1030.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="1032" y="244" width="3" height="15" fill="rgb(237,33,52)"/><text x="1035.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="1032" y="260" width="3" height="15" fill="rgb(230,144,3)"/><text x="1035.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.22%)</title><rect x="1032" y="276" width="3" height="15" fill="rgb(235,223,1)"/><text x="1035.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="1035" y="260" width="2" height="15" fill="rgb(237,109,45)"/><text x="1038.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.22%)</title><rect x="1035" y="276" width="2" height="15" fill="rgb(213,87,30)"/><text x="1038.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="1035" y="292" width="2" height="15" fill="rgb(217,43,14)"/><text x="1038.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.22%)</title><rect x="1035" y="308" width="2" height="15" fill="rgb(218,37,47)"/><text x="1038.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.22%)</title><rect x="1037" y="260" width="3" height="15" fill="rgb(205,17,3)"/><text x="1040.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.22%)</title><rect x="1037" y="276" width="3" height="15" fill="rgb(254,97,42)"/><text x="1040.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.22%)</title><rect x="1037" y="292" width="3" height="15" fill="rgb(242,20,6)"/><text x="1040.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (6 samples, 1.29%)</title><rect x="1030" y="228" width="15" height="15" fill="rgb(212,81,54)"/><text x="1033.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.86%)</title><rect x="1035" y="244" width="10" height="15" fill="rgb(212,80,8)"/><text x="1038.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.43%)</title><rect x="1040" y="260" width="5" height="15" fill="rgb(235,128,39)"/><text x="1043.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.22%)</title><rect x="1042" y="276" width="3" height="15" fill="rgb(249,50,52)"/><text x="1045.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.22%)</title><rect x="1042" y="292" width="3" height="15" fill="rgb(243,133,53)"/><text x="1045.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.22%)</title><rect x="1042" y="308" width="3" height="15" fill="rgb(251,204,8)"/><text x="1045.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:245) (1 samples, 0.22%)</title><rect x="1042" y="324" width="3" height="15" fill="rgb(207,11,45)"/><text x="1045.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.22%)</title><rect x="1042" y="340" width="3" height="15" fill="rgb(220,83,44)"/><text x="1045.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (26 samples, 5.59%)</title><rect x="981" y="196" width="66" height="15" fill="rgb(253,204,13)"/><text x="984.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (26 samples, 5.59%)</title><rect x="981" y="212" width="66" height="15" fill="rgb(207,58,25)"/><text x="984.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:19) (1 samples, 0.22%)</title><rect x="1045" y="228" width="2" height="15" fill="rgb(236,180,4)"/><text x="1048.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.22%)</title><rect x="1047" y="196" width="3" height="15" fill="rgb(217,48,10)"/><text x="1050.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.22%)</title><rect x="1052" y="212" width="3" height="15" fill="rgb(253,102,6)"/><text x="1055.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.22%)</title><rect x="1055" y="212" width="3" height="15" fill="rgb(242,87,49)"/><text x="1058.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.22%)</title><rect x="1068" y="324" width="2" height="15" fill="rgb(211,190,12)"/><text x="1071.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (5 samples, 1.08%)</title><rect x="1070" y="340" width="13" height="15" fill="rgb(248,129,17)"/><text x="1073.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.65%)</title><rect x="1075" y="356" width="8" height="15" fill="rgb(246,83,29)"/><text x="1078.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.22%)</title><rect x="1083" y="372" width="2" height="15" fill="rgb(250,180,29)"/><text x="1086.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 1.51%)</title><rect x="1070" y="324" width="18" height="15" fill="rgb(251,63,7)"/><text x="1073.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.43%)</title><rect x="1083" y="340" width="5" height="15" fill="rgb(207,32,22)"/><text x="1086.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.43%)</title><rect x="1083" y="356" width="5" height="15" fill="rgb(243,24,25)"/><text x="1086.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="1085" y="372" width="3" height="15" fill="rgb(221,89,2)"/><text x="1088.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="1085" y="388" width="3" height="15" fill="rgb(248,209,21)"/><text x="1088.00" y="398.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.22%)</title><rect x="1085" y="404" width="3" height="15" fill="rgb(220,118,9)"/><text x="1088.00" y="414.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.43%)</title><rect x="1088" y="356" width="5" height="15" fill="rgb(227,185,40)"/><text x="1091.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.65%)</title><rect x="1088" y="340" width="8" height="15" fill="rgb(242,36,37)"/><text x="1091.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.22%)</title><rect x="1093" y="356" width="3" height="15" fill="rgb(220,35,20)"/><text x="1096.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="1096" y="388" width="2" height="15" fill="rgb(235,0,8)"/><text x="1099.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.29%)</title><rect x="1096" y="340" width="15" height="15" fill="rgb(243,112,31)"/><text x="1099.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.29%)</title><rect x="1096" y="356" width="15" height="15" fill="rgb(222,133,54)"/><text x="1099.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.29%)</title><rect x="1096" y="372" width="15" height="15" fill="rgb(236,25,5)"/><text x="1099.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 1.08%)</title><rect x="1098" y="388" width="13" height="15" fill="rgb(236,81,43)"/><text x="1101.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.22%)</title><rect x="1108" y="404" width="3" height="15" fill="rgb(218,138,33)"/><text x="1111.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.22%)</title><rect x="1108" y="420" width="3" height="15" fill="rgb(205,182,5)"/><text x="1111.00" y="430.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:319) (1 samples, 0.22%)</title><rect x="1108" y="436" width="3" height="15" fill="rgb(249,193,4)"/><text x="1111.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="1113" y="372" width="3" height="15" fill="rgb(237,193,4)"/><text x="1116.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.22%)</title><rect x="1113" y="388" width="3" height="15" fill="rgb(230,99,45)"/><text x="1116.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.22%)</title><rect x="1113" y="404" width="3" height="15" fill="rgb(245,108,18)"/><text x="1116.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="1113" y="420" width="3" height="15" fill="rgb(251,55,41)"/><text x="1116.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.22%)</title><rect x="1113" y="436" width="3" height="15" fill="rgb(227,207,48)"/><text x="1116.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (12 samples, 2.58%)</title><rect x="1088" y="324" width="30" height="15" fill="rgb(218,25,11)"/><text x="1091.00" y="334.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.65%)</title><rect x="1111" y="340" width="7" height="15" fill="rgb(217,214,37)"/><text x="1114.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.43%)</title><rect x="1113" y="356" width="5" height="15" fill="rgb(229,113,53)"/><text x="1116.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="1116" y="372" width="2" height="15" fill="rgb(237,185,36)"/><text x="1119.00" y="382.50"></text></g><g><title>0x7f05457dff00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="1116" y="388" width="2" height="15" fill="rgb(234,33,47)"/><text x="1119.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="1124" y="420" width="2" height="15" fill="rgb(220,194,31)"/><text x="1127.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.22%)</title><rect x="1124" y="436" width="2" height="15" fill="rgb(229,113,48)"/><text x="1127.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="1126" y="420" width="3" height="15" fill="rgb(225,152,22)"/><text x="1129.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1472) (1 samples, 0.22%)</title><rect x="1126" y="436" width="3" height="15" fill="rgb(240,68,52)"/><text x="1129.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.22%)</title><rect x="1129" y="420" width="2" height="15" fill="rgb(205,122,52)"/><text x="1132.00" y="430.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2188) (1 samples, 0.22%)</title><rect x="1129" y="436" width="2" height="15" fill="rgb(234,126,4)"/><text x="1132.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.86%)</title><rect x="1124" y="404" width="10" height="15" fill="rgb(241,105,49)"/><text x="1127.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="1131" y="420" width="3" height="15" fill="rgb(226,194,9)"/><text x="1134.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.22%)</title><rect x="1131" y="436" width="3" height="15" fill="rgb(242,25,37)"/><text x="1134.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.22%)</title><rect x="1131" y="452" width="3" height="15" fill="rgb(205,56,35)"/><text x="1134.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:950) (1 samples, 0.22%)</title><rect x="1131" y="468" width="3" height="15" fill="rgb(254,184,52)"/><text x="1134.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.08%)</title><rect x="1124" y="356" width="12" height="15" fill="rgb(236,227,38)"/><text x="1127.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.08%)</title><rect x="1124" y="372" width="12" height="15" fill="rgb(232,163,53)"/><text x="1127.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.08%)</title><rect x="1124" y="388" width="12" height="15" fill="rgb(247,157,11)"/><text x="1127.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="1134" y="404" width="2" height="15" fill="rgb(248,61,42)"/><text x="1137.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="1134" y="420" width="2" height="15" fill="rgb(233,4,4)"/><text x="1137.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2046) (1 samples, 0.22%)</title><rect x="1134" y="436" width="2" height="15" fill="rgb(228,179,25)"/><text x="1137.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (106 samples, 22.80%)</title><rect x="870" y="180" width="269" height="15" fill="rgb(223,148,12)"/><text x="873.00" y="190.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (35 samples, 7.53%)</title><rect x="1050" y="196" width="89" height="15" fill="rgb(247,59,17)"/><text x="1053.00" y="206.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (32 samples, 6.88%)</title><rect x="1058" y="212" width="81" height="15" fill="rgb(248,92,42)"/><text x="1061.00" y="222.50">_run (mlp..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (30 samples, 6.45%)</title><rect x="1063" y="228" width="76" height="15" fill="rgb(250,171,47)"/><text x="1066.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (30 samples, 6.45%)</title><rect x="1063" y="244" width="76" height="15" fill="rgb(244,178,3)"/><text x="1066.00" y="254.50">array_im..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (30 samples, 6.45%)</title><rect x="1063" y="260" width="76" height="15" fill="rgb(252,51,26)"/><text x="1066.00" y="270.50">clip (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (28 samples, 6.02%)</title><rect x="1068" y="276" width="71" height="15" fill="rgb(206,32,4)"/><text x="1071.00" y="286.50">_wrapfun..</text></g><g><title>array_clip (methods.c:2381) (28 samples, 6.02%)</title><rect x="1068" y="292" width="71" height="15" fill="rgb(214,152,0)"/><text x="1071.00" y="302.50">array_cl..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 6.02%)</title><rect x="1068" y="308" width="71" height="15" fill="rgb(254,0,13)"/><text x="1071.00" y="318.50">forward_..</text></g><g><title>_clip (numpy/core/_methods.py:132) (8 samples, 1.72%)</title><rect x="1118" y="324" width="21" height="15" fill="rgb(241,23,42)"/><text x="1121.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 1.51%)</title><rect x="1121" y="340" width="18" height="15" fill="rgb(249,215,52)"/><text x="1124.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.22%)</title><rect x="1136" y="356" width="3" height="15" fill="rgb(214,155,4)"/><text x="1139.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.22%)</title><rect x="1139" y="180" width="2" height="15" fill="rgb(241,222,14)"/><text x="1142.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.43%)</title><rect x="1141" y="180" width="5" height="15" fill="rgb(207,8,33)"/><text x="1144.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.22%)</title><rect x="1146" y="180" width="3" height="15" fill="rgb(221,5,31)"/><text x="1149.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 1.29%)</title><rect x="1149" y="180" width="15" height="15" fill="rgb(217,68,6)"/><text x="1152.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:45) (191 samples, 41.08%)</title><rect x="682" y="52" width="485" height="15" fill="rgb(252,169,3)"/><text x="685.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:4..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:44) (191 samples, 41.08%)</title><rect x="682" y="68" width="485" height="15" fill="rgb(207,223,21)"/><text x="685.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_...</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (190 samples, 40.86%)</title><rect x="685" y="84" width="482" height="15" fill="rgb(253,39,7)"/><text x="688.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (138 samples, 29.68%)</title><rect x="816" y="100" width="351" height="15" fill="rgb(226,153,25)"/><text x="819.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 29.68%)</title><rect x="816" y="116" width="351" height="15" fill="rgb(219,105,15)"/><text x="819.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (138 samples, 29.68%)</title><rect x="816" y="132" width="351" height="15" fill="rgb(219,22,14)"/><text x="819.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (138 samples, 29.68%)</title><rect x="816" y="148" width="351" height="15" fill="rgb(237,76,24)"/><text x="819.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (136 samples, 29.25%)</title><rect x="822" y="164" width="345" height="15" fill="rgb(212,56,29)"/><text x="825.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.22%)</title><rect x="1164" y="180" width="3" height="15" fill="rgb(233,93,27)"/><text x="1167.00" y="190.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (1 samples, 0.22%)</title><rect x="1167" y="84" width="2" height="15" fill="rgb(226,97,13)"/><text x="1170.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.22%)</title><rect x="1167" y="100" width="2" height="15" fill="rgb(236,1,38)"/><text x="1170.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.22%)</title><rect x="1167" y="116" width="2" height="15" fill="rgb(229,180,19)"/><text x="1170.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.22%)</title><rect x="1167" y="132" width="2" height="15" fill="rgb(234,54,27)"/><text x="1170.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.22%)</title><rect x="1167" y="148" width="2" height="15" fill="rgb(251,166,26)"/><text x="1170.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.22%)</title><rect x="1167" y="164" width="2" height="15" fill="rgb(232,16,31)"/><text x="1170.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.22%)</title><rect x="1167" y="180" width="2" height="15" fill="rgb(251,144,36)"/><text x="1170.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.22%)</title><rect x="1167" y="196" width="2" height="15" fill="rgb(206,114,15)"/><text x="1170.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.22%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(233,67,32)"/><text x="1170.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.22%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(251,90,7)"/><text x="1170.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.22%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(207,126,32)"/><text x="1170.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(247,154,51)"/><text x="1170.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(219,223,47)"/><text x="1170.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.22%)</title><rect x="1167" y="292" width="2" height="15" fill="rgb(254,194,32)"/><text x="1170.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.22%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(236,216,33)"/><text x="1170.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.22%)</title><rect x="1167" y="324" width="2" height="15" fill="rgb(222,155,26)"/><text x="1170.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.22%)</title><rect x="1167" y="340" width="2" height="15" fill="rgb(215,15,53)"/><text x="1170.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:337) (1 samples, 0.22%)</title><rect x="1167" y="356" width="2" height="15" fill="rgb(232,172,42)"/><text x="1170.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:124) (1 samples, 0.22%)</title><rect x="1167" y="372" width="2" height="15" fill="rgb(247,116,13)"/><text x="1170.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (1 samples, 0.22%)</title><rect x="1169" y="100" width="3" height="15" fill="rgb(224,186,43)"/><text x="1172.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.22%)</title><rect x="1169" y="116" width="3" height="15" fill="rgb(211,147,40)"/><text x="1172.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.22%)</title><rect x="1169" y="132" width="3" height="15" fill="rgb(231,125,46)"/><text x="1172.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.22%)</title><rect x="1169" y="148" width="3" height="15" fill="rgb(213,156,54)"/><text x="1172.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.22%)</title><rect x="1169" y="164" width="3" height="15" fill="rgb(228,3,54)"/><text x="1172.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.22%)</title><rect x="1169" y="180" width="3" height="15" fill="rgb(240,192,2)"/><text x="1172.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.22%)</title><rect x="1169" y="196" width="3" height="15" fill="rgb(223,214,3)"/><text x="1172.00" y="206.50"></text></g><g><title>0x7f050627cff9 (?) (1 samples, 0.22%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(230,146,4)"/><text x="1172.00" y="222.50"></text></g><g><title>0x7f0506277ef6 (?) (1 samples, 0.22%)</title><rect x="1169" y="228" width="3" height="15" fill="rgb(242,10,42)"/><text x="1172.00" y="238.50"></text></g><g><title>0x7f050626c962 (?) (1 samples, 0.22%)</title><rect x="1169" y="244" width="3" height="15" fill="rgb(249,38,3)"/><text x="1172.00" y="254.50"></text></g><g><title>0x7f05062a07a7 (?) (1 samples, 0.22%)</title><rect x="1169" y="260" width="3" height="15" fill="rgb(215,141,35)"/><text x="1172.00" y="270.50"></text></g><g><title>0x7f05062a0379 (?) (1 samples, 0.22%)</title><rect x="1169" y="276" width="3" height="15" fill="rgb(233,104,9)"/><text x="1172.00" y="286.50"></text></g><g><title>0x7f05066fe8b8 (?) (1 samples, 0.22%)</title><rect x="1169" y="292" width="3" height="15" fill="rgb(207,200,39)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7f05066fcc7f (?) (1 samples, 0.22%)</title><rect x="1169" y="308" width="3" height="15" fill="rgb(221,9,46)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f050670f99c (?) (1 samples, 0.22%)</title><rect x="1169" y="324" width="3" height="15" fill="rgb(223,82,46)"/><text x="1172.00" y="334.50"></text></g><g><title>0x7f05064aadd6 (?) (1 samples, 0.22%)</title><rect x="1169" y="340" width="3" height="15" fill="rgb(223,225,24)"/><text x="1172.00" y="350.50"></text></g><g><title>0x7f05064a9800 (?) (1 samples, 0.22%)</title><rect x="1169" y="356" width="3" height="15" fill="rgb(240,188,30)"/><text x="1172.00" y="366.50"></text></g><g><title>0x7f05066cb5e6 (?) (1 samples, 0.22%)</title><rect x="1169" y="372" width="3" height="15" fill="rgb(211,57,23)"/><text x="1172.00" y="382.50"></text></g><g><title>0x7f05066cb486 (?) (1 samples, 0.22%)</title><rect x="1169" y="388" width="3" height="15" fill="rgb(234,37,46)"/><text x="1172.00" y="398.50"></text></g><g><title>0x7f05066b5c8d (?) (1 samples, 0.22%)</title><rect x="1169" y="404" width="3" height="15" fill="rgb(245,47,48)"/><text x="1172.00" y="414.50"></text></g><g><title>0x7f05066b5202 (?) (1 samples, 0.22%)</title><rect x="1169" y="420" width="3" height="15" fill="rgb(247,145,40)"/><text x="1172.00" y="430.50"></text></g><g><title>0x7f05066b4913 (?) (1 samples, 0.22%)</title><rect x="1169" y="436" width="3" height="15" fill="rgb(248,119,0)"/><text x="1172.00" y="446.50"></text></g><g><title>0x7f05066b3daf (?) (1 samples, 0.22%)</title><rect x="1169" y="452" width="3" height="15" fill="rgb(212,47,50)"/><text x="1172.00" y="462.50"></text></g><g><title>0x7f05066ae78f (?) (1 samples, 0.22%)</title><rect x="1169" y="468" width="3" height="15" fill="rgb(250,71,2)"/><text x="1172.00" y="478.50"></text></g><g><title>0x7f05066e3e78 (?) (1 samples, 0.22%)</title><rect x="1169" y="484" width="3" height="15" fill="rgb(216,166,3)"/><text x="1172.00" y="494.50"></text></g><g><title>0x7f05066e3b3d (?) (1 samples, 0.22%)</title><rect x="1169" y="500" width="3" height="15" fill="rgb(230,13,37)"/><text x="1172.00" y="510.50"></text></g><g><title>0x7f0506398413 (?) (1 samples, 0.22%)</title><rect x="1169" y="516" width="3" height="15" fill="rgb(242,226,30)"/><text x="1172.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1169" y="532" width="3" height="15" fill="rgb(221,155,7)"/><text x="1172.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1169" y="548" width="3" height="15" fill="rgb(206,165,54)"/><text x="1172.00" y="558.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(243,228,31)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1172" y="356" width="2" height="15" fill="rgb(220,12,42)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1172" y="372" width="2" height="15" fill="rgb(245,122,40)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1174" y="340" width="5" height="15" fill="rgb(223,223,35)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1174" y="356" width="5" height="15" fill="rgb(219,195,10)"/><text x="1177.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.43%)</title><rect x="1174" y="372" width="5" height="15" fill="rgb(205,217,2)"/><text x="1177.00" y="382.50"></text></g><g><title>0x7f05465bed07 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1177" y="388" width="2" height="15" fill="rgb(238,197,42)"/><text x="1180.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="340" width="3" height="15" fill="rgb(206,106,26)"/><text x="1182.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="356" width="3" height="15" fill="rgb(235,204,24)"/><text x="1182.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="372" width="3" height="15" fill="rgb(208,4,29)"/><text x="1182.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="388" width="3" height="15" fill="rgb(219,107,34)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="404" width="3" height="15" fill="rgb(217,186,54)"/><text x="1182.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="420" width="3" height="15" fill="rgb(223,164,41)"/><text x="1182.00" y="430.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1182" y="340" width="2" height="15" fill="rgb(219,105,29)"/><text x="1185.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1182" y="356" width="2" height="15" fill="rgb(212,202,38)"/><text x="1185.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1182" y="372" width="2" height="15" fill="rgb(213,77,31)"/><text x="1185.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1182" y="388" width="2" height="15" fill="rgb(224,149,19)"/><text x="1185.00" y="398.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1184" y="340" width="3" height="15" fill="rgb(215,36,45)"/><text x="1187.00" y="350.50"></text></g><g><title>onnxruntime::ReshapeHelper::ReshapeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1184" y="356" width="3" height="15" fill="rgb(251,6,45)"/><text x="1187.00" y="366.50"></text></g><g><title>all (465 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,71,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:52) (9 samples, 1.94%)</title><rect x="1167" y="52" width="23" height="15" fill="rgb(228,169,13)"/><text x="1170.00" y="62.50">&lt;..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:51) (9 samples, 1.94%)</title><rect x="1167" y="68" width="23" height="15" fill="rgb(205,126,0)"/><text x="1170.00" y="78.50">p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (8 samples, 1.72%)</title><rect x="1169" y="84" width="21" height="15" fill="rgb(223,218,41)"/><text x="1172.00" y="94.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (7 samples, 1.51%)</title><rect x="1172" y="100" width="18" height="15" fill="rgb(213,73,33)"/><text x="1175.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 1.51%)</title><rect x="1172" y="116" width="18" height="15" fill="rgb(231,136,3)"/><text x="1175.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (7 samples, 1.51%)</title><rect x="1172" y="132" width="18" height="15" fill="rgb(225,81,30)"/><text x="1175.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 1.51%)</title><rect x="1172" y="148" width="18" height="15" fill="rgb(225,143,15)"/><text x="1175.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (7 samples, 1.51%)</title><rect x="1172" y="164" width="18" height="15" fill="rgb(220,21,38)"/><text x="1175.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (7 samples, 1.51%)</title><rect x="1172" y="180" width="18" height="15" fill="rgb(244,129,1)"/><text x="1175.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (7 samples, 1.51%)</title><rect x="1172" y="196" width="18" height="15" fill="rgb(251,114,20)"/><text x="1175.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="212" width="18" height="15" fill="rgb(244,116,17)"/><text x="1175.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="228" width="18" height="15" fill="rgb(205,225,38)"/><text x="1175.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="244" width="18" height="15" fill="rgb(237,81,49)"/><text x="1175.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="260" width="18" height="15" fill="rgb(226,203,48)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="276" width="18" height="15" fill="rgb(220,33,33)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="292" width="18" height="15" fill="rgb(225,37,31)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="308" width="18" height="15" fill="rgb(236,128,2)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.51%)</title><rect x="1172" y="324" width="18" height="15" fill="rgb(218,91,35)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(216,210,9)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(249,188,54)"/><text x="1190.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(233,225,6)"/><text x="1190.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(238,59,39)"/><text x="1190.00" y="398.50"></text></g></g></svg>