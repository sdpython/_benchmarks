<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.19%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(224,53,54)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.19%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(206,163,4)"/><text x="13.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.19%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(205,121,26)"/><text x="13.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(212,82,45)"/><text x="13.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(240,221,7)"/><text x="13.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(243,5,49)"/><text x="13.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:195) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(251,117,3)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(234,203,13)"/><text x="13.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(223,7,35)"/><text x="13.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(208,54,42)"/><text x="13.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.19%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(213,120,5)"/><text x="13.00" y="270.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.19%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(208,197,20)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(211,89,23)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(208,85,8)"/><text x="15.00" y="206.50"></text></g><g><title>0x7fac2df45b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(230,35,22)"/><text x="15.00" y="222.50"></text></g><g><title>0x7fac2df7710a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(215,162,29)"/><text x="15.00" y="238.50"></text></g><g><title>0x7fac2e1a2e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(239,41,15)"/><text x="15.00" y="254.50"></text></g><g><title>0x7fac2e3d5c77 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(206,158,43)"/><text x="15.00" y="270.50"></text></g><g><title>0x7fac2e3d6100 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(240,2,46)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:31) (3 samples, 0.56%)</title><rect x="10" y="52" width="6" height="15" fill="rgb(230,115,16)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:11) (3 samples, 0.56%)</title><rect x="10" y="68" width="6" height="15" fill="rgb(216,34,24)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (3 samples, 0.56%)</title><rect x="10" y="84" width="6" height="15" fill="rgb(223,66,51)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.37%)</title><rect x="12" y="100" width="4" height="15" fill="rgb(251,145,51)"/><text x="15.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.37%)</title><rect x="12" y="116" width="4" height="15" fill="rgb(220,67,49)"/><text x="15.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.37%)</title><rect x="12" y="132" width="4" height="15" fill="rgb(213,145,12)"/><text x="15.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.37%)</title><rect x="12" y="148" width="4" height="15" fill="rgb(253,224,5)"/><text x="15.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:523) (1 samples, 0.19%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(208,111,20)"/><text x="17.00" y="174.50"></text></g><g><title>average (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(228,141,12)"/><text x="17.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(225,133,36)"/><text x="17.00" y="206.50"></text></g><g><title>average (numpy/lib/function_base.py:387) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(227,54,17)"/><text x="17.00" y="222.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.19%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(245,71,9)"/><text x="19.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:77) (1 samples, 0.19%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(215,199,19)"/><text x="19.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.19%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(206,77,54)"/><text x="19.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(218,10,42)"/><text x="19.00" y="254.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (2 samples, 0.37%)</title><rect x="16" y="84" width="4" height="15" fill="rgb(243,29,33)"/><text x="19.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.37%)</title><rect x="16" y="100" width="4" height="15" fill="rgb(214,159,44)"/><text x="19.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.37%)</title><rect x="16" y="116" width="4" height="15" fill="rgb(239,225,33)"/><text x="19.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.37%)</title><rect x="16" y="132" width="4" height="15" fill="rgb(205,191,8)"/><text x="19.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.37%)</title><rect x="16" y="148" width="4" height="15" fill="rgb(252,33,5)"/><text x="19.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.37%)</title><rect x="16" y="164" width="4" height="15" fill="rgb(229,36,32)"/><text x="19.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.37%)</title><rect x="16" y="180" width="4" height="15" fill="rgb(231,82,10)"/><text x="19.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.19%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(249,23,16)"/><text x="21.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.19%)</title><rect x="18" y="212" width="2" height="15" fill="rgb(246,0,51)"/><text x="21.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.19%)</title><rect x="18" y="228" width="2" height="15" fill="rgb(239,227,5)"/><text x="21.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="18" y="244" width="2" height="15" fill="rgb(217,172,3)"/><text x="21.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.19%)</title><rect x="18" y="260" width="2" height="15" fill="rgb(247,51,7)"/><text x="21.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:128) (1 samples, 0.19%)</title><rect x="18" y="276" width="2" height="15" fill="rgb(216,39,3)"/><text x="21.00" y="286.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.19%)</title><rect x="23" y="148" width="2" height="15" fill="rgb(219,11,13)"/><text x="26.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="23" y="164" width="2" height="15" fill="rgb(227,168,54)"/><text x="26.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.19%)</title><rect x="23" y="180" width="2" height="15" fill="rgb(223,115,23)"/><text x="26.00" y="190.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.19%)</title><rect x="23" y="196" width="2" height="15" fill="rgb(234,152,37)"/><text x="26.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.56%)</title><rect x="27" y="244" width="7" height="15" fill="rgb(217,52,49)"/><text x="30.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="31" y="260" width="3" height="15" fill="rgb(238,142,52)"/><text x="34.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.74%)</title><rect x="27" y="212" width="9" height="15" fill="rgb(235,206,34)"/><text x="30.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.74%)</title><rect x="27" y="228" width="9" height="15" fill="rgb(208,35,51)"/><text x="30.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.19%)</title><rect x="34" y="244" width="2" height="15" fill="rgb(231,211,27)"/><text x="37.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:377) (1 samples, 0.19%)</title><rect x="36" y="228" width="2" height="15" fill="rgb(217,157,23)"/><text x="39.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.19%)</title><rect x="42" y="260" width="3" height="15" fill="rgb(205,163,0)"/><text x="45.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.56%)</title><rect x="40" y="244" width="7" height="15" fill="rgb(234,88,32)"/><text x="43.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.19%)</title><rect x="45" y="260" width="2" height="15" fill="rgb(211,216,14)"/><text x="48.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="47" y="260" width="2" height="15" fill="rgb(216,165,54)"/><text x="50.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.37%)</title><rect x="47" y="244" width="4" height="15" fill="rgb(217,101,17)"/><text x="50.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="49" y="260" width="2" height="15" fill="rgb(244,33,1)"/><text x="52.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.19%)</title><rect x="49" y="276" width="2" height="15" fill="rgb(240,139,15)"/><text x="52.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="51" y="244" width="2" height="15" fill="rgb(217,122,50)"/><text x="54.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.19%)</title><rect x="53" y="244" width="3" height="15" fill="rgb(225,15,26)"/><text x="56.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.19%)</title><rect x="53" y="260" width="3" height="15" fill="rgb(240,125,43)"/><text x="56.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(212,117,5)"/><text x="59.00" y="270.50"></text></g><g><title>0x7fac54523e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(221,128,25)"/><text x="59.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.19%)</title><rect x="58" y="260" width="2" height="15" fill="rgb(216,6,18)"/><text x="61.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (12 samples, 2.23%)</title><rect x="36" y="212" width="26" height="15" fill="rgb(253,30,39)"/><text x="39.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 2.05%)</title><rect x="38" y="228" width="24" height="15" fill="rgb(253,42,52)"/><text x="41.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.56%)</title><rect x="56" y="244" width="6" height="15" fill="rgb(250,174,20)"/><text x="59.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(211,41,51)"/><text x="63.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(220,58,34)"/><text x="63.00" y="286.50"></text></g><g><title>0x7fac2df5f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="62" y="276" width="2" height="15" fill="rgb(205,79,46)"/><text x="65.00" y="286.50"></text></g><g><title>0x7fac2df43d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="62" y="292" width="2" height="15" fill="rgb(232,205,1)"/><text x="65.00" y="302.50"></text></g><g><title>0x7fac2df43604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="62" y="308" width="2" height="15" fill="rgb(250,184,19)"/><text x="65.00" y="318.50"></text></g><g><title>0x7fac5452e12b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="62" y="324" width="2" height="15" fill="rgb(224,58,33)"/><text x="65.00" y="334.50"></text></g><g><title>0x7fac2df50fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="62" y="244" width="5" height="15" fill="rgb(218,192,42)"/><text x="65.00" y="254.50"></text></g><g><title>0x7fac2df60405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="62" y="260" width="5" height="15" fill="rgb(215,154,45)"/><text x="65.00" y="270.50"></text></g><g><title>0x7fac2df5f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="64" y="276" width="3" height="15" fill="rgb(239,130,2)"/><text x="67.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.19%)</title><rect x="64" y="292" width="3" height="15" fill="rgb(233,201,20)"/><text x="67.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.19%)</title><rect x="64" y="308" width="3" height="15" fill="rgb(220,227,41)"/><text x="67.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (3 samples, 0.56%)</title><rect x="62" y="212" width="7" height="15" fill="rgb(248,132,20)"/><text x="65.00" y="222.50"></text></g><g><title>0x7fac2df51d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="62" y="228" width="7" height="15" fill="rgb(243,122,46)"/><text x="65.00" y="238.50"></text></g><g><title>0x7fac2df5105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="67" y="244" width="2" height="15" fill="rgb(233,100,13)"/><text x="70.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.19%)</title><rect x="67" y="260" width="2" height="15" fill="rgb(218,183,16)"/><text x="70.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.19%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(214,97,51)"/><text x="70.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.37%)</title><rect x="69" y="212" width="4" height="15" fill="rgb(221,123,20)"/><text x="72.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.37%)</title><rect x="69" y="228" width="4" height="15" fill="rgb(242,120,0)"/><text x="72.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.37%)</title><rect x="69" y="244" width="4" height="15" fill="rgb(235,9,24)"/><text x="72.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="71" y="260" width="2" height="15" fill="rgb(224,163,3)"/><text x="74.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1049) (1 samples, 0.19%)</title><rect x="71" y="276" width="2" height="15" fill="rgb(224,162,2)"/><text x="74.00" y="286.50"></text></g><g><title>prepare_index (mapping.c:555) (1 samples, 0.19%)</title><rect x="73" y="244" width="2" height="15" fill="rgb(221,74,31)"/><text x="76.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.37%)</title><rect x="73" y="228" width="5" height="15" fill="rgb(227,73,37)"/><text x="76.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:834) (1 samples, 0.19%)</title><rect x="75" y="244" width="3" height="15" fill="rgb(235,47,47)"/><text x="78.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (3 samples, 0.56%)</title><rect x="73" y="212" width="7" height="15" fill="rgb(214,56,36)"/><text x="76.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(207,12,39)"/><text x="81.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(254,171,54)"/><text x="81.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.19%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(235,165,18)"/><text x="81.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(206,56,16)"/><text x="81.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="78" y="292" width="2" height="15" fill="rgb(235,119,18)"/><text x="81.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="78" y="308" width="2" height="15" fill="rgb(215,97,41)"/><text x="81.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="78" y="324" width="2" height="15" fill="rgb(214,96,16)"/><text x="81.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="78" y="340" width="2" height="15" fill="rgb(247,140,40)"/><text x="81.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="78" y="356" width="2" height="15" fill="rgb(251,96,9)"/><text x="81.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="78" y="372" width="2" height="15" fill="rgb(239,153,15)"/><text x="81.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.19%)</title><rect x="80" y="212" width="2" height="15" fill="rgb(241,207,1)"/><text x="83.00" y="222.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.19%)</title><rect x="80" y="228" width="2" height="15" fill="rgb(216,52,5)"/><text x="83.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="80" y="244" width="2" height="15" fill="rgb(240,200,16)"/><text x="83.00" y="254.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (26 samples, 4.84%)</title><rect x="27" y="196" width="57" height="15" fill="rgb(216,123,12)"/><text x="30.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (1 samples, 0.19%)</title><rect x="82" y="212" width="2" height="15" fill="rgb(239,58,20)"/><text x="85.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(211,168,16)"/><text x="85.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(209,41,39)"/><text x="85.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="82" y="260" width="2" height="15" fill="rgb(207,74,14)"/><text x="85.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="82" y="276" width="2" height="15" fill="rgb(207,164,2)"/><text x="85.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(234,141,4)"/><text x="85.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.19%)</title><rect x="82" y="308" width="2" height="15" fill="rgb(230,112,33)"/><text x="85.00" y="318.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.19%)</title><rect x="82" y="324" width="2" height="15" fill="rgb(235,228,7)"/><text x="85.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(211,161,9)"/><text x="92.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="89" y="244" width="2" height="15" fill="rgb(206,126,6)"/><text x="92.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="89" y="260" width="2" height="15" fill="rgb(246,14,33)"/><text x="92.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(234,115,32)"/><text x="92.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="89" y="292" width="2" height="15" fill="rgb(215,47,25)"/><text x="92.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.37%)</title><rect x="93" y="308" width="4" height="15" fill="rgb(212,39,41)"/><text x="96.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.19%)</title><rect x="95" y="324" width="2" height="15" fill="rgb(213,18,17)"/><text x="98.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="97" y="340" width="3" height="15" fill="rgb(246,64,50)"/><text x="100.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.37%)</title><rect x="97" y="324" width="5" height="15" fill="rgb(217,21,15)"/><text x="100.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="100" y="340" width="2" height="15" fill="rgb(248,1,9)"/><text x="103.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="100" y="356" width="2" height="15" fill="rgb(215,204,45)"/><text x="103.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="100" y="372" width="2" height="15" fill="rgb(205,187,42)"/><text x="103.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="100" y="388" width="2" height="15" fill="rgb(213,134,24)"/><text x="103.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="100" y="404" width="2" height="15" fill="rgb(247,9,54)"/><text x="103.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="100" y="420" width="2" height="15" fill="rgb(230,10,13)"/><text x="103.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.56%)</title><rect x="97" y="308" width="7" height="15" fill="rgb(205,129,52)"/><text x="100.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.19%)</title><rect x="102" y="324" width="2" height="15" fill="rgb(234,15,44)"/><text x="105.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="102" y="340" width="2" height="15" fill="rgb(254,211,29)"/><text x="105.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="102" y="356" width="2" height="15" fill="rgb(230,68,44)"/><text x="105.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(236,160,11)"/><text x="105.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="102" y="388" width="2" height="15" fill="rgb(241,12,9)"/><text x="105.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.37%)</title><rect x="106" y="324" width="5" height="15" fill="rgb(232,120,33)"/><text x="109.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.37%)</title><rect x="106" y="340" width="5" height="15" fill="rgb(253,123,1)"/><text x="109.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.37%)</title><rect x="106" y="356" width="5" height="15" fill="rgb(254,67,17)"/><text x="109.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.37%)</title><rect x="106" y="372" width="5" height="15" fill="rgb(242,114,27)"/><text x="109.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="108" y="388" width="3" height="15" fill="rgb(244,126,0)"/><text x="111.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="108" y="404" width="3" height="15" fill="rgb(235,160,25)"/><text x="111.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="111" y="356" width="2" height="15" fill="rgb(217,20,12)"/><text x="114.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="111" y="372" width="2" height="15" fill="rgb(220,169,31)"/><text x="114.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="111" y="388" width="2" height="15" fill="rgb(218,84,19)"/><text x="114.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 0.93%)</title><rect x="104" y="308" width="11" height="15" fill="rgb(252,161,33)"/><text x="107.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.37%)</title><rect x="111" y="324" width="4" height="15" fill="rgb(215,109,4)"/><text x="114.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="111" y="340" width="4" height="15" fill="rgb(254,92,14)"/><text x="114.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3307) (1 samples, 0.19%)</title><rect x="113" y="356" width="2" height="15" fill="rgb(213,68,28)"/><text x="116.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="117" y="340" width="2" height="15" fill="rgb(226,229,44)"/><text x="120.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="117" y="356" width="2" height="15" fill="rgb(230,120,4)"/><text x="120.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="117" y="372" width="2" height="15" fill="rgb(254,42,22)"/><text x="120.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="117" y="388" width="2" height="15" fill="rgb(235,171,11)"/><text x="120.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="117" y="404" width="2" height="15" fill="rgb(244,81,5)"/><text x="120.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="117" y="420" width="2" height="15" fill="rgb(232,130,52)"/><text x="120.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (17 samples, 3.17%)</title><rect x="84" y="196" width="38" height="15" fill="rgb(223,129,14)"/><text x="87.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (15 samples, 2.79%)</title><rect x="89" y="212" width="33" height="15" fill="rgb(229,215,28)"/><text x="92.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.61%)</title><rect x="91" y="228" width="31" height="15" fill="rgb(208,119,15)"/><text x="94.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (14 samples, 2.61%)</title><rect x="91" y="244" width="31" height="15" fill="rgb(247,61,28)"/><text x="94.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (13 samples, 2.42%)</title><rect x="93" y="260" width="29" height="15" fill="rgb(224,144,21)"/><text x="96.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (13 samples, 2.42%)</title><rect x="93" y="276" width="29" height="15" fill="rgb(225,192,49)"/><text x="96.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.42%)</title><rect x="93" y="292" width="29" height="15" fill="rgb(241,69,40)"/><text x="96.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (3 samples, 0.56%)</title><rect x="115" y="308" width="7" height="15" fill="rgb(211,160,34)"/><text x="118.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.37%)</title><rect x="117" y="324" width="5" height="15" fill="rgb(251,162,42)"/><text x="120.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="119" y="340" width="3" height="15" fill="rgb(236,97,18)"/><text x="122.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3154) (1 samples, 0.19%)</title><rect x="119" y="356" width="3" height="15" fill="rgb(243,183,39)"/><text x="122.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="122" y="244" width="2" height="15" fill="rgb(238,207,1)"/><text x="125.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.19%)</title><rect x="122" y="260" width="2" height="15" fill="rgb(230,35,52)"/><text x="125.00" y="270.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (2 samples, 0.37%)</title><rect x="122" y="196" width="4" height="15" fill="rgb(240,27,2)"/><text x="125.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="122" y="212" width="4" height="15" fill="rgb(225,26,1)"/><text x="125.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.37%)</title><rect x="122" y="228" width="4" height="15" fill="rgb(223,151,31)"/><text x="125.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.19%)</title><rect x="124" y="244" width="2" height="15" fill="rgb(223,44,14)"/><text x="127.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="130" y="212" width="3" height="15" fill="rgb(253,92,49)"/><text x="133.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="130" y="228" width="3" height="15" fill="rgb(251,102,14)"/><text x="133.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="130" y="244" width="3" height="15" fill="rgb(253,29,16)"/><text x="133.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="133" y="212" width="2" height="15" fill="rgb(209,221,30)"/><text x="136.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="137" y="228" width="2" height="15" fill="rgb(254,12,5)"/><text x="140.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="137" y="244" width="2" height="15" fill="rgb(220,190,1)"/><text x="140.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.19%)</title><rect x="137" y="260" width="2" height="15" fill="rgb(228,157,22)"/><text x="140.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="139" y="244" width="2" height="15" fill="rgb(210,46,6)"/><text x="142.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="139" y="260" width="2" height="15" fill="rgb(208,125,37)"/><text x="142.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="141" y="244" width="3" height="15" fill="rgb(211,209,46)"/><text x="144.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="141" y="260" width="3" height="15" fill="rgb(223,32,32)"/><text x="144.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.19%)</title><rect x="144" y="260" width="2" height="15" fill="rgb(233,109,21)"/><text x="147.00" y="270.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="146" y="292" width="2" height="15" fill="rgb(214,186,29)"/><text x="149.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 1.30%)</title><rect x="135" y="212" width="15" height="15" fill="rgb(206,141,9)"/><text x="138.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="139" y="228" width="11" height="15" fill="rgb(251,176,54)"/><text x="142.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="144" y="244" width="6" height="15" fill="rgb(237,217,47)"/><text x="147.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.37%)</title><rect x="146" y="260" width="4" height="15" fill="rgb(218,107,13)"/><text x="149.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (2 samples, 0.37%)</title><rect x="146" y="276" width="4" height="15" fill="rgb(222,2,3)"/><text x="149.00" y="286.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1756) (1 samples, 0.19%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(233,137,44)"/><text x="151.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="152" y="260" width="3" height="15" fill="rgb(248,216,12)"/><text x="155.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="152" y="276" width="3" height="15" fill="rgb(241,156,32)"/><text x="155.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="155" y="276" width="2" height="15" fill="rgb(246,218,15)"/><text x="158.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:464) (1 samples, 0.19%)</title><rect x="155" y="292" width="2" height="15" fill="rgb(251,26,14)"/><text x="158.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.74%)</title><rect x="150" y="212" width="9" height="15" fill="rgb(251,195,42)"/><text x="153.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="152" y="228" width="7" height="15" fill="rgb(254,212,53)"/><text x="155.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="152" y="244" width="7" height="15" fill="rgb(248,120,31)"/><text x="155.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="155" y="260" width="4" height="15" fill="rgb(215,100,32)"/><text x="158.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="157" y="276" width="2" height="15" fill="rgb(218,125,25)"/><text x="160.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="157" y="292" width="2" height="15" fill="rgb(233,90,40)"/><text x="160.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2044) (1 samples, 0.19%)</title><rect x="157" y="308" width="2" height="15" fill="rgb(254,145,37)"/><text x="160.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="159" y="292" width="2" height="15" fill="rgb(221,182,10)"/><text x="162.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.19%)</title><rect x="159" y="308" width="2" height="15" fill="rgb(238,209,8)"/><text x="162.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="161" y="324" width="2" height="15" fill="rgb(207,212,28)"/><text x="164.00" y="334.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (18 samples, 3.35%)</title><rect x="126" y="196" width="40" height="15" fill="rgb(225,171,18)"/><text x="129.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (3 samples, 0.56%)</title><rect x="159" y="212" width="7" height="15" fill="rgb(250,197,38)"/><text x="162.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 0.56%)</title><rect x="159" y="228" width="7" height="15" fill="rgb(238,28,29)"/><text x="162.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.56%)</title><rect x="159" y="244" width="7" height="15" fill="rgb(251,128,31)"/><text x="162.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.56%)</title><rect x="159" y="260" width="7" height="15" fill="rgb(238,146,9)"/><text x="162.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="159" y="276" width="7" height="15" fill="rgb(224,146,44)"/><text x="162.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.37%)</title><rect x="161" y="292" width="5" height="15" fill="rgb(234,189,9)"/><text x="164.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.37%)</title><rect x="161" y="308" width="5" height="15" fill="rgb(231,87,18)"/><text x="164.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="163" y="324" width="3" height="15" fill="rgb(244,98,44)"/><text x="166.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="163" y="340" width="3" height="15" fill="rgb(253,46,2)"/><text x="166.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="163" y="356" width="3" height="15" fill="rgb(221,105,54)"/><text x="166.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (65 samples, 12.10%)</title><rect x="25" y="180" width="143" height="15" fill="rgb(240,159,33)"/><text x="28.00" y="190.50">&lt;genexpr&gt; (sklearn..</text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="166" y="196" width="2" height="15" fill="rgb(220,84,23)"/><text x="169.00" y="206.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="168" y="180" width="2" height="15" fill="rgb(217,65,20)"/><text x="171.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="168" y="196" width="2" height="15" fill="rgb(228,9,13)"/><text x="171.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (67 samples, 12.48%)</title><rect x="25" y="148" width="147" height="15" fill="rgb(249,45,53)"/><text x="28.00" y="158.50">predict_proba (skl..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (67 samples, 12.48%)</title><rect x="25" y="164" width="147" height="15" fill="rgb(235,9,5)"/><text x="28.00" y="174.50">decision_function ..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="170" y="180" width="2" height="15" fill="rgb(230,212,6)"/><text x="173.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="170" y="196" width="2" height="15" fill="rgb(209,81,26)"/><text x="173.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="170" y="212" width="2" height="15" fill="rgb(215,80,45)"/><text x="173.00" y="222.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (71 samples, 13.22%)</title><rect x="20" y="100" width="157" height="15" fill="rgb(241,20,41)"/><text x="23.00" y="110.50">profile (bench_AdaBo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (70 samples, 13.04%)</title><rect x="23" y="116" width="154" height="15" fill="rgb(229,74,23)"/><text x="26.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (70 samples, 13.04%)</title><rect x="23" y="132" width="154" height="15" fill="rgb(231,143,36)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (2 samples, 0.37%)</title><rect x="172" y="148" width="5" height="15" fill="rgb(232,107,42)"/><text x="175.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.37%)</title><rect x="172" y="164" width="5" height="15" fill="rgb(227,228,6)"/><text x="175.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (2 samples, 0.37%)</title><rect x="172" y="180" width="5" height="15" fill="rgb(214,116,51)"/><text x="175.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="174" y="196" width="3" height="15" fill="rgb(229,207,41)"/><text x="177.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="174" y="212" width="3" height="15" fill="rgb(221,139,45)"/><text x="177.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.19%)</title><rect x="174" y="228" width="3" height="15" fill="rgb(211,75,42)"/><text x="177.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="174" y="244" width="3" height="15" fill="rgb(208,178,32)"/><text x="177.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="174" y="260" width="3" height="15" fill="rgb(246,194,4)"/><text x="177.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.19%)</title><rect x="177" y="148" width="2" height="15" fill="rgb(243,146,7)"/><text x="180.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.19%)</title><rect x="177" y="164" width="2" height="15" fill="rgb(218,148,48)"/><text x="180.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="177" y="180" width="2" height="15" fill="rgb(219,13,40)"/><text x="180.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.19%)</title><rect x="177" y="196" width="2" height="15" fill="rgb(218,216,20)"/><text x="180.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.37%)</title><rect x="181" y="228" width="4" height="15" fill="rgb(248,84,36)"/><text x="184.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.19%)</title><rect x="183" y="244" width="2" height="15" fill="rgb(215,62,35)"/><text x="186.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.19%)</title><rect x="187" y="244" width="3" height="15" fill="rgb(251,165,32)"/><text x="190.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="187" y="260" width="3" height="15" fill="rgb(220,95,8)"/><text x="190.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 1.30%)</title><rect x="181" y="212" width="15" height="15" fill="rgb(210,207,14)"/><text x="184.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.93%)</title><rect x="185" y="228" width="11" height="15" fill="rgb(216,130,43)"/><text x="188.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.56%)</title><rect x="190" y="244" width="6" height="15" fill="rgb(249,17,22)"/><text x="193.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.37%)</title><rect x="192" y="260" width="4" height="15" fill="rgb(214,55,37)"/><text x="195.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.19%)</title><rect x="198" y="244" width="3" height="15" fill="rgb(239,186,29)"/><text x="201.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.37%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(254,86,20)"/><text x="204.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.19%)</title><rect x="205" y="244" width="2" height="15" fill="rgb(209,151,15)"/><text x="208.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="207" y="244" width="2" height="15" fill="rgb(232,97,20)"/><text x="210.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.56%)</title><rect x="209" y="244" width="7" height="15" fill="rgb(226,3,15)"/><text x="212.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.56%)</title><rect x="209" y="260" width="7" height="15" fill="rgb(232,154,28)"/><text x="212.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:188) (3 samples, 0.56%)</title><rect x="209" y="276" width="7" height="15" fill="rgb(226,30,44)"/><text x="212.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="216" y="244" width="2" height="15" fill="rgb(230,198,18)"/><text x="219.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(254,189,17)"/><text x="219.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(219,113,8)"/><text x="219.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="218" y="260" width="2" height="15" fill="rgb(222,103,1)"/><text x="221.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.37%)</title><rect x="218" y="244" width="5" height="15" fill="rgb(227,130,7)"/><text x="221.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.19%)</title><rect x="220" y="260" width="3" height="15" fill="rgb(215,73,39)"/><text x="223.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="231" y="276" width="3" height="15" fill="rgb(240,163,38)"/><text x="234.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.30%)</title><rect x="223" y="244" width="15" height="15" fill="rgb(218,35,46)"/><text x="226.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.12%)</title><rect x="225" y="260" width="13" height="15" fill="rgb(248,193,49)"/><text x="228.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.37%)</title><rect x="234" y="276" width="4" height="15" fill="rgb(247,77,29)"/><text x="237.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.37%)</title><rect x="238" y="260" width="4" height="15" fill="rgb(217,229,16)"/><text x="241.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.19%)</title><rect x="242" y="260" width="3" height="15" fill="rgb(224,38,22)"/><text x="245.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.19%)</title><rect x="245" y="260" width="2" height="15" fill="rgb(250,220,43)"/><text x="248.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.19%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(222,227,31)"/><text x="250.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (26 samples, 4.84%)</title><rect x="196" y="212" width="57" height="15" fill="rgb(212,38,29)"/><text x="199.00" y="222.50">predic..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (26 samples, 4.84%)</title><rect x="196" y="228" width="57" height="15" fill="rgb(211,166,33)"/><text x="199.00" y="238.50">_valid..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.30%)</title><rect x="238" y="244" width="15" height="15" fill="rgb(228,191,46)"/><text x="241.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.37%)</title><rect x="249" y="260" width="4" height="15" fill="rgb(210,114,33)"/><text x="252.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="251" y="276" width="2" height="15" fill="rgb(215,75,23)"/><text x="254.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.19%)</title><rect x="251" y="292" width="2" height="15" fill="rgb(251,199,38)"/><text x="254.00" y="302.50"></text></g><g><title>0x7fac2df5f1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="253" y="276" width="3" height="15" fill="rgb(239,209,26)"/><text x="256.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:210) (1 samples, 0.19%)</title><rect x="256" y="404" width="2" height="15" fill="rgb(242,132,51)"/><text x="259.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.37%)</title><rect x="256" y="356" width="4" height="15" fill="rgb(206,132,2)"/><text x="259.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.37%)</title><rect x="256" y="372" width="4" height="15" fill="rgb(241,121,49)"/><text x="259.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (2 samples, 0.37%)</title><rect x="256" y="388" width="4" height="15" fill="rgb(229,6,42)"/><text x="259.00" y="398.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:215) (1 samples, 0.19%)</title><rect x="258" y="404" width="2" height="15" fill="rgb(207,192,6)"/><text x="261.00" y="414.50"></text></g><g><title>0x7fac2df43d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="256" y="292" width="6" height="15" fill="rgb(245,69,46)"/><text x="259.00" y="302.50"></text></g><g><title>0x7fac2df43666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="256" y="308" width="6" height="15" fill="rgb(227,161,53)"/><text x="259.00" y="318.50"></text></g><g><title>0x7fac2df392fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="256" y="324" width="6" height="15" fill="rgb(233,26,25)"/><text x="259.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.56%)</title><rect x="256" y="340" width="6" height="15" fill="rgb(217,84,0)"/><text x="259.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.19%)</title><rect x="260" y="356" width="2" height="15" fill="rgb(252,217,50)"/><text x="263.00" y="366.50"></text></g><g><title>0x7fac2df37020 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="262" y="308" width="2" height="15" fill="rgb(251,75,38)"/><text x="265.00" y="318.50"></text></g><g><title>0x7fac2df37022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="264" y="308" width="3" height="15" fill="rgb(230,204,11)"/><text x="267.00" y="318.50"></text></g><g><title>0x7fac2df5f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.12%)</title><rect x="256" y="276" width="13" height="15" fill="rgb(246,138,21)"/><text x="259.00" y="286.50"></text></g><g><title>0x7fac2df43e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="262" y="292" width="7" height="15" fill="rgb(237,40,50)"/><text x="265.00" y="302.50"></text></g><g><title>0x7fac2df372bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="267" y="308" width="2" height="15" fill="rgb(213,201,47)"/><text x="270.00" y="318.50"></text></g><g><title>0x7fac2df36bd3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="267" y="324" width="2" height="15" fill="rgb(245,2,40)"/><text x="270.00" y="334.50"></text></g><g><title>0x7fac2df5f456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(234,129,47)"/><text x="272.00" y="286.50"></text></g><g><title>0x7fac2df5f4b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="271" y="276" width="2" height="15" fill="rgb(244,106,38)"/><text x="274.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.19%)</title><rect x="273" y="308" width="2" height="15" fill="rgb(230,117,40)"/><text x="276.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.19%)</title><rect x="273" y="324" width="2" height="15" fill="rgb(229,6,46)"/><text x="276.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.37%)</title><rect x="275" y="308" width="5" height="15" fill="rgb(241,155,9)"/><text x="278.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (2 samples, 0.37%)</title><rect x="275" y="324" width="5" height="15" fill="rgb(209,212,9)"/><text x="278.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.37%)</title><rect x="275" y="340" width="5" height="15" fill="rgb(242,164,15)"/><text x="278.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (2 samples, 0.37%)</title><rect x="275" y="356" width="5" height="15" fill="rgb(214,21,48)"/><text x="278.00" y="366.50"></text></g><g><title>0x7fac5372f600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="278" y="372" width="2" height="15" fill="rgb(231,147,52)"/><text x="281.00" y="382.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 0.74%)</title><rect x="273" y="292" width="9" height="15" fill="rgb(252,97,36)"/><text x="276.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="280" y="308" width="2" height="15" fill="rgb(238,134,11)"/><text x="283.00" y="318.50"></text></g><g><title>0x7fac2df50fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.61%)</title><rect x="253" y="244" width="31" height="15" fill="rgb(221,127,47)"/><text x="256.00" y="254.50">0x..</text></g><g><title>0x7fac2df60405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.61%)</title><rect x="253" y="260" width="31" height="15" fill="rgb(236,21,21)"/><text x="256.00" y="270.50">0x..</text></g><g><title>0x7fac2df5f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.93%)</title><rect x="273" y="276" width="11" height="15" fill="rgb(226,102,40)"/><text x="276.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.19%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(247,179,36)"/><text x="285.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(222,53,11)"/><text x="285.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.19%)</title><rect x="282" y="324" width="2" height="15" fill="rgb(231,56,35)"/><text x="285.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.19%)</title><rect x="282" y="340" width="2" height="15" fill="rgb(230,25,48)"/><text x="285.00" y="350.50"></text></g><g><title>0x7fac5452ddbb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="282" y="356" width="2" height="15" fill="rgb(220,7,47)"/><text x="285.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.19%)</title><rect x="284" y="260" width="2" height="15" fill="rgb(210,209,2)"/><text x="287.00" y="270.50"></text></g><g><title>0x7fac2df5105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="284" y="244" width="5" height="15" fill="rgb(229,192,45)"/><text x="287.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.19%)</title><rect x="286" y="260" width="3" height="15" fill="rgb(246,44,0)"/><text x="289.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.19%)</title><rect x="286" y="276" width="3" height="15" fill="rgb(211,25,41)"/><text x="289.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.19%)</title><rect x="286" y="292" width="3" height="15" fill="rgb(231,33,51)"/><text x="289.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="286" y="308" width="3" height="15" fill="rgb(248,104,49)"/><text x="289.00" y="318.50"></text></g><g><title>0x7fac2df5118f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="289" y="244" width="2" height="15" fill="rgb(249,8,25)"/><text x="292.00" y="254.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.37%)</title><rect x="291" y="260" width="4" height="15" fill="rgb(234,78,19)"/><text x="294.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (2 samples, 0.37%)</title><rect x="291" y="276" width="4" height="15" fill="rgb(240,112,24)"/><text x="294.00" y="286.50"></text></g><g><title>0x7fac54523730 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="291" y="292" width="4" height="15" fill="rgb(210,30,6)"/><text x="294.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (20 samples, 3.72%)</title><rect x="253" y="212" width="44" height="15" fill="rgb(228,198,2)"/><text x="256.00" y="222.50">pred..</text></g><g><title>0x7fac2df51d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 3.72%)</title><rect x="253" y="228" width="44" height="15" fill="rgb(219,124,52)"/><text x="256.00" y="238.50">0x7f..</text></g><g><title>0x7fac2df51328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="291" y="244" width="6" height="15" fill="rgb(249,16,9)"/><text x="294.00" y="254.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.19%)</title><rect x="295" y="260" width="2" height="15" fill="rgb(216,159,20)"/><text x="298.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.19%)</title><rect x="295" y="276" width="2" height="15" fill="rgb(223,78,11)"/><text x="298.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.19%)</title><rect x="295" y="292" width="2" height="15" fill="rgb(223,106,22)"/><text x="298.00" y="302.50"></text></g><g><title>0x7fac5452e120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="304" y="228" width="2" height="15" fill="rgb(249,159,39)"/><text x="307.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.19%)</title><rect x="306" y="356" width="2" height="15" fill="rgb(254,106,17)"/><text x="309.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="308" y="356" width="3" height="15" fill="rgb(234,58,36)"/><text x="311.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.56%)</title><rect x="306" y="276" width="7" height="15" fill="rgb(218,163,29)"/><text x="309.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.56%)</title><rect x="306" y="292" width="7" height="15" fill="rgb(219,13,36)"/><text x="309.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.56%)</title><rect x="306" y="308" width="7" height="15" fill="rgb(226,19,22)"/><text x="309.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.56%)</title><rect x="306" y="324" width="7" height="15" fill="rgb(251,6,52)"/><text x="309.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.56%)</title><rect x="306" y="340" width="7" height="15" fill="rgb(209,104,45)"/><text x="309.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="311" y="356" width="2" height="15" fill="rgb(209,59,53)"/><text x="314.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4441) (1 samples, 0.19%)</title><rect x="313" y="292" width="2" height="15" fill="rgb(228,35,50)"/><text x="316.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="315" y="292" width="2" height="15" fill="rgb(233,142,23)"/><text x="318.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.19%)</title><rect x="317" y="308" width="2" height="15" fill="rgb(239,189,53)"/><text x="320.00" y="318.50"></text></g><g><title>0x7fac5452e1d6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="317" y="324" width="2" height="15" fill="rgb(216,189,9)"/><text x="320.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="319" y="308" width="3" height="15" fill="rgb(251,129,46)"/><text x="322.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="319" y="324" width="3" height="15" fill="rgb(228,76,33)"/><text x="322.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="319" y="340" width="3" height="15" fill="rgb(227,139,17)"/><text x="322.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.19%)</title><rect x="319" y="356" width="3" height="15" fill="rgb(212,27,46)"/><text x="322.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="322" y="356" width="2" height="15" fill="rgb(222,102,31)"/><text x="325.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="322" y="372" width="2" height="15" fill="rgb(233,200,47)"/><text x="325.00" y="382.50"></text></g><g><title>0x7fac544c58b8 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="322" y="388" width="2" height="15" fill="rgb(235,64,44)"/><text x="325.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.37%)</title><rect x="322" y="324" width="4" height="15" fill="rgb(234,168,54)"/><text x="325.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.37%)</title><rect x="322" y="340" width="4" height="15" fill="rgb(212,143,14)"/><text x="325.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.19%)</title><rect x="324" y="356" width="2" height="15" fill="rgb(245,64,46)"/><text x="327.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(232,191,28)"/><text x="327.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.19%)</title><rect x="326" y="356" width="2" height="15" fill="rgb(229,225,51)"/><text x="329.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.37%)</title><rect x="326" y="324" width="4" height="15" fill="rgb(249,28,25)"/><text x="329.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.37%)</title><rect x="326" y="340" width="4" height="15" fill="rgb(218,146,37)"/><text x="329.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="328" y="356" width="2" height="15" fill="rgb(212,138,20)"/><text x="331.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(254,161,7)"/><text x="331.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3899) (1 samples, 0.19%)</title><rect x="328" y="388" width="2" height="15" fill="rgb(246,83,44)"/><text x="331.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="330" y="340" width="3" height="15" fill="rgb(208,141,29)"/><text x="333.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1258) (1 samples, 0.19%)</title><rect x="330" y="356" width="3" height="15" fill="rgb(231,116,13)"/><text x="333.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:262) (1 samples, 0.19%)</title><rect x="333" y="340" width="2" height="15" fill="rgb(236,97,48)"/><text x="336.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (18 samples, 3.35%)</title><rect x="297" y="212" width="40" height="15" fill="rgb(209,125,1)"/><text x="300.00" y="222.50">pre..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 2.61%)</title><rect x="306" y="228" width="31" height="15" fill="rgb(220,126,30)"/><text x="309.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 2.61%)</title><rect x="306" y="244" width="31" height="15" fill="rgb(231,101,50)"/><text x="309.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 2.61%)</title><rect x="306" y="260" width="31" height="15" fill="rgb(235,138,44)"/><text x="309.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.05%)</title><rect x="313" y="276" width="24" height="15" fill="rgb(246,65,34)"/><text x="316.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.68%)</title><rect x="317" y="292" width="20" height="15" fill="rgb(244,199,50)"/><text x="320.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.30%)</title><rect x="322" y="308" width="15" height="15" fill="rgb(205,97,5)"/><text x="325.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.56%)</title><rect x="330" y="324" width="7" height="15" fill="rgb(242,120,26)"/><text x="333.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="335" y="340" width="2" height="15" fill="rgb(224,20,51)"/><text x="338.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="335" y="356" width="2" height="15" fill="rgb(245,97,44)"/><text x="338.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.19%)</title><rect x="339" y="228" width="2" height="15" fill="rgb(254,72,35)"/><text x="342.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:147) (1 samples, 0.19%)</title><rect x="339" y="244" width="2" height="15" fill="rgb(205,115,1)"/><text x="342.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:115) (1 samples, 0.19%)</title><rect x="339" y="260" width="2" height="15" fill="rgb(246,51,14)"/><text x="342.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.19%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(247,174,10)"/><text x="344.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="341" y="260" width="5" height="15" fill="rgb(218,191,31)"/><text x="344.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="344" y="276" width="2" height="15" fill="rgb(251,34,54)"/><text x="347.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="344" y="292" width="2" height="15" fill="rgb(210,15,52)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="344" y="308" width="2" height="15" fill="rgb(231,30,4)"/><text x="347.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.19%)</title><rect x="344" y="324" width="2" height="15" fill="rgb(213,153,46)"/><text x="347.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="344" y="340" width="2" height="15" fill="rgb(240,22,45)"/><text x="347.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="341" y="244" width="7" height="15" fill="rgb(239,207,39)"/><text x="344.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="346" y="260" width="2" height="15" fill="rgb(244,148,16)"/><text x="349.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.19%)</title><rect x="346" y="276" width="2" height="15" fill="rgb(205,75,31)"/><text x="349.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (7 samples, 1.30%)</title><rect x="337" y="212" width="15" height="15" fill="rgb(217,169,9)"/><text x="340.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.93%)</title><rect x="341" y="228" width="11" height="15" fill="rgb(217,60,46)"/><text x="344.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.37%)</title><rect x="348" y="244" width="4" height="15" fill="rgb(237,208,20)"/><text x="351.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="350" y="260" width="2" height="15" fill="rgb(231,60,17)"/><text x="353.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="350" y="276" width="2" height="15" fill="rgb(229,1,29)"/><text x="353.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="350" y="292" width="2" height="15" fill="rgb(238,229,40)"/><text x="353.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="357" y="244" width="2" height="15" fill="rgb(243,2,3)"/><text x="360.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.19%)</title><rect x="357" y="260" width="2" height="15" fill="rgb(250,47,52)"/><text x="360.00" y="270.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.19%)</title><rect x="357" y="276" width="2" height="15" fill="rgb(239,18,49)"/><text x="360.00" y="286.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.19%)</title><rect x="357" y="292" width="2" height="15" fill="rgb(219,180,30)"/><text x="360.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="359" y="244" width="2" height="15" fill="rgb(251,155,24)"/><text x="362.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.19%)</title><rect x="359" y="260" width="2" height="15" fill="rgb(215,58,26)"/><text x="362.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="361" y="244" width="2" height="15" fill="rgb(214,172,24)"/><text x="364.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2019) (1 samples, 0.19%)</title><rect x="361" y="260" width="2" height="15" fill="rgb(230,225,43)"/><text x="364.00" y="270.50"></text></g><g><title>tuple_all_none (ufunc_object.c:1925) (1 samples, 0.19%)</title><rect x="361" y="276" width="2" height="15" fill="rgb(216,177,16)"/><text x="364.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="363" y="244" width="2" height="15" fill="rgb(233,91,16)"/><text x="366.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.19%)</title><rect x="363" y="260" width="2" height="15" fill="rgb(217,198,16)"/><text x="366.00" y="270.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.19%)</title><rect x="363" y="276" width="2" height="15" fill="rgb(220,129,43)"/><text x="366.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="365" y="244" width="3" height="15" fill="rgb(206,141,28)"/><text x="368.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.19%)</title><rect x="368" y="260" width="2" height="15" fill="rgb(235,229,34)"/><text x="371.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.19%)</title><rect x="370" y="276" width="2" height="15" fill="rgb(232,142,4)"/><text x="373.00" y="286.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.19%)</title><rect x="370" y="292" width="2" height="15" fill="rgb(216,153,11)"/><text x="373.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="372" y="276" width="2" height="15" fill="rgb(249,121,7)"/><text x="375.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="372" y="292" width="2" height="15" fill="rgb(236,17,37)"/><text x="375.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="374" y="276" width="2" height="15" fill="rgb(231,136,24)"/><text x="377.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="374" y="292" width="2" height="15" fill="rgb(215,96,19)"/><text x="377.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (90 samples, 16.76%)</title><rect x="181" y="196" width="198" height="15" fill="rgb(239,77,23)"/><text x="184.00" y="206.50">_samme_proba (sklearn/ens..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (12 samples, 2.23%)</title><rect x="352" y="212" width="27" height="15" fill="rgb(226,40,50)"/><text x="355.00" y="222.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.86%)</title><rect x="357" y="228" width="22" height="15" fill="rgb(226,71,51)"/><text x="360.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.93%)</title><rect x="368" y="244" width="11" height="15" fill="rgb(241,186,9)"/><text x="371.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.74%)</title><rect x="370" y="260" width="9" height="15" fill="rgb(250,118,29)"/><text x="373.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="376" y="276" width="3" height="15" fill="rgb(243,221,24)"/><text x="379.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="376" y="292" width="3" height="15" fill="rgb(246,24,49)"/><text x="379.00" y="302.50"></text></g><g><title>0x7fac5450da38 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="376" y="308" width="3" height="15" fill="rgb(213,165,54)"/><text x="379.00" y="318.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.19%)</title><rect x="387" y="212" width="3" height="15" fill="rgb(239,17,27)"/><text x="390.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.19%)</title><rect x="390" y="212" width="2" height="15" fill="rgb(223,182,43)"/><text x="393.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.19%)</title><rect x="392" y="292" width="2" height="15" fill="rgb(236,148,4)"/><text x="395.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="394" y="292" width="2" height="15" fill="rgb(209,124,15)"/><text x="397.00" y="302.50"></text></g><g><title>0x7fac54523e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(221,64,8)"/><text x="397.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.56%)</title><rect x="396" y="292" width="7" height="15" fill="rgb(205,17,53)"/><text x="399.00" y="302.50"></text></g><g><title>0x7fac54523e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="401" y="308" width="2" height="15" fill="rgb(229,142,5)"/><text x="404.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (6 samples, 1.12%)</title><rect x="392" y="228" width="13" height="15" fill="rgb(249,62,12)"/><text x="395.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (6 samples, 1.12%)</title><rect x="392" y="244" width="13" height="15" fill="rgb(223,99,31)"/><text x="395.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (6 samples, 1.12%)</title><rect x="392" y="260" width="13" height="15" fill="rgb(236,34,29)"/><text x="395.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (6 samples, 1.12%)</title><rect x="392" y="276" width="13" height="15" fill="rgb(218,107,42)"/><text x="395.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:82) (1 samples, 0.19%)</title><rect x="403" y="292" width="2" height="15" fill="rgb(220,79,30)"/><text x="406.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.37%)</title><rect x="420" y="308" width="5" height="15" fill="rgb(223,148,34)"/><text x="423.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (2 samples, 0.37%)</title><rect x="420" y="324" width="5" height="15" fill="rgb(212,185,28)"/><text x="423.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.56%)</title><rect x="427" y="324" width="7" height="15" fill="rgb(221,16,17)"/><text x="430.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="431" y="340" width="3" height="15" fill="rgb(211,75,45)"/><text x="434.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="434" y="340" width="2" height="15" fill="rgb(206,140,52)"/><text x="437.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="436" y="420" width="2" height="15" fill="rgb(219,185,28)"/><text x="439.00" y="430.50"></text></g><g><title>0x7fac545eb13a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="436" y="436" width="2" height="15" fill="rgb(207,95,12)"/><text x="439.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.37%)</title><rect x="436" y="356" width="4" height="15" fill="rgb(233,223,23)"/><text x="439.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.37%)</title><rect x="436" y="372" width="4" height="15" fill="rgb(251,174,51)"/><text x="439.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.37%)</title><rect x="436" y="388" width="4" height="15" fill="rgb(219,104,17)"/><text x="439.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.37%)</title><rect x="436" y="404" width="4" height="15" fill="rgb(234,190,19)"/><text x="439.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="438" y="420" width="2" height="15" fill="rgb(207,226,20)"/><text x="441.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.74%)</title><rect x="434" y="324" width="8" height="15" fill="rgb(232,30,33)"/><text x="437.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.56%)</title><rect x="436" y="340" width="6" height="15" fill="rgb(227,74,47)"/><text x="439.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="440" y="356" width="2" height="15" fill="rgb(251,136,17)"/><text x="443.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="440" y="372" width="2" height="15" fill="rgb(224,56,47)"/><text x="443.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="442" y="388" width="3" height="15" fill="rgb(216,11,17)"/><text x="445.00" y="398.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="445" y="420" width="2" height="15" fill="rgb(209,6,13)"/><text x="448.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 0.74%)</title><rect x="442" y="340" width="9" height="15" fill="rgb(207,25,39)"/><text x="445.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.74%)</title><rect x="442" y="356" width="9" height="15" fill="rgb(215,191,34)"/><text x="445.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.74%)</title><rect x="442" y="372" width="9" height="15" fill="rgb(214,200,11)"/><text x="445.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.56%)</title><rect x="445" y="388" width="6" height="15" fill="rgb(253,86,45)"/><text x="448.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.56%)</title><rect x="445" y="404" width="6" height="15" fill="rgb(254,28,15)"/><text x="448.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.37%)</title><rect x="447" y="420" width="4" height="15" fill="rgb(211,1,21)"/><text x="450.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="451" y="356" width="2" height="15" fill="rgb(253,94,38)"/><text x="454.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="451" y="372" width="2" height="15" fill="rgb(231,174,6)"/><text x="454.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1721) (1 samples, 0.19%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(224,183,10)"/><text x="454.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="451" y="340" width="5" height="15" fill="rgb(251,169,1)"/><text x="454.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="453" y="356" width="3" height="15" fill="rgb(220,30,53)"/><text x="456.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1632) (1 samples, 0.19%)</title><rect x="453" y="372" width="3" height="15" fill="rgb(212,136,27)"/><text x="456.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="456" y="356" width="2" height="15" fill="rgb(242,52,6)"/><text x="459.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="456" y="372" width="2" height="15" fill="rgb(218,142,42)"/><text x="459.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="456" y="388" width="2" height="15" fill="rgb(223,175,54)"/><text x="459.00" y="398.50"></text></g><g><title>0x7fac5372ee30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="456" y="404" width="2" height="15" fill="rgb(206,117,38)"/><text x="459.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (16 samples, 2.98%)</title><rect x="425" y="308" width="35" height="15" fill="rgb(236,210,4)"/><text x="428.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (8 samples, 1.49%)</title><rect x="442" y="324" width="18" height="15" fill="rgb(212,172,17)"/><text x="445.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.37%)</title><rect x="456" y="340" width="4" height="15" fill="rgb(249,178,36)"/><text x="459.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="458" y="356" width="2" height="15" fill="rgb(253,138,45)"/><text x="461.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="458" y="372" width="2" height="15" fill="rgb(236,185,26)"/><text x="461.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="460" y="324" width="2" height="15" fill="rgb(235,105,51)"/><text x="463.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(244,225,33)"/><text x="463.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.37%)</title><rect x="464" y="372" width="5" height="15" fill="rgb(231,219,22)"/><text x="467.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="471" y="404" width="2" height="15" fill="rgb(219,166,53)"/><text x="474.00" y="414.50"></text></g><g><title>0x7fac54523757 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="471" y="420" width="2" height="15" fill="rgb(254,225,11)"/><text x="474.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="473" y="436" width="2" height="15" fill="rgb(233,125,54)"/><text x="476.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.49%)</title><rect x="462" y="356" width="18" height="15" fill="rgb(252,49,51)"/><text x="465.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.93%)</title><rect x="469" y="372" width="11" height="15" fill="rgb(254,143,28)"/><text x="472.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.93%)</title><rect x="469" y="388" width="11" height="15" fill="rgb(208,87,7)"/><text x="472.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.56%)</title><rect x="473" y="404" width="7" height="15" fill="rgb(242,21,15)"/><text x="476.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.56%)</title><rect x="473" y="420" width="7" height="15" fill="rgb(250,131,31)"/><text x="476.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.37%)</title><rect x="475" y="436" width="5" height="15" fill="rgb(217,97,20)"/><text x="478.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.37%)</title><rect x="475" y="452" width="5" height="15" fill="rgb(209,210,26)"/><text x="478.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (9 samples, 1.68%)</title><rect x="462" y="324" width="20" height="15" fill="rgb(209,186,48)"/><text x="465.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (9 samples, 1.68%)</title><rect x="462" y="340" width="20" height="15" fill="rgb(252,43,33)"/><text x="465.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.19%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(206,83,19)"/><text x="483.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.19%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(216,59,36)"/><text x="487.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 2.42%)</title><rect x="460" y="308" width="29" height="15" fill="rgb(239,73,39)"/><text x="463.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.56%)</title><rect x="482" y="324" width="7" height="15" fill="rgb(245,204,6)"/><text x="485.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="486" y="340" width="3" height="15" fill="rgb(207,113,1)"/><text x="489.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="486" y="356" width="3" height="15" fill="rgb(243,157,32)"/><text x="489.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="486" y="372" width="3" height="15" fill="rgb(229,227,32)"/><text x="489.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:78) (1 samples, 0.19%)</title><rect x="491" y="324" width="2" height="15" fill="rgb(224,127,49)"/><text x="494.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="502" y="340" width="2" height="15" fill="rgb(205,166,32)"/><text x="505.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="502" y="356" width="2" height="15" fill="rgb(210,56,4)"/><text x="505.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(224,27,19)"/><text x="505.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(237,223,25)"/><text x="505.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="502" y="404" width="2" height="15" fill="rgb(240,79,23)"/><text x="505.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:59) (1 samples, 0.19%)</title><rect x="502" y="420" width="2" height="15" fill="rgb(241,168,27)"/><text x="505.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="504" y="356" width="2" height="15" fill="rgb(224,171,53)"/><text x="507.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="504" y="372" width="2" height="15" fill="rgb(238,43,18)"/><text x="507.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.19%)</title><rect x="504" y="388" width="2" height="15" fill="rgb(234,88,37)"/><text x="507.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:333) (1 samples, 0.19%)</title><rect x="504" y="404" width="2" height="15" fill="rgb(253,37,14)"/><text x="507.00" y="414.50"></text></g><g><title>0x7fac5452ddb3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="504" y="420" width="2" height="15" fill="rgb(243,86,52)"/><text x="507.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="506" y="372" width="2" height="15" fill="rgb(216,179,51)"/><text x="509.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="506" y="388" width="2" height="15" fill="rgb(247,17,51)"/><text x="509.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="506" y="356" width="5" height="15" fill="rgb(224,176,11)"/><text x="509.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="508" y="372" width="3" height="15" fill="rgb(229,222,10)"/><text x="511.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.19%)</title><rect x="508" y="388" width="3" height="15" fill="rgb(231,104,27)"/><text x="511.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1854) (1 samples, 0.19%)</title><rect x="508" y="404" width="3" height="15" fill="rgb(207,223,41)"/><text x="511.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.74%)</title><rect x="504" y="340" width="9" height="15" fill="rgb(219,45,14)"/><text x="507.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.19%)</title><rect x="511" y="356" width="2" height="15" fill="rgb(210,0,38)"/><text x="514.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (62 samples, 11.55%)</title><rect x="379" y="196" width="136" height="15" fill="rgb(243,7,30)"/><text x="382.00" y="206.50">_samme_proba (skl..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (56 samples, 10.43%)</title><rect x="392" y="212" width="123" height="15" fill="rgb(247,189,46)"/><text x="395.00" y="222.50">clip (&lt;__array_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (50 samples, 9.31%)</title><rect x="405" y="228" width="110" height="15" fill="rgb(245,56,50)"/><text x="408.00" y="238.50">array_impleme..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (49 samples, 9.12%)</title><rect x="407" y="244" width="108" height="15" fill="rgb(241,221,33)"/><text x="410.00" y="254.50">clip (numpy/c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (45 samples, 8.38%)</title><rect x="416" y="260" width="99" height="15" fill="rgb(227,215,36)"/><text x="419.00" y="270.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c:2381) (44 samples, 8.19%)</title><rect x="418" y="276" width="97" height="15" fill="rgb(244,154,49)"/><text x="421.00" y="286.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c:108) (44 samples, 8.19%)</title><rect x="418" y="292" width="97" height="15" fill="rgb(243,53,30)"/><text x="421.00" y="302.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py:129) (12 samples, 2.23%)</title><rect x="489" y="308" width="26" height="15" fill="rgb(238,46,19)"/><text x="492.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.86%)</title><rect x="493" y="324" width="22" height="15" fill="rgb(220,50,47)"/><text x="496.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(252,37,9)"/><text x="516.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="515" y="228" width="4" height="15" fill="rgb(254,91,50)"/><text x="518.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.37%)</title><rect x="515" y="244" width="4" height="15" fill="rgb(223,29,27)"/><text x="518.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (2 samples, 0.37%)</title><rect x="515" y="260" width="4" height="15" fill="rgb(232,18,48)"/><text x="518.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (2 samples, 0.37%)</title><rect x="515" y="276" width="4" height="15" fill="rgb(234,204,24)"/><text x="518.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (2 samples, 0.37%)</title><rect x="515" y="292" width="4" height="15" fill="rgb(246,44,38)"/><text x="518.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="517" y="308" width="2" height="15" fill="rgb(222,22,2)"/><text x="520.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1480) (1 samples, 0.19%)</title><rect x="517" y="324" width="2" height="15" fill="rgb(207,40,45)"/><text x="520.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="519" y="276" width="2" height="15" fill="rgb(206,51,17)"/><text x="522.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="519" y="292" width="2" height="15" fill="rgb(239,228,52)"/><text x="522.00" y="302.50"></text></g><g><title>0x7fac537302c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="519" y="308" width="2" height="15" fill="rgb(254,110,17)"/><text x="522.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (4 samples, 0.74%)</title><rect x="515" y="196" width="9" height="15" fill="rgb(239,224,36)"/><text x="518.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.74%)</title><rect x="515" y="212" width="9" height="15" fill="rgb(236,12,42)"/><text x="518.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="519" y="228" width="5" height="15" fill="rgb(217,56,7)"/><text x="522.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.37%)</title><rect x="519" y="244" width="5" height="15" fill="rgb(212,193,13)"/><text x="522.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.37%)</title><rect x="519" y="260" width="5" height="15" fill="rgb(235,119,49)"/><text x="522.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1025) (1 samples, 0.19%)</title><rect x="521" y="276" width="3" height="15" fill="rgb(220,114,35)"/><text x="524.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="532" y="212" width="3" height="15" fill="rgb(223,57,6)"/><text x="535.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="535" y="228" width="2" height="15" fill="rgb(251,86,15)"/><text x="538.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="535" y="244" width="2" height="15" fill="rgb(239,163,10)"/><text x="538.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="535" y="260" width="2" height="15" fill="rgb(221,165,52)"/><text x="538.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.19%)</title><rect x="535" y="276" width="2" height="15" fill="rgb(245,178,42)"/><text x="538.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(206,115,3)"/><text x="540.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="537" y="244" width="4" height="15" fill="rgb(234,128,7)"/><text x="540.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="539" y="260" width="2" height="15" fill="rgb(225,5,54)"/><text x="542.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.19%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(225,82,43)"/><text x="542.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="541" y="244" width="2" height="15" fill="rgb(232,204,14)"/><text x="544.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="541" y="260" width="2" height="15" fill="rgb(232,182,10)"/><text x="544.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="543" y="244" width="3" height="15" fill="rgb(236,58,22)"/><text x="546.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.19%)</title><rect x="543" y="260" width="3" height="15" fill="rgb(246,216,14)"/><text x="546.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.19%)</title><rect x="543" y="276" width="3" height="15" fill="rgb(233,65,34)"/><text x="546.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.19%)</title><rect x="543" y="292" width="3" height="15" fill="rgb(251,76,0)"/><text x="546.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="543" y="308" width="3" height="15" fill="rgb(209,96,36)"/><text x="546.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="543" y="324" width="3" height="15" fill="rgb(223,3,40)"/><text x="546.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="543" y="340" width="3" height="15" fill="rgb(235,227,11)"/><text x="546.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.19%)</title><rect x="543" y="356" width="3" height="15" fill="rgb(209,135,23)"/><text x="546.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="537" y="228" width="11" height="15" fill="rgb(230,58,29)"/><text x="540.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="546" y="244" width="2" height="15" fill="rgb(208,155,8)"/><text x="549.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 1.30%)</title><rect x="535" y="212" width="15" height="15" fill="rgb(209,219,14)"/><text x="538.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="548" y="228" width="2" height="15" fill="rgb(227,159,17)"/><text x="551.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(212,210,17)"/><text x="551.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.19%)</title><rect x="550" y="212" width="2" height="15" fill="rgb(216,100,5)"/><text x="553.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:462) (1 samples, 0.19%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(250,112,1)"/><text x="553.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="552" y="212" width="2" height="15" fill="rgb(241,75,4)"/><text x="555.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="552" y="228" width="2" height="15" fill="rgb(246,165,6)"/><text x="555.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="552" y="244" width="2" height="15" fill="rgb(217,221,15)"/><text x="555.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="552" y="260" width="2" height="15" fill="rgb(247,132,0)"/><text x="555.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="552" y="276" width="2" height="15" fill="rgb(245,196,25)"/><text x="555.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="552" y="292" width="2" height="15" fill="rgb(251,75,33)"/><text x="555.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="557" y="292" width="2" height="15" fill="rgb(217,34,34)"/><text x="560.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="557" y="308" width="2" height="15" fill="rgb(225,57,34)"/><text x="560.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1003) (1 samples, 0.19%)</title><rect x="557" y="324" width="2" height="15" fill="rgb(213,75,4)"/><text x="560.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="559" y="292" width="2" height="15" fill="rgb(217,215,28)"/><text x="562.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="559" y="308" width="2" height="15" fill="rgb(253,200,22)"/><text x="562.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="559" y="324" width="2" height="15" fill="rgb(207,16,33)"/><text x="562.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="559" y="340" width="2" height="15" fill="rgb(225,38,14)"/><text x="562.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(232,146,6)"/><text x="562.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="559" y="372" width="2" height="15" fill="rgb(213,158,34)"/><text x="562.00" y="382.50"></text></g><g><title>0x7fac537302c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="559" y="388" width="2" height="15" fill="rgb(250,32,51)"/><text x="562.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="561" y="292" width="2" height="15" fill="rgb(242,91,24)"/><text x="564.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1660) (1 samples, 0.19%)</title><rect x="561" y="308" width="2" height="15" fill="rgb(244,143,17)"/><text x="564.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.74%)</title><rect x="557" y="276" width="8" height="15" fill="rgb(232,109,50)"/><text x="560.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="563" y="292" width="2" height="15" fill="rgb(226,116,7)"/><text x="566.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.19%)</title><rect x="563" y="308" width="2" height="15" fill="rgb(247,56,11)"/><text x="566.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 1.12%)</title><rect x="554" y="212" width="14" height="15" fill="rgb(244,107,17)"/><text x="557.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="557" y="228" width="11" height="15" fill="rgb(242,45,48)"/><text x="560.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.93%)</title><rect x="557" y="244" width="11" height="15" fill="rgb(205,57,39)"/><text x="560.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.93%)</title><rect x="557" y="260" width="11" height="15" fill="rgb(215,206,21)"/><text x="560.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="565" y="276" width="3" height="15" fill="rgb(251,71,37)"/><text x="568.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="565" y="292" width="3" height="15" fill="rgb(230,196,36)"/><text x="568.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="572" y="260" width="2" height="15" fill="rgb(237,180,32)"/><text x="575.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="572" y="276" width="2" height="15" fill="rgb(235,162,30)"/><text x="575.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="572" y="292" width="2" height="15" fill="rgb(225,198,15)"/><text x="575.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="572" y="308" width="2" height="15" fill="rgb(232,43,2)"/><text x="575.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="572" y="324" width="2" height="15" fill="rgb(223,53,35)"/><text x="575.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="572" y="340" width="2" height="15" fill="rgb(231,67,52)"/><text x="575.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.19%)</title><rect x="574" y="276" width="2" height="15" fill="rgb(231,134,37)"/><text x="577.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="574" y="292" width="2" height="15" fill="rgb(226,131,36)"/><text x="577.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="576" y="292" width="3" height="15" fill="rgb(224,13,35)"/><text x="579.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="576" y="308" width="3" height="15" fill="rgb(218,91,21)"/><text x="579.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="576" y="324" width="3" height="15" fill="rgb(242,56,0)"/><text x="579.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.19%)</title><rect x="576" y="340" width="3" height="15" fill="rgb(221,6,43)"/><text x="579.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.19%)</title><rect x="576" y="356" width="3" height="15" fill="rgb(220,118,24)"/><text x="579.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.19%)</title><rect x="576" y="372" width="3" height="15" fill="rgb(230,144,54)"/><text x="579.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="579" y="308" width="2" height="15" fill="rgb(222,38,13)"/><text x="582.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.19%)</title><rect x="579" y="324" width="2" height="15" fill="rgb(205,72,8)"/><text x="582.00" y="334.50"></text></g><g><title>0x7fac53730710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="579" y="340" width="2" height="15" fill="rgb(251,154,30)"/><text x="582.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (27 samples, 5.03%)</title><rect x="524" y="196" width="59" height="15" fill="rgb(215,150,18)"/><text x="527.00" y="206.50">_samme..</text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.30%)</title><rect x="568" y="212" width="15" height="15" fill="rgb(208,26,7)"/><text x="571.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.30%)</title><rect x="568" y="228" width="15" height="15" fill="rgb(217,195,40)"/><text x="571.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.93%)</title><rect x="572" y="244" width="11" height="15" fill="rgb(222,24,47)"/><text x="575.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.74%)</title><rect x="574" y="260" width="9" height="15" fill="rgb(238,138,34)"/><text x="577.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="576" y="276" width="7" height="15" fill="rgb(245,145,15)"/><text x="579.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.37%)</title><rect x="579" y="292" width="4" height="15" fill="rgb(212,77,13)"/><text x="582.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="581" y="308" width="2" height="15" fill="rgb(240,19,37)"/><text x="584.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="581" y="324" width="2" height="15" fill="rgb(221,152,29)"/><text x="584.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="581" y="340" width="2" height="15" fill="rgb(207,136,54)"/><text x="584.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1049) (1 samples, 0.19%)</title><rect x="581" y="356" width="2" height="15" fill="rgb(219,146,4)"/><text x="584.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="583" y="196" width="2" height="15" fill="rgb(230,134,10)"/><text x="586.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="583" y="212" width="2" height="15" fill="rgb(207,86,2)"/><text x="586.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="583" y="228" width="2" height="15" fill="rgb(229,72,50)"/><text x="586.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (186 samples, 34.64%)</title><rect x="179" y="180" width="408" height="15" fill="rgb(212,138,51)"/><text x="182.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="585" y="196" width="2" height="15" fill="rgb(220,29,1)"/><text x="588.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="585" y="212" width="2" height="15" fill="rgb(219,24,42)"/><text x="588.00" y="222.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (1 samples, 0.19%)</title><rect x="585" y="228" width="2" height="15" fill="rgb(254,56,33)"/><text x="588.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="587" y="212" width="3" height="15" fill="rgb(245,91,15)"/><text x="590.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.19%)</title><rect x="587" y="228" width="3" height="15" fill="rgb(218,2,8)"/><text x="590.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="590" y="212" width="2" height="15" fill="rgb(236,46,16)"/><text x="593.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="590" y="228" width="2" height="15" fill="rgb(240,64,39)"/><text x="593.00" y="238.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (189 samples, 35.20%)</title><rect x="179" y="164" width="415" height="15" fill="rgb(242,155,51)"/><text x="182.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:..</text></g><g><title>array_add (number.c:330) (3 samples, 0.56%)</title><rect x="587" y="180" width="7" height="15" fill="rgb(249,34,28)"/><text x="590.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="587" y="196" width="7" height="15" fill="rgb(229,74,11)"/><text x="590.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="592" y="212" width="2" height="15" fill="rgb(235,177,41)"/><text x="595.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="592" y="228" width="2" height="15" fill="rgb(244,70,54)"/><text x="595.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="592" y="244" width="2" height="15" fill="rgb(228,111,19)"/><text x="595.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="592" y="260" width="2" height="15" fill="rgb(234,211,20)"/><text x="595.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="592" y="276" width="2" height="15" fill="rgb(233,108,31)"/><text x="595.00" y="286.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (190 samples, 35.38%)</title><rect x="179" y="148" width="417" height="15" fill="rgb(247,66,37)"/><text x="182.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:703) (1 samples, 0.19%)</title><rect x="594" y="164" width="2" height="15" fill="rgb(239,109,6)"/><text x="597.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="594" y="180" width="2" height="15" fill="rgb(212,107,47)"/><text x="597.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="594" y="196" width="2" height="15" fill="rgb(212,217,14)"/><text x="597.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (192 samples, 35.75%)</title><rect x="177" y="132" width="421" height="15" fill="rgb(211,65,37)"/><text x="180.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.19%)</title><rect x="596" y="148" width="2" height="15" fill="rgb(246,36,8)"/><text x="599.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:778) (1 samples, 0.19%)</title><rect x="596" y="164" width="2" height="15" fill="rgb(251,165,9)"/><text x="599.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="596" y="180" width="2" height="15" fill="rgb(246,122,54)"/><text x="599.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="596" y="196" width="2" height="15" fill="rgb(237,45,5)"/><text x="599.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1048) (1 samples, 0.19%)</title><rect x="596" y="212" width="2" height="15" fill="rgb(244,117,30)"/><text x="599.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:38) (266 samples, 49.53%)</title><rect x="16" y="52" width="585" height="15" fill="rgb(228,222,41)"/><text x="19.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:37) (266 samples, 49.53%)</title><rect x="16" y="68" width="585" height="15" fill="rgb(243,22,52)"/><text x="19.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (264 samples, 49.16%)</title><rect x="20" y="84" width="581" height="15" fill="rgb(238,219,36)"/><text x="23.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (193 samples, 35.94%)</title><rect x="177" y="100" width="424" height="15" fill="rgb(252,82,26)"/><text x="180.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (193 samples, 35.94%)</title><rect x="177" y="116" width="424" height="15" fill="rgb(236,60,34)"/><text x="180.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="598" y="132" width="3" height="15" fill="rgb(246,180,9)"/><text x="601.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (1 samples, 0.19%)</title><rect x="601" y="148" width="2" height="15" fill="rgb(224,224,29)"/><text x="604.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="601" y="164" width="2" height="15" fill="rgb(225,31,52)"/><text x="604.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="601" y="180" width="2" height="15" fill="rgb(237,210,21)"/><text x="604.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="601" y="196" width="2" height="15" fill="rgb(250,159,41)"/><text x="604.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="601" y="212" width="2" height="15" fill="rgb(210,54,11)"/><text x="604.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="601" y="228" width="2" height="15" fill="rgb(211,168,22)"/><text x="604.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.19%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(248,119,53)"/><text x="604.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(205,96,25)"/><text x="604.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="601" y="276" width="2" height="15" fill="rgb(246,183,24)"/><text x="604.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="601" y="292" width="2" height="15" fill="rgb(214,117,40)"/><text x="604.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="601" y="308" width="2" height="15" fill="rgb(211,127,3)"/><text x="604.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="601" y="324" width="2" height="15" fill="rgb(210,167,50)"/><text x="604.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="601" y="340" width="2" height="15" fill="rgb(224,136,10)"/><text x="604.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="601" y="356" width="2" height="15" fill="rgb(239,141,51)"/><text x="604.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:23) (1 samples, 0.19%)</title><rect x="601" y="372" width="2" height="15" fill="rgb(242,100,52)"/><text x="604.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="601" y="388" width="2" height="15" fill="rgb(220,228,24)"/><text x="604.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="601" y="404" width="2" height="15" fill="rgb(243,86,18)"/><text x="604.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="601" y="420" width="2" height="15" fill="rgb(237,63,1)"/><text x="604.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="601" y="436" width="2" height="15" fill="rgb(208,161,16)"/><text x="604.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="601" y="452" width="2" height="15" fill="rgb(227,73,38)"/><text x="604.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="601" y="468" width="2" height="15" fill="rgb(226,114,26)"/><text x="604.00" y="478.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.19%)</title><rect x="603" y="948" width="2" height="15" fill="rgb(245,106,10)"/><text x="606.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.19%)</title><rect x="603" y="964" width="2" height="15" fill="rgb(244,133,25)"/><text x="606.00" y="974.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.19%)</title><rect x="603" y="980" width="2" height="15" fill="rgb(217,15,27)"/><text x="606.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.37%)</title><rect x="603" y="916" width="4" height="15" fill="rgb(251,26,39)"/><text x="606.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.37%)</title><rect x="603" y="932" width="4" height="15" fill="rgb(214,62,0)"/><text x="606.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="605" y="948" width="2" height="15" fill="rgb(231,102,28)"/><text x="608.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="605" y="964" width="2" height="15" fill="rgb(250,35,27)"/><text x="608.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.56%)</title><rect x="603" y="852" width="6" height="15" fill="rgb(234,187,45)"/><text x="606.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.56%)</title><rect x="603" y="868" width="6" height="15" fill="rgb(227,154,15)"/><text x="606.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.56%)</title><rect x="603" y="884" width="6" height="15" fill="rgb(208,51,7)"/><text x="606.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.56%)</title><rect x="603" y="900" width="6" height="15" fill="rgb(239,189,24)"/><text x="606.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="607" y="916" width="2" height="15" fill="rgb(233,155,26)"/><text x="610.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="607" y="932" width="2" height="15" fill="rgb(238,197,41)"/><text x="610.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="607" y="948" width="2" height="15" fill="rgb(224,75,0)"/><text x="610.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="607" y="964" width="2" height="15" fill="rgb(247,39,21)"/><text x="610.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="607" y="980" width="2" height="15" fill="rgb(235,189,30)"/><text x="610.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.19%)</title><rect x="607" y="996" width="2" height="15" fill="rgb(206,188,40)"/><text x="610.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:351) (1 samples, 0.19%)</title><rect x="607" y="1012" width="2" height="15" fill="rgb(228,163,17)"/><text x="610.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (4 samples, 0.74%)</title><rect x="603" y="148" width="9" height="15" fill="rgb(231,155,9)"/><text x="606.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="164" width="9" height="15" fill="rgb(251,124,29)"/><text x="606.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.74%)</title><rect x="603" y="180" width="9" height="15" fill="rgb(211,21,30)"/><text x="606.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="196" width="9" height="15" fill="rgb(245,76,34)"/><text x="606.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="212" width="9" height="15" fill="rgb(224,203,1)"/><text x="606.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="228" width="9" height="15" fill="rgb(245,202,3)"/><text x="606.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="244" width="9" height="15" fill="rgb(248,206,15)"/><text x="606.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="260" width="9" height="15" fill="rgb(233,89,44)"/><text x="606.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="276" width="9" height="15" fill="rgb(229,196,27)"/><text x="606.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.74%)</title><rect x="603" y="292" width="9" height="15" fill="rgb(249,94,7)"/><text x="606.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="308" width="9" height="15" fill="rgb(231,2,4)"/><text x="606.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="324" width="9" height="15" fill="rgb(219,60,33)"/><text x="606.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="340" width="9" height="15" fill="rgb(241,123,30)"/><text x="606.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="356" width="9" height="15" fill="rgb(205,103,24)"/><text x="606.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="372" width="9" height="15" fill="rgb(213,202,33)"/><text x="606.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.74%)</title><rect x="603" y="388" width="9" height="15" fill="rgb(214,213,54)"/><text x="606.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="404" width="9" height="15" fill="rgb(248,194,13)"/><text x="606.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="420" width="9" height="15" fill="rgb(238,94,10)"/><text x="606.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="436" width="9" height="15" fill="rgb(207,190,54)"/><text x="606.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="452" width="9" height="15" fill="rgb(239,193,6)"/><text x="606.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="468" width="9" height="15" fill="rgb(209,101,34)"/><text x="606.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.74%)</title><rect x="603" y="484" width="9" height="15" fill="rgb(235,217,22)"/><text x="606.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="500" width="9" height="15" fill="rgb(250,48,13)"/><text x="606.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="516" width="9" height="15" fill="rgb(237,54,32)"/><text x="606.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="532" width="9" height="15" fill="rgb(238,15,1)"/><text x="606.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="548" width="9" height="15" fill="rgb(205,119,26)"/><text x="606.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="564" width="9" height="15" fill="rgb(224,61,20)"/><text x="606.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.74%)</title><rect x="603" y="580" width="9" height="15" fill="rgb(254,193,11)"/><text x="606.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="596" width="9" height="15" fill="rgb(209,189,27)"/><text x="606.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.74%)</title><rect x="603" y="612" width="9" height="15" fill="rgb(248,68,32)"/><text x="606.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="628" width="9" height="15" fill="rgb(229,116,49)"/><text x="606.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="644" width="9" height="15" fill="rgb(241,98,18)"/><text x="606.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="660" width="9" height="15" fill="rgb(224,195,6)"/><text x="606.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="676" width="9" height="15" fill="rgb(225,16,24)"/><text x="606.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="692" width="9" height="15" fill="rgb(207,169,19)"/><text x="606.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="708" width="9" height="15" fill="rgb(246,159,48)"/><text x="606.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.74%)</title><rect x="603" y="724" width="9" height="15" fill="rgb(231,161,42)"/><text x="606.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="603" y="740" width="9" height="15" fill="rgb(206,20,41)"/><text x="606.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="603" y="756" width="9" height="15" fill="rgb(241,33,37)"/><text x="606.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="603" y="772" width="9" height="15" fill="rgb(214,213,6)"/><text x="606.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="603" y="788" width="9" height="15" fill="rgb(215,200,4)"/><text x="606.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="603" y="804" width="9" height="15" fill="rgb(249,212,33)"/><text x="606.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.74%)</title><rect x="603" y="820" width="9" height="15" fill="rgb(244,127,11)"/><text x="606.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.74%)</title><rect x="603" y="836" width="9" height="15" fill="rgb(245,1,34)"/><text x="606.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.19%)</title><rect x="609" y="852" width="3" height="15" fill="rgb(248,14,15)"/><text x="612.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="609" y="868" width="3" height="15" fill="rgb(207,42,29)"/><text x="612.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="609" y="884" width="3" height="15" fill="rgb(237,16,26)"/><text x="612.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="609" y="900" width="3" height="15" fill="rgb(212,143,37)"/><text x="612.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="609" y="916" width="3" height="15" fill="rgb(253,221,44)"/><text x="612.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="609" y="932" width="3" height="15" fill="rgb(244,123,28)"/><text x="612.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="609" y="948" width="3" height="15" fill="rgb(215,94,13)"/><text x="612.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="609" y="964" width="3" height="15" fill="rgb(221,76,53)"/><text x="612.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="609" y="980" width="3" height="15" fill="rgb(229,99,29)"/><text x="612.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.19%)</title><rect x="609" y="996" width="3" height="15" fill="rgb(235,29,30)"/><text x="612.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (1 samples, 0.19%)</title><rect x="612" y="148" width="2" height="15" fill="rgb(235,192,21)"/><text x="615.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="612" y="164" width="2" height="15" fill="rgb(218,76,35)"/><text x="615.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="612" y="180" width="2" height="15" fill="rgb(238,88,24)"/><text x="615.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="612" y="196" width="2" height="15" fill="rgb(215,216,38)"/><text x="615.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="612" y="212" width="2" height="15" fill="rgb(247,2,51)"/><text x="615.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="612" y="228" width="2" height="15" fill="rgb(216,159,23)"/><text x="615.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="612" y="244" width="2" height="15" fill="rgb(252,165,5)"/><text x="615.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="612" y="260" width="2" height="15" fill="rgb(211,83,3)"/><text x="615.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="612" y="276" width="2" height="15" fill="rgb(207,114,41)"/><text x="615.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.19%)</title><rect x="612" y="292" width="2" height="15" fill="rgb(231,43,22)"/><text x="615.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="612" y="308" width="2" height="15" fill="rgb(224,67,44)"/><text x="615.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="612" y="324" width="2" height="15" fill="rgb(234,125,33)"/><text x="615.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="612" y="340" width="2" height="15" fill="rgb(244,129,50)"/><text x="615.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="612" y="356" width="2" height="15" fill="rgb(207,78,33)"/><text x="615.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="612" y="372" width="2" height="15" fill="rgb(235,59,0)"/><text x="615.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.19%)</title><rect x="612" y="388" width="2" height="15" fill="rgb(205,19,20)"/><text x="615.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="612" y="404" width="2" height="15" fill="rgb(225,215,46)"/><text x="615.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="612" y="420" width="2" height="15" fill="rgb(237,173,54)"/><text x="615.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="612" y="436" width="2" height="15" fill="rgb(239,208,44)"/><text x="615.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="612" y="452" width="2" height="15" fill="rgb(207,97,8)"/><text x="615.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="612" y="468" width="2" height="15" fill="rgb(214,55,35)"/><text x="615.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.19%)</title><rect x="612" y="484" width="2" height="15" fill="rgb(241,206,4)"/><text x="615.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="612" y="500" width="2" height="15" fill="rgb(245,77,1)"/><text x="615.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="612" y="516" width="2" height="15" fill="rgb(205,219,37)"/><text x="615.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="612" y="532" width="2" height="15" fill="rgb(236,114,39)"/><text x="615.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="612" y="548" width="2" height="15" fill="rgb(244,98,35)"/><text x="615.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="612" y="564" width="2" height="15" fill="rgb(238,178,46)"/><text x="615.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:247) (1 samples, 0.19%)</title><rect x="612" y="580" width="2" height="15" fill="rgb(251,205,13)"/><text x="615.00" y="590.50"></text></g><g><title>filterwarnings (warnings.py:155) (1 samples, 0.19%)</title><rect x="612" y="596" width="2" height="15" fill="rgb(225,196,40)"/><text x="615.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="612" y="612" width="2" height="15" fill="rgb(231,7,39)"/><text x="615.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="612" y="628" width="2" height="15" fill="rgb(212,38,36)"/><text x="615.00" y="638.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.19%)</title><rect x="612" y="644" width="2" height="15" fill="rgb(216,27,28)"/><text x="615.00" y="654.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.19%)</title><rect x="612" y="660" width="2" height="15" fill="rgb(233,98,45)"/><text x="615.00" y="670.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.19%)</title><rect x="612" y="676" width="2" height="15" fill="rgb(242,213,8)"/><text x="615.00" y="686.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.19%)</title><rect x="612" y="692" width="2" height="15" fill="rgb(226,140,21)"/><text x="615.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.19%)</title><rect x="614" y="244" width="2" height="15" fill="rgb(212,201,6)"/><text x="617.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="614" y="260" width="2" height="15" fill="rgb(251,62,3)"/><text x="617.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="614" y="276" width="2" height="15" fill="rgb(239,33,42)"/><text x="617.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="614" y="292" width="2" height="15" fill="rgb(209,174,21)"/><text x="617.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="614" y="308" width="2" height="15" fill="rgb(219,120,23)"/><text x="617.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="614" y="324" width="2" height="15" fill="rgb(216,19,15)"/><text x="617.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.19%)</title><rect x="614" y="340" width="2" height="15" fill="rgb(233,37,1)"/><text x="617.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="614" y="356" width="2" height="15" fill="rgb(221,112,20)"/><text x="617.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="614" y="372" width="2" height="15" fill="rgb(232,184,34)"/><text x="617.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="614" y="388" width="2" height="15" fill="rgb(242,166,14)"/><text x="617.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="614" y="404" width="2" height="15" fill="rgb(206,124,43)"/><text x="617.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="614" y="420" width="2" height="15" fill="rgb(247,158,18)"/><text x="617.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="614" y="436" width="2" height="15" fill="rgb(226,103,45)"/><text x="617.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="614" y="452" width="2" height="15" fill="rgb(239,105,30)"/><text x="617.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="614" y="468" width="2" height="15" fill="rgb(234,89,16)"/><text x="617.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:15) (1 samples, 0.19%)</title><rect x="614" y="484" width="2" height="15" fill="rgb(208,66,19)"/><text x="617.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="614" y="500" width="2" height="15" fill="rgb(222,46,5)"/><text x="617.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="614" y="516" width="2" height="15" fill="rgb(251,71,42)"/><text x="617.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="614" y="532" width="2" height="15" fill="rgb(237,0,17)"/><text x="617.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="614" y="548" width="2" height="15" fill="rgb(240,218,33)"/><text x="617.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.19%)</title><rect x="614" y="564" width="2" height="15" fill="rgb(246,80,7)"/><text x="617.00" y="574.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.19%)</title><rect x="614" y="580" width="2" height="15" fill="rgb(205,148,7)"/><text x="617.00" y="590.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;:53) (1 samples, 0.19%)</title><rect x="614" y="596" width="2" height="15" fill="rgb(229,92,12)"/><text x="617.00" y="606.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.19%)</title><rect x="616" y="628" width="2" height="15" fill="rgb(251,225,47)"/><text x="619.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="644" width="2" height="15" fill="rgb(224,180,19)"/><text x="619.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="660" width="2" height="15" fill="rgb(228,150,32)"/><text x="619.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="676" width="2" height="15" fill="rgb(242,160,43)"/><text x="619.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="616" y="692" width="2" height="15" fill="rgb(239,62,33)"/><text x="619.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="708" width="2" height="15" fill="rgb(209,150,47)"/><text x="619.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.19%)</title><rect x="616" y="724" width="2" height="15" fill="rgb(246,19,13)"/><text x="619.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="740" width="2" height="15" fill="rgb(232,126,6)"/><text x="619.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="756" width="2" height="15" fill="rgb(215,227,24)"/><text x="619.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="772" width="2" height="15" fill="rgb(206,103,3)"/><text x="619.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="616" y="788" width="2" height="15" fill="rgb(226,103,32)"/><text x="619.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="804" width="2" height="15" fill="rgb(239,219,31)"/><text x="619.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.19%)</title><rect x="616" y="820" width="2" height="15" fill="rgb(237,129,53)"/><text x="619.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="836" width="2" height="15" fill="rgb(249,14,9)"/><text x="619.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="852" width="2" height="15" fill="rgb(211,170,49)"/><text x="619.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="868" width="2" height="15" fill="rgb(238,225,24)"/><text x="619.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="884" width="2" height="15" fill="rgb(230,90,42)"/><text x="619.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="900" width="2" height="15" fill="rgb(216,216,8)"/><text x="619.00" y="910.50"></text></g><g><title>0x7fac29a3e40e (?) (1 samples, 0.19%)</title><rect x="616" y="916" width="2" height="15" fill="rgb(220,186,20)"/><text x="619.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="932" width="2" height="15" fill="rgb(242,35,30)"/><text x="619.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="948" width="2" height="15" fill="rgb(219,119,10)"/><text x="619.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="964" width="2" height="15" fill="rgb(221,156,43)"/><text x="619.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="980" width="2" height="15" fill="rgb(217,51,8)"/><text x="619.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="996" width="2" height="15" fill="rgb(228,120,10)"/><text x="619.00" y="1006.50"></text></g><g><title>0x7fac297f7cd2 (?) (1 samples, 0.19%)</title><rect x="616" y="1012" width="2" height="15" fill="rgb(228,13,9)"/><text x="619.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="1028" width="2" height="15" fill="rgb(207,16,36)"/><text x="619.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="1044" width="2" height="15" fill="rgb(254,170,41)"/><text x="619.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="1060" width="2" height="15" fill="rgb(228,50,16)"/><text x="619.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="1076" width="2" height="15" fill="rgb(215,159,45)"/><text x="619.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="1092" width="2" height="15" fill="rgb(215,204,21)"/><text x="619.00" y="1102.50"></text></g><g><title>0x7fac28eed0e5 (?) (1 samples, 0.19%)</title><rect x="616" y="1108" width="2" height="15" fill="rgb(216,65,31)"/><text x="619.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="1124" width="2" height="15" fill="rgb(228,108,1)"/><text x="619.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="1140" width="2" height="15" fill="rgb(251,222,14)"/><text x="619.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="1156" width="2" height="15" fill="rgb(254,5,17)"/><text x="619.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="1172" width="2" height="15" fill="rgb(214,194,16)"/><text x="619.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="1188" width="2" height="15" fill="rgb(222,30,1)"/><text x="619.00" y="1198.50"></text></g><g><title>0x7fac28c71e68 (?) (1 samples, 0.19%)</title><rect x="616" y="1204" width="2" height="15" fill="rgb(241,39,9)"/><text x="619.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="1220" width="2" height="15" fill="rgb(241,188,44)"/><text x="619.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="1236" width="2" height="15" fill="rgb(224,18,47)"/><text x="619.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="1252" width="2" height="15" fill="rgb(218,9,18)"/><text x="619.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="1268" width="2" height="15" fill="rgb(212,116,23)"/><text x="619.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="1284" width="2" height="15" fill="rgb(238,180,29)"/><text x="619.00" y="1294.50"></text></g><g><title>0x7fac28a022fb (?) (1 samples, 0.19%)</title><rect x="616" y="1300" width="2" height="15" fill="rgb(223,98,40)"/><text x="619.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="1316" width="2" height="15" fill="rgb(248,81,11)"/><text x="619.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="1332" width="2" height="15" fill="rgb(225,34,7)"/><text x="619.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="1348" width="2" height="15" fill="rgb(220,120,16)"/><text x="619.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="1364" width="2" height="15" fill="rgb(229,68,17)"/><text x="619.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="1380" width="2" height="15" fill="rgb(231,14,48)"/><text x="619.00" y="1390.50"></text></g><g><title>0x7fac287e6153 (?) (1 samples, 0.19%)</title><rect x="616" y="1396" width="2" height="15" fill="rgb(242,145,9)"/><text x="619.00" y="1406.50"></text></g><g><title>0x7fac287e4c13 (?) (1 samples, 0.19%)</title><rect x="616" y="1412" width="2" height="15" fill="rgb(231,187,2)"/><text x="619.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="616" y="1428" width="2" height="15" fill="rgb(249,113,40)"/><text x="619.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="616" y="1444" width="2" height="15" fill="rgb(242,75,11)"/><text x="619.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="616" y="1460" width="2" height="15" fill="rgb(247,103,1)"/><text x="619.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="616" y="1476" width="2" height="15" fill="rgb(233,51,27)"/><text x="619.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="616" y="1492" width="2" height="15" fill="rgb(225,6,47)"/><text x="619.00" y="1502.50"></text></g><g><title>0x7fac28581181 (?) (1 samples, 0.19%)</title><rect x="616" y="1508" width="2" height="15" fill="rgb(228,10,24)"/><text x="619.00" y="1518.50"></text></g><g><title>0x7fac285841c9 (?) (1 samples, 0.19%)</title><rect x="616" y="1524" width="2" height="15" fill="rgb(221,215,4)"/><text x="619.00" y="1534.50"></text></g><g><title>0x7fac285b0167 (?) (1 samples, 0.19%)</title><rect x="616" y="1540" width="2" height="15" fill="rgb(237,96,33)"/><text x="619.00" y="1550.50"></text></g><g><title>0x7fac285abb64 (?) (1 samples, 0.19%)</title><rect x="616" y="1556" width="2" height="15" fill="rgb(228,168,30)"/><text x="619.00" y="1566.50"></text></g><g><title>0x7fac2858f07b (?) (1 samples, 0.19%)</title><rect x="616" y="1572" width="2" height="15" fill="rgb(242,131,13)"/><text x="619.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.19%)</title><rect x="616" y="1588" width="2" height="15" fill="rgb(215,180,52)"/><text x="619.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.19%)</title><rect x="616" y="1604" width="2" height="15" fill="rgb(245,188,7)"/><text x="619.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.19%)</title><rect x="616" y="1620" width="2" height="15" fill="rgb(244,103,53)"/><text x="619.00" y="1630.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:12) (1 samples, 0.19%)</title><rect x="618" y="1012" width="2" height="15" fill="rgb(227,172,51)"/><text x="621.00" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1020) (1 samples, 0.19%)</title><rect x="618" y="1028" width="2" height="15" fill="rgb(245,17,25)"/><text x="621.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="620" y="1044" width="3" height="15" fill="rgb(215,129,1)"/><text x="623.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="620" y="1060" width="3" height="15" fill="rgb(220,151,21)"/><text x="623.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="620" y="1076" width="3" height="15" fill="rgb(254,5,34)"/><text x="623.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="620" y="1092" width="3" height="15" fill="rgb(207,179,37)"/><text x="623.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.19%)</title><rect x="620" y="1108" width="3" height="15" fill="rgb(240,104,15)"/><text x="623.00" y="1118.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="620" y="1124" width="3" height="15" fill="rgb(240,105,30)"/><text x="623.00" y="1134.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="620" y="1140" width="3" height="15" fill="rgb(215,106,48)"/><text x="623.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.74%)</title><rect x="616" y="532" width="9" height="15" fill="rgb(211,56,17)"/><text x="619.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.74%)</title><rect x="616" y="548" width="9" height="15" fill="rgb(224,217,19)"/><text x="619.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.74%)</title><rect x="616" y="564" width="9" height="15" fill="rgb(209,163,5)"/><text x="619.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.74%)</title><rect x="616" y="580" width="9" height="15" fill="rgb(209,167,31)"/><text x="619.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.74%)</title><rect x="616" y="596" width="9" height="15" fill="rgb(226,210,4)"/><text x="619.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.74%)</title><rect x="616" y="612" width="9" height="15" fill="rgb(237,132,14)"/><text x="619.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.56%)</title><rect x="618" y="628" width="7" height="15" fill="rgb(205,177,25)"/><text x="621.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="618" y="644" width="7" height="15" fill="rgb(205,103,5)"/><text x="621.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="618" y="660" width="7" height="15" fill="rgb(223,169,49)"/><text x="621.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="618" y="676" width="7" height="15" fill="rgb(225,221,17)"/><text x="621.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="618" y="692" width="7" height="15" fill="rgb(217,225,35)"/><text x="621.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="618" y="708" width="7" height="15" fill="rgb(206,143,7)"/><text x="621.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.56%)</title><rect x="618" y="724" width="7" height="15" fill="rgb(220,26,34)"/><text x="621.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="618" y="740" width="7" height="15" fill="rgb(220,78,22)"/><text x="621.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="618" y="756" width="7" height="15" fill="rgb(219,147,14)"/><text x="621.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="618" y="772" width="7" height="15" fill="rgb(237,15,17)"/><text x="621.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="618" y="788" width="7" height="15" fill="rgb(226,55,15)"/><text x="621.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="618" y="804" width="7" height="15" fill="rgb(241,102,43)"/><text x="621.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.56%)</title><rect x="618" y="820" width="7" height="15" fill="rgb(235,13,43)"/><text x="621.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="618" y="836" width="7" height="15" fill="rgb(253,37,2)"/><text x="621.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="618" y="852" width="7" height="15" fill="rgb(229,152,28)"/><text x="621.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="618" y="868" width="7" height="15" fill="rgb(240,18,30)"/><text x="621.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="618" y="884" width="7" height="15" fill="rgb(206,211,45)"/><text x="621.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="618" y="900" width="7" height="15" fill="rgb(213,36,7)"/><text x="621.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.56%)</title><rect x="618" y="916" width="7" height="15" fill="rgb(220,193,38)"/><text x="621.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="618" y="932" width="7" height="15" fill="rgb(234,121,50)"/><text x="621.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="618" y="948" width="7" height="15" fill="rgb(242,179,18)"/><text x="621.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="618" y="964" width="7" height="15" fill="rgb(225,220,40)"/><text x="621.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="618" y="980" width="7" height="15" fill="rgb(241,63,3)"/><text x="621.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="618" y="996" width="7" height="15" fill="rgb(221,109,28)"/><text x="621.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.37%)</title><rect x="620" y="1012" width="5" height="15" fill="rgb(208,10,22)"/><text x="623.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="620" y="1028" width="5" height="15" fill="rgb(248,172,32)"/><text x="623.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="623" y="1044" width="2" height="15" fill="rgb(209,2,40)"/><text x="626.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="623" y="1060" width="2" height="15" fill="rgb(233,107,1)"/><text x="626.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="623" y="1076" width="2" height="15" fill="rgb(234,100,33)"/><text x="626.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="623" y="1092" width="2" height="15" fill="rgb(205,223,18)"/><text x="626.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:66) (1 samples, 0.19%)</title><rect x="623" y="1108" width="2" height="15" fill="rgb(250,53,40)"/><text x="626.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="623" y="1124" width="2" height="15" fill="rgb(211,157,14)"/><text x="626.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="623" y="1140" width="2" height="15" fill="rgb(235,91,14)"/><text x="626.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="623" y="1156" width="2" height="15" fill="rgb(233,135,39)"/><text x="626.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="623" y="1172" width="2" height="15" fill="rgb(250,153,25)"/><text x="626.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="623" y="1188" width="2" height="15" fill="rgb(220,27,50)"/><text x="626.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexing.py:7) (1 samples, 0.19%)</title><rect x="623" y="1204" width="2" height="15" fill="rgb(246,46,37)"/><text x="626.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="623" y="1220" width="2" height="15" fill="rgb(249,37,54)"/><text x="626.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="623" y="1236" width="2" height="15" fill="rgb(215,167,16)"/><text x="626.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="623" y="1252" width="2" height="15" fill="rgb(213,132,21)"/><text x="626.00" y="1262.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="623" y="1268" width="2" height="15" fill="rgb(220,218,28)"/><text x="626.00" y="1278.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="623" y="1284" width="2" height="15" fill="rgb(253,19,35)"/><text x="626.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="623" y="1300" width="2" height="15" fill="rgb(227,206,12)"/><text x="626.00" y="1310.50"></text></g><g><title>0x7fac54505016 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="623" y="1316" width="2" height="15" fill="rgb(244,209,20)"/><text x="626.00" y="1326.50"></text></g><g><title>0x7fac544f1b71 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="623" y="1332" width="2" height="15" fill="rgb(235,8,49)"/><text x="626.00" y="1342.50"></text></g><g><title>_IO_default_xsputn (libc-2.29.so) (1 samples, 0.19%)</title><rect x="623" y="1348" width="2" height="15" fill="rgb(213,212,10)"/><text x="626.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 0.93%)</title><rect x="616" y="436" width="11" height="15" fill="rgb(236,142,13)"/><text x="619.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="616" y="452" width="11" height="15" fill="rgb(231,4,24)"/><text x="619.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="616" y="468" width="11" height="15" fill="rgb(243,180,9)"/><text x="619.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="616" y="484" width="11" height="15" fill="rgb(246,114,27)"/><text x="619.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="616" y="500" width="11" height="15" fill="rgb(250,12,53)"/><text x="619.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="616" y="516" width="11" height="15" fill="rgb(212,100,11)"/><text x="619.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.19%)</title><rect x="625" y="532" width="2" height="15" fill="rgb(235,180,41)"/><text x="628.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="625" y="548" width="2" height="15" fill="rgb(209,201,24)"/><text x="628.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="625" y="564" width="2" height="15" fill="rgb(211,119,16)"/><text x="628.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="625" y="580" width="2" height="15" fill="rgb(216,195,23)"/><text x="628.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="625" y="596" width="2" height="15" fill="rgb(209,12,47)"/><text x="628.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="625" y="612" width="2" height="15" fill="rgb(240,223,37)"/><text x="628.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.19%)</title><rect x="625" y="628" width="2" height="15" fill="rgb(240,211,46)"/><text x="628.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="625" y="644" width="2" height="15" fill="rgb(249,213,40)"/><text x="628.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="625" y="660" width="2" height="15" fill="rgb(245,162,48)"/><text x="628.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="625" y="676" width="2" height="15" fill="rgb(244,97,40)"/><text x="628.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="625" y="692" width="2" height="15" fill="rgb(219,102,31)"/><text x="628.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="625" y="708" width="2" height="15" fill="rgb(228,66,5)"/><text x="628.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="625" y="724" width="2" height="15" fill="rgb(222,57,25)"/><text x="628.00" y="734.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="625" y="740" width="2" height="15" fill="rgb(227,36,16)"/><text x="628.00" y="750.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="625" y="756" width="2" height="15" fill="rgb(228,107,26)"/><text x="628.00" y="766.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:4) (13 samples, 2.42%)</title><rect x="601" y="52" width="28" height="15" fill="rgb(228,182,49)"/><text x="604.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 2.42%)</title><rect x="601" y="68" width="28" height="15" fill="rgb(247,125,1)"/><text x="604.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 2.42%)</title><rect x="601" y="84" width="28" height="15" fill="rgb(235,161,25)"/><text x="604.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 2.42%)</title><rect x="601" y="100" width="28" height="15" fill="rgb(248,86,23)"/><text x="604.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 2.42%)</title><rect x="601" y="116" width="28" height="15" fill="rgb(220,36,31)"/><text x="604.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 2.42%)</title><rect x="601" y="132" width="28" height="15" fill="rgb(240,42,53)"/><text x="604.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (7 samples, 1.30%)</title><rect x="614" y="148" width="15" height="15" fill="rgb(216,53,30)"/><text x="617.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.30%)</title><rect x="614" y="164" width="15" height="15" fill="rgb(244,192,12)"/><text x="617.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.30%)</title><rect x="614" y="180" width="15" height="15" fill="rgb(243,167,16)"/><text x="617.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.30%)</title><rect x="614" y="196" width="15" height="15" fill="rgb(225,229,24)"/><text x="617.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.30%)</title><rect x="614" y="212" width="15" height="15" fill="rgb(239,42,6)"/><text x="617.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.30%)</title><rect x="614" y="228" width="15" height="15" fill="rgb(208,6,45)"/><text x="617.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.12%)</title><rect x="616" y="244" width="13" height="15" fill="rgb(225,13,52)"/><text x="619.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.12%)</title><rect x="616" y="260" width="13" height="15" fill="rgb(209,166,25)"/><text x="619.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.12%)</title><rect x="616" y="276" width="13" height="15" fill="rgb(235,143,38)"/><text x="619.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.12%)</title><rect x="616" y="292" width="13" height="15" fill="rgb(252,38,45)"/><text x="619.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.12%)</title><rect x="616" y="308" width="13" height="15" fill="rgb(239,56,44)"/><text x="619.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.12%)</title><rect x="616" y="324" width="13" height="15" fill="rgb(243,193,28)"/><text x="619.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.12%)</title><rect x="616" y="340" width="13" height="15" fill="rgb(205,203,27)"/><text x="619.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.12%)</title><rect x="616" y="356" width="13" height="15" fill="rgb(242,67,3)"/><text x="619.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.12%)</title><rect x="616" y="372" width="13" height="15" fill="rgb(244,178,0)"/><text x="619.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.12%)</title><rect x="616" y="388" width="13" height="15" fill="rgb(253,17,7)"/><text x="619.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.12%)</title><rect x="616" y="404" width="13" height="15" fill="rgb(209,154,21)"/><text x="619.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.12%)</title><rect x="616" y="420" width="13" height="15" fill="rgb(240,55,50)"/><text x="619.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.19%)</title><rect x="627" y="436" width="2" height="15" fill="rgb(242,95,51)"/><text x="630.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="627" y="452" width="2" height="15" fill="rgb(218,28,54)"/><text x="630.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="627" y="468" width="2" height="15" fill="rgb(231,60,4)"/><text x="630.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="627" y="484" width="2" height="15" fill="rgb(212,207,42)"/><text x="630.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="627" y="500" width="2" height="15" fill="rgb(233,219,36)"/><text x="630.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="627" y="516" width="2" height="15" fill="rgb(229,208,44)"/><text x="630.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="627" y="532" width="2" height="15" fill="rgb(243,48,24)"/><text x="630.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="627" y="548" width="2" height="15" fill="rgb(205,226,21)"/><text x="630.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="627" y="564" width="2" height="15" fill="rgb(230,133,31)"/><text x="630.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.19%)</title><rect x="627" y="580" width="2" height="15" fill="rgb(241,213,53)"/><text x="630.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="627" y="596" width="2" height="15" fill="rgb(210,90,40)"/><text x="630.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="627" y="612" width="2" height="15" fill="rgb(235,81,15)"/><text x="630.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="627" y="628" width="2" height="15" fill="rgb(213,84,35)"/><text x="630.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="627" y="644" width="2" height="15" fill="rgb(250,174,30)"/><text x="630.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="627" y="660" width="2" height="15" fill="rgb(224,160,51)"/><text x="630.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (1 samples, 0.19%)</title><rect x="627" y="676" width="2" height="15" fill="rgb(206,184,54)"/><text x="630.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="627" y="692" width="2" height="15" fill="rgb(250,184,18)"/><text x="630.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="627" y="708" width="2" height="15" fill="rgb(226,19,50)"/><text x="630.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="627" y="724" width="2" height="15" fill="rgb(248,172,38)"/><text x="630.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="627" y="740" width="2" height="15" fill="rgb(252,113,21)"/><text x="630.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="627" y="756" width="2" height="15" fill="rgb(236,13,24)"/><text x="630.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py:50) (1 samples, 0.19%)</title><rect x="627" y="772" width="2" height="15" fill="rgb(219,146,26)"/><text x="630.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="627" y="788" width="2" height="15" fill="rgb(225,96,6)"/><text x="630.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="627" y="804" width="2" height="15" fill="rgb(243,42,24)"/><text x="630.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="627" y="820" width="2" height="15" fill="rgb(251,46,37)"/><text x="630.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="627" y="836" width="2" height="15" fill="rgb(222,186,19)"/><text x="630.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="627" y="852" width="2" height="15" fill="rgb(222,163,49)"/><text x="630.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="627" y="868" width="2" height="15" fill="rgb(223,95,39)"/><text x="630.00" y="878.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (1 samples, 0.19%)</title><rect x="629" y="84" width="2" height="15" fill="rgb(209,14,20)"/><text x="632.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="629" y="100" width="2" height="15" fill="rgb(252,209,21)"/><text x="632.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.19%)</title><rect x="629" y="116" width="2" height="15" fill="rgb(233,2,19)"/><text x="632.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.19%)</title><rect x="629" y="132" width="2" height="15" fill="rgb(253,200,36)"/><text x="632.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.19%)</title><rect x="629" y="148" width="2" height="15" fill="rgb(206,50,0)"/><text x="632.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.19%)</title><rect x="629" y="164" width="2" height="15" fill="rgb(208,37,53)"/><text x="632.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.19%)</title><rect x="629" y="180" width="2" height="15" fill="rgb(237,14,32)"/><text x="632.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.19%)</title><rect x="629" y="196" width="2" height="15" fill="rgb(225,51,33)"/><text x="632.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:62) (1 samples, 0.19%)</title><rect x="629" y="212" width="2" height="15" fill="rgb(246,151,25)"/><text x="632.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.19%)</title><rect x="629" y="228" width="2" height="15" fill="rgb(214,88,12)"/><text x="632.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.19%)</title><rect x="629" y="244" width="2" height="15" fill="rgb(221,24,49)"/><text x="632.00" y="254.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="631" y="164" width="3" height="15" fill="rgb(245,72,13)"/><text x="634.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="638" y="180" width="2" height="15" fill="rgb(217,176,21)"/><text x="641.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.93%)</title><rect x="640" y="180" width="11" height="15" fill="rgb(246,229,30)"/><text x="643.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="658" y="260" width="2" height="15" fill="rgb(216,88,19)"/><text x="661.00" y="270.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:294) (1 samples, 0.19%)</title><rect x="658" y="276" width="2" height="15" fill="rgb(229,144,50)"/><text x="661.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="660" y="260" width="2" height="15" fill="rgb(247,34,39)"/><text x="663.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.19%)</title><rect x="660" y="276" width="2" height="15" fill="rgb(225,79,31)"/><text x="663.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (4 samples, 0.74%)</title><rect x="656" y="228" width="8" height="15" fill="rgb(245,145,8)"/><text x="659.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="658" y="244" width="6" height="15" fill="rgb(251,221,3)"/><text x="661.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="662" y="260" width="2" height="15" fill="rgb(234,213,46)"/><text x="665.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="662" y="276" width="2" height="15" fill="rgb(208,206,12)"/><text x="665.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.19%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(245,96,16)"/><text x="665.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1601) (1 samples, 0.19%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(243,31,26)"/><text x="665.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c:73) (1 samples, 0.19%)</title><rect x="671" y="388" width="2" height="15" fill="rgb(227,152,34)"/><text x="674.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.37%)</title><rect x="671" y="356" width="4" height="15" fill="rgb(235,23,5)"/><text x="674.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.37%)</title><rect x="671" y="372" width="4" height="15" fill="rgb(236,154,41)"/><text x="674.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="673" y="388" width="2" height="15" fill="rgb(241,50,30)"/><text x="676.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="673" y="404" width="2" height="15" fill="rgb(213,6,9)"/><text x="676.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="673" y="420" width="2" height="15" fill="rgb(220,82,40)"/><text x="676.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="673" y="436" width="2" height="15" fill="rgb(243,71,44)"/><text x="676.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="673" y="452" width="2" height="15" fill="rgb(210,60,35)"/><text x="676.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="673" y="468" width="2" height="15" fill="rgb(218,91,5)"/><text x="676.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="673" y="484" width="2" height="15" fill="rgb(216,171,21)"/><text x="676.00" y="494.50"></text></g><g><title>0x7fac5450f78d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="673" y="500" width="2" height="15" fill="rgb(246,226,45)"/><text x="676.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (11 samples, 2.05%)</title><rect x="653" y="196" width="25" height="15" fill="rgb(224,43,24)"/><text x="656.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (11 samples, 2.05%)</title><rect x="653" y="212" width="25" height="15" fill="rgb(228,13,53)"/><text x="656.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (6 samples, 1.12%)</title><rect x="664" y="228" width="14" height="15" fill="rgb(223,26,43)"/><text x="667.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.93%)</title><rect x="667" y="244" width="11" height="15" fill="rgb(220,179,31)"/><text x="670.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.74%)</title><rect x="669" y="260" width="9" height="15" fill="rgb(211,200,10)"/><text x="672.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 0.56%)</title><rect x="671" y="276" width="7" height="15" fill="rgb(252,66,54)"/><text x="674.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.56%)</title><rect x="671" y="292" width="7" height="15" fill="rgb(227,216,54)"/><text x="674.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.56%)</title><rect x="671" y="308" width="7" height="15" fill="rgb(229,124,46)"/><text x="674.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.56%)</title><rect x="671" y="324" width="7" height="15" fill="rgb(246,78,49)"/><text x="674.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.56%)</title><rect x="671" y="340" width="7" height="15" fill="rgb(220,58,24)"/><text x="674.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="675" y="356" width="3" height="15" fill="rgb(212,141,16)"/><text x="678.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:698) (1 samples, 0.19%)</title><rect x="675" y="372" width="3" height="15" fill="rgb(233,209,23)"/><text x="678.00" y="382.50"></text></g><g><title>0x7fac1506b422 (?) (1 samples, 0.19%)</title><rect x="678" y="244" width="2" height="15" fill="rgb(218,35,32)"/><text x="681.00" y="254.50"></text></g><g><title>0x7fac1507189e (?) (1 samples, 0.19%)</title><rect x="678" y="260" width="2" height="15" fill="rgb(213,115,21)"/><text x="681.00" y="270.50"></text></g><g><title>0x7fac1507174f (?) (1 samples, 0.19%)</title><rect x="678" y="276" width="2" height="15" fill="rgb(205,118,25)"/><text x="681.00" y="286.50"></text></g><g><title>0x7fac15077a3a (?) (1 samples, 0.19%)</title><rect x="678" y="292" width="2" height="15" fill="rgb(248,44,53)"/><text x="681.00" y="302.50"></text></g><g><title>0x7fac1e4d3ab9 (?) (1 samples, 0.19%)</title><rect x="678" y="308" width="2" height="15" fill="rgb(235,97,40)"/><text x="681.00" y="318.50"></text></g><g><title>0x7fac1e4d4eab (?) (1 samples, 0.19%)</title><rect x="678" y="324" width="2" height="15" fill="rgb(210,201,28)"/><text x="681.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.19%)</title><rect x="680" y="276" width="2" height="15" fill="rgb(225,157,34)"/><text x="683.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.19%)</title><rect x="680" y="292" width="2" height="15" fill="rgb(252,71,6)"/><text x="683.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.19%)</title><rect x="680" y="308" width="2" height="15" fill="rgb(215,151,46)"/><text x="683.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.19%)</title><rect x="680" y="324" width="2" height="15" fill="rgb(236,222,38)"/><text x="683.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.19%)</title><rect x="680" y="340" width="2" height="15" fill="rgb(243,1,22)"/><text x="683.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.19%)</title><rect x="680" y="356" width="2" height="15" fill="rgb(209,28,41)"/><text x="683.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.19%)</title><rect x="680" y="372" width="2" height="15" fill="rgb(241,217,49)"/><text x="683.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.19%)</title><rect x="680" y="388" width="2" height="15" fill="rgb(226,160,26)"/><text x="683.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.19%)</title><rect x="680" y="404" width="2" height="15" fill="rgb(241,110,21)"/><text x="683.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="680" y="420" width="2" height="15" fill="rgb(225,130,15)"/><text x="683.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="680" y="436" width="2" height="15" fill="rgb(225,13,37)"/><text x="683.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="680" y="452" width="2" height="15" fill="rgb(249,189,4)"/><text x="683.00" y="462.50"></text></g><g><title>0x7fac1e4d4ea9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="682" y="468" width="2" height="15" fill="rgb(217,171,45)"/><text x="685.00" y="478.50"></text></g><g><title>0x7fac1e4d4eab (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="684" y="468" width="2" height="15" fill="rgb(224,29,44)"/><text x="687.00" y="478.50"></text></g><g><title>0x7fac1e4d3ab9 (libgomp.so.1.0.0) (6 samples, 1.12%)</title><rect x="682" y="452" width="13" height="15" fill="rgb(233,71,39)"/><text x="685.00" y="462.50"></text></g><g><title>0x7fac1e4d4ead (libgomp.so.1.0.0) (4 samples, 0.74%)</title><rect x="686" y="468" width="9" height="15" fill="rgb(235,74,51)"/><text x="689.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (9 samples, 1.68%)</title><rect x="678" y="196" width="19" height="15" fill="rgb(243,91,14)"/><text x="681.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 1.68%)</title><rect x="678" y="212" width="19" height="15" fill="rgb(254,82,39)"/><text x="681.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (9 samples, 1.68%)</title><rect x="678" y="228" width="19" height="15" fill="rgb(207,4,10)"/><text x="681.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (8 samples, 1.49%)</title><rect x="680" y="244" width="17" height="15" fill="rgb(247,115,8)"/><text x="683.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (8 samples, 1.49%)</title><rect x="680" y="260" width="17" height="15" fill="rgb(232,151,3)"/><text x="683.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (7 samples, 1.30%)</title><rect x="682" y="276" width="15" height="15" fill="rgb(224,163,47)"/><text x="685.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (7 samples, 1.30%)</title><rect x="682" y="292" width="15" height="15" fill="rgb(209,121,44)"/><text x="685.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (7 samples, 1.30%)</title><rect x="682" y="308" width="15" height="15" fill="rgb(239,84,54)"/><text x="685.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (7 samples, 1.30%)</title><rect x="682" y="324" width="15" height="15" fill="rgb(249,26,12)"/><text x="685.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (7 samples, 1.30%)</title><rect x="682" y="340" width="15" height="15" fill="rgb(228,127,12)"/><text x="685.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (7 samples, 1.30%)</title><rect x="682" y="356" width="15" height="15" fill="rgb(231,151,22)"/><text x="685.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (7 samples, 1.30%)</title><rect x="682" y="372" width="15" height="15" fill="rgb(219,128,37)"/><text x="685.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (7 samples, 1.30%)</title><rect x="682" y="388" width="15" height="15" fill="rgb(247,197,48)"/><text x="685.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (7 samples, 1.30%)</title><rect x="682" y="404" width="15" height="15" fill="rgb(234,160,36)"/><text x="685.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (7 samples, 1.30%)</title><rect x="682" y="420" width="15" height="15" fill="rgb(207,123,53)"/><text x="685.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (7 samples, 1.30%)</title><rect x="682" y="436" width="15" height="15" fill="rgb(229,7,52)"/><text x="685.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="695" y="452" width="2" height="15" fill="rgb(228,5,11)"/><text x="698.00" y="462.50"></text></g><g><title>0x7fac1e4d2daa (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="695" y="468" width="2" height="15" fill="rgb(206,42,54)"/><text x="698.00" y="478.50"></text></g><g><title>0x7fac1e4d4cfd (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="695" y="484" width="2" height="15" fill="rgb(207,129,53)"/><text x="698.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.19%)</title><rect x="697" y="228" width="2" height="15" fill="rgb(209,170,3)"/><text x="700.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="699" y="228" width="3" height="15" fill="rgb(233,75,19)"/><text x="702.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="704" y="244" width="2" height="15" fill="rgb(221,141,6)"/><text x="707.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="704" y="260" width="2" height="15" fill="rgb(214,154,44)"/><text x="707.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="704" y="276" width="2" height="15" fill="rgb(245,64,20)"/><text x="707.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="704" y="292" width="2" height="15" fill="rgb(244,159,54)"/><text x="707.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="704" y="308" width="2" height="15" fill="rgb(236,97,5)"/><text x="707.00" y="318.50"></text></g><g><title>0x7fac545eb130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="704" y="324" width="2" height="15" fill="rgb(240,212,32)"/><text x="707.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.37%)</title><rect x="706" y="260" width="4" height="15" fill="rgb(252,151,17)"/><text x="709.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.19%)</title><rect x="708" y="276" width="2" height="15" fill="rgb(217,99,45)"/><text x="711.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.19%)</title><rect x="708" y="292" width="2" height="15" fill="rgb(224,162,49)"/><text x="711.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="710" y="292" width="3" height="15" fill="rgb(211,223,48)"/><text x="713.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="710" y="308" width="3" height="15" fill="rgb(247,172,50)"/><text x="713.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.19%)</title><rect x="710" y="324" width="3" height="15" fill="rgb(245,220,18)"/><text x="713.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="713" y="292" width="2" height="15" fill="rgb(224,28,24)"/><text x="716.00" y="302.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="713" y="308" width="2" height="15" fill="rgb(227,78,43)"/><text x="716.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="710" y="276" width="7" height="15" fill="rgb(245,121,19)"/><text x="713.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="715" y="292" width="2" height="15" fill="rgb(241,144,17)"/><text x="718.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="715" y="308" width="2" height="15" fill="rgb(226,108,52)"/><text x="718.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.12%)</title><rect x="706" y="244" width="13" height="15" fill="rgb(230,49,22)"/><text x="709.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.74%)</title><rect x="710" y="260" width="9" height="15" fill="rgb(224,120,44)"/><text x="713.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.19%)</title><rect x="717" y="276" width="2" height="15" fill="rgb(249,93,46)"/><text x="720.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (9 samples, 1.68%)</title><rect x="702" y="228" width="19" height="15" fill="rgb(251,32,37)"/><text x="705.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="719" y="244" width="2" height="15" fill="rgb(207,104,13)"/><text x="722.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="719" y="260" width="2" height="15" fill="rgb(210,14,48)"/><text x="722.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="721" y="260" width="3" height="15" fill="rgb(233,201,43)"/><text x="724.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.19%)</title><rect x="721" y="276" width="3" height="15" fill="rgb(223,55,13)"/><text x="724.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="724" y="292" width="2" height="15" fill="rgb(214,22,50)"/><text x="727.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="724" y="308" width="2" height="15" fill="rgb(250,211,2)"/><text x="727.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="724" y="324" width="2" height="15" fill="rgb(210,198,39)"/><text x="727.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="724" y="340" width="2" height="15" fill="rgb(212,164,8)"/><text x="727.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="724" y="356" width="2" height="15" fill="rgb(250,179,50)"/><text x="727.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="724" y="372" width="2" height="15" fill="rgb(213,95,18)"/><text x="727.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="724" y="388" width="2" height="15" fill="rgb(240,91,18)"/><text x="727.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (14 samples, 2.61%)</title><rect x="697" y="196" width="31" height="15" fill="rgb(216,191,2)"/><text x="700.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (14 samples, 2.61%)</title><rect x="697" y="212" width="31" height="15" fill="rgb(233,186,9)"/><text x="700.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.56%)</title><rect x="721" y="228" width="7" height="15" fill="rgb(246,109,33)"/><text x="724.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="721" y="244" width="7" height="15" fill="rgb(243,53,45)"/><text x="724.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="724" y="260" width="4" height="15" fill="rgb(223,128,4)"/><text x="727.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="724" y="276" width="4" height="15" fill="rgb(244,229,1)"/><text x="727.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="726" y="292" width="2" height="15" fill="rgb(229,145,44)"/><text x="729.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="726" y="308" width="2" height="15" fill="rgb(236,137,14)"/><text x="729.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:246) (1 samples, 0.19%)</title><rect x="726" y="324" width="2" height="15" fill="rgb(251,126,7)"/><text x="729.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_subtract_FLOAT (simd.inc.src:778) (1 samples, 0.19%)</title><rect x="726" y="340" width="2" height="15" fill="rgb(227,29,13)"/><text x="729.00" y="350.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="728" y="228" width="2" height="15" fill="rgb(210,191,39)"/><text x="731.00" y="238.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="737" y="340" width="2" height="15" fill="rgb(217,67,45)"/><text x="740.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(247,179,8)"/><text x="740.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.74%)</title><rect x="735" y="324" width="8" height="15" fill="rgb(209,176,37)"/><text x="738.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.37%)</title><rect x="739" y="340" width="4" height="15" fill="rgb(221,46,36)"/><text x="742.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="746" y="340" width="2" height="15" fill="rgb(237,197,47)"/><text x="749.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="746" y="356" width="2" height="15" fill="rgb(205,169,3)"/><text x="749.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="748" y="340" width="2" height="15" fill="rgb(232,117,22)"/><text x="751.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="748" y="356" width="2" height="15" fill="rgb(216,14,39)"/><text x="751.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="748" y="372" width="2" height="15" fill="rgb(226,159,54)"/><text x="751.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="748" y="388" width="2" height="15" fill="rgb(213,182,50)"/><text x="751.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(214,184,0)"/><text x="753.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="750" y="388" width="2" height="15" fill="rgb(208,215,54)"/><text x="753.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.19%)</title><rect x="750" y="404" width="2" height="15" fill="rgb(242,82,16)"/><text x="753.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.19%)</title><rect x="750" y="420" width="2" height="15" fill="rgb(227,143,45)"/><text x="753.00" y="430.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.19%)</title><rect x="752" y="404" width="2" height="15" fill="rgb(250,84,24)"/><text x="755.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 1.12%)</title><rect x="743" y="324" width="14" height="15" fill="rgb(235,218,27)"/><text x="746.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.56%)</title><rect x="750" y="340" width="7" height="15" fill="rgb(207,95,54)"/><text x="753.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="750" y="356" width="7" height="15" fill="rgb(209,189,29)"/><text x="753.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="752" y="372" width="5" height="15" fill="rgb(234,44,40)"/><text x="755.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.37%)</title><rect x="752" y="388" width="5" height="15" fill="rgb(244,101,14)"/><text x="755.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="754" y="404" width="3" height="15" fill="rgb(209,109,11)"/><text x="757.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="754" y="420" width="3" height="15" fill="rgb(222,52,33)"/><text x="757.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.19%)</title><rect x="754" y="436" width="3" height="15" fill="rgb(243,52,16)"/><text x="757.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="754" y="452" width="3" height="15" fill="rgb(231,65,35)"/><text x="757.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:124) (1 samples, 0.19%)</title><rect x="757" y="324" width="2" height="15" fill="rgb(211,36,42)"/><text x="760.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="759" y="372" width="2" height="15" fill="rgb(240,66,5)"/><text x="762.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="759" y="388" width="2" height="15" fill="rgb(238,215,10)"/><text x="762.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="761" y="404" width="2" height="15" fill="rgb(243,224,35)"/><text x="764.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="761" y="420" width="2" height="15" fill="rgb(249,37,51)"/><text x="764.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="761" y="436" width="2" height="15" fill="rgb(247,44,26)"/><text x="764.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1069) (1 samples, 0.19%)</title><rect x="761" y="452" width="2" height="15" fill="rgb(245,81,7)"/><text x="764.00" y="462.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.19%)</title><rect x="761" y="468" width="2" height="15" fill="rgb(220,155,40)"/><text x="764.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="763" y="404" width="2" height="15" fill="rgb(251,226,13)"/><text x="766.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="763" y="420" width="2" height="15" fill="rgb(246,227,15)"/><text x="766.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="763" y="436" width="2" height="15" fill="rgb(235,200,3)"/><text x="766.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="763" y="452" width="2" height="15" fill="rgb(236,198,37)"/><text x="766.00" y="462.50"></text></g><g><title>0x7fac5450eb12 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="763" y="468" width="2" height="15" fill="rgb(212,87,51)"/><text x="766.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (18 samples, 3.35%)</title><rect x="728" y="212" width="40" height="15" fill="rgb(218,39,24)"/><text x="731.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 3.17%)</title><rect x="730" y="228" width="38" height="15" fill="rgb(222,125,21)"/><text x="733.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 3.17%)</title><rect x="730" y="244" width="38" height="15" fill="rgb(227,157,33)"/><text x="733.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (16 samples, 2.98%)</title><rect x="732" y="260" width="36" height="15" fill="rgb(206,99,40)"/><text x="735.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (15 samples, 2.79%)</title><rect x="735" y="276" width="33" height="15" fill="rgb(252,24,4)"/><text x="738.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (15 samples, 2.79%)</title><rect x="735" y="292" width="33" height="15" fill="rgb(245,6,14)"/><text x="738.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 2.79%)</title><rect x="735" y="308" width="33" height="15" fill="rgb(249,184,53)"/><text x="738.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (4 samples, 0.74%)</title><rect x="759" y="324" width="9" height="15" fill="rgb(212,162,23)"/><text x="762.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.74%)</title><rect x="759" y="340" width="9" height="15" fill="rgb(240,16,43)"/><text x="762.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.74%)</title><rect x="759" y="356" width="9" height="15" fill="rgb(252,49,10)"/><text x="762.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="761" y="372" width="7" height="15" fill="rgb(226,39,10)"/><text x="764.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="761" y="388" width="7" height="15" fill="rgb(246,8,43)"/><text x="764.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="765" y="404" width="3" height="15" fill="rgb(244,96,13)"/><text x="768.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="765" y="420" width="3" height="15" fill="rgb(227,44,4)"/><text x="768.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.19%)</title><rect x="765" y="436" width="3" height="15" fill="rgb(230,37,5)"/><text x="768.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1197) (1 samples, 0.19%)</title><rect x="765" y="452" width="3" height="15" fill="rgb(227,7,42)"/><text x="768.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (54 samples, 10.06%)</title><rect x="651" y="180" width="119" height="15" fill="rgb(254,87,8)"/><text x="654.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (19 samples, 3.54%)</title><rect x="728" y="196" width="42" height="15" fill="rgb(254,148,5)"/><text x="731.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.19%)</title><rect x="768" y="212" width="2" height="15" fill="rgb(205,166,24)"/><text x="771.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.19%)</title><rect x="768" y="228" width="2" height="15" fill="rgb(217,77,34)"/><text x="771.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 0.74%)</title><rect x="770" y="180" width="9" height="15" fill="rgb(211,181,29)"/><text x="773.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.74%)</title><rect x="779" y="180" width="8" height="15" fill="rgb(207,87,22)"/><text x="782.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (72 samples, 13.41%)</title><rect x="634" y="164" width="158" height="15" fill="rgb(218,182,26)"/><text x="637.00" y="174.50">_run_sequence_runtim..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.37%)</title><rect x="787" y="180" width="5" height="15" fill="rgb(224,110,2)"/><text x="790.00" y="190.50"></text></g><g><title>0x7fac5450d9d3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="792" y="228" width="2" height="15" fill="rgb(224,152,47)"/><text x="795.00" y="238.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (75 samples, 13.97%)</title><rect x="631" y="100" width="165" height="15" fill="rgb(247,70,18)"/><text x="634.00" y="110.50">profile (bench_AdaBoo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (75 samples, 13.97%)</title><rect x="631" y="116" width="165" height="15" fill="rgb(205,129,33)"/><text x="634.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (75 samples, 13.97%)</title><rect x="631" y="132" width="165" height="15" fill="rgb(210,185,30)"/><text x="634.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (75 samples, 13.97%)</title><rect x="631" y="148" width="165" height="15" fill="rgb(225,219,28)"/><text x="634.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.37%)</title><rect x="792" y="164" width="4" height="15" fill="rgb(250,117,7)"/><text x="795.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.37%)</title><rect x="792" y="180" width="4" height="15" fill="rgb(249,38,10)"/><text x="795.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.37%)</title><rect x="792" y="196" width="4" height="15" fill="rgb(245,148,20)"/><text x="795.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (2 samples, 0.37%)</title><rect x="792" y="212" width="4" height="15" fill="rgb(217,40,25)"/><text x="795.00" y="222.50"></text></g><g><title>0x7fac5450dd07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="794" y="228" width="2" height="15" fill="rgb(222,210,8)"/><text x="797.00" y="238.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.19%)</title><rect x="798" y="164" width="3" height="15" fill="rgb(208,89,37)"/><text x="801.00" y="174.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="798" y="180" width="3" height="15" fill="rgb(226,95,40)"/><text x="801.00" y="190.50"></text></g><g><title>0x7fac5450ee07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="798" y="196" width="3" height="15" fill="rgb(211,216,46)"/><text x="801.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="801" y="164" width="2" height="15" fill="rgb(249,73,17)"/><text x="804.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 1.68%)</title><rect x="816" y="180" width="20" height="15" fill="rgb(241,12,22)"/><text x="819.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.19%)</title><rect x="834" y="196" width="2" height="15" fill="rgb(235,47,34)"/><text x="837.00" y="206.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.19%)</title><rect x="860" y="244" width="2" height="15" fill="rgb(209,220,1)"/><text x="863.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="860" y="260" width="2" height="15" fill="rgb(227,146,12)"/><text x="863.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.19%)</title><rect x="860" y="276" width="2" height="15" fill="rgb(233,115,16)"/><text x="863.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.37%)</title><rect x="860" y="212" width="4" height="15" fill="rgb(224,40,6)"/><text x="863.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.37%)</title><rect x="860" y="228" width="4" height="15" fill="rgb(249,176,1)"/><text x="863.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.19%)</title><rect x="862" y="244" width="2" height="15" fill="rgb(230,168,24)"/><text x="865.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="862" y="260" width="2" height="15" fill="rgb(240,91,7)"/><text x="865.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.19%)</title><rect x="862" y="276" width="2" height="15" fill="rgb(222,224,19)"/><text x="865.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:801) (1 samples, 0.19%)</title><rect x="862" y="292" width="2" height="15" fill="rgb(238,156,45)"/><text x="865.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:123) (1 samples, 0.19%)</title><rect x="862" y="308" width="2" height="15" fill="rgb(230,65,5)"/><text x="865.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.19%)</title><rect x="862" y="324" width="2" height="15" fill="rgb(219,146,33)"/><text x="865.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.19%)</title><rect x="864" y="228" width="2" height="15" fill="rgb(234,73,12)"/><text x="867.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.19%)</title><rect x="864" y="244" width="2" height="15" fill="rgb(233,158,10)"/><text x="867.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.37%)</title><rect x="864" y="212" width="5" height="15" fill="rgb(212,194,46)"/><text x="867.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="866" y="228" width="3" height="15" fill="rgb(250,66,9)"/><text x="869.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="866" y="244" width="3" height="15" fill="rgb(247,211,8)"/><text x="869.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.19%)</title><rect x="866" y="260" width="3" height="15" fill="rgb(210,173,8)"/><text x="869.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="866" y="276" width="3" height="15" fill="rgb(226,97,15)"/><text x="869.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.19%)</title><rect x="866" y="292" width="3" height="15" fill="rgb(227,68,6)"/><text x="869.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.12%)</title><rect x="858" y="196" width="13" height="15" fill="rgb(247,109,44)"/><text x="861.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="869" y="212" width="2" height="15" fill="rgb(209,35,6)"/><text x="872.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="869" y="228" width="2" height="15" fill="rgb(245,27,11)"/><text x="872.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="869" y="244" width="2" height="15" fill="rgb(247,144,46)"/><text x="872.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="869" y="260" width="2" height="15" fill="rgb(251,133,32)"/><text x="872.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="869" y="276" width="2" height="15" fill="rgb(242,133,15)"/><text x="872.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.19%)</title><rect x="869" y="292" width="2" height="15" fill="rgb(219,158,28)"/><text x="872.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.19%)</title><rect x="869" y="308" width="2" height="15" fill="rgb(206,185,19)"/><text x="872.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.19%)</title><rect x="871" y="196" width="2" height="15" fill="rgb(232,93,39)"/><text x="874.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.19%)</title><rect x="871" y="212" width="2" height="15" fill="rgb(236,183,21)"/><text x="874.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.19%)</title><rect x="871" y="228" width="2" height="15" fill="rgb(216,118,42)"/><text x="874.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.19%)</title><rect x="871" y="244" width="2" height="15" fill="rgb(249,152,3)"/><text x="874.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.19%)</title><rect x="871" y="260" width="2" height="15" fill="rgb(230,17,27)"/><text x="874.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="871" y="276" width="2" height="15" fill="rgb(221,40,43)"/><text x="874.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="871" y="292" width="2" height="15" fill="rgb(251,72,37)"/><text x="874.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.19%)</title><rect x="871" y="308" width="2" height="15" fill="rgb(206,30,31)"/><text x="874.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="882" y="244" width="2" height="15" fill="rgb(222,198,53)"/><text x="885.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="882" y="260" width="2" height="15" fill="rgb(245,106,43)"/><text x="885.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="882" y="276" width="2" height="15" fill="rgb(227,145,15)"/><text x="885.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="882" y="292" width="2" height="15" fill="rgb(208,215,38)"/><text x="885.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="884" y="276" width="2" height="15" fill="rgb(214,209,43)"/><text x="887.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.19%)</title><rect x="884" y="292" width="2" height="15" fill="rgb(221,141,51)"/><text x="887.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="884" y="260" width="4" height="15" fill="rgb(218,147,22)"/><text x="887.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="886" y="276" width="2" height="15" fill="rgb(252,22,47)"/><text x="889.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.19%)</title><rect x="886" y="292" width="2" height="15" fill="rgb(225,164,20)"/><text x="889.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="888" y="260" width="3" height="15" fill="rgb(238,204,4)"/><text x="891.00" y="270.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.19%)</title><rect x="888" y="276" width="3" height="15" fill="rgb(224,62,0)"/><text x="891.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (6 samples, 1.12%)</title><rect x="880" y="228" width="13" height="15" fill="rgb(227,174,19)"/><text x="883.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.74%)</title><rect x="884" y="244" width="9" height="15" fill="rgb(205,140,29)"/><text x="887.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="891" y="260" width="2" height="15" fill="rgb(208,191,50)"/><text x="894.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.19%)</title><rect x="891" y="276" width="2" height="15" fill="rgb(209,208,15)"/><text x="894.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:28) (1 samples, 0.19%)</title><rect x="893" y="228" width="2" height="15" fill="rgb(227,120,47)"/><text x="896.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="899" y="244" width="3" height="15" fill="rgb(220,17,18)"/><text x="902.00" y="254.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.19%)</title><rect x="904" y="276" width="2" height="15" fill="rgb(245,30,29)"/><text x="907.00" y="286.50"></text></g><g><title>0x7fac5452e14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="915" y="308" width="2" height="15" fill="rgb(247,190,16)"/><text x="918.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.74%)</title><rect x="910" y="292" width="9" height="15" fill="rgb(253,204,48)"/><text x="913.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="917" y="308" width="2" height="15" fill="rgb(238,83,35)"/><text x="920.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="921" y="308" width="3" height="15" fill="rgb(228,114,4)"/><text x="924.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="921" y="324" width="3" height="15" fill="rgb(212,157,6)"/><text x="924.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="921" y="340" width="3" height="15" fill="rgb(215,52,23)"/><text x="924.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="921" y="356" width="3" height="15" fill="rgb(250,61,48)"/><text x="924.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="921" y="372" width="3" height="15" fill="rgb(217,126,3)"/><text x="924.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="921" y="388" width="3" height="15" fill="rgb(246,168,3)"/><text x="924.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4556) (1 samples, 0.19%)</title><rect x="924" y="324" width="2" height="15" fill="rgb(206,149,8)"/><text x="927.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.19%)</title><rect x="926" y="324" width="2" height="15" fill="rgb(247,195,11)"/><text x="929.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.19%)</title><rect x="926" y="340" width="2" height="15" fill="rgb(212,124,53)"/><text x="929.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.19%)</title><rect x="928" y="340" width="2" height="15" fill="rgb(208,8,2)"/><text x="931.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.19%)</title><rect x="928" y="356" width="2" height="15" fill="rgb(216,44,22)"/><text x="931.00" y="366.50"></text></g><g><title>_extract_pyvals (extobj.c:203) (1 samples, 0.19%)</title><rect x="928" y="372" width="2" height="15" fill="rgb(232,44,10)"/><text x="931.00" y="382.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.19%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(231,89,40)"/><text x="933.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.37%)</title><rect x="930" y="340" width="5" height="15" fill="rgb(225,111,10)"/><text x="933.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.37%)</title><rect x="930" y="356" width="5" height="15" fill="rgb(246,75,16)"/><text x="933.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.19%)</title><rect x="932" y="372" width="3" height="15" fill="rgb(229,99,45)"/><text x="935.00" y="382.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.19%)</title><rect x="932" y="388" width="3" height="15" fill="rgb(223,9,51)"/><text x="935.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.37%)</title><rect x="935" y="356" width="4" height="15" fill="rgb(229,201,38)"/><text x="938.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.37%)</title><rect x="935" y="372" width="4" height="15" fill="rgb(208,103,25)"/><text x="938.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.37%)</title><rect x="935" y="388" width="4" height="15" fill="rgb(246,79,23)"/><text x="938.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.37%)</title><rect x="935" y="404" width="4" height="15" fill="rgb(211,1,17)"/><text x="938.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.37%)</title><rect x="935" y="420" width="4" height="15" fill="rgb(220,82,6)"/><text x="938.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.37%)</title><rect x="935" y="436" width="4" height="15" fill="rgb(231,128,49)"/><text x="938.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.37%)</title><rect x="935" y="452" width="4" height="15" fill="rgb(232,42,5)"/><text x="938.00" y="462.50"></text></g><g><title>0x7fac537305b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="937" y="468" width="2" height="15" fill="rgb(240,4,26)"/><text x="940.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.19%)</title><rect x="939" y="372" width="2" height="15" fill="rgb(233,133,10)"/><text x="942.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.19%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(230,141,13)"/><text x="944.00" y="398.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:954) (1 samples, 0.19%)</title><rect x="941" y="404" width="2" height="15" fill="rgb(236,59,27)"/><text x="944.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.56%)</title><rect x="939" y="356" width="7" height="15" fill="rgb(234,224,54)"/><text x="942.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.37%)</title><rect x="941" y="372" width="5" height="15" fill="rgb(236,141,11)"/><text x="944.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="943" y="388" width="3" height="15" fill="rgb(253,77,5)"/><text x="946.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="943" y="404" width="3" height="15" fill="rgb(236,12,18)"/><text x="946.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3498) (1 samples, 0.19%)</title><rect x="943" y="420" width="3" height="15" fill="rgb(242,163,27)"/><text x="946.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (34 samples, 6.33%)</title><rect x="873" y="196" width="75" height="15" fill="rgb(246,51,51)"/><text x="876.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 5.96%)</title><rect x="877" y="212" width="71" height="15" fill="rgb(237,92,33)"/><text x="880.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (24 samples, 4.47%)</title><rect x="895" y="228" width="53" height="15" fill="rgb(243,134,12)"/><text x="898.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (21 samples, 3.91%)</title><rect x="902" y="244" width="46" height="15" fill="rgb(213,106,22)"/><text x="905.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 3.72%)</title><rect x="904" y="260" width="44" height="15" fill="rgb(227,207,46)"/><text x="907.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (19 samples, 3.54%)</title><rect x="906" y="276" width="42" height="15" fill="rgb(209,91,15)"/><text x="909.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (13 samples, 2.42%)</title><rect x="919" y="292" width="29" height="15" fill="rgb(246,199,17)"/><text x="922.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.05%)</title><rect x="924" y="308" width="24" height="15" fill="rgb(242,209,28)"/><text x="927.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.68%)</title><rect x="928" y="324" width="20" height="15" fill="rgb(219,222,32)"/><text x="931.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.12%)</title><rect x="935" y="340" width="13" height="15" fill="rgb(223,97,22)"/><text x="938.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="946" y="356" width="2" height="15" fill="rgb(245,112,26)"/><text x="949.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="946" y="372" width="2" height="15" fill="rgb(236,39,4)"/><text x="949.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="946" y="388" width="2" height="15" fill="rgb(229,95,43)"/><text x="949.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="946" y="404" width="2" height="15" fill="rgb(221,77,27)"/><text x="949.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="946" y="420" width="2" height="15" fill="rgb(205,226,28)"/><text x="949.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (3 samples, 0.56%)</title><rect x="948" y="196" width="6" height="15" fill="rgb(207,79,11)"/><text x="951.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.19%)</title><rect x="952" y="212" width="2" height="15" fill="rgb(208,117,38)"/><text x="955.00" y="222.50"></text></g><g><title>0x7fac1e4d4ea0 (libgomp.so.1.0.0) (2 samples, 0.37%)</title><rect x="954" y="468" width="5" height="15" fill="rgb(224,88,48)"/><text x="957.00" y="478.50"></text></g><g><title>0x7fac1e4d4ea9 (libgomp.so.1.0.0) (6 samples, 1.12%)</title><rect x="959" y="468" width="13" height="15" fill="rgb(211,205,19)"/><text x="962.00" y="478.50"></text></g><g><title>0x7fac1e4d4eab (libgomp.so.1.0.0) (6 samples, 1.12%)</title><rect x="972" y="468" width="13" height="15" fill="rgb(248,87,4)"/><text x="975.00" y="478.50"></text></g><g><title>0x7fac1e4d3ab9 (libgomp.so.1.0.0) (17 samples, 3.17%)</title><rect x="954" y="452" width="38" height="15" fill="rgb(236,9,36)"/><text x="957.00" y="462.50">0x7..</text></g><g><title>0x7fac1e4d4ead (libgomp.so.1.0.0) (3 samples, 0.56%)</title><rect x="985" y="468" width="7" height="15" fill="rgb(240,78,39)"/><text x="988.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 3.35%)</title><rect x="954" y="196" width="40" height="15" fill="rgb(246,76,21)"/><text x="957.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.35%)</title><rect x="954" y="212" width="40" height="15" fill="rgb(250,2,10)"/><text x="957.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (18 samples, 3.35%)</title><rect x="954" y="228" width="40" height="15" fill="rgb(237,82,28)"/><text x="957.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (18 samples, 3.35%)</title><rect x="954" y="244" width="40" height="15" fill="rgb(247,223,27)"/><text x="957.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (18 samples, 3.35%)</title><rect x="954" y="260" width="40" height="15" fill="rgb(224,30,47)"/><text x="957.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (18 samples, 3.35%)</title><rect x="954" y="276" width="40" height="15" fill="rgb(252,119,27)"/><text x="957.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (18 samples, 3.35%)</title><rect x="954" y="292" width="40" height="15" fill="rgb(230,70,25)"/><text x="957.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (18 samples, 3.35%)</title><rect x="954" y="308" width="40" height="15" fill="rgb(242,184,8)"/><text x="957.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (18 samples, 3.35%)</title><rect x="954" y="324" width="40" height="15" fill="rgb(208,32,51)"/><text x="957.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (18 samples, 3.35%)</title><rect x="954" y="340" width="40" height="15" fill="rgb(254,97,40)"/><text x="957.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (18 samples, 3.35%)</title><rect x="954" y="356" width="40" height="15" fill="rgb(228,49,23)"/><text x="957.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (18 samples, 3.35%)</title><rect x="954" y="372" width="40" height="15" fill="rgb(224,2,35)"/><text x="957.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (18 samples, 3.35%)</title><rect x="954" y="388" width="40" height="15" fill="rgb(208,46,16)"/><text x="957.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (18 samples, 3.35%)</title><rect x="954" y="404" width="40" height="15" fill="rgb(240,75,7)"/><text x="957.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (18 samples, 3.35%)</title><rect x="954" y="420" width="40" height="15" fill="rgb(250,207,45)"/><text x="957.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (18 samples, 3.35%)</title><rect x="954" y="436" width="40" height="15" fill="rgb(245,25,20)"/><text x="957.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="992" y="452" width="2" height="15" fill="rgb(247,76,14)"/><text x="995.00" y="462.50"></text></g><g><title>0x7fac1e4d2daa (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="992" y="468" width="2" height="15" fill="rgb(240,131,11)"/><text x="995.00" y="478.50"></text></g><g><title>0x7fac1e4d4cfb (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="992" y="484" width="2" height="15" fill="rgb(205,78,0)"/><text x="995.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (3 samples, 0.56%)</title><rect x="998" y="228" width="7" height="15" fill="rgb(246,65,29)"/><text x="1001.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="1005" y="228" width="2" height="15" fill="rgb(223,83,35)"/><text x="1008.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.19%)</title><rect x="1007" y="276" width="2" height="15" fill="rgb(246,20,0)"/><text x="1010.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.56%)</title><rect x="1007" y="244" width="7" height="15" fill="rgb(226,180,4)"/><text x="1010.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.56%)</title><rect x="1007" y="260" width="7" height="15" fill="rgb(224,18,39)"/><text x="1010.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.37%)</title><rect x="1009" y="276" width="5" height="15" fill="rgb(249,41,46)"/><text x="1012.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.37%)</title><rect x="1009" y="292" width="5" height="15" fill="rgb(254,119,48)"/><text x="1012.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="1012" y="308" width="2" height="15" fill="rgb(209,10,44)"/><text x="1015.00" y="318.50"></text></g><g><title>0x7fac545eb130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(246,41,38)"/><text x="1015.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="1014" y="276" width="2" height="15" fill="rgb(230,50,11)"/><text x="1017.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.19%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(238,19,31)"/><text x="1017.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.37%)</title><rect x="1014" y="260" width="4" height="15" fill="rgb(227,226,37)"/><text x="1017.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1245) (1 samples, 0.19%)</title><rect x="1016" y="276" width="2" height="15" fill="rgb(214,159,15)"/><text x="1019.00" y="286.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c:1034) (1 samples, 0.19%)</title><rect x="1018" y="276" width="2" height="15" fill="rgb(250,42,26)"/><text x="1021.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="1018" y="260" width="4" height="15" fill="rgb(230,207,16)"/><text x="1021.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="1020" y="276" width="2" height="15" fill="rgb(225,91,36)"/><text x="1023.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.19%)</title><rect x="1020" y="292" width="2" height="15" fill="rgb(220,96,15)"/><text x="1023.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.19%)</title><rect x="1020" y="308" width="2" height="15" fill="rgb(231,210,21)"/><text x="1023.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="1020" y="324" width="2" height="15" fill="rgb(219,229,8)"/><text x="1023.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="1022" y="308" width="3" height="15" fill="rgb(247,67,19)"/><text x="1025.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="1022" y="324" width="3" height="15" fill="rgb(216,183,12)"/><text x="1025.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.19%)</title><rect x="1022" y="340" width="3" height="15" fill="rgb(239,45,8)"/><text x="1025.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (2 samples, 0.37%)</title><rect x="1025" y="324" width="4" height="15" fill="rgb(249,181,12)"/><text x="1028.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 0.74%)</title><rect x="1025" y="308" width="8" height="15" fill="rgb(218,63,0)"/><text x="1028.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (2 samples, 0.37%)</title><rect x="1029" y="324" width="4" height="15" fill="rgb(254,178,49)"/><text x="1032.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (2 samples, 0.37%)</title><rect x="1029" y="340" width="4" height="15" fill="rgb(243,205,18)"/><text x="1032.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="1031" y="356" width="2" height="15" fill="rgb(232,193,41)"/><text x="1034.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (6 samples, 1.12%)</title><rect x="1022" y="292" width="14" height="15" fill="rgb(224,134,39)"/><text x="1025.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="1033" y="308" width="3" height="15" fill="rgb(220,226,40)"/><text x="1036.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1659) (1 samples, 0.19%)</title><rect x="1033" y="324" width="3" height="15" fill="rgb(236,21,29)"/><text x="1036.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.30%)</title><rect x="1022" y="276" width="16" height="15" fill="rgb(223,30,39)"/><text x="1025.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="1036" y="292" width="2" height="15" fill="rgb(214,123,44)"/><text x="1039.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="1036" y="308" width="2" height="15" fill="rgb(224,174,8)"/><text x="1039.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.19%)</title><rect x="1036" y="324" width="2" height="15" fill="rgb(234,8,12)"/><text x="1039.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.23%)</title><rect x="1014" y="244" width="26" height="15" fill="rgb(249,172,42)"/><text x="1017.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.49%)</title><rect x="1022" y="260" width="18" height="15" fill="rgb(239,129,29)"/><text x="1025.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="1038" y="276" width="2" height="15" fill="rgb(234,95,42)"/><text x="1041.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="1038" y="292" width="2" height="15" fill="rgb(227,132,11)"/><text x="1041.00" y="302.50"></text></g><g><title>0x7fac5372fe80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1038" y="308" width="2" height="15" fill="rgb(244,67,8)"/><text x="1041.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="1040" y="260" width="2" height="15" fill="rgb(219,53,17)"/><text x="1043.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (17 samples, 3.17%)</title><rect x="1007" y="228" width="37" height="15" fill="rgb(219,35,46)"/><text x="1010.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.37%)</title><rect x="1040" y="244" width="4" height="15" fill="rgb(227,213,39)"/><text x="1043.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.19%)</title><rect x="1042" y="260" width="2" height="15" fill="rgb(232,32,45)"/><text x="1045.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="1044" y="260" width="3" height="15" fill="rgb(251,148,47)"/><text x="1047.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.19%)</title><rect x="1044" y="276" width="3" height="15" fill="rgb(229,34,16)"/><text x="1047.00" y="286.50"></text></g><g><title>0x7fac5452e14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1044" y="292" width="3" height="15" fill="rgb(232,227,26)"/><text x="1047.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.19%)</title><rect x="1047" y="308" width="2" height="15" fill="rgb(226,178,38)"/><text x="1050.00" y="318.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.19%)</title><rect x="1047" y="324" width="2" height="15" fill="rgb(208,157,49)"/><text x="1050.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.19%)</title><rect x="1047" y="340" width="2" height="15" fill="rgb(218,67,44)"/><text x="1050.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="1047" y="292" width="4" height="15" fill="rgb(237,87,15)"/><text x="1050.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="1049" y="308" width="2" height="15" fill="rgb(234,91,15)"/><text x="1052.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.19%)</title><rect x="1049" y="324" width="2" height="15" fill="rgb(215,26,10)"/><text x="1052.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="1047" y="260" width="6" height="15" fill="rgb(246,82,19)"/><text x="1050.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="1047" y="276" width="6" height="15" fill="rgb(251,28,34)"/><text x="1050.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1051" y="292" width="2" height="15" fill="rgb(249,85,22)"/><text x="1054.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="1051" y="308" width="2" height="15" fill="rgb(252,56,7)"/><text x="1054.00" y="318.50"></text></g><g><title>0x7fac5372fe10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1051" y="324" width="2" height="15" fill="rgb(244,49,2)"/><text x="1054.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.93%)</title><rect x="1044" y="228" width="11" height="15" fill="rgb(231,158,40)"/><text x="1047.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="1044" y="244" width="11" height="15" fill="rgb(244,169,19)"/><text x="1047.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="1053" y="260" width="2" height="15" fill="rgb(242,108,19)"/><text x="1056.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:304) (1 samples, 0.19%)</title><rect x="1053" y="276" width="2" height="15" fill="rgb(237,103,35)"/><text x="1056.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (29 samples, 5.40%)</title><rect x="994" y="196" width="64" height="15" fill="rgb(229,229,48)"/><text x="997.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (28 samples, 5.21%)</title><rect x="996" y="212" width="62" height="15" fill="rgb(212,34,42)"/><text x="999.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:19) (1 samples, 0.19%)</title><rect x="1055" y="228" width="3" height="15" fill="rgb(224,70,15)"/><text x="1058.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.19%)</title><rect x="1055" y="244" width="3" height="15" fill="rgb(249,202,10)"/><text x="1058.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.19%)</title><rect x="1058" y="196" width="2" height="15" fill="rgb(234,227,27)"/><text x="1061.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:62) (1 samples, 0.19%)</title><rect x="1060" y="212" width="2" height="15" fill="rgb(211,186,17)"/><text x="1063.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="1071" y="324" width="2" height="15" fill="rgb(244,28,11)"/><text x="1074.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.19%)</title><rect x="1071" y="340" width="2" height="15" fill="rgb(231,32,37)"/><text x="1074.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.56%)</title><rect x="1075" y="340" width="7" height="15" fill="rgb(234,1,10)"/><text x="1078.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.19%)</title><rect x="1080" y="356" width="2" height="15" fill="rgb(254,17,10)"/><text x="1083.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.93%)</title><rect x="1073" y="324" width="11" height="15" fill="rgb(214,22,49)"/><text x="1076.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="1082" y="340" width="2" height="15" fill="rgb(235,161,50)"/><text x="1085.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="1082" y="356" width="2" height="15" fill="rgb(240,76,37)"/><text x="1085.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.19%)</title><rect x="1082" y="372" width="2" height="15" fill="rgb(254,44,43)"/><text x="1085.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.56%)</title><rect x="1084" y="340" width="7" height="15" fill="rgb(207,197,10)"/><text x="1087.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.56%)</title><rect x="1084" y="356" width="7" height="15" fill="rgb(237,77,20)"/><text x="1087.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="1091" y="356" width="2" height="15" fill="rgb(230,56,1)"/><text x="1094.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="1093" y="356" width="2" height="15" fill="rgb(222,58,5)"/><text x="1096.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.19%)</title><rect x="1095" y="388" width="2" height="15" fill="rgb(235,80,17)"/><text x="1098.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (5 samples, 0.93%)</title><rect x="1091" y="340" width="11" height="15" fill="rgb(242,56,6)"/><text x="1094.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.56%)</title><rect x="1095" y="356" width="7" height="15" fill="rgb(248,150,2)"/><text x="1098.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.56%)</title><rect x="1095" y="372" width="7" height="15" fill="rgb(247,170,27)"/><text x="1098.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.37%)</title><rect x="1097" y="388" width="5" height="15" fill="rgb(242,33,36)"/><text x="1100.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.37%)</title><rect x="1097" y="404" width="5" height="15" fill="rgb(246,54,30)"/><text x="1100.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.37%)</title><rect x="1097" y="420" width="5" height="15" fill="rgb(253,203,13)"/><text x="1100.00" y="430.50"></text></g><g><title>0x7fac54523730 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1099" y="436" width="3" height="15" fill="rgb(233,100,0)"/><text x="1102.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="1102" y="372" width="2" height="15" fill="rgb(211,208,18)"/><text x="1105.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="1102" y="388" width="2" height="15" fill="rgb(211,56,17)"/><text x="1105.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1929) (1 samples, 0.19%)</title><rect x="1102" y="404" width="2" height="15" fill="rgb(211,190,39)"/><text x="1105.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="1102" y="420" width="2" height="15" fill="rgb(231,98,54)"/><text x="1105.00" y="430.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="1102" y="436" width="2" height="15" fill="rgb(239,55,21)"/><text x="1105.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="1102" y="356" width="4" height="15" fill="rgb(244,30,0)"/><text x="1105.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="1104" y="372" width="2" height="15" fill="rgb(224,104,39)"/><text x="1107.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="1104" y="388" width="2" height="15" fill="rgb(227,25,23)"/><text x="1107.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (11 samples, 2.05%)</title><rect x="1084" y="324" width="24" height="15" fill="rgb(213,27,54)"/><text x="1087.00" y="334.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.56%)</title><rect x="1102" y="340" width="6" height="15" fill="rgb(219,49,28)"/><text x="1105.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="1106" y="356" width="2" height="15" fill="rgb(252,60,22)"/><text x="1109.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="1106" y="372" width="2" height="15" fill="rgb(239,198,41)"/><text x="1109.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="1106" y="388" width="2" height="15" fill="rgb(229,24,38)"/><text x="1109.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="1106" y="404" width="2" height="15" fill="rgb(226,98,24)"/><text x="1109.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.37%)</title><rect x="1113" y="356" width="4" height="15" fill="rgb(253,175,15)"/><text x="1116.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.37%)</title><rect x="1113" y="372" width="4" height="15" fill="rgb(245,63,17)"/><text x="1116.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.37%)</title><rect x="1113" y="388" width="4" height="15" fill="rgb(247,200,12)"/><text x="1116.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.37%)</title><rect x="1113" y="404" width="4" height="15" fill="rgb(240,23,6)"/><text x="1116.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.37%)</title><rect x="1113" y="420" width="4" height="15" fill="rgb(228,126,4)"/><text x="1116.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="1117" y="372" width="2" height="15" fill="rgb(218,6,42)"/><text x="1120.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="1117" y="388" width="2" height="15" fill="rgb(247,187,37)"/><text x="1120.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:919) (1 samples, 0.19%)</title><rect x="1117" y="404" width="2" height="15" fill="rgb(226,204,36)"/><text x="1120.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="1119" y="372" width="2" height="15" fill="rgb(244,169,25)"/><text x="1122.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.19%)</title><rect x="1119" y="388" width="2" height="15" fill="rgb(225,59,14)"/><text x="1122.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="1121" y="420" width="3" height="15" fill="rgb(212,85,49)"/><text x="1124.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.19%)</title><rect x="1121" y="436" width="3" height="15" fill="rgb(212,69,15)"/><text x="1124.00" y="446.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.19%)</title><rect x="1121" y="452" width="3" height="15" fill="rgb(234,57,46)"/><text x="1124.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="1121" y="404" width="5" height="15" fill="rgb(235,163,15)"/><text x="1124.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.19%)</title><rect x="1124" y="420" width="2" height="15" fill="rgb(219,67,30)"/><text x="1127.00" y="430.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.19%)</title><rect x="1124" y="436" width="2" height="15" fill="rgb(229,113,53)"/><text x="1127.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="1121" y="372" width="7" height="15" fill="rgb(235,10,54)"/><text x="1124.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="1121" y="388" width="7" height="15" fill="rgb(240,80,54)"/><text x="1124.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="1126" y="404" width="2" height="15" fill="rgb(218,88,7)"/><text x="1129.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="1126" y="420" width="2" height="15" fill="rgb(234,59,9)"/><text x="1129.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="1126" y="436" width="2" height="15" fill="rgb(248,4,22)"/><text x="1129.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1126" y="452" width="2" height="15" fill="rgb(228,85,3)"/><text x="1129.00" y="462.50"></text></g><g><title>0x7fac5450f700 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1126" y="468" width="2" height="15" fill="rgb(249,191,53)"/><text x="1129.00" y="478.50"></text></g><g><title>0x7fac5450cacb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1126" y="484" width="2" height="15" fill="rgb(247,39,35)"/><text x="1129.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (134 samples, 24.95%)</title><rect x="836" y="180" width="294" height="15" fill="rgb(236,124,13)"/><text x="839.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (32 samples, 5.96%)</title><rect x="1060" y="196" width="70" height="15" fill="rgb(229,22,31)"/><text x="1063.00" y="206.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (31 samples, 5.77%)</title><rect x="1062" y="212" width="68" height="15" fill="rgb(228,162,17)"/><text x="1065.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (29 samples, 5.40%)</title><rect x="1066" y="228" width="64" height="15" fill="rgb(230,90,24)"/><text x="1069.00" y="238.50">clip (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (29 samples, 5.40%)</title><rect x="1066" y="244" width="64" height="15" fill="rgb(209,38,1)"/><text x="1069.00" y="254.50">array_i..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (28 samples, 5.21%)</title><rect x="1069" y="260" width="61" height="15" fill="rgb(208,13,15)"/><text x="1072.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 5.03%)</title><rect x="1071" y="276" width="59" height="15" fill="rgb(220,120,7)"/><text x="1074.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c:2381) (27 samples, 5.03%)</title><rect x="1071" y="292" width="59" height="15" fill="rgb(211,109,38)"/><text x="1074.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (27 samples, 5.03%)</title><rect x="1071" y="308" width="59" height="15" fill="rgb(216,228,0)"/><text x="1074.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 1.86%)</title><rect x="1108" y="324" width="22" height="15" fill="rgb(239,64,8)"/><text x="1111.00" y="334.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 1.49%)</title><rect x="1113" y="340" width="17" height="15" fill="rgb(218,82,14)"/><text x="1116.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.12%)</title><rect x="1117" y="356" width="13" height="15" fill="rgb(235,77,7)"/><text x="1120.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.19%)</title><rect x="1128" y="372" width="2" height="15" fill="rgb(225,217,31)"/><text x="1131.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.37%)</title><rect x="1130" y="180" width="5" height="15" fill="rgb(254,202,18)"/><text x="1133.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="1135" y="180" width="2" height="15" fill="rgb(249,51,27)"/><text x="1138.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 1.12%)</title><rect x="1137" y="180" width="13" height="15" fill="rgb(239,229,49)"/><text x="1140.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:45) (240 samples, 44.69%)</title><rect x="629" y="52" width="528" height="15" fill="rgb(247,194,51)"/><text x="632.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:44) (240 samples, 44.69%)</title><rect x="629" y="68" width="528" height="15" fill="rgb(248,29,13)"/><text x="632.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (239 samples, 44.51%)</title><rect x="631" y="84" width="526" height="15" fill="rgb(243,200,43)"/><text x="634.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (164 samples, 30.54%)</title><rect x="796" y="100" width="361" height="15" fill="rgb(250,8,38)"/><text x="799.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (164 samples, 30.54%)</title><rect x="796" y="116" width="361" height="15" fill="rgb(239,97,40)"/><text x="799.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (164 samples, 30.54%)</title><rect x="796" y="132" width="361" height="15" fill="rgb(233,60,20)"/><text x="799.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (164 samples, 30.54%)</title><rect x="796" y="148" width="361" height="15" fill="rgb(205,167,1)"/><text x="799.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (161 samples, 29.98%)</title><rect x="803" y="164" width="354" height="15" fill="rgb(213,12,2)"/><text x="806.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.56%)</title><rect x="1150" y="180" width="7" height="15" fill="rgb(215,86,23)"/><text x="1153.00" y="190.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.19%)</title><rect x="1157" y="212" width="2" height="15" fill="rgb(224,228,45)"/><text x="1160.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:211) (1 samples, 0.19%)</title><rect x="1157" y="228" width="2" height="15" fill="rgb(253,204,38)"/><text x="1160.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.19%)</title><rect x="1157" y="244" width="2" height="15" fill="rgb(219,203,26)"/><text x="1160.00" y="254.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:496) (1 samples, 0.19%)</title><rect x="1157" y="260" width="2" height="15" fill="rgb(223,91,10)"/><text x="1160.00" y="270.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.19%)</title><rect x="1157" y="276" width="2" height="15" fill="rgb(252,105,2)"/><text x="1160.00" y="286.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.37%)</title><rect x="1157" y="196" width="4" height="15" fill="rgb(252,29,34)"/><text x="1160.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:83) (1 samples, 0.19%)</title><rect x="1159" y="212" width="2" height="15" fill="rgb(232,59,41)"/><text x="1162.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py:569) (1 samples, 0.19%)</title><rect x="1159" y="228" width="2" height="15" fill="rgb(236,206,5)"/><text x="1162.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.19%)</title><rect x="1159" y="244" width="2" height="15" fill="rgb(212,134,41)"/><text x="1162.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.19%)</title><rect x="1159" y="260" width="2" height="15" fill="rgb(228,121,53)"/><text x="1162.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.19%)</title><rect x="1159" y="276" width="2" height="15" fill="rgb(216,128,43)"/><text x="1162.00" y="286.50"></text></g><g><title>extract (traceback.py:363) (1 samples, 0.19%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(214,2,40)"/><text x="1162.00" y="302.50"></text></g><g><title>line (traceback.py:285) (1 samples, 0.19%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(223,129,48)"/><text x="1162.00" y="318.50"></text></g><g><title>getline (linecache.py:17) (1 samples, 0.19%)</title><rect x="1159" y="324" width="2" height="15" fill="rgb(246,76,26)"/><text x="1162.00" y="334.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:28) (3 samples, 0.56%)</title><rect x="1157" y="84" width="6" height="15" fill="rgb(230,150,54)"/><text x="1160.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.56%)</title><rect x="1157" y="100" width="6" height="15" fill="rgb(247,21,11)"/><text x="1160.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.56%)</title><rect x="1157" y="116" width="6" height="15" fill="rgb(208,217,35)"/><text x="1160.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.56%)</title><rect x="1157" y="132" width="6" height="15" fill="rgb(229,67,18)"/><text x="1160.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.56%)</title><rect x="1157" y="148" width="6" height="15" fill="rgb(222,55,31)"/><text x="1160.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.56%)</title><rect x="1157" y="164" width="6" height="15" fill="rgb(228,163,33)"/><text x="1160.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.56%)</title><rect x="1157" y="180" width="6" height="15" fill="rgb(217,53,0)"/><text x="1160.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.19%)</title><rect x="1161" y="196" width="2" height="15" fill="rgb(243,216,23)"/><text x="1164.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.19%)</title><rect x="1161" y="212" width="2" height="15" fill="rgb(224,204,18)"/><text x="1164.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.19%)</title><rect x="1161" y="228" width="2" height="15" fill="rgb(232,184,26)"/><text x="1164.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1161" y="244" width="2" height="15" fill="rgb(207,147,19)"/><text x="1164.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.19%)</title><rect x="1161" y="260" width="2" height="15" fill="rgb(254,37,24)"/><text x="1164.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:137) (1 samples, 0.19%)</title><rect x="1161" y="276" width="2" height="15" fill="rgb(252,223,45)"/><text x="1164.00" y="286.50"></text></g><g><title>0x7fac141cbff9 (?) (1 samples, 0.19%)</title><rect x="1163" y="212" width="2" height="15" fill="rgb(252,69,3)"/><text x="1166.00" y="222.50"></text></g><g><title>0x7fac141c6ef6 (?) (1 samples, 0.19%)</title><rect x="1163" y="228" width="2" height="15" fill="rgb(245,130,16)"/><text x="1166.00" y="238.50"></text></g><g><title>0x7fac141bb962 (?) (1 samples, 0.19%)</title><rect x="1163" y="244" width="2" height="15" fill="rgb(215,194,8)"/><text x="1166.00" y="254.50"></text></g><g><title>0x7fac141ef7a7 (?) (1 samples, 0.19%)</title><rect x="1163" y="260" width="2" height="15" fill="rgb(220,204,23)"/><text x="1166.00" y="270.50"></text></g><g><title>0x7fac141ef379 (?) (1 samples, 0.19%)</title><rect x="1163" y="276" width="2" height="15" fill="rgb(226,33,52)"/><text x="1166.00" y="286.50"></text></g><g><title>0x7fac1464d8b8 (?) (1 samples, 0.19%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(252,191,53)"/><text x="1166.00" y="302.50"></text></g><g><title>0x7fac1464bc7f (?) (1 samples, 0.19%)</title><rect x="1163" y="308" width="2" height="15" fill="rgb(214,27,44)"/><text x="1166.00" y="318.50"></text></g><g><title>0x7fac1465e99c (?) (1 samples, 0.19%)</title><rect x="1163" y="324" width="2" height="15" fill="rgb(219,195,3)"/><text x="1166.00" y="334.50"></text></g><g><title>0x7fac1437bfed (?) (1 samples, 0.19%)</title><rect x="1163" y="340" width="2" height="15" fill="rgb(238,201,15)"/><text x="1166.00" y="350.50"></text></g><g><title>0x7fac1461a5e6 (?) (1 samples, 0.19%)</title><rect x="1163" y="356" width="2" height="15" fill="rgb(207,129,25)"/><text x="1166.00" y="366.50"></text></g><g><title>0x7fac1461a486 (?) (1 samples, 0.19%)</title><rect x="1163" y="372" width="2" height="15" fill="rgb(216,47,18)"/><text x="1166.00" y="382.50"></text></g><g><title>0x7fac14604c8d (?) (1 samples, 0.19%)</title><rect x="1163" y="388" width="2" height="15" fill="rgb(246,8,40)"/><text x="1166.00" y="398.50"></text></g><g><title>0x7fac14604202 (?) (1 samples, 0.19%)</title><rect x="1163" y="404" width="2" height="15" fill="rgb(213,73,39)"/><text x="1166.00" y="414.50"></text></g><g><title>0x7fac14603913 (?) (1 samples, 0.19%)</title><rect x="1163" y="420" width="2" height="15" fill="rgb(251,206,24)"/><text x="1166.00" y="430.50"></text></g><g><title>0x7fac14602daf (?) (1 samples, 0.19%)</title><rect x="1163" y="436" width="2" height="15" fill="rgb(228,61,53)"/><text x="1166.00" y="446.50"></text></g><g><title>0x7fac145fd78f (?) (1 samples, 0.19%)</title><rect x="1163" y="452" width="2" height="15" fill="rgb(225,1,11)"/><text x="1166.00" y="462.50"></text></g><g><title>0x7fac14632e78 (?) (1 samples, 0.19%)</title><rect x="1163" y="468" width="2" height="15" fill="rgb(248,55,6)"/><text x="1166.00" y="478.50"></text></g><g><title>0x7fac14632b0d (?) (1 samples, 0.19%)</title><rect x="1163" y="484" width="2" height="15" fill="rgb(206,222,47)"/><text x="1166.00" y="494.50"></text></g><g><title>0x7fac14636a88 (?) (1 samples, 0.19%)</title><rect x="1163" y="500" width="2" height="15" fill="rgb(231,78,43)"/><text x="1166.00" y="510.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(225,212,18)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(226,23,24)"/><text x="1171.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1168" y="372" width="2" height="15" fill="rgb(239,182,48)"/><text x="1171.00" y="382.50"></text></g><g><title>0x7fac5450dd07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(242,132,14)"/><text x="1171.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:18) (4 samples, 0.74%)</title><rect x="1163" y="100" width="9" height="15" fill="rgb(232,88,17)"/><text x="1166.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.74%)</title><rect x="1163" y="116" width="9" height="15" fill="rgb(217,191,31)"/><text x="1166.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.74%)</title><rect x="1163" y="132" width="9" height="15" fill="rgb(222,158,21)"/><text x="1166.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.74%)</title><rect x="1163" y="148" width="9" height="15" fill="rgb(224,50,42)"/><text x="1166.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.74%)</title><rect x="1163" y="164" width="9" height="15" fill="rgb(236,105,1)"/><text x="1166.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.74%)</title><rect x="1163" y="180" width="9" height="15" fill="rgb(239,113,18)"/><text x="1166.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.74%)</title><rect x="1163" y="196" width="9" height="15" fill="rgb(235,5,5)"/><text x="1166.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="212" width="7" height="15" fill="rgb(227,137,2)"/><text x="1168.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="228" width="7" height="15" fill="rgb(219,151,41)"/><text x="1168.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="244" width="7" height="15" fill="rgb(244,36,8)"/><text x="1168.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="260" width="7" height="15" fill="rgb(244,130,30)"/><text x="1168.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="276" width="7" height="15" fill="rgb(224,209,17)"/><text x="1168.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="292" width="7" height="15" fill="rgb(238,141,32)"/><text x="1168.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="308" width="7" height="15" fill="rgb(228,143,41)"/><text x="1168.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1165" y="324" width="7" height="15" fill="rgb(249,9,14)"/><text x="1168.00" y="334.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="340" width="2" height="15" fill="rgb(222,164,37)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="356" width="2" height="15" fill="rgb(226,99,19)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="372" width="2" height="15" fill="rgb(208,18,9)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="372" width="2" height="15" fill="rgb(218,74,49)"/><text x="1177.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1174" y="388" width="2" height="15" fill="rgb(239,58,3)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1172" y="340" width="7" height="15" fill="rgb(216,102,2)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="1172" y="356" width="7" height="15" fill="rgb(241,32,14)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="372" width="3" height="15" fill="rgb(216,117,27)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="388" width="3" height="15" fill="rgb(223,226,8)"/><text x="1179.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="404" width="3" height="15" fill="rgb(230,216,54)"/><text x="1179.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1176" y="420" width="3" height="15" fill="rgb(241,18,18)"/><text x="1179.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1176" y="436" width="3" height="15" fill="rgb(247,25,22)"/><text x="1179.00" y="446.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(250,196,14)"/><text x="1182.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1179" y="356" width="2" height="15" fill="rgb(249,143,21)"/><text x="1182.00" y="366.50"></text></g><g><title>0x7fac5450d90e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1179" y="372" width="2" height="15" fill="rgb(248,100,15)"/><text x="1182.00" y="382.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="340" width="2" height="15" fill="rgb(238,169,18)"/><text x="1184.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="356" width="2" height="15" fill="rgb(225,157,47)"/><text x="1184.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="372" width="2" height="15" fill="rgb(235,122,9)"/><text x="1184.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(246,225,20)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="388" width="2" height="15" fill="rgb(246,196,15)"/><text x="1186.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="404" width="2" height="15" fill="rgb(235,53,23)"/><text x="1186.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="420" width="2" height="15" fill="rgb(251,128,28)"/><text x="1186.00" y="430.50"></text></g><g><title>0x7fac5450da38 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1183" y="436" width="2" height="15" fill="rgb(216,53,25)"/><text x="1186.00" y="446.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1183" y="340" width="4" height="15" fill="rgb(222,201,27)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1183" y="356" width="4" height="15" fill="rgb(211,139,15)"/><text x="1186.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(231,21,47)"/><text x="1188.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(249,23,3)"/><text x="1188.00" y="398.50"></text></g><g><title>all (537 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,68,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:52) (15 samples, 2.79%)</title><rect x="1157" y="52" width="33" height="15" fill="rgb(221,224,51)"/><text x="1160.00" y="62.50">&lt;m..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:51) (15 samples, 2.79%)</title><rect x="1157" y="68" width="33" height="15" fill="rgb(234,126,37)"/><text x="1160.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:29) (12 samples, 2.23%)</title><rect x="1163" y="84" width="27" height="15" fill="rgb(227,123,31)"/><text x="1166.00" y="94.50">s..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_4_12_float_.py:23) (8 samples, 1.49%)</title><rect x="1172" y="100" width="18" height="15" fill="rgb(224,137,28)"/><text x="1175.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.49%)</title><rect x="1172" y="116" width="18" height="15" fill="rgb(253,98,45)"/><text x="1175.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (8 samples, 1.49%)</title><rect x="1172" y="132" width="18" height="15" fill="rgb(229,54,15)"/><text x="1175.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (8 samples, 1.49%)</title><rect x="1172" y="148" width="18" height="15" fill="rgb(235,229,6)"/><text x="1175.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (8 samples, 1.49%)</title><rect x="1172" y="164" width="18" height="15" fill="rgb(251,112,13)"/><text x="1175.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (8 samples, 1.49%)</title><rect x="1172" y="180" width="18" height="15" fill="rgb(241,90,37)"/><text x="1175.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (8 samples, 1.49%)</title><rect x="1172" y="196" width="18" height="15" fill="rgb(222,110,44)"/><text x="1175.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="212" width="18" height="15" fill="rgb(240,223,1)"/><text x="1175.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="228" width="18" height="15" fill="rgb(206,19,1)"/><text x="1175.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="244" width="18" height="15" fill="rgb(229,53,13)"/><text x="1175.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="260" width="18" height="15" fill="rgb(228,223,33)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="276" width="18" height="15" fill="rgb(243,187,8)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="292" width="18" height="15" fill="rgb(211,39,4)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="308" width="18" height="15" fill="rgb(229,50,11)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.49%)</title><rect x="1172" y="324" width="18" height="15" fill="rgb(235,49,43)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(220,152,36)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(244,78,26)"/><text x="1190.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(222,34,44)"/><text x="1190.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(247,24,1)"/><text x="1190.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1187" y="404" width="3" height="15" fill="rgb(251,97,52)"/><text x="1190.00" y="414.50"></text></g></g></svg>