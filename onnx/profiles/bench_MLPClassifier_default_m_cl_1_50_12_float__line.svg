<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2262" onload="init(evt)" viewBox="0 0 1200 2262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2262" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2245.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2245.00"> </text><g id="frames"><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.19%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(248,61,9)"/><text x="13.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(247,190,3)"/><text x="13.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py:582) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(210,211,27)"/><text x="13.00" y="190.50"></text></g><g><title>check_consistent_length (sklearn/utils/validation.py:209) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(206,19,19)"/><text x="13.00" y="206.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(249,41,36)"/><text x="13.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(221,185,13)"/><text x="13.00" y="238.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:262) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(205,37,25)"/><text x="13.00" y="254.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:314) (1 samples, 0.19%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(247,194,18)"/><text x="13.00" y="270.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.19%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(237,84,9)"/><text x="15.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(250,135,29)"/><text x="15.00" y="190.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:248) (1 samples, 0.19%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(217,84,44)"/><text x="17.00" y="174.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(206,173,46)"/><text x="17.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(230,37,50)"/><text x="17.00" y="206.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (3 samples, 0.57%)</title><rect x="12" y="148" width="7" height="15" fill="rgb(227,125,18)"/><text x="15.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:254) (1 samples, 0.19%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(243,29,43)"/><text x="19.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:129) (1 samples, 0.19%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(206,166,34)"/><text x="19.00" y="190.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="16" y="196" width="3" height="15" fill="rgb(238,198,12)"/><text x="19.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="16" y="212" width="3" height="15" fill="rgb(211,76,0)"/><text x="19.00" y="222.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (1 samples, 0.19%)</title><rect x="16" y="228" width="3" height="15" fill="rgb(215,123,5)"/><text x="19.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (1 samples, 0.19%)</title><rect x="16" y="244" width="3" height="15" fill="rgb(250,111,9)"/><text x="19.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="16" y="260" width="3" height="15" fill="rgb(253,186,11)"/><text x="19.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="16" y="276" width="3" height="15" fill="rgb(226,218,18)"/><text x="19.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(239,69,8)"/><text x="19.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(247,160,47)"/><text x="19.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(207,169,26)"/><text x="19.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="16" y="340" width="3" height="15" fill="rgb(207,178,22)"/><text x="19.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:31) (5 samples, 0.96%)</title><rect x="10" y="52" width="11" height="15" fill="rgb(236,160,2)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:11) (5 samples, 0.96%)</title><rect x="10" y="68" width="11" height="15" fill="rgb(216,72,49)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:39) (5 samples, 0.96%)</title><rect x="10" y="84" width="11" height="15" fill="rgb(249,219,44)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 0.96%)</title><rect x="10" y="100" width="11" height="15" fill="rgb(236,48,40)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:995) (5 samples, 0.96%)</title><rect x="10" y="116" width="11" height="15" fill="rgb(227,114,18)"/><text x="13.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (5 samples, 0.96%)</title><rect x="10" y="132" width="11" height="15" fill="rgb(211,71,22)"/><text x="13.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:527) (1 samples, 0.19%)</title><rect x="19" y="148" width="2" height="15" fill="rgb(225,156,0)"/><text x="22.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py:43) (1 samples, 0.19%)</title><rect x="19" y="164" width="2" height="15" fill="rgb(218,173,40)"/><text x="22.00" y="174.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py:265) (1 samples, 0.19%)</title><rect x="19" y="180" width="2" height="15" fill="rgb(243,89,39)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py:265) (1 samples, 0.19%)</title><rect x="19" y="196" width="2" height="15" fill="rgb(225,70,46)"/><text x="22.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="19" y="212" width="2" height="15" fill="rgb(245,77,49)"/><text x="22.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="19" y="228" width="2" height="15" fill="rgb(209,77,3)"/><text x="22.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="19" y="244" width="2" height="15" fill="rgb(222,120,32)"/><text x="22.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.19%)</title><rect x="23" y="164" width="2" height="15" fill="rgb(238,220,5)"/><text x="26.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.77%)</title><rect x="39" y="196" width="9" height="15" fill="rgb(214,174,39)"/><text x="42.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (14 samples, 2.68%)</title><rect x="25" y="180" width="32" height="15" fill="rgb(212,31,10)"/><text x="28.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.77%)</title><rect x="48" y="196" width="9" height="15" fill="rgb(205,91,10)"/><text x="51.00" y="206.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (17 samples, 3.26%)</title><rect x="23" y="148" width="38" height="15" fill="rgb(219,68,43)"/><text x="26.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 3.07%)</title><rect x="25" y="164" width="36" height="15" fill="rgb(207,13,50)"/><text x="28.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.38%)</title><rect x="57" y="180" width="4" height="15" fill="rgb(247,207,9)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="59" y="196" width="2" height="15" fill="rgb(248,159,24)"/><text x="62.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.19%)</title><rect x="61" y="180" width="3" height="15" fill="rgb(213,134,31)"/><text x="64.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.19%)</title><rect x="64" y="180" width="2" height="15" fill="rgb(221,119,24)"/><text x="67.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.38%)</title><rect x="66" y="180" width="5" height="15" fill="rgb(243,103,14)"/><text x="69.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.38%)</title><rect x="75" y="212" width="5" height="15" fill="rgb(216,174,29)"/><text x="78.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.15%)</title><rect x="71" y="180" width="13" height="15" fill="rgb(223,32,27)"/><text x="74.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.96%)</title><rect x="73" y="196" width="11" height="15" fill="rgb(246,110,23)"/><text x="76.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.38%)</title><rect x="80" y="212" width="4" height="15" fill="rgb(235,38,37)"/><text x="83.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.57%)</title><rect x="84" y="180" width="7" height="15" fill="rgb(208,162,51)"/><text x="87.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.38%)</title><rect x="91" y="180" width="4" height="15" fill="rgb(209,102,5)"/><text x="94.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.19%)</title><rect x="93" y="196" width="2" height="15" fill="rgb(230,214,40)"/><text x="96.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(224,8,20)"/><text x="98.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.38%)</title><rect x="95" y="180" width="5" height="15" fill="rgb(246,203,31)"/><text x="98.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.19%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(237,43,40)"/><text x="101.00" y="206.50"></text></g><g><title>0x7fa165bd4160 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="98" y="212" width="2" height="15" fill="rgb(211,145,1)"/><text x="101.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.38%)</title><rect x="100" y="196" width="4" height="15" fill="rgb(237,8,0)"/><text x="103.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:293) (1 samples, 0.19%)</title><rect x="102" y="212" width="2" height="15" fill="rgb(218,163,33)"/><text x="105.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.77%)</title><rect x="100" y="180" width="9" height="15" fill="rgb(210,184,19)"/><text x="103.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (2 samples, 0.38%)</title><rect x="104" y="196" width="5" height="15" fill="rgb(248,89,42)"/><text x="107.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.38%)</title><rect x="104" y="212" width="5" height="15" fill="rgb(209,128,6)"/><text x="107.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (2 samples, 0.38%)</title><rect x="109" y="180" width="4" height="15" fill="rgb(239,86,33)"/><text x="112.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.19%)</title><rect x="113" y="180" width="3" height="15" fill="rgb(241,226,42)"/><text x="116.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="123" y="212" width="2" height="15" fill="rgb(233,74,33)"/><text x="126.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.19%)</title><rect x="125" y="212" width="2" height="15" fill="rgb(240,184,2)"/><text x="128.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.38%)</title><rect x="127" y="212" width="5" height="15" fill="rgb(207,46,14)"/><text x="130.00" y="222.50"></text></g><g><title>0x7fa165b076d4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="129" y="228" width="3" height="15" fill="rgb(239,142,52)"/><text x="132.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 1.53%)</title><rect x="116" y="196" width="18" height="15" fill="rgb(250,87,52)"/><text x="119.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="132" y="212" width="2" height="15" fill="rgb(232,58,30)"/><text x="135.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (9 samples, 1.72%)</title><rect x="116" y="180" width="20" height="15" fill="rgb(250,95,31)"/><text x="119.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.19%)</title><rect x="134" y="196" width="2" height="15" fill="rgb(237,184,4)"/><text x="137.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="136" y="196" width="2" height="15" fill="rgb(252,55,17)"/><text x="139.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.96%)</title><rect x="138" y="196" width="12" height="15" fill="rgb(244,203,50)"/><text x="141.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.38%)</title><rect x="145" y="212" width="5" height="15" fill="rgb(244,164,16)"/><text x="148.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.19%)</title><rect x="147" y="228" width="3" height="15" fill="rgb(226,42,45)"/><text x="150.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (40 samples, 7.66%)</title><rect x="61" y="164" width="91" height="15" fill="rgb(217,51,47)"/><text x="64.00" y="174.50">_predict (..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.34%)</title><rect x="136" y="180" width="16" height="15" fill="rgb(217,40,43)"/><text x="139.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.19%)</title><rect x="150" y="196" width="2" height="15" fill="rgb(214,184,46)"/><text x="153.00" y="206.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.19%)</title><rect x="150" y="212" width="2" height="15" fill="rgb(242,219,8)"/><text x="153.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:675) (1 samples, 0.19%)</title><rect x="152" y="164" width="2" height="15" fill="rgb(226,228,46)"/><text x="155.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1189) (1 samples, 0.19%)</title><rect x="152" y="180" width="2" height="15" fill="rgb(219,136,0)"/><text x="155.00" y="190.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:676) (1 samples, 0.19%)</title><rect x="154" y="164" width="2" height="15" fill="rgb(241,228,54)"/><text x="157.00" y="174.50"></text></g><g><title>0x7fa165b1714a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="156" y="180" width="3" height="15" fill="rgb(208,48,43)"/><text x="159.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="159" y="228" width="2" height="15" fill="rgb(238,224,45)"/><text x="162.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="159" y="244" width="2" height="15" fill="rgb(247,220,15)"/><text x="162.00" y="254.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (3 samples, 0.57%)</title><rect x="156" y="164" width="7" height="15" fill="rgb(251,168,38)"/><text x="159.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (2 samples, 0.38%)</title><rect x="159" y="180" width="4" height="15" fill="rgb(222,181,52)"/><text x="162.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.38%)</title><rect x="159" y="196" width="4" height="15" fill="rgb(207,5,11)"/><text x="162.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (2 samples, 0.38%)</title><rect x="159" y="212" width="4" height="15" fill="rgb(205,94,51)"/><text x="162.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.19%)</title><rect x="161" y="228" width="2" height="15" fill="rgb(251,160,29)"/><text x="164.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="161" y="244" width="2" height="15" fill="rgb(218,100,22)"/><text x="164.00" y="254.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:102) (1 samples, 0.19%)</title><rect x="168" y="180" width="2" height="15" fill="rgb(253,97,49)"/><text x="171.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="175" y="196" width="2" height="15" fill="rgb(245,188,2)"/><text x="178.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.19%)</title><rect x="175" y="212" width="2" height="15" fill="rgb(206,197,7)"/><text x="178.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.19%)</title><rect x="177" y="196" width="2" height="15" fill="rgb(244,198,5)"/><text x="180.00" y="206.50"></text></g><g><title>0x7fffc1cd0140 (?) (1 samples, 0.19%)</title><rect x="184" y="212" width="2" height="15" fill="rgb(230,37,17)"/><text x="187.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.19%)</title><rect x="184" y="228" width="2" height="15" fill="rgb(235,165,9)"/><text x="187.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.19%)</title><rect x="184" y="244" width="2" height="15" fill="rgb(236,202,24)"/><text x="187.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="184" y="260" width="2" height="15" fill="rgb(251,95,33)"/><text x="187.00" y="270.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="186" y="212" width="7" height="15" fill="rgb(209,211,33)"/><text x="189.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="193" y="260" width="2" height="15" fill="rgb(248,157,38)"/><text x="196.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.19%)</title><rect x="193" y="276" width="2" height="15" fill="rgb(212,229,3)"/><text x="196.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(247,138,26)"/><text x="198.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(239,151,34)"/><text x="198.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.19%)</title><rect x="197" y="276" width="2" height="15" fill="rgb(221,187,10)"/><text x="200.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.19%)</title><rect x="197" y="292" width="2" height="15" fill="rgb(250,227,21)"/><text x="200.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="197" y="308" width="2" height="15" fill="rgb(252,170,34)"/><text x="200.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="197" y="324" width="2" height="15" fill="rgb(206,32,19)"/><text x="200.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="199" y="324" width="3" height="15" fill="rgb(241,67,45)"/><text x="202.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.38%)</title><rect x="199" y="276" width="5" height="15" fill="rgb(240,134,35)"/><text x="202.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.38%)</title><rect x="199" y="292" width="5" height="15" fill="rgb(227,7,9)"/><text x="202.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.38%)</title><rect x="199" y="308" width="5" height="15" fill="rgb(239,83,47)"/><text x="202.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="202" y="324" width="2" height="15" fill="rgb(217,189,0)"/><text x="205.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 1.15%)</title><rect x="193" y="244" width="13" height="15" fill="rgb(226,36,17)"/><text x="196.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 0.77%)</title><rect x="197" y="260" width="9" height="15" fill="rgb(212,21,36)"/><text x="200.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.19%)</title><rect x="204" y="276" width="2" height="15" fill="rgb(214,84,22)"/><text x="207.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1953) (1 samples, 0.19%)</title><rect x="204" y="292" width="2" height="15" fill="rgb(234,141,8)"/><text x="207.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:392) (1 samples, 0.19%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(250,146,49)"/><text x="209.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:426) (1 samples, 0.19%)</title><rect x="208" y="260" width="3" height="15" fill="rgb(230,216,17)"/><text x="211.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.19%)</title><rect x="211" y="260" width="2" height="15" fill="rgb(207,85,35)"/><text x="214.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.19%)</title><rect x="211" y="276" width="2" height="15" fill="rgb(213,24,6)"/><text x="214.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="211" y="292" width="2" height="15" fill="rgb(232,170,20)"/><text x="214.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.19%)</title><rect x="213" y="260" width="2" height="15" fill="rgb(237,209,33)"/><text x="216.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.19%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(248,7,42)"/><text x="216.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 0.96%)</title><rect x="206" y="244" width="11" height="15" fill="rgb(239,147,40)"/><text x="209.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:502) (1 samples, 0.19%)</title><rect x="215" y="260" width="2" height="15" fill="rgb(243,162,52)"/><text x="218.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (18 samples, 3.45%)</title><rect x="179" y="196" width="41" height="15" fill="rgb(254,24,49)"/><text x="182.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.30%)</title><rect x="193" y="212" width="27" height="15" fill="rgb(224,176,33)"/><text x="196.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 2.30%)</title><rect x="193" y="228" width="27" height="15" fill="rgb(219,216,44)"/><text x="196.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.19%)</title><rect x="217" y="244" width="3" height="15" fill="rgb(228,35,51)"/><text x="220.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.19%)</title><rect x="217" y="260" width="3" height="15" fill="rgb(226,83,30)"/><text x="220.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="217" y="276" width="3" height="15" fill="rgb(214,120,7)"/><text x="220.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="217" y="292" width="3" height="15" fill="rgb(253,13,35)"/><text x="220.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="217" y="308" width="3" height="15" fill="rgb(206,137,29)"/><text x="220.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (25 samples, 4.79%)</title><rect x="170" y="180" width="57" height="15" fill="rgb(248,68,0)"/><text x="173.00" y="190.50">_forwa..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 0.57%)</title><rect x="220" y="196" width="7" height="15" fill="rgb(213,198,51)"/><text x="223.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 0.57%)</title><rect x="220" y="212" width="7" height="15" fill="rgb(226,44,32)"/><text x="223.00" y="222.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.19%)</title><rect x="229" y="228" width="2" height="15" fill="rgb(211,162,43)"/><text x="232.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.38%)</title><rect x="229" y="212" width="4" height="15" fill="rgb(242,21,30)"/><text x="232.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="231" y="228" width="2" height="15" fill="rgb(211,27,11)"/><text x="234.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:247) (1 samples, 0.19%)</title><rect x="231" y="244" width="2" height="15" fill="rgb(224,68,17)"/><text x="234.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:681) (1 samples, 0.19%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(237,13,21)"/><text x="234.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="233" y="212" width="3" height="15" fill="rgb(254,176,5)"/><text x="236.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.19%)</title><rect x="233" y="228" width="3" height="15" fill="rgb(230,59,44)"/><text x="236.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1674) (1 samples, 0.19%)</title><rect x="236" y="228" width="2" height="15" fill="rgb(215,116,22)"/><text x="239.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="238" y="244" width="2" height="15" fill="rgb(235,121,44)"/><text x="241.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="238" y="260" width="2" height="15" fill="rgb(230,189,31)"/><text x="241.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="238" y="276" width="2" height="15" fill="rgb(235,119,32)"/><text x="241.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.19%)</title><rect x="240" y="260" width="2" height="15" fill="rgb(224,117,39)"/><text x="243.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.19%)</title><rect x="240" y="276" width="2" height="15" fill="rgb(235,176,45)"/><text x="243.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.38%)</title><rect x="240" y="244" width="5" height="15" fill="rgb(248,50,5)"/><text x="243.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="242" y="260" width="3" height="15" fill="rgb(223,81,37)"/><text x="245.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2047) (1 samples, 0.19%)</title><rect x="242" y="276" width="3" height="15" fill="rgb(227,210,15)"/><text x="245.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.53%)</title><rect x="229" y="196" width="18" height="15" fill="rgb(226,224,10)"/><text x="232.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.96%)</title><rect x="236" y="212" width="11" height="15" fill="rgb(245,134,33)"/><text x="239.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.77%)</title><rect x="238" y="228" width="9" height="15" fill="rgb(245,162,33)"/><text x="241.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="245" y="244" width="2" height="15" fill="rgb(232,157,48)"/><text x="248.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="245" y="260" width="2" height="15" fill="rgb(247,90,18)"/><text x="248.00" y="270.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (10 samples, 1.92%)</title><rect x="227" y="180" width="22" height="15" fill="rgb(227,203,54)"/><text x="230.00" y="190.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="247" y="196" width="2" height="15" fill="rgb(243,82,23)"/><text x="250.00" y="206.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:108) (1 samples, 0.19%)</title><rect x="249" y="180" width="2" height="15" fill="rgb(244,211,53)"/><text x="252.00" y="190.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (2 samples, 0.38%)</title><rect x="260" y="212" width="5" height="15" fill="rgb(248,185,23)"/><text x="263.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.19%)</title><rect x="263" y="228" width="2" height="15" fill="rgb(251,209,47)"/><text x="266.00" y="238.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.19%)</title><rect x="265" y="212" width="2" height="15" fill="rgb(240,21,32)"/><text x="268.00" y="222.50"></text></g><g><title>PyArray_DescrHash (hashdescr.c:303) (1 samples, 0.19%)</title><rect x="265" y="228" width="2" height="15" fill="rgb(208,49,28)"/><text x="268.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (4 samples, 0.77%)</title><rect x="267" y="212" width="9" height="15" fill="rgb(230,90,18)"/><text x="270.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:74) (1 samples, 0.19%)</title><rect x="276" y="244" width="3" height="15" fill="rgb(240,160,17)"/><text x="279.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="279" y="292" width="2" height="15" fill="rgb(216,5,44)"/><text x="282.00" y="302.50"></text></g><g><title>0x7fa165b0ce50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="279" y="308" width="2" height="15" fill="rgb(222,190,17)"/><text x="282.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (4 samples, 0.77%)</title><rect x="276" y="228" width="9" height="15" fill="rgb(237,194,32)"/><text x="279.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.57%)</title><rect x="279" y="244" width="6" height="15" fill="rgb(230,195,1)"/><text x="282.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.57%)</title><rect x="279" y="260" width="6" height="15" fill="rgb(221,186,31)"/><text x="282.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.57%)</title><rect x="279" y="276" width="6" height="15" fill="rgb(244,110,41)"/><text x="282.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:82) (2 samples, 0.38%)</title><rect x="281" y="292" width="4" height="15" fill="rgb(235,225,47)"/><text x="284.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="283" y="308" width="2" height="15" fill="rgb(214,216,45)"/><text x="286.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 1.15%)</title><rect x="301" y="324" width="14" height="15" fill="rgb(243,165,2)"/><text x="304.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.57%)</title><rect x="308" y="340" width="7" height="15" fill="rgb(212,43,32)"/><text x="311.00" y="350.50"></text></g><g><title>0x7fa165b0ce50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="312" y="356" width="3" height="15" fill="rgb(211,227,51)"/><text x="315.00" y="366.50"></text></g><g><title>0x7fa165b17124 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="317" y="340" width="2" height="15" fill="rgb(244,229,40)"/><text x="320.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(236,116,21)"/><text x="327.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.19%)</title><rect x="333" y="388" width="2" height="15" fill="rgb(238,116,42)"/><text x="336.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (10 samples, 1.92%)</title><rect x="315" y="324" width="22" height="15" fill="rgb(235,67,13)"/><text x="318.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 1.53%)</title><rect x="319" y="340" width="18" height="15" fill="rgb(230,33,53)"/><text x="322.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.34%)</title><rect x="321" y="356" width="16" height="15" fill="rgb(237,63,48)"/><text x="324.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.96%)</title><rect x="326" y="372" width="11" height="15" fill="rgb(235,174,11)"/><text x="329.00" y="382.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.19%)</title><rect x="335" y="388" width="2" height="15" fill="rgb(206,229,10)"/><text x="338.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="340" y="340" width="2" height="15" fill="rgb(225,104,45)"/><text x="343.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="340" y="356" width="2" height="15" fill="rgb(252,180,16)"/><text x="343.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(230,182,7)"/><text x="343.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.19%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(226,92,0)"/><text x="343.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="342" y="404" width="2" height="15" fill="rgb(208,143,33)"/><text x="345.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="342" y="420" width="2" height="15" fill="rgb(219,187,39)"/><text x="345.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.38%)</title><rect x="342" y="356" width="4" height="15" fill="rgb(214,190,35)"/><text x="345.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.38%)</title><rect x="342" y="372" width="4" height="15" fill="rgb(224,189,33)"/><text x="345.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (2 samples, 0.38%)</title><rect x="342" y="388" width="4" height="15" fill="rgb(225,185,54)"/><text x="345.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.19%)</title><rect x="344" y="404" width="2" height="15" fill="rgb(251,91,31)"/><text x="347.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (21 samples, 4.02%)</title><rect x="301" y="308" width="48" height="15" fill="rgb(236,124,5)"/><text x="304.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.96%)</title><rect x="337" y="324" width="12" height="15" fill="rgb(242,0,21)"/><text x="340.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="342" y="340" width="7" height="15" fill="rgb(246,103,0)"/><text x="345.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="346" y="356" width="3" height="15" fill="rgb(250,10,43)"/><text x="349.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.19%)</title><rect x="346" y="372" width="3" height="15" fill="rgb(241,107,19)"/><text x="349.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.19%)</title><rect x="346" y="388" width="3" height="15" fill="rgb(211,111,12)"/><text x="349.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.77%)</title><rect x="349" y="324" width="9" height="15" fill="rgb(225,185,22)"/><text x="352.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.38%)</title><rect x="353" y="340" width="5" height="15" fill="rgb(212,17,35)"/><text x="356.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.38%)</title><rect x="358" y="324" width="4" height="15" fill="rgb(206,210,7)"/><text x="361.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="360" y="340" width="2" height="15" fill="rgb(247,227,49)"/><text x="363.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="360" y="356" width="2" height="15" fill="rgb(208,204,22)"/><text x="363.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="360" y="372" width="2" height="15" fill="rgb(206,134,45)"/><text x="363.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="360" y="388" width="2" height="15" fill="rgb(251,155,44)"/><text x="363.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="360" y="404" width="2" height="15" fill="rgb(250,116,28)"/><text x="363.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="360" y="420" width="2" height="15" fill="rgb(213,90,15)"/><text x="363.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="362" y="356" width="2" height="15" fill="rgb(236,128,54)"/><text x="365.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="362" y="372" width="2" height="15" fill="rgb(210,0,24)"/><text x="365.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="362" y="388" width="2" height="15" fill="rgb(207,154,22)"/><text x="365.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.19%)</title><rect x="362" y="404" width="2" height="15" fill="rgb(221,46,48)"/><text x="365.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:536) (1 samples, 0.19%)</title><rect x="362" y="420" width="2" height="15" fill="rgb(210,116,15)"/><text x="365.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="364" y="356" width="3" height="15" fill="rgb(219,34,10)"/><text x="367.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.19%)</title><rect x="364" y="372" width="3" height="15" fill="rgb(241,175,48)"/><text x="367.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 1.72%)</title><rect x="349" y="308" width="20" height="15" fill="rgb(233,202,17)"/><text x="352.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.57%)</title><rect x="362" y="324" width="7" height="15" fill="rgb(228,37,16)"/><text x="365.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="362" y="340" width="7" height="15" fill="rgb(221,101,2)"/><text x="365.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="367" y="356" width="2" height="15" fill="rgb(254,51,23)"/><text x="370.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="367" y="372" width="2" height="15" fill="rgb(249,73,4)"/><text x="370.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(228,219,32)"/><text x="370.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="367" y="404" width="2" height="15" fill="rgb(218,88,29)"/><text x="370.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(245,27,25)"/><text x="370.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1498) (1 samples, 0.19%)</title><rect x="367" y="436" width="2" height="15" fill="rgb(205,147,8)"/><text x="370.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="369" y="340" width="2" height="15" fill="rgb(232,52,10)"/><text x="372.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(219,193,39)"/><text x="372.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="369" y="372" width="2" height="15" fill="rgb(227,39,31)"/><text x="372.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="369" y="388" width="2" height="15" fill="rgb(254,175,46)"/><text x="372.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="369" y="404" width="2" height="15" fill="rgb(230,212,21)"/><text x="372.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="369" y="420" width="2" height="15" fill="rgb(218,118,11)"/><text x="372.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="371" y="356" width="2" height="15" fill="rgb(252,209,4)"/><text x="374.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.19%)</title><rect x="371" y="372" width="2" height="15" fill="rgb(246,191,3)"/><text x="374.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="373" y="356" width="3" height="15" fill="rgb(228,153,19)"/><text x="376.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="373" y="372" width="3" height="15" fill="rgb(209,102,50)"/><text x="376.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="376" y="388" width="2" height="15" fill="rgb(207,105,5)"/><text x="379.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="376" y="404" width="2" height="15" fill="rgb(237,209,7)"/><text x="379.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="376" y="420" width="2" height="15" fill="rgb(253,188,53)"/><text x="379.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.38%)</title><rect x="376" y="356" width="4" height="15" fill="rgb(229,83,22)"/><text x="379.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (2 samples, 0.38%)</title><rect x="376" y="372" width="4" height="15" fill="rgb(240,198,15)"/><text x="379.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="378" y="388" width="2" height="15" fill="rgb(222,135,8)"/><text x="381.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.19%)</title><rect x="380" y="388" width="2" height="15" fill="rgb(206,26,28)"/><text x="383.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="382" y="404" width="3" height="15" fill="rgb(223,13,42)"/><text x="385.00" y="414.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.19%)</title><rect x="382" y="420" width="3" height="15" fill="rgb(254,138,52)"/><text x="385.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.38%)</title><rect x="382" y="388" width="5" height="15" fill="rgb(214,45,1)"/><text x="385.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="385" y="404" width="2" height="15" fill="rgb(251,69,33)"/><text x="388.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3040) (1 samples, 0.19%)</title><rect x="385" y="420" width="2" height="15" fill="rgb(213,124,34)"/><text x="388.00" y="430.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (61 samples, 11.69%)</title><rect x="251" y="180" width="138" height="15" fill="rgb(234,9,2)"/><text x="254.00" y="190.50">_forward_pass (sk..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (60 samples, 11.49%)</title><rect x="254" y="196" width="135" height="15" fill="rgb(219,132,44)"/><text x="257.00" y="206.50">relu (sklearn/neu..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (50 samples, 9.58%)</title><rect x="276" y="212" width="113" height="15" fill="rgb(210,79,26)"/><text x="279.00" y="222.50">clip (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (46 samples, 8.81%)</title><rect x="285" y="228" width="104" height="15" fill="rgb(211,155,49)"/><text x="288.00" y="238.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (42 samples, 8.05%)</title><rect x="294" y="244" width="95" height="15" fill="rgb(238,166,10)"/><text x="297.00" y="254.50">clip (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (40 samples, 7.66%)</title><rect x="299" y="260" width="90" height="15" fill="rgb(226,220,37)"/><text x="302.00" y="270.50">_wrapfunc ..</text></g><g><title>array_clip (methods.c:2381) (40 samples, 7.66%)</title><rect x="299" y="276" width="90" height="15" fill="rgb(249,161,49)"/><text x="302.00" y="286.50">array_clip..</text></g><g><title>forward_ndarray_method (methods.c:108) (40 samples, 7.66%)</title><rect x="299" y="292" width="90" height="15" fill="rgb(244,141,45)"/><text x="302.00" y="302.50">forward_nd..</text></g><g><title>_clip (numpy/core/_methods.py:132) (9 samples, 1.72%)</title><rect x="369" y="308" width="20" height="15" fill="rgb(237,126,18)"/><text x="372.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.72%)</title><rect x="369" y="324" width="20" height="15" fill="rgb(208,40,3)"/><text x="372.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.53%)</title><rect x="371" y="340" width="18" height="15" fill="rgb(246,143,19)"/><text x="374.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.77%)</title><rect x="380" y="356" width="9" height="15" fill="rgb(250,208,12)"/><text x="383.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.77%)</title><rect x="380" y="372" width="9" height="15" fill="rgb(250,216,40)"/><text x="383.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="387" y="388" width="2" height="15" fill="rgb(233,75,48)"/><text x="390.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="387" y="404" width="2" height="15" fill="rgb(227,54,49)"/><text x="390.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="387" y="420" width="2" height="15" fill="rgb(223,210,44)"/><text x="390.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="387" y="436" width="2" height="15" fill="rgb(232,55,20)"/><text x="390.00" y="446.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:112) (1 samples, 0.19%)</title><rect x="389" y="180" width="3" height="15" fill="rgb(234,9,11)"/><text x="392.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="398" y="260" width="3" height="15" fill="rgb(241,143,43)"/><text x="401.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="398" y="276" width="3" height="15" fill="rgb(252,41,50)"/><text x="401.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="398" y="292" width="3" height="15" fill="rgb(218,6,29)"/><text x="401.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="398" y="308" width="3" height="15" fill="rgb(249,157,23)"/><text x="401.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="398" y="324" width="3" height="15" fill="rgb(219,47,2)"/><text x="401.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="398" y="340" width="3" height="15" fill="rgb(224,49,19)"/><text x="401.00" y="350.50"></text></g><g><title>0x7fa165b0ce7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="398" y="356" width="3" height="15" fill="rgb(231,31,52)"/><text x="401.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="401" y="276" width="2" height="15" fill="rgb(248,212,10)"/><text x="404.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.19%)</title><rect x="403" y="276" width="2" height="15" fill="rgb(228,223,39)"/><text x="406.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.19%)</title><rect x="403" y="292" width="2" height="15" fill="rgb(217,62,36)"/><text x="406.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2068) (1 samples, 0.19%)</title><rect x="403" y="308" width="2" height="15" fill="rgb(247,18,23)"/><text x="406.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.19%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(249,176,37)"/><text x="408.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.19%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(223,67,52)"/><text x="408.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="407" y="292" width="3" height="15" fill="rgb(240,93,10)"/><text x="410.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="407" y="308" width="3" height="15" fill="rgb(211,22,20)"/><text x="410.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="407" y="324" width="3" height="15" fill="rgb(234,91,7)"/><text x="410.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.19%)</title><rect x="407" y="340" width="3" height="15" fill="rgb(230,24,26)"/><text x="410.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (3 samples, 0.57%)</title><rect x="410" y="308" width="6" height="15" fill="rgb(223,8,43)"/><text x="413.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (3 samples, 0.57%)</title><rect x="410" y="324" width="6" height="15" fill="rgb(234,101,39)"/><text x="413.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.57%)</title><rect x="410" y="340" width="6" height="15" fill="rgb(223,60,43)"/><text x="413.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (3 samples, 0.57%)</title><rect x="410" y="356" width="6" height="15" fill="rgb(241,152,29)"/><text x="413.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.19%)</title><rect x="416" y="324" width="3" height="15" fill="rgb(227,20,21)"/><text x="419.00" y="334.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.19%)</title><rect x="416" y="340" width="3" height="15" fill="rgb(210,222,12)"/><text x="419.00" y="350.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.19%)</title><rect x="416" y="356" width="3" height="15" fill="rgb(247,45,5)"/><text x="419.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.38%)</title><rect x="416" y="308" width="5" height="15" fill="rgb(246,132,18)"/><text x="419.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="419" y="324" width="2" height="15" fill="rgb(253,169,50)"/><text x="422.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="419" y="340" width="2" height="15" fill="rgb(243,73,40)"/><text x="422.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="419" y="356" width="2" height="15" fill="rgb(246,69,38)"/><text x="422.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="421" y="324" width="2" height="15" fill="rgb(223,123,53)"/><text x="424.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="421" y="340" width="2" height="15" fill="rgb(249,114,37)"/><text x="424.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="421" y="356" width="2" height="15" fill="rgb(230,41,18)"/><text x="424.00" y="366.50"></text></g><g><title>array_max (methods.c:323) (13 samples, 2.49%)</title><rect x="396" y="212" width="29" height="15" fill="rgb(205,52,12)"/><text x="399.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.49%)</title><rect x="396" y="228" width="29" height="15" fill="rgb(253,85,29)"/><text x="399.00" y="238.50">fo..</text></g><g><title>_amax (numpy/core/_methods.py:30) (13 samples, 2.49%)</title><rect x="396" y="244" width="29" height="15" fill="rgb(213,109,47)"/><text x="399.00" y="254.50">_a..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.11%)</title><rect x="401" y="260" width="24" height="15" fill="rgb(237,139,12)"/><text x="404.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.72%)</title><rect x="405" y="276" width="20" height="15" fill="rgb(245,144,24)"/><text x="408.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.34%)</title><rect x="410" y="292" width="15" height="15" fill="rgb(211,160,6)"/><text x="413.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.38%)</title><rect x="421" y="308" width="4" height="15" fill="rgb(232,16,53)"/><text x="424.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:481) (1 samples, 0.19%)</title><rect x="423" y="324" width="2" height="15" fill="rgb(242,169,10)"/><text x="426.00" y="334.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h:1534) (1 samples, 0.19%)</title><rect x="423" y="340" width="2" height="15" fill="rgb(238,167,39)"/><text x="426.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="425" y="276" width="3" height="15" fill="rgb(253,128,25)"/><text x="428.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="425" y="292" width="3" height="15" fill="rgb(244,155,27)"/><text x="428.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="425" y="308" width="3" height="15" fill="rgb(249,188,24)"/><text x="428.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.19%)</title><rect x="425" y="324" width="3" height="15" fill="rgb(207,18,47)"/><text x="428.00" y="334.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (16 samples, 3.07%)</title><rect x="394" y="196" width="36" height="15" fill="rgb(245,59,33)"/><text x="397.00" y="206.50">sof..</text></g><g><title>array_subtract (number.c:342) (2 samples, 0.38%)</title><rect x="425" y="212" width="5" height="15" fill="rgb(220,69,4)"/><text x="428.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="425" y="228" width="5" height="15" fill="rgb(226,207,22)"/><text x="428.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.38%)</title><rect x="425" y="244" width="5" height="15" fill="rgb(248,18,53)"/><text x="428.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.38%)</title><rect x="425" y="260" width="5" height="15" fill="rgb(220,180,21)"/><text x="428.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="428" y="276" width="2" height="15" fill="rgb(208,27,53)"/><text x="431.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="428" y="292" width="2" height="15" fill="rgb(252,12,31)"/><text x="431.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="437" y="212" width="2" height="15" fill="rgb(244,8,25)"/><text x="440.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="437" y="228" width="2" height="15" fill="rgb(233,201,13)"/><text x="440.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(243,170,26)"/><text x="440.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="437" y="260" width="2" height="15" fill="rgb(226,214,45)"/><text x="440.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="437" y="276" width="2" height="15" fill="rgb(213,48,40)"/><text x="440.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="439" y="228" width="2" height="15" fill="rgb(232,16,42)"/><text x="442.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.19%)</title><rect x="439" y="244" width="2" height="15" fill="rgb(234,128,37)"/><text x="442.00" y="254.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.19%)</title><rect x="439" y="260" width="2" height="15" fill="rgb(224,149,0)"/><text x="442.00" y="270.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (6 samples, 1.15%)</title><rect x="430" y="196" width="14" height="15" fill="rgb(222,93,50)"/><text x="433.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="439" y="212" width="5" height="15" fill="rgb(237,83,25)"/><text x="442.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="441" y="228" width="3" height="15" fill="rgb(247,10,33)"/><text x="444.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="441" y="244" width="3" height="15" fill="rgb(248,86,51)"/><text x="444.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(209,118,40)"/><text x="447.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(229,142,31)"/><text x="447.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(224,37,6)"/><text x="447.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="444" y="260" width="2" height="15" fill="rgb(228,187,36)"/><text x="447.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.19%)</title><rect x="444" y="276" width="2" height="15" fill="rgb(251,91,2)"/><text x="447.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="446" y="340" width="2" height="15" fill="rgb(212,209,40)"/><text x="449.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.38%)</title><rect x="446" y="260" width="4" height="15" fill="rgb(252,131,12)"/><text x="449.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.38%)</title><rect x="446" y="276" width="4" height="15" fill="rgb(229,36,4)"/><text x="449.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.38%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(249,118,53)"/><text x="449.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.38%)</title><rect x="446" y="308" width="4" height="15" fill="rgb(248,70,23)"/><text x="449.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="446" y="324" width="4" height="15" fill="rgb(220,95,39)"/><text x="449.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="448" y="340" width="2" height="15" fill="rgb(231,169,52)"/><text x="451.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="450" y="276" width="3" height="15" fill="rgb(205,45,21)"/><text x="453.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="453" y="292" width="2" height="15" fill="rgb(230,17,23)"/><text x="456.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.19%)</title><rect x="453" y="308" width="2" height="15" fill="rgb(240,164,25)"/><text x="456.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(251,213,0)"/><text x="458.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(253,44,19)"/><text x="458.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(235,146,5)"/><text x="458.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(218,223,45)"/><text x="458.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(219,58,30)"/><text x="458.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.19%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(229,198,36)"/><text x="458.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.19%)</title><rect x="455" y="404" width="2" height="15" fill="rgb(211,202,32)"/><text x="458.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="457" y="308" width="2" height="15" fill="rgb(207,0,23)"/><text x="460.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="457" y="324" width="2" height="15" fill="rgb(231,70,52)"/><text x="460.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="457" y="340" width="2" height="15" fill="rgb(209,185,7)"/><text x="460.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.19%)</title><rect x="457" y="356" width="2" height="15" fill="rgb(214,81,4)"/><text x="460.00" y="366.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.19%)</title><rect x="457" y="372" width="2" height="15" fill="rgb(210,19,2)"/><text x="460.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="459" y="308" width="3" height="15" fill="rgb(250,86,14)"/><text x="462.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.19%)</title><rect x="459" y="324" width="3" height="15" fill="rgb(253,87,25)"/><text x="462.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:565) (1 samples, 0.19%)</title><rect x="462" y="308" width="2" height="15" fill="rgb(213,132,24)"/><text x="465.00" y="318.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.19%)</title><rect x="462" y="324" width="2" height="15" fill="rgb(211,81,6)"/><text x="465.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.19%)</title><rect x="464" y="324" width="2" height="15" fill="rgb(250,213,49)"/><text x="467.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="464" y="340" width="2" height="15" fill="rgb(237,83,21)"/><text x="467.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.92%)</title><rect x="446" y="212" width="22" height="15" fill="rgb(208,143,20)"/><text x="449.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.92%)</title><rect x="446" y="228" width="22" height="15" fill="rgb(240,112,21)"/><text x="449.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.92%)</title><rect x="446" y="244" width="22" height="15" fill="rgb(228,37,38)"/><text x="449.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.53%)</title><rect x="450" y="260" width="18" height="15" fill="rgb(228,27,25)"/><text x="453.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.34%)</title><rect x="453" y="276" width="15" height="15" fill="rgb(232,16,47)"/><text x="456.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.15%)</title><rect x="455" y="292" width="13" height="15" fill="rgb(238,186,41)"/><text x="458.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.38%)</title><rect x="464" y="308" width="4" height="15" fill="rgb(233,179,9)"/><text x="467.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="466" y="324" width="2" height="15" fill="rgb(224,46,48)"/><text x="469.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="466" y="340" width="2" height="15" fill="rgb(232,75,15)"/><text x="469.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(223,51,32)"/><text x="471.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="468" y="244" width="3" height="15" fill="rgb(207,186,51)"/><text x="471.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.19%)</title><rect x="468" y="260" width="3" height="15" fill="rgb(214,86,51)"/><text x="471.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="468" y="212" width="5" height="15" fill="rgb(245,66,41)"/><text x="471.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="471" y="228" width="2" height="15" fill="rgb(241,193,43)"/><text x="474.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="471" y="244" width="2" height="15" fill="rgb(239,12,18)"/><text x="474.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="471" y="260" width="2" height="15" fill="rgb(223,59,26)"/><text x="474.00" y="270.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:765) (1 samples, 0.19%)</title><rect x="471" y="276" width="2" height="15" fill="rgb(242,94,15)"/><text x="474.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.19%)</title><rect x="471" y="292" width="2" height="15" fill="rgb(253,142,22)"/><text x="474.00" y="302.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (14 samples, 2.68%)</title><rect x="444" y="196" width="31" height="15" fill="rgb(250,20,39)"/><text x="447.00" y="206.50">so..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="473" y="212" width="2" height="15" fill="rgb(234,175,0)"/><text x="476.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.19%)</title><rect x="473" y="228" width="2" height="15" fill="rgb(233,70,12)"/><text x="476.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (139 samples, 26.63%)</title><rect x="163" y="164" width="314" height="15" fill="rgb(232,93,41)"/><text x="166.00" y="174.50">_predict (sklearn/neural_network/_multilay..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (38 samples, 7.28%)</title><rect x="392" y="180" width="85" height="15" fill="rgb(228,52,33)"/><text x="395.00" y="190.50">_forward_p..</text></g><g><title>softmax (sklearn/neural_network/_base.py:96) (1 samples, 0.19%)</title><rect x="475" y="196" width="2" height="15" fill="rgb(243,84,53)"/><text x="478.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (202 samples, 38.70%)</title><rect x="23" y="132" width="457" height="15" fill="rgb(225,65,21)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (185 samples, 35.44%)</title><rect x="61" y="148" width="419" height="15" fill="rgb(214,154,29)"/><text x="64.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_percept..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:686) (1 samples, 0.19%)</title><rect x="477" y="164" width="3" height="15" fill="rgb(243,77,18)"/><text x="480.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:38) (204 samples, 39.08%)</title><rect x="21" y="52" width="461" height="15" fill="rgb(211,84,19)"/><text x="24.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:37) (204 samples, 39.08%)</title><rect x="21" y="68" width="461" height="15" fill="rgb(233,81,2)"/><text x="24.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_cl_1_50_12_float_.py..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:29) (204 samples, 39.08%)</title><rect x="21" y="84" width="461" height="15" fill="rgb(208,32,45)"/><text x="24.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_...</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:23) (204 samples, 39.08%)</title><rect x="21" y="100" width="461" height="15" fill="rgb(231,43,24)"/><text x="24.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (204 samples, 39.08%)</title><rect x="21" y="116" width="461" height="15" fill="rgb(218,211,23)"/><text x="24.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="480" y="132" width="2" height="15" fill="rgb(229,203,14)"/><text x="483.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:1) (1 samples, 0.19%)</title><rect x="482" y="148" width="2" height="15" fill="rgb(247,229,51)"/><text x="485.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="164" width="2" height="15" fill="rgb(216,51,30)"/><text x="485.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="180" width="2" height="15" fill="rgb(214,136,34)"/><text x="485.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="196" width="2" height="15" fill="rgb(253,113,20)"/><text x="485.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="212" width="2" height="15" fill="rgb(250,194,47)"/><text x="485.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="228" width="2" height="15" fill="rgb(249,127,20)"/><text x="485.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.19%)</title><rect x="482" y="244" width="2" height="15" fill="rgb(214,17,14)"/><text x="485.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="482" y="260" width="2" height="15" fill="rgb(250,210,19)"/><text x="485.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="276" width="2" height="15" fill="rgb(240,89,22)"/><text x="485.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="292" width="2" height="15" fill="rgb(217,152,23)"/><text x="485.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="308" width="2" height="15" fill="rgb(224,1,26)"/><text x="485.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(206,105,54)"/><text x="485.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(232,32,27)"/><text x="485.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="356" width="2" height="15" fill="rgb(213,41,37)"/><text x="485.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.19%)</title><rect x="482" y="372" width="2" height="15" fill="rgb(235,214,54)"/><text x="485.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="482" y="388" width="2" height="15" fill="rgb(231,4,6)"/><text x="485.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="404" width="2" height="15" fill="rgb(235,201,43)"/><text x="485.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="420" width="2" height="15" fill="rgb(229,66,48)"/><text x="485.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="436" width="2" height="15" fill="rgb(239,115,48)"/><text x="485.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="452" width="2" height="15" fill="rgb(233,19,4)"/><text x="485.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="468" width="2" height="15" fill="rgb(219,185,36)"/><text x="485.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="484" width="2" height="15" fill="rgb(250,98,38)"/><text x="485.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.19%)</title><rect x="482" y="500" width="2" height="15" fill="rgb(210,22,54)"/><text x="485.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="482" y="516" width="2" height="15" fill="rgb(241,219,2)"/><text x="485.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="532" width="2" height="15" fill="rgb(218,28,48)"/><text x="485.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="548" width="2" height="15" fill="rgb(225,62,35)"/><text x="485.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="564" width="2" height="15" fill="rgb(208,194,34)"/><text x="485.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="580" width="2" height="15" fill="rgb(234,227,24)"/><text x="485.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="596" width="2" height="15" fill="rgb(253,46,11)"/><text x="485.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="612" width="2" height="15" fill="rgb(225,83,47)"/><text x="485.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.19%)</title><rect x="482" y="628" width="2" height="15" fill="rgb(238,36,8)"/><text x="485.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="644" width="2" height="15" fill="rgb(205,210,43)"/><text x="485.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="482" y="660" width="2" height="15" fill="rgb(217,225,27)"/><text x="485.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="676" width="2" height="15" fill="rgb(248,183,44)"/><text x="485.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="692" width="2" height="15" fill="rgb(208,203,28)"/><text x="485.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="708" width="2" height="15" fill="rgb(208,45,52)"/><text x="485.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="724" width="2" height="15" fill="rgb(209,132,28)"/><text x="485.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="740" width="2" height="15" fill="rgb(249,29,36)"/><text x="485.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="756" width="2" height="15" fill="rgb(249,211,43)"/><text x="485.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.19%)</title><rect x="482" y="772" width="2" height="15" fill="rgb(252,48,23)"/><text x="485.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="482" y="788" width="2" height="15" fill="rgb(242,204,46)"/><text x="485.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="804" width="2" height="15" fill="rgb(219,204,7)"/><text x="485.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="820" width="2" height="15" fill="rgb(221,83,25)"/><text x="485.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="836" width="2" height="15" fill="rgb(232,214,11)"/><text x="485.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="852" width="2" height="15" fill="rgb(228,43,10)"/><text x="485.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="868" width="2" height="15" fill="rgb(223,153,48)"/><text x="485.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="884" width="2" height="15" fill="rgb(229,224,42)"/><text x="485.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:26) (1 samples, 0.19%)</title><rect x="482" y="900" width="2" height="15" fill="rgb(243,192,54)"/><text x="485.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="916" width="2" height="15" fill="rgb(243,79,52)"/><text x="485.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="932" width="2" height="15" fill="rgb(229,68,14)"/><text x="485.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="948" width="2" height="15" fill="rgb(225,187,8)"/><text x="485.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="964" width="2" height="15" fill="rgb(242,137,41)"/><text x="485.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="980" width="2" height="15" fill="rgb(230,163,23)"/><text x="485.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py:33) (1 samples, 0.19%)</title><rect x="482" y="996" width="2" height="15" fill="rgb(215,190,14)"/><text x="485.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="1012" width="2" height="15" fill="rgb(238,224,24)"/><text x="485.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="1028" width="2" height="15" fill="rgb(227,179,28)"/><text x="485.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="482" y="1044" width="2" height="15" fill="rgb(250,179,52)"/><text x="485.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="482" y="1060" width="2" height="15" fill="rgb(211,153,53)"/><text x="485.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="1076" width="2" height="15" fill="rgb(214,57,23)"/><text x="485.00" y="1086.50"></text></g><g><title>&lt;module&gt; (struct.py:13) (1 samples, 0.19%)</title><rect x="482" y="1092" width="2" height="15" fill="rgb(215,19,4)"/><text x="485.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="482" y="1108" width="2" height="15" fill="rgb(232,13,20)"/><text x="485.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="482" y="1124" width="2" height="15" fill="rgb(208,121,31)"/><text x="485.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="482" y="1140" width="2" height="15" fill="rgb(242,161,15)"/><text x="485.00" y="1150.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="482" y="1156" width="2" height="15" fill="rgb(231,32,14)"/><text x="485.00" y="1166.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="482" y="1172" width="2" height="15" fill="rgb(208,18,21)"/><text x="485.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="482" y="1188" width="2" height="15" fill="rgb(215,187,31)"/><text x="485.00" y="1198.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1204" width="2" height="15" fill="rgb(211,16,50)"/><text x="485.00" y="1214.50"></text></g><g><title>0x7fa165d7e995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1220" width="2" height="15" fill="rgb(215,61,0)"/><text x="485.00" y="1230.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1236" width="2" height="15" fill="rgb(245,148,35)"/><text x="485.00" y="1246.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1252" width="2" height="15" fill="rgb(217,48,28)"/><text x="485.00" y="1262.50"></text></g><g><title>0x7fa165d7e258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1268" width="2" height="15" fill="rgb(254,56,3)"/><text x="485.00" y="1278.50"></text></g><g><title>0x7fa165dcbd7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1284" width="2" height="15" fill="rgb(231,110,8)"/><text x="485.00" y="1294.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1300" width="2" height="15" fill="rgb(232,153,8)"/><text x="485.00" y="1310.50"></text></g><g><title>0x7fa165dcc345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1316" width="2" height="15" fill="rgb(244,175,39)"/><text x="485.00" y="1326.50"></text></g><g><title>0x7fa165dc4fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1332" width="2" height="15" fill="rgb(206,171,8)"/><text x="485.00" y="1342.50"></text></g><g><title>0x7fa165dc356b (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1348" width="2" height="15" fill="rgb(235,219,43)"/><text x="485.00" y="1358.50"></text></g><g><title>0x7fa165dc2c6d (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1364" width="2" height="15" fill="rgb(210,174,25)"/><text x="485.00" y="1374.50"></text></g><g><title>0x7fa165dc270f (ld-2.29.so) (1 samples, 0.19%)</title><rect x="482" y="1380" width="2" height="15" fill="rgb(253,60,42)"/><text x="485.00" y="1390.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.19%)</title><rect x="484" y="932" width="2" height="15" fill="rgb(234,80,32)"/><text x="487.00" y="942.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.19%)</title><rect x="484" y="948" width="2" height="15" fill="rgb(241,173,10)"/><text x="487.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.19%)</title><rect x="484" y="964" width="2" height="15" fill="rgb(219,116,7)"/><text x="487.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.19%)</title><rect x="486" y="932" width="3" height="15" fill="rgb(208,114,9)"/><text x="489.00" y="942.50"></text></g><g><title>basename (posixpath.py:147) (1 samples, 0.19%)</title><rect x="486" y="948" width="3" height="15" fill="rgb(205,200,23)"/><text x="489.00" y="958.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.19%)</title><rect x="486" y="964" width="3" height="15" fill="rgb(211,38,3)"/><text x="489.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.57%)</title><rect x="484" y="852" width="7" height="15" fill="rgb(227,10,36)"/><text x="487.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.57%)</title><rect x="484" y="868" width="7" height="15" fill="rgb(229,173,10)"/><text x="487.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.57%)</title><rect x="484" y="884" width="7" height="15" fill="rgb(252,50,52)"/><text x="487.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.57%)</title><rect x="484" y="900" width="7" height="15" fill="rgb(226,78,36)"/><text x="487.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.57%)</title><rect x="484" y="916" width="7" height="15" fill="rgb(232,207,50)"/><text x="487.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="489" y="932" width="2" height="15" fill="rgb(229,3,41)"/><text x="492.00" y="942.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.19%)</title><rect x="491" y="964" width="2" height="15" fill="rgb(225,37,10)"/><text x="494.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.19%)</title><rect x="491" y="980" width="2" height="15" fill="rgb(240,13,31)"/><text x="494.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.19%)</title><rect x="491" y="996" width="2" height="15" fill="rgb(221,138,25)"/><text x="494.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="491" y="1012" width="2" height="15" fill="rgb(240,174,47)"/><text x="494.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="491" y="1028" width="2" height="15" fill="rgb(251,153,32)"/><text x="494.00" y="1038.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.19%)</title><rect x="493" y="964" width="3" height="15" fill="rgb(239,69,11)"/><text x="496.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.19%)</title><rect x="493" y="980" width="3" height="15" fill="rgb(213,29,15)"/><text x="496.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.19%)</title><rect x="493" y="996" width="3" height="15" fill="rgb(206,102,32)"/><text x="496.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="493" y="1012" width="3" height="15" fill="rgb(249,38,53)"/><text x="496.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="493" y="1028" width="3" height="15" fill="rgb(228,18,10)"/><text x="496.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="493" y="1044" width="3" height="15" fill="rgb(232,102,52)"/><text x="496.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.57%)</title><rect x="491" y="852" width="7" height="15" fill="rgb(208,226,45)"/><text x="494.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.57%)</title><rect x="491" y="868" width="7" height="15" fill="rgb(235,206,36)"/><text x="494.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.57%)</title><rect x="491" y="884" width="7" height="15" fill="rgb(238,220,4)"/><text x="494.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.57%)</title><rect x="491" y="900" width="7" height="15" fill="rgb(230,43,6)"/><text x="494.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.57%)</title><rect x="491" y="916" width="7" height="15" fill="rgb(214,181,37)"/><text x="494.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.57%)</title><rect x="491" y="932" width="7" height="15" fill="rgb(219,186,12)"/><text x="494.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.57%)</title><rect x="491" y="948" width="7" height="15" fill="rgb(210,24,33)"/><text x="494.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.19%)</title><rect x="496" y="964" width="2" height="15" fill="rgb(216,104,2)"/><text x="499.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:2) (7 samples, 1.34%)</title><rect x="484" y="148" width="16" height="15" fill="rgb(206,170,51)"/><text x="487.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="164" width="16" height="15" fill="rgb(227,144,47)"/><text x="487.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.34%)</title><rect x="484" y="180" width="16" height="15" fill="rgb(239,152,44)"/><text x="487.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="196" width="16" height="15" fill="rgb(212,174,24)"/><text x="487.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="212" width="16" height="15" fill="rgb(243,128,35)"/><text x="487.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="228" width="16" height="15" fill="rgb(222,105,36)"/><text x="487.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="244" width="16" height="15" fill="rgb(224,88,4)"/><text x="487.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="260" width="16" height="15" fill="rgb(247,124,20)"/><text x="487.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="276" width="16" height="15" fill="rgb(223,45,29)"/><text x="487.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.34%)</title><rect x="484" y="292" width="16" height="15" fill="rgb(237,194,46)"/><text x="487.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="308" width="16" height="15" fill="rgb(253,147,19)"/><text x="487.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="324" width="16" height="15" fill="rgb(252,149,42)"/><text x="487.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="340" width="16" height="15" fill="rgb(231,93,15)"/><text x="487.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="356" width="16" height="15" fill="rgb(219,114,50)"/><text x="487.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="372" width="16" height="15" fill="rgb(247,22,39)"/><text x="487.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 1.34%)</title><rect x="484" y="388" width="16" height="15" fill="rgb(238,109,12)"/><text x="487.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="404" width="16" height="15" fill="rgb(253,81,20)"/><text x="487.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="420" width="16" height="15" fill="rgb(224,166,9)"/><text x="487.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="436" width="16" height="15" fill="rgb(207,196,9)"/><text x="487.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="452" width="16" height="15" fill="rgb(216,115,1)"/><text x="487.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="468" width="16" height="15" fill="rgb(248,135,1)"/><text x="487.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 1.34%)</title><rect x="484" y="484" width="16" height="15" fill="rgb(220,80,7)"/><text x="487.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="500" width="16" height="15" fill="rgb(212,58,28)"/><text x="487.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="516" width="16" height="15" fill="rgb(254,210,51)"/><text x="487.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="532" width="16" height="15" fill="rgb(219,45,43)"/><text x="487.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="548" width="16" height="15" fill="rgb(232,116,27)"/><text x="487.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="564" width="16" height="15" fill="rgb(214,40,8)"/><text x="487.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 1.34%)</title><rect x="484" y="580" width="16" height="15" fill="rgb(229,127,0)"/><text x="487.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="596" width="16" height="15" fill="rgb(218,100,48)"/><text x="487.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.34%)</title><rect x="484" y="612" width="16" height="15" fill="rgb(223,160,15)"/><text x="487.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="628" width="16" height="15" fill="rgb(212,37,40)"/><text x="487.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="644" width="16" height="15" fill="rgb(231,83,38)"/><text x="487.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="660" width="16" height="15" fill="rgb(235,62,34)"/><text x="487.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="676" width="16" height="15" fill="rgb(216,73,48)"/><text x="487.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="692" width="16" height="15" fill="rgb(230,54,4)"/><text x="487.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="708" width="16" height="15" fill="rgb(254,85,7)"/><text x="487.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 1.34%)</title><rect x="484" y="724" width="16" height="15" fill="rgb(239,9,3)"/><text x="487.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.34%)</title><rect x="484" y="740" width="16" height="15" fill="rgb(220,221,14)"/><text x="487.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.34%)</title><rect x="484" y="756" width="16" height="15" fill="rgb(215,80,43)"/><text x="487.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.34%)</title><rect x="484" y="772" width="16" height="15" fill="rgb(206,72,37)"/><text x="487.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.34%)</title><rect x="484" y="788" width="16" height="15" fill="rgb(214,153,7)"/><text x="487.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.34%)</title><rect x="484" y="804" width="16" height="15" fill="rgb(251,144,44)"/><text x="487.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 1.34%)</title><rect x="484" y="820" width="16" height="15" fill="rgb(248,35,43)"/><text x="487.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 1.34%)</title><rect x="484" y="836" width="16" height="15" fill="rgb(251,48,2)"/><text x="487.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.19%)</title><rect x="498" y="852" width="2" height="15" fill="rgb(208,161,10)"/><text x="501.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="498" y="868" width="2" height="15" fill="rgb(221,1,51)"/><text x="501.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="498" y="884" width="2" height="15" fill="rgb(247,164,15)"/><text x="501.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="498" y="900" width="2" height="15" fill="rgb(254,225,18)"/><text x="501.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="498" y="916" width="2" height="15" fill="rgb(243,63,47)"/><text x="501.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="498" y="932" width="2" height="15" fill="rgb(242,52,26)"/><text x="501.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="498" y="948" width="2" height="15" fill="rgb(242,173,4)"/><text x="501.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="498" y="964" width="2" height="15" fill="rgb(207,147,44)"/><text x="501.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.19%)</title><rect x="498" y="980" width="2" height="15" fill="rgb(211,60,38)"/><text x="501.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="498" y="996" width="2" height="15" fill="rgb(252,222,50)"/><text x="501.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.19%)</title><rect x="498" y="1012" width="2" height="15" fill="rgb(252,213,50)"/><text x="501.00" y="1022.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="498" y="1028" width="2" height="15" fill="rgb(245,156,12)"/><text x="501.00" y="1038.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="500" y="484" width="2" height="15" fill="rgb(246,207,37)"/><text x="503.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="500" y="500" width="2" height="15" fill="rgb(249,149,44)"/><text x="503.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="500" y="516" width="2" height="15" fill="rgb(225,226,16)"/><text x="503.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="500" y="532" width="2" height="15" fill="rgb(246,25,14)"/><text x="503.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="500" y="548" width="2" height="15" fill="rgb(221,158,8)"/><text x="503.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="500" y="564" width="2" height="15" fill="rgb(243,13,19)"/><text x="503.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="500" y="580" width="2" height="15" fill="rgb(221,56,51)"/><text x="503.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="500" y="596" width="2" height="15" fill="rgb(206,169,45)"/><text x="503.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.19%)</title><rect x="500" y="612" width="2" height="15" fill="rgb(228,55,27)"/><text x="503.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="500" y="628" width="2" height="15" fill="rgb(208,119,26)"/><text x="503.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="500" y="644" width="2" height="15" fill="rgb(226,70,2)"/><text x="503.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="500" y="660" width="2" height="15" fill="rgb(210,132,20)"/><text x="503.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="500" y="676" width="2" height="15" fill="rgb(249,176,17)"/><text x="503.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="500" y="692" width="2" height="15" fill="rgb(219,40,5)"/><text x="503.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.19%)</title><rect x="500" y="708" width="2" height="15" fill="rgb(240,2,23)"/><text x="503.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="500" y="724" width="2" height="15" fill="rgb(241,126,45)"/><text x="503.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="500" y="740" width="2" height="15" fill="rgb(237,208,8)"/><text x="503.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="500" y="756" width="2" height="15" fill="rgb(222,181,0)"/><text x="503.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="500" y="772" width="2" height="15" fill="rgb(243,177,28)"/><text x="503.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="500" y="788" width="2" height="15" fill="rgb(247,90,26)"/><text x="503.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:24) (1 samples, 0.19%)</title><rect x="500" y="804" width="2" height="15" fill="rgb(225,138,45)"/><text x="503.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="500" y="820" width="2" height="15" fill="rgb(210,84,29)"/><text x="503.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="500" y="836" width="2" height="15" fill="rgb(216,225,5)"/><text x="503.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="500" y="852" width="2" height="15" fill="rgb(254,29,44)"/><text x="503.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="500" y="868" width="2" height="15" fill="rgb(249,196,24)"/><text x="503.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="500" y="884" width="2" height="15" fill="rgb(219,43,18)"/><text x="503.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py:62) (1 samples, 0.19%)</title><rect x="500" y="900" width="2" height="15" fill="rgb(211,172,36)"/><text x="503.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:4) (2 samples, 0.38%)</title><rect x="500" y="148" width="5" height="15" fill="rgb(245,95,35)"/><text x="503.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="500" y="164" width="5" height="15" fill="rgb(236,130,4)"/><text x="503.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.38%)</title><rect x="500" y="180" width="5" height="15" fill="rgb(237,53,0)"/><text x="503.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="500" y="196" width="5" height="15" fill="rgb(227,156,1)"/><text x="503.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="500" y="212" width="5" height="15" fill="rgb(228,33,21)"/><text x="503.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="500" y="228" width="5" height="15" fill="rgb(245,117,17)"/><text x="503.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="500" y="244" width="5" height="15" fill="rgb(253,220,37)"/><text x="503.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="500" y="260" width="5" height="15" fill="rgb(239,206,31)"/><text x="503.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="500" y="276" width="5" height="15" fill="rgb(220,44,27)"/><text x="503.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.38%)</title><rect x="500" y="292" width="5" height="15" fill="rgb(215,180,44)"/><text x="503.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="500" y="308" width="5" height="15" fill="rgb(221,124,35)"/><text x="503.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="500" y="324" width="5" height="15" fill="rgb(218,4,28)"/><text x="503.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="500" y="340" width="5" height="15" fill="rgb(234,207,30)"/><text x="503.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="500" y="356" width="5" height="15" fill="rgb(241,223,42)"/><text x="503.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="500" y="372" width="5" height="15" fill="rgb(253,175,40)"/><text x="503.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.38%)</title><rect x="500" y="388" width="5" height="15" fill="rgb(231,34,43)"/><text x="503.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="500" y="404" width="5" height="15" fill="rgb(219,97,13)"/><text x="503.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="500" y="420" width="5" height="15" fill="rgb(230,96,1)"/><text x="503.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="500" y="436" width="5" height="15" fill="rgb(236,62,51)"/><text x="503.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="500" y="452" width="5" height="15" fill="rgb(251,100,0)"/><text x="503.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="500" y="468" width="5" height="15" fill="rgb(239,7,51)"/><text x="503.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.19%)</title><rect x="502" y="484" width="3" height="15" fill="rgb(217,179,31)"/><text x="505.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="502" y="500" width="3" height="15" fill="rgb(223,8,28)"/><text x="505.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="502" y="516" width="3" height="15" fill="rgb(250,226,40)"/><text x="505.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="502" y="532" width="3" height="15" fill="rgb(229,36,37)"/><text x="505.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="502" y="548" width="3" height="15" fill="rgb(221,82,35)"/><text x="505.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="502" y="564" width="3" height="15" fill="rgb(219,114,8)"/><text x="505.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.19%)</title><rect x="502" y="580" width="3" height="15" fill="rgb(205,212,37)"/><text x="505.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="502" y="596" width="3" height="15" fill="rgb(254,113,25)"/><text x="505.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="502" y="612" width="3" height="15" fill="rgb(249,174,36)"/><text x="505.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="502" y="628" width="3" height="15" fill="rgb(240,97,49)"/><text x="505.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="502" y="644" width="3" height="15" fill="rgb(221,200,2)"/><text x="505.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="502" y="660" width="3" height="15" fill="rgb(231,46,4)"/><text x="505.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.19%)</title><rect x="502" y="676" width="3" height="15" fill="rgb(247,194,10)"/><text x="505.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="502" y="692" width="3" height="15" fill="rgb(247,181,53)"/><text x="505.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="502" y="708" width="3" height="15" fill="rgb(237,189,23)"/><text x="505.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="502" y="724" width="3" height="15" fill="rgb(247,174,9)"/><text x="505.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="502" y="740" width="3" height="15" fill="rgb(243,177,15)"/><text x="505.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="502" y="756" width="3" height="15" fill="rgb(241,155,8)"/><text x="505.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.19%)</title><rect x="502" y="772" width="3" height="15" fill="rgb(248,105,41)"/><text x="505.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="502" y="788" width="3" height="15" fill="rgb(208,86,15)"/><text x="505.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="502" y="804" width="3" height="15" fill="rgb(248,183,53)"/><text x="505.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="502" y="820" width="3" height="15" fill="rgb(221,119,16)"/><text x="505.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="502" y="836" width="3" height="15" fill="rgb(236,57,37)"/><text x="505.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="502" y="852" width="3" height="15" fill="rgb(235,160,0)"/><text x="505.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.19%)</title><rect x="502" y="868" width="3" height="15" fill="rgb(253,208,0)"/><text x="505.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="502" y="884" width="3" height="15" fill="rgb(234,213,41)"/><text x="505.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="502" y="900" width="3" height="15" fill="rgb(254,110,21)"/><text x="505.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="502" y="916" width="3" height="15" fill="rgb(214,98,21)"/><text x="505.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="502" y="932" width="3" height="15" fill="rgb(217,95,10)"/><text x="505.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="502" y="948" width="3" height="15" fill="rgb(214,78,35)"/><text x="505.00" y="958.50"></text></g><g><title>0x7fa150dc0933 (?) (1 samples, 0.19%)</title><rect x="502" y="964" width="3" height="15" fill="rgb(220,127,35)"/><text x="505.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.19%)</title><rect x="505" y="244" width="2" height="15" fill="rgb(247,208,38)"/><text x="508.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="260" width="2" height="15" fill="rgb(238,63,34)"/><text x="508.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="276" width="2" height="15" fill="rgb(231,58,37)"/><text x="508.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="292" width="2" height="15" fill="rgb(221,204,47)"/><text x="508.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="308" width="2" height="15" fill="rgb(246,63,2)"/><text x="508.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="324" width="2" height="15" fill="rgb(240,115,5)"/><text x="508.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.19%)</title><rect x="505" y="340" width="2" height="15" fill="rgb(243,171,13)"/><text x="508.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="356" width="2" height="15" fill="rgb(206,154,38)"/><text x="508.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="505" y="372" width="2" height="15" fill="rgb(218,94,43)"/><text x="508.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="388" width="2" height="15" fill="rgb(218,66,29)"/><text x="508.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="404" width="2" height="15" fill="rgb(207,145,47)"/><text x="508.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="420" width="2" height="15" fill="rgb(223,212,27)"/><text x="508.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="436" width="2" height="15" fill="rgb(212,162,29)"/><text x="508.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="452" width="2" height="15" fill="rgb(224,217,3)"/><text x="508.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="468" width="2" height="15" fill="rgb(213,228,12)"/><text x="508.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.19%)</title><rect x="505" y="484" width="2" height="15" fill="rgb(246,17,0)"/><text x="508.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="500" width="2" height="15" fill="rgb(220,104,26)"/><text x="508.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="516" width="2" height="15" fill="rgb(249,186,52)"/><text x="508.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="532" width="2" height="15" fill="rgb(214,77,41)"/><text x="508.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="548" width="2" height="15" fill="rgb(209,48,36)"/><text x="508.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="564" width="2" height="15" fill="rgb(208,144,54)"/><text x="508.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.19%)</title><rect x="505" y="580" width="2" height="15" fill="rgb(251,171,41)"/><text x="508.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="596" width="2" height="15" fill="rgb(222,139,39)"/><text x="508.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="505" y="612" width="2" height="15" fill="rgb(235,22,32)"/><text x="508.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="628" width="2" height="15" fill="rgb(225,207,49)"/><text x="508.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="644" width="2" height="15" fill="rgb(234,182,36)"/><text x="508.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="660" width="2" height="15" fill="rgb(240,49,40)"/><text x="508.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="676" width="2" height="15" fill="rgb(235,143,3)"/><text x="508.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="692" width="2" height="15" fill="rgb(246,9,26)"/><text x="508.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="708" width="2" height="15" fill="rgb(205,59,29)"/><text x="508.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.19%)</title><rect x="505" y="724" width="2" height="15" fill="rgb(234,145,2)"/><text x="508.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="740" width="2" height="15" fill="rgb(224,8,43)"/><text x="508.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="756" width="2" height="15" fill="rgb(220,7,54)"/><text x="508.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="772" width="2" height="15" fill="rgb(240,187,14)"/><text x="508.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="788" width="2" height="15" fill="rgb(241,201,16)"/><text x="508.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="804" width="2" height="15" fill="rgb(221,90,34)"/><text x="508.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.19%)</title><rect x="505" y="820" width="2" height="15" fill="rgb(230,105,31)"/><text x="508.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="836" width="2" height="15" fill="rgb(225,24,53)"/><text x="508.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="852" width="2" height="15" fill="rgb(232,152,35)"/><text x="508.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="868" width="2" height="15" fill="rgb(233,79,54)"/><text x="508.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="884" width="2" height="15" fill="rgb(236,114,23)"/><text x="508.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="900" width="2" height="15" fill="rgb(214,201,21)"/><text x="508.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.19%)</title><rect x="505" y="916" width="2" height="15" fill="rgb(238,30,32)"/><text x="508.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="932" width="2" height="15" fill="rgb(247,112,35)"/><text x="508.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="505" y="948" width="2" height="15" fill="rgb(225,147,25)"/><text x="508.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="964" width="2" height="15" fill="rgb(205,165,32)"/><text x="508.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="980" width="2" height="15" fill="rgb(227,80,11)"/><text x="508.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="996" width="2" height="15" fill="rgb(207,79,9)"/><text x="508.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="1012" width="2" height="15" fill="rgb(237,143,3)"/><text x="508.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="505" y="1028" width="2" height="15" fill="rgb(229,30,13)"/><text x="508.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="505" y="1044" width="2" height="15" fill="rgb(241,115,53)"/><text x="508.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.19%)</title><rect x="505" y="1060" width="2" height="15" fill="rgb(228,46,48)"/><text x="508.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="505" y="1076" width="2" height="15" fill="rgb(243,133,32)"/><text x="508.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="505" y="1092" width="2" height="15" fill="rgb(252,52,28)"/><text x="508.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="505" y="1108" width="2" height="15" fill="rgb(240,144,5)"/><text x="508.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="505" y="1124" width="2" height="15" fill="rgb(223,50,52)"/><text x="508.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="505" y="1140" width="2" height="15" fill="rgb(226,85,54)"/><text x="508.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="505" y="1156" width="2" height="15" fill="rgb(230,72,23)"/><text x="508.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.19%)</title><rect x="507" y="436" width="2" height="15" fill="rgb(232,54,50)"/><text x="510.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="452" width="2" height="15" fill="rgb(210,137,20)"/><text x="510.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="468" width="2" height="15" fill="rgb(238,177,17)"/><text x="510.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="484" width="2" height="15" fill="rgb(205,176,49)"/><text x="510.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="500" width="2" height="15" fill="rgb(230,91,20)"/><text x="510.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="516" width="2" height="15" fill="rgb(231,169,51)"/><text x="510.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.19%)</title><rect x="507" y="532" width="2" height="15" fill="rgb(250,95,23)"/><text x="510.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="548" width="2" height="15" fill="rgb(245,179,36)"/><text x="510.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="564" width="2" height="15" fill="rgb(230,185,51)"/><text x="510.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="580" width="2" height="15" fill="rgb(217,178,4)"/><text x="510.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="596" width="2" height="15" fill="rgb(232,173,7)"/><text x="510.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="612" width="2" height="15" fill="rgb(239,58,16)"/><text x="510.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.19%)</title><rect x="507" y="628" width="2" height="15" fill="rgb(245,38,24)"/><text x="510.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="644" width="2" height="15" fill="rgb(248,77,9)"/><text x="510.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="660" width="2" height="15" fill="rgb(248,147,34)"/><text x="510.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="676" width="2" height="15" fill="rgb(221,223,35)"/><text x="510.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="692" width="2" height="15" fill="rgb(244,88,36)"/><text x="510.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="708" width="2" height="15" fill="rgb(224,98,34)"/><text x="510.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.19%)</title><rect x="507" y="724" width="2" height="15" fill="rgb(251,135,0)"/><text x="510.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="740" width="2" height="15" fill="rgb(229,99,7)"/><text x="510.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="756" width="2" height="15" fill="rgb(221,11,23)"/><text x="510.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="772" width="2" height="15" fill="rgb(242,222,7)"/><text x="510.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="788" width="2" height="15" fill="rgb(213,3,51)"/><text x="510.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="804" width="2" height="15" fill="rgb(252,4,21)"/><text x="510.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.19%)</title><rect x="507" y="820" width="2" height="15" fill="rgb(207,185,32)"/><text x="510.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="836" width="2" height="15" fill="rgb(208,191,34)"/><text x="510.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="852" width="2" height="15" fill="rgb(253,173,20)"/><text x="510.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="868" width="2" height="15" fill="rgb(212,45,47)"/><text x="510.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="884" width="2" height="15" fill="rgb(252,129,27)"/><text x="510.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="900" width="2" height="15" fill="rgb(217,192,34)"/><text x="510.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.19%)</title><rect x="507" y="916" width="2" height="15" fill="rgb(211,177,19)"/><text x="510.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="932" width="2" height="15" fill="rgb(215,128,10)"/><text x="510.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="948" width="2" height="15" fill="rgb(250,167,39)"/><text x="510.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="964" width="2" height="15" fill="rgb(237,81,1)"/><text x="510.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="980" width="2" height="15" fill="rgb(228,221,2)"/><text x="510.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="996" width="2" height="15" fill="rgb(220,212,37)"/><text x="510.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.19%)</title><rect x="507" y="1012" width="2" height="15" fill="rgb(221,18,0)"/><text x="510.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1028" width="2" height="15" fill="rgb(224,74,32)"/><text x="510.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1044" width="2" height="15" fill="rgb(241,85,18)"/><text x="510.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1060" width="2" height="15" fill="rgb(242,131,17)"/><text x="510.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1076" width="2" height="15" fill="rgb(219,140,11)"/><text x="510.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1092" width="2" height="15" fill="rgb(246,190,40)"/><text x="510.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.19%)</title><rect x="507" y="1108" width="2" height="15" fill="rgb(221,18,41)"/><text x="510.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1124" width="2" height="15" fill="rgb(208,87,4)"/><text x="510.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1140" width="2" height="15" fill="rgb(254,42,50)"/><text x="510.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1156" width="2" height="15" fill="rgb(234,134,10)"/><text x="510.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1172" width="2" height="15" fill="rgb(214,107,5)"/><text x="510.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1188" width="2" height="15" fill="rgb(241,100,41)"/><text x="510.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.19%)</title><rect x="507" y="1204" width="2" height="15" fill="rgb(206,26,52)"/><text x="510.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1220" width="2" height="15" fill="rgb(207,65,3)"/><text x="510.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1236" width="2" height="15" fill="rgb(236,135,10)"/><text x="510.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1252" width="2" height="15" fill="rgb(246,47,27)"/><text x="510.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1268" width="2" height="15" fill="rgb(228,109,33)"/><text x="510.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1284" width="2" height="15" fill="rgb(234,172,36)"/><text x="510.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.19%)</title><rect x="507" y="1300" width="2" height="15" fill="rgb(233,2,53)"/><text x="510.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1316" width="2" height="15" fill="rgb(221,122,17)"/><text x="510.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1332" width="2" height="15" fill="rgb(231,123,54)"/><text x="510.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1348" width="2" height="15" fill="rgb(218,21,17)"/><text x="510.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1364" width="2" height="15" fill="rgb(219,83,20)"/><text x="510.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1380" width="2" height="15" fill="rgb(215,84,7)"/><text x="510.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.19%)</title><rect x="507" y="1396" width="2" height="15" fill="rgb(206,79,17)"/><text x="510.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1412" width="2" height="15" fill="rgb(212,178,26)"/><text x="510.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1428" width="2" height="15" fill="rgb(252,132,26)"/><text x="510.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1444" width="2" height="15" fill="rgb(232,9,23)"/><text x="510.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1460" width="2" height="15" fill="rgb(229,72,38)"/><text x="510.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1476" width="2" height="15" fill="rgb(218,86,29)"/><text x="510.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.19%)</title><rect x="507" y="1492" width="2" height="15" fill="rgb(249,191,0)"/><text x="510.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1508" width="2" height="15" fill="rgb(233,133,39)"/><text x="510.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1524" width="2" height="15" fill="rgb(234,13,33)"/><text x="510.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1540" width="2" height="15" fill="rgb(220,71,47)"/><text x="510.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1556" width="2" height="15" fill="rgb(229,132,34)"/><text x="510.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1572" width="2" height="15" fill="rgb(238,53,31)"/><text x="510.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.19%)</title><rect x="507" y="1588" width="2" height="15" fill="rgb(225,204,19)"/><text x="510.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1604" width="2" height="15" fill="rgb(250,38,14)"/><text x="510.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1620" width="2" height="15" fill="rgb(252,18,5)"/><text x="510.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1636" width="2" height="15" fill="rgb(212,139,27)"/><text x="510.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1652" width="2" height="15" fill="rgb(226,18,33)"/><text x="510.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1668" width="2" height="15" fill="rgb(229,180,25)"/><text x="510.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.19%)</title><rect x="507" y="1684" width="2" height="15" fill="rgb(207,121,6)"/><text x="510.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1700" width="2" height="15" fill="rgb(213,161,39)"/><text x="510.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1716" width="2" height="15" fill="rgb(228,162,4)"/><text x="510.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1732" width="2" height="15" fill="rgb(215,146,10)"/><text x="510.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1748" width="2" height="15" fill="rgb(223,70,5)"/><text x="510.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1764" width="2" height="15" fill="rgb(217,162,46)"/><text x="510.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.19%)</title><rect x="507" y="1780" width="2" height="15" fill="rgb(222,126,8)"/><text x="510.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="507" y="1796" width="2" height="15" fill="rgb(209,226,44)"/><text x="510.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="507" y="1812" width="2" height="15" fill="rgb(247,68,27)"/><text x="510.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="507" y="1828" width="2" height="15" fill="rgb(210,132,27)"/><text x="510.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="507" y="1844" width="2" height="15" fill="rgb(235,229,13)"/><text x="510.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="507" y="1860" width="2" height="15" fill="rgb(246,229,6)"/><text x="510.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:1572) (1 samples, 0.19%)</title><rect x="507" y="1876" width="2" height="15" fill="rgb(211,217,50)"/><text x="510.00" y="1886.50"></text></g><g><title>Arc (matplotlib/patches.py:1638) (1 samples, 0.19%)</title><rect x="507" y="1892" width="2" height="15" fill="rgb(208,128,21)"/><text x="510.00" y="1902.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.19%)</title><rect x="509" y="1108" width="2" height="15" fill="rgb(206,96,24)"/><text x="512.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="509" y="1124" width="2" height="15" fill="rgb(244,39,25)"/><text x="512.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="509" y="1140" width="2" height="15" fill="rgb(237,144,17)"/><text x="512.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="509" y="1156" width="2" height="15" fill="rgb(218,131,52)"/><text x="512.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="509" y="1172" width="2" height="15" fill="rgb(234,153,41)"/><text x="512.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="509" y="1188" width="2" height="15" fill="rgb(254,89,44)"/><text x="512.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.19%)</title><rect x="509" y="1204" width="2" height="15" fill="rgb(226,64,51)"/><text x="512.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="509" y="1220" width="2" height="15" fill="rgb(211,21,35)"/><text x="512.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="509" y="1236" width="2" height="15" fill="rgb(246,132,47)"/><text x="512.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="509" y="1252" width="2" height="15" fill="rgb(224,71,45)"/><text x="512.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="509" y="1268" width="2" height="15" fill="rgb(238,168,42)"/><text x="512.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="509" y="1284" width="2" height="15" fill="rgb(228,73,9)"/><text x="512.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.19%)</title><rect x="509" y="1300" width="2" height="15" fill="rgb(241,89,22)"/><text x="512.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.19%)</title><rect x="509" y="1316" width="2" height="15" fill="rgb(248,1,15)"/><text x="512.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.19%)</title><rect x="509" y="1332" width="2" height="15" fill="rgb(227,131,44)"/><text x="512.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.19%)</title><rect x="509" y="1348" width="2" height="15" fill="rgb(232,147,30)"/><text x="512.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.19%)</title><rect x="509" y="1364" width="2" height="15" fill="rgb(249,158,45)"/><text x="512.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.19%)</title><rect x="509" y="1380" width="2" height="15" fill="rgb(223,37,24)"/><text x="512.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="509" y="1396" width="2" height="15" fill="rgb(243,17,22)"/><text x="512.00" y="1406.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.19%)</title><rect x="511" y="1492" width="3" height="15" fill="rgb(244,177,52)"/><text x="514.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.19%)</title><rect x="511" y="1508" width="3" height="15" fill="rgb(223,224,51)"/><text x="514.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="511" y="1524" width="3" height="15" fill="rgb(227,71,45)"/><text x="514.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="511" y="1540" width="3" height="15" fill="rgb(240,109,31)"/><text x="514.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="511" y="1556" width="3" height="15" fill="rgb(245,203,17)"/><text x="514.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.19%)</title><rect x="511" y="1572" width="3" height="15" fill="rgb(253,45,43)"/><text x="514.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="511" y="1588" width="3" height="15" fill="rgb(229,86,34)"/><text x="514.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.19%)</title><rect x="511" y="1604" width="3" height="15" fill="rgb(212,143,39)"/><text x="514.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.19%)</title><rect x="511" y="1620" width="3" height="15" fill="rgb(223,11,39)"/><text x="514.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.19%)</title><rect x="511" y="1636" width="3" height="15" fill="rgb(239,109,50)"/><text x="514.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="511" y="1652" width="3" height="15" fill="rgb(210,115,48)"/><text x="514.00" y="1662.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.38%)</title><rect x="511" y="1460" width="5" height="15" fill="rgb(234,38,3)"/><text x="514.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.38%)</title><rect x="511" y="1476" width="5" height="15" fill="rgb(228,221,26)"/><text x="514.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.19%)</title><rect x="514" y="1492" width="2" height="15" fill="rgb(216,131,23)"/><text x="517.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.19%)</title><rect x="514" y="1508" width="2" height="15" fill="rgb(209,225,12)"/><text x="517.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:4) (16 samples, 3.07%)</title><rect x="482" y="52" width="36" height="15" fill="rgb(219,105,48)"/><text x="485.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 3.07%)</title><rect x="482" y="68" width="36" height="15" fill="rgb(254,223,2)"/><text x="485.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 3.07%)</title><rect x="482" y="84" width="36" height="15" fill="rgb(209,45,4)"/><text x="485.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 3.07%)</title><rect x="482" y="100" width="36" height="15" fill="rgb(244,171,17)"/><text x="485.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 3.07%)</title><rect x="482" y="116" width="36" height="15" fill="rgb(251,155,25)"/><text x="485.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 3.07%)</title><rect x="482" y="132" width="36" height="15" fill="rgb(207,143,52)"/><text x="485.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:7) (6 samples, 1.15%)</title><rect x="505" y="148" width="13" height="15" fill="rgb(240,214,17)"/><text x="508.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="505" y="164" width="13" height="15" fill="rgb(205,95,43)"/><text x="508.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="505" y="180" width="13" height="15" fill="rgb(254,228,40)"/><text x="508.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="505" y="196" width="13" height="15" fill="rgb(245,193,0)"/><text x="508.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="505" y="212" width="13" height="15" fill="rgb(224,41,0)"/><text x="508.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="505" y="228" width="13" height="15" fill="rgb(250,111,49)"/><text x="508.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.96%)</title><rect x="507" y="244" width="11" height="15" fill="rgb(232,101,43)"/><text x="510.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="507" y="260" width="11" height="15" fill="rgb(240,182,14)"/><text x="510.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="507" y="276" width="11" height="15" fill="rgb(250,73,52)"/><text x="510.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="507" y="292" width="11" height="15" fill="rgb(209,159,16)"/><text x="510.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="507" y="308" width="11" height="15" fill="rgb(251,91,21)"/><text x="510.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="507" y="324" width="11" height="15" fill="rgb(253,74,52)"/><text x="510.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.96%)</title><rect x="507" y="340" width="11" height="15" fill="rgb(218,46,31)"/><text x="510.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="507" y="356" width="11" height="15" fill="rgb(220,104,39)"/><text x="510.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="507" y="372" width="11" height="15" fill="rgb(227,119,14)"/><text x="510.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="507" y="388" width="11" height="15" fill="rgb(219,153,19)"/><text x="510.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="507" y="404" width="11" height="15" fill="rgb(218,112,25)"/><text x="510.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="507" y="420" width="11" height="15" fill="rgb(205,68,25)"/><text x="510.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.77%)</title><rect x="509" y="436" width="9" height="15" fill="rgb(209,214,34)"/><text x="512.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="452" width="9" height="15" fill="rgb(249,81,39)"/><text x="512.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.77%)</title><rect x="509" y="468" width="9" height="15" fill="rgb(215,110,38)"/><text x="512.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="484" width="9" height="15" fill="rgb(219,223,36)"/><text x="512.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="500" width="9" height="15" fill="rgb(219,211,3)"/><text x="512.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="516" width="9" height="15" fill="rgb(219,74,47)"/><text x="512.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="532" width="9" height="15" fill="rgb(243,223,21)"/><text x="512.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="548" width="9" height="15" fill="rgb(226,1,24)"/><text x="512.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="564" width="9" height="15" fill="rgb(213,86,34)"/><text x="512.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.77%)</title><rect x="509" y="580" width="9" height="15" fill="rgb(249,89,52)"/><text x="512.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="596" width="9" height="15" fill="rgb(245,167,46)"/><text x="512.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="612" width="9" height="15" fill="rgb(250,158,7)"/><text x="512.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="628" width="9" height="15" fill="rgb(242,217,29)"/><text x="512.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="644" width="9" height="15" fill="rgb(224,67,24)"/><text x="512.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="660" width="9" height="15" fill="rgb(247,205,8)"/><text x="512.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.77%)</title><rect x="509" y="676" width="9" height="15" fill="rgb(240,189,28)"/><text x="512.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="692" width="9" height="15" fill="rgb(213,1,20)"/><text x="512.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="708" width="9" height="15" fill="rgb(252,106,40)"/><text x="512.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="724" width="9" height="15" fill="rgb(231,217,23)"/><text x="512.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="740" width="9" height="15" fill="rgb(235,187,21)"/><text x="512.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="756" width="9" height="15" fill="rgb(207,153,47)"/><text x="512.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.77%)</title><rect x="509" y="772" width="9" height="15" fill="rgb(252,154,35)"/><text x="512.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="788" width="9" height="15" fill="rgb(232,111,8)"/><text x="512.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="804" width="9" height="15" fill="rgb(239,144,1)"/><text x="512.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="820" width="9" height="15" fill="rgb(240,207,7)"/><text x="512.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="836" width="9" height="15" fill="rgb(251,13,27)"/><text x="512.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="852" width="9" height="15" fill="rgb(250,52,19)"/><text x="512.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.77%)</title><rect x="509" y="868" width="9" height="15" fill="rgb(227,218,22)"/><text x="512.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="884" width="9" height="15" fill="rgb(232,146,31)"/><text x="512.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.77%)</title><rect x="509" y="900" width="9" height="15" fill="rgb(205,63,27)"/><text x="512.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="916" width="9" height="15" fill="rgb(221,217,45)"/><text x="512.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="932" width="9" height="15" fill="rgb(231,97,52)"/><text x="512.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="948" width="9" height="15" fill="rgb(239,136,40)"/><text x="512.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="964" width="9" height="15" fill="rgb(205,127,30)"/><text x="512.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="980" width="9" height="15" fill="rgb(225,48,11)"/><text x="512.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="996" width="9" height="15" fill="rgb(221,3,43)"/><text x="512.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.77%)</title><rect x="509" y="1012" width="9" height="15" fill="rgb(213,151,10)"/><text x="512.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="509" y="1028" width="9" height="15" fill="rgb(242,213,54)"/><text x="512.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="509" y="1044" width="9" height="15" fill="rgb(223,72,34)"/><text x="512.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="509" y="1060" width="9" height="15" fill="rgb(221,57,34)"/><text x="512.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="509" y="1076" width="9" height="15" fill="rgb(217,166,19)"/><text x="512.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="509" y="1092" width="9" height="15" fill="rgb(207,148,25)"/><text x="512.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.57%)</title><rect x="511" y="1108" width="7" height="15" fill="rgb(240,132,54)"/><text x="514.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.57%)</title><rect x="511" y="1124" width="7" height="15" fill="rgb(212,126,12)"/><text x="514.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="511" y="1140" width="7" height="15" fill="rgb(229,9,54)"/><text x="514.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="511" y="1156" width="7" height="15" fill="rgb(237,50,35)"/><text x="514.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="511" y="1172" width="7" height="15" fill="rgb(206,112,2)"/><text x="514.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="511" y="1188" width="7" height="15" fill="rgb(212,141,39)"/><text x="514.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="511" y="1204" width="7" height="15" fill="rgb(231,49,16)"/><text x="514.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="511" y="1220" width="7" height="15" fill="rgb(252,141,45)"/><text x="514.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.57%)</title><rect x="511" y="1236" width="7" height="15" fill="rgb(242,210,12)"/><text x="514.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.57%)</title><rect x="511" y="1252" width="7" height="15" fill="rgb(212,44,21)"/><text x="514.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="511" y="1268" width="7" height="15" fill="rgb(208,69,15)"/><text x="514.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="511" y="1284" width="7" height="15" fill="rgb(227,191,1)"/><text x="514.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="511" y="1300" width="7" height="15" fill="rgb(238,56,31)"/><text x="514.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="511" y="1316" width="7" height="15" fill="rgb(235,96,27)"/><text x="514.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="511" y="1332" width="7" height="15" fill="rgb(211,28,50)"/><text x="514.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="511" y="1348" width="7" height="15" fill="rgb(248,163,50)"/><text x="514.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.57%)</title><rect x="511" y="1364" width="7" height="15" fill="rgb(209,220,18)"/><text x="514.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="511" y="1380" width="7" height="15" fill="rgb(249,11,53)"/><text x="514.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="511" y="1396" width="7" height="15" fill="rgb(238,86,12)"/><text x="514.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="511" y="1412" width="7" height="15" fill="rgb(232,162,44)"/><text x="514.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="511" y="1428" width="7" height="15" fill="rgb(228,220,28)"/><text x="514.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="511" y="1444" width="7" height="15" fill="rgb(219,196,13)"/><text x="514.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.19%)</title><rect x="516" y="1460" width="2" height="15" fill="rgb(207,161,50)"/><text x="519.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="1476" width="2" height="15" fill="rgb(230,107,27)"/><text x="519.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="1492" width="2" height="15" fill="rgb(212,169,29)"/><text x="519.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="1508" width="2" height="15" fill="rgb(230,136,40)"/><text x="519.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="1524" width="2" height="15" fill="rgb(216,108,2)"/><text x="519.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="1540" width="2" height="15" fill="rgb(214,159,1)"/><text x="519.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.19%)</title><rect x="516" y="1556" width="2" height="15" fill="rgb(237,127,31)"/><text x="519.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.19%)</title><rect x="516" y="1572" width="2" height="15" fill="rgb(242,170,23)"/><text x="519.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="1588" width="2" height="15" fill="rgb(211,133,16)"/><text x="519.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="1604" width="2" height="15" fill="rgb(247,149,48)"/><text x="519.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="1620" width="2" height="15" fill="rgb(210,61,41)"/><text x="519.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="1636" width="2" height="15" fill="rgb(207,154,45)"/><text x="519.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="1652" width="2" height="15" fill="rgb(244,35,51)"/><text x="519.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.19%)</title><rect x="516" y="1668" width="2" height="15" fill="rgb(252,35,45)"/><text x="519.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.19%)</title><rect x="516" y="1684" width="2" height="15" fill="rgb(247,189,41)"/><text x="519.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="1700" width="2" height="15" fill="rgb(245,39,39)"/><text x="519.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="1716" width="2" height="15" fill="rgb(242,92,52)"/><text x="519.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="1732" width="2" height="15" fill="rgb(245,218,39)"/><text x="519.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="1748" width="2" height="15" fill="rgb(252,92,23)"/><text x="519.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="1764" width="2" height="15" fill="rgb(214,196,0)"/><text x="519.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.19%)</title><rect x="516" y="1780" width="2" height="15" fill="rgb(217,157,22)"/><text x="519.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="1796" width="2" height="15" fill="rgb(250,28,9)"/><text x="519.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="1812" width="2" height="15" fill="rgb(222,227,0)"/><text x="519.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="1828" width="2" height="15" fill="rgb(214,34,51)"/><text x="519.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="1844" width="2" height="15" fill="rgb(234,54,42)"/><text x="519.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="1860" width="2" height="15" fill="rgb(230,107,42)"/><text x="519.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.19%)</title><rect x="516" y="1876" width="2" height="15" fill="rgb(234,220,50)"/><text x="519.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="1892" width="2" height="15" fill="rgb(235,52,45)"/><text x="519.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="1908" width="2" height="15" fill="rgb(226,107,54)"/><text x="519.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="1924" width="2" height="15" fill="rgb(212,101,5)"/><text x="519.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="1940" width="2" height="15" fill="rgb(249,23,14)"/><text x="519.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="1956" width="2" height="15" fill="rgb(212,152,42)"/><text x="519.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:39) (1 samples, 0.19%)</title><rect x="516" y="1972" width="2" height="15" fill="rgb(216,123,11)"/><text x="519.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="516" y="1988" width="2" height="15" fill="rgb(218,16,33)"/><text x="519.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="2004" width="2" height="15" fill="rgb(246,19,16)"/><text x="519.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="2020" width="2" height="15" fill="rgb(212,25,36)"/><text x="519.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="2036" width="2" height="15" fill="rgb(221,140,50)"/><text x="519.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="516" y="2052" width="2" height="15" fill="rgb(230,206,54)"/><text x="519.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="516" y="2068" width="2" height="15" fill="rgb(210,200,14)"/><text x="519.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="2084" width="2" height="15" fill="rgb(233,183,54)"/><text x="519.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/events.py:787) (1 samples, 0.19%)</title><rect x="516" y="2100" width="2" height="15" fill="rgb(221,77,44)"/><text x="519.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="516" y="2116" width="2" height="15" fill="rgb(216,110,28)"/><text x="519.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="516" y="2132" width="2" height="15" fill="rgb(250,121,31)"/><text x="519.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="516" y="2148" width="2" height="15" fill="rgb(228,111,46)"/><text x="519.00" y="2158.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="516" y="2164" width="2" height="15" fill="rgb(224,169,17)"/><text x="519.00" y="2174.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="516" y="2180" width="2" height="15" fill="rgb(249,85,27)"/><text x="519.00" y="2190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="516" y="2196" width="2" height="15" fill="rgb(212,143,2)"/><text x="519.00" y="2206.50"></text></g><g><title>0x7fa131dd7603 (?) (1 samples, 0.19%)</title><rect x="516" y="2212" width="2" height="15" fill="rgb(223,33,50)"/><text x="519.00" y="2222.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="518" y="116" width="2" height="15" fill="rgb(239,22,54)"/><text x="521.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.19%)</title><rect x="518" y="132" width="2" height="15" fill="rgb(231,5,21)"/><text x="521.00" y="142.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="518" y="148" width="2" height="15" fill="rgb(206,130,52)"/><text x="521.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.19%)</title><rect x="520" y="116" width="3" height="15" fill="rgb(229,121,21)"/><text x="523.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.19%)</title><rect x="520" y="132" width="3" height="15" fill="rgb(253,187,39)"/><text x="523.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.19%)</title><rect x="527" y="148" width="2" height="15" fill="rgb(242,158,21)"/><text x="530.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.19%)</title><rect x="534" y="164" width="2" height="15" fill="rgb(216,140,30)"/><text x="537.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.19%)</title><rect x="536" y="164" width="2" height="15" fill="rgb(215,47,42)"/><text x="539.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.19%)</title><rect x="538" y="164" width="3" height="15" fill="rgb(247,209,42)"/><text x="541.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.19%)</title><rect x="541" y="164" width="2" height="15" fill="rgb(207,214,52)"/><text x="544.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.38%)</title><rect x="543" y="164" width="5" height="15" fill="rgb(239,96,19)"/><text x="546.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="568" y="180" width="2" height="15" fill="rgb(235,137,16)"/><text x="571.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (22 samples, 4.21%)</title><rect x="570" y="180" width="50" height="15" fill="rgb(237,152,25)"/><text x="573.00" y="190.50">run (..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.77%)</title><rect x="611" y="196" width="9" height="15" fill="rgb(214,228,40)"/><text x="614.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.19%)</title><rect x="649" y="212" width="2" height="15" fill="rgb(205,91,39)"/><text x="652.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.19%)</title><rect x="651" y="212" width="3" height="15" fill="rgb(226,7,52)"/><text x="654.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.19%)</title><rect x="651" y="228" width="3" height="15" fill="rgb(242,41,46)"/><text x="654.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (1 samples, 0.19%)</title><rect x="651" y="244" width="3" height="15" fill="rgb(220,193,49)"/><text x="654.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:491) (2 samples, 0.38%)</title><rect x="654" y="244" width="4" height="15" fill="rgb(244,70,50)"/><text x="657.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.38%)</title><rect x="654" y="260" width="4" height="15" fill="rgb(213,150,25)"/><text x="657.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (2 samples, 0.38%)</title><rect x="654" y="276" width="4" height="15" fill="rgb(244,199,37)"/><text x="657.00" y="286.50"></text></g><g><title>0x7fa165b0ce7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="656" y="292" width="2" height="15" fill="rgb(214,204,46)"/><text x="659.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="658" y="260" width="3" height="15" fill="rgb(223,161,44)"/><text x="661.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.19%)</title><rect x="658" y="276" width="3" height="15" fill="rgb(254,117,22)"/><text x="661.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:870) (1 samples, 0.19%)</title><rect x="658" y="292" width="3" height="15" fill="rgb(247,57,43)"/><text x="661.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.19%)</title><rect x="658" y="308" width="3" height="15" fill="rgb(217,182,0)"/><text x="661.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (4 samples, 0.77%)</title><rect x="654" y="228" width="9" height="15" fill="rgb(219,146,1)"/><text x="657.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.38%)</title><rect x="658" y="244" width="5" height="15" fill="rgb(221,96,43)"/><text x="661.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.19%)</title><rect x="661" y="260" width="2" height="15" fill="rgb(254,88,51)"/><text x="664.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.19%)</title><rect x="661" y="276" width="2" height="15" fill="rgb(206,62,37)"/><text x="664.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1649) (1 samples, 0.19%)</title><rect x="663" y="228" width="2" height="15" fill="rgb(219,134,8)"/><text x="666.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.19%)</title><rect x="665" y="260" width="2" height="15" fill="rgb(245,64,49)"/><text x="668.00" y="270.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:829) (1 samples, 0.19%)</title><rect x="665" y="276" width="2" height="15" fill="rgb(206,79,5)"/><text x="668.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.38%)</title><rect x="665" y="228" width="5" height="15" fill="rgb(213,172,19)"/><text x="668.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (2 samples, 0.38%)</title><rect x="665" y="244" width="5" height="15" fill="rgb(216,164,48)"/><text x="668.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="667" y="260" width="3" height="15" fill="rgb(227,35,2)"/><text x="670.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="667" y="276" width="3" height="15" fill="rgb(231,210,6)"/><text x="670.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.19%)</title><rect x="667" y="292" width="3" height="15" fill="rgb(231,137,53)"/><text x="670.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.19%)</title><rect x="670" y="228" width="2" height="15" fill="rgb(232,215,40)"/><text x="673.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.19%)</title><rect x="670" y="244" width="2" height="15" fill="rgb(222,123,14)"/><text x="673.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="670" y="260" width="2" height="15" fill="rgb(234,170,5)"/><text x="673.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (9 samples, 1.72%)</title><rect x="654" y="212" width="20" height="15" fill="rgb(218,16,52)"/><text x="657.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.19%)</title><rect x="672" y="228" width="2" height="15" fill="rgb(208,226,20)"/><text x="675.00" y="238.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3303) (1 samples, 0.19%)</title><rect x="672" y="244" width="2" height="15" fill="rgb(231,12,32)"/><text x="675.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.19%)</title><rect x="674" y="212" width="2" height="15" fill="rgb(206,224,47)"/><text x="677.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="674" y="228" width="2" height="15" fill="rgb(227,132,50)"/><text x="677.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="674" y="244" width="2" height="15" fill="rgb(227,153,51)"/><text x="677.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.19%)</title><rect x="674" y="260" width="2" height="15" fill="rgb(209,194,0)"/><text x="677.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="674" y="276" width="2" height="15" fill="rgb(230,226,7)"/><text x="677.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.19%)</title><rect x="674" y="292" width="2" height="15" fill="rgb(239,110,22)"/><text x="677.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.19%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(239,53,50)"/><text x="677.00" y="318.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.19%)</title><rect x="674" y="324" width="2" height="15" fill="rgb(236,92,28)"/><text x="677.00" y="334.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.19%)</title><rect x="681" y="244" width="2" height="15" fill="rgb(213,200,2)"/><text x="684.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.19%)</title><rect x="683" y="308" width="2" height="15" fill="rgb(231,180,14)"/><text x="686.00" y="318.50"></text></g><g><title>0x7fa165b16dbb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="683" y="324" width="2" height="15" fill="rgb(243,118,9)"/><text x="686.00" y="334.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.38%)</title><rect x="683" y="244" width="5" height="15" fill="rgb(215,125,21)"/><text x="686.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.38%)</title><rect x="683" y="260" width="5" height="15" fill="rgb(248,177,38)"/><text x="686.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.38%)</title><rect x="683" y="276" width="5" height="15" fill="rgb(245,154,49)"/><text x="686.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.38%)</title><rect x="683" y="292" width="5" height="15" fill="rgb(216,72,44)"/><text x="686.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.19%)</title><rect x="685" y="308" width="3" height="15" fill="rgb(207,211,25)"/><text x="688.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.19%)</title><rect x="688" y="276" width="2" height="15" fill="rgb(242,40,12)"/><text x="691.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="688" y="292" width="2" height="15" fill="rgb(217,70,8)"/><text x="691.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.19%)</title><rect x="690" y="276" width="2" height="15" fill="rgb(241,175,46)"/><text x="693.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.19%)</title><rect x="692" y="292" width="2" height="15" fill="rgb(214,131,50)"/><text x="695.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (9 samples, 1.72%)</title><rect x="676" y="212" width="21" height="15" fill="rgb(233,77,28)"/><text x="679.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (8 samples, 1.53%)</title><rect x="679" y="228" width="18" height="15" fill="rgb(214,97,35)"/><text x="682.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (4 samples, 0.77%)</title><rect x="688" y="244" width="9" height="15" fill="rgb(222,228,46)"/><text x="691.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 0.77%)</title><rect x="688" y="260" width="9" height="15" fill="rgb(238,69,18)"/><text x="691.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.38%)</title><rect x="692" y="276" width="5" height="15" fill="rgb(241,29,9)"/><text x="695.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3979) (1 samples, 0.19%)</title><rect x="694" y="292" width="3" height="15" fill="rgb(250,12,40)"/><text x="697.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.19%)</title><rect x="699" y="228" width="2" height="15" fill="rgb(240,68,32)"/><text x="702.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (28 samples, 5.36%)</title><rect x="640" y="196" width="63" height="15" fill="rgb(253,192,6)"/><text x="643.00" y="206.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.57%)</title><rect x="697" y="212" width="6" height="15" fill="rgb(217,154,52)"/><text x="700.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.19%)</title><rect x="701" y="228" width="2" height="15" fill="rgb(230,196,0)"/><text x="704.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="713" y="276" width="2" height="15" fill="rgb(222,38,0)"/><text x="716.00" y="286.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.19%)</title><rect x="713" y="292" width="2" height="15" fill="rgb(209,205,41)"/><text x="716.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.19%)</title><rect x="719" y="340" width="3" height="15" fill="rgb(247,23,12)"/><text x="722.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (8 samples, 1.53%)</title><rect x="708" y="260" width="18" height="15" fill="rgb(252,222,17)"/><text x="711.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 0.96%)</title><rect x="715" y="276" width="11" height="15" fill="rgb(241,166,7)"/><text x="718.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.96%)</title><rect x="715" y="292" width="11" height="15" fill="rgb(220,157,53)"/><text x="718.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.57%)</title><rect x="719" y="308" width="7" height="15" fill="rgb(228,64,45)"/><text x="722.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.57%)</title><rect x="719" y="324" width="7" height="15" fill="rgb(244,163,35)"/><text x="722.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.38%)</title><rect x="722" y="340" width="4" height="15" fill="rgb(241,55,45)"/><text x="725.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (2 samples, 0.38%)</title><rect x="722" y="356" width="4" height="15" fill="rgb(210,25,53)"/><text x="725.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.38%)</title><rect x="722" y="372" width="4" height="15" fill="rgb(212,165,45)"/><text x="725.00" y="382.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.19%)</title><rect x="728" y="308" width="3" height="15" fill="rgb(225,146,50)"/><text x="731.00" y="318.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.19%)</title><rect x="731" y="308" width="2" height="15" fill="rgb(230,46,9)"/><text x="734.00" y="318.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:576) (1 samples, 0.19%)</title><rect x="733" y="308" width="2" height="15" fill="rgb(212,6,9)"/><text x="736.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.19%)</title><rect x="733" y="324" width="2" height="15" fill="rgb(229,133,5)"/><text x="736.00" y="334.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:577) (1 samples, 0.19%)</title><rect x="735" y="308" width="2" height="15" fill="rgb(229,167,2)"/><text x="738.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (7 samples, 1.34%)</title><rect x="726" y="260" width="16" height="15" fill="rgb(229,225,24)"/><text x="729.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (7 samples, 1.34%)</title><rect x="726" y="276" width="16" height="15" fill="rgb(251,82,16)"/><text x="729.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.15%)</title><rect x="728" y="292" width="14" height="15" fill="rgb(212,12,4)"/><text x="731.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (2 samples, 0.38%)</title><rect x="737" y="308" width="5" height="15" fill="rgb(216,134,24)"/><text x="740.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="740" y="324" width="2" height="15" fill="rgb(234,202,46)"/><text x="743.00" y="334.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.19%)</title><rect x="742" y="260" width="2" height="15" fill="rgb(232,35,42)"/><text x="745.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.19%)</title><rect x="742" y="276" width="2" height="15" fill="rgb(215,24,35)"/><text x="745.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(229,180,0)"/><text x="745.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.19%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(217,141,37)"/><text x="745.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="742" y="324" width="2" height="15" fill="rgb(254,114,0)"/><text x="745.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="744" y="292" width="2" height="15" fill="rgb(208,151,7)"/><text x="747.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.38%)</title><rect x="744" y="260" width="5" height="15" fill="rgb(246,100,43)"/><text x="747.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.38%)</title><rect x="744" y="276" width="5" height="15" fill="rgb(236,188,15)"/><text x="747.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="746" y="292" width="3" height="15" fill="rgb(218,206,41)"/><text x="749.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (21 samples, 4.02%)</title><rect x="703" y="196" width="48" height="15" fill="rgb(246,153,48)"/><text x="706.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 4.02%)</title><rect x="703" y="212" width="48" height="15" fill="rgb(209,127,43)"/><text x="706.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (20 samples, 3.83%)</title><rect x="706" y="228" width="45" height="15" fill="rgb(224,106,11)"/><text x="709.00" y="238.50">_run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (20 samples, 3.83%)</title><rect x="706" y="244" width="45" height="15" fill="rgb(226,141,1)"/><text x="709.00" y="254.50">_run..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="749" y="260" width="2" height="15" fill="rgb(233,49,23)"/><text x="752.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="749" y="276" width="2" height="15" fill="rgb(236,113,18)"/><text x="752.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="749" y="292" width="2" height="15" fill="rgb(211,4,36)"/><text x="752.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="749" y="308" width="2" height="15" fill="rgb(242,131,21)"/><text x="752.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py:17) (1 samples, 0.19%)</title><rect x="758" y="228" width="2" height="15" fill="rgb(236,179,51)"/><text x="761.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="762" y="276" width="3" height="15" fill="rgb(228,43,32)"/><text x="765.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="765" y="276" width="2" height="15" fill="rgb(226,206,14)"/><text x="768.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.19%)</title><rect x="765" y="292" width="2" height="15" fill="rgb(211,147,37)"/><text x="768.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.57%)</title><rect x="762" y="260" width="7" height="15" fill="rgb(241,160,49)"/><text x="765.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.19%)</title><rect x="767" y="276" width="2" height="15" fill="rgb(223,123,26)"/><text x="770.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="769" y="260" width="2" height="15" fill="rgb(227,89,10)"/><text x="772.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="769" y="276" width="2" height="15" fill="rgb(242,139,34)"/><text x="772.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="769" y="292" width="2" height="15" fill="rgb(243,44,51)"/><text x="772.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.19%)</title><rect x="769" y="308" width="2" height="15" fill="rgb(212,180,38)"/><text x="772.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.19%)</title><rect x="769" y="324" width="2" height="15" fill="rgb(220,27,49)"/><text x="772.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:890) (1 samples, 0.19%)</title><rect x="769" y="340" width="2" height="15" fill="rgb(234,14,39)"/><text x="772.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:51) (1 samples, 0.19%)</title><rect x="771" y="340" width="3" height="15" fill="rgb(245,128,2)"/><text x="774.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.38%)</title><rect x="771" y="276" width="5" height="15" fill="rgb(247,119,50)"/><text x="774.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.38%)</title><rect x="771" y="292" width="5" height="15" fill="rgb(245,16,49)"/><text x="774.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.38%)</title><rect x="771" y="308" width="5" height="15" fill="rgb(211,222,29)"/><text x="774.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.38%)</title><rect x="771" y="324" width="5" height="15" fill="rgb(219,6,26)"/><text x="774.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="774" y="340" width="2" height="15" fill="rgb(218,119,23)"/><text x="777.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="776" y="292" width="2" height="15" fill="rgb(235,227,31)"/><text x="779.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.53%)</title><rect x="762" y="244" width="18" height="15" fill="rgb(238,125,38)"/><text x="765.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (4 samples, 0.77%)</title><rect x="771" y="260" width="9" height="15" fill="rgb(207,157,47)"/><text x="774.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (2 samples, 0.38%)</title><rect x="776" y="276" width="4" height="15" fill="rgb(221,135,4)"/><text x="779.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="778" y="292" width="2" height="15" fill="rgb(252,126,37)"/><text x="781.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="778" y="308" width="2" height="15" fill="rgb(222,12,54)"/><text x="781.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="778" y="324" width="2" height="15" fill="rgb(244,11,24)"/><text x="781.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (10 samples, 1.92%)</title><rect x="760" y="228" width="23" height="15" fill="rgb(224,150,36)"/><text x="763.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="780" y="244" width="3" height="15" fill="rgb(207,55,4)"/><text x="783.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="780" y="260" width="3" height="15" fill="rgb(240,41,41)"/><text x="783.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(234,228,12)"/><text x="783.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(248,57,40)"/><text x="783.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:21) (1 samples, 0.19%)</title><rect x="783" y="228" width="2" height="15" fill="rgb(252,132,41)"/><text x="786.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="798" y="292" width="3" height="15" fill="rgb(251,147,45)"/><text x="801.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="798" y="308" width="3" height="15" fill="rgb(237,192,6)"/><text x="801.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="798" y="324" width="3" height="15" fill="rgb(214,188,32)"/><text x="801.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="798" y="340" width="3" height="15" fill="rgb(225,94,8)"/><text x="801.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="798" y="356" width="3" height="15" fill="rgb(209,54,52)"/><text x="801.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="798" y="372" width="3" height="15" fill="rgb(236,56,30)"/><text x="801.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.38%)</title><rect x="801" y="308" width="4" height="15" fill="rgb(253,13,43)"/><text x="804.00" y="318.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.19%)</title><rect x="803" y="324" width="2" height="15" fill="rgb(253,124,1)"/><text x="806.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="805" y="324" width="2" height="15" fill="rgb(219,140,12)"/><text x="808.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="805" y="340" width="2" height="15" fill="rgb(230,127,4)"/><text x="808.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="805" y="356" width="2" height="15" fill="rgb(227,77,6)"/><text x="808.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.19%)</title><rect x="805" y="372" width="2" height="15" fill="rgb(249,95,22)"/><text x="808.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.19%)</title><rect x="807" y="340" width="3" height="15" fill="rgb(229,15,33)"/><text x="810.00" y="350.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.19%)</title><rect x="807" y="356" width="3" height="15" fill="rgb(246,166,17)"/><text x="810.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:306) (1 samples, 0.19%)</title><rect x="807" y="372" width="3" height="15" fill="rgb(242,64,53)"/><text x="810.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.19%)</title><rect x="810" y="356" width="2" height="15" fill="rgb(241,61,13)"/><text x="813.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.19%)</title><rect x="810" y="372" width="2" height="15" fill="rgb(239,36,19)"/><text x="813.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.38%)</title><rect x="810" y="340" width="4" height="15" fill="rgb(244,155,15)"/><text x="813.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="812" y="356" width="2" height="15" fill="rgb(220,51,16)"/><text x="815.00" y="366.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1857) (1 samples, 0.19%)</title><rect x="812" y="372" width="2" height="15" fill="rgb(221,146,28)"/><text x="815.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src:194) (1 samples, 0.19%)</title><rect x="812" y="388" width="2" height="15" fill="rgb(206,195,46)"/><text x="815.00" y="398.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.19%)</title><rect x="812" y="404" width="2" height="15" fill="rgb(233,119,48)"/><text x="815.00" y="414.50"></text></g><g><title>array_max (methods.c:323) (11 samples, 2.11%)</title><rect x="792" y="244" width="25" height="15" fill="rgb(230,19,40)"/><text x="795.00" y="254.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.11%)</title><rect x="792" y="260" width="25" height="15" fill="rgb(211,140,40)"/><text x="795.00" y="270.50">f..</text></g><g><title>_amax (numpy/core/_methods.py:30) (9 samples, 1.72%)</title><rect x="796" y="276" width="21" height="15" fill="rgb(222,175,39)"/><text x="799.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.34%)</title><rect x="801" y="292" width="16" height="15" fill="rgb(215,171,30)"/><text x="804.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.96%)</title><rect x="805" y="308" width="12" height="15" fill="rgb(217,193,50)"/><text x="808.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.77%)</title><rect x="807" y="324" width="10" height="15" fill="rgb(206,65,13)"/><text x="810.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="814" y="340" width="3" height="15" fill="rgb(232,134,28)"/><text x="817.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="814" y="356" width="3" height="15" fill="rgb(245,122,21)"/><text x="817.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.19%)</title><rect x="814" y="372" width="3" height="15" fill="rgb(215,15,6)"/><text x="817.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.19%)</title><rect x="817" y="244" width="2" height="15" fill="rgb(223,188,25)"/><text x="820.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.19%)</title><rect x="817" y="260" width="2" height="15" fill="rgb(234,114,35)"/><text x="820.00" y="270.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.19%)</title><rect x="817" y="276" width="2" height="15" fill="rgb(210,130,53)"/><text x="820.00" y="286.50"></text></g><g><title>unpack_tuple (mapping.c:170) (1 samples, 0.19%)</title><rect x="817" y="292" width="2" height="15" fill="rgb(252,192,6)"/><text x="820.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="819" y="244" width="2" height="15" fill="rgb(237,162,49)"/><text x="822.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="819" y="260" width="2" height="15" fill="rgb(214,228,16)"/><text x="822.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(234,56,23)"/><text x="822.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="819" y="292" width="2" height="15" fill="rgb(237,115,43)"/><text x="822.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.19%)</title><rect x="819" y="308" width="2" height="15" fill="rgb(218,73,28)"/><text x="822.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.19%)</title><rect x="821" y="244" width="2" height="15" fill="rgb(246,47,17)"/><text x="824.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="823" y="244" width="3" height="15" fill="rgb(251,105,27)"/><text x="826.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="823" y="260" width="3" height="15" fill="rgb(248,225,38)"/><text x="826.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(228,49,49)"/><text x="826.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="823" y="292" width="3" height="15" fill="rgb(229,71,7)"/><text x="826.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="826" y="244" width="2" height="15" fill="rgb(246,102,45)"/><text x="829.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="826" y="260" width="2" height="15" fill="rgb(213,61,24)"/><text x="829.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="826" y="276" width="2" height="15" fill="rgb(228,78,17)"/><text x="829.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="826" y="292" width="2" height="15" fill="rgb(227,37,23)"/><text x="829.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="826" y="308" width="2" height="15" fill="rgb(211,229,32)"/><text x="829.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (20 samples, 3.83%)</title><rect x="785" y="228" width="45" height="15" fill="rgb(224,184,50)"/><text x="788.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="828" y="244" width="2" height="15" fill="rgb(232,79,29)"/><text x="831.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.19%)</title><rect x="828" y="260" width="2" height="15" fill="rgb(220,52,4)"/><text x="831.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.19%)</title><rect x="830" y="260" width="2" height="15" fill="rgb(206,128,27)"/><text x="833.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (2 samples, 0.38%)</title><rect x="830" y="228" width="5" height="15" fill="rgb(247,39,39)"/><text x="833.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="830" y="244" width="5" height="15" fill="rgb(253,103,24)"/><text x="833.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="832" y="260" width="3" height="15" fill="rgb(206,206,49)"/><text x="835.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.19%)</title><rect x="832" y="276" width="3" height="15" fill="rgb(207,29,36)"/><text x="835.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.19%)</title><rect x="832" y="292" width="3" height="15" fill="rgb(215,195,52)"/><text x="835.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:920) (1 samples, 0.19%)</title><rect x="835" y="260" width="2" height="15" fill="rgb(227,5,31)"/><text x="838.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.38%)</title><rect x="835" y="244" width="4" height="15" fill="rgb(240,10,12)"/><text x="838.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="837" y="260" width="2" height="15" fill="rgb(230,152,42)"/><text x="840.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="837" y="276" width="2" height="15" fill="rgb(253,21,48)"/><text x="840.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.19%)</title><rect x="837" y="292" width="2" height="15" fill="rgb(248,188,51)"/><text x="840.00" y="302.50"></text></g><g><title>0x7fa164d191c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="837" y="308" width="2" height="15" fill="rgb(248,29,1)"/><text x="840.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.38%)</title><rect x="844" y="308" width="4" height="15" fill="rgb(217,95,51)"/><text x="847.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="848" y="340" width="2" height="15" fill="rgb(253,166,21)"/><text x="851.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:416) (1 samples, 0.19%)</title><rect x="848" y="356" width="2" height="15" fill="rgb(209,166,9)"/><text x="851.00" y="366.50"></text></g><g><title>array_sum (methods.c:2215) (6 samples, 1.15%)</title><rect x="839" y="244" width="14" height="15" fill="rgb(217,117,10)"/><text x="842.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.15%)</title><rect x="839" y="260" width="14" height="15" fill="rgb(222,35,28)"/><text x="842.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 0.77%)</title><rect x="844" y="276" width="9" height="15" fill="rgb(237,193,47)"/><text x="847.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.77%)</title><rect x="844" y="292" width="9" height="15" fill="rgb(222,20,46)"/><text x="847.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.38%)</title><rect x="848" y="308" width="5" height="15" fill="rgb(238,157,10)"/><text x="851.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.38%)</title><rect x="848" y="324" width="5" height="15" fill="rgb(251,105,15)"/><text x="851.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="850" y="340" width="3" height="15" fill="rgb(209,36,36)"/><text x="853.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(210,72,12)"/><text x="853.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.19%)</title><rect x="853" y="260" width="2" height="15" fill="rgb(207,221,17)"/><text x="856.00" y="270.50"></text></g><g><title>0x7fa165b1714a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="853" y="276" width="2" height="15" fill="rgb(218,111,16)"/><text x="856.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="855" y="292" width="2" height="15" fill="rgb(248,71,9)"/><text x="858.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="855" y="308" width="2" height="15" fill="rgb(241,35,43)"/><text x="858.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="855" y="324" width="2" height="15" fill="rgb(218,58,54)"/><text x="858.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.38%)</title><rect x="855" y="260" width="4" height="15" fill="rgb(231,193,22)"/><text x="858.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.38%)</title><rect x="855" y="276" width="4" height="15" fill="rgb(210,38,38)"/><text x="858.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="857" y="292" width="2" height="15" fill="rgb(210,78,23)"/><text x="860.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (49 samples, 9.39%)</title><rect x="751" y="212" width="111" height="15" fill="rgb(249,41,36)"/><text x="754.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (12 samples, 2.30%)</title><rect x="835" y="228" width="27" height="15" fill="rgb(236,183,16)"/><text x="838.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.77%)</title><rect x="853" y="244" width="9" height="15" fill="rgb(230,149,10)"/><text x="856.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="859" y="260" width="3" height="15" fill="rgb(228,111,21)"/><text x="862.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (50 samples, 9.58%)</title><rect x="751" y="196" width="113" height="15" fill="rgb(254,206,50)"/><text x="754.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.19%)</title><rect x="862" y="212" width="2" height="15" fill="rgb(219,225,37)"/><text x="865.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.38%)</title><rect x="864" y="196" width="5" height="15" fill="rgb(208,109,0)"/><text x="867.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.19%)</title><rect x="873" y="212" width="2" height="15" fill="rgb(219,52,43)"/><text x="876.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.19%)</title><rect x="878" y="228" width="2" height="15" fill="rgb(243,156,23)"/><text x="881.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="882" y="244" width="2" height="15" fill="rgb(208,206,37)"/><text x="885.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="882" y="260" width="2" height="15" fill="rgb(247,61,34)"/><text x="885.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="882" y="276" width="2" height="15" fill="rgb(235,223,12)"/><text x="885.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="882" y="292" width="2" height="15" fill="rgb(221,98,26)"/><text x="885.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="882" y="308" width="2" height="15" fill="rgb(254,36,44)"/><text x="885.00" y="318.50"></text></g><g><title>0x7fa165bd4ff0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="882" y="324" width="2" height="15" fill="rgb(205,152,14)"/><text x="885.00" y="334.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1788) (1 samples, 0.19%)</title><rect x="884" y="308" width="3" height="15" fill="rgb(228,38,42)"/><text x="887.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.38%)</title><rect x="884" y="276" width="5" height="15" fill="rgb(252,142,28)"/><text x="887.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (2 samples, 0.38%)</title><rect x="884" y="292" width="5" height="15" fill="rgb(217,128,15)"/><text x="887.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.19%)</title><rect x="887" y="308" width="2" height="15" fill="rgb(240,63,11)"/><text x="890.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.19%)</title><rect x="887" y="324" width="2" height="15" fill="rgb(251,44,51)"/><text x="890.00" y="334.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.19%)</title><rect x="889" y="292" width="2" height="15" fill="rgb(209,73,41)"/><text x="892.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (4 samples, 0.77%)</title><rect x="884" y="260" width="9" height="15" fill="rgb(206,138,26)"/><text x="887.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.38%)</title><rect x="889" y="276" width="4" height="15" fill="rgb(230,151,44)"/><text x="892.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:247) (1 samples, 0.19%)</title><rect x="891" y="292" width="2" height="15" fill="rgb(207,18,53)"/><text x="894.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:890) (1 samples, 0.19%)</title><rect x="891" y="308" width="2" height="15" fill="rgb(233,42,54)"/><text x="894.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="893" y="260" width="3" height="15" fill="rgb(230,191,5)"/><text x="896.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.19%)</title><rect x="893" y="276" width="3" height="15" fill="rgb(211,73,33)"/><text x="896.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="896" y="260" width="2" height="15" fill="rgb(225,47,2)"/><text x="899.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="896" y="276" width="2" height="15" fill="rgb(248,217,0)"/><text x="899.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.19%)</title><rect x="896" y="292" width="2" height="15" fill="rgb(219,3,43)"/><text x="899.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="898" y="276" width="2" height="15" fill="rgb(230,194,45)"/><text x="901.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.19%)</title><rect x="898" y="292" width="2" height="15" fill="rgb(223,173,9)"/><text x="901.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:814) (1 samples, 0.19%)</title><rect x="900" y="308" width="2" height="15" fill="rgb(237,92,54)"/><text x="903.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c:719) (1 samples, 0.19%)</title><rect x="900" y="324" width="2" height="15" fill="rgb(214,117,48)"/><text x="903.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:351) (1 samples, 0.19%)</title><rect x="902" y="340" width="3" height="15" fill="rgb(224,23,32)"/><text x="905.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.92%)</title><rect x="884" y="244" width="23" height="15" fill="rgb(252,218,30)"/><text x="887.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.77%)</title><rect x="898" y="260" width="9" height="15" fill="rgb(235,116,37)"/><text x="901.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.57%)</title><rect x="900" y="276" width="7" height="15" fill="rgb(225,112,42)"/><text x="903.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.57%)</title><rect x="900" y="292" width="7" height="15" fill="rgb(254,153,32)"/><text x="903.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.38%)</title><rect x="902" y="308" width="5" height="15" fill="rgb(237,152,0)"/><text x="905.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.38%)</title><rect x="902" y="324" width="5" height="15" fill="rgb(237,133,23)"/><text x="905.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.19%)</title><rect x="905" y="340" width="2" height="15" fill="rgb(231,201,12)"/><text x="908.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.19%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(205,229,54)"/><text x="908.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.19%)</title><rect x="905" y="372" width="2" height="15" fill="rgb(250,42,1)"/><text x="908.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (13 samples, 2.49%)</title><rect x="880" y="228" width="29" height="15" fill="rgb(235,39,35)"/><text x="883.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.19%)</title><rect x="907" y="244" width="2" height="15" fill="rgb(253,45,37)"/><text x="910.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (3 samples, 0.57%)</title><rect x="911" y="244" width="7" height="15" fill="rgb(207,122,32)"/><text x="914.00" y="254.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c:40) (1 samples, 0.19%)</title><rect x="916" y="260" width="2" height="15" fill="rgb(212,89,21)"/><text x="919.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (2 samples, 0.38%)</title><rect x="918" y="244" width="5" height="15" fill="rgb(224,81,28)"/><text x="921.00" y="254.50"></text></g><g><title>arrayflags_getitem (flagsobject.c:533) (1 samples, 0.19%)</title><rect x="920" y="260" width="3" height="15" fill="rgb(214,218,14)"/><text x="923.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (2 samples, 0.38%)</title><rect x="923" y="244" width="4" height="15" fill="rgb(226,50,0)"/><text x="926.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="927" y="260" width="3" height="15" fill="rgb(243,95,47)"/><text x="930.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="927" y="276" width="3" height="15" fill="rgb(209,221,50)"/><text x="930.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="927" y="292" width="3" height="15" fill="rgb(216,81,46)"/><text x="930.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.19%)</title><rect x="930" y="260" width="2" height="15" fill="rgb(216,159,32)"/><text x="933.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="932" y="260" width="2" height="15" fill="rgb(251,220,17)"/><text x="935.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:953) (1 samples, 0.19%)</title><rect x="932" y="276" width="2" height="15" fill="rgb(243,83,5)"/><text x="935.00" y="286.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="934" y="260" width="2" height="15" fill="rgb(227,116,17)"/><text x="937.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:917) (1 samples, 0.19%)</title><rect x="939" y="308" width="2" height="15" fill="rgb(205,1,50)"/><text x="942.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.19%)</title><rect x="941" y="324" width="2" height="15" fill="rgb(234,163,31)"/><text x="944.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="941" y="340" width="2" height="15" fill="rgb(239,128,11)"/><text x="944.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.19%)</title><rect x="943" y="324" width="2" height="15" fill="rgb(207,95,17)"/><text x="946.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.19%)</title><rect x="943" y="340" width="2" height="15" fill="rgb(207,143,35)"/><text x="946.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="943" y="356" width="2" height="15" fill="rgb(205,101,32)"/><text x="946.00" y="366.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2788) (1 samples, 0.19%)</title><rect x="945" y="356" width="3" height="15" fill="rgb(228,62,13)"/><text x="948.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (2 samples, 0.38%)</title><rect x="945" y="324" width="5" height="15" fill="rgb(242,35,1)"/><text x="948.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:430) (2 samples, 0.38%)</title><rect x="945" y="340" width="5" height="15" fill="rgb(239,39,1)"/><text x="948.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2819) (1 samples, 0.19%)</title><rect x="948" y="356" width="2" height="15" fill="rgb(248,100,46)"/><text x="951.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="948" y="372" width="2" height="15" fill="rgb(235,90,40)"/><text x="951.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.19%)</title><rect x="948" y="388" width="2" height="15" fill="rgb(236,93,38)"/><text x="951.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.19%)</title><rect x="948" y="404" width="2" height="15" fill="rgb(240,215,1)"/><text x="951.00" y="414.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (11 samples, 2.11%)</title><rect x="927" y="244" width="25" height="15" fill="rgb(210,208,47)"/><text x="930.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 1.34%)</title><rect x="936" y="260" width="16" height="15" fill="rgb(218,37,19)"/><text x="939.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.15%)</title><rect x="939" y="276" width="13" height="15" fill="rgb(227,111,52)"/><text x="942.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 1.15%)</title><rect x="939" y="292" width="13" height="15" fill="rgb(219,120,2)"/><text x="942.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 0.96%)</title><rect x="941" y="308" width="11" height="15" fill="rgb(248,100,36)"/><text x="944.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.19%)</title><rect x="950" y="324" width="2" height="15" fill="rgb(221,147,9)"/><text x="953.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="950" y="340" width="2" height="15" fill="rgb(231,39,34)"/><text x="953.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="950" y="356" width="2" height="15" fill="rgb(206,101,28)"/><text x="953.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="950" y="372" width="2" height="15" fill="rgb(209,189,2)"/><text x="953.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.19%)</title><rect x="952" y="244" width="2" height="15" fill="rgb(239,125,41)"/><text x="955.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="952" y="260" width="2" height="15" fill="rgb(215,217,49)"/><text x="955.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="952" y="276" width="2" height="15" fill="rgb(240,68,54)"/><text x="955.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="952" y="292" width="2" height="15" fill="rgb(248,76,33)"/><text x="955.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1035) (1 samples, 0.19%)</title><rect x="952" y="308" width="2" height="15" fill="rgb(231,101,21)"/><text x="955.00" y="318.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.38%)</title><rect x="954" y="260" width="5" height="15" fill="rgb(216,187,48)"/><text x="957.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1039) (1 samples, 0.19%)</title><rect x="959" y="372" width="2" height="15" fill="rgb(244,67,42)"/><text x="962.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.38%)</title><rect x="959" y="324" width="4" height="15" fill="rgb(210,131,41)"/><text x="962.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (2 samples, 0.38%)</title><rect x="959" y="340" width="4" height="15" fill="rgb(254,31,42)"/><text x="962.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.38%)</title><rect x="959" y="356" width="4" height="15" fill="rgb(225,4,0)"/><text x="962.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.19%)</title><rect x="961" y="372" width="2" height="15" fill="rgb(236,121,45)"/><text x="964.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="961" y="388" width="2" height="15" fill="rgb(220,59,48)"/><text x="964.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (44 samples, 8.43%)</title><rect x="869" y="196" width="99" height="15" fill="rgb(241,90,19)"/><text x="872.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (41 samples, 7.85%)</title><rect x="875" y="212" width="93" height="15" fill="rgb(248,56,23)"/><text x="878.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (26 samples, 4.98%)</title><rect x="909" y="228" width="59" height="15" fill="rgb(233,90,7)"/><text x="912.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 1.15%)</title><rect x="954" y="244" width="14" height="15" fill="rgb(220,191,34)"/><text x="957.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 0.77%)</title><rect x="959" y="260" width="9" height="15" fill="rgb(232,132,41)"/><text x="962.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.77%)</title><rect x="959" y="276" width="9" height="15" fill="rgb(219,83,43)"/><text x="962.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.77%)</title><rect x="959" y="292" width="9" height="15" fill="rgb(231,40,41)"/><text x="962.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.77%)</title><rect x="959" y="308" width="9" height="15" fill="rgb(205,172,44)"/><text x="962.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.38%)</title><rect x="963" y="324" width="5" height="15" fill="rgb(246,197,17)"/><text x="966.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.38%)</title><rect x="963" y="340" width="5" height="15" fill="rgb(227,1,20)"/><text x="966.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="963" y="356" width="5" height="15" fill="rgb(213,128,42)"/><text x="966.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="963" y="372" width="5" height="15" fill="rgb(245,89,22)"/><text x="966.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="966" y="388" width="2" height="15" fill="rgb(220,91,10)"/><text x="969.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (155 samples, 29.69%)</title><rect x="620" y="180" width="350" height="15" fill="rgb(237,210,9)"/><text x="623.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:13..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.19%)</title><rect x="968" y="196" width="2" height="15" fill="rgb(223,134,22)"/><text x="971.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3276) (1 samples, 0.19%)</title><rect x="968" y="212" width="2" height="15" fill="rgb(221,180,25)"/><text x="971.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (5 samples, 0.96%)</title><rect x="970" y="180" width="12" height="15" fill="rgb(247,21,47)"/><text x="973.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (7 samples, 1.34%)</title><rect x="982" y="180" width="15" height="15" fill="rgb(241,173,6)"/><text x="985.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (5 samples, 0.96%)</title><rect x="997" y="180" width="12" height="15" fill="rgb(205,102,49)"/><text x="1000.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (21 samples, 4.02%)</title><rect x="1009" y="180" width="47" height="15" fill="rgb(250,155,20)"/><text x="1012.00" y="190.50">run ..</text></g><g><title>0x7fa165b17120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1054" y="196" width="2" height="15" fill="rgb(229,88,32)"/><text x="1057.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (234 samples, 44.83%)</title><rect x="548" y="164" width="528" height="15" fill="rgb(233,147,27)"/><text x="551.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (9 samples, 1.72%)</title><rect x="1056" y="180" width="20" height="15" fill="rgb(205,61,51)"/><text x="1059.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.19%)</title><rect x="1076" y="164" width="3" height="15" fill="rgb(233,206,6)"/><text x="1079.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:45) (249 samples, 47.70%)</title><rect x="518" y="52" width="563" height="15" fill="rgb(206,136,1)"/><text x="521.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:44) (249 samples, 47.70%)</title><rect x="518" y="68" width="563" height="15" fill="rgb(242,121,4)"/><text x="521.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:44)</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:29) (249 samples, 47.70%)</title><rect x="518" y="84" width="563" height="15" fill="rgb(228,28,46)"/><text x="521.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:23) (249 samples, 47.70%)</title><rect x="518" y="100" width="563" height="15" fill="rgb(245,8,35)"/><text x="521.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (247 samples, 47.32%)</title><rect x="523" y="116" width="558" height="15" fill="rgb(245,221,54)"/><text x="526.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (245 samples, 46.93%)</title><rect x="527" y="132" width="554" height="15" fill="rgb(238,5,32)"/><text x="530.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (244 samples, 46.74%)</title><rect x="529" y="148" width="552" height="15" fill="rgb(254,212,17)"/><text x="532.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="1079" y="164" width="2" height="15" fill="rgb(234,122,0)"/><text x="1082.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="1079" y="180" width="2" height="15" fill="rgb(246,168,35)"/><text x="1082.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="1079" y="196" width="2" height="15" fill="rgb(242,207,52)"/><text x="1082.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.38%)</title><rect x="1101" y="196" width="5" height="15" fill="rgb(228,166,37)"/><text x="1104.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.19%)</title><rect x="1104" y="212" width="2" height="15" fill="rgb(223,168,38)"/><text x="1107.00" y="222.50"></text></g><g><title>0x7fa123b39ff9 (?) (1 samples, 0.19%)</title><rect x="1106" y="212" width="2" height="15" fill="rgb(245,121,52)"/><text x="1109.00" y="222.50"></text></g><g><title>0x7fa123b34ef6 (?) (1 samples, 0.19%)</title><rect x="1106" y="228" width="2" height="15" fill="rgb(232,57,31)"/><text x="1109.00" y="238.50"></text></g><g><title>0x7fa123b29962 (?) (1 samples, 0.19%)</title><rect x="1106" y="244" width="2" height="15" fill="rgb(216,13,15)"/><text x="1109.00" y="254.50"></text></g><g><title>0x7fa123b5d7a7 (?) (1 samples, 0.19%)</title><rect x="1106" y="260" width="2" height="15" fill="rgb(223,24,8)"/><text x="1109.00" y="270.50"></text></g><g><title>0x7fa123b5d09f (?) (1 samples, 0.19%)</title><rect x="1106" y="276" width="2" height="15" fill="rgb(237,83,0)"/><text x="1109.00" y="286.50"></text></g><g><title>0x7fa123f750e3 (?) (1 samples, 0.19%)</title><rect x="1106" y="292" width="2" height="15" fill="rgb(235,65,48)"/><text x="1109.00" y="302.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1113" y="340" width="4" height="15" fill="rgb(244,69,21)"/><text x="1116.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1113" y="356" width="4" height="15" fill="rgb(213,161,52)"/><text x="1116.00" y="366.50"></text></g><g><title>0x7fa165b17124 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1115" y="372" width="2" height="15" fill="rgb(240,67,18)"/><text x="1118.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="340" width="2" height="15" fill="rgb(230,129,35)"/><text x="1120.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="356" width="2" height="15" fill="rgb(229,9,22)"/><text x="1120.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="372" width="2" height="15" fill="rgb(207,188,14)"/><text x="1120.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="388" width="2" height="15" fill="rgb(222,141,41)"/><text x="1120.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="404" width="2" height="15" fill="rgb(220,171,24)"/><text x="1120.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="420" width="2" height="15" fill="rgb(243,213,18)"/><text x="1120.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="436" width="2" height="15" fill="rgb(241,45,52)"/><text x="1120.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::GetAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1117" y="452" width="2" height="15" fill="rgb(210,91,12)"/><text x="1120.00" y="462.50"></text></g><g><title>0x7fa165af6a4d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1119" y="356" width="3" height="15" fill="rgb(219,29,32)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1119" y="340" width="5" height="15" fill="rgb(247,208,9)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="356" width="2" height="15" fill="rgb(244,73,43)"/><text x="1125.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="372" width="2" height="15" fill="rgb(249,41,31)"/><text x="1125.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="388" width="2" height="15" fill="rgb(246,205,4)"/><text x="1125.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="404" width="2" height="15" fill="rgb(228,187,20)"/><text x="1125.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="420" width="2" height="15" fill="rgb(220,208,41)"/><text x="1125.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="436" width="2" height="15" fill="rgb(216,144,32)"/><text x="1125.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="452" width="2" height="15" fill="rgb(243,50,47)"/><text x="1125.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="468" width="2" height="15" fill="rgb(253,24,38)"/><text x="1125.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1122" y="484" width="2" height="15" fill="rgb(248,125,26)"/><text x="1125.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1124" y="356" width="2" height="15" fill="rgb(220,205,6)"/><text x="1127.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1124" y="372" width="2" height="15" fill="rgb(219,149,14)"/><text x="1127.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1124" y="388" width="2" height="15" fill="rgb(222,35,20)"/><text x="1127.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1124" y="404" width="2" height="15" fill="rgb(252,88,20)"/><text x="1127.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1124" y="420" width="2" height="15" fill="rgb(212,93,48)"/><text x="1127.00" y="430.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1126" y="356" width="2" height="15" fill="rgb(225,65,4)"/><text x="1129.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1124" y="340" width="7" height="15" fill="rgb(216,160,31)"/><text x="1127.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1128" y="356" width="3" height="15" fill="rgb(252,163,5)"/><text x="1131.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1131" y="356" width="2" height="15" fill="rgb(233,1,4)"/><text x="1134.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="356" width="2" height="15" fill="rgb(209,77,33)"/><text x="1136.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="372" width="2" height="15" fill="rgb(234,27,2)"/><text x="1136.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="388" width="2" height="15" fill="rgb(215,133,51)"/><text x="1136.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="404" width="2" height="15" fill="rgb(216,213,30)"/><text x="1136.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="420" width="2" height="15" fill="rgb(238,18,51)"/><text x="1136.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="436" width="2" height="15" fill="rgb(218,219,32)"/><text x="1136.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="452" width="2" height="15" fill="rgb(250,9,21)"/><text x="1136.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="468" width="2" height="15" fill="rgb(240,223,15)"/><text x="1136.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="484" width="2" height="15" fill="rgb(214,3,11)"/><text x="1136.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1133" y="500" width="2" height="15" fill="rgb(212,94,4)"/><text x="1136.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1133" y="516" width="2" height="15" fill="rgb(227,206,3)"/><text x="1136.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1133" y="532" width="2" height="15" fill="rgb(253,46,40)"/><text x="1136.00" y="542.50"></text></g><g><title>mkl_blas_errchk_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1138" y="404" width="2" height="15" fill="rgb(238,176,42)"/><text x="1141.00" y="414.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1142" y="436" width="2" height="15" fill="rgb(253,191,37)"/><text x="1145.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1142" y="452" width="2" height="15" fill="rgb(210,193,44)"/><text x="1145.00" y="462.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.34%)</title><rect x="1131" y="340" width="16" height="15" fill="rgb(211,73,15)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.96%)</title><rect x="1135" y="356" width="12" height="15" fill="rgb(239,67,28)"/><text x="1138.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.96%)</title><rect x="1135" y="372" width="12" height="15" fill="rgb(229,184,30)"/><text x="1138.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.77%)</title><rect x="1138" y="388" width="9" height="15" fill="rgb(245,134,14)"/><text x="1141.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.57%)</title><rect x="1140" y="404" width="7" height="15" fill="rgb(226,88,40)"/><text x="1143.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.38%)</title><rect x="1142" y="420" width="5" height="15" fill="rgb(250,14,35)"/><text x="1145.00" y="430.50"></text></g><g><title>mkl_serv_cpu_detect (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="1144" y="436" width="3" height="15" fill="rgb(230,159,29)"/><text x="1147.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1147" y="340" width="4" height="15" fill="rgb(233,222,24)"/><text x="1150.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1149" y="356" width="2" height="15" fill="rgb(229,74,12)"/><text x="1152.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1149" y="372" width="2" height="15" fill="rgb(236,40,5)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1151" y="340" width="2" height="15" fill="rgb(212,102,6)"/><text x="1154.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1153" y="340" width="3" height="15" fill="rgb(240,186,29)"/><text x="1156.00" y="350.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="372" width="2" height="15" fill="rgb(214,154,15)"/><text x="1159.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="388" width="2" height="15" fill="rgb(242,90,36)"/><text x="1159.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="404" width="2" height="15" fill="rgb(227,40,42)"/><text x="1159.00" y="414.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="420" width="2" height="15" fill="rgb(208,160,44)"/><text x="1159.00" y="430.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseBinaryIO&lt;Eigen::internal::scalar_difference_op&lt;float const, float const&gt;, long, float, 2, 1&gt;::Run&lt;float, float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1156" y="436" width="2" height="15" fill="rgb(237,180,36)"/><text x="1159.00" y="446.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(218,32,17)"/><text x="1159.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1158" y="372" width="2" height="15" fill="rgb(245,161,9)"/><text x="1161.00" y="382.50"></text></g><g><title>0x7fa165af6bd8 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1158" y="388" width="2" height="15" fill="rgb(209,78,2)"/><text x="1161.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 4.60%)</title><rect x="1108" y="292" width="54" height="15" fill="rgb(244,160,41)"/><text x="1111.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 4.60%)</title><rect x="1108" y="308" width="54" height="15" fill="rgb(254,73,31)"/><text x="1111.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 4.60%)</title><rect x="1108" y="324" width="54" height="15" fill="rgb(235,189,22)"/><text x="1111.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1156" y="340" width="6" height="15" fill="rgb(226,175,39)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1160" y="356" width="2" height="15" fill="rgb(217,105,0)"/><text x="1163.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1160" y="372" width="2" height="15" fill="rgb(248,23,12)"/><text x="1163.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1160" y="388" width="2" height="15" fill="rgb(224,173,9)"/><text x="1163.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1160" y="404" width="2" height="15" fill="rgb(213,219,4)"/><text x="1163.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.79%)</title><rect x="1108" y="260" width="57" height="15" fill="rgb(235,131,35)"/><text x="1111.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.79%)</title><rect x="1108" y="276" width="57" height="15" fill="rgb(222,78,5)"/><text x="1111.00" y="286.50">onnxru..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1162" y="292" width="3" height="15" fill="rgb(230,113,20)"/><text x="1165.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1162" y="308" width="3" height="15" fill="rgb(247,90,6)"/><text x="1165.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1165" y="260" width="6" height="15" fill="rgb(210,171,26)"/><text x="1168.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="1169" y="276" width="2" height="15" fill="rgb(227,118,9)"/><text x="1172.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="260" width="3" height="15" fill="rgb(229,224,1)"/><text x="1174.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 6.13%)</title><rect x="1108" y="244" width="72" height="15" fill="rgb(229,56,9)"/><text x="1111.00" y="254.50">onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="260" width="6" height="15" fill="rgb(249,133,4)"/><text x="1177.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="276" width="6" height="15" fill="rgb(206,77,37)"/><text x="1177.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="292" width="6" height="15" fill="rgb(241,228,24)"/><text x="1177.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="308" width="6" height="15" fill="rgb(237,42,31)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="324" width="6" height="15" fill="rgb(210,217,7)"/><text x="1177.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="340" width="6" height="15" fill="rgb(231,195,37)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="1174" y="356" width="6" height="15" fill="rgb(221,120,51)"/><text x="1177.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1176" y="372" width="4" height="15" fill="rgb(226,206,50)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="388" width="2" height="15" fill="rgb(252,100,34)"/><text x="1181.00" y="398.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (38 samples, 7.28%)</title><rect x="1097" y="164" width="86" height="15" fill="rgb(226,71,23)"/><text x="1100.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (37 samples, 7.09%)</title><rect x="1099" y="180" width="84" height="15" fill="rgb(217,229,28)"/><text x="1102.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (34 samples, 6.51%)</title><rect x="1106" y="196" width="77" height="15" fill="rgb(237,171,14)"/><text x="1109.00" y="206.50">run (onn..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 6.32%)</title><rect x="1108" y="212" width="75" height="15" fill="rgb(252,30,26)"/><text x="1111.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 6.32%)</title><rect x="1108" y="228" width="75" height="15" fill="rgb(236,7,54)"/><text x="1111.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(229,60,30)"/><text x="1183.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(209,98,5)"/><text x="1183.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(216,137,36)"/><text x="1183.00" y="286.50"></text></g><g><title>all (522 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,95,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:52) (48 samples, 9.20%)</title><rect x="1081" y="52" width="109" height="15" fill="rgb(218,25,37)"/><text x="1084.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:51) (48 samples, 9.20%)</title><rect x="1081" y="68" width="109" height="15" fill="rgb(240,7,17)"/><text x="1084.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:29) (48 samples, 9.20%)</title><rect x="1081" y="84" width="109" height="15" fill="rgb(210,56,13)"/><text x="1084.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py:23) (48 samples, 9.20%)</title><rect x="1081" y="100" width="109" height="15" fill="rgb(208,43,52)"/><text x="1084.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (46 samples, 8.81%)</title><rect x="1086" y="116" width="104" height="15" fill="rgb(208,96,50)"/><text x="1089.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (44 samples, 8.43%)</title><rect x="1090" y="132" width="100" height="15" fill="rgb(210,80,9)"/><text x="1093.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (42 samples, 8.05%)</title><rect x="1095" y="148" width="95" height="15" fill="rgb(218,24,30)"/><text x="1098.00" y="158.50">run (mlprod..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.57%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(205,173,50)"/><text x="1186.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.19%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(229,80,54)"/><text x="1190.00" y="190.50"></text></g></g></svg>