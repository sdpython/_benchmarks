<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.14%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(242,167,30)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.14%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(229,20,54)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:90) (1 samples, 0.14%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(214,147,6)"/><text x="13.00" y="142.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.14%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(227,202,35)"/><text x="13.00" y="158.50"></text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:28) (2 samples, 0.28%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(250,158,9)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.14%)</title><rect x="11" y="100" width="2" height="15" fill="rgb(249,78,9)"/><text x="14.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.14%)</title><rect x="11" y="116" width="2" height="15" fill="rgb(232,166,24)"/><text x="14.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.14%)</title><rect x="11" y="132" width="2" height="15" fill="rgb(225,200,21)"/><text x="14.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.14%)</title><rect x="11" y="148" width="2" height="15" fill="rgb(236,136,39)"/><text x="14.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:132) (1 samples, 0.14%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(231,74,8)"/><text x="14.00" y="174.50"></text></g><g><title>parse_sklearn_model (skl2onnx/_parse.py:473) (1 samples, 0.14%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(225,220,47)"/><text x="14.00" y="190.50"></text></g><g><title>parse_sklearn (skl2onnx/_parse.py:404) (1 samples, 0.14%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(245,163,49)"/><text x="14.00" y="206.50"></text></g><g><title>_parse_sklearn_classifier (skl2onnx/_parse.py:326) (1 samples, 0.14%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(240,4,5)"/><text x="14.00" y="222.50"></text></g><g><title>declare_local_operator (skl2onnx/common/_topology.py:361) (1 samples, 0.14%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(224,218,18)"/><text x="14.00" y="238.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.14%)</title><rect x="13" y="148" width="1" height="15" fill="rgb(237,15,26)"/><text x="16.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (1 samples, 0.14%)</title><rect x="13" y="164" width="1" height="15" fill="rgb(206,67,10)"/><text x="16.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.14%)</title><rect x="13" y="180" width="1" height="15" fill="rgb(228,55,14)"/><text x="16.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.14%)</title><rect x="13" y="196" width="1" height="15" fill="rgb(205,29,20)"/><text x="16.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.14%)</title><rect x="13" y="212" width="1" height="15" fill="rgb(211,208,12)"/><text x="16.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.14%)</title><rect x="13" y="228" width="1" height="15" fill="rgb(253,10,7)"/><text x="16.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.14%)</title><rect x="13" y="244" width="1" height="15" fill="rgb(218,120,39)"/><text x="16.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.14%)</title><rect x="13" y="260" width="1" height="15" fill="rgb(252,92,30)"/><text x="16.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.14%)</title><rect x="13" y="276" width="1" height="15" fill="rgb(205,69,36)"/><text x="16.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.14%)</title><rect x="13" y="292" width="1" height="15" fill="rgb(253,116,47)"/><text x="16.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.14%)</title><rect x="13" y="308" width="1" height="15" fill="rgb(253,59,29)"/><text x="16.00" y="318.50"></text></g><g><title>0x7f5c82365535 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(232,136,8)"/><text x="17.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(246,69,26)"/><text x="17.00" y="222.50"></text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (13 samples, 1.80%)</title><rect x="13" y="100" width="21" height="15" fill="rgb(208,127,44)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (13 samples, 1.80%)</title><rect x="13" y="116" width="21" height="15" fill="rgb(229,139,43)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (13 samples, 1.80%)</title><rect x="13" y="132" width="21" height="15" fill="rgb(213,22,49)"/><text x="16.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (12 samples, 1.66%)</title><rect x="14" y="148" width="20" height="15" fill="rgb(213,169,5)"/><text x="17.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (12 samples, 1.66%)</title><rect x="14" y="164" width="20" height="15" fill="rgb(235,151,53)"/><text x="17.00" y="174.50"></text></g><g><title>0x7f5c823673fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.66%)</title><rect x="14" y="180" width="20" height="15" fill="rgb(237,182,13)"/><text x="17.00" y="190.50"></text></g><g><title>0x7f5c82365553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.52%)</title><rect x="16" y="196" width="18" height="15" fill="rgb(214,73,15)"/><text x="19.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.52%)</title><rect x="16" y="212" width="18" height="15" fill="rgb(241,167,1)"/><text x="19.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.52%)</title><rect x="16" y="228" width="18" height="15" fill="rgb(254,17,27)"/><text x="19.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="27" y="244" width="7" height="15" fill="rgb(223,223,44)"/><text x="30.00" y="254.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="32" y="260" width="2" height="15" fill="rgb(217,149,6)"/><text x="35.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.14%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(241,225,34)"/><text x="37.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.28%)</title><rect x="36" y="196" width="3" height="15" fill="rgb(217,164,16)"/><text x="39.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.14%)</title><rect x="37" y="212" width="2" height="15" fill="rgb(241,14,3)"/><text x="40.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (5 samples, 0.69%)</title><rect x="34" y="164" width="8" height="15" fill="rgb(240,50,17)"/><text x="37.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.55%)</title><rect x="36" y="180" width="6" height="15" fill="rgb(208,175,13)"/><text x="39.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.28%)</title><rect x="39" y="196" width="3" height="15" fill="rgb(245,36,53)"/><text x="42.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.14%)</title><rect x="42" y="180" width="2" height="15" fill="rgb(238,58,25)"/><text x="45.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.28%)</title><rect x="44" y="180" width="3" height="15" fill="rgb(252,163,1)"/><text x="47.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.14%)</title><rect x="45" y="196" width="2" height="15" fill="rgb(231,210,45)"/><text x="48.00" y="206.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (9 samples, 1.24%)</title><rect x="34" y="148" width="15" height="15" fill="rgb(250,97,48)"/><text x="37.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (4 samples, 0.55%)</title><rect x="42" y="164" width="7" height="15" fill="rgb(232,11,53)"/><text x="45.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.14%)</title><rect x="47" y="180" width="2" height="15" fill="rgb(225,33,3)"/><text x="50.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.14%)</title><rect x="47" y="196" width="2" height="15" fill="rgb(236,102,2)"/><text x="50.00" y="206.50"></text></g><g><title>0x7f5c82364f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="49" y="196" width="1" height="15" fill="rgb(234,94,19)"/><text x="52.00" y="206.50"></text></g><g><title>0x7f5c8234ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="49" y="212" width="1" height="15" fill="rgb(206,72,37)"/><text x="52.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.14%)</title><rect x="49" y="228" width="1" height="15" fill="rgb(222,123,8)"/><text x="52.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.14%)</title><rect x="49" y="244" width="1" height="15" fill="rgb(222,77,43)"/><text x="52.00" y="254.50"></text></g><g><title>0x7f5c82364f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="50" y="196" width="2" height="15" fill="rgb(240,39,4)"/><text x="53.00" y="206.50"></text></g><g><title>0x7f5c8234ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="50" y="212" width="2" height="15" fill="rgb(230,189,25)"/><text x="53.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:831) (1 samples, 0.14%)</title><rect x="50" y="228" width="2" height="15" fill="rgb(209,192,11)"/><text x="53.00" y="238.50"></text></g><g><title>0x7f5c82365237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="52" y="196" width="2" height="15" fill="rgb(226,7,32)"/><text x="55.00" y="206.50"></text></g><g><title>0x7f5c8234fce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="52" y="212" width="2" height="15" fill="rgb(213,99,43)"/><text x="55.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="54" y="228" width="1" height="15" fill="rgb(252,98,52)"/><text x="57.00" y="238.50"></text></g><g><title>0x7f5ca7876906 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="168" y="244" width="1" height="15" fill="rgb(230,83,26)"/><text x="171.00" y="254.50"></text></g><g><title>0x7f5ca7876945 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="169" y="244" width="2" height="15" fill="rgb(238,64,12)"/><text x="172.00" y="254.50"></text></g><g><title>0x7f5ca7876971 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="171" y="244" width="3" height="15" fill="rgb(216,125,24)"/><text x="174.00" y="254.50"></text></g><g><title>0x7f5ca7876982 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="174" y="244" width="2" height="15" fill="rgb(246,133,5)"/><text x="177.00" y="254.50"></text></g><g><title>0x7f5ca7876998 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="176" y="244" width="3" height="15" fill="rgb(252,58,48)"/><text x="179.00" y="254.50"></text></g><g><title>0x7f5ca7876a53 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="179" y="244" width="2" height="15" fill="rgb(233,196,33)"/><text x="182.00" y="254.50"></text></g><g><title>0x7f5ca7876d07 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="181" y="244" width="3" height="15" fill="rgb(211,22,5)"/><text x="184.00" y="254.50"></text></g><g><title>0x7f5ca7876d13 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="184" y="244" width="2" height="15" fill="rgb(207,64,2)"/><text x="187.00" y="254.50"></text></g><g><title>0x7f5ca7a48c46 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="189" y="260" width="3" height="15" fill="rgb(237,29,29)"/><text x="192.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (5 samples, 0.69%)</title><rect x="186" y="244" width="8" height="15" fill="rgb(224,147,36)"/><text x="189.00" y="254.50"></text></g><g><title>0x7f5ca7a48c7b (libm-2.29.so) (1 samples, 0.14%)</title><rect x="192" y="260" width="2" height="15" fill="rgb(230,183,21)"/><text x="195.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.69%)</title><rect x="194" y="244" width="8" height="15" fill="rgb(218,23,19)"/><text x="197.00" y="254.50"></text></g><g><title>0x7f5ca7877c34 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="214" y="260" width="1" height="15" fill="rgb(249,102,37)"/><text x="217.00" y="270.50"></text></g><g><title>0x7f5ca7877c38 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="215" y="260" width="2" height="15" fill="rgb(243,7,12)"/><text x="218.00" y="270.50"></text></g><g><title>0x7f5ca7877f0a (libc-2.29.so) (2 samples, 0.28%)</title><rect x="217" y="260" width="3" height="15" fill="rgb(249,29,8)"/><text x="220.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.94%)</title><rect x="202" y="244" width="23" height="15" fill="rgb(245,72,1)"/><text x="205.00" y="254.50">m..</text></g><g><title>0x7f5ca787800a (libc-2.29.so) (3 samples, 0.41%)</title><rect x="220" y="260" width="5" height="15" fill="rgb(224,56,23)"/><text x="223.00" y="270.50"></text></g><g><title>0x7f5c82348020 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="271" y="260" width="1" height="15" fill="rgb(214,29,53)"/><text x="274.00" y="270.50"></text></g><g><title>0x7f5ca7876917 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="272" y="260" width="4" height="15" fill="rgb(251,166,41)"/><text x="275.00" y="270.50"></text></g><g><title>0x7f5ca7876a4f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="276" y="260" width="1" height="15" fill="rgb(212,37,51)"/><text x="279.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.28%)</title><rect x="277" y="260" width="3" height="15" fill="rgb(215,115,40)"/><text x="280.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (23 samples, 3.18%)</title><rect x="280" y="260" width="38" height="15" fill="rgb(212,160,48)"/><text x="283.00" y="270.50">svm..</text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:38) (198 samples, 27.39%)</title><rect x="10" y="52" width="323" height="15" fill="rgb(239,129,2)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probability..</text></g><g><title>profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:37) (198 samples, 27.39%)</title><rect x="10" y="68" width="323" height="15" fill="rgb(241,34,4)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_linear_b_cl_probabil..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (196 samples, 27.11%)</title><rect x="13" y="84" width="320" height="15" fill="rgb(247,160,54)"/><text x="16.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probab..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (183 samples, 25.31%)</title><rect x="34" y="100" width="299" height="15" fill="rgb(218,140,16)"/><text x="37.00" y="110.50">profile (bench_SVC_linear_b_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (183 samples, 25.31%)</title><rect x="34" y="116" width="299" height="15" fill="rgb(224,132,33)"/><text x="37.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (183 samples, 25.31%)</title><rect x="34" y="132" width="299" height="15" fill="rgb(226,185,30)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (174 samples, 24.07%)</title><rect x="49" y="148" width="284" height="15" fill="rgb(251,20,11)"/><text x="52.00" y="158.50">_predict_proba (sklearn/svm/_base.py:6..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (174 samples, 24.07%)</title><rect x="49" y="164" width="284" height="15" fill="rgb(216,181,41)"/><text x="52.00" y="174.50">_dense_predict_proba (sklearn/svm/_bas..</text></g><g><title>0x7f5c823673fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 24.07%)</title><rect x="49" y="180" width="284" height="15" fill="rgb(212,1,25)"/><text x="52.00" y="190.50">0x7f5c823673fd (sklearn/svm/_libsvm.cp..</text></g><g><title>0x7f5c82365553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (171 samples, 23.65%)</title><rect x="54" y="196" width="279" height="15" fill="rgb(247,88,34)"/><text x="57.00" y="206.50">0x7f5c82365553 (sklearn/svm/_libsvm.c..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (171 samples, 23.65%)</title><rect x="54" y="212" width="279" height="15" fill="rgb(223,88,34)"/><text x="57.00" y="222.50">copy_predict_proba (sklearn/svm/_libs..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (170 samples, 23.51%)</title><rect x="55" y="228" width="278" height="15" fill="rgb(232,92,52)"/><text x="58.00" y="238.50">svm_predict_probability (sklearn/svm/..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (66 samples, 9.13%)</title><rect x="225" y="244" width="108" height="15" fill="rgb(213,21,31)"/><text x="228.00" y="254.50">svm_predict_v..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.24%)</title><rect x="318" y="260" width="15" height="15" fill="rgb(248,152,3)"/><text x="321.00" y="270.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.14%)</title><rect x="333" y="852" width="1" height="15" fill="rgb(229,102,41)"/><text x="336.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.14%)</title><rect x="333" y="868" width="1" height="15" fill="rgb(209,36,30)"/><text x="336.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.14%)</title><rect x="333" y="884" width="1" height="15" fill="rgb(209,97,48)"/><text x="336.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.14%)</title><rect x="333" y="900" width="1" height="15" fill="rgb(239,139,23)"/><text x="336.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.14%)</title><rect x="333" y="916" width="1" height="15" fill="rgb(236,174,13)"/><text x="336.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.14%)</title><rect x="333" y="932" width="1" height="15" fill="rgb(250,140,0)"/><text x="336.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.14%)</title><rect x="334" y="852" width="2" height="15" fill="rgb(225,177,39)"/><text x="337.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.14%)</title><rect x="334" y="868" width="2" height="15" fill="rgb(226,1,29)"/><text x="337.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.14%)</title><rect x="334" y="884" width="2" height="15" fill="rgb(242,90,0)"/><text x="337.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.14%)</title><rect x="334" y="900" width="2" height="15" fill="rgb(231,66,13)"/><text x="337.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.14%)</title><rect x="334" y="916" width="2" height="15" fill="rgb(212,77,42)"/><text x="337.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.14%)</title><rect x="334" y="932" width="2" height="15" fill="rgb(222,126,43)"/><text x="337.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.14%)</title><rect x="334" y="948" width="2" height="15" fill="rgb(243,45,30)"/><text x="337.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.14%)</title><rect x="334" y="964" width="2" height="15" fill="rgb(238,156,28)"/><text x="337.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.14%)</title><rect x="334" y="980" width="2" height="15" fill="rgb(241,16,14)"/><text x="337.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.14%)</title><rect x="334" y="996" width="2" height="15" fill="rgb(235,93,38)"/><text x="337.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.14%)</title><rect x="334" y="1012" width="2" height="15" fill="rgb(246,116,30)"/><text x="337.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.14%)</title><rect x="334" y="1028" width="2" height="15" fill="rgb(250,11,5)"/><text x="337.00" y="1038.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.14%)</title><rect x="336" y="900" width="2" height="15" fill="rgb(242,109,54)"/><text x="339.00" y="910.50"></text></g><g><title>basename (posixpath.py:149) (1 samples, 0.14%)</title><rect x="336" y="916" width="2" height="15" fill="rgb(241,38,18)"/><text x="339.00" y="926.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.28%)</title><rect x="336" y="868" width="3" height="15" fill="rgb(245,6,10)"/><text x="339.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.28%)</title><rect x="336" y="884" width="3" height="15" fill="rgb(216,20,11)"/><text x="339.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.14%)</title><rect x="338" y="900" width="1" height="15" fill="rgb(217,164,9)"/><text x="341.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.14%)</title><rect x="338" y="916" width="1" height="15" fill="rgb(222,81,23)"/><text x="341.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.14%)</title><rect x="338" y="932" width="1" height="15" fill="rgb(225,98,21)"/><text x="341.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.14%)</title><rect x="338" y="948" width="1" height="15" fill="rgb(236,18,42)"/><text x="341.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:217) (1 samples, 0.14%)</title><rect x="338" y="964" width="1" height="15" fill="rgb(240,221,53)"/><text x="341.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.14%)</title><rect x="338" y="980" width="1" height="15" fill="rgb(208,195,34)"/><text x="341.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py:2) (5 samples, 0.69%)</title><rect x="333" y="148" width="8" height="15" fill="rgb(223,10,54)"/><text x="336.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="164" width="8" height="15" fill="rgb(232,40,49)"/><text x="336.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.69%)</title><rect x="333" y="180" width="8" height="15" fill="rgb(227,9,54)"/><text x="336.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="196" width="8" height="15" fill="rgb(213,39,6)"/><text x="336.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="212" width="8" height="15" fill="rgb(240,190,3)"/><text x="336.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="228" width="8" height="15" fill="rgb(249,68,4)"/><text x="336.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="244" width="8" height="15" fill="rgb(228,20,43)"/><text x="336.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="260" width="8" height="15" fill="rgb(236,71,11)"/><text x="336.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="276" width="8" height="15" fill="rgb(209,192,27)"/><text x="336.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.69%)</title><rect x="333" y="292" width="8" height="15" fill="rgb(226,151,34)"/><text x="336.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="308" width="8" height="15" fill="rgb(211,57,35)"/><text x="336.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="324" width="8" height="15" fill="rgb(215,201,28)"/><text x="336.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="340" width="8" height="15" fill="rgb(230,168,36)"/><text x="336.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="356" width="8" height="15" fill="rgb(224,122,9)"/><text x="336.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="372" width="8" height="15" fill="rgb(230,167,42)"/><text x="336.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.69%)</title><rect x="333" y="388" width="8" height="15" fill="rgb(209,229,27)"/><text x="336.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="404" width="8" height="15" fill="rgb(222,61,5)"/><text x="336.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="420" width="8" height="15" fill="rgb(223,194,16)"/><text x="336.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="436" width="8" height="15" fill="rgb(224,155,6)"/><text x="336.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="452" width="8" height="15" fill="rgb(205,30,53)"/><text x="336.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="468" width="8" height="15" fill="rgb(228,148,11)"/><text x="336.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.69%)</title><rect x="333" y="484" width="8" height="15" fill="rgb(221,73,22)"/><text x="336.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="500" width="8" height="15" fill="rgb(211,101,9)"/><text x="336.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="516" width="8" height="15" fill="rgb(244,166,15)"/><text x="336.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="532" width="8" height="15" fill="rgb(206,14,27)"/><text x="336.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="548" width="8" height="15" fill="rgb(231,117,3)"/><text x="336.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="564" width="8" height="15" fill="rgb(231,165,39)"/><text x="336.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.69%)</title><rect x="333" y="580" width="8" height="15" fill="rgb(237,2,21)"/><text x="336.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="596" width="8" height="15" fill="rgb(239,138,45)"/><text x="336.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.69%)</title><rect x="333" y="612" width="8" height="15" fill="rgb(218,96,0)"/><text x="336.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="628" width="8" height="15" fill="rgb(218,219,15)"/><text x="336.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="644" width="8" height="15" fill="rgb(207,90,53)"/><text x="336.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="660" width="8" height="15" fill="rgb(222,8,17)"/><text x="336.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="676" width="8" height="15" fill="rgb(241,157,32)"/><text x="336.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="692" width="8" height="15" fill="rgb(236,167,13)"/><text x="336.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="708" width="8" height="15" fill="rgb(237,50,1)"/><text x="336.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.69%)</title><rect x="333" y="724" width="8" height="15" fill="rgb(231,146,42)"/><text x="336.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="333" y="740" width="8" height="15" fill="rgb(231,4,0)"/><text x="336.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="333" y="756" width="8" height="15" fill="rgb(253,123,8)"/><text x="336.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="333" y="772" width="8" height="15" fill="rgb(231,203,40)"/><text x="336.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="333" y="788" width="8" height="15" fill="rgb(232,2,53)"/><text x="336.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="333" y="804" width="8" height="15" fill="rgb(251,213,8)"/><text x="336.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.69%)</title><rect x="333" y="820" width="8" height="15" fill="rgb(224,101,47)"/><text x="336.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.69%)</title><rect x="333" y="836" width="8" height="15" fill="rgb(236,97,19)"/><text x="336.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.41%)</title><rect x="336" y="852" width="5" height="15" fill="rgb(237,229,24)"/><text x="339.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.14%)</title><rect x="339" y="868" width="2" height="15" fill="rgb(216,173,13)"/><text x="342.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.14%)</title><rect x="339" y="884" width="2" height="15" fill="rgb(219,123,9)"/><text x="342.00" y="894.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.14%)</title><rect x="339" y="900" width="2" height="15" fill="rgb(232,46,8)"/><text x="342.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.14%)</title><rect x="341" y="484" width="1" height="15" fill="rgb(237,171,29)"/><text x="344.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="341" y="500" width="1" height="15" fill="rgb(221,139,7)"/><text x="344.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="516" width="1" height="15" fill="rgb(245,33,6)"/><text x="344.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="532" width="1" height="15" fill="rgb(209,165,15)"/><text x="344.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="548" width="1" height="15" fill="rgb(235,48,49)"/><text x="344.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="564" width="1" height="15" fill="rgb(225,56,52)"/><text x="344.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="580" width="1" height="15" fill="rgb(214,85,35)"/><text x="344.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="596" width="1" height="15" fill="rgb(242,9,37)"/><text x="344.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.14%)</title><rect x="341" y="612" width="1" height="15" fill="rgb(215,217,3)"/><text x="344.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="628" width="1" height="15" fill="rgb(212,179,1)"/><text x="344.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="644" width="1" height="15" fill="rgb(238,74,36)"/><text x="344.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="660" width="1" height="15" fill="rgb(250,122,16)"/><text x="344.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="676" width="1" height="15" fill="rgb(246,141,41)"/><text x="344.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="692" width="1" height="15" fill="rgb(207,31,46)"/><text x="344.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.14%)</title><rect x="341" y="708" width="1" height="15" fill="rgb(229,195,48)"/><text x="344.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="724" width="1" height="15" fill="rgb(236,160,23)"/><text x="344.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="740" width="1" height="15" fill="rgb(224,54,37)"/><text x="344.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="756" width="1" height="15" fill="rgb(217,182,48)"/><text x="344.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="772" width="1" height="15" fill="rgb(206,192,51)"/><text x="344.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="788" width="1" height="15" fill="rgb(218,131,25)"/><text x="344.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.14%)</title><rect x="341" y="804" width="1" height="15" fill="rgb(215,72,45)"/><text x="344.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="820" width="1" height="15" fill="rgb(231,219,8)"/><text x="344.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="836" width="1" height="15" fill="rgb(230,67,26)"/><text x="344.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="852" width="1" height="15" fill="rgb(237,139,27)"/><text x="344.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="868" width="1" height="15" fill="rgb(241,116,13)"/><text x="344.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="884" width="1" height="15" fill="rgb(253,163,34)"/><text x="344.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.14%)</title><rect x="341" y="900" width="1" height="15" fill="rgb(219,127,39)"/><text x="344.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="916" width="1" height="15" fill="rgb(218,23,10)"/><text x="344.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="932" width="1" height="15" fill="rgb(218,92,48)"/><text x="344.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="948" width="1" height="15" fill="rgb(246,170,31)"/><text x="344.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="964" width="1" height="15" fill="rgb(223,33,10)"/><text x="344.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="980" width="1" height="15" fill="rgb(224,66,53)"/><text x="344.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.14%)</title><rect x="341" y="996" width="1" height="15" fill="rgb(232,134,52)"/><text x="344.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1012" width="1" height="15" fill="rgb(210,25,26)"/><text x="344.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.14%)</title><rect x="341" y="1028" width="1" height="15" fill="rgb(244,55,7)"/><text x="344.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1044" width="1" height="15" fill="rgb(232,142,47)"/><text x="344.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1060" width="1" height="15" fill="rgb(246,185,52)"/><text x="344.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1076" width="1" height="15" fill="rgb(205,226,53)"/><text x="344.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1092" width="1" height="15" fill="rgb(221,37,32)"/><text x="344.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1108" width="1" height="15" fill="rgb(239,59,38)"/><text x="344.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1124" width="1" height="15" fill="rgb(234,145,41)"/><text x="344.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.14%)</title><rect x="341" y="1140" width="1" height="15" fill="rgb(247,148,53)"/><text x="344.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1156" width="1" height="15" fill="rgb(206,65,36)"/><text x="344.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1172" width="1" height="15" fill="rgb(225,88,0)"/><text x="344.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1188" width="1" height="15" fill="rgb(244,98,28)"/><text x="344.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1204" width="1" height="15" fill="rgb(213,108,9)"/><text x="344.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1220" width="1" height="15" fill="rgb(245,166,26)"/><text x="344.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.14%)</title><rect x="341" y="1236" width="1" height="15" fill="rgb(246,102,50)"/><text x="344.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1252" width="1" height="15" fill="rgb(244,133,19)"/><text x="344.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1268" width="1" height="15" fill="rgb(240,227,15)"/><text x="344.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1284" width="1" height="15" fill="rgb(220,85,3)"/><text x="344.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1300" width="1" height="15" fill="rgb(230,79,47)"/><text x="344.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1316" width="1" height="15" fill="rgb(234,87,34)"/><text x="344.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.14%)</title><rect x="341" y="1332" width="1" height="15" fill="rgb(218,68,8)"/><text x="344.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1348" width="1" height="15" fill="rgb(238,194,46)"/><text x="344.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1364" width="1" height="15" fill="rgb(215,98,6)"/><text x="344.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1380" width="1" height="15" fill="rgb(249,158,22)"/><text x="344.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1396" width="1" height="15" fill="rgb(213,31,41)"/><text x="344.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1412" width="1" height="15" fill="rgb(238,7,21)"/><text x="344.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.14%)</title><rect x="341" y="1428" width="1" height="15" fill="rgb(242,111,35)"/><text x="344.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1444" width="1" height="15" fill="rgb(254,98,37)"/><text x="344.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1460" width="1" height="15" fill="rgb(239,153,50)"/><text x="344.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1476" width="1" height="15" fill="rgb(243,208,44)"/><text x="344.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1492" width="1" height="15" fill="rgb(208,138,9)"/><text x="344.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1508" width="1" height="15" fill="rgb(222,17,17)"/><text x="344.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.14%)</title><rect x="341" y="1524" width="1" height="15" fill="rgb(249,204,51)"/><text x="344.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="341" y="1540" width="1" height="15" fill="rgb(254,182,21)"/><text x="344.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1556" width="1" height="15" fill="rgb(210,116,15)"/><text x="344.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="341" y="1572" width="1" height="15" fill="rgb(232,97,16)"/><text x="344.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="341" y="1588" width="1" height="15" fill="rgb(229,5,9)"/><text x="344.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="341" y="1604" width="1" height="15" fill="rgb(253,172,20)"/><text x="344.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="341" y="1620" width="1" height="15" fill="rgb(247,24,44)"/><text x="344.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="341" y="1636" width="1" height="15" fill="rgb(227,184,10)"/><text x="344.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:180) (1 samples, 0.14%)</title><rect x="341" y="1652" width="1" height="15" fill="rgb(232,208,39)"/><text x="344.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py:357) (1 samples, 0.14%)</title><rect x="341" y="1668" width="1" height="15" fill="rgb(238,2,4)"/><text x="344.00" y="1678.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py:4) (2 samples, 0.28%)</title><rect x="341" y="148" width="3" height="15" fill="rgb(209,216,5)"/><text x="344.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="341" y="164" width="3" height="15" fill="rgb(253,92,53)"/><text x="344.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.28%)</title><rect x="341" y="180" width="3" height="15" fill="rgb(253,1,0)"/><text x="344.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="341" y="196" width="3" height="15" fill="rgb(247,113,33)"/><text x="344.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="341" y="212" width="3" height="15" fill="rgb(231,54,3)"/><text x="344.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="341" y="228" width="3" height="15" fill="rgb(243,219,47)"/><text x="344.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="341" y="244" width="3" height="15" fill="rgb(208,87,13)"/><text x="344.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(223,7,38)"/><text x="344.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(243,132,46)"/><text x="344.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.28%)</title><rect x="341" y="292" width="3" height="15" fill="rgb(214,104,51)"/><text x="344.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="341" y="308" width="3" height="15" fill="rgb(245,139,54)"/><text x="344.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="341" y="324" width="3" height="15" fill="rgb(228,8,26)"/><text x="344.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="341" y="340" width="3" height="15" fill="rgb(250,12,22)"/><text x="344.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="341" y="356" width="3" height="15" fill="rgb(222,229,33)"/><text x="344.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="341" y="372" width="3" height="15" fill="rgb(228,10,9)"/><text x="344.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.28%)</title><rect x="341" y="388" width="3" height="15" fill="rgb(236,81,26)"/><text x="344.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="341" y="404" width="3" height="15" fill="rgb(247,27,0)"/><text x="344.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="341" y="420" width="3" height="15" fill="rgb(217,66,44)"/><text x="344.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="341" y="436" width="3" height="15" fill="rgb(233,119,52)"/><text x="344.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="341" y="452" width="3" height="15" fill="rgb(234,58,40)"/><text x="344.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="341" y="468" width="3" height="15" fill="rgb(214,154,11)"/><text x="344.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.14%)</title><rect x="342" y="484" width="2" height="15" fill="rgb(209,18,35)"/><text x="345.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="500" width="2" height="15" fill="rgb(246,72,32)"/><text x="345.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="516" width="2" height="15" fill="rgb(241,14,37)"/><text x="345.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="532" width="2" height="15" fill="rgb(232,147,13)"/><text x="345.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="548" width="2" height="15" fill="rgb(235,122,19)"/><text x="345.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="564" width="2" height="15" fill="rgb(237,227,18)"/><text x="345.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.14%)</title><rect x="342" y="580" width="2" height="15" fill="rgb(213,164,29)"/><text x="345.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="596" width="2" height="15" fill="rgb(225,222,33)"/><text x="345.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="612" width="2" height="15" fill="rgb(221,184,11)"/><text x="345.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="628" width="2" height="15" fill="rgb(251,226,5)"/><text x="345.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="644" width="2" height="15" fill="rgb(254,41,6)"/><text x="345.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="660" width="2" height="15" fill="rgb(246,126,39)"/><text x="345.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.14%)</title><rect x="342" y="676" width="2" height="15" fill="rgb(218,79,5)"/><text x="345.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="692" width="2" height="15" fill="rgb(252,167,23)"/><text x="345.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="708" width="2" height="15" fill="rgb(225,143,28)"/><text x="345.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="724" width="2" height="15" fill="rgb(249,145,29)"/><text x="345.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="740" width="2" height="15" fill="rgb(212,97,26)"/><text x="345.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="756" width="2" height="15" fill="rgb(238,114,54)"/><text x="345.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.14%)</title><rect x="342" y="772" width="2" height="15" fill="rgb(230,24,5)"/><text x="345.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="342" y="788" width="2" height="15" fill="rgb(228,164,9)"/><text x="345.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="804" width="2" height="15" fill="rgb(207,178,5)"/><text x="345.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="820" width="2" height="15" fill="rgb(229,64,20)"/><text x="345.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="836" width="2" height="15" fill="rgb(207,219,4)"/><text x="345.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="852" width="2" height="15" fill="rgb(238,59,37)"/><text x="345.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="868" width="2" height="15" fill="rgb(242,40,24)"/><text x="345.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="884" width="2" height="15" fill="rgb(217,147,29)"/><text x="345.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.14%)</title><rect x="342" y="900" width="2" height="15" fill="rgb(242,49,46)"/><text x="345.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="916" width="2" height="15" fill="rgb(236,185,40)"/><text x="345.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="932" width="2" height="15" fill="rgb(213,40,1)"/><text x="345.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="948" width="2" height="15" fill="rgb(228,189,9)"/><text x="345.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="964" width="2" height="15" fill="rgb(247,143,42)"/><text x="345.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="980" width="2" height="15" fill="rgb(214,4,43)"/><text x="345.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.14%)</title><rect x="342" y="996" width="2" height="15" fill="rgb(244,227,19)"/><text x="345.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="342" y="1012" width="2" height="15" fill="rgb(244,38,54)"/><text x="345.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="1028" width="2" height="15" fill="rgb(242,167,46)"/><text x="345.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="1044" width="2" height="15" fill="rgb(216,137,31)"/><text x="345.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="1060" width="2" height="15" fill="rgb(246,141,41)"/><text x="345.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="1076" width="2" height="15" fill="rgb(229,144,43)"/><text x="345.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="1092" width="2" height="15" fill="rgb(212,73,15)"/><text x="345.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="1108" width="2" height="15" fill="rgb(239,110,24)"/><text x="345.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:92) (1 samples, 0.14%)</title><rect x="342" y="1124" width="2" height="15" fill="rgb(230,60,20)"/><text x="345.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="1140" width="2" height="15" fill="rgb(211,105,31)"/><text x="345.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="1156" width="2" height="15" fill="rgb(217,203,25)"/><text x="345.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="342" y="1172" width="2" height="15" fill="rgb(254,31,52)"/><text x="345.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="342" y="1188" width="2" height="15" fill="rgb(235,80,15)"/><text x="345.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="1204" width="2" height="15" fill="rgb(208,169,36)"/><text x="345.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ode.py:94) (1 samples, 0.14%)</title><rect x="342" y="1220" width="2" height="15" fill="rgb(229,190,20)"/><text x="345.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="342" y="1236" width="2" height="15" fill="rgb(232,122,39)"/><text x="345.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="342" y="1252" width="2" height="15" fill="rgb(231,161,21)"/><text x="345.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="342" y="1268" width="2" height="15" fill="rgb(227,178,47)"/><text x="345.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="342" y="1284" width="2" height="15" fill="rgb(241,136,16)"/><text x="345.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.14%)</title><rect x="342" y="1300" width="2" height="15" fill="rgb(251,30,13)"/><text x="345.00" y="1310.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:580) (1 samples, 0.14%)</title><rect x="342" y="1316" width="2" height="15" fill="rgb(230,14,35)"/><text x="345.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.14%)</title><rect x="344" y="340" width="2" height="15" fill="rgb(210,168,5)"/><text x="347.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="344" y="356" width="2" height="15" fill="rgb(251,35,29)"/><text x="347.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="344" y="372" width="2" height="15" fill="rgb(221,95,31)"/><text x="347.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="344" y="388" width="2" height="15" fill="rgb(230,43,25)"/><text x="347.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="344" y="404" width="2" height="15" fill="rgb(211,209,46)"/><text x="347.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="344" y="420" width="2" height="15" fill="rgb(211,42,5)"/><text x="347.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.14%)</title><rect x="344" y="436" width="2" height="15" fill="rgb(241,50,20)"/><text x="347.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="344" y="452" width="2" height="15" fill="rgb(223,82,22)"/><text x="347.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="344" y="468" width="2" height="15" fill="rgb(205,60,16)"/><text x="347.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="344" y="484" width="2" height="15" fill="rgb(232,96,19)"/><text x="347.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="344" y="500" width="2" height="15" fill="rgb(214,153,48)"/><text x="347.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="344" y="516" width="2" height="15" fill="rgb(226,13,22)"/><text x="347.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.14%)</title><rect x="344" y="532" width="2" height="15" fill="rgb(240,105,8)"/><text x="347.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="344" y="548" width="2" height="15" fill="rgb(253,59,45)"/><text x="347.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="344" y="564" width="2" height="15" fill="rgb(209,102,22)"/><text x="347.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="344" y="580" width="2" height="15" fill="rgb(239,111,29)"/><text x="347.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="344" y="596" width="2" height="15" fill="rgb(239,180,36)"/><text x="347.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="344" y="612" width="2" height="15" fill="rgb(231,89,52)"/><text x="347.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:940) (1 samples, 0.14%)</title><rect x="344" y="628" width="2" height="15" fill="rgb(235,86,24)"/><text x="347.00" y="638.50"></text></g><g><title>AbstractBasicAuthHandler (urllib/request.py:948) (1 samples, 0.14%)</title><rect x="344" y="644" width="2" height="15" fill="rgb(207,149,39)"/><text x="347.00" y="654.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.14%)</title><rect x="344" y="660" width="2" height="15" fill="rgb(244,141,53)"/><text x="347.00" y="670.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.14%)</title><rect x="344" y="676" width="2" height="15" fill="rgb(212,70,13)"/><text x="347.00" y="686.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.14%)</title><rect x="344" y="692" width="2" height="15" fill="rgb(245,156,23)"/><text x="347.00" y="702.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.14%)</title><rect x="344" y="708" width="2" height="15" fill="rgb(228,48,30)"/><text x="347.00" y="718.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.14%)</title><rect x="344" y="724" width="2" height="15" fill="rgb(218,8,48)"/><text x="347.00" y="734.50"></text></g><g><title>_compile (sre_compile.py:131) (1 samples, 0.14%)</title><rect x="344" y="740" width="2" height="15" fill="rgb(232,207,19)"/><text x="347.00" y="750.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.14%)</title><rect x="346" y="628" width="1" height="15" fill="rgb(245,39,1)"/><text x="349.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="346" y="644" width="1" height="15" fill="rgb(225,212,20)"/><text x="349.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="346" y="660" width="1" height="15" fill="rgb(225,193,5)"/><text x="349.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="346" y="676" width="1" height="15" fill="rgb(218,196,20)"/><text x="349.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="346" y="692" width="1" height="15" fill="rgb(254,198,20)"/><text x="349.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="346" y="708" width="1" height="15" fill="rgb(208,0,47)"/><text x="349.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.14%)</title><rect x="346" y="724" width="1" height="15" fill="rgb(246,135,37)"/><text x="349.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="346" y="740" width="1" height="15" fill="rgb(246,203,40)"/><text x="349.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="346" y="756" width="1" height="15" fill="rgb(231,127,44)"/><text x="349.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="346" y="772" width="1" height="15" fill="rgb(211,152,34)"/><text x="349.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="346" y="788" width="1" height="15" fill="rgb(217,57,28)"/><text x="349.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="346" y="804" width="1" height="15" fill="rgb(206,118,48)"/><text x="349.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.14%)</title><rect x="346" y="820" width="1" height="15" fill="rgb(226,101,48)"/><text x="349.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="346" y="836" width="1" height="15" fill="rgb(215,215,8)"/><text x="349.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="346" y="852" width="1" height="15" fill="rgb(251,195,22)"/><text x="349.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="346" y="868" width="1" height="15" fill="rgb(223,37,46)"/><text x="349.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.14%)</title><rect x="346" y="884" width="1" height="15" fill="rgb(217,9,52)"/><text x="349.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="346" y="900" width="1" height="15" fill="rgb(223,56,26)"/><text x="349.00" y="910.50"></text></g><g><title>0x7f5c7e9fd40e (?) (1 samples, 0.14%)</title><rect x="346" y="916" width="1" height="15" fill="rgb(229,207,38)"/><text x="349.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="346" y="932" width="1" height="15" fill="rgb(238,28,27)"/><text x="349.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="346" y="948" width="1" height="15" fill="rgb(217,186,14)"/><text x="349.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="346" y="964" width="1" height="15" fill="rgb(206,142,15)"/><text x="349.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.14%)</title><rect x="346" y="980" width="1" height="15" fill="rgb(213,93,43)"/><text x="349.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="346" y="996" width="1" height="15" fill="rgb(233,88,5)"/><text x="349.00" y="1006.50"></text></g><g><title>0x7f5c7e7b72f7 (?) (1 samples, 0.14%)</title><rect x="346" y="1012" width="1" height="15" fill="rgb(208,178,33)"/><text x="349.00" y="1022.50"></text></g><g><title>0x7f5c7e7b959a (?) (1 samples, 0.14%)</title><rect x="346" y="1028" width="1" height="15" fill="rgb(228,18,34)"/><text x="349.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="346" y="1044" width="1" height="15" fill="rgb(226,194,5)"/><text x="349.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.14%)</title><rect x="346" y="1060" width="1" height="15" fill="rgb(227,49,4)"/><text x="349.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.14%)</title><rect x="346" y="1076" width="1" height="15" fill="rgb(205,135,51)"/><text x="349.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.14%)</title><rect x="346" y="1092" width="1" height="15" fill="rgb(233,106,19)"/><text x="349.00" y="1102.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.14%)</title><rect x="346" y="1108" width="1" height="15" fill="rgb(214,20,5)"/><text x="349.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.14%)</title><rect x="346" y="1124" width="1" height="15" fill="rgb(220,57,53)"/><text x="349.00" y="1134.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.14%)</title><rect x="346" y="1140" width="1" height="15" fill="rgb(250,189,19)"/><text x="349.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.14%)</title><rect x="347" y="1012" width="2" height="15" fill="rgb(213,47,34)"/><text x="350.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="347" y="1028" width="2" height="15" fill="rgb(235,144,46)"/><text x="350.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="347" y="1044" width="2" height="15" fill="rgb(208,17,3)"/><text x="350.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="347" y="1060" width="2" height="15" fill="rgb(210,117,44)"/><text x="350.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="347" y="1076" width="2" height="15" fill="rgb(223,13,8)"/><text x="350.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.14%)</title><rect x="347" y="1092" width="2" height="15" fill="rgb(223,132,28)"/><text x="350.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.14%)</title><rect x="347" y="1108" width="2" height="15" fill="rgb(251,32,6)"/><text x="350.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4892) (1 samples, 0.14%)</title><rect x="349" y="1108" width="2" height="15" fill="rgb(224,138,37)"/><text x="352.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10747) (1 samples, 0.14%)</title><rect x="349" y="1124" width="2" height="15" fill="rgb(212,4,20)"/><text x="352.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="349" y="1140" width="2" height="15" fill="rgb(228,118,10)"/><text x="352.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="349" y="1156" width="2" height="15" fill="rgb(223,87,49)"/><text x="352.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="349" y="1172" width="2" height="15" fill="rgb(254,99,44)"/><text x="352.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="349" y="1188" width="2" height="15" fill="rgb(205,101,27)"/><text x="352.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="349" y="1204" width="2" height="15" fill="rgb(228,215,0)"/><text x="352.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="349" y="1220" width="2" height="15" fill="rgb(245,160,45)"/><text x="352.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.14%)</title><rect x="349" y="1236" width="2" height="15" fill="rgb(245,16,37)"/><text x="352.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.14%)</title><rect x="349" y="1252" width="2" height="15" fill="rgb(224,61,45)"/><text x="352.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.14%)</title><rect x="351" y="1524" width="1" height="15" fill="rgb(208,24,49)"/><text x="354.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1540" width="1" height="15" fill="rgb(235,219,54)"/><text x="354.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="351" y="1556" width="1" height="15" fill="rgb(246,139,12)"/><text x="354.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="351" y="1572" width="1" height="15" fill="rgb(207,88,22)"/><text x="354.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="351" y="1588" width="1" height="15" fill="rgb(239,141,27)"/><text x="354.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="351" y="1604" width="1" height="15" fill="rgb(232,9,19)"/><text x="354.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1620" width="1" height="15" fill="rgb(254,69,40)"/><text x="354.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.14%)</title><rect x="351" y="1636" width="1" height="15" fill="rgb(245,165,23)"/><text x="354.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="351" y="1652" width="1" height="15" fill="rgb(242,175,2)"/><text x="354.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1668" width="1" height="15" fill="rgb(216,207,27)"/><text x="354.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="351" y="1684" width="1" height="15" fill="rgb(215,153,44)"/><text x="354.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="351" y="1700" width="1" height="15" fill="rgb(212,17,4)"/><text x="354.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="351" y="1716" width="1" height="15" fill="rgb(236,15,44)"/><text x="354.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="351" y="1732" width="1" height="15" fill="rgb(216,129,38)"/><text x="354.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1748" width="1" height="15" fill="rgb(210,2,38)"/><text x="354.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.14%)</title><rect x="351" y="1764" width="1" height="15" fill="rgb(230,191,35)"/><text x="354.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="351" y="1780" width="1" height="15" fill="rgb(251,117,18)"/><text x="354.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="351" y="1796" width="1" height="15" fill="rgb(252,52,49)"/><text x="354.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="351" y="1812" width="1" height="15" fill="rgb(234,229,8)"/><text x="354.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="351" y="1828" width="1" height="15" fill="rgb(218,182,51)"/><text x="354.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1844" width="1" height="15" fill="rgb(241,61,0)"/><text x="354.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.14%)</title><rect x="351" y="1860" width="1" height="15" fill="rgb(214,75,54)"/><text x="354.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="351" y="1876" width="1" height="15" fill="rgb(246,158,4)"/><text x="354.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="351" y="1892" width="1" height="15" fill="rgb(208,196,37)"/><text x="354.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="351" y="1908" width="1" height="15" fill="rgb(214,95,27)"/><text x="354.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="351" y="1924" width="1" height="15" fill="rgb(209,120,5)"/><text x="354.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="351" y="1940" width="1" height="15" fill="rgb(237,226,33)"/><text x="354.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.14%)</title><rect x="351" y="1956" width="1" height="15" fill="rgb(241,76,52)"/><text x="354.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6554) (1 samples, 0.14%)</title><rect x="351" y="1972" width="1" height="15" fill="rgb(205,40,2)"/><text x="354.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:3293) (1 samples, 0.14%)</title><rect x="351" y="1988" width="1" height="15" fill="rgb(224,154,6)"/><text x="354.00" y="1998.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.14%)</title><rect x="351" y="2004" width="1" height="15" fill="rgb(236,159,27)"/><text x="354.00" y="2014.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.14%)</title><rect x="351" y="2020" width="1" height="15" fill="rgb(213,61,40)"/><text x="354.00" y="2030.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.14%)</title><rect x="351" y="2036" width="1" height="15" fill="rgb(249,28,44)"/><text x="354.00" y="2046.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.14%)</title><rect x="351" y="2052" width="1" height="15" fill="rgb(244,90,20)"/><text x="354.00" y="2062.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.14%)</title><rect x="351" y="2068" width="1" height="15" fill="rgb(248,64,1)"/><text x="354.00" y="2078.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.14%)</title><rect x="351" y="2084" width="1" height="15" fill="rgb(217,111,47)"/><text x="354.00" y="2094.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.14%)</title><rect x="351" y="2100" width="1" height="15" fill="rgb(236,176,19)"/><text x="354.00" y="2110.50"></text></g><g><title>_parse (sre_parse.py:604) (1 samples, 0.14%)</title><rect x="351" y="2116" width="1" height="15" fill="rgb(218,194,46)"/><text x="354.00" y="2126.50"></text></g><g><title>tell (sre_parse.py:287) (1 samples, 0.14%)</title><rect x="351" y="2132" width="1" height="15" fill="rgb(232,9,40)"/><text x="354.00" y="2142.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 0.69%)</title><rect x="346" y="436" width="8" height="15" fill="rgb(236,101,50)"/><text x="349.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="346" y="452" width="8" height="15" fill="rgb(206,68,41)"/><text x="349.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="346" y="468" width="8" height="15" fill="rgb(205,3,4)"/><text x="349.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="346" y="484" width="8" height="15" fill="rgb(232,209,26)"/><text x="349.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="346" y="500" width="8" height="15" fill="rgb(252,138,33)"/><text x="349.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="346" y="516" width="8" height="15" fill="rgb(243,87,49)"/><text x="349.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 0.69%)</title><rect x="346" y="532" width="8" height="15" fill="rgb(205,221,20)"/><text x="349.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.69%)</title><rect x="346" y="548" width="8" height="15" fill="rgb(226,185,34)"/><text x="349.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.69%)</title><rect x="346" y="564" width="8" height="15" fill="rgb(219,20,46)"/><text x="349.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.69%)</title><rect x="346" y="580" width="8" height="15" fill="rgb(222,9,54)"/><text x="349.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.69%)</title><rect x="346" y="596" width="8" height="15" fill="rgb(216,60,48)"/><text x="349.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.69%)</title><rect x="346" y="612" width="8" height="15" fill="rgb(238,85,36)"/><text x="349.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 0.55%)</title><rect x="347" y="628" width="7" height="15" fill="rgb(227,103,17)"/><text x="350.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.55%)</title><rect x="347" y="644" width="7" height="15" fill="rgb(246,80,0)"/><text x="350.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.55%)</title><rect x="347" y="660" width="7" height="15" fill="rgb(246,7,41)"/><text x="350.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.55%)</title><rect x="347" y="676" width="7" height="15" fill="rgb(227,93,23)"/><text x="350.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.55%)</title><rect x="347" y="692" width="7" height="15" fill="rgb(240,194,24)"/><text x="350.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.55%)</title><rect x="347" y="708" width="7" height="15" fill="rgb(217,150,20)"/><text x="350.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 0.55%)</title><rect x="347" y="724" width="7" height="15" fill="rgb(220,141,30)"/><text x="350.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.55%)</title><rect x="347" y="740" width="7" height="15" fill="rgb(208,39,49)"/><text x="350.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.55%)</title><rect x="347" y="756" width="7" height="15" fill="rgb(205,227,7)"/><text x="350.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.55%)</title><rect x="347" y="772" width="7" height="15" fill="rgb(213,86,1)"/><text x="350.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.55%)</title><rect x="347" y="788" width="7" height="15" fill="rgb(231,204,49)"/><text x="350.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.55%)</title><rect x="347" y="804" width="7" height="15" fill="rgb(254,173,47)"/><text x="350.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 0.55%)</title><rect x="347" y="820" width="7" height="15" fill="rgb(205,225,26)"/><text x="350.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.55%)</title><rect x="347" y="836" width="7" height="15" fill="rgb(250,214,8)"/><text x="350.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.55%)</title><rect x="347" y="852" width="7" height="15" fill="rgb(212,139,0)"/><text x="350.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.55%)</title><rect x="347" y="868" width="7" height="15" fill="rgb(216,137,27)"/><text x="350.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.55%)</title><rect x="347" y="884" width="7" height="15" fill="rgb(232,73,5)"/><text x="350.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.55%)</title><rect x="347" y="900" width="7" height="15" fill="rgb(235,102,10)"/><text x="350.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (4 samples, 0.55%)</title><rect x="347" y="916" width="7" height="15" fill="rgb(245,128,8)"/><text x="350.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.55%)</title><rect x="347" y="932" width="7" height="15" fill="rgb(224,211,53)"/><text x="350.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.55%)</title><rect x="347" y="948" width="7" height="15" fill="rgb(243,134,39)"/><text x="350.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.55%)</title><rect x="347" y="964" width="7" height="15" fill="rgb(224,83,15)"/><text x="350.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.55%)</title><rect x="347" y="980" width="7" height="15" fill="rgb(250,208,26)"/><text x="350.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.55%)</title><rect x="347" y="996" width="7" height="15" fill="rgb(232,50,12)"/><text x="350.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.41%)</title><rect x="349" y="1012" width="5" height="15" fill="rgb(232,77,44)"/><text x="352.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="349" y="1028" width="5" height="15" fill="rgb(250,224,16)"/><text x="352.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="349" y="1044" width="5" height="15" fill="rgb(218,218,54)"/><text x="352.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="349" y="1060" width="5" height="15" fill="rgb(250,4,15)"/><text x="352.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="349" y="1076" width="5" height="15" fill="rgb(248,199,36)"/><text x="352.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="349" y="1092" width="5" height="15" fill="rgb(248,183,3)"/><text x="352.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.28%)</title><rect x="351" y="1108" width="3" height="15" fill="rgb(228,66,0)"/><text x="354.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="351" y="1124" width="3" height="15" fill="rgb(249,136,29)"/><text x="354.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="351" y="1140" width="3" height="15" fill="rgb(211,113,28)"/><text x="354.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="351" y="1156" width="3" height="15" fill="rgb(249,38,7)"/><text x="354.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="351" y="1172" width="3" height="15" fill="rgb(210,203,40)"/><text x="354.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="351" y="1188" width="3" height="15" fill="rgb(223,208,37)"/><text x="354.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.28%)</title><rect x="351" y="1204" width="3" height="15" fill="rgb(244,97,47)"/><text x="354.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="351" y="1220" width="3" height="15" fill="rgb(248,94,37)"/><text x="354.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="351" y="1236" width="3" height="15" fill="rgb(208,156,21)"/><text x="354.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="351" y="1252" width="3" height="15" fill="rgb(242,147,51)"/><text x="354.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="351" y="1268" width="3" height="15" fill="rgb(221,86,54)"/><text x="354.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="351" y="1284" width="3" height="15" fill="rgb(218,164,33)"/><text x="354.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.28%)</title><rect x="351" y="1300" width="3" height="15" fill="rgb(213,158,41)"/><text x="354.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="351" y="1316" width="3" height="15" fill="rgb(229,86,49)"/><text x="354.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="351" y="1332" width="3" height="15" fill="rgb(209,201,15)"/><text x="354.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="351" y="1348" width="3" height="15" fill="rgb(219,113,24)"/><text x="354.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="351" y="1364" width="3" height="15" fill="rgb(224,218,32)"/><text x="354.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="351" y="1380" width="3" height="15" fill="rgb(218,124,40)"/><text x="354.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.28%)</title><rect x="351" y="1396" width="3" height="15" fill="rgb(240,53,18)"/><text x="354.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="351" y="1412" width="3" height="15" fill="rgb(219,177,47)"/><text x="354.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="351" y="1428" width="3" height="15" fill="rgb(232,66,24)"/><text x="354.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="351" y="1444" width="3" height="15" fill="rgb(246,120,15)"/><text x="354.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="351" y="1460" width="3" height="15" fill="rgb(230,5,5)"/><text x="354.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="351" y="1476" width="3" height="15" fill="rgb(222,19,2)"/><text x="354.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.28%)</title><rect x="351" y="1492" width="3" height="15" fill="rgb(206,34,40)"/><text x="354.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="351" y="1508" width="3" height="15" fill="rgb(231,144,11)"/><text x="354.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="352" y="1524" width="2" height="15" fill="rgb(251,93,35)"/><text x="355.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="352" y="1540" width="2" height="15" fill="rgb(224,74,21)"/><text x="355.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="352" y="1556" width="2" height="15" fill="rgb(206,19,23)"/><text x="355.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="352" y="1572" width="2" height="15" fill="rgb(229,183,48)"/><text x="355.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.14%)</title><rect x="352" y="1588" width="2" height="15" fill="rgb(227,65,32)"/><text x="355.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.14%)</title><rect x="352" y="1604" width="2" height="15" fill="rgb(223,214,46)"/><text x="355.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.14%)</title><rect x="352" y="1620" width="2" height="15" fill="rgb(217,36,43)"/><text x="355.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1268) (1 samples, 0.14%)</title><rect x="352" y="1636" width="2" height="15" fill="rgb(235,136,5)"/><text x="355.00" y="1646.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.14%)</title><rect x="354" y="1604" width="2" height="15" fill="rgb(229,34,10)"/><text x="357.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="354" y="1620" width="2" height="15" fill="rgb(212,16,39)"/><text x="357.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="354" y="1636" width="2" height="15" fill="rgb(229,121,26)"/><text x="357.00" y="1646.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="354" y="1652" width="2" height="15" fill="rgb(209,207,10)"/><text x="357.00" y="1662.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.28%)</title><rect x="354" y="1460" width="3" height="15" fill="rgb(232,209,34)"/><text x="357.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.28%)</title><rect x="354" y="1476" width="3" height="15" fill="rgb(249,8,54)"/><text x="357.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.28%)</title><rect x="354" y="1492" width="3" height="15" fill="rgb(242,67,36)"/><text x="357.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.28%)</title><rect x="354" y="1508" width="3" height="15" fill="rgb(248,67,48)"/><text x="357.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.28%)</title><rect x="354" y="1524" width="3" height="15" fill="rgb(249,20,46)"/><text x="357.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.28%)</title><rect x="354" y="1540" width="3" height="15" fill="rgb(222,169,21)"/><text x="357.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.28%)</title><rect x="354" y="1556" width="3" height="15" fill="rgb(227,145,19)"/><text x="357.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (2 samples, 0.28%)</title><rect x="354" y="1572" width="3" height="15" fill="rgb(235,188,27)"/><text x="357.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.28%)</title><rect x="354" y="1588" width="3" height="15" fill="rgb(223,215,9)"/><text x="357.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:159) (1 samples, 0.14%)</title><rect x="356" y="1604" width="1" height="15" fill="rgb(208,60,23)"/><text x="359.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:4) (16 samples, 2.21%)</title><rect x="333" y="52" width="26" height="15" fill="rgb(239,148,2)"/><text x="336.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 2.21%)</title><rect x="333" y="68" width="26" height="15" fill="rgb(216,167,27)"/><text x="336.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 2.21%)</title><rect x="333" y="84" width="26" height="15" fill="rgb(237,163,24)"/><text x="336.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 2.21%)</title><rect x="333" y="100" width="26" height="15" fill="rgb(250,50,35)"/><text x="336.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 2.21%)</title><rect x="333" y="116" width="26" height="15" fill="rgb(219,73,36)"/><text x="336.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 2.21%)</title><rect x="333" y="132" width="26" height="15" fill="rgb(237,91,4)"/><text x="336.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py:7) (9 samples, 1.24%)</title><rect x="344" y="148" width="15" height="15" fill="rgb(253,129,2)"/><text x="347.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.24%)</title><rect x="344" y="164" width="15" height="15" fill="rgb(228,87,0)"/><text x="347.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.24%)</title><rect x="344" y="180" width="15" height="15" fill="rgb(216,147,33)"/><text x="347.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.24%)</title><rect x="344" y="196" width="15" height="15" fill="rgb(242,124,45)"/><text x="347.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.24%)</title><rect x="344" y="212" width="15" height="15" fill="rgb(209,76,9)"/><text x="347.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.24%)</title><rect x="344" y="228" width="15" height="15" fill="rgb(236,3,8)"/><text x="347.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 1.24%)</title><rect x="344" y="244" width="15" height="15" fill="rgb(240,107,43)"/><text x="347.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.24%)</title><rect x="344" y="260" width="15" height="15" fill="rgb(226,184,18)"/><text x="347.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.24%)</title><rect x="344" y="276" width="15" height="15" fill="rgb(236,215,3)"/><text x="347.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.24%)</title><rect x="344" y="292" width="15" height="15" fill="rgb(215,168,45)"/><text x="347.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.24%)</title><rect x="344" y="308" width="15" height="15" fill="rgb(243,132,0)"/><text x="347.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.24%)</title><rect x="344" y="324" width="15" height="15" fill="rgb(245,146,6)"/><text x="347.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.11%)</title><rect x="346" y="340" width="13" height="15" fill="rgb(241,118,36)"/><text x="349.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.11%)</title><rect x="346" y="356" width="13" height="15" fill="rgb(221,153,32)"/><text x="349.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.11%)</title><rect x="346" y="372" width="13" height="15" fill="rgb(246,193,51)"/><text x="349.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.11%)</title><rect x="346" y="388" width="13" height="15" fill="rgb(234,180,15)"/><text x="349.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.11%)</title><rect x="346" y="404" width="13" height="15" fill="rgb(222,220,0)"/><text x="349.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.11%)</title><rect x="346" y="420" width="13" height="15" fill="rgb(233,188,7)"/><text x="349.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.41%)</title><rect x="354" y="436" width="5" height="15" fill="rgb(222,93,4)"/><text x="357.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="452" width="5" height="15" fill="rgb(239,47,21)"/><text x="357.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.41%)</title><rect x="354" y="468" width="5" height="15" fill="rgb(250,42,40)"/><text x="357.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="484" width="5" height="15" fill="rgb(253,210,45)"/><text x="357.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="500" width="5" height="15" fill="rgb(208,207,15)"/><text x="357.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="516" width="5" height="15" fill="rgb(233,94,3)"/><text x="357.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="532" width="5" height="15" fill="rgb(249,149,27)"/><text x="357.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="548" width="5" height="15" fill="rgb(254,64,29)"/><text x="357.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="564" width="5" height="15" fill="rgb(214,216,24)"/><text x="357.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.41%)</title><rect x="354" y="580" width="5" height="15" fill="rgb(220,78,46)"/><text x="357.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="596" width="5" height="15" fill="rgb(231,52,46)"/><text x="357.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="612" width="5" height="15" fill="rgb(243,67,30)"/><text x="357.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="628" width="5" height="15" fill="rgb(235,185,51)"/><text x="357.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="644" width="5" height="15" fill="rgb(231,31,41)"/><text x="357.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="660" width="5" height="15" fill="rgb(209,123,17)"/><text x="357.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.41%)</title><rect x="354" y="676" width="5" height="15" fill="rgb(205,33,12)"/><text x="357.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="692" width="5" height="15" fill="rgb(212,162,28)"/><text x="357.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="708" width="5" height="15" fill="rgb(218,56,32)"/><text x="357.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="724" width="5" height="15" fill="rgb(252,124,13)"/><text x="357.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="740" width="5" height="15" fill="rgb(226,22,22)"/><text x="357.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="756" width="5" height="15" fill="rgb(206,30,44)"/><text x="357.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.41%)</title><rect x="354" y="772" width="5" height="15" fill="rgb(254,227,26)"/><text x="357.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="788" width="5" height="15" fill="rgb(247,145,20)"/><text x="357.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="804" width="5" height="15" fill="rgb(207,152,18)"/><text x="357.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="820" width="5" height="15" fill="rgb(213,178,24)"/><text x="357.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="836" width="5" height="15" fill="rgb(210,217,27)"/><text x="357.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="852" width="5" height="15" fill="rgb(238,14,11)"/><text x="357.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.41%)</title><rect x="354" y="868" width="5" height="15" fill="rgb(238,135,34)"/><text x="357.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="884" width="5" height="15" fill="rgb(209,129,1)"/><text x="357.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.41%)</title><rect x="354" y="900" width="5" height="15" fill="rgb(235,78,9)"/><text x="357.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="916" width="5" height="15" fill="rgb(217,12,8)"/><text x="357.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="932" width="5" height="15" fill="rgb(246,29,42)"/><text x="357.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="948" width="5" height="15" fill="rgb(224,47,33)"/><text x="357.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="964" width="5" height="15" fill="rgb(234,208,34)"/><text x="357.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="980" width="5" height="15" fill="rgb(240,194,10)"/><text x="357.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="996" width="5" height="15" fill="rgb(236,8,52)"/><text x="357.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.41%)</title><rect x="354" y="1012" width="5" height="15" fill="rgb(216,226,0)"/><text x="357.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="1028" width="5" height="15" fill="rgb(245,41,41)"/><text x="357.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="1044" width="5" height="15" fill="rgb(216,44,13)"/><text x="357.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="1060" width="5" height="15" fill="rgb(219,32,40)"/><text x="357.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="1076" width="5" height="15" fill="rgb(238,181,15)"/><text x="357.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1092" width="5" height="15" fill="rgb(213,133,5)"/><text x="357.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.41%)</title><rect x="354" y="1108" width="5" height="15" fill="rgb(235,156,3)"/><text x="357.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.41%)</title><rect x="354" y="1124" width="5" height="15" fill="rgb(222,157,19)"/><text x="357.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1140" width="5" height="15" fill="rgb(230,156,23)"/><text x="357.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="1156" width="5" height="15" fill="rgb(228,136,6)"/><text x="357.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="1172" width="5" height="15" fill="rgb(251,190,3)"/><text x="357.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="1188" width="5" height="15" fill="rgb(244,146,45)"/><text x="357.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="1204" width="5" height="15" fill="rgb(224,14,50)"/><text x="357.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1220" width="5" height="15" fill="rgb(230,90,32)"/><text x="357.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.41%)</title><rect x="354" y="1236" width="5" height="15" fill="rgb(215,143,0)"/><text x="357.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.41%)</title><rect x="354" y="1252" width="5" height="15" fill="rgb(249,209,49)"/><text x="357.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1268" width="5" height="15" fill="rgb(210,94,1)"/><text x="357.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="1284" width="5" height="15" fill="rgb(241,6,11)"/><text x="357.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="1300" width="5" height="15" fill="rgb(217,123,41)"/><text x="357.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="1316" width="5" height="15" fill="rgb(213,170,7)"/><text x="357.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="1332" width="5" height="15" fill="rgb(215,111,24)"/><text x="357.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1348" width="5" height="15" fill="rgb(248,113,22)"/><text x="357.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.41%)</title><rect x="354" y="1364" width="5" height="15" fill="rgb(207,62,15)"/><text x="357.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.41%)</title><rect x="354" y="1380" width="5" height="15" fill="rgb(207,104,43)"/><text x="357.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.41%)</title><rect x="354" y="1396" width="5" height="15" fill="rgb(235,156,33)"/><text x="357.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.41%)</title><rect x="354" y="1412" width="5" height="15" fill="rgb(214,162,27)"/><text x="357.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.41%)</title><rect x="354" y="1428" width="5" height="15" fill="rgb(206,156,40)"/><text x="357.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.41%)</title><rect x="354" y="1444" width="5" height="15" fill="rgb(231,136,44)"/><text x="357.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.14%)</title><rect x="357" y="1460" width="2" height="15" fill="rgb(222,147,37)"/><text x="360.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="357" y="1476" width="2" height="15" fill="rgb(236,57,43)"/><text x="360.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="357" y="1492" width="2" height="15" fill="rgb(245,103,51)"/><text x="360.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="357" y="1508" width="2" height="15" fill="rgb(224,57,11)"/><text x="360.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="357" y="1524" width="2" height="15" fill="rgb(219,88,37)"/><text x="360.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="357" y="1540" width="2" height="15" fill="rgb(252,27,43)"/><text x="360.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.14%)</title><rect x="357" y="1556" width="2" height="15" fill="rgb(237,17,48)"/><text x="360.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.14%)</title><rect x="357" y="1572" width="2" height="15" fill="rgb(249,55,17)"/><text x="360.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.14%)</title><rect x="357" y="1588" width="2" height="15" fill="rgb(211,75,52)"/><text x="360.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.14%)</title><rect x="357" y="1604" width="2" height="15" fill="rgb(210,105,47)"/><text x="360.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.14%)</title><rect x="357" y="1620" width="2" height="15" fill="rgb(222,44,38)"/><text x="360.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.14%)</title><rect x="357" y="1636" width="2" height="15" fill="rgb(207,117,50)"/><text x="360.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.14%)</title><rect x="357" y="1652" width="2" height="15" fill="rgb(217,143,46)"/><text x="360.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.14%)</title><rect x="357" y="1668" width="2" height="15" fill="rgb(215,170,7)"/><text x="360.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.14%)</title><rect x="357" y="1684" width="2" height="15" fill="rgb(211,47,16)"/><text x="360.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.14%)</title><rect x="357" y="1700" width="2" height="15" fill="rgb(230,204,9)"/><text x="360.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.14%)</title><rect x="357" y="1716" width="2" height="15" fill="rgb(211,217,6)"/><text x="360.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:874) (1 samples, 0.14%)</title><rect x="357" y="1732" width="2" height="15" fill="rgb(246,14,43)"/><text x="360.00" y="1742.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.14%)</title><rect x="357" y="1748" width="2" height="15" fill="rgb(238,179,24)"/><text x="360.00" y="1758.50"></text></g><g><title>wrap (jinja2/lexer.py:587) (1 samples, 0.14%)</title><rect x="357" y="1764" width="2" height="15" fill="rgb(221,170,43)"/><text x="360.00" y="1774.50"></text></g><g><title>search_function (encodings/__init__.py:100) (1 samples, 0.14%)</title><rect x="357" y="1780" width="2" height="15" fill="rgb(247,144,6)"/><text x="360.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="357" y="1796" width="2" height="15" fill="rgb(252,15,8)"/><text x="360.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="357" y="1812" width="2" height="15" fill="rgb(240,26,1)"/><text x="360.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="357" y="1828" width="2" height="15" fill="rgb(232,193,31)"/><text x="360.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="357" y="1844" width="2" height="15" fill="rgb(252,63,38)"/><text x="360.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="357" y="1860" width="2" height="15" fill="rgb(221,68,42)"/><text x="360.00" y="1870.50"></text></g><g><title>&lt;module&gt; (encodings/unicode_escape.py:31) (1 samples, 0.14%)</title><rect x="357" y="1876" width="2" height="15" fill="rgb(248,223,17)"/><text x="360.00" y="1886.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="357" y="1892" width="2" height="15" fill="rgb(221,141,16)"/><text x="360.00" y="1902.50"></text></g><g><title>0x7f5ca78788cb (libc-2.29.so) (1 samples, 0.14%)</title><rect x="357" y="1908" width="2" height="15" fill="rgb(207,52,13)"/><text x="360.00" y="1918.50"></text></g><g><title>0x7f5ca787743f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="357" y="1924" width="2" height="15" fill="rgb(254,164,23)"/><text x="360.00" y="1934.50"></text></g><g><title>0x7f5c689e5c29 (?) (1 samples, 0.14%)</title><rect x="359" y="244" width="1" height="15" fill="rgb(246,189,19)"/><text x="362.00" y="254.50"></text></g><g><title>0x7f5c689ecd9e (?) (1 samples, 0.14%)</title><rect x="359" y="260" width="1" height="15" fill="rgb(215,93,25)"/><text x="362.00" y="270.50"></text></g><g><title>0x7f5c689ecc56 (?) (1 samples, 0.14%)</title><rect x="359" y="276" width="1" height="15" fill="rgb(219,41,24)"/><text x="362.00" y="286.50"></text></g><g><title>0x7f5c689f2ac7 (?) (1 samples, 0.14%)</title><rect x="359" y="292" width="1" height="15" fill="rgb(240,117,7)"/><text x="362.00" y="302.50"></text></g><g><title>0x7f5c689f2328 (?) (1 samples, 0.14%)</title><rect x="359" y="308" width="1" height="15" fill="rgb(242,11,10)"/><text x="362.00" y="318.50"></text></g><g><title>0x7f5c689ea225 (?) (1 samples, 0.14%)</title><rect x="359" y="324" width="1" height="15" fill="rgb(206,172,31)"/><text x="362.00" y="334.50"></text></g><g><title>0x7f5c689ea031 (?) (1 samples, 0.14%)</title><rect x="359" y="340" width="1" height="15" fill="rgb(243,162,40)"/><text x="362.00" y="350.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (1 samples, 0.14%)</title><rect x="360" y="452" width="2" height="15" fill="rgb(224,67,21)"/><text x="363.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.14%)</title><rect x="360" y="468" width="2" height="15" fill="rgb(223,226,34)"/><text x="363.00" y="478.50"></text></g><g><title>0x7f5ca7876961 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="360" y="484" width="2" height="15" fill="rgb(218,30,26)"/><text x="363.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.14%)</title><rect x="364" y="468" width="1" height="15" fill="rgb(252,114,36)"/><text x="367.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (1 samples, 0.14%)</title><rect x="365" y="484" width="2" height="15" fill="rgb(236,110,37)"/><text x="368.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (4 samples, 0.55%)</title><rect x="362" y="452" width="7" height="15" fill="rgb(211,49,52)"/><text x="365.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (2 samples, 0.28%)</title><rect x="365" y="468" width="4" height="15" fill="rgb(233,208,12)"/><text x="368.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (1 samples, 0.14%)</title><rect x="367" y="484" width="2" height="15" fill="rgb(242,110,17)"/><text x="370.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (1 samples, 0.14%)</title><rect x="369" y="452" width="1" height="15" fill="rgb(206,121,34)"/><text x="372.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (1 samples, 0.14%)</title><rect x="369" y="468" width="1" height="15" fill="rgb(218,53,35)"/><text x="372.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (1 samples, 0.14%)</title><rect x="369" y="484" width="1" height="15" fill="rgb(240,153,43)"/><text x="372.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.14%)</title><rect x="369" y="500" width="1" height="15" fill="rgb(207,46,9)"/><text x="372.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.14%)</title><rect x="369" y="516" width="1" height="15" fill="rgb(229,19,39)"/><text x="372.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.14%)</title><rect x="369" y="532" width="1" height="15" fill="rgb(225,113,18)"/><text x="372.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.14%)</title><rect x="369" y="548" width="1" height="15" fill="rgb(212,107,6)"/><text x="372.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="369" y="564" width="1" height="15" fill="rgb(223,34,35)"/><text x="372.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="369" y="580" width="1" height="15" fill="rgb(225,203,30)"/><text x="372.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:417) (1 samples, 0.14%)</title><rect x="370" y="452" width="2" height="15" fill="rgb(233,46,1)"/><text x="373.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (1 samples, 0.14%)</title><rect x="372" y="452" width="1" height="15" fill="rgb(229,59,14)"/><text x="375.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.14%)</title><rect x="372" y="468" width="1" height="15" fill="rgb(244,13,7)"/><text x="375.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.14%)</title><rect x="372" y="484" width="1" height="15" fill="rgb(230,111,26)"/><text x="375.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.14%)</title><rect x="372" y="500" width="1" height="15" fill="rgb(230,165,20)"/><text x="375.00" y="510.50"></text></g><g><title>0x7f5ca787691c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="372" y="516" width="1" height="15" fill="rgb(218,161,44)"/><text x="375.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.14%)</title><rect x="373" y="452" width="2" height="15" fill="rgb(231,166,19)"/><text x="376.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.14%)</title><rect x="373" y="468" width="2" height="15" fill="rgb(232,170,20)"/><text x="376.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.14%)</title><rect x="373" y="484" width="2" height="15" fill="rgb(254,60,12)"/><text x="376.00" y="494.50"></text></g><g><title>0x7f5ca79f5ea2 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="373" y="500" width="2" height="15" fill="rgb(214,207,45)"/><text x="376.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.14%)</title><rect x="375" y="452" width="2" height="15" fill="rgb(207,191,27)"/><text x="378.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.14%)</title><rect x="375" y="468" width="2" height="15" fill="rgb(227,160,25)"/><text x="378.00" y="478.50"></text></g><g><title>0x7f5c689d52a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="377" y="516" width="1" height="15" fill="rgb(222,73,54)"/><text x="380.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (2 samples, 0.28%)</title><rect x="377" y="484" width="3" height="15" fill="rgb(222,3,47)"/><text x="380.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.28%)</title><rect x="377" y="500" width="3" height="15" fill="rgb(219,28,42)"/><text x="380.00" y="510.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="378" y="516" width="2" height="15" fill="rgb(249,38,6)"/><text x="381.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:311) (1 samples, 0.14%)</title><rect x="380" y="484" width="2" height="15" fill="rgb(208,30,40)"/><text x="383.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.14%)</title><rect x="382" y="500" width="1" height="15" fill="rgb(206,77,32)"/><text x="385.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.14%)</title><rect x="382" y="516" width="1" height="15" fill="rgb(205,138,9)"/><text x="385.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.14%)</title><rect x="382" y="532" width="1" height="15" fill="rgb(254,227,21)"/><text x="385.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.14%)</title><rect x="382" y="548" width="1" height="15" fill="rgb(227,160,12)"/><text x="385.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="382" y="564" width="1" height="15" fill="rgb(245,86,36)"/><text x="385.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="382" y="580" width="1" height="15" fill="rgb(228,7,31)"/><text x="385.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (2 samples, 0.28%)</title><rect x="382" y="484" width="3" height="15" fill="rgb(237,170,5)"/><text x="385.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.14%)</title><rect x="383" y="500" width="2" height="15" fill="rgb(217,63,54)"/><text x="386.00" y="510.50"></text></g><g><title>0x7f5ca7876929 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="383" y="516" width="2" height="15" fill="rgb(243,207,13)"/><text x="386.00" y="526.50"></text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (18 samples, 2.49%)</title><rect x="359" y="100" width="29" height="15" fill="rgb(213,63,40)"/><text x="362.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (18 samples, 2.49%)</title><rect x="359" y="116" width="29" height="15" fill="rgb(237,108,23)"/><text x="362.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (18 samples, 2.49%)</title><rect x="359" y="132" width="29" height="15" fill="rgb(227,193,17)"/><text x="362.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (18 samples, 2.49%)</title><rect x="359" y="148" width="29" height="15" fill="rgb(244,88,31)"/><text x="362.00" y="158.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (18 samples, 2.49%)</title><rect x="359" y="164" width="29" height="15" fill="rgb(239,128,36)"/><text x="362.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (18 samples, 2.49%)</title><rect x="359" y="180" width="29" height="15" fill="rgb(219,131,44)"/><text x="362.00" y="190.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 2.49%)</title><rect x="359" y="196" width="29" height="15" fill="rgb(215,38,7)"/><text x="362.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 2.49%)</title><rect x="359" y="212" width="29" height="15" fill="rgb(212,140,46)"/><text x="362.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (18 samples, 2.49%)</title><rect x="359" y="228" width="29" height="15" fill="rgb(225,49,45)"/><text x="362.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (17 samples, 2.35%)</title><rect x="360" y="244" width="28" height="15" fill="rgb(210,29,35)"/><text x="363.00" y="254.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (17 samples, 2.35%)</title><rect x="360" y="260" width="28" height="15" fill="rgb(235,65,1)"/><text x="363.00" y="270.50">v..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 2.35%)</title><rect x="360" y="276" width="28" height="15" fill="rgb(232,16,49)"/><text x="363.00" y="286.50">v..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 2.35%)</title><rect x="360" y="292" width="28" height="15" fill="rgb(224,169,42)"/><text x="363.00" y="302.50">p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 2.35%)</title><rect x="360" y="308" width="28" height="15" fill="rgb(240,163,29)"/><text x="363.00" y="318.50">p..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 2.35%)</title><rect x="360" y="324" width="28" height="15" fill="rgb(213,7,6)"/><text x="363.00" y="334.50">p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 2.35%)</title><rect x="360" y="340" width="28" height="15" fill="rgb(240,96,41)"/><text x="363.00" y="350.50">p..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 2.35%)</title><rect x="360" y="356" width="28" height="15" fill="rgb(206,60,44)"/><text x="363.00" y="366.50">p..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 2.35%)</title><rect x="360" y="372" width="28" height="15" fill="rgb(229,111,39)"/><text x="363.00" y="382.50">p..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 2.35%)</title><rect x="360" y="388" width="28" height="15" fill="rgb(242,35,35)"/><text x="363.00" y="398.50">p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 2.35%)</title><rect x="360" y="404" width="28" height="15" fill="rgb(230,173,53)"/><text x="363.00" y="414.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (17 samples, 2.35%)</title><rect x="360" y="420" width="28" height="15" fill="rgb(217,74,54)"/><text x="363.00" y="430.50">R..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (17 samples, 2.35%)</title><rect x="360" y="436" width="28" height="15" fill="rgb(222,191,32)"/><text x="363.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (7 samples, 0.97%)</title><rect x="377" y="452" width="11" height="15" fill="rgb(250,37,32)"/><text x="380.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (7 samples, 0.97%)</title><rect x="377" y="468" width="11" height="15" fill="rgb(229,78,7)"/><text x="380.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (2 samples, 0.28%)</title><rect x="385" y="484" width="3" height="15" fill="rgb(239,122,20)"/><text x="388.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.14%)</title><rect x="388" y="180" width="2" height="15" fill="rgb(216,152,1)"/><text x="391.00" y="190.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.14%)</title><rect x="390" y="244" width="1" height="15" fill="rgb(251,40,28)"/><text x="393.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.14%)</title><rect x="390" y="260" width="1" height="15" fill="rgb(228,65,6)"/><text x="393.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.14%)</title><rect x="390" y="276" width="1" height="15" fill="rgb(214,203,32)"/><text x="393.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.14%)</title><rect x="390" y="292" width="1" height="15" fill="rgb(230,133,51)"/><text x="393.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.14%)</title><rect x="390" y="308" width="1" height="15" fill="rgb(217,33,52)"/><text x="393.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.14%)</title><rect x="390" y="324" width="1" height="15" fill="rgb(212,210,42)"/><text x="393.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.14%)</title><rect x="390" y="340" width="1" height="15" fill="rgb(234,18,30)"/><text x="393.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.14%)</title><rect x="390" y="356" width="1" height="15" fill="rgb(214,141,17)"/><text x="393.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="390" y="372" width="1" height="15" fill="rgb(218,125,3)"/><text x="393.00" y="382.50"></text></g><g><title>0x7f5ca7878028 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="390" y="388" width="1" height="15" fill="rgb(210,141,22)"/><text x="393.00" y="398.50"></text></g><g><title>0x7f5ca7875bc6 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="390" y="404" width="1" height="15" fill="rgb(249,139,34)"/><text x="393.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.28%)</title><rect x="390" y="212" width="3" height="15" fill="rgb(221,157,20)"/><text x="393.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.28%)</title><rect x="390" y="228" width="3" height="15" fill="rgb(249,197,18)"/><text x="393.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.14%)</title><rect x="391" y="244" width="2" height="15" fill="rgb(244,15,36)"/><text x="394.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.14%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(228,209,18)"/><text x="394.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.14%)</title><rect x="391" y="276" width="2" height="15" fill="rgb(220,114,41)"/><text x="394.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="391" y="292" width="2" height="15" fill="rgb(206,108,23)"/><text x="394.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.41%)</title><rect x="390" y="196" width="5" height="15" fill="rgb(233,82,22)"/><text x="393.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.14%)</title><rect x="393" y="212" width="2" height="15" fill="rgb(245,213,44)"/><text x="396.00" y="222.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (1 samples, 0.14%)</title><rect x="395" y="452" width="1" height="15" fill="rgb(249,70,28)"/><text x="398.00" y="462.50"></text></g><g><title>0x7f5ca787697c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="395" y="468" width="1" height="15" fill="rgb(226,39,10)"/><text x="398.00" y="478.50"></text></g><g><title>0x7f5ca7876971 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="396" y="484" width="2" height="15" fill="rgb(246,47,2)"/><text x="399.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (2 samples, 0.28%)</title><rect x="396" y="452" width="4" height="15" fill="rgb(220,179,19)"/><text x="399.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.28%)</title><rect x="396" y="468" width="4" height="15" fill="rgb(211,92,20)"/><text x="399.00" y="478.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="398" y="484" width="2" height="15" fill="rgb(250,99,30)"/><text x="401.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:391) (1 samples, 0.14%)</title><rect x="400" y="452" width="1" height="15" fill="rgb(219,63,52)"/><text x="403.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.14%)</title><rect x="400" y="468" width="1" height="15" fill="rgb(223,73,51)"/><text x="403.00" y="478.50"></text></g><g><title>0x7f5c689d5810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="408" y="468" width="1" height="15" fill="rgb(247,71,51)"/><text x="411.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1425) (1 samples, 0.14%)</title><rect x="409" y="484" width="2" height="15" fill="rgb(225,192,35)"/><text x="412.00" y="494.50"></text></g><g><title>std::max&lt;unsigned long&gt; (stl_algobase.h:224) (1 samples, 0.14%)</title><rect x="409" y="500" width="2" height="15" fill="rgb(221,20,16)"/><text x="412.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (2 samples, 0.28%)</title><rect x="409" y="468" width="4" height="15" fill="rgb(206,90,18)"/><text x="412.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.14%)</title><rect x="411" y="484" width="2" height="15" fill="rgb(228,46,40)"/><text x="414.00" y="494.50"></text></g><g><title>0x7f5c97342d50 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="416" y="548" width="2" height="15" fill="rgb(239,169,53)"/><text x="419.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (9 samples, 1.24%)</title><rect x="413" y="468" width="14" height="15" fill="rgb(209,178,12)"/><text x="416.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (9 samples, 1.24%)</title><rect x="413" y="484" width="14" height="15" fill="rgb(215,19,44)"/><text x="416.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (8 samples, 1.11%)</title><rect x="414" y="500" width="13" height="15" fill="rgb(210,228,24)"/><text x="417.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (8 samples, 1.11%)</title><rect x="414" y="516" width="13" height="15" fill="rgb(240,173,9)"/><text x="417.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.11%)</title><rect x="414" y="532" width="13" height="15" fill="rgb(252,50,3)"/><text x="417.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.83%)</title><rect x="418" y="548" width="9" height="15" fill="rgb(233,219,15)"/><text x="421.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.14%)</title><rect x="427" y="468" width="2" height="15" fill="rgb(211,222,33)"/><text x="430.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.14%)</title><rect x="427" y="484" width="2" height="15" fill="rgb(220,20,52)"/><text x="430.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.14%)</title><rect x="427" y="500" width="2" height="15" fill="rgb(249,126,24)"/><text x="430.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.14%)</title><rect x="427" y="516" width="2" height="15" fill="rgb(227,38,30)"/><text x="430.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.14%)</title><rect x="427" y="532" width="2" height="15" fill="rgb(226,68,20)"/><text x="430.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.14%)</title><rect x="427" y="548" width="2" height="15" fill="rgb(240,0,26)"/><text x="430.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.14%)</title><rect x="427" y="564" width="2" height="15" fill="rgb(224,111,28)"/><text x="430.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.14%)</title><rect x="427" y="580" width="2" height="15" fill="rgb(210,215,20)"/><text x="430.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.14%)</title><rect x="427" y="596" width="2" height="15" fill="rgb(229,62,47)"/><text x="430.00" y="606.50"></text></g><g><title>0x7f5ca7896d50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="429" y="484" width="2" height="15" fill="rgb(232,112,26)"/><text x="432.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (2 samples, 0.28%)</title><rect x="429" y="468" width="3" height="15" fill="rgb(210,50,11)"/><text x="432.00" y="478.50"></text></g><g><title>0x7f5ca7896d97 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="431" y="484" width="1" height="15" fill="rgb(233,16,50)"/><text x="434.00" y="494.50"></text></g><g><title>0x7f5c973437a0 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="432" y="484" width="2" height="15" fill="rgb(217,9,16)"/><text x="435.00" y="494.50"></text></g><g><title>0x7f5ca7876938 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="434" y="484" width="1" height="15" fill="rgb(210,42,4)"/><text x="437.00" y="494.50"></text></g><g><title>0x7f5ca7876945 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="435" y="484" width="2" height="15" fill="rgb(227,165,43)"/><text x="438.00" y="494.50"></text></g><g><title>0x7f5ca787694f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="437" y="484" width="2" height="15" fill="rgb(228,229,16)"/><text x="440.00" y="494.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="439" y="484" width="3" height="15" fill="rgb(231,78,16)"/><text x="442.00" y="494.50"></text></g><g><title>0x7f5ca7876a53 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="442" y="484" width="2" height="15" fill="rgb(219,167,6)"/><text x="445.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 1.11%)</title><rect x="432" y="468" width="13" height="15" fill="rgb(211,51,39)"/><text x="435.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.14%)</title><rect x="444" y="484" width="1" height="15" fill="rgb(214,167,11)"/><text x="447.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (29 samples, 4.01%)</title><rect x="401" y="452" width="48" height="15" fill="rgb(230,71,2)"/><text x="404.00" y="462.50">Runt..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (2 samples, 0.28%)</title><rect x="445" y="468" width="4" height="15" fill="rgb(252,138,54)"/><text x="448.00" y="478.50"></text></g><g><title>0x7f5c689d5440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.28%)</title><rect x="457" y="468" width="3" height="15" fill="rgb(238,154,30)"/><text x="460.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (1 samples, 0.14%)</title><rect x="460" y="468" width="2" height="15" fill="rgb(220,120,36)"/><text x="463.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.14%)</title><rect x="462" y="468" width="1" height="15" fill="rgb(212,88,49)"/><text x="465.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (3 samples, 0.41%)</title><rect x="463" y="468" width="5" height="15" fill="rgb(207,125,5)"/><text x="466.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:297) (1 samples, 0.14%)</title><rect x="468" y="468" width="2" height="15" fill="rgb(207,61,48)"/><text x="471.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:298) (1 samples, 0.14%)</title><rect x="470" y="468" width="1" height="15" fill="rgb(226,12,45)"/><text x="473.00" y="478.50"></text></g><g><title>0x7f5c689d4e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="471" y="484" width="2" height="15" fill="rgb(235,43,16)"/><text x="474.00" y="494.50"></text></g><g><title>0x7f5c689d52b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="473" y="484" width="5" height="15" fill="rgb(205,74,0)"/><text x="476.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (5 samples, 0.69%)</title><rect x="478" y="484" width="8" height="15" fill="rgb(212,191,21)"/><text x="481.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:49) (2 samples, 0.28%)</title><rect x="486" y="484" width="3" height="15" fill="rgb(254,84,37)"/><text x="489.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:50) (1 samples, 0.14%)</title><rect x="489" y="484" width="2" height="15" fill="rgb(242,122,10)"/><text x="492.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (18 samples, 2.49%)</title><rect x="491" y="484" width="29" height="15" fill="rgb(207,11,44)"/><text x="494.00" y="494.50">ve..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (11 samples, 1.52%)</title><rect x="520" y="484" width="18" height="15" fill="rgb(244,0,34)"/><text x="523.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (5 samples, 0.69%)</title><rect x="538" y="484" width="8" height="15" fill="rgb(217,19,48)"/><text x="541.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (63 samples, 8.71%)</title><rect x="449" y="452" width="102" height="15" fill="rgb(242,148,19)"/><text x="452.00" y="462.50">RuntimeSVMCl..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (49 samples, 6.78%)</title><rect x="471" y="468" width="80" height="15" fill="rgb(241,183,5)"/><text x="474.00" y="478.50">RuntimeSV..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:116) (3 samples, 0.41%)</title><rect x="546" y="484" width="5" height="15" fill="rgb(238,83,12)"/><text x="549.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:409) (2 samples, 0.28%)</title><rect x="551" y="452" width="4" height="15" fill="rgb(226,229,51)"/><text x="554.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (1 samples, 0.14%)</title><rect x="555" y="468" width="1" height="15" fill="rgb(233,106,13)"/><text x="558.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (4 samples, 0.55%)</title><rect x="555" y="452" width="6" height="15" fill="rgb(214,51,41)"/><text x="558.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:924) (3 samples, 0.41%)</title><rect x="556" y="468" width="5" height="15" fill="rgb(220,51,15)"/><text x="559.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (3 samples, 0.41%)</title><rect x="561" y="452" width="5" height="15" fill="rgb(233,196,3)"/><text x="564.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (3 samples, 0.41%)</title><rect x="561" y="468" width="5" height="15" fill="rgb(248,220,7)"/><text x="564.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (3 samples, 0.41%)</title><rect x="561" y="484" width="5" height="15" fill="rgb(247,204,2)"/><text x="564.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (2 samples, 0.28%)</title><rect x="563" y="500" width="3" height="15" fill="rgb(209,226,18)"/><text x="566.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.28%)</title><rect x="563" y="516" width="3" height="15" fill="rgb(228,123,31)"/><text x="566.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.28%)</title><rect x="563" y="532" width="3" height="15" fill="rgb(251,111,53)"/><text x="566.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (2 samples, 0.28%)</title><rect x="563" y="548" width="3" height="15" fill="rgb(217,104,18)"/><text x="566.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.28%)</title><rect x="563" y="564" width="3" height="15" fill="rgb(250,75,29)"/><text x="566.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.28%)</title><rect x="563" y="580" width="3" height="15" fill="rgb(213,24,9)"/><text x="566.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:414) (1 samples, 0.14%)</title><rect x="566" y="452" width="2" height="15" fill="rgb(240,177,29)"/><text x="569.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (6 samples, 0.83%)</title><rect x="568" y="452" width="9" height="15" fill="rgb(209,214,42)"/><text x="571.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:430) (1 samples, 0.14%)</title><rect x="577" y="452" width="2" height="15" fill="rgb(226,214,21)"/><text x="580.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::operator[] (stl_vector.h:781) (1 samples, 0.14%)</title><rect x="577" y="468" width="2" height="15" fill="rgb(234,224,24)"/><text x="580.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (7 samples, 0.97%)</title><rect x="579" y="452" width="12" height="15" fill="rgb(224,197,50)"/><text x="582.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.14%)</title><rect x="591" y="500" width="1" height="15" fill="rgb(234,226,34)"/><text x="594.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.14%)</title><rect x="591" y="516" width="1" height="15" fill="rgb(219,44,52)"/><text x="594.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.14%)</title><rect x="591" y="532" width="1" height="15" fill="rgb(244,115,54)"/><text x="594.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.14%)</title><rect x="591" y="548" width="1" height="15" fill="rgb(215,163,24)"/><text x="594.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="591" y="564" width="1" height="15" fill="rgb(251,125,3)"/><text x="594.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="591" y="580" width="1" height="15" fill="rgb(207,202,12)"/><text x="594.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.14%)</title><rect x="592" y="500" width="2" height="15" fill="rgb(249,14,37)"/><text x="595.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.14%)</title><rect x="592" y="516" width="2" height="15" fill="rgb(212,153,7)"/><text x="595.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.14%)</title><rect x="592" y="532" width="2" height="15" fill="rgb(209,69,34)"/><text x="595.00" y="542.50"></text></g><g><title>0x7f5ca7876a55 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="594" y="516" width="1" height="15" fill="rgb(252,149,30)"/><text x="597.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.28%)</title><rect x="594" y="500" width="3" height="15" fill="rgb(230,79,29)"/><text x="597.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.14%)</title><rect x="595" y="516" width="2" height="15" fill="rgb(230,63,18)"/><text x="598.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:443) (1 samples, 0.14%)</title><rect x="597" y="500" width="2" height="15" fill="rgb(222,175,36)"/><text x="600.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (6 samples, 0.83%)</title><rect x="591" y="484" width="9" height="15" fill="rgb(248,61,42)"/><text x="594.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.14%)</title><rect x="599" y="500" width="1" height="15" fill="rgb(224,56,10)"/><text x="602.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (8 samples, 1.11%)</title><rect x="591" y="452" width="13" height="15" fill="rgb(228,207,44)"/><text x="594.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (8 samples, 1.11%)</title><rect x="591" y="468" width="13" height="15" fill="rgb(223,10,9)"/><text x="594.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (2 samples, 0.28%)</title><rect x="600" y="484" width="4" height="15" fill="rgb(228,91,16)"/><text x="603.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.14%)</title><rect x="604" y="452" width="1" height="15" fill="rgb(210,195,22)"/><text x="607.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.14%)</title><rect x="605" y="468" width="2" height="15" fill="rgb(214,199,41)"/><text x="608.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.14%)</title><rect x="605" y="484" width="2" height="15" fill="rgb(222,130,32)"/><text x="608.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.14%)</title><rect x="605" y="500" width="2" height="15" fill="rgb(248,81,24)"/><text x="608.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="605" y="516" width="2" height="15" fill="rgb(251,134,33)"/><text x="608.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="605" y="532" width="2" height="15" fill="rgb(252,70,49)"/><text x="608.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.14%)</title><rect x="607" y="468" width="1" height="15" fill="rgb(254,119,11)"/><text x="610.00" y="478.50"></text></g><g><title>0x7f5ca7876a53 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="607" y="484" width="1" height="15" fill="rgb(232,186,9)"/><text x="610.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (4 samples, 0.55%)</title><rect x="605" y="452" width="7" height="15" fill="rgb(243,125,23)"/><text x="608.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (2 samples, 0.28%)</title><rect x="608" y="468" width="4" height="15" fill="rgb(231,148,13)"/><text x="611.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (2 samples, 0.28%)</title><rect x="608" y="484" width="4" height="15" fill="rgb(210,151,30)"/><text x="611.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (2 samples, 0.28%)</title><rect x="608" y="500" width="4" height="15" fill="rgb(210,159,11)"/><text x="611.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (2 samples, 0.28%)</title><rect x="608" y="516" width="4" height="15" fill="rgb(237,4,12)"/><text x="611.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (2 samples, 0.28%)</title><rect x="608" y="532" width="4" height="15" fill="rgb(231,97,44)"/><text x="611.00" y="542.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.28%)</title><rect x="608" y="548" width="4" height="15" fill="rgb(216,84,52)"/><text x="611.00" y="558.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:185) (1 samples, 0.14%)</title><rect x="612" y="500" width="1" height="15" fill="rgb(225,75,37)"/><text x="615.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.14%)</title><rect x="612" y="516" width="1" height="15" fill="rgb(247,139,9)"/><text x="615.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.14%)</title><rect x="612" y="532" width="1" height="15" fill="rgb(228,42,43)"/><text x="615.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.14%)</title><rect x="612" y="548" width="1" height="15" fill="rgb(221,192,3)"/><text x="615.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (4 samples, 0.55%)</title><rect x="612" y="452" width="6" height="15" fill="rgb(216,161,37)"/><text x="615.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (4 samples, 0.55%)</title><rect x="612" y="468" width="6" height="15" fill="rgb(227,190,3)"/><text x="615.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (4 samples, 0.55%)</title><rect x="612" y="484" width="6" height="15" fill="rgb(247,88,39)"/><text x="615.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (3 samples, 0.41%)</title><rect x="613" y="500" width="5" height="15" fill="rgb(246,152,46)"/><text x="616.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.41%)</title><rect x="613" y="516" width="5" height="15" fill="rgb(216,16,18)"/><text x="616.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.28%)</title><rect x="615" y="532" width="3" height="15" fill="rgb(220,139,28)"/><text x="618.00" y="542.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:102) (2 samples, 0.28%)</title><rect x="618" y="468" width="4" height="15" fill="rgb(217,116,45)"/><text x="621.00" y="478.50"></text></g><g><title>0x7f5ca79f5e57 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="625" y="500" width="1" height="15" fill="rgb(235,57,42)"/><text x="628.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (7 samples, 0.97%)</title><rect x="618" y="452" width="12" height="15" fill="rgb(241,164,33)"/><text x="621.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (5 samples, 0.69%)</title><rect x="622" y="468" width="8" height="15" fill="rgb(251,39,12)"/><text x="625.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (5 samples, 0.69%)</title><rect x="622" y="484" width="8" height="15" fill="rgb(247,25,19)"/><text x="625.00" y="494.50"></text></g><g><title>0x7f5ca79f5e96 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="626" y="500" width="4" height="15" fill="rgb(234,132,32)"/><text x="629.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:456) (1 samples, 0.14%)</title><rect x="630" y="452" width="1" height="15" fill="rgb(239,6,27)"/><text x="633.00" y="462.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:308) (1 samples, 0.14%)</title><rect x="631" y="484" width="2" height="15" fill="rgb(247,228,50)"/><text x="634.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.14%)</title><rect x="631" y="500" width="2" height="15" fill="rgb(205,212,43)"/><text x="634.00" y="510.50"></text></g><g><title>0x7f5ca7876957 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="631" y="516" width="2" height="15" fill="rgb(210,163,10)"/><text x="634.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (2 samples, 0.28%)</title><rect x="633" y="500" width="3" height="15" fill="rgb(226,60,12)"/><text x="636.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.14%)</title><rect x="636" y="500" width="2" height="15" fill="rgb(207,46,38)"/><text x="639.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.14%)</title><rect x="636" y="516" width="2" height="15" fill="rgb(213,66,48)"/><text x="639.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.14%)</title><rect x="636" y="532" width="2" height="15" fill="rgb(251,125,6)"/><text x="639.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (5 samples, 0.69%)</title><rect x="638" y="500" width="8" height="15" fill="rgb(230,74,3)"/><text x="641.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (5 samples, 0.69%)</title><rect x="638" y="516" width="8" height="15" fill="rgb(246,89,3)"/><text x="641.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (4 samples, 0.55%)</title><rect x="639" y="532" width="7" height="15" fill="rgb(245,172,35)"/><text x="642.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (4 samples, 0.55%)</title><rect x="639" y="548" width="7" height="15" fill="rgb(205,80,46)"/><text x="642.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.41%)</title><rect x="641" y="564" width="5" height="15" fill="rgb(252,69,43)"/><text x="644.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.41%)</title><rect x="641" y="580" width="5" height="15" fill="rgb(238,6,8)"/><text x="644.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.14%)</title><rect x="646" y="500" width="2" height="15" fill="rgb(227,94,43)"/><text x="649.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.14%)</title><rect x="646" y="516" width="2" height="15" fill="rgb(244,99,8)"/><text x="649.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.14%)</title><rect x="646" y="532" width="2" height="15" fill="rgb(216,223,52)"/><text x="649.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.14%)</title><rect x="646" y="548" width="2" height="15" fill="rgb(217,180,43)"/><text x="649.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.14%)</title><rect x="646" y="564" width="2" height="15" fill="rgb(238,40,27)"/><text x="649.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.14%)</title><rect x="646" y="580" width="2" height="15" fill="rgb(240,92,10)"/><text x="649.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.14%)</title><rect x="646" y="596" width="2" height="15" fill="rgb(252,226,12)"/><text x="649.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.14%)</title><rect x="646" y="612" width="2" height="15" fill="rgb(214,89,7)"/><text x="649.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.14%)</title><rect x="646" y="628" width="2" height="15" fill="rgb(216,101,34)"/><text x="649.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.14%)</title><rect x="648" y="500" width="1" height="15" fill="rgb(234,159,42)"/><text x="651.00" y="510.50"></text></g><g><title>0x7f5c973437a0 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="649" y="516" width="2" height="15" fill="rgb(216,104,21)"/><text x="652.00" y="526.50"></text></g><g><title>0x7f5ca7876906 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="651" y="516" width="2" height="15" fill="rgb(231,61,10)"/><text x="654.00" y="526.50"></text></g><g><title>0x7f5ca787691c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="653" y="516" width="1" height="15" fill="rgb(212,7,24)"/><text x="656.00" y="526.50"></text></g><g><title>0x7f5ca7876929 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="654" y="516" width="2" height="15" fill="rgb(230,119,5)"/><text x="657.00" y="526.50"></text></g><g><title>0x7f5ca787697c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="656" y="516" width="1" height="15" fill="rgb(234,200,10)"/><text x="659.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (7 samples, 0.97%)</title><rect x="649" y="500" width="12" height="15" fill="rgb(241,70,17)"/><text x="652.00" y="510.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="657" y="516" width="4" height="15" fill="rgb(233,100,27)"/><text x="660.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (18 samples, 2.49%)</title><rect x="633" y="484" width="29" height="15" fill="rgb(250,229,41)"/><text x="636.00" y="494.50">mu..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.14%)</title><rect x="661" y="500" width="1" height="15" fill="rgb(215,183,21)"/><text x="664.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (2 samples, 0.28%)</title><rect x="662" y="500" width="4" height="15" fill="rgb(254,84,54)"/><text x="665.00" y="510.50"></text></g><g><title>0x7f5c97342d50 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="666" y="580" width="1" height="15" fill="rgb(230,52,17)"/><text x="669.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (6 samples, 0.83%)</title><rect x="666" y="500" width="9" height="15" fill="rgb(221,135,23)"/><text x="669.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (6 samples, 0.83%)</title><rect x="666" y="516" width="9" height="15" fill="rgb(234,165,29)"/><text x="669.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (6 samples, 0.83%)</title><rect x="666" y="532" width="9" height="15" fill="rgb(230,1,35)"/><text x="669.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (6 samples, 0.83%)</title><rect x="666" y="548" width="9" height="15" fill="rgb(242,117,53)"/><text x="669.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.83%)</title><rect x="666" y="564" width="9" height="15" fill="rgb(219,0,0)"/><text x="669.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.69%)</title><rect x="667" y="580" width="8" height="15" fill="rgb(226,16,29)"/><text x="670.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.14%)</title><rect x="675" y="500" width="2" height="15" fill="rgb(209,174,33)"/><text x="678.00" y="510.50"></text></g><g><title>0x7f5ca7896d50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="675" y="516" width="2" height="15" fill="rgb(244,55,20)"/><text x="678.00" y="526.50"></text></g><g><title>0x7f5ca7876998 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="677" y="516" width="2" height="15" fill="rgb(239,146,1)"/><text x="680.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.28%)</title><rect x="677" y="500" width="3" height="15" fill="rgb(206,168,24)"/><text x="680.00" y="510.50"></text></g><g><title>0x7f5ca7876a41 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="679" y="516" width="1" height="15" fill="rgb(249,191,12)"/><text x="682.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:442) (1 samples, 0.14%)</title><rect x="680" y="500" width="2" height="15" fill="rgb(230,115,25)"/><text x="683.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (13 samples, 1.80%)</title><rect x="662" y="484" width="22" height="15" fill="rgb(219,41,10)"/><text x="665.00" y="494.50">m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:443) (1 samples, 0.14%)</title><rect x="682" y="500" width="2" height="15" fill="rgb(209,147,43)"/><text x="685.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:314) (2 samples, 0.28%)</title><rect x="684" y="484" width="3" height="15" fill="rgb(242,132,16)"/><text x="687.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.14%)</title><rect x="685" y="500" width="2" height="15" fill="rgb(253,146,19)"/><text x="688.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.14%)</title><rect x="685" y="516" width="2" height="15" fill="rgb(238,142,15)"/><text x="688.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:324) (1 samples, 0.14%)</title><rect x="687" y="484" width="1" height="15" fill="rgb(250,116,46)"/><text x="690.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (1 samples, 0.14%)</title><rect x="688" y="484" width="2" height="15" fill="rgb(246,182,31)"/><text x="691.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (4 samples, 0.55%)</title><rect x="690" y="484" width="7" height="15" fill="rgb(207,193,24)"/><text x="693.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:334) (3 samples, 0.41%)</title><rect x="697" y="484" width="5" height="15" fill="rgb(242,120,8)"/><text x="700.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (2 samples, 0.28%)</title><rect x="702" y="484" width="3" height="15" fill="rgb(251,69,41)"/><text x="705.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:348) (1 samples, 0.14%)</title><rect x="705" y="484" width="1" height="15" fill="rgb(253,91,19)"/><text x="708.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (2 samples, 0.28%)</title><rect x="706" y="484" width="4" height="15" fill="rgb(242,94,5)"/><text x="709.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:350) (1 samples, 0.14%)</title><rect x="710" y="484" width="1" height="15" fill="rgb(253,93,33)"/><text x="713.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (18 samples, 2.49%)</title><rect x="711" y="484" width="30" height="15" fill="rgb(248,8,27)"/><text x="714.00" y="494.50">mu..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (71 samples, 9.82%)</title><rect x="631" y="452" width="116" height="15" fill="rgb(227,62,36)"/><text x="634.00" y="462.50">RuntimeSVMClas..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (71 samples, 9.82%)</title><rect x="631" y="468" width="116" height="15" fill="rgb(243,0,22)"/><text x="634.00" y="478.50">std::vector&lt;fl..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (4 samples, 0.55%)</title><rect x="741" y="484" width="6" height="15" fill="rgb(246,60,19)"/><text x="744.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:464) (1 samples, 0.14%)</title><rect x="747" y="452" width="2" height="15" fill="rgb(232,219,3)"/><text x="750.00" y="462.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt; (stl_algobase.h:456) (1 samples, 0.14%)</title><rect x="747" y="468" width="2" height="15" fill="rgb(218,157,47)"/><text x="750.00" y="478.50"></text></g><g><title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt; (stl_algobase.h:422) (1 samples, 0.14%)</title><rect x="747" y="484" width="2" height="15" fill="rgb(229,126,16)"/><text x="750.00" y="494.50"></text></g><g><title>std::__copy_move_a&lt;false, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.14%)</title><rect x="747" y="500" width="2" height="15" fill="rgb(219,105,29)"/><text x="750.00" y="510.50"></text></g><g><title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.14%)</title><rect x="747" y="516" width="2" height="15" fill="rgb(236,116,10)"/><text x="750.00" y="526.50"></text></g><g><title>0x7f5c689d56c0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="747" y="532" width="2" height="15" fill="rgb(224,132,34)"/><text x="750.00" y="542.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (223 samples, 30.84%)</title><rect x="388" y="164" width="364" height="15" fill="rgb(212,56,17)"/><text x="391.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (222 samples, 30.71%)</title><rect x="390" y="180" width="362" height="15" fill="rgb(205,45,44)"/><text x="393.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (219 samples, 30.29%)</title><rect x="395" y="196" width="357" height="15" fill="rgb(229,108,15)"/><text x="398.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (219 samples, 30.29%)</title><rect x="395" y="212" width="357" height="15" fill="rgb(241,198,48)"/><text x="398.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (219 samples, 30.29%)</title><rect x="395" y="228" width="357" height="15" fill="rgb(211,144,32)"/><text x="398.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (219 samples, 30.29%)</title><rect x="395" y="244" width="357" height="15" fill="rgb(245,185,23)"/><text x="398.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h:6..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (219 samples, 30.29%)</title><rect x="395" y="260" width="357" height="15" fill="rgb(205,190,0)"/><text x="398.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (219 samples, 30.29%)</title><rect x="395" y="276" width="357" height="15" fill="rgb(228,224,5)"/><text x="398.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (219 samples, 30.29%)</title><rect x="395" y="292" width="357" height="15" fill="rgb(251,174,40)"/><text x="398.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClas..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (219 samples, 30.29%)</title><rect x="395" y="308" width="357" height="15" fill="rgb(242,0,44)"/><text x="398.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClas..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (219 samples, 30.29%)</title><rect x="395" y="324" width="357" height="15" fill="rgb(224,42,48)"/><text x="398.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::t..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (219 samples, 30.29%)</title><rect x="395" y="340" width="357" height="15" fill="rgb(217,95,45)"/><text x="398.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (219 samples, 30.29%)</title><rect x="395" y="356" width="357" height="15" fill="rgb(216,74,44)"/><text x="398.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (219 samples, 30.29%)</title><rect x="395" y="372" width="357" height="15" fill="rgb(248,34,53)"/><text x="398.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (219 samples, 30.29%)</title><rect x="395" y="388" width="357" height="15" fill="rgb(238,34,23)"/><text x="398.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (219 samples, 30.29%)</title><rect x="395" y="404" width="357" height="15" fill="rgb(215,28,51)"/><text x="398.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (219 samples, 30.29%)</title><rect x="395" y="420" width="357" height="15" fill="rgb(215,134,54)"/><text x="398.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (219 samples, 30.29%)</title><rect x="395" y="436" width="357" height="15" fill="rgb(232,51,2)"/><text x="398.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_releas..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:469) (2 samples, 0.28%)</title><rect x="749" y="452" width="3" height="15" fill="rgb(234,38,39)"/><text x="752.00" y="462.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h:5549) (2 samples, 0.28%)</title><rect x="749" y="468" width="3" height="15" fill="rgb(223,68,23)"/><text x="752.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h:5524) (2 samples, 0.28%)</title><rect x="749" y="484" width="3" height="15" fill="rgb(225,51,9)"/><text x="752.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:45) (242 samples, 33.47%)</title><rect x="359" y="52" width="395" height="15" fill="rgb(252,56,21)"/><text x="362.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kerne..</text></g><g><title>profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:44) (242 samples, 33.47%)</title><rect x="359" y="68" width="395" height="15" fill="rgb(206,208,38)"/><text x="362.00" y="78.50">profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_k..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (242 samples, 33.47%)</title><rect x="359" y="84" width="395" height="15" fill="rgb(222,83,47)"/><text x="362.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue_..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (224 samples, 30.98%)</title><rect x="388" y="100" width="366" height="15" fill="rgb(248,76,15)"/><text x="391.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_ke..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (224 samples, 30.98%)</title><rect x="388" y="116" width="366" height="15" fill="rgb(218,120,16)"/><text x="391.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (224 samples, 30.98%)</title><rect x="388" y="132" width="366" height="15" fill="rgb(241,152,41)"/><text x="391.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (224 samples, 30.98%)</title><rect x="388" y="148" width="366" height="15" fill="rgb(254,133,36)"/><text x="391.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.14%)</title><rect x="752" y="164" width="2" height="15" fill="rgb(216,43,44)"/><text x="755.00" y="174.50"></text></g><g><title>0x7f5c678e6ff9 (?) (1 samples, 0.14%)</title><rect x="754" y="212" width="1" height="15" fill="rgb(235,51,46)"/><text x="757.00" y="222.50"></text></g><g><title>0x7f5c678e1ef6 (?) (1 samples, 0.14%)</title><rect x="754" y="228" width="1" height="15" fill="rgb(242,161,0)"/><text x="757.00" y="238.50"></text></g><g><title>0x7f5c678d6962 (?) (1 samples, 0.14%)</title><rect x="754" y="244" width="1" height="15" fill="rgb(215,115,3)"/><text x="757.00" y="254.50"></text></g><g><title>0x7f5c6790a7a7 (?) (1 samples, 0.14%)</title><rect x="754" y="260" width="1" height="15" fill="rgb(216,120,25)"/><text x="757.00" y="270.50"></text></g><g><title>0x7f5c6790a379 (?) (1 samples, 0.14%)</title><rect x="754" y="276" width="1" height="15" fill="rgb(231,196,50)"/><text x="757.00" y="286.50"></text></g><g><title>0x7f5c67d688b8 (?) (1 samples, 0.14%)</title><rect x="754" y="292" width="1" height="15" fill="rgb(246,47,3)"/><text x="757.00" y="302.50"></text></g><g><title>0x7f5c67d66c7f (?) (1 samples, 0.14%)</title><rect x="754" y="308" width="1" height="15" fill="rgb(239,63,26)"/><text x="757.00" y="318.50"></text></g><g><title>0x7f5c67d7999c (?) (1 samples, 0.14%)</title><rect x="754" y="324" width="1" height="15" fill="rgb(207,36,8)"/><text x="757.00" y="334.50"></text></g><g><title>0x7f5c67a7eb33 (?) (1 samples, 0.14%)</title><rect x="754" y="340" width="1" height="15" fill="rgb(227,226,50)"/><text x="757.00" y="350.50"></text></g><g><title>0x7f5c6791b43e (?) (1 samples, 0.14%)</title><rect x="754" y="356" width="1" height="15" fill="rgb(237,177,5)"/><text x="757.00" y="366.50"></text></g><g><title>0x7f5c678ae0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="764" y="388" width="1" height="15" fill="rgb(222,226,8)"/><text x="767.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.41%)</title><rect x="762" y="356" width="5" height="15" fill="rgb(213,224,14)"/><text x="765.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="764" y="372" width="3" height="15" fill="rgb(210,94,35)"/><text x="767.00" y="382.50"></text></g><g><title>0x7f5ca7876965 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="765" y="388" width="2" height="15" fill="rgb(242,64,45)"/><text x="768.00" y="398.50"></text></g><g><title>0x7f5ca7896e1b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="767" y="372" width="1" height="15" fill="rgb(225,195,14)"/><text x="770.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="767" y="356" width="3" height="15" fill="rgb(225,102,43)"/><text x="770.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.14%)</title><rect x="768" y="372" width="2" height="15" fill="rgb(212,65,28)"/><text x="771.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="260" width="17" height="15" fill="rgb(238,137,38)"/><text x="758.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="276" width="17" height="15" fill="rgb(233,44,43)"/><text x="758.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="292" width="17" height="15" fill="rgb(206,7,19)"/><text x="758.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="308" width="17" height="15" fill="rgb(215,101,49)"/><text x="758.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="324" width="17" height="15" fill="rgb(239,127,23)"/><text x="758.00" y="334.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.38%)</title><rect x="755" y="340" width="17" height="15" fill="rgb(241,80,10)"/><text x="758.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="770" y="356" width="2" height="15" fill="rgb(245,147,23)"/><text x="773.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="770" y="372" width="2" height="15" fill="rgb(224,154,52)"/><text x="773.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="770" y="388" width="2" height="15" fill="rgb(208,26,7)"/><text x="773.00" y="398.50"></text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (13 samples, 1.80%)</title><rect x="754" y="100" width="21" height="15" fill="rgb(228,6,32)"/><text x="757.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (13 samples, 1.80%)</title><rect x="754" y="116" width="21" height="15" fill="rgb(213,197,5)"/><text x="757.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (13 samples, 1.80%)</title><rect x="754" y="132" width="21" height="15" fill="rgb(221,135,52)"/><text x="757.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (13 samples, 1.80%)</title><rect x="754" y="148" width="21" height="15" fill="rgb(226,29,26)"/><text x="757.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (13 samples, 1.80%)</title><rect x="754" y="164" width="21" height="15" fill="rgb(237,220,15)"/><text x="757.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (13 samples, 1.80%)</title><rect x="754" y="180" width="21" height="15" fill="rgb(228,48,38)"/><text x="757.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (13 samples, 1.80%)</title><rect x="754" y="196" width="21" height="15" fill="rgb(226,227,23)"/><text x="757.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.66%)</title><rect x="755" y="212" width="20" height="15" fill="rgb(244,226,43)"/><text x="758.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.66%)</title><rect x="755" y="228" width="20" height="15" fill="rgb(239,36,16)"/><text x="758.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.66%)</title><rect x="755" y="244" width="20" height="15" fill="rgb(219,48,47)"/><text x="758.00" y="254.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="772" y="260" width="3" height="15" fill="rgb(226,56,38)"/><text x="775.00" y="270.50"></text></g><g><title>0x7f5ca7875c28 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="788" y="132" width="2" height="15" fill="rgb(246,206,35)"/><text x="791.00" y="142.50"></text></g><g><title>0x7f5ca7875c49 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="790" y="132" width="1" height="15" fill="rgb(223,153,3)"/><text x="793.00" y="142.50"></text></g><g><title>0x7f5ca7876eb0 (libc-2.29.so) (3 samples, 0.41%)</title><rect x="788" y="116" width="5" height="15" fill="rgb(249,175,42)"/><text x="791.00" y="126.50"></text></g><g><title>0x7f5ca7875c4d (libc-2.29.so) (1 samples, 0.14%)</title><rect x="791" y="132" width="2" height="15" fill="rgb(237,64,5)"/><text x="794.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.14%)</title><rect x="793" y="196" width="2" height="15" fill="rgb(216,42,47)"/><text x="796.00" y="206.50"></text></g><g><title>0x7f5ca79f5e1c (libm-2.29.so) (1 samples, 0.14%)</title><rect x="925" y="356" width="2" height="15" fill="rgb(228,3,37)"/><text x="928.00" y="366.50"></text></g><g><title>0x7f5ca79f5e4e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="927" y="356" width="1" height="15" fill="rgb(252,184,50)"/><text x="930.00" y="366.50"></text></g><g><title>0x7f5ca79f5e69 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="928" y="356" width="2" height="15" fill="rgb(213,198,31)"/><text x="931.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.55%)</title><rect x="930" y="356" width="7" height="15" fill="rgb(232,141,46)"/><text x="933.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="356" width="1" height="15" fill="rgb(224,75,8)"/><text x="940.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="372" width="1" height="15" fill="rgb(215,15,24)"/><text x="940.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="388" width="1" height="15" fill="rgb(252,200,38)"/><text x="940.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="404" width="1" height="15" fill="rgb(218,58,51)"/><text x="940.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="420" width="1" height="15" fill="rgb(250,42,21)"/><text x="940.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="436" width="1" height="15" fill="rgb(237,5,0)"/><text x="940.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="452" width="1" height="15" fill="rgb(224,160,24)"/><text x="940.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="468" width="1" height="15" fill="rgb(247,201,3)"/><text x="940.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="484" width="1" height="15" fill="rgb(253,227,17)"/><text x="940.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="937" y="500" width="1" height="15" fill="rgb(208,229,4)"/><text x="940.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="937" y="516" width="1" height="15" fill="rgb(226,175,46)"/><text x="940.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="937" y="532" width="1" height="15" fill="rgb(223,186,28)"/><text x="940.00" y="542.50"></text></g><g><title>0x7f5ca7878531 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="937" y="548" width="1" height="15" fill="rgb(206,148,54)"/><text x="940.00" y="558.50"></text></g><g><title>0x7f5ca7876982 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1008" y="372" width="2" height="15" fill="rgb(225,34,38)"/><text x="1011.00" y="382.50"></text></g><g><title>0x7f5ca7876906 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1016" y="388" width="2" height="15" fill="rgb(243,50,49)"/><text x="1019.00" y="398.50"></text></g><g><title>0x7f5ca787691c (libc-2.29.so) (3 samples, 0.41%)</title><rect x="1018" y="388" width="5" height="15" fill="rgb(206,157,41)"/><text x="1021.00" y="398.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1023" y="388" width="2" height="15" fill="rgb(214,121,13)"/><text x="1026.00" y="398.50"></text></g><g><title>0x7f5ca7896d6f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1025" y="388" width="1" height="15" fill="rgb(246,38,47)"/><text x="1028.00" y="398.50"></text></g><g><title>0x7f5ca7896dae (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1026" y="388" width="2" height="15" fill="rgb(214,72,1)"/><text x="1029.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.69%)</title><rect x="1028" y="388" width="8" height="15" fill="rgb(249,162,24)"/><text x="1031.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (66 samples, 9.13%)</title><rect x="938" y="356" width="108" height="15" fill="rgb(205,118,18)"/><text x="941.00" y="366.50">onnxruntime::..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 3.04%)</title><rect x="1010" y="372" width="36" height="15" fill="rgb(205,186,30)"/><text x="1013.00" y="382.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.83%)</title><rect x="1036" y="388" width="10" height="15" fill="rgb(244,120,52)"/><text x="1039.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.83%)</title><rect x="1036" y="404" width="10" height="15" fill="rgb(241,17,22)"/><text x="1039.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1046" y="356" width="3" height="15" fill="rgb(251,115,33)"/><text x="1049.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="1049" y="356" width="2" height="15" fill="rgb(236,80,10)"/><text x="1052.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1049" y="372" width="2" height="15" fill="rgb(240,212,40)"/><text x="1052.00" y="382.50"></text></g><g><title>0x7f5ca7876906 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1061" y="372" width="1" height="15" fill="rgb(228,177,37)"/><text x="1064.00" y="382.50"></text></g><g><title>0x7f5ca7876929 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1062" y="372" width="3" height="15" fill="rgb(235,183,48)"/><text x="1065.00" y="382.50"></text></g><g><title>0x7f5ca7876945 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1065" y="372" width="2" height="15" fill="rgb(227,56,46)"/><text x="1068.00" y="382.50"></text></g><g><title>0x7f5ca787695e (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1067" y="372" width="2" height="15" fill="rgb(233,224,19)"/><text x="1070.00" y="382.50"></text></g><g><title>0x7f5ca7876982 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1069" y="372" width="1" height="15" fill="rgb(245,85,22)"/><text x="1072.00" y="382.50"></text></g><g><title>0x7f5ca7876991 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1070" y="372" width="2" height="15" fill="rgb(254,164,45)"/><text x="1073.00" y="382.50"></text></g><g><title>0x7f5ca7876998 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1072" y="372" width="3" height="15" fill="rgb(242,172,52)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7f5ca7876bc0 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(242,143,48)"/><text x="1078.00" y="382.50"></text></g><g><title>0x7f5ca7876be4 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1077" y="372" width="2" height="15" fill="rgb(254,144,43)"/><text x="1080.00" y="382.50"></text></g><g><title>0x7f5ca7896d50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1079" y="372" width="1" height="15" fill="rgb(223,98,8)"/><text x="1082.00" y="382.50"></text></g><g><title>0x7f5ca7896dae (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1080" y="372" width="2" height="15" fill="rgb(253,61,15)"/><text x="1083.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.55%)</title><rect x="1082" y="372" width="6" height="15" fill="rgb(238,8,29)"/><text x="1085.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.87%)</title><rect x="1051" y="356" width="45" height="15" fill="rgb(240,201,35)"/><text x="1054.00" y="366.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.69%)</title><rect x="1088" y="372" width="8" height="15" fill="rgb(230,66,28)"/><text x="1091.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.55%)</title><rect x="1090" y="388" width="6" height="15" fill="rgb(233,187,21)"/><text x="1093.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 26.14%)</title><rect x="796" y="340" width="309" height="15" fill="rgb(234,16,21)"/><text x="799.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Co..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.69%)</title><rect x="1096" y="356" width="9" height="15" fill="rgb(224,113,27)"/><text x="1099.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.55%)</title><rect x="1098" y="372" width="7" height="15" fill="rgb(245,188,26)"/><text x="1101.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.41%)</title><rect x="1100" y="388" width="5" height="15" fill="rgb(227,83,8)"/><text x="1103.00" y="398.50"></text></g><g><title>0x7f5ca7877d9b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1129" y="388" width="2" height="15" fill="rgb(217,221,16)"/><text x="1132.00" y="398.50"></text></g><g><title>0x7f5ca7877dec (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1131" y="388" width="1" height="15" fill="rgb(225,74,31)"/><text x="1134.00" y="398.50"></text></g><g><title>0x7f5ca7877f2a (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1132" y="388" width="2" height="15" fill="rgb(241,225,28)"/><text x="1135.00" y="398.50"></text></g><g><title>0x7f5ca7877fd2 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1134" y="388" width="2" height="15" fill="rgb(234,110,28)"/><text x="1137.00" y="398.50"></text></g><g><title>0x7f5ca7878040 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1136" y="388" width="1" height="15" fill="rgb(212,23,43)"/><text x="1139.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (18 samples, 2.49%)</title><rect x="1110" y="356" width="29" height="15" fill="rgb(220,192,15)"/><text x="1113.00" y="366.50">op..</text></g><g><title>malloc (libc-2.29.so) (18 samples, 2.49%)</title><rect x="1110" y="372" width="29" height="15" fill="rgb(254,173,14)"/><text x="1113.00" y="382.50">ma..</text></g><g><title>0x7f5ca7878395 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1137" y="388" width="2" height="15" fill="rgb(205,36,0)"/><text x="1140.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1139" y="356" width="2" height="15" fill="rgb(236,58,29)"/><text x="1142.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 29.46%)</title><rect x="795" y="260" width="347" height="15" fill="rgb(212,131,39)"/><text x="798.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 29.46%)</title><rect x="795" y="276" width="347" height="15" fill="rgb(242,54,53)"/><text x="798.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (212 samples, 29.32%)</title><rect x="796" y="292" width="346" height="15" fill="rgb(220,189,7)"/><text x="799.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (212 samples, 29.32%)</title><rect x="796" y="308" width="346" height="15" fill="rgb(224,84,52)"/><text x="799.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (212 samples, 29.32%)</title><rect x="796" y="324" width="346" height="15" fill="rgb(232,47,50)"/><text x="799.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.18%)</title><rect x="1105" y="340" width="37" height="15" fill="rgb(227,142,40)"/><text x="1108.00" y="350.50">onn..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="1141" y="356" width="1" height="15" fill="rgb(213,167,42)"/><text x="1144.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.94%)</title><rect x="1142" y="260" width="23" height="15" fill="rgb(249,222,41)"/><text x="1145.00" y="270.50">p..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.83%)</title><rect x="1155" y="276" width="10" height="15" fill="rgb(212,172,24)"/><text x="1158.00" y="286.50"></text></g><g><title>0x7f5ca7876cf0 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(246,45,8)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7f5ca7876d07 (libc-2.29.so) (5 samples, 0.69%)</title><rect x="1167" y="292" width="8" height="15" fill="rgb(210,145,16)"/><text x="1170.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1175" y="292" width="3" height="15" fill="rgb(215,94,20)"/><text x="1178.00" y="302.50"></text></g><g><title>0x7f5ca7876d07 (libc-2.29.so) (5 samples, 0.69%)</title><rect x="1180" y="308" width="8" height="15" fill="rgb(235,185,2)"/><text x="1183.00" y="318.50"></text></g><g><title>all (723 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(238,40,23)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:52) (267 samples, 36.93%)</title><rect x="754" y="52" width="436" height="15" fill="rgb(220,162,52)"/><text x="757.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinea..</text></g><g><title>profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:51) (267 samples, 36.93%)</title><rect x="754" y="68" width="436" height="15" fill="rgb(236,141,48)"/><text x="757.00" y="78.50">profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernelli..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (267 samples, 36.93%)</title><rect x="754" y="84" width="436" height="15" fill="rgb(252,34,0)"/><text x="757.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernel..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (254 samples, 35.13%)</title><rect x="775" y="100" width="415" height="15" fill="rgb(235,59,5)"/><text x="778.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_kernellin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (243 samples, 33.61%)</title><rect x="793" y="116" width="397" height="15" fill="rgb(245,158,26)"/><text x="796.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (243 samples, 33.61%)</title><rect x="793" y="132" width="397" height="15" fill="rgb(234,26,5)"/><text x="796.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (243 samples, 33.61%)</title><rect x="793" y="148" width="397" height="15" fill="rgb(243,152,53)"/><text x="796.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (243 samples, 33.61%)</title><rect x="793" y="164" width="397" height="15" fill="rgb(230,171,9)"/><text x="796.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (243 samples, 33.61%)</title><rect x="793" y="180" width="397" height="15" fill="rgb(230,181,20)"/><text x="796.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (242 samples, 33.47%)</title><rect x="795" y="196" width="395" height="15" fill="rgb(242,44,25)"/><text x="798.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (242 samples, 33.47%)</title><rect x="795" y="212" width="395" height="15" fill="rgb(223,200,53)"/><text x="798.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (242 samples, 33.47%)</title><rect x="795" y="228" width="395" height="15" fill="rgb(220,19,34)"/><text x="798.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (242 samples, 33.47%)</title><rect x="795" y="244" width="395" height="15" fill="rgb(234,16,4)"/><text x="798.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modul..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.07%)</title><rect x="1165" y="260" width="25" height="15" fill="rgb(235,177,23)"/><text x="1168.00" y="270.50">s..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.07%)</title><rect x="1165" y="276" width="25" height="15" fill="rgb(222,193,54)"/><text x="1168.00" y="286.50">o..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.97%)</title><rect x="1178" y="292" width="12" height="15" fill="rgb(210,42,41)"/><text x="1181.00" y="302.50"></text></g><g><title>0x7f5ca7876d13 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(232,68,18)"/><text x="1191.00" y="318.50"></text></g></g></svg>