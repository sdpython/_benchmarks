<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>__init__ (warnings.py) (1 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(233,119,33)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.41%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(233,93,54)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.41%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(233,189,17)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.41%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(249,5,34)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.41%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(248,228,42)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(216,37,51)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(245,210,6)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(209,203,49)"/><text x="15.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(250,204,9)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(236,59,16)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(253,141,46)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.21%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(217,164,5)"/><text x="15.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.21%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(250,193,32)"/><text x="15.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.21%)</title><rect x="12" y="1060" width="2" height="15" fill="rgb(253,21,50)"/><text x="15.00" y="1070.50"></text></g><g><title>0x7f80620a73bd (libc-2.29.so) (1 samples, 0.21%)</title><rect x="12" y="1076" width="2" height="15" fill="rgb(222,160,17)"/><text x="15.00" y="1086.50"></text></g><g><title>0x7f80620223ef (libc-2.29.so) (1 samples, 0.21%)</title><rect x="12" y="1092" width="2" height="15" fill="rgb(240,67,1)"/><text x="15.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.62%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(241,23,53)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(212,195,11)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(254,93,47)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(217,213,17)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(220,114,35)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(231,44,11)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.62%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(227,204,6)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(213,179,54)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(254,182,8)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(214,7,43)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(221,181,42)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(253,188,27)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.62%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(239,211,34)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(232,101,9)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(218,155,10)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(229,14,38)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(229,228,16)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(207,228,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.62%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(205,7,43)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(212,42,27)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(241,155,45)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(239,110,52)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(233,216,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(240,173,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(239,135,26)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(221,184,32)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(238,74,46)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.62%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(226,76,38)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(210,9,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(250,97,48)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(250,34,47)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(248,6,49)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(251,40,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.62%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(227,45,7)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.62%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(219,118,7)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.62%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(210,56,52)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="868" width="3" height="15" fill="rgb(237,31,36)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="884" width="3" height="15" fill="rgb(227,69,6)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="900" width="3" height="15" fill="rgb(250,117,32)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="916" width="3" height="15" fill="rgb(221,204,25)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="932" width="3" height="15" fill="rgb(227,141,21)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="948" width="3" height="15" fill="rgb(217,175,4)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="14" y="964" width="3" height="15" fill="rgb(225,210,19)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="14" y="980" width="3" height="15" fill="rgb(208,185,19)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="14" y="996" width="3" height="15" fill="rgb(218,9,14)"/><text x="17.00" y="1006.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.21%)</title><rect x="14" y="1012" width="3" height="15" fill="rgb(251,28,36)"/><text x="17.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(225,144,26)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(207,87,34)"/><text x="20.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(230,14,1)"/><text x="20.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(238,62,45)"/><text x="20.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(254,76,3)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(210,24,52)"/><text x="20.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py) (1 samples, 0.21%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(233,12,52)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(241,127,32)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(207,211,14)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(239,145,22)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(216,5,29)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(235,142,12)"/><text x="20.00" y="718.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="19" y="596" width="3" height="15" fill="rgb(220,39,20)"/><text x="22.00" y="606.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="19" y="612" width="3" height="15" fill="rgb(218,108,21)"/><text x="22.00" y="622.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="19" y="628" width="3" height="15" fill="rgb(219,47,7)"/><text x="22.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(235,41,21)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(248,214,0)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(246,197,25)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(248,173,12)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.24%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(210,26,31)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(244,139,49)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.62%)</title><rect x="17" y="292" width="7" height="15" fill="rgb(244,106,53)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="308" width="7" height="15" fill="rgb(253,145,19)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="324" width="7" height="15" fill="rgb(250,35,6)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="340" width="7" height="15" fill="rgb(227,41,39)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="17" y="356" width="7" height="15" fill="rgb(213,194,2)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="372" width="7" height="15" fill="rgb(247,20,40)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.62%)</title><rect x="17" y="388" width="7" height="15" fill="rgb(231,145,31)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="404" width="7" height="15" fill="rgb(229,192,0)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="420" width="7" height="15" fill="rgb(237,210,9)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="436" width="7" height="15" fill="rgb(243,86,2)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="17" y="452" width="7" height="15" fill="rgb(231,201,45)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="468" width="7" height="15" fill="rgb(253,223,36)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.62%)</title><rect x="17" y="484" width="7" height="15" fill="rgb(251,133,38)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="500" width="7" height="15" fill="rgb(233,178,47)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="17" y="516" width="7" height="15" fill="rgb(236,167,48)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(254,186,47)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(226,40,44)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(213,17,1)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.41%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(236,153,48)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(235,177,21)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(220,33,30)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(222,126,40)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(222,214,44)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(208,173,21)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.21%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(217,212,53)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(219,159,42)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(219,209,52)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(217,202,26)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(250,181,47)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(211,159,9)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.21%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(226,185,33)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(208,205,18)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(208,214,5)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(253,49,0)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(216,7,18)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(229,92,2)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(247,126,10)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(250,127,7)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.21%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(208,38,41)"/><text x="25.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(205,22,34)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(247,212,17)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(213,192,23)"/><text x="25.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(244,195,20)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(239,29,8)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(227,9,49)"/><text x="25.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(228,130,33)"/><text x="25.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(225,126,53)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(222,39,51)"/><text x="25.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(244,161,49)"/><text x="25.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(230,136,0)"/><text x="25.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(246,124,41)"/><text x="25.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(254,169,44)"/><text x="25.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.21%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(231,112,28)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(211,126,40)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(248,218,34)"/><text x="25.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(241,35,44)"/><text x="25.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(228,26,5)"/><text x="25.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(254,12,49)"/><text x="25.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.21%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(213,212,9)"/><text x="25.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(224,36,20)"/><text x="25.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(234,2,51)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(210,215,35)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(241,149,53)"/><text x="25.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(246,125,0)"/><text x="25.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(205,19,28)"/><text x="25.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(240,171,46)"/><text x="25.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py) (1 samples, 0.21%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(226,30,14)"/><text x="25.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(240,142,14)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(206,165,30)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(244,127,32)"/><text x="25.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(240,180,15)"/><text x="25.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(209,193,48)"/><text x="25.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(226,147,39)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.21%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(251,156,28)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(243,192,20)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(235,90,22)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(249,164,39)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(232,89,49)"/><text x="27.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(206,120,36)"/><text x="27.00" y="1294.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(214,164,18)"/><text x="27.00" y="1310.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(216,163,11)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="24" y="1124" width="5" height="15" fill="rgb(223,142,17)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="24" y="1140" width="5" height="15" fill="rgb(254,70,38)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="24" y="1156" width="5" height="15" fill="rgb(206,217,52)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="24" y="1172" width="5" height="15" fill="rgb(247,107,48)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="24" y="1188" width="5" height="15" fill="rgb(221,214,47)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.21%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(223,157,16)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(222,218,35)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(234,213,8)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(206,182,24)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(217,67,25)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(219,35,22)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.21%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(210,102,27)"/><text x="30.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.21%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(240,132,9)"/><text x="30.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.21%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(214,227,43)"/><text x="30.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.21%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(214,193,7)"/><text x="30.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.21%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(222,188,32)"/><text x="30.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.21%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(252,11,45)"/><text x="30.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.21%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(221,157,16)"/><text x="30.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.21%)</title><rect x="27" y="1412" width="2" height="15" fill="rgb(229,96,10)"/><text x="30.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.21%)</title><rect x="27" y="1428" width="2" height="15" fill="rgb(206,23,37)"/><text x="30.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="484" width="7" height="15" fill="rgb(221,21,35)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="500" width="7" height="15" fill="rgb(209,167,27)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="516" width="7" height="15" fill="rgb(246,39,13)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="532" width="7" height="15" fill="rgb(254,81,5)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="548" width="7" height="15" fill="rgb(207,93,19)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="564" width="7" height="15" fill="rgb(216,174,28)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.62%)</title><rect x="24" y="580" width="7" height="15" fill="rgb(224,193,52)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="596" width="7" height="15" fill="rgb(205,99,52)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="612" width="7" height="15" fill="rgb(216,191,45)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="628" width="7" height="15" fill="rgb(239,99,36)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="644" width="7" height="15" fill="rgb(227,146,15)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="660" width="7" height="15" fill="rgb(239,217,1)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.62%)</title><rect x="24" y="676" width="7" height="15" fill="rgb(235,152,3)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="692" width="7" height="15" fill="rgb(206,108,12)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="708" width="7" height="15" fill="rgb(244,207,38)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="724" width="7" height="15" fill="rgb(207,132,1)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="740" width="7" height="15" fill="rgb(214,202,22)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="756" width="7" height="15" fill="rgb(221,92,51)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.62%)</title><rect x="24" y="772" width="7" height="15" fill="rgb(235,34,51)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="788" width="7" height="15" fill="rgb(241,183,18)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="804" width="7" height="15" fill="rgb(218,43,39)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="820" width="7" height="15" fill="rgb(217,217,27)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="836" width="7" height="15" fill="rgb(216,171,50)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="852" width="7" height="15" fill="rgb(216,3,44)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.62%)</title><rect x="24" y="868" width="7" height="15" fill="rgb(234,191,52)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="884" width="7" height="15" fill="rgb(238,196,3)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="900" width="7" height="15" fill="rgb(212,186,26)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="916" width="7" height="15" fill="rgb(246,127,16)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="932" width="7" height="15" fill="rgb(232,58,44)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="948" width="7" height="15" fill="rgb(207,197,15)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="964" width="7" height="15" fill="rgb(242,55,2)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="980" width="7" height="15" fill="rgb(234,205,17)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="996" width="7" height="15" fill="rgb(247,68,31)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.62%)</title><rect x="24" y="1012" width="7" height="15" fill="rgb(241,16,36)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="1028" width="7" height="15" fill="rgb(225,66,43)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="1044" width="7" height="15" fill="rgb(251,105,48)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="1060" width="7" height="15" fill="rgb(245,228,24)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="24" y="1076" width="7" height="15" fill="rgb(213,99,48)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="24" y="1092" width="7" height="15" fill="rgb(206,110,17)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.62%)</title><rect x="24" y="1108" width="7" height="15" fill="rgb(243,103,23)"/><text x="27.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(225,215,2)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(226,0,46)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(237,207,9)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(244,109,38)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(232,93,29)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(237,74,34)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(230,108,40)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.21%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(218,61,5)"/><text x="32.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(220,92,47)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(253,202,46)"/><text x="32.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(244,60,0)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(231,226,5)"/><text x="32.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(244,4,24)"/><text x="32.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(250,190,13)"/><text x="32.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(253,115,0)"/><text x="32.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.21%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(212,38,27)"/><text x="32.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(214,26,21)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(246,44,16)"/><text x="32.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(231,146,52)"/><text x="32.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(253,192,37)"/><text x="32.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(220,144,39)"/><text x="32.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="29" y="1460" width="2" height="15" fill="rgb(231,69,51)"/><text x="32.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="29" y="1476" width="2" height="15" fill="rgb(220,105,45)"/><text x="32.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="29" y="1492" width="2" height="15" fill="rgb(254,127,42)"/><text x="32.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="29" y="1508" width="2" height="15" fill="rgb(234,188,54)"/><text x="32.00" y="1518.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="29" y="1524" width="2" height="15" fill="rgb(242,156,6)"/><text x="32.00" y="1534.50"></text></g><g><title>0x7f80521350e9 (?) (1 samples, 0.21%)</title><rect x="29" y="1540" width="2" height="15" fill="rgb(227,109,12)"/><text x="32.00" y="1550.50"></text></g><g><title>0x7f8052137be8 (?) (1 samples, 0.21%)</title><rect x="29" y="1556" width="2" height="15" fill="rgb(207,100,11)"/><text x="32.00" y="1566.50"></text></g><g><title>0x7f805212e74d (?) (1 samples, 0.21%)</title><rect x="29" y="1572" width="2" height="15" fill="rgb(223,29,36)"/><text x="32.00" y="1582.50"></text></g><g><title>0x7f805212e65f (?) (1 samples, 0.21%)</title><rect x="29" y="1588" width="2" height="15" fill="rgb(253,104,8)"/><text x="32.00" y="1598.50"></text></g><g><title>0x7f8052117110 (?) (1 samples, 0.21%)</title><rect x="29" y="1604" width="2" height="15" fill="rgb(232,177,27)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="31" y="1508" width="3" height="15" fill="rgb(206,176,46)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="31" y="1524" width="3" height="15" fill="rgb(220,222,29)"/><text x="34.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="31" y="1540" width="3" height="15" fill="rgb(243,216,34)"/><text x="34.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="31" y="1556" width="3" height="15" fill="rgb(252,77,20)"/><text x="34.00" y="1566.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="31" y="1572" width="3" height="15" fill="rgb(221,113,3)"/><text x="34.00" y="1582.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="31" y="1588" width="3" height="15" fill="rgb(228,100,28)"/><text x="34.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.41%)</title><rect x="31" y="724" width="5" height="15" fill="rgb(229,48,44)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="740" width="5" height="15" fill="rgb(229,220,54)"/><text x="34.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="756" width="5" height="15" fill="rgb(212,19,30)"/><text x="34.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="772" width="5" height="15" fill="rgb(218,63,23)"/><text x="34.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="788" width="5" height="15" fill="rgb(236,160,13)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="804" width="5" height="15" fill="rgb(213,8,29)"/><text x="34.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.41%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(248,20,15)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(210,16,0)"/><text x="34.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(217,138,37)"/><text x="34.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(246,65,4)"/><text x="34.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="884" width="5" height="15" fill="rgb(214,7,53)"/><text x="34.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="900" width="5" height="15" fill="rgb(216,8,52)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.41%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(212,78,33)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(233,218,7)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(220,42,35)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(220,48,21)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(249,20,23)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(208,43,8)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.41%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(247,22,8)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(205,113,5)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(209,226,36)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(224,163,48)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(250,190,40)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(253,63,14)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.41%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(254,115,0)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(221,212,23)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(231,194,43)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(234,144,11)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="1172" width="5" height="15" fill="rgb(221,172,36)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1188" width="5" height="15" fill="rgb(250,209,54)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.41%)</title><rect x="31" y="1204" width="5" height="15" fill="rgb(222,14,7)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1220" width="5" height="15" fill="rgb(244,148,47)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1236" width="5" height="15" fill="rgb(247,65,4)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1252" width="5" height="15" fill="rgb(208,122,51)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="1268" width="5" height="15" fill="rgb(247,35,50)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1284" width="5" height="15" fill="rgb(243,60,33)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.41%)</title><rect x="31" y="1300" width="5" height="15" fill="rgb(207,113,6)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1316" width="5" height="15" fill="rgb(237,209,38)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1332" width="5" height="15" fill="rgb(220,113,21)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1348" width="5" height="15" fill="rgb(216,127,35)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="1364" width="5" height="15" fill="rgb(206,173,20)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1380" width="5" height="15" fill="rgb(239,137,15)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.41%)</title><rect x="31" y="1396" width="5" height="15" fill="rgb(208,42,30)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1412" width="5" height="15" fill="rgb(225,6,21)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1428" width="5" height="15" fill="rgb(206,146,40)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1444" width="5" height="15" fill="rgb(237,153,39)"/><text x="34.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.41%)</title><rect x="31" y="1460" width="5" height="15" fill="rgb(251,56,45)"/><text x="34.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="31" y="1476" width="5" height="15" fill="rgb(224,180,0)"/><text x="34.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.41%)</title><rect x="31" y="1492" width="5" height="15" fill="rgb(251,18,36)"/><text x="34.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1508" width="2" height="15" fill="rgb(238,57,40)"/><text x="37.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1524" width="2" height="15" fill="rgb(253,219,3)"/><text x="37.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1540" width="2" height="15" fill="rgb(252,91,22)"/><text x="37.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1556" width="2" height="15" fill="rgb(230,132,40)"/><text x="37.00" y="1566.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1572" width="2" height="15" fill="rgb(238,56,44)"/><text x="37.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1588" width="2" height="15" fill="rgb(245,227,19)"/><text x="37.00" y="1598.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1604" width="2" height="15" fill="rgb(251,144,16)"/><text x="37.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(248,76,35)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(232,192,17)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(207,96,36)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.48%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(205,178,48)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(219,41,14)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (12 samples, 2.48%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(238,78,38)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(242,67,12)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.48%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(233,68,49)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="196" width="15" height="15" fill="rgb(253,191,14)"/><text x="27.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.24%)</title><rect x="24" y="212" width="15" height="15" fill="rgb(254,143,17)"/><text x="27.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="228" width="15" height="15" fill="rgb(219,142,48)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.24%)</title><rect x="24" y="244" width="15" height="15" fill="rgb(251,164,24)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="260" width="15" height="15" fill="rgb(237,82,38)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="276" width="15" height="15" fill="rgb(229,39,44)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="292" width="15" height="15" fill="rgb(252,99,8)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.24%)</title><rect x="24" y="308" width="15" height="15" fill="rgb(227,29,23)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="324" width="15" height="15" fill="rgb(244,46,24)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.24%)</title><rect x="24" y="340" width="15" height="15" fill="rgb(205,176,27)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="356" width="15" height="15" fill="rgb(250,209,13)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="372" width="15" height="15" fill="rgb(210,208,9)"/><text x="27.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="388" width="15" height="15" fill="rgb(220,172,0)"/><text x="27.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.24%)</title><rect x="24" y="404" width="15" height="15" fill="rgb(216,78,48)"/><text x="27.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="420" width="15" height="15" fill="rgb(249,199,26)"/><text x="27.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.24%)</title><rect x="24" y="436" width="15" height="15" fill="rgb(227,1,37)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="452" width="15" height="15" fill="rgb(229,186,45)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.24%)</title><rect x="24" y="468" width="15" height="15" fill="rgb(245,26,3)"/><text x="27.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="484" width="8" height="15" fill="rgb(218,108,28)"/><text x="34.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="31" y="500" width="8" height="15" fill="rgb(212,103,45)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="516" width="8" height="15" fill="rgb(219,177,20)"/><text x="34.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.62%)</title><rect x="31" y="532" width="8" height="15" fill="rgb(250,35,25)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="548" width="8" height="15" fill="rgb(233,40,41)"/><text x="34.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="564" width="8" height="15" fill="rgb(241,165,19)"/><text x="34.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="580" width="8" height="15" fill="rgb(205,31,44)"/><text x="34.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="31" y="596" width="8" height="15" fill="rgb(226,164,24)"/><text x="34.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="612" width="8" height="15" fill="rgb(235,118,50)"/><text x="34.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.62%)</title><rect x="31" y="628" width="8" height="15" fill="rgb(207,207,24)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="644" width="8" height="15" fill="rgb(246,21,40)"/><text x="34.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="660" width="8" height="15" fill="rgb(238,92,54)"/><text x="34.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="676" width="8" height="15" fill="rgb(244,104,7)"/><text x="34.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="31" y="692" width="8" height="15" fill="rgb(240,12,38)"/><text x="34.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="31" y="708" width="8" height="15" fill="rgb(228,161,20)"/><text x="34.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.21%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(210,49,9)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(242,22,8)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(254,29,50)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(241,167,23)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(251,90,33)"/><text x="39.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(218,184,19)"/><text x="39.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(251,112,38)"/><text x="39.00" y="830.50"></text></g><g><title>0x7f8062078bc6 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="80" y="132" width="3" height="15" fill="rgb(209,127,44)"/><text x="83.00" y="142.50"></text></g><g><title>0x7f8062078be8 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="83" y="132" width="2" height="15" fill="rgb(228,22,6)"/><text x="86.00" y="142.50"></text></g><g><title>0x7f8062078c2d (libc-2.29.so) (2 samples, 0.41%)</title><rect x="85" y="132" width="5" height="15" fill="rgb(206,215,38)"/><text x="88.00" y="142.50"></text></g><g><title>0x7f8062078c45 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="90" y="132" width="2" height="15" fill="rgb(223,184,34)"/><text x="93.00" y="142.50"></text></g><g><title>0x7f8062078c49 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="92" y="132" width="3" height="15" fill="rgb(205,77,41)"/><text x="95.00" y="142.50"></text></g><g><title>0x7f8062078c4d (libc-2.29.so) (1 samples, 0.21%)</title><rect x="95" y="132" width="2" height="15" fill="rgb(209,135,14)"/><text x="98.00" y="142.50"></text></g><g><title>0x7f8062078c5a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="97" y="132" width="3" height="15" fill="rgb(223,91,29)"/><text x="100.00" y="142.50"></text></g><g><title>0x7f8062079eb0 (libc-2.29.so) (9 samples, 1.86%)</title><rect x="80" y="116" width="22" height="15" fill="rgb(234,173,20)"/><text x="83.00" y="126.50">0..</text></g><g><title>0x7f8062078c73 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="100" y="132" width="2" height="15" fill="rgb(227,124,2)"/><text x="103.00" y="142.50"></text></g><g><title>0x7f8062078ac1 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="100" y="148" width="2" height="15" fill="rgb(218,74,28)"/><text x="103.00" y="158.50"></text></g><g><title>0x7f80220a9ff9 (?) (1 samples, 0.21%)</title><rect x="107" y="212" width="2" height="15" fill="rgb(251,57,40)"/><text x="110.00" y="222.50"></text></g><g><title>0x7f80220a4ef6 (?) (1 samples, 0.21%)</title><rect x="107" y="228" width="2" height="15" fill="rgb(211,113,2)"/><text x="110.00" y="238.50"></text></g><g><title>0x7f8022099962 (?) (1 samples, 0.21%)</title><rect x="107" y="244" width="2" height="15" fill="rgb(243,10,29)"/><text x="110.00" y="254.50"></text></g><g><title>0x7f80220cd7a7 (?) (1 samples, 0.21%)</title><rect x="107" y="260" width="2" height="15" fill="rgb(233,65,47)"/><text x="110.00" y="270.50"></text></g><g><title>0x7f80220cd379 (?) (1 samples, 0.21%)</title><rect x="107" y="276" width="2" height="15" fill="rgb(222,175,4)"/><text x="110.00" y="286.50"></text></g><g><title>0x7f802252b8b8 (?) (1 samples, 0.21%)</title><rect x="107" y="292" width="2" height="15" fill="rgb(230,29,41)"/><text x="110.00" y="302.50"></text></g><g><title>0x7f8022529c7f (?) (1 samples, 0.21%)</title><rect x="107" y="308" width="2" height="15" fill="rgb(215,80,17)"/><text x="110.00" y="318.50"></text></g><g><title>0x7f802253c99c (?) (1 samples, 0.21%)</title><rect x="107" y="324" width="2" height="15" fill="rgb(219,51,21)"/><text x="110.00" y="334.50"></text></g><g><title>0x7f8022221d39 (?) (1 samples, 0.21%)</title><rect x="107" y="340" width="2" height="15" fill="rgb(230,116,51)"/><text x="110.00" y="350.50"></text></g><g><title>0x7f802221c42d (?) (1 samples, 0.21%)</title><rect x="107" y="356" width="2" height="15" fill="rgb(215,206,39)"/><text x="110.00" y="366.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="109" y="260" width="3" height="15" fill="rgb(224,184,1)"/><text x="112.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.41%)</title><rect x="109" y="212" width="5" height="15" fill="rgb(210,212,40)"/><text x="112.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="109" y="228" width="5" height="15" fill="rgb(250,3,41)"/><text x="112.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="109" y="244" width="5" height="15" fill="rgb(248,66,6)"/><text x="112.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="112" y="260" width="2" height="15" fill="rgb(248,174,38)"/><text x="115.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="112" y="276" width="2" height="15" fill="rgb(231,189,53)"/><text x="115.00" y="286.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="122" y="340" width="2" height="15" fill="rgb(239,101,54)"/><text x="125.00" y="350.50"></text></g><g><title>0x7f80621f8e0e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="348" y="372" width="3" height="15" fill="rgb(215,43,26)"/><text x="351.00" y="382.50"></text></g><g><title>0x7f80621f8e37 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="351" y="372" width="2" height="15" fill="rgb(251,107,25)"/><text x="354.00" y="382.50"></text></g><g><title>0x7f80621f8e4a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="353" y="372" width="3" height="15" fill="rgb(206,55,12)"/><text x="356.00" y="382.50"></text></g><g><title>0x7f80621f8e69 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="356" y="372" width="2" height="15" fill="rgb(233,127,28)"/><text x="359.00" y="382.50"></text></g><g><title>0x7f80621f8e7a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="358" y="372" width="3" height="15" fill="rgb(243,160,23)"/><text x="361.00" y="382.50"></text></g><g><title>0x7f80621f8e86 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="361" y="372" width="2" height="15" fill="rgb(227,144,19)"/><text x="364.00" y="382.50"></text></g><g><title>0x7f80621f8e96 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="363" y="372" width="2" height="15" fill="rgb(216,157,21)"/><text x="366.00" y="382.50"></text></g><g><title>0x7f80621f8ea2 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="365" y="372" width="3" height="15" fill="rgb(243,160,26)"/><text x="368.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 20.87%)</title><rect x="124" y="340" width="246" height="15" fill="rgb(251,169,54)"/><text x="127.00" y="350.50">onnxruntime::ml::LinearClassifie..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 4.96%)</title><rect x="312" y="356" width="58" height="15" fill="rgb(228,4,22)"/><text x="315.00" y="366.50">onnxru..</text></g><g><title>0x7f80621f8ea6 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="368" y="372" width="2" height="15" fill="rgb(250,92,16)"/><text x="371.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.65%)</title><rect x="370" y="340" width="20" height="15" fill="rgb(237,146,29)"/><text x="373.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.65%)</title><rect x="370" y="356" width="20" height="15" fill="rgb(234,122,50)"/><text x="373.00" y="366.50"></text></g><g><title>0x7f8022070930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="404" y="356" width="3" height="15" fill="rgb(224,142,16)"/><text x="407.00" y="366.50"></text></g><g><title>0x7f8051b45d50 (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="414" y="372" width="3" height="15" fill="rgb(247,221,1)"/><text x="417.00" y="382.50"></text></g><g><title>0x7f806207ab12 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="497" y="388" width="3" height="15" fill="rgb(247,5,40)"/><text x="500.00" y="398.50"></text></g><g><title>0x7f806207ad48 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="500" y="388" width="2" height="15" fill="rgb(245,90,19)"/><text x="503.00" y="398.50"></text></g><g><title>0x7f806207ad67 (libc-2.29.so) (2 samples, 0.41%)</title><rect x="502" y="388" width="5" height="15" fill="rgb(225,56,37)"/><text x="505.00" y="398.50"></text></g><g><title>0x7f806207adb4 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="507" y="388" width="2" height="15" fill="rgb(219,223,38)"/><text x="510.00" y="398.50"></text></g><g><title>0x7f806207add2 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="509" y="388" width="3" height="15" fill="rgb(236,105,20)"/><text x="512.00" y="398.50"></text></g><g><title>0x7f806207b050 (libc-2.29.so) (2 samples, 0.41%)</title><rect x="512" y="388" width="5" height="15" fill="rgb(237,143,46)"/><text x="515.00" y="398.50"></text></g><g><title>0x7f806207b368 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="517" y="388" width="2" height="15" fill="rgb(210,133,3)"/><text x="520.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (47 samples, 9.71%)</title><rect x="407" y="356" width="114" height="15" fill="rgb(240,16,8)"/><text x="410.00" y="366.50">operator new (..</text></g><g><title>malloc (libc-2.29.so) (43 samples, 8.88%)</title><rect x="417" y="372" width="104" height="15" fill="rgb(238,216,7)"/><text x="420.00" y="382.50">malloc (libc..</text></g><g><title>0x7f806207b3e0 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="519" y="388" width="2" height="15" fill="rgb(209,66,33)"/><text x="522.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="521" y="356" width="3" height="15" fill="rgb(242,105,43)"/><text x="524.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 34.30%)</title><rect x="122" y="260" width="404" height="15" fill="rgb(247,193,16)"/><text x="125.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 34.30%)</title><rect x="122" y="276" width="404" height="15" fill="rgb(253,183,49)"/><text x="125.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 34.30%)</title><rect x="122" y="292" width="404" height="15" fill="rgb(237,89,32)"/><text x="125.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 34.30%)</title><rect x="122" y="308" width="404" height="15" fill="rgb(227,128,0)"/><text x="125.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 34.30%)</title><rect x="122" y="324" width="404" height="15" fill="rgb(243,177,12)"/><text x="125.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/c..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 11.57%)</title><rect x="390" y="340" width="136" height="15" fill="rgb(232,193,22)"/><text x="393.00" y="350.50">onnxruntime::ml::..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(234,214,46)"/><text x="527.00" y="366.50"></text></g><g><title>0x7f8022071570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="641" y="276" width="2" height="15" fill="rgb(232,173,10)"/><text x="644.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.86%)</title><rect x="643" y="276" width="22" height="15" fill="rgb(207,128,2)"/><text x="646.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (60 samples, 12.40%)</title><rect x="526" y="260" width="147" height="15" fill="rgb(220,86,11)"/><text x="529.00" y="270.50">pybind11::detail::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.62%)</title><rect x="665" y="276" width="8" height="15" fill="rgb(239,69,6)"/><text x="668.00" y="286.50"></text></g><g><title>0x7f8062079945 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="675" y="292" width="3" height="15" fill="rgb(241,146,40)"/><text x="678.00" y="302.50"></text></g><g><title>0x7f8062079971 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="678" y="292" width="2" height="15" fill="rgb(253,72,34)"/><text x="681.00" y="302.50"></text></g><g><title>0x7f806207999b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="680" y="292" width="2" height="15" fill="rgb(224,5,46)"/><text x="683.00" y="302.50"></text></g><g><title>0x7f80620799ff (libc-2.29.so) (2 samples, 0.41%)</title><rect x="682" y="292" width="5" height="15" fill="rgb(223,136,46)"/><text x="685.00" y="302.50"></text></g><g><title>0x7f8062079a4b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="687" y="292" width="3" height="15" fill="rgb(218,1,28)"/><text x="690.00" y="302.50"></text></g><g><title>0x7f8062079d07 (libc-2.29.so) (6 samples, 1.24%)</title><rect x="690" y="292" width="14" height="15" fill="rgb(252,223,51)"/><text x="693.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="704" y="292" width="3" height="15" fill="rgb(252,18,41)"/><text x="707.00" y="302.50"></text></g><g><title>0x7f80220710f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="707" y="308" width="2" height="15" fill="rgb(237,3,13)"/><text x="710.00" y="318.50"></text></g><g><title>0x7f806207999b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="709" y="308" width="3" height="15" fill="rgb(213,205,12)"/><text x="712.00" y="318.50"></text></g><g><title>0x7f80620799ff (libc-2.29.so) (1 samples, 0.21%)</title><rect x="712" y="308" width="2" height="15" fill="rgb(233,154,9)"/><text x="715.00" y="318.50"></text></g><g><title>0x7f8062079a4b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="714" y="308" width="3" height="15" fill="rgb(209,204,23)"/><text x="717.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (279 samples, 57.64%)</title><rect x="39" y="68" width="680" height="15" fill="rgb(226,223,39)"/><text x="42.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (279 samples, 57.64%)</title><rect x="39" y="84" width="680" height="15" fill="rgb(211,10,38)"/><text x="42.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (279 samples, 57.64%)</title><rect x="39" y="100" width="680" height="15" fill="rgb(229,90,16)"/><text x="42.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 52.27%)</title><rect x="102" y="116" width="617" height="15" fill="rgb(252,64,40)"/><text x="105.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 52.27%)</title><rect x="102" y="132" width="617" height="15" fill="rgb(237,124,37)"/><text x="105.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (253 samples, 52.27%)</title><rect x="102" y="148" width="617" height="15" fill="rgb(236,119,22)"/><text x="105.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (252 samples, 52.07%)</title><rect x="105" y="164" width="614" height="15" fill="rgb(249,37,20)"/><text x="108.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (252 samples, 52.07%)</title><rect x="105" y="180" width="614" height="15" fill="rgb(222,190,7)"/><text x="108.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (252 samples, 52.07%)</title><rect x="105" y="196" width="614" height="15" fill="rgb(208,114,54)"/><text x="108.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (248 samples, 51.24%)</title><rect x="114" y="212" width="605" height="15" fill="rgb(223,5,8)"/><text x="117.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (248 samples, 51.24%)</title><rect x="114" y="228" width="605" height="15" fill="rgb(214,197,44)"/><text x="117.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (248 samples, 51.24%)</title><rect x="114" y="244" width="605" height="15" fill="rgb(210,227,14)"/><text x="117.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Infe..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.93%)</title><rect x="673" y="260" width="46" height="15" fill="rgb(208,38,45)"/><text x="676.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.93%)</title><rect x="673" y="276" width="46" height="15" fill="rgb(243,142,6)"/><text x="676.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.03%)</title><rect x="707" y="292" width="12" height="15" fill="rgb(253,82,20)"/><text x="710.00" y="302.50"></text></g><g><title>0x7f8062079d07 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="717" y="308" width="2" height="15" fill="rgb(210,107,35)"/><text x="720.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.21%)</title><rect x="741" y="196" width="2" height="15" fill="rgb(217,135,3)"/><text x="744.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.21%)</title><rect x="753" y="212" width="3" height="15" fill="rgb(212,151,41)"/><text x="756.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.21%)</title><rect x="753" y="228" width="3" height="15" fill="rgb(205,69,50)"/><text x="756.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.83%)</title><rect x="758" y="244" width="10" height="15" fill="rgb(217,17,17)"/><text x="761.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.62%)</title><rect x="760" y="260" width="8" height="15" fill="rgb(231,63,7)"/><text x="763.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.62%)</title><rect x="760" y="276" width="8" height="15" fill="rgb(227,146,38)"/><text x="763.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.62%)</title><rect x="760" y="292" width="8" height="15" fill="rgb(211,172,4)"/><text x="763.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.62%)</title><rect x="760" y="308" width="8" height="15" fill="rgb(238,38,35)"/><text x="763.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.41%)</title><rect x="763" y="324" width="5" height="15" fill="rgb(252,146,29)"/><text x="766.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="765" y="340" width="3" height="15" fill="rgb(236,31,42)"/><text x="768.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="765" y="356" width="3" height="15" fill="rgb(246,211,8)"/><text x="768.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.21%)</title><rect x="765" y="372" width="3" height="15" fill="rgb(248,22,39)"/><text x="768.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="765" y="388" width="3" height="15" fill="rgb(222,130,29)"/><text x="768.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.41%)</title><rect x="768" y="276" width="5" height="15" fill="rgb(253,57,45)"/><text x="771.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (2 samples, 0.41%)</title><rect x="768" y="292" width="5" height="15" fill="rgb(211,199,7)"/><text x="771.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.41%)</title><rect x="768" y="308" width="5" height="15" fill="rgb(214,193,42)"/><text x="771.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.41%)</title><rect x="768" y="324" width="5" height="15" fill="rgb(238,4,15)"/><text x="771.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.41%)</title><rect x="768" y="340" width="5" height="15" fill="rgb(251,195,25)"/><text x="771.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.41%)</title><rect x="768" y="356" width="5" height="15" fill="rgb(251,62,35)"/><text x="771.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.41%)</title><rect x="768" y="372" width="5" height="15" fill="rgb(227,151,5)"/><text x="771.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.41%)</title><rect x="768" y="388" width="5" height="15" fill="rgb(228,146,47)"/><text x="771.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (27 samples, 5.58%)</title><rect x="768" y="244" width="66" height="15" fill="rgb(211,103,46)"/><text x="771.00" y="254.50">numpy_d..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (27 samples, 5.58%)</title><rect x="768" y="260" width="66" height="15" fill="rgb(205,115,41)"/><text x="771.00" y="270.50">dot (&lt;_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 5.17%)</title><rect x="773" y="276" width="61" height="15" fill="rgb(215,188,22)"/><text x="776.00" y="286.50">sgemm_..</text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="834" y="292" width="2" height="15" fill="rgb(223,148,35)"/><text x="837.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="834" y="308" width="2" height="15" fill="rgb(236,149,10)"/><text x="837.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.21%)</title><rect x="834" y="324" width="2" height="15" fill="rgb(205,149,13)"/><text x="837.00" y="334.50"></text></g><g><title>0x7f804d383214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.45%)</title><rect x="836" y="324" width="17" height="15" fill="rgb(209,216,24)"/><text x="839.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (7 samples, 1.45%)</title><rect x="836" y="340" width="17" height="15" fill="rgb(248,179,16)"/><text x="839.00" y="350.50"></text></g><g><title>0x7f80621c51a0 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="851" y="356" width="2" height="15" fill="rgb(248,176,43)"/><text x="854.00" y="366.50"></text></g><g><title>0x7f804d36133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.86%)</title><rect x="836" y="308" width="22" height="15" fill="rgb(237,74,45)"/><text x="839.00" y="318.50">0..</text></g><g><title>0x7f804d383228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.41%)</title><rect x="853" y="324" width="5" height="15" fill="rgb(251,31,30)"/><text x="856.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (45 samples, 9.30%)</title><rect x="756" y="228" width="109" height="15" fill="rgb(226,84,45)"/><text x="759.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.69%)</title><rect x="834" y="244" width="31" height="15" fill="rgb(241,2,37)"/><text x="837.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.69%)</title><rect x="834" y="260" width="31" height="15" fill="rgb(220,130,13)"/><text x="837.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 2.69%)</title><rect x="834" y="276" width="31" height="15" fill="rgb(224,85,23)"/><text x="837.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (12 samples, 2.48%)</title><rect x="836" y="292" width="29" height="15" fill="rgb(240,2,36)"/><text x="839.00" y="302.50">tr..</text></g><g><title>0x7f804d361345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.62%)</title><rect x="858" y="308" width="7" height="15" fill="rgb(221,105,48)"/><text x="861.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="875" y="324" width="2" height="15" fill="rgb(239,45,38)"/><text x="878.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="875" y="340" width="2" height="15" fill="rgb(227,33,41)"/><text x="878.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="875" y="356" width="2" height="15" fill="rgb(215,191,47)"/><text x="878.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.21%)</title><rect x="875" y="372" width="2" height="15" fill="rgb(222,121,7)"/><text x="878.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.21%)</title><rect x="875" y="388" width="2" height="15" fill="rgb(215,177,38)"/><text x="878.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="875" y="404" width="2" height="15" fill="rgb(208,81,37)"/><text x="878.00" y="414.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.21%)</title><rect x="880" y="372" width="2" height="15" fill="rgb(205,137,33)"/><text x="883.00" y="382.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.21%)</title><rect x="882" y="372" width="3" height="15" fill="rgb(240,136,15)"/><text x="885.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="885" y="372" width="2" height="15" fill="rgb(237,82,27)"/><text x="888.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.83%)</title><rect x="887" y="388" width="10" height="15" fill="rgb(231,103,14)"/><text x="890.00" y="398.50"></text></g><g><title>array_sum (methods.c) (11 samples, 2.27%)</title><rect x="875" y="260" width="27" height="15" fill="rgb(237,75,8)"/><text x="878.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 2.27%)</title><rect x="875" y="276" width="27" height="15" fill="rgb(209,76,3)"/><text x="878.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 2.27%)</title><rect x="875" y="292" width="27" height="15" fill="rgb(236,207,23)"/><text x="878.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.27%)</title><rect x="875" y="308" width="27" height="15" fill="rgb(237,154,14)"/><text x="878.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 2.07%)</title><rect x="877" y="324" width="25" height="15" fill="rgb(254,10,40)"/><text x="880.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.86%)</title><rect x="880" y="340" width="22" height="15" fill="rgb(231,64,37)"/><text x="883.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.86%)</title><rect x="880" y="356" width="22" height="15" fill="rgb(247,66,41)"/><text x="883.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.24%)</title><rect x="887" y="372" width="15" height="15" fill="rgb(218,98,16)"/><text x="890.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.41%)</title><rect x="897" y="388" width="5" height="15" fill="rgb(224,173,45)"/><text x="900.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="899" y="404" width="3" height="15" fill="rgb(217,30,23)"/><text x="902.00" y="414.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.21%)</title><rect x="904" y="276" width="3" height="15" fill="rgb(221,191,38)"/><text x="907.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="907" y="308" width="2" height="15" fill="rgb(228,108,43)"/><text x="910.00" y="318.50"></text></g><g><title>_mm_div_ps (xmmintrin.h) (1 samples, 0.21%)</title><rect x="909" y="372" width="3" height="15" fill="rgb(252,109,23)"/><text x="912.00" y="382.50"></text></g><g><title>FLOAT_divide (loops.c.src) (3 samples, 0.62%)</title><rect x="909" y="324" width="7" height="15" fill="rgb(212,142,21)"/><text x="912.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (3 samples, 0.62%)</title><rect x="909" y="340" width="7" height="15" fill="rgb(245,96,47)"/><text x="912.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (3 samples, 0.62%)</title><rect x="909" y="356" width="7" height="15" fill="rgb(217,143,0)"/><text x="912.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.41%)</title><rect x="912" y="372" width="4" height="15" fill="rgb(241,32,43)"/><text x="915.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="916" y="324" width="3" height="15" fill="rgb(208,228,11)"/><text x="919.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.21%)</title><rect x="916" y="340" width="3" height="15" fill="rgb(223,141,40)"/><text x="919.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (82 samples, 16.94%)</title><rect x="721" y="164" width="200" height="15" fill="rgb(231,87,19)"/><text x="724.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (80 samples, 16.53%)</title><rect x="726" y="180" width="195" height="15" fill="rgb(208,205,38)"/><text x="729.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (73 samples, 15.08%)</title><rect x="743" y="196" width="178" height="15" fill="rgb(244,132,7)"/><text x="746.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (68 samples, 14.05%)</title><rect x="756" y="212" width="165" height="15" fill="rgb(223,152,17)"/><text x="759.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 4.75%)</title><rect x="865" y="228" width="56" height="15" fill="rgb(230,57,27)"/><text x="868.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (21 samples, 4.34%)</title><rect x="870" y="244" width="51" height="15" fill="rgb(245,89,45)"/><text x="873.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.65%)</title><rect x="902" y="260" width="19" height="15" fill="rgb(229,123,1)"/><text x="905.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.24%)</title><rect x="907" y="276" width="14" height="15" fill="rgb(218,102,15)"/><text x="910.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.24%)</title><rect x="907" y="292" width="14" height="15" fill="rgb(217,3,21)"/><text x="910.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.03%)</title><rect x="909" y="308" width="12" height="15" fill="rgb(207,6,33)"/><text x="912.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.21%)</title><rect x="919" y="324" width="2" height="15" fill="rgb(229,164,49)"/><text x="922.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="919" y="340" width="2" height="15" fill="rgb(231,113,48)"/><text x="922.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="919" y="356" width="2" height="15" fill="rgb(246,154,42)"/><text x="922.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="919" y="372" width="2" height="15" fill="rgb(251,14,14)"/><text x="922.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (84 samples, 17.36%)</title><rect x="719" y="100" width="205" height="15" fill="rgb(237,145,0)"/><text x="722.00" y="110.50">profile (bench_LogisticReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (83 samples, 17.15%)</title><rect x="721" y="116" width="203" height="15" fill="rgb(208,142,50)"/><text x="724.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (83 samples, 17.15%)</title><rect x="721" y="132" width="203" height="15" fill="rgb(218,112,16)"/><text x="724.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (83 samples, 17.15%)</title><rect x="721" y="148" width="203" height="15" fill="rgb(237,126,37)"/><text x="724.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="921" y="164" width="3" height="15" fill="rgb(222,177,30)"/><text x="924.00" y="174.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (85 samples, 17.56%)</title><rect x="719" y="68" width="207" height="15" fill="rgb(222,12,15)"/><text x="722.00" y="78.50">profile_pyrt (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (85 samples, 17.56%)</title><rect x="719" y="84" width="207" height="15" fill="rgb(219,4,10)"/><text x="722.00" y="94.50">setup_profile (bench_Logist..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.21%)</title><rect x="924" y="100" width="2" height="15" fill="rgb(228,22,39)"/><text x="927.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.21%)</title><rect x="924" y="116" width="2" height="15" fill="rgb(243,61,3)"/><text x="927.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.21%)</title><rect x="924" y="132" width="2" height="15" fill="rgb(220,229,13)"/><text x="927.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.21%)</title><rect x="924" y="148" width="2" height="15" fill="rgb(209,181,20)"/><text x="927.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.21%)</title><rect x="924" y="164" width="2" height="15" fill="rgb(215,68,36)"/><text x="927.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.21%)</title><rect x="924" y="180" width="2" height="15" fill="rgb(249,43,3)"/><text x="927.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.21%)</title><rect x="924" y="196" width="2" height="15" fill="rgb(248,182,48)"/><text x="927.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="212" width="2" height="15" fill="rgb(207,101,36)"/><text x="927.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="228" width="2" height="15" fill="rgb(212,23,53)"/><text x="927.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="244" width="2" height="15" fill="rgb(227,134,1)"/><text x="927.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="924" y="260" width="2" height="15" fill="rgb(222,6,0)"/><text x="927.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="276" width="2" height="15" fill="rgb(208,96,54)"/><text x="927.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.21%)</title><rect x="924" y="292" width="2" height="15" fill="rgb(251,143,40)"/><text x="927.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="308" width="2" height="15" fill="rgb(225,19,23)"/><text x="927.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="324" width="2" height="15" fill="rgb(232,157,22)"/><text x="927.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="340" width="2" height="15" fill="rgb(231,154,27)"/><text x="927.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="924" y="356" width="2" height="15" fill="rgb(237,112,11)"/><text x="927.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="924" y="372" width="2" height="15" fill="rgb(232,79,38)"/><text x="927.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.21%)</title><rect x="924" y="388" width="2" height="15" fill="rgb(230,152,33)"/><text x="927.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.21%)</title><rect x="924" y="404" width="2" height="15" fill="rgb(248,129,51)"/><text x="927.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.21%)</title><rect x="924" y="420" width="2" height="15" fill="rgb(246,211,39)"/><text x="927.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="924" y="436" width="2" height="15" fill="rgb(205,165,18)"/><text x="927.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.21%)</title><rect x="924" y="452" width="2" height="15" fill="rgb(218,63,51)"/><text x="927.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.21%)</title><rect x="924" y="468" width="2" height="15" fill="rgb(209,77,8)"/><text x="927.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.21%)</title><rect x="924" y="484" width="2" height="15" fill="rgb(234,155,42)"/><text x="927.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="926" y="116" width="3" height="15" fill="rgb(224,3,15)"/><text x="929.00" y="126.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.21%)</title><rect x="934" y="180" width="2" height="15" fill="rgb(221,125,11)"/><text x="937.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.21%)</title><rect x="934" y="196" width="2" height="15" fill="rgb(208,41,49)"/><text x="937.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.41%)</title><rect x="936" y="244" width="5" height="15" fill="rgb(235,18,48)"/><text x="939.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.41%)</title><rect x="936" y="260" width="5" height="15" fill="rgb(206,114,0)"/><text x="939.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.41%)</title><rect x="936" y="276" width="5" height="15" fill="rgb(250,117,9)"/><text x="939.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.41%)</title><rect x="936" y="292" width="5" height="15" fill="rgb(215,118,40)"/><text x="939.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.41%)</title><rect x="936" y="308" width="5" height="15" fill="rgb(224,215,42)"/><text x="939.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.21%)</title><rect x="946" y="324" width="2" height="15" fill="rgb(219,11,51)"/><text x="949.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.41%)</title><rect x="946" y="292" width="5" height="15" fill="rgb(226,109,16)"/><text x="949.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.41%)</title><rect x="946" y="308" width="5" height="15" fill="rgb(242,51,5)"/><text x="949.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(232,161,13)"/><text x="951.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="948" y="340" width="3" height="15" fill="rgb(239,121,38)"/><text x="951.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="948" y="356" width="3" height="15" fill="rgb(254,7,43)"/><text x="951.00" y="366.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.48%)</title><rect x="936" y="180" width="29" height="15" fill="rgb(222,114,22)"/><text x="939.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 2.48%)</title><rect x="936" y="196" width="29" height="15" fill="rgb(250,152,50)"/><text x="939.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.48%)</title><rect x="936" y="212" width="29" height="15" fill="rgb(222,176,34)"/><text x="939.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.48%)</title><rect x="936" y="228" width="29" height="15" fill="rgb(239,161,11)"/><text x="939.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 2.07%)</title><rect x="941" y="244" width="24" height="15" fill="rgb(210,27,39)"/><text x="944.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.86%)</title><rect x="943" y="260" width="22" height="15" fill="rgb(209,66,16)"/><text x="946.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.86%)</title><rect x="943" y="276" width="22" height="15" fill="rgb(233,201,13)"/><text x="946.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.24%)</title><rect x="951" y="292" width="14" height="15" fill="rgb(250,210,36)"/><text x="954.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 1.03%)</title><rect x="953" y="308" width="12" height="15" fill="rgb(209,187,53)"/><text x="956.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="963" y="324" width="2" height="15" fill="rgb(224,186,20)"/><text x="966.00" y="334.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.21%)</title><rect x="965" y="196" width="3" height="15" fill="rgb(216,31,54)"/><text x="968.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="965" y="212" width="3" height="15" fill="rgb(223,21,28)"/><text x="968.00" y="222.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.21%)</title><rect x="965" y="228" width="3" height="15" fill="rgb(245,74,18)"/><text x="968.00" y="238.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.21%)</title><rect x="965" y="244" width="3" height="15" fill="rgb(246,105,13)"/><text x="968.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="968" y="244" width="2" height="15" fill="rgb(212,228,27)"/><text x="971.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.41%)</title><rect x="970" y="276" width="5" height="15" fill="rgb(218,91,40)"/><text x="973.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.41%)</title><rect x="970" y="292" width="5" height="15" fill="rgb(253,18,36)"/><text x="973.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.41%)</title><rect x="970" y="308" width="5" height="15" fill="rgb(242,164,8)"/><text x="973.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.41%)</title><rect x="970" y="324" width="5" height="15" fill="rgb(231,54,37)"/><text x="973.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="975" y="276" width="2" height="15" fill="rgb(239,64,41)"/><text x="978.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.21%)</title><rect x="975" y="292" width="2" height="15" fill="rgb(224,168,31)"/><text x="978.00" y="302.50"></text></g><g><title>array_add (number.c) (5 samples, 1.03%)</title><rect x="968" y="196" width="12" height="15" fill="rgb(247,151,30)"/><text x="971.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.03%)</title><rect x="968" y="212" width="12" height="15" fill="rgb(221,38,15)"/><text x="971.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.03%)</title><rect x="968" y="228" width="12" height="15" fill="rgb(220,78,17)"/><text x="971.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.83%)</title><rect x="970" y="244" width="10" height="15" fill="rgb(236,92,48)"/><text x="973.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.83%)</title><rect x="970" y="260" width="10" height="15" fill="rgb(241,79,7)"/><text x="973.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.21%)</title><rect x="977" y="276" width="3" height="15" fill="rgb(244,63,5)"/><text x="980.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="977" y="292" width="3" height="15" fill="rgb(208,174,38)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="977" y="308" width="3" height="15" fill="rgb(248,214,30)"/><text x="980.00" y="318.50"></text></g><g><title>0x7f8062099d50 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="977" y="324" width="3" height="15" fill="rgb(219,190,34)"/><text x="980.00" y="334.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.21%)</title><rect x="987" y="212" width="3" height="15" fill="rgb(226,71,32)"/><text x="990.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.24%)</title><rect x="990" y="212" width="14" height="15" fill="rgb(214,217,24)"/><text x="993.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.41%)</title><rect x="999" y="228" width="5" height="15" fill="rgb(210,108,16)"/><text x="1002.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.21%)</title><rect x="1004" y="212" width="3" height="15" fill="rgb(238,205,34)"/><text x="1007.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.41%)</title><rect x="1007" y="212" width="5" height="15" fill="rgb(246,70,9)"/><text x="1010.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.41%)</title><rect x="1007" y="228" width="5" height="15" fill="rgb(229,198,36)"/><text x="1010.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (15 samples, 3.10%)</title><rect x="980" y="196" width="36" height="15" fill="rgb(216,21,43)"/><text x="983.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.41%)</title><rect x="1012" y="212" width="4" height="15" fill="rgb(236,73,43)"/><text x="1015.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.41%)</title><rect x="1012" y="228" width="4" height="15" fill="rgb(229,169,11)"/><text x="1015.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.62%)</title><rect x="1016" y="196" width="8" height="15" fill="rgb(240,120,28)"/><text x="1019.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.41%)</title><rect x="1019" y="212" width="5" height="15" fill="rgb(214,145,24)"/><text x="1022.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="1024" y="212" width="2" height="15" fill="rgb(218,119,44)"/><text x="1027.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 2.07%)</title><rect x="1026" y="212" width="25" height="15" fill="rgb(207,90,19)"/><text x="1029.00" y="222.50">d..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="1053" y="308" width="2" height="15" fill="rgb(206,65,28)"/><text x="1056.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (8 samples, 1.65%)</title><rect x="1051" y="260" width="19" height="15" fill="rgb(250,219,15)"/><text x="1054.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.65%)</title><rect x="1051" y="276" width="19" height="15" fill="rgb(248,0,36)"/><text x="1054.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.65%)</title><rect x="1051" y="292" width="19" height="15" fill="rgb(212,170,16)"/><text x="1054.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.24%)</title><rect x="1055" y="308" width="15" height="15" fill="rgb(229,7,24)"/><text x="1058.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (13 samples, 2.69%)</title><rect x="1070" y="260" width="32" height="15" fill="rgb(249,175,22)"/><text x="1073.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (13 samples, 2.69%)</title><rect x="1070" y="276" width="32" height="15" fill="rgb(244,180,42)"/><text x="1073.00" y="286.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (13 samples, 2.69%)</title><rect x="1070" y="292" width="32" height="15" fill="rgb(228,90,51)"/><text x="1073.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (13 samples, 2.69%)</title><rect x="1070" y="308" width="32" height="15" fill="rgb(207,225,46)"/><text x="1073.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (13 samples, 2.69%)</title><rect x="1070" y="324" width="32" height="15" fill="rgb(213,145,20)"/><text x="1073.00" y="334.50">_a..</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (57 samples, 11.78%)</title><rect x="965" y="180" width="139" height="15" fill="rgb(249,200,4)"/><text x="968.00" y="190.50">decision_function..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (33 samples, 6.82%)</title><rect x="1024" y="196" width="80" height="15" fill="rgb(254,76,5)"/><text x="1027.00" y="206.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 4.55%)</title><rect x="1051" y="212" width="53" height="15" fill="rgb(225,165,40)"/><text x="1054.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 4.55%)</title><rect x="1051" y="228" width="53" height="15" fill="rgb(205,129,19)"/><text x="1054.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 4.55%)</title><rect x="1051" y="244" width="53" height="15" fill="rgb(232,223,36)"/><text x="1054.00" y="254.50">PyUFu..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1102" y="260" width="2" height="15" fill="rgb(206,39,1)"/><text x="1105.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="1104" y="196" width="3" height="15" fill="rgb(228,168,26)"/><text x="1107.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="1104" y="212" width="3" height="15" fill="rgb(236,189,0)"/><text x="1107.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="1104" y="228" width="3" height="15" fill="rgb(247,70,32)"/><text x="1107.00" y="238.50"></text></g><g><title>0x7f806129ac90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1109" y="212" width="2" height="15" fill="rgb(248,22,27)"/><text x="1112.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1111" y="212" width="3" height="15" fill="rgb(211,225,50)"/><text x="1114.00" y="222.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.21%)</title><rect x="1114" y="292" width="2" height="15" fill="rgb(248,108,48)"/><text x="1117.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.41%)</title><rect x="1114" y="228" width="5" height="15" fill="rgb(214,165,46)"/><text x="1117.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.41%)</title><rect x="1114" y="244" width="5" height="15" fill="rgb(211,122,17)"/><text x="1117.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.41%)</title><rect x="1114" y="260" width="5" height="15" fill="rgb(206,114,19)"/><text x="1117.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.41%)</title><rect x="1114" y="276" width="5" height="15" fill="rgb(208,131,36)"/><text x="1117.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.21%)</title><rect x="1116" y="292" width="3" height="15" fill="rgb(230,105,52)"/><text x="1119.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 1.03%)</title><rect x="1119" y="244" width="12" height="15" fill="rgb(231,228,4)"/><text x="1122.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 1.03%)</title><rect x="1119" y="260" width="12" height="15" fill="rgb(241,219,36)"/><text x="1122.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 1.03%)</title><rect x="1119" y="276" width="12" height="15" fill="rgb(230,0,32)"/><text x="1122.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 1.03%)</title><rect x="1119" y="292" width="12" height="15" fill="rgb(213,222,28)"/><text x="1122.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1131" y="244" width="2" height="15" fill="rgb(218,53,39)"/><text x="1134.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1131" y="260" width="2" height="15" fill="rgb(213,77,4)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="1131" y="276" width="2" height="15" fill="rgb(246,112,52)"/><text x="1134.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.86%)</title><rect x="1119" y="228" width="22" height="15" fill="rgb(236,120,30)"/><text x="1122.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.62%)</title><rect x="1133" y="244" width="8" height="15" fill="rgb(213,17,23)"/><text x="1136.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.62%)</title><rect x="1133" y="260" width="8" height="15" fill="rgb(250,226,26)"/><text x="1136.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.62%)</title><rect x="1133" y="276" width="8" height="15" fill="rgb(220,121,28)"/><text x="1136.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.41%)</title><rect x="1136" y="292" width="5" height="15" fill="rgb(226,147,41)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f806224bbeb (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(208,77,49)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f804d383265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.03%)</title><rect x="1141" y="260" width="12" height="15" fill="rgb(215,79,6)"/><text x="1144.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (4 samples, 0.83%)</title><rect x="1143" y="276" width="10" height="15" fill="rgb(230,97,50)"/><text x="1146.00" y="286.50"></text></g><g><title>0x7f806224bc3e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1150" y="292" width="3" height="15" fill="rgb(243,6,11)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7f804d383275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.62%)</title><rect x="1153" y="260" width="7" height="15" fill="rgb(245,56,47)"/><text x="1156.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (101 samples, 20.87%)</title><rect x="929" y="164" width="246" height="15" fill="rgb(219,54,19)"/><text x="932.00" y="174.50">_predict_proba_lr (sklearn/linea..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 5.99%)</title><rect x="1104" y="180" width="71" height="15" fill="rgb(221,12,54)"/><text x="1107.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 5.79%)</title><rect x="1107" y="196" width="68" height="15" fill="rgb(254,46,5)"/><text x="1110.00" y="206.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (25 samples, 5.17%)</title><rect x="1114" y="212" width="61" height="15" fill="rgb(217,47,11)"/><text x="1117.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (14 samples, 2.89%)</title><rect x="1141" y="228" width="34" height="15" fill="rgb(236,117,30)"/><text x="1144.00" y="238.50">tr..</text></g><g><title>0x7f804d3629dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.89%)</title><rect x="1141" y="244" width="34" height="15" fill="rgb(235,0,20)"/><text x="1144.00" y="254.50">0x..</text></g><g><title>0x7f804d383279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.24%)</title><rect x="1160" y="260" width="15" height="15" fill="rgb(254,153,25)"/><text x="1163.00" y="270.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.21%)</title><rect x="1182" y="196" width="3" height="15" fill="rgb(227,204,4)"/><text x="1185.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.03%)</title><rect x="1175" y="180" width="12" height="15" fill="rgb(229,223,40)"/><text x="1178.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.21%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(241,127,50)"/><text x="1188.00" y="206.50"></text></g><g><title>all (484 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,174,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (484 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(227,122,25)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (108 samples, 22.31%)</title><rect x="926" y="68" width="264" height="15" fill="rgb(210,189,32)"/><text x="929.00" y="78.50">profile_skl (bench_LogisticRegressi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (108 samples, 22.31%)</title><rect x="926" y="84" width="264" height="15" fill="rgb(253,119,11)"/><text x="929.00" y="94.50">setup_profile (bench_LogisticRegres..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py) (108 samples, 22.31%)</title><rect x="926" y="100" width="264" height="15" fill="rgb(211,61,43)"/><text x="929.00" y="110.50">profile (bench_LogisticRegression_l..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 22.11%)</title><rect x="929" y="116" width="261" height="15" fill="rgb(252,133,28)"/><text x="932.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 22.11%)</title><rect x="929" y="132" width="261" height="15" fill="rgb(226,85,40)"/><text x="932.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (107 samples, 22.11%)</title><rect x="929" y="148" width="261" height="15" fill="rgb(244,20,10)"/><text x="932.00" y="158.50">predict_proba (sklearn/linear_mode..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.24%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(248,94,28)"/><text x="1178.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.21%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(243,183,44)"/><text x="1190.00" y="190.50"></text></g></g></svg>