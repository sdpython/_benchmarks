<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(220,97,10)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(242,76,41)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:69) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(237,55,29)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(220,31,21)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(221,146,48)"/><text x="13.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(251,195,16)"/><text x="13.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.19%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(254,11,18)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.19%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(224,189,17)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.19%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(212,41,50)"/><text x="13.00" y="302.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.19%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(208,134,45)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:31) (2 samples, 0.38%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(220,220,22)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:11) (2 samples, 0.38%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(235,16,11)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (2 samples, 0.38%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(241,209,22)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.38%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(225,9,42)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.38%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(254,74,25)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.38%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(217,95,6)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.38%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(239,180,43)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.19%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(247,225,23)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(252,79,50)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(252,180,44)"/><text x="15.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(213,17,49)"/><text x="15.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(228,32,14)"/><text x="15.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.19%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(241,29,53)"/><text x="15.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.19%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(205,176,46)"/><text x="15.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.19%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(217,171,5)"/><text x="15.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2561) (1 samples, 0.19%)</title><rect x="12" y="292" width="2" height="15" fill="rgb(245,207,14)"/><text x="15.00" y="302.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.19%)</title><rect x="12" y="308" width="2" height="15" fill="rgb(254,75,4)"/><text x="15.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="12" y="324" width="2" height="15" fill="rgb(247,81,46)"/><text x="15.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="12" y="340" width="2" height="15" fill="rgb(235,149,34)"/><text x="15.00" y="350.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(252,114,40)"/><text x="17.00" y="222.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:28) (2 samples, 0.38%)</title><rect x="14" y="84" width="5" height="15" fill="rgb(251,187,13)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.38%)</title><rect x="14" y="100" width="5" height="15" fill="rgb(210,174,39)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.38%)</title><rect x="14" y="116" width="5" height="15" fill="rgb(254,161,29)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.38%)</title><rect x="14" y="132" width="5" height="15" fill="rgb(239,116,30)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.38%)</title><rect x="14" y="148" width="5" height="15" fill="rgb(230,85,49)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.38%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(211,29,29)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.38%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(240,187,19)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (2 samples, 0.38%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(206,158,17)"/><text x="17.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.19%)</title><rect x="16" y="212" width="3" height="15" fill="rgb(247,26,36)"/><text x="19.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.19%)</title><rect x="16" y="228" width="3" height="15" fill="rgb(242,86,28)"/><text x="19.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="16" y="244" width="3" height="15" fill="rgb(221,20,9)"/><text x="19.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="16" y="260" width="3" height="15" fill="rgb(207,95,46)"/><text x="19.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="16" y="276" width="3" height="15" fill="rgb(223,194,40)"/><text x="19.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(233,177,49)"/><text x="19.00" y="302.50"></text></g><g><title>google::protobuf::internal::InternalMetadataWithArenaBase&lt;google::protobuf::UnknownFieldSet, google::protobuf::internal::InternalMetadataWithArena&gt;::mutable_unknown_fields_slow (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(211,29,33)"/><text x="19.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(220,104,48)"/><text x="19.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (1 samples, 0.19%)</title><rect x="19" y="212" width="2" height="15" fill="rgb(219,134,15)"/><text x="22.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.19%)</title><rect x="19" y="228" width="2" height="15" fill="rgb(225,66,27)"/><text x="22.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.19%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(233,65,12)"/><text x="24.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(217,9,42)"/><text x="24.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(240,222,16)"/><text x="26.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="25" y="276" width="3" height="15" fill="rgb(249,227,49)"/><text x="28.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.38%)</title><rect x="25" y="244" width="5" height="15" fill="rgb(254,11,36)"/><text x="28.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.38%)</title><rect x="25" y="260" width="5" height="15" fill="rgb(206,95,52)"/><text x="28.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.19%)</title><rect x="28" y="276" width="2" height="15" fill="rgb(246,110,29)"/><text x="31.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.19%)</title><rect x="30" y="244" width="2" height="15" fill="rgb(206,155,51)"/><text x="33.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(238,37,3)"/><text x="35.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="37" y="260" width="2" height="15" fill="rgb(212,166,18)"/><text x="40.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.19%)</title><rect x="39" y="260" width="2" height="15" fill="rgb(236,29,2)"/><text x="42.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (11 samples, 2.10%)</title><rect x="21" y="212" width="25" height="15" fill="rgb(248,155,12)"/><text x="24.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 2.10%)</title><rect x="21" y="228" width="25" height="15" fill="rgb(230,131,42)"/><text x="24.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.96%)</title><rect x="34" y="244" width="12" height="15" fill="rgb(207,125,42)"/><text x="37.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.38%)</title><rect x="41" y="260" width="5" height="15" fill="rgb(237,185,22)"/><text x="44.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.38%)</title><rect x="41" y="276" width="5" height="15" fill="rgb(222,142,49)"/><text x="44.00" y="286.50"></text></g><g><title>0x7f14a2394d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="50" y="292" width="2" height="15" fill="rgb(213,211,4)"/><text x="53.00" y="302.50"></text></g><g><title>0x7f14a239462c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="50" y="308" width="2" height="15" fill="rgb(250,109,27)"/><text x="53.00" y="318.50"></text></g><g><title>0x7f14a23b02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="50" y="276" width="5" height="15" fill="rgb(241,121,45)"/><text x="53.00" y="286.50"></text></g><g><title>0x7f14a2394eea (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="52" y="292" width="3" height="15" fill="rgb(248,45,37)"/><text x="55.00" y="302.50"></text></g><g><title>0x7f14a23a1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="50" y="244" width="7" height="15" fill="rgb(224,86,0)"/><text x="53.00" y="254.50"></text></g><g><title>0x7f14a23b1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="50" y="260" width="7" height="15" fill="rgb(235,49,53)"/><text x="53.00" y="270.50"></text></g><g><title>0x7f14a23b0c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="55" y="276" width="2" height="15" fill="rgb(250,100,17)"/><text x="58.00" y="286.50"></text></g><g><title>0x7f14a23885f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="55" y="292" width="2" height="15" fill="rgb(248,100,7)"/><text x="58.00" y="302.50"></text></g><g><title>0x7f14a2387fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="55" y="308" width="2" height="15" fill="rgb(246,144,17)"/><text x="58.00" y="318.50"></text></g><g><title>0x7f14a2387a02 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="55" y="324" width="2" height="15" fill="rgb(242,65,18)"/><text x="58.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (6 samples, 1.15%)</title><rect x="46" y="212" width="13" height="15" fill="rgb(232,135,45)"/><text x="49.00" y="222.50"></text></g><g><title>0x7f14a23a2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="50" y="228" width="9" height="15" fill="rgb(216,81,16)"/><text x="53.00" y="238.50"></text></g><g><title>0x7f14a23a205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(233,117,37)"/><text x="60.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.19%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(247,199,17)"/><text x="60.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.19%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(246,4,51)"/><text x="60.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.19%)</title><rect x="57" y="292" width="2" height="15" fill="rgb(245,150,50)"/><text x="60.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="57" y="308" width="2" height="15" fill="rgb(234,83,20)"/><text x="60.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="64" y="356" width="2" height="15" fill="rgb(253,148,4)"/><text x="67.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.38%)</title><rect x="64" y="276" width="4" height="15" fill="rgb(243,161,17)"/><text x="67.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.38%)</title><rect x="64" y="292" width="4" height="15" fill="rgb(251,199,40)"/><text x="67.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.38%)</title><rect x="64" y="308" width="4" height="15" fill="rgb(242,203,49)"/><text x="67.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.38%)</title><rect x="64" y="324" width="4" height="15" fill="rgb(220,192,42)"/><text x="67.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="64" y="340" width="4" height="15" fill="rgb(254,216,4)"/><text x="67.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="66" y="356" width="2" height="15" fill="rgb(226,155,17)"/><text x="69.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (5 samples, 0.96%)</title><rect x="59" y="212" width="11" height="15" fill="rgb(213,48,19)"/><text x="62.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (3 samples, 0.57%)</title><rect x="64" y="228" width="6" height="15" fill="rgb(238,217,43)"/><text x="67.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 0.57%)</title><rect x="64" y="244" width="6" height="15" fill="rgb(247,38,54)"/><text x="67.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.57%)</title><rect x="64" y="260" width="6" height="15" fill="rgb(251,187,11)"/><text x="67.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="68" y="276" width="2" height="15" fill="rgb(244,51,41)"/><text x="71.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="68" y="292" width="2" height="15" fill="rgb(239,17,52)"/><text x="71.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="68" y="308" width="2" height="15" fill="rgb(253,127,0)"/><text x="71.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="68" y="324" width="2" height="15" fill="rgb(244,99,14)"/><text x="71.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="68" y="340" width="2" height="15" fill="rgb(228,196,3)"/><text x="71.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1456) (1 samples, 0.19%)</title><rect x="68" y="356" width="2" height="15" fill="rgb(227,159,9)"/><text x="71.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="70" y="244" width="3" height="15" fill="rgb(212,73,15)"/><text x="73.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.19%)</title><rect x="70" y="260" width="3" height="15" fill="rgb(237,76,9)"/><text x="73.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.38%)</title><rect x="70" y="212" width="5" height="15" fill="rgb(213,209,26)"/><text x="73.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.38%)</title><rect x="70" y="228" width="5" height="15" fill="rgb(246,130,1)"/><text x="73.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="73" y="244" width="2" height="15" fill="rgb(243,205,19)"/><text x="76.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.19%)</title><rect x="73" y="260" width="2" height="15" fill="rgb(213,145,0)"/><text x="76.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="75" y="244" width="2" height="15" fill="rgb(219,184,22)"/><text x="78.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="75" y="260" width="2" height="15" fill="rgb(225,126,21)"/><text x="78.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1637) (1 samples, 0.19%)</title><rect x="75" y="276" width="2" height="15" fill="rgb(248,3,31)"/><text x="78.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3184) (1 samples, 0.19%)</title><rect x="77" y="244" width="2" height="15" fill="rgb(233,10,52)"/><text x="80.00" y="254.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (28 samples, 5.35%)</title><rect x="19" y="196" width="63" height="15" fill="rgb(243,113,42)"/><text x="22.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (3 samples, 0.57%)</title><rect x="75" y="212" width="7" height="15" fill="rgb(220,215,24)"/><text x="78.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="75" y="228" width="7" height="15" fill="rgb(239,13,1)"/><text x="78.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(231,33,33)"/><text x="82.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(224,156,23)"/><text x="82.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="79" y="276" width="3" height="15" fill="rgb(244,117,53)"/><text x="82.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:760) (1 samples, 0.19%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(232,87,12)"/><text x="82.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.19%)</title><rect x="84" y="212" width="2" height="15" fill="rgb(254,23,53)"/><text x="87.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="86" y="228" width="2" height="15" fill="rgb(224,131,35)"/><text x="89.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(207,133,10)"/><text x="89.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="86" y="260" width="2" height="15" fill="rgb(207,152,52)"/><text x="89.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="86" y="276" width="2" height="15" fill="rgb(235,51,4)"/><text x="89.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="86" y="292" width="2" height="15" fill="rgb(253,88,15)"/><text x="89.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.38%)</title><rect x="91" y="324" width="4" height="15" fill="rgb(206,188,16)"/><text x="94.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="93" y="340" width="2" height="15" fill="rgb(247,79,52)"/><text x="96.00" y="350.50"></text></g><g><title>0x7f14c8974e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="93" y="356" width="2" height="15" fill="rgb(242,160,36)"/><text x="96.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.19%)</title><rect x="95" y="356" width="2" height="15" fill="rgb(248,211,27)"/><text x="98.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.19%)</title><rect x="95" y="372" width="2" height="15" fill="rgb(237,93,52)"/><text x="98.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.19%)</title><rect x="95" y="388" width="2" height="15" fill="rgb(235,169,37)"/><text x="98.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="95" y="404" width="2" height="15" fill="rgb(206,177,49)"/><text x="98.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="95" y="420" width="2" height="15" fill="rgb(211,129,38)"/><text x="98.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.38%)</title><rect x="95" y="324" width="5" height="15" fill="rgb(228,169,20)"/><text x="98.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.38%)</title><rect x="95" y="340" width="5" height="15" fill="rgb(223,77,0)"/><text x="98.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="97" y="356" width="3" height="15" fill="rgb(230,181,23)"/><text x="100.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="97" y="372" width="3" height="15" fill="rgb(223,145,42)"/><text x="100.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.96%)</title><rect x="91" y="308" width="11" height="15" fill="rgb(219,103,14)"/><text x="94.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.19%)</title><rect x="100" y="324" width="2" height="15" fill="rgb(244,210,43)"/><text x="103.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="100" y="340" width="2" height="15" fill="rgb(241,94,41)"/><text x="103.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="100" y="356" width="2" height="15" fill="rgb(238,204,39)"/><text x="103.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="100" y="372" width="2" height="15" fill="rgb(219,31,39)"/><text x="103.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.19%)</title><rect x="100" y="388" width="2" height="15" fill="rgb(223,182,52)"/><text x="103.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.19%)</title><rect x="100" y="404" width="2" height="15" fill="rgb(205,9,8)"/><text x="103.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="100" y="420" width="2" height="15" fill="rgb(227,92,51)"/><text x="103.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.19%)</title><rect x="100" y="436" width="2" height="15" fill="rgb(232,94,38)"/><text x="103.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.38%)</title><rect x="102" y="324" width="5" height="15" fill="rgb(223,184,14)"/><text x="105.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.38%)</title><rect x="102" y="340" width="5" height="15" fill="rgb(239,193,6)"/><text x="105.00" y="350.50"></text></g><g><title>0x7f14c8974e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(229,23,38)"/><text x="107.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.57%)</title><rect x="107" y="324" width="6" height="15" fill="rgb(233,68,12)"/><text x="110.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="111" y="340" width="2" height="15" fill="rgb(253,166,21)"/><text x="114.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="111" y="356" width="2" height="15" fill="rgb(249,31,37)"/><text x="114.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="111" y="372" width="2" height="15" fill="rgb(226,103,33)"/><text x="114.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="111" y="388" width="2" height="15" fill="rgb(226,57,5)"/><text x="114.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="111" y="404" width="2" height="15" fill="rgb(215,151,49)"/><text x="114.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.19%)</title><rect x="111" y="420" width="2" height="15" fill="rgb(216,31,50)"/><text x="114.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="116" y="356" width="2" height="15" fill="rgb(232,32,33)"/><text x="119.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="116" y="372" width="2" height="15" fill="rgb(252,112,2)"/><text x="119.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="116" y="388" width="2" height="15" fill="rgb(233,195,17)"/><text x="119.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.19%)</title><rect x="116" y="404" width="2" height="15" fill="rgb(209,105,36)"/><text x="119.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 1.53%)</title><rect x="102" y="308" width="18" height="15" fill="rgb(235,205,33)"/><text x="105.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.57%)</title><rect x="113" y="324" width="7" height="15" fill="rgb(231,15,47)"/><text x="116.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="116" y="340" width="4" height="15" fill="rgb(238,93,19)"/><text x="119.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.19%)</title><rect x="118" y="356" width="2" height="15" fill="rgb(214,215,26)"/><text x="121.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="118" y="372" width="2" height="15" fill="rgb(208,43,4)"/><text x="121.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="118" y="388" width="2" height="15" fill="rgb(245,225,1)"/><text x="121.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="118" y="404" width="2" height="15" fill="rgb(222,43,17)"/><text x="121.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="125" y="340" width="2" height="15" fill="rgb(210,153,49)"/><text x="128.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="125" y="356" width="2" height="15" fill="rgb(237,119,3)"/><text x="128.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="125" y="372" width="2" height="15" fill="rgb(253,0,15)"/><text x="128.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="125" y="388" width="2" height="15" fill="rgb(245,125,21)"/><text x="128.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="125" y="404" width="2" height="15" fill="rgb(252,121,9)"/><text x="128.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="125" y="420" width="2" height="15" fill="rgb(210,144,34)"/><text x="128.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (21 samples, 4.02%)</title><rect x="82" y="196" width="47" height="15" fill="rgb(245,212,11)"/><text x="85.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (19 samples, 3.63%)</title><rect x="86" y="212" width="43" height="15" fill="rgb(253,5,40)"/><text x="89.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 3.44%)</title><rect x="88" y="228" width="41" height="15" fill="rgb(223,214,21)"/><text x="91.00" y="238.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (18 samples, 3.44%)</title><rect x="88" y="244" width="41" height="15" fill="rgb(254,83,9)"/><text x="91.00" y="254.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (17 samples, 3.25%)</title><rect x="91" y="260" width="38" height="15" fill="rgb(251,80,32)"/><text x="94.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (17 samples, 3.25%)</title><rect x="91" y="276" width="38" height="15" fill="rgb(219,42,45)"/><text x="94.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 3.25%)</title><rect x="91" y="292" width="38" height="15" fill="rgb(238,122,1)"/><text x="94.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (4 samples, 0.76%)</title><rect x="120" y="308" width="9" height="15" fill="rgb(240,56,37)"/><text x="123.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (3 samples, 0.57%)</title><rect x="122" y="324" width="7" height="15" fill="rgb(241,187,31)"/><text x="125.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="127" y="340" width="2" height="15" fill="rgb(213,212,5)"/><text x="130.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="127" y="356" width="2" height="15" fill="rgb(226,27,7)"/><text x="130.00" y="366.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.19%)</title><rect x="131" y="212" width="3" height="15" fill="rgb(209,181,26)"/><text x="134.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="131" y="228" width="3" height="15" fill="rgb(223,170,35)"/><text x="134.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="131" y="244" width="3" height="15" fill="rgb(253,103,49)"/><text x="134.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.19%)</title><rect x="131" y="260" width="3" height="15" fill="rgb(219,195,23)"/><text x="134.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.19%)</title><rect x="134" y="212" width="2" height="15" fill="rgb(213,201,14)"/><text x="137.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="134" y="228" width="2" height="15" fill="rgb(208,56,0)"/><text x="137.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="134" y="244" width="2" height="15" fill="rgb(231,205,35)"/><text x="137.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="134" y="260" width="2" height="15" fill="rgb(230,139,17)"/><text x="137.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.19%)</title><rect x="134" y="276" width="2" height="15" fill="rgb(245,200,22)"/><text x="137.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="136" y="260" width="2" height="15" fill="rgb(226,58,28)"/><text x="139.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(220,81,27)"/><text x="139.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(244,225,44)"/><text x="139.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="136" y="308" width="2" height="15" fill="rgb(242,224,35)"/><text x="139.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="136" y="324" width="2" height="15" fill="rgb(239,218,5)"/><text x="139.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="136" y="340" width="2" height="15" fill="rgb(254,133,1)"/><text x="139.00" y="350.50"></text></g><g><title>0x7f14c8974e6d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="136" y="356" width="2" height="15" fill="rgb(245,8,34)"/><text x="139.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="138" y="308" width="2" height="15" fill="rgb(240,15,33)"/><text x="141.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="138" y="324" width="2" height="15" fill="rgb(225,132,54)"/><text x="141.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="138" y="340" width="2" height="15" fill="rgb(243,196,32)"/><text x="141.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="138" y="356" width="2" height="15" fill="rgb(234,179,37)"/><text x="141.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="140" y="324" width="3" height="15" fill="rgb(243,27,34)"/><text x="143.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.19%)</title><rect x="140" y="340" width="3" height="15" fill="rgb(249,38,38)"/><text x="143.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.38%)</title><rect x="140" y="308" width="5" height="15" fill="rgb(229,112,4)"/><text x="143.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="143" y="324" width="2" height="15" fill="rgb(247,21,37)"/><text x="146.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.19%)</title><rect x="143" y="340" width="2" height="15" fill="rgb(247,216,50)"/><text x="146.00" y="350.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (57 samples, 10.90%)</title><rect x="19" y="100" width="128" height="15" fill="rgb(211,24,25)"/><text x="22.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (57 samples, 10.90%)</title><rect x="19" y="116" width="128" height="15" fill="rgb(229,166,2)"/><text x="22.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (57 samples, 10.90%)</title><rect x="19" y="132" width="128" height="15" fill="rgb(239,92,10)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (57 samples, 10.90%)</title><rect x="19" y="148" width="128" height="15" fill="rgb(206,53,27)"/><text x="22.00" y="158.50">predict_proba (s..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (57 samples, 10.90%)</title><rect x="19" y="164" width="128" height="15" fill="rgb(211,76,31)"/><text x="22.00" y="174.50">decision_functio..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (57 samples, 10.90%)</title><rect x="19" y="180" width="128" height="15" fill="rgb(252,73,31)"/><text x="22.00" y="190.50">&lt;genexpr&gt; (sklea..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (8 samples, 1.53%)</title><rect x="129" y="196" width="18" height="15" fill="rgb(254,194,2)"/><text x="132.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.96%)</title><rect x="136" y="212" width="11" height="15" fill="rgb(246,83,32)"/><text x="139.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.96%)</title><rect x="136" y="228" width="11" height="15" fill="rgb(240,9,24)"/><text x="139.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.96%)</title><rect x="136" y="244" width="11" height="15" fill="rgb(206,20,50)"/><text x="139.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.76%)</title><rect x="138" y="260" width="9" height="15" fill="rgb(213,175,49)"/><text x="141.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.76%)</title><rect x="138" y="276" width="9" height="15" fill="rgb(238,93,14)"/><text x="141.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.76%)</title><rect x="138" y="292" width="9" height="15" fill="rgb(229,217,25)"/><text x="141.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="145" y="308" width="2" height="15" fill="rgb(228,108,52)"/><text x="148.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="145" y="324" width="2" height="15" fill="rgb(239,144,35)"/><text x="148.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.19%)</title><rect x="145" y="340" width="2" height="15" fill="rgb(224,54,36)"/><text x="148.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="147" y="180" width="2" height="15" fill="rgb(251,77,21)"/><text x="150.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.19%)</title><rect x="147" y="196" width="2" height="15" fill="rgb(206,41,42)"/><text x="150.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="149" y="180" width="3" height="15" fill="rgb(229,18,36)"/><text x="152.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.19%)</title><rect x="149" y="196" width="3" height="15" fill="rgb(206,12,6)"/><text x="152.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (3 samples, 0.57%)</title><rect x="147" y="148" width="7" height="15" fill="rgb(212,23,52)"/><text x="150.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (3 samples, 0.57%)</title><rect x="147" y="164" width="7" height="15" fill="rgb(220,69,16)"/><text x="150.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="152" y="180" width="2" height="15" fill="rgb(232,6,13)"/><text x="155.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="152" y="196" width="2" height="15" fill="rgb(215,87,16)"/><text x="155.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.57%)</title><rect x="154" y="228" width="7" height="15" fill="rgb(205,155,17)"/><text x="157.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.19%)</title><rect x="158" y="244" width="3" height="15" fill="rgb(216,15,36)"/><text x="161.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.19%)</title><rect x="161" y="228" width="2" height="15" fill="rgb(254,135,3)"/><text x="164.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.57%)</title><rect x="174" y="260" width="7" height="15" fill="rgb(252,174,40)"/><text x="177.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.34%)</title><rect x="167" y="244" width="16" height="15" fill="rgb(220,91,21)"/><text x="170.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="181" y="260" width="2" height="15" fill="rgb(226,161,18)"/><text x="184.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (15 samples, 2.87%)</title><rect x="154" y="212" width="34" height="15" fill="rgb(235,36,23)"/><text x="157.00" y="222.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 2.10%)</title><rect x="163" y="228" width="25" height="15" fill="rgb(215,122,32)"/><text x="166.00" y="238.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.38%)</title><rect x="183" y="244" width="5" height="15" fill="rgb(246,168,19)"/><text x="186.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="185" y="260" width="3" height="15" fill="rgb(221,47,17)"/><text x="188.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (2 samples, 0.38%)</title><rect x="188" y="244" width="4" height="15" fill="rgb(223,208,50)"/><text x="191.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.19%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(246,3,26)"/><text x="198.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.57%)</title><rect x="192" y="244" width="7" height="15" fill="rgb(240,181,24)"/><text x="195.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.19%)</title><rect x="197" y="260" width="2" height="15" fill="rgb(207,111,47)"/><text x="200.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="201" y="260" width="3" height="15" fill="rgb(241,28,20)"/><text x="204.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="204" y="276" width="2" height="15" fill="rgb(237,97,28)"/><text x="207.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.15%)</title><rect x="199" y="244" width="14" height="15" fill="rgb(220,161,6)"/><text x="202.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.76%)</title><rect x="204" y="260" width="9" height="15" fill="rgb(243,108,29)"/><text x="207.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (3 samples, 0.57%)</title><rect x="206" y="276" width="7" height="15" fill="rgb(244,105,18)"/><text x="209.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.38%)</title><rect x="213" y="244" width="4" height="15" fill="rgb(214,158,17)"/><text x="216.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.19%)</title><rect x="215" y="260" width="2" height="15" fill="rgb(244,55,4)"/><text x="218.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.19%)</title><rect x="219" y="276" width="3" height="15" fill="rgb(242,213,22)"/><text x="222.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.76%)</title><rect x="217" y="244" width="9" height="15" fill="rgb(250,148,20)"/><text x="220.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.76%)</title><rect x="217" y="260" width="9" height="15" fill="rgb(217,48,23)"/><text x="220.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.38%)</title><rect x="222" y="276" width="4" height="15" fill="rgb(247,49,42)"/><text x="225.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="224" y="292" width="2" height="15" fill="rgb(224,15,40)"/><text x="227.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.38%)</title><rect x="226" y="244" width="5" height="15" fill="rgb(216,62,29)"/><text x="229.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.19%)</title><rect x="228" y="260" width="3" height="15" fill="rgb(225,157,43)"/><text x="231.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.19%)</title><rect x="231" y="244" width="2" height="15" fill="rgb(219,154,27)"/><text x="234.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(239,46,14)"/><text x="234.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.76%)</title><rect x="233" y="244" width="9" height="15" fill="rgb(223,126,3)"/><text x="236.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.76%)</title><rect x="233" y="260" width="9" height="15" fill="rgb(228,8,22)"/><text x="236.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="240" y="276" width="2" height="15" fill="rgb(252,81,36)"/><text x="243.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="244" y="260" width="2" height="15" fill="rgb(237,191,32)"/><text x="247.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (31 samples, 5.93%)</title><rect x="188" y="228" width="70" height="15" fill="rgb(228,29,11)"/><text x="191.00" y="238.50">_valida..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.34%)</title><rect x="242" y="244" width="16" height="15" fill="rgb(234,213,30)"/><text x="245.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.96%)</title><rect x="246" y="260" width="12" height="15" fill="rgb(208,72,8)"/><text x="249.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.76%)</title><rect x="249" y="276" width="9" height="15" fill="rgb(228,30,30)"/><text x="252.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 0.76%)</title><rect x="249" y="292" width="9" height="15" fill="rgb(251,93,40)"/><text x="252.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (33 samples, 6.31%)</title><rect x="188" y="212" width="74" height="15" fill="rgb(212,113,23)"/><text x="191.00" y="222.50">predict_..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (2 samples, 0.38%)</title><rect x="258" y="228" width="4" height="15" fill="rgb(244,117,19)"/><text x="261.00" y="238.50"></text></g><g><title>0x7f14a23a1f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="262" y="244" width="2" height="15" fill="rgb(206,150,19)"/><text x="265.00" y="254.50"></text></g><g><title>0x7f14a2391d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="262" y="260" width="2" height="15" fill="rgb(221,34,9)"/><text x="265.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.19%)</title><rect x="262" y="276" width="2" height="15" fill="rgb(240,153,49)"/><text x="265.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="262" y="292" width="2" height="15" fill="rgb(205,83,50)"/><text x="265.00" y="302.50"></text></g><g><title>0x7f14a23b12b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="264" y="260" width="3" height="15" fill="rgb(212,210,17)"/><text x="267.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.19%)</title><rect x="267" y="372" width="2" height="15" fill="rgb(207,164,4)"/><text x="270.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="267" y="388" width="2" height="15" fill="rgb(226,174,36)"/><text x="270.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.38%)</title><rect x="267" y="356" width="4" height="15" fill="rgb(222,185,8)"/><text x="270.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.19%)</title><rect x="269" y="372" width="2" height="15" fill="rgb(217,179,35)"/><text x="272.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:237) (1 samples, 0.19%)</title><rect x="269" y="388" width="2" height="15" fill="rgb(234,79,53)"/><text x="272.00" y="398.50"></text></g><g><title>0x7f14a2394666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="267" y="308" width="6" height="15" fill="rgb(237,153,4)"/><text x="270.00" y="318.50"></text></g><g><title>0x7f14a238a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="267" y="324" width="6" height="15" fill="rgb(205,75,25)"/><text x="270.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.57%)</title><rect x="267" y="340" width="6" height="15" fill="rgb(248,44,41)"/><text x="270.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.19%)</title><rect x="271" y="356" width="2" height="15" fill="rgb(251,135,36)"/><text x="274.00" y="366.50"></text></g><g><title>0x7f14a23b02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="267" y="276" width="9" height="15" fill="rgb(241,3,52)"/><text x="270.00" y="286.50"></text></g><g><title>0x7f14a2394d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="267" y="292" width="9" height="15" fill="rgb(218,171,8)"/><text x="270.00" y="302.50"></text></g><g><title>0x7f14a23946fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="273" y="308" width="3" height="15" fill="rgb(253,14,26)"/><text x="276.00" y="318.50"></text></g><g><title>0x7f14a23b04b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="276" y="276" width="2" height="15" fill="rgb(216,88,12)"/><text x="279.00" y="286.50"></text></g><g><title>0x7f14a23b0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="278" y="276" width="5" height="15" fill="rgb(237,153,16)"/><text x="281.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.19%)</title><rect x="280" y="292" width="3" height="15" fill="rgb(235,204,17)"/><text x="283.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="280" y="308" width="3" height="15" fill="rgb(235,43,17)"/><text x="283.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.19%)</title><rect x="280" y="324" width="3" height="15" fill="rgb(242,64,5)"/><text x="283.00" y="334.50"></text></g><g><title>0x7f14a23b087d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="283" y="276" width="2" height="15" fill="rgb(244,72,13)"/><text x="286.00" y="286.50"></text></g><g><title>0x7f14a23b092f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="285" y="276" width="2" height="15" fill="rgb(227,151,47)"/><text x="288.00" y="286.50"></text></g><g><title>0x7f14a2385a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="285" y="292" width="2" height="15" fill="rgb(206,202,54)"/><text x="288.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.19%)</title><rect x="287" y="324" width="2" height="15" fill="rgb(205,95,44)"/><text x="290.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.19%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(234,117,52)"/><text x="290.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.19%)</title><rect x="287" y="356" width="2" height="15" fill="rgb(220,146,12)"/><text x="290.00" y="366.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.19%)</title><rect x="287" y="372" width="2" height="15" fill="rgb(223,72,13)"/><text x="290.00" y="382.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="287" y="388" width="2" height="15" fill="rgb(231,32,28)"/><text x="290.00" y="398.50"></text></g><g><title>0x7f14a23b1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.29%)</title><rect x="267" y="260" width="27" height="15" fill="rgb(206,158,22)"/><text x="270.00" y="270.50">0..</text></g><g><title>0x7f14a23b0c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="287" y="276" width="7" height="15" fill="rgb(229,172,34)"/><text x="290.00" y="286.50"></text></g><g><title>0x7f14a2388529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="287" y="292" width="7" height="15" fill="rgb(250,82,51)"/><text x="290.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.57%)</title><rect x="287" y="308" width="7" height="15" fill="rgb(240,180,27)"/><text x="290.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (2 samples, 0.38%)</title><rect x="289" y="324" width="5" height="15" fill="rgb(234,173,21)"/><text x="292.00" y="334.50"></text></g><g><title>0x7f14a23a1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.68%)</title><rect x="264" y="244" width="32" height="15" fill="rgb(231,117,22)"/><text x="267.00" y="254.50">0x..</text></g><g><title>0x7f14a23b1540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="294" y="260" width="2" height="15" fill="rgb(210,218,51)"/><text x="297.00" y="270.50"></text></g><g><title>0x7f14a23862f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="294" y="276" width="2" height="15" fill="rgb(238,40,6)"/><text x="297.00" y="286.50"></text></g><g><title>0x7f14a2385530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="294" y="292" width="2" height="15" fill="rgb(213,159,41)"/><text x="297.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="294" y="308" width="2" height="15" fill="rgb(217,47,1)"/><text x="297.00" y="318.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.19%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(219,96,27)"/><text x="299.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="301" y="276" width="2" height="15" fill="rgb(254,160,3)"/><text x="304.00" y="286.50"></text></g><g><title>0x7f14c8a3c151 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(235,68,11)"/><text x="304.00" y="302.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.57%)</title><rect x="298" y="260" width="7" height="15" fill="rgb(206,168,44)"/><text x="301.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="303" y="276" width="2" height="15" fill="rgb(235,202,37)"/><text x="306.00" y="286.50"></text></g><g><title>0x7f14a23a205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.96%)</title><rect x="296" y="244" width="11" height="15" fill="rgb(207,83,43)"/><text x="299.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.19%)</title><rect x="305" y="260" width="2" height="15" fill="rgb(234,203,22)"/><text x="308.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.19%)</title><rect x="305" y="276" width="2" height="15" fill="rgb(236,150,51)"/><text x="308.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="305" y="292" width="2" height="15" fill="rgb(214,15,26)"/><text x="308.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="305" y="308" width="2" height="15" fill="rgb(245,56,40)"/><text x="308.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="305" y="324" width="2" height="15" fill="rgb(209,126,0)"/><text x="308.00" y="334.50"></text></g><g><title>0x7f14c7b812c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="305" y="340" width="2" height="15" fill="rgb(230,216,36)"/><text x="308.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (21 samples, 4.02%)</title><rect x="262" y="212" width="48" height="15" fill="rgb(240,91,9)"/><text x="265.00" y="222.50">pred..</text></g><g><title>0x7f14a23a2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 4.02%)</title><rect x="262" y="228" width="48" height="15" fill="rgb(210,124,2)"/><text x="265.00" y="238.50">0x7f..</text></g><g><title>0x7f14a23a214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="307" y="244" width="3" height="15" fill="rgb(208,181,46)"/><text x="310.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="307" y="260" width="3" height="15" fill="rgb(241,118,4)"/><text x="310.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="307" y="276" width="3" height="15" fill="rgb(230,62,35)"/><text x="310.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="307" y="292" width="3" height="15" fill="rgb(249,132,38)"/><text x="310.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.19%)</title><rect x="310" y="212" width="2" height="15" fill="rgb(215,196,42)"/><text x="313.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="310" y="228" width="2" height="15" fill="rgb(251,210,33)"/><text x="313.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1536) (1 samples, 0.19%)</title><rect x="314" y="228" width="2" height="15" fill="rgb(245,221,1)"/><text x="317.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.19%)</title><rect x="316" y="244" width="3" height="15" fill="rgb(218,74,13)"/><text x="319.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.38%)</title><rect x="316" y="228" width="5" height="15" fill="rgb(229,61,50)"/><text x="319.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.19%)</title><rect x="319" y="244" width="2" height="15" fill="rgb(223,194,13)"/><text x="322.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="319" y="260" width="2" height="15" fill="rgb(229,146,48)"/><text x="322.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.19%)</title><rect x="319" y="276" width="2" height="15" fill="rgb(227,1,4)"/><text x="322.00" y="286.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.19%)</title><rect x="319" y="292" width="2" height="15" fill="rgb(247,178,32)"/><text x="322.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="323" y="356" width="2" height="15" fill="rgb(247,62,1)"/><text x="326.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(240,78,28)"/><text x="326.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.38%)</title><rect x="323" y="276" width="5" height="15" fill="rgb(232,88,34)"/><text x="326.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.38%)</title><rect x="323" y="292" width="5" height="15" fill="rgb(216,10,24)"/><text x="326.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.38%)</title><rect x="323" y="308" width="5" height="15" fill="rgb(213,72,46)"/><text x="326.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.38%)</title><rect x="323" y="324" width="5" height="15" fill="rgb(205,32,30)"/><text x="326.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="323" y="340" width="5" height="15" fill="rgb(236,26,11)"/><text x="326.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="325" y="356" width="3" height="15" fill="rgb(237,116,23)"/><text x="328.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.19%)</title><rect x="328" y="292" width="2" height="15" fill="rgb(251,43,5)"/><text x="331.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.19%)</title><rect x="328" y="308" width="2" height="15" fill="rgb(252,131,30)"/><text x="331.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.19%)</title><rect x="328" y="324" width="2" height="15" fill="rgb(212,35,38)"/><text x="331.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.19%)</title><rect x="328" y="340" width="2" height="15" fill="rgb(225,154,13)"/><text x="331.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.19%)</title><rect x="330" y="292" width="2" height="15" fill="rgb(211,39,13)"/><text x="333.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.19%)</title><rect x="330" y="308" width="2" height="15" fill="rgb(244,161,9)"/><text x="333.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="332" y="324" width="2" height="15" fill="rgb(242,161,15)"/><text x="335.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="332" y="340" width="2" height="15" fill="rgb(213,214,35)"/><text x="335.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="332" y="356" width="2" height="15" fill="rgb(248,168,29)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="332" y="372" width="2" height="15" fill="rgb(233,100,32)"/><text x="335.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(211,164,49)"/><text x="335.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.19%)</title><rect x="332" y="404" width="2" height="15" fill="rgb(245,63,37)"/><text x="335.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.19%)</title><rect x="332" y="420" width="2" height="15" fill="rgb(248,108,28)"/><text x="335.00" y="430.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.19%)</title><rect x="332" y="436" width="2" height="15" fill="rgb(222,216,36)"/><text x="335.00" y="446.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.19%)</title><rect x="332" y="452" width="2" height="15" fill="rgb(236,43,27)"/><text x="335.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="334" y="324" width="3" height="15" fill="rgb(243,143,46)"/><text x="337.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:402) (1 samples, 0.19%)</title><rect x="334" y="340" width="3" height="15" fill="rgb(208,144,4)"/><text x="337.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="337" y="340" width="2" height="15" fill="rgb(243,134,50)"/><text x="340.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="339" y="340" width="2" height="15" fill="rgb(252,193,8)"/><text x="342.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2812) (1 samples, 0.19%)</title><rect x="339" y="356" width="2" height="15" fill="rgb(222,148,5)"/><text x="342.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.57%)</title><rect x="337" y="324" width="6" height="15" fill="rgb(236,32,9)"/><text x="340.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="341" y="340" width="2" height="15" fill="rgb(216,64,24)"/><text x="344.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.19%)</title><rect x="341" y="356" width="2" height="15" fill="rgb(224,40,21)"/><text x="344.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.19%)</title><rect x="343" y="324" width="3" height="15" fill="rgb(230,125,2)"/><text x="346.00" y="334.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.19%)</title><rect x="343" y="340" width="3" height="15" fill="rgb(211,214,20)"/><text x="346.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (16 samples, 3.06%)</title><rect x="312" y="212" width="36" height="15" fill="rgb(205,62,38)"/><text x="315.00" y="222.50">pre..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 2.29%)</title><rect x="321" y="228" width="27" height="15" fill="rgb(214,89,8)"/><text x="324.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 2.29%)</title><rect x="321" y="244" width="27" height="15" fill="rgb(210,161,54)"/><text x="324.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 2.10%)</title><rect x="323" y="260" width="25" height="15" fill="rgb(228,101,53)"/><text x="326.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.72%)</title><rect x="328" y="276" width="20" height="15" fill="rgb(207,113,3)"/><text x="331.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.34%)</title><rect x="332" y="292" width="16" height="15" fill="rgb(209,91,27)"/><text x="335.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.34%)</title><rect x="332" y="308" width="16" height="15" fill="rgb(228,211,46)"/><text x="335.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="346" y="324" width="2" height="15" fill="rgb(215,39,48)"/><text x="349.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="346" y="340" width="2" height="15" fill="rgb(206,213,51)"/><text x="349.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.19%)</title><rect x="350" y="244" width="2" height="15" fill="rgb(251,182,2)"/><text x="353.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (2 samples, 0.38%)</title><rect x="350" y="228" width="5" height="15" fill="rgb(252,159,30)"/><text x="353.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1881) (1 samples, 0.19%)</title><rect x="352" y="244" width="3" height="15" fill="rgb(235,174,5)"/><text x="355.00" y="254.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.19%)</title><rect x="355" y="228" width="2" height="15" fill="rgb(236,203,23)"/><text x="358.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:97) (1 samples, 0.19%)</title><rect x="355" y="244" width="2" height="15" fill="rgb(249,60,17)"/><text x="358.00" y="254.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:273) (1 samples, 0.19%)</title><rect x="357" y="244" width="2" height="15" fill="rgb(208,180,12)"/><text x="360.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="359" y="244" width="2" height="15" fill="rgb(227,94,33)"/><text x="362.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="359" y="260" width="2" height="15" fill="rgb(253,100,39)"/><text x="362.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.19%)</title><rect x="359" y="276" width="2" height="15" fill="rgb(239,120,48)"/><text x="362.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="361" y="260" width="3" height="15" fill="rgb(224,166,48)"/><text x="364.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(240,87,26)"/><text x="364.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(209,48,11)"/><text x="364.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.19%)</title><rect x="361" y="308" width="3" height="15" fill="rgb(225,84,45)"/><text x="364.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.19%)</title><rect x="361" y="324" width="3" height="15" fill="rgb(234,116,12)"/><text x="364.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.53%)</title><rect x="348" y="212" width="18" height="15" fill="rgb(228,97,42)"/><text x="351.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 0.76%)</title><rect x="357" y="228" width="9" height="15" fill="rgb(209,140,51)"/><text x="360.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="361" y="244" width="5" height="15" fill="rgb(252,71,33)"/><text x="364.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="364" y="260" width="2" height="15" fill="rgb(206,183,27)"/><text x="367.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="364" y="276" width="2" height="15" fill="rgb(232,15,16)"/><text x="367.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="364" y="292" width="2" height="15" fill="rgb(248,201,23)"/><text x="367.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.19%)</title><rect x="364" y="308" width="2" height="15" fill="rgb(245,131,3)"/><text x="367.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="364" y="324" width="2" height="15" fill="rgb(249,98,20)"/><text x="367.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.19%)</title><rect x="366" y="260" width="2" height="15" fill="rgb(225,188,17)"/><text x="369.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.38%)</title><rect x="366" y="244" width="4" height="15" fill="rgb(244,171,49)"/><text x="369.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="368" y="260" width="2" height="15" fill="rgb(227,4,4)"/><text x="371.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1716) (1 samples, 0.19%)</title><rect x="368" y="276" width="2" height="15" fill="rgb(206,60,25)"/><text x="371.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (2 samples, 0.38%)</title><rect x="370" y="292" width="5" height="15" fill="rgb(215,201,6)"/><text x="373.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="373" y="308" width="2" height="15" fill="rgb(236,166,37)"/><text x="376.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.57%)</title><rect x="370" y="276" width="7" height="15" fill="rgb(205,46,31)"/><text x="373.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="375" y="292" width="2" height="15" fill="rgb(239,198,17)"/><text x="378.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="375" y="308" width="2" height="15" fill="rgb(251,144,50)"/><text x="378.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.76%)</title><rect x="370" y="244" width="10" height="15" fill="rgb(240,68,22)"/><text x="373.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.76%)</title><rect x="370" y="260" width="10" height="15" fill="rgb(223,24,42)"/><text x="373.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1551) (1 samples, 0.19%)</title><rect x="377" y="276" width="3" height="15" fill="rgb(228,100,8)"/><text x="380.00" y="286.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.19%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(253,223,26)"/><text x="380.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (101 samples, 19.31%)</title><rect x="154" y="196" width="228" height="15" fill="rgb(250,55,53)"/><text x="157.00" y="206.50">_samme_proba (sklearn/ensemble..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (7 samples, 1.34%)</title><rect x="366" y="212" width="16" height="15" fill="rgb(236,95,8)"/><text x="369.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.34%)</title><rect x="366" y="228" width="16" height="15" fill="rgb(253,182,4)"/><text x="369.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="380" y="244" width="2" height="15" fill="rgb(240,85,16)"/><text x="383.00" y="254.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.19%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(250,50,7)"/><text x="398.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="398" y="212" width="2" height="15" fill="rgb(211,162,19)"/><text x="401.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.38%)</title><rect x="400" y="228" width="4" height="15" fill="rgb(221,1,1)"/><text x="403.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.38%)</title><rect x="400" y="244" width="4" height="15" fill="rgb(225,97,0)"/><text x="403.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.38%)</title><rect x="400" y="260" width="4" height="15" fill="rgb(208,130,46)"/><text x="403.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="400" y="276" width="4" height="15" fill="rgb(253,67,50)"/><text x="403.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.38%)</title><rect x="400" y="292" width="4" height="15" fill="rgb(227,90,23)"/><text x="403.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.19%)</title><rect x="409" y="308" width="2" height="15" fill="rgb(212,6,27)"/><text x="412.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.19%)</title><rect x="409" y="324" width="2" height="15" fill="rgb(249,33,25)"/><text x="412.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2068) (1 samples, 0.19%)</title><rect x="409" y="340" width="2" height="15" fill="rgb(245,175,25)"/><text x="412.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (5 samples, 0.96%)</title><rect x="413" y="324" width="12" height="15" fill="rgb(235,215,38)"/><text x="416.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.76%)</title><rect x="416" y="340" width="9" height="15" fill="rgb(211,91,24)"/><text x="419.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="427" y="340" width="2" height="15" fill="rgb(252,181,33)"/><text x="430.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="429" y="420" width="2" height="15" fill="rgb(244,121,24)"/><text x="432.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.38%)</title><rect x="429" y="356" width="5" height="15" fill="rgb(216,120,51)"/><text x="432.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.38%)</title><rect x="429" y="372" width="5" height="15" fill="rgb(210,119,4)"/><text x="432.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.38%)</title><rect x="429" y="388" width="5" height="15" fill="rgb(250,61,6)"/><text x="432.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="429" y="404" width="5" height="15" fill="rgb(216,86,42)"/><text x="432.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="431" y="420" width="3" height="15" fill="rgb(223,229,12)"/><text x="434.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.15%)</title><rect x="425" y="324" width="13" height="15" fill="rgb(207,106,43)"/><text x="428.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.76%)</title><rect x="429" y="340" width="9" height="15" fill="rgb(249,166,38)"/><text x="432.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.38%)</title><rect x="434" y="356" width="4" height="15" fill="rgb(221,45,17)"/><text x="437.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3018) (1 samples, 0.19%)</title><rect x="436" y="372" width="2" height="15" fill="rgb(241,208,26)"/><text x="439.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="443" y="356" width="2" height="15" fill="rgb(223,157,43)"/><text x="446.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="443" y="372" width="2" height="15" fill="rgb(239,118,38)"/><text x="446.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(253,168,33)"/><text x="446.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.19%)</title><rect x="443" y="404" width="2" height="15" fill="rgb(237,52,44)"/><text x="446.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="443" y="340" width="4" height="15" fill="rgb(233,6,28)"/><text x="446.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="445" y="356" width="2" height="15" fill="rgb(205,28,36)"/><text x="448.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="445" y="372" width="2" height="15" fill="rgb(245,123,54)"/><text x="448.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="445" y="388" width="2" height="15" fill="rgb(216,50,32)"/><text x="448.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (17 samples, 3.25%)</title><rect x="411" y="308" width="38" height="15" fill="rgb(223,222,46)"/><text x="414.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.96%)</title><rect x="438" y="324" width="11" height="15" fill="rgb(221,151,28)"/><text x="441.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="447" y="340" width="2" height="15" fill="rgb(214,126,40)"/><text x="450.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="447" y="356" width="2" height="15" fill="rgb(231,59,23)"/><text x="450.00" y="366.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.19%)</title><rect x="447" y="372" width="2" height="15" fill="rgb(242,72,29)"/><text x="450.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="449" y="324" width="3" height="15" fill="rgb(224,92,24)"/><text x="452.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="449" y="340" width="3" height="15" fill="rgb(232,196,23)"/><text x="452.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (3 samples, 0.57%)</title><rect x="454" y="372" width="7" height="15" fill="rgb(224,160,31)"/><text x="457.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="465" y="388" width="3" height="15" fill="rgb(218,220,28)"/><text x="468.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.38%)</title><rect x="472" y="404" width="5" height="15" fill="rgb(235,110,30)"/><text x="475.00" y="414.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.19%)</title><rect x="474" y="420" width="3" height="15" fill="rgb(232,15,37)"/><text x="477.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="477" y="436" width="2" height="15" fill="rgb(206,94,26)"/><text x="480.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.19%)</title><rect x="477" y="452" width="2" height="15" fill="rgb(216,66,53)"/><text x="480.00" y="462.50"></text></g><g><title>0x7f14c8974e63 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="477" y="468" width="2" height="15" fill="rgb(234,68,29)"/><text x="480.00" y="478.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (13 samples, 2.49%)</title><rect x="452" y="324" width="29" height="15" fill="rgb(207,176,21)"/><text x="455.00" y="334.50">_c..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (13 samples, 2.49%)</title><rect x="452" y="340" width="29" height="15" fill="rgb(211,167,0)"/><text x="455.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.29%)</title><rect x="454" y="356" width="27" height="15" fill="rgb(213,105,11)"/><text x="457.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (9 samples, 1.72%)</title><rect x="461" y="372" width="20" height="15" fill="rgb(227,173,27)"/><text x="464.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (6 samples, 1.15%)</title><rect x="468" y="388" width="13" height="15" fill="rgb(240,128,5)"/><text x="471.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.38%)</title><rect x="477" y="404" width="4" height="15" fill="rgb(247,219,4)"/><text x="480.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.38%)</title><rect x="477" y="420" width="4" height="15" fill="rgb(212,211,15)"/><text x="480.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.19%)</title><rect x="479" y="436" width="2" height="15" fill="rgb(226,98,1)"/><text x="482.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.19%)</title><rect x="479" y="452" width="2" height="15" fill="rgb(220,119,40)"/><text x="482.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.38%)</title><rect x="486" y="356" width="4" height="15" fill="rgb(249,18,52)"/><text x="489.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.38%)</title><rect x="486" y="372" width="4" height="15" fill="rgb(253,142,27)"/><text x="489.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.38%)</title><rect x="486" y="388" width="4" height="15" fill="rgb(221,122,3)"/><text x="489.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.38%)</title><rect x="486" y="404" width="4" height="15" fill="rgb(217,175,6)"/><text x="489.00" y="414.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="490" y="372" width="2" height="15" fill="rgb(245,115,53)"/><text x="493.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.19%)</title><rect x="490" y="388" width="2" height="15" fill="rgb(253,191,35)"/><text x="493.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.19%)</title><rect x="490" y="404" width="2" height="15" fill="rgb(210,115,19)"/><text x="493.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.38%)</title><rect x="490" y="356" width="5" height="15" fill="rgb(228,110,47)"/><text x="493.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.19%)</title><rect x="492" y="372" width="3" height="15" fill="rgb(233,14,29)"/><text x="495.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.34%)</title><rect x="481" y="324" width="16" height="15" fill="rgb(211,97,52)"/><text x="484.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.96%)</title><rect x="486" y="340" width="11" height="15" fill="rgb(221,100,7)"/><text x="489.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3295) (1 samples, 0.19%)</title><rect x="495" y="356" width="2" height="15" fill="rgb(246,96,40)"/><text x="498.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (22 samples, 4.21%)</title><rect x="449" y="308" width="50" height="15" fill="rgb(223,151,31)"/><text x="452.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:71) (1 samples, 0.19%)</title><rect x="497" y="324" width="2" height="15" fill="rgb(252,185,42)"/><text x="500.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.19%)</title><rect x="504" y="340" width="2" height="15" fill="rgb(238,213,19)"/><text x="507.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="506" y="356" width="2" height="15" fill="rgb(209,169,27)"/><text x="509.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="506" y="372" width="2" height="15" fill="rgb(212,198,37)"/><text x="509.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="506" y="388" width="2" height="15" fill="rgb(239,183,33)"/><text x="509.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.19%)</title><rect x="506" y="404" width="2" height="15" fill="rgb(212,182,5)"/><text x="509.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="508" y="356" width="2" height="15" fill="rgb(252,90,16)"/><text x="511.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="508" y="372" width="2" height="15" fill="rgb(232,220,36)"/><text x="511.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.19%)</title><rect x="508" y="388" width="2" height="15" fill="rgb(229,197,43)"/><text x="511.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="510" y="356" width="3" height="15" fill="rgb(206,217,0)"/><text x="513.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="510" y="372" width="3" height="15" fill="rgb(215,62,16)"/><text x="513.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="510" y="388" width="3" height="15" fill="rgb(249,142,8)"/><text x="513.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.76%)</title><rect x="506" y="340" width="9" height="15" fill="rgb(230,29,27)"/><text x="509.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.19%)</title><rect x="513" y="356" width="2" height="15" fill="rgb(222,67,18)"/><text x="516.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (8 samples, 1.53%)</title><rect x="499" y="308" width="18" height="15" fill="rgb(223,124,16)"/><text x="502.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (6 samples, 1.15%)</title><rect x="504" y="324" width="13" height="15" fill="rgb(233,75,1)"/><text x="507.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="515" y="340" width="2" height="15" fill="rgb(234,105,36)"/><text x="518.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="515" y="356" width="2" height="15" fill="rgb(229,196,21)"/><text x="518.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (61 samples, 11.66%)</title><rect x="382" y="196" width="137" height="15" fill="rgb(247,73,22)"/><text x="385.00" y="206.50">_samme_proba (skl..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (53 samples, 10.13%)</title><rect x="400" y="212" width="119" height="15" fill="rgb(209,158,7)"/><text x="403.00" y="222.50">clip (&lt;__array..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (51 samples, 9.75%)</title><rect x="404" y="228" width="115" height="15" fill="rgb(249,194,1)"/><text x="407.00" y="238.50">array_implemen..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (50 samples, 9.56%)</title><rect x="407" y="244" width="112" height="15" fill="rgb(218,157,51)"/><text x="410.00" y="254.50">clip (numpy/c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (49 samples, 9.37%)</title><rect x="409" y="260" width="110" height="15" fill="rgb(219,76,53)"/><text x="412.00" y="270.50">_wrapfunc (nu..</text></g><g><title>array_clip (methods.c:2381) (49 samples, 9.37%)</title><rect x="409" y="276" width="110" height="15" fill="rgb(252,54,21)"/><text x="412.00" y="286.50">array_clip (m..</text></g><g><title>forward_ndarray_method (methods.c:108) (49 samples, 9.37%)</title><rect x="409" y="292" width="110" height="15" fill="rgb(210,49,49)"/><text x="412.00" y="302.50">forward_ndarr..</text></g><g><title>_clip (numpy/core/_methods.py:97) (1 samples, 0.19%)</title><rect x="517" y="308" width="2" height="15" fill="rgb(227,199,19)"/><text x="520.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (1 samples, 0.19%)</title><rect x="519" y="196" width="3" height="15" fill="rgb(225,54,43)"/><text x="522.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="519" y="212" width="3" height="15" fill="rgb(240,94,7)"/><text x="522.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="519" y="228" width="3" height="15" fill="rgb(246,48,33)"/><text x="522.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="519" y="244" width="3" height="15" fill="rgb(205,180,24)"/><text x="522.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="519" y="260" width="3" height="15" fill="rgb(238,229,20)"/><text x="522.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1126) (1 samples, 0.19%)</title><rect x="519" y="276" width="3" height="15" fill="rgb(212,20,41)"/><text x="522.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(251,88,8)"/><text x="529.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(227,123,43)"/><text x="529.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="526" y="260" width="2" height="15" fill="rgb(236,217,8)"/><text x="529.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="526" y="276" width="2" height="15" fill="rgb(250,93,41)"/><text x="529.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.19%)</title><rect x="528" y="260" width="3" height="15" fill="rgb(216,176,28)"/><text x="531.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.19%)</title><rect x="531" y="260" width="2" height="15" fill="rgb(254,229,11)"/><text x="534.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.19%)</title><rect x="531" y="276" width="2" height="15" fill="rgb(240,9,44)"/><text x="534.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="531" y="292" width="2" height="15" fill="rgb(223,167,30)"/><text x="534.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.19%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(253,129,1)"/><text x="534.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.19%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(231,209,53)"/><text x="534.00" y="334.50"></text></g><g><title>0x7f14c7b81350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="531" y="340" width="2" height="15" fill="rgb(254,101,41)"/><text x="534.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.57%)</title><rect x="528" y="244" width="7" height="15" fill="rgb(254,142,25)"/><text x="531.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.19%)</title><rect x="533" y="260" width="2" height="15" fill="rgb(218,140,41)"/><text x="536.00" y="270.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="535" y="324" width="2" height="15" fill="rgb(242,229,30)"/><text x="538.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.19%)</title><rect x="535" y="340" width="2" height="15" fill="rgb(238,69,51)"/><text x="538.00" y="350.50"></text></g><g><title>array_multiply (number.c:354) (6 samples, 1.15%)</title><rect x="526" y="212" width="14" height="15" fill="rgb(242,189,8)"/><text x="529.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.96%)</title><rect x="528" y="228" width="12" height="15" fill="rgb(245,182,13)"/><text x="531.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.38%)</title><rect x="535" y="244" width="5" height="15" fill="rgb(237,172,9)"/><text x="538.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.38%)</title><rect x="535" y="260" width="5" height="15" fill="rgb(230,149,17)"/><text x="538.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.38%)</title><rect x="535" y="276" width="5" height="15" fill="rgb(244,126,19)"/><text x="538.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.38%)</title><rect x="535" y="292" width="5" height="15" fill="rgb(222,184,1)"/><text x="538.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.38%)</title><rect x="535" y="308" width="5" height="15" fill="rgb(206,228,31)"/><text x="538.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="537" y="324" width="3" height="15" fill="rgb(234,99,34)"/><text x="540.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.19%)</title><rect x="537" y="340" width="3" height="15" fill="rgb(253,176,1)"/><text x="540.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="540" y="244" width="2" height="15" fill="rgb(251,179,16)"/><text x="543.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.19%)</title><rect x="540" y="260" width="2" height="15" fill="rgb(248,198,20)"/><text x="543.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="542" y="292" width="2" height="15" fill="rgb(217,186,45)"/><text x="545.00" y="302.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:778) (1 samples, 0.19%)</title><rect x="542" y="308" width="2" height="15" fill="rgb(218,55,47)"/><text x="545.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.19%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(214,100,44)"/><text x="547.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.57%)</title><rect x="542" y="276" width="7" height="15" fill="rgb(230,7,54)"/><text x="545.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="546" y="292" width="3" height="15" fill="rgb(254,117,29)"/><text x="549.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3001) (1 samples, 0.19%)</title><rect x="546" y="308" width="3" height="15" fill="rgb(214,93,44)"/><text x="549.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="549" y="276" width="2" height="15" fill="rgb(216,52,20)"/><text x="552.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="549" y="292" width="2" height="15" fill="rgb(217,223,52)"/><text x="552.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.19%)</title><rect x="549" y="308" width="2" height="15" fill="rgb(215,189,18)"/><text x="552.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="551" y="276" width="2" height="15" fill="rgb(205,217,27)"/><text x="554.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="551" y="292" width="2" height="15" fill="rgb(224,67,27)"/><text x="554.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:245) (1 samples, 0.19%)</title><rect x="551" y="308" width="2" height="15" fill="rgb(206,0,52)"/><text x="554.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (7 samples, 1.34%)</title><rect x="540" y="212" width="16" height="15" fill="rgb(219,106,31)"/><text x="543.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.34%)</title><rect x="540" y="228" width="16" height="15" fill="rgb(233,32,7)"/><text x="543.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.15%)</title><rect x="542" y="244" width="14" height="15" fill="rgb(221,30,2)"/><text x="545.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.15%)</title><rect x="542" y="260" width="14" height="15" fill="rgb(223,17,28)"/><text x="545.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="553" y="276" width="3" height="15" fill="rgb(231,185,21)"/><text x="556.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.19%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(212,185,38)"/><text x="556.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="556" y="260" width="2" height="15" fill="rgb(226,212,28)"/><text x="559.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="556" y="276" width="2" height="15" fill="rgb(205,8,24)"/><text x="559.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="556" y="292" width="2" height="15" fill="rgb(243,132,34)"/><text x="559.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="556" y="308" width="2" height="15" fill="rgb(220,204,12)"/><text x="559.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="558" y="308" width="2" height="15" fill="rgb(222,61,46)"/><text x="561.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="558" y="324" width="2" height="15" fill="rgb(226,158,7)"/><text x="561.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.19%)</title><rect x="558" y="340" width="2" height="15" fill="rgb(205,107,31)"/><text x="561.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.19%)</title><rect x="558" y="356" width="2" height="15" fill="rgb(221,214,12)"/><text x="561.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="560" y="324" width="2" height="15" fill="rgb(244,224,41)"/><text x="563.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.38%)</title><rect x="560" y="308" width="5" height="15" fill="rgb(233,38,52)"/><text x="563.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="562" y="324" width="3" height="15" fill="rgb(249,80,13)"/><text x="565.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.19%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(214,75,14)"/><text x="565.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (184 samples, 35.18%)</title><rect x="154" y="180" width="415" height="15" fill="rgb(246,1,0)"/><text x="157.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (21 samples, 4.02%)</title><rect x="522" y="196" width="47" height="15" fill="rgb(242,128,8)"/><text x="525.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (6 samples, 1.15%)</title><rect x="556" y="212" width="13" height="15" fill="rgb(253,51,49)"/><text x="559.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.15%)</title><rect x="556" y="228" width="13" height="15" fill="rgb(236,74,18)"/><text x="559.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 1.15%)</title><rect x="556" y="244" width="13" height="15" fill="rgb(242,81,38)"/><text x="559.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.96%)</title><rect x="558" y="260" width="11" height="15" fill="rgb(206,183,1)"/><text x="561.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.96%)</title><rect x="558" y="276" width="11" height="15" fill="rgb(205,22,28)"/><text x="561.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.96%)</title><rect x="558" y="292" width="11" height="15" fill="rgb(254,96,16)"/><text x="561.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.38%)</title><rect x="565" y="308" width="4" height="15" fill="rgb(234,79,34)"/><text x="568.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (2 samples, 0.38%)</title><rect x="565" y="324" width="4" height="15" fill="rgb(229,176,40)"/><text x="568.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (2 samples, 0.38%)</title><rect x="565" y="340" width="4" height="15" fill="rgb(214,176,16)"/><text x="568.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="569" y="212" width="2" height="15" fill="rgb(209,23,20)"/><text x="572.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.19%)</title><rect x="569" y="228" width="2" height="15" fill="rgb(229,31,37)"/><text x="572.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:38) (248 samples, 47.42%)</title><rect x="14" y="52" width="560" height="15" fill="rgb(249,0,37)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:37) (248 samples, 47.42%)</title><rect x="14" y="68" width="560" height="15" fill="rgb(226,189,48)"/><text x="17.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (246 samples, 47.04%)</title><rect x="19" y="84" width="555" height="15" fill="rgb(230,145,35)"/><text x="22.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (189 samples, 36.14%)</title><rect x="147" y="100" width="427" height="15" fill="rgb(217,162,7)"/><text x="150.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 36.14%)</title><rect x="147" y="116" width="427" height="15" fill="rgb(219,207,35)"/><text x="150.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (189 samples, 36.14%)</title><rect x="147" y="132" width="427" height="15" fill="rgb(254,100,48)"/><text x="150.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (186 samples, 35.56%)</title><rect x="154" y="148" width="420" height="15" fill="rgb(213,172,3)"/><text x="157.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (186 samples, 35.56%)</title><rect x="154" y="164" width="420" height="15" fill="rgb(241,7,10)"/><text x="157.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:6..</text></g><g><title>array_add (number.c:330) (2 samples, 0.38%)</title><rect x="569" y="180" width="5" height="15" fill="rgb(225,2,53)"/><text x="572.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="569" y="196" width="5" height="15" fill="rgb(212,84,17)"/><text x="572.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="571" y="212" width="3" height="15" fill="rgb(216,225,15)"/><text x="574.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.19%)</title><rect x="571" y="228" width="3" height="15" fill="rgb(230,187,49)"/><text x="574.00" y="238.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:1493) (1 samples, 0.19%)</title><rect x="574" y="580" width="2" height="15" fill="rgb(240,53,39)"/><text x="577.00" y="590.50"></text></g><g><title>0x7f14b6cae2cd (?) (1 samples, 0.19%)</title><rect x="574" y="596" width="2" height="15" fill="rgb(212,160,6)"/><text x="577.00" y="606.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.19%)</title><rect x="576" y="900" width="2" height="15" fill="rgb(246,221,10)"/><text x="579.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="576" y="916" width="2" height="15" fill="rgb(208,12,15)"/><text x="579.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="576" y="932" width="2" height="15" fill="rgb(228,153,50)"/><text x="579.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="576" y="948" width="2" height="15" fill="rgb(244,73,4)"/><text x="579.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="576" y="964" width="2" height="15" fill="rgb(240,215,30)"/><text x="579.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="576" y="980" width="2" height="15" fill="rgb(216,13,17)"/><text x="579.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:227) (1 samples, 0.19%)</title><rect x="576" y="996" width="2" height="15" fill="rgb(249,91,10)"/><text x="579.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.38%)</title><rect x="576" y="852" width="4" height="15" fill="rgb(219,175,1)"/><text x="579.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.38%)</title><rect x="576" y="868" width="4" height="15" fill="rgb(215,144,46)"/><text x="579.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.38%)</title><rect x="576" y="884" width="4" height="15" fill="rgb(214,97,7)"/><text x="579.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.19%)</title><rect x="578" y="900" width="2" height="15" fill="rgb(246,200,51)"/><text x="581.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:709) (1 samples, 0.19%)</title><rect x="578" y="916" width="2" height="15" fill="rgb(214,39,38)"/><text x="581.00" y="926.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.19%)</title><rect x="580" y="884" width="3" height="15" fill="rgb(216,180,38)"/><text x="583.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2899) (1 samples, 0.19%)</title><rect x="580" y="900" width="3" height="15" fill="rgb(213,210,49)"/><text x="583.00" y="910.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.19%)</title><rect x="583" y="900" width="2" height="15" fill="rgb(209,148,29)"/><text x="586.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.19%)</title><rect x="583" y="916" width="2" height="15" fill="rgb(230,70,0)"/><text x="586.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.19%)</title><rect x="583" y="932" width="2" height="15" fill="rgb(240,217,46)"/><text x="586.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.19%)</title><rect x="583" y="948" width="2" height="15" fill="rgb(214,4,28)"/><text x="586.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.19%)</title><rect x="583" y="964" width="2" height="15" fill="rgb(248,75,51)"/><text x="586.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.19%)</title><rect x="583" y="980" width="2" height="15" fill="rgb(226,149,24)"/><text x="586.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (6 samples, 1.15%)</title><rect x="574" y="148" width="13" height="15" fill="rgb(241,36,44)"/><text x="577.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="574" y="164" width="13" height="15" fill="rgb(231,94,37)"/><text x="577.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.15%)</title><rect x="574" y="180" width="13" height="15" fill="rgb(215,84,27)"/><text x="577.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="574" y="196" width="13" height="15" fill="rgb(252,119,13)"/><text x="577.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="574" y="212" width="13" height="15" fill="rgb(233,77,38)"/><text x="577.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="574" y="228" width="13" height="15" fill="rgb(231,108,0)"/><text x="577.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="574" y="244" width="13" height="15" fill="rgb(246,197,35)"/><text x="577.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="574" y="260" width="13" height="15" fill="rgb(211,150,34)"/><text x="577.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="574" y="276" width="13" height="15" fill="rgb(235,212,35)"/><text x="577.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.15%)</title><rect x="574" y="292" width="13" height="15" fill="rgb(226,44,32)"/><text x="577.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="574" y="308" width="13" height="15" fill="rgb(210,187,16)"/><text x="577.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="574" y="324" width="13" height="15" fill="rgb(230,81,46)"/><text x="577.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="574" y="340" width="13" height="15" fill="rgb(205,179,23)"/><text x="577.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="574" y="356" width="13" height="15" fill="rgb(228,158,38)"/><text x="577.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="574" y="372" width="13" height="15" fill="rgb(225,182,54)"/><text x="577.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.15%)</title><rect x="574" y="388" width="13" height="15" fill="rgb(253,43,25)"/><text x="577.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="574" y="404" width="13" height="15" fill="rgb(209,191,4)"/><text x="577.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="574" y="420" width="13" height="15" fill="rgb(222,50,47)"/><text x="577.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="574" y="436" width="13" height="15" fill="rgb(213,205,25)"/><text x="577.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="574" y="452" width="13" height="15" fill="rgb(205,209,46)"/><text x="577.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="574" y="468" width="13" height="15" fill="rgb(212,224,51)"/><text x="577.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.15%)</title><rect x="574" y="484" width="13" height="15" fill="rgb(237,149,15)"/><text x="577.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="574" y="500" width="13" height="15" fill="rgb(245,110,30)"/><text x="577.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="574" y="516" width="13" height="15" fill="rgb(221,6,10)"/><text x="577.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="574" y="532" width="13" height="15" fill="rgb(206,95,23)"/><text x="577.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="574" y="548" width="13" height="15" fill="rgb(231,118,22)"/><text x="577.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="574" y="564" width="13" height="15" fill="rgb(218,51,17)"/><text x="577.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.96%)</title><rect x="576" y="580" width="11" height="15" fill="rgb(242,21,1)"/><text x="579.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="576" y="596" width="11" height="15" fill="rgb(213,16,47)"/><text x="579.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.96%)</title><rect x="576" y="612" width="11" height="15" fill="rgb(231,68,0)"/><text x="579.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="576" y="628" width="11" height="15" fill="rgb(217,194,24)"/><text x="579.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="576" y="644" width="11" height="15" fill="rgb(213,14,17)"/><text x="579.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="576" y="660" width="11" height="15" fill="rgb(232,108,31)"/><text x="579.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="576" y="676" width="11" height="15" fill="rgb(227,127,34)"/><text x="579.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="576" y="692" width="11" height="15" fill="rgb(226,24,34)"/><text x="579.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="576" y="708" width="11" height="15" fill="rgb(237,95,23)"/><text x="579.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.96%)</title><rect x="576" y="724" width="11" height="15" fill="rgb(243,187,47)"/><text x="579.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="576" y="740" width="11" height="15" fill="rgb(234,152,22)"/><text x="579.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="576" y="756" width="11" height="15" fill="rgb(244,18,14)"/><text x="579.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="576" y="772" width="11" height="15" fill="rgb(254,168,49)"/><text x="579.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="576" y="788" width="11" height="15" fill="rgb(251,102,53)"/><text x="579.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="576" y="804" width="11" height="15" fill="rgb(209,26,36)"/><text x="579.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.96%)</title><rect x="576" y="820" width="11" height="15" fill="rgb(235,88,24)"/><text x="579.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.96%)</title><rect x="576" y="836" width="11" height="15" fill="rgb(244,116,13)"/><text x="579.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.57%)</title><rect x="580" y="852" width="7" height="15" fill="rgb(217,170,46)"/><text x="583.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.57%)</title><rect x="580" y="868" width="7" height="15" fill="rgb(242,183,50)"/><text x="583.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.38%)</title><rect x="583" y="884" width="4" height="15" fill="rgb(252,46,26)"/><text x="586.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2296) (1 samples, 0.19%)</title><rect x="585" y="900" width="2" height="15" fill="rgb(213,102,18)"/><text x="588.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (1 samples, 0.19%)</title><rect x="587" y="148" width="2" height="15" fill="rgb(230,176,41)"/><text x="590.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="164" width="2" height="15" fill="rgb(243,198,5)"/><text x="590.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="180" width="2" height="15" fill="rgb(234,170,37)"/><text x="590.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="196" width="2" height="15" fill="rgb(254,124,4)"/><text x="590.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="587" y="212" width="2" height="15" fill="rgb(253,101,50)"/><text x="590.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="228" width="2" height="15" fill="rgb(211,39,54)"/><text x="590.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.19%)</title><rect x="587" y="244" width="2" height="15" fill="rgb(225,136,40)"/><text x="590.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="260" width="2" height="15" fill="rgb(239,146,1)"/><text x="590.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="276" width="2" height="15" fill="rgb(239,88,12)"/><text x="590.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="292" width="2" height="15" fill="rgb(225,155,16)"/><text x="590.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="587" y="308" width="2" height="15" fill="rgb(216,124,34)"/><text x="590.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="324" width="2" height="15" fill="rgb(253,210,9)"/><text x="590.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.19%)</title><rect x="587" y="340" width="2" height="15" fill="rgb(237,21,53)"/><text x="590.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="356" width="2" height="15" fill="rgb(248,131,47)"/><text x="590.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="372" width="2" height="15" fill="rgb(225,174,40)"/><text x="590.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="388" width="2" height="15" fill="rgb(229,3,8)"/><text x="590.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="587" y="404" width="2" height="15" fill="rgb(229,7,8)"/><text x="590.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="420" width="2" height="15" fill="rgb(244,27,41)"/><text x="590.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.19%)</title><rect x="587" y="436" width="2" height="15" fill="rgb(232,135,3)"/><text x="590.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="452" width="2" height="15" fill="rgb(237,93,17)"/><text x="590.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="468" width="2" height="15" fill="rgb(241,50,22)"/><text x="590.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="484" width="2" height="15" fill="rgb(219,71,13)"/><text x="590.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="587" y="500" width="2" height="15" fill="rgb(240,12,10)"/><text x="590.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="516" width="2" height="15" fill="rgb(208,206,52)"/><text x="590.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.19%)</title><rect x="587" y="532" width="2" height="15" fill="rgb(208,155,41)"/><text x="590.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="548" width="2" height="15" fill="rgb(227,72,38)"/><text x="590.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="564" width="2" height="15" fill="rgb(230,107,6)"/><text x="590.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="580" width="2" height="15" fill="rgb(249,121,4)"/><text x="590.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="587" y="596" width="2" height="15" fill="rgb(248,129,34)"/><text x="590.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="612" width="2" height="15" fill="rgb(219,89,50)"/><text x="590.00" y="622.50"></text></g><g><title>0x7f14a2825373 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="587" y="628" width="2" height="15" fill="rgb(212,52,21)"/><text x="590.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="644" width="2" height="15" fill="rgb(225,89,27)"/><text x="590.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="660" width="2" height="15" fill="rgb(237,129,17)"/><text x="590.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="676" width="2" height="15" fill="rgb(214,40,42)"/><text x="590.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="587" y="692" width="2" height="15" fill="rgb(210,50,28)"/><text x="590.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="708" width="2" height="15" fill="rgb(236,119,31)"/><text x="590.00" y="718.50"></text></g><g><title>0x7f14a25e8eea (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="587" y="724" width="2" height="15" fill="rgb(238,195,2)"/><text x="590.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="740" width="2" height="15" fill="rgb(223,66,8)"/><text x="590.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="756" width="2" height="15" fill="rgb(235,184,29)"/><text x="590.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="587" y="772" width="2" height="15" fill="rgb(213,104,11)"/><text x="590.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="587" y="788" width="2" height="15" fill="rgb(233,67,53)"/><text x="590.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="587" y="804" width="2" height="15" fill="rgb(216,115,44)"/><text x="590.00" y="814.50"></text></g><g><title>0x7f14a2381887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="587" y="820" width="2" height="15" fill="rgb(207,167,48)"/><text x="590.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="587" y="836" width="2" height="15" fill="rgb(252,183,30)"/><text x="590.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="587" y="852" width="2" height="15" fill="rgb(205,196,44)"/><text x="590.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="587" y="868" width="2" height="15" fill="rgb(243,69,12)"/><text x="590.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.19%)</title><rect x="587" y="884" width="2" height="15" fill="rgb(233,76,53)"/><text x="590.00" y="894.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.19%)</title><rect x="587" y="900" width="2" height="15" fill="rgb(234,177,39)"/><text x="590.00" y="910.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.19%)</title><rect x="587" y="916" width="2" height="15" fill="rgb(210,58,22)"/><text x="590.00" y="926.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:370) (1 samples, 0.19%)</title><rect x="587" y="932" width="2" height="15" fill="rgb(224,191,3)"/><text x="590.00" y="942.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.19%)</title><rect x="589" y="484" width="3" height="15" fill="rgb(251,48,13)"/><text x="592.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="500" width="3" height="15" fill="rgb(233,103,52)"/><text x="592.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="516" width="3" height="15" fill="rgb(212,88,53)"/><text x="592.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="532" width="3" height="15" fill="rgb(205,195,43)"/><text x="592.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="548" width="3" height="15" fill="rgb(205,185,18)"/><text x="592.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="564" width="3" height="15" fill="rgb(232,210,30)"/><text x="592.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.19%)</title><rect x="589" y="580" width="3" height="15" fill="rgb(214,207,39)"/><text x="592.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="596" width="3" height="15" fill="rgb(234,19,5)"/><text x="592.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="612" width="3" height="15" fill="rgb(216,162,35)"/><text x="592.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="628" width="3" height="15" fill="rgb(220,66,11)"/><text x="592.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="644" width="3" height="15" fill="rgb(219,73,51)"/><text x="592.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="660" width="3" height="15" fill="rgb(246,42,45)"/><text x="592.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.19%)</title><rect x="589" y="676" width="3" height="15" fill="rgb(243,144,54)"/><text x="592.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="692" width="3" height="15" fill="rgb(246,13,10)"/><text x="592.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="708" width="3" height="15" fill="rgb(217,215,35)"/><text x="592.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="724" width="3" height="15" fill="rgb(248,171,43)"/><text x="592.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="740" width="3" height="15" fill="rgb(237,42,37)"/><text x="592.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="756" width="3" height="15" fill="rgb(206,211,45)"/><text x="592.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.19%)</title><rect x="589" y="772" width="3" height="15" fill="rgb(226,162,42)"/><text x="592.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="788" width="3" height="15" fill="rgb(235,225,39)"/><text x="592.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="804" width="3" height="15" fill="rgb(249,144,46)"/><text x="592.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="820" width="3" height="15" fill="rgb(210,155,42)"/><text x="592.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="836" width="3" height="15" fill="rgb(238,45,44)"/><text x="592.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="852" width="3" height="15" fill="rgb(247,216,36)"/><text x="592.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.19%)</title><rect x="589" y="868" width="3" height="15" fill="rgb(221,158,5)"/><text x="592.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="884" width="3" height="15" fill="rgb(214,180,49)"/><text x="592.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="900" width="3" height="15" fill="rgb(219,99,7)"/><text x="592.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="916" width="3" height="15" fill="rgb(207,2,6)"/><text x="592.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="932" width="3" height="15" fill="rgb(241,186,22)"/><text x="592.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="948" width="3" height="15" fill="rgb(232,130,25)"/><text x="592.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.19%)</title><rect x="589" y="964" width="3" height="15" fill="rgb(207,39,36)"/><text x="592.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="980" width="3" height="15" fill="rgb(226,186,49)"/><text x="592.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="996" width="3" height="15" fill="rgb(217,19,52)"/><text x="592.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="1012" width="3" height="15" fill="rgb(242,168,8)"/><text x="592.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="1028" width="3" height="15" fill="rgb(229,33,21)"/><text x="592.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="1044" width="3" height="15" fill="rgb(242,178,13)"/><text x="592.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.19%)</title><rect x="589" y="1060" width="3" height="15" fill="rgb(251,11,11)"/><text x="592.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="1076" width="3" height="15" fill="rgb(216,209,19)"/><text x="592.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="589" y="1092" width="3" height="15" fill="rgb(231,112,9)"/><text x="592.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="1108" width="3" height="15" fill="rgb(212,65,41)"/><text x="592.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="1124" width="3" height="15" fill="rgb(242,26,45)"/><text x="592.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="1140" width="3" height="15" fill="rgb(244,25,21)"/><text x="592.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="1156" width="3" height="15" fill="rgb(241,175,12)"/><text x="592.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="1172" width="3" height="15" fill="rgb(207,67,22)"/><text x="592.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="1188" width="3" height="15" fill="rgb(230,3,37)"/><text x="592.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.19%)</title><rect x="589" y="1204" width="3" height="15" fill="rgb(223,65,11)"/><text x="592.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="1220" width="3" height="15" fill="rgb(236,97,0)"/><text x="592.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="1236" width="3" height="15" fill="rgb(233,162,12)"/><text x="592.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="1252" width="3" height="15" fill="rgb(245,28,29)"/><text x="592.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="1268" width="3" height="15" fill="rgb(218,27,3)"/><text x="592.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="1284" width="3" height="15" fill="rgb(252,118,10)"/><text x="592.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.19%)</title><rect x="589" y="1300" width="3" height="15" fill="rgb(223,59,45)"/><text x="592.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="589" y="1316" width="3" height="15" fill="rgb(238,204,31)"/><text x="592.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="589" y="1332" width="3" height="15" fill="rgb(219,188,42)"/><text x="592.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="589" y="1348" width="3" height="15" fill="rgb(232,132,47)"/><text x="592.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="589" y="1364" width="3" height="15" fill="rgb(236,2,8)"/><text x="592.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="589" y="1380" width="3" height="15" fill="rgb(213,90,23)"/><text x="592.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:71) (1 samples, 0.19%)</title><rect x="589" y="1396" width="3" height="15" fill="rgb(207,209,11)"/><text x="592.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="589" y="1412" width="3" height="15" fill="rgb(219,55,6)"/><text x="592.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="589" y="1428" width="3" height="15" fill="rgb(221,168,33)"/><text x="592.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="589" y="1444" width="3" height="15" fill="rgb(242,53,7)"/><text x="592.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="589" y="1460" width="3" height="15" fill="rgb(246,225,22)"/><text x="592.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="589" y="1476" width="3" height="15" fill="rgb(254,181,5)"/><text x="592.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="589" y="1492" width="3" height="15" fill="rgb(211,29,40)"/><text x="592.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="589" y="1508" width="3" height="15" fill="rgb(221,100,11)"/><text x="592.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="589" y="1524" width="3" height="15" fill="rgb(231,198,41)"/><text x="592.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="589" y="1540" width="3" height="15" fill="rgb(217,52,3)"/><text x="592.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:535) (1 samples, 0.19%)</title><rect x="589" y="1556" width="3" height="15" fill="rgb(250,45,1)"/><text x="592.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.38%)</title><rect x="589" y="244" width="5" height="15" fill="rgb(247,157,37)"/><text x="592.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="589" y="260" width="5" height="15" fill="rgb(214,108,42)"/><text x="592.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="589" y="276" width="5" height="15" fill="rgb(246,92,48)"/><text x="592.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="589" y="292" width="5" height="15" fill="rgb(245,1,9)"/><text x="592.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="589" y="308" width="5" height="15" fill="rgb(215,7,3)"/><text x="592.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="589" y="324" width="5" height="15" fill="rgb(212,192,32)"/><text x="592.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.38%)</title><rect x="589" y="340" width="5" height="15" fill="rgb(231,95,4)"/><text x="592.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="589" y="356" width="5" height="15" fill="rgb(223,223,14)"/><text x="592.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.38%)</title><rect x="589" y="372" width="5" height="15" fill="rgb(253,4,0)"/><text x="592.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="589" y="388" width="5" height="15" fill="rgb(235,2,18)"/><text x="592.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="589" y="404" width="5" height="15" fill="rgb(219,64,32)"/><text x="592.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="589" y="420" width="5" height="15" fill="rgb(239,17,30)"/><text x="592.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="589" y="436" width="5" height="15" fill="rgb(206,115,38)"/><text x="592.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="589" y="452" width="5" height="15" fill="rgb(214,3,50)"/><text x="592.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="589" y="468" width="5" height="15" fill="rgb(210,113,7)"/><text x="592.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.19%)</title><rect x="592" y="484" width="2" height="15" fill="rgb(225,173,41)"/><text x="595.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="500" width="2" height="15" fill="rgb(226,67,16)"/><text x="595.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="516" width="2" height="15" fill="rgb(251,23,3)"/><text x="595.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="532" width="2" height="15" fill="rgb(214,215,35)"/><text x="595.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="592" y="548" width="2" height="15" fill="rgb(231,205,19)"/><text x="595.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="564" width="2" height="15" fill="rgb(228,38,30)"/><text x="595.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.19%)</title><rect x="592" y="580" width="2" height="15" fill="rgb(210,97,34)"/><text x="595.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="596" width="2" height="15" fill="rgb(224,139,52)"/><text x="595.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="592" y="612" width="2" height="15" fill="rgb(242,2,33)"/><text x="595.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="628" width="2" height="15" fill="rgb(236,165,21)"/><text x="595.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="644" width="2" height="15" fill="rgb(227,214,15)"/><text x="595.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="660" width="2" height="15" fill="rgb(247,120,6)"/><text x="595.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="676" width="2" height="15" fill="rgb(234,37,52)"/><text x="595.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="592" y="692" width="2" height="15" fill="rgb(253,171,2)"/><text x="595.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="708" width="2" height="15" fill="rgb(208,169,30)"/><text x="595.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.19%)</title><rect x="592" y="724" width="2" height="15" fill="rgb(239,30,33)"/><text x="595.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="740" width="2" height="15" fill="rgb(215,141,19)"/><text x="595.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="756" width="2" height="15" fill="rgb(240,142,35)"/><text x="595.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="772" width="2" height="15" fill="rgb(209,183,2)"/><text x="595.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="592" y="788" width="2" height="15" fill="rgb(221,222,0)"/><text x="595.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="804" width="2" height="15" fill="rgb(232,14,23)"/><text x="595.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.19%)</title><rect x="592" y="820" width="2" height="15" fill="rgb(237,95,35)"/><text x="595.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="836" width="2" height="15" fill="rgb(208,82,29)"/><text x="595.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="852" width="2" height="15" fill="rgb(247,23,7)"/><text x="595.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="868" width="2" height="15" fill="rgb(206,188,50)"/><text x="595.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="592" y="884" width="2" height="15" fill="rgb(240,0,54)"/><text x="595.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="900" width="2" height="15" fill="rgb(217,223,6)"/><text x="595.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.19%)</title><rect x="592" y="916" width="2" height="15" fill="rgb(226,71,16)"/><text x="595.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="932" width="2" height="15" fill="rgb(217,177,45)"/><text x="595.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="592" y="948" width="2" height="15" fill="rgb(236,96,17)"/><text x="595.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="964" width="2" height="15" fill="rgb(244,151,35)"/><text x="595.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="980" width="2" height="15" fill="rgb(218,158,36)"/><text x="595.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="996" width="2" height="15" fill="rgb(227,72,34)"/><text x="595.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="1012" width="2" height="15" fill="rgb(226,26,35)"/><text x="595.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="592" y="1028" width="2" height="15" fill="rgb(205,31,9)"/><text x="595.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="592" y="1044" width="2" height="15" fill="rgb(223,67,1)"/><text x="595.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:16) (1 samples, 0.19%)</title><rect x="592" y="1060" width="2" height="15" fill="rgb(216,116,13)"/><text x="595.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="592" y="1076" width="2" height="15" fill="rgb(253,45,45)"/><text x="595.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="592" y="1092" width="2" height="15" fill="rgb(236,196,32)"/><text x="595.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="592" y="1108" width="2" height="15" fill="rgb(214,208,53)"/><text x="595.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="592" y="1124" width="2" height="15" fill="rgb(229,54,22)"/><text x="595.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:800) (1 samples, 0.19%)</title><rect x="592" y="1140" width="2" height="15" fill="rgb(225,145,44)"/><text x="595.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.19%)</title><rect x="594" y="628" width="2" height="15" fill="rgb(241,49,11)"/><text x="597.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="594" y="644" width="2" height="15" fill="rgb(254,110,1)"/><text x="597.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="594" y="660" width="2" height="15" fill="rgb(221,89,9)"/><text x="597.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="594" y="676" width="2" height="15" fill="rgb(216,51,14)"/><text x="597.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="594" y="692" width="2" height="15" fill="rgb(223,18,38)"/><text x="597.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="594" y="708" width="2" height="15" fill="rgb(250,207,19)"/><text x="597.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.19%)</title><rect x="594" y="724" width="2" height="15" fill="rgb(223,216,20)"/><text x="597.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="594" y="740" width="2" height="15" fill="rgb(221,104,21)"/><text x="597.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="594" y="756" width="2" height="15" fill="rgb(228,162,7)"/><text x="597.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="594" y="772" width="2" height="15" fill="rgb(235,115,3)"/><text x="597.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="594" y="788" width="2" height="15" fill="rgb(217,117,43)"/><text x="597.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="594" y="804" width="2" height="15" fill="rgb(214,82,50)"/><text x="597.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.19%)</title><rect x="594" y="820" width="2" height="15" fill="rgb(212,226,4)"/><text x="597.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="594" y="836" width="2" height="15" fill="rgb(243,2,37)"/><text x="597.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="594" y="852" width="2" height="15" fill="rgb(208,115,45)"/><text x="597.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="594" y="868" width="2" height="15" fill="rgb(211,141,33)"/><text x="597.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="594" y="884" width="2" height="15" fill="rgb(211,125,14)"/><text x="597.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="594" y="900" width="2" height="15" fill="rgb(252,37,27)"/><text x="597.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.19%)</title><rect x="594" y="916" width="2" height="15" fill="rgb(228,2,17)"/><text x="597.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="594" y="932" width="2" height="15" fill="rgb(248,42,10)"/><text x="597.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="594" y="948" width="2" height="15" fill="rgb(235,227,32)"/><text x="597.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="594" y="964" width="2" height="15" fill="rgb(209,211,8)"/><text x="597.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="594" y="980" width="2" height="15" fill="rgb(214,44,24)"/><text x="597.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="594" y="996" width="2" height="15" fill="rgb(248,207,14)"/><text x="597.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py:708) (1 samples, 0.19%)</title><rect x="594" y="1012" width="2" height="15" fill="rgb(253,16,44)"/><text x="597.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.19%)</title><rect x="594" y="1028" width="2" height="15" fill="rgb(247,95,26)"/><text x="597.00" y="1038.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.19%)</title><rect x="594" y="1044" width="2" height="15" fill="rgb(216,50,34)"/><text x="597.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.19%)</title><rect x="594" y="1060" width="2" height="15" fill="rgb(227,204,24)"/><text x="597.00" y="1070.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.19%)</title><rect x="594" y="1076" width="2" height="15" fill="rgb(224,207,21)"/><text x="597.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="594" y="1092" width="2" height="15" fill="rgb(225,190,4)"/><text x="597.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.19%)</title><rect x="596" y="1012" width="2" height="15" fill="rgb(226,174,37)"/><text x="599.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1028" width="2" height="15" fill="rgb(218,205,26)"/><text x="599.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1044" width="2" height="15" fill="rgb(242,27,39)"/><text x="599.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1060" width="2" height="15" fill="rgb(209,12,41)"/><text x="599.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1076" width="2" height="15" fill="rgb(222,202,44)"/><text x="599.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1092" width="2" height="15" fill="rgb(245,192,7)"/><text x="599.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.19%)</title><rect x="596" y="1108" width="2" height="15" fill="rgb(212,135,7)"/><text x="599.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1124" width="2" height="15" fill="rgb(246,55,44)"/><text x="599.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1140" width="2" height="15" fill="rgb(209,227,14)"/><text x="599.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1156" width="2" height="15" fill="rgb(230,157,36)"/><text x="599.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1172" width="2" height="15" fill="rgb(226,220,26)"/><text x="599.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1188" width="2" height="15" fill="rgb(232,6,38)"/><text x="599.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.19%)</title><rect x="596" y="1204" width="2" height="15" fill="rgb(208,204,39)"/><text x="599.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1220" width="2" height="15" fill="rgb(239,164,4)"/><text x="599.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1236" width="2" height="15" fill="rgb(232,120,3)"/><text x="599.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1252" width="2" height="15" fill="rgb(236,83,52)"/><text x="599.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1268" width="2" height="15" fill="rgb(220,101,43)"/><text x="599.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1284" width="2" height="15" fill="rgb(238,174,51)"/><text x="599.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.19%)</title><rect x="596" y="1300" width="2" height="15" fill="rgb(233,195,53)"/><text x="599.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1316" width="2" height="15" fill="rgb(223,108,28)"/><text x="599.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1332" width="2" height="15" fill="rgb(206,7,35)"/><text x="599.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1348" width="2" height="15" fill="rgb(228,85,33)"/><text x="599.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1364" width="2" height="15" fill="rgb(233,14,20)"/><text x="599.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1380" width="2" height="15" fill="rgb(245,228,9)"/><text x="599.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.19%)</title><rect x="596" y="1396" width="2" height="15" fill="rgb(223,114,20)"/><text x="599.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1412" width="2" height="15" fill="rgb(213,128,2)"/><text x="599.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1428" width="2" height="15" fill="rgb(225,53,7)"/><text x="599.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1444" width="2" height="15" fill="rgb(252,95,26)"/><text x="599.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1460" width="2" height="15" fill="rgb(244,117,50)"/><text x="599.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1476" width="2" height="15" fill="rgb(252,180,11)"/><text x="599.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.19%)</title><rect x="596" y="1492" width="2" height="15" fill="rgb(232,158,5)"/><text x="599.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1508" width="2" height="15" fill="rgb(254,41,4)"/><text x="599.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="596" y="1524" width="2" height="15" fill="rgb(251,206,5)"/><text x="599.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1540" width="2" height="15" fill="rgb(236,38,32)"/><text x="599.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1556" width="2" height="15" fill="rgb(212,185,44)"/><text x="599.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1572" width="2" height="15" fill="rgb(236,9,2)"/><text x="599.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1588" width="2" height="15" fill="rgb(239,78,54)"/><text x="599.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="596" y="1604" width="2" height="15" fill="rgb(251,15,48)"/><text x="599.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1620" width="2" height="15" fill="rgb(241,205,33)"/><text x="599.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.19%)</title><rect x="596" y="1636" width="2" height="15" fill="rgb(217,82,28)"/><text x="599.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="596" y="1652" width="2" height="15" fill="rgb(234,131,53)"/><text x="599.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="596" y="1668" width="2" height="15" fill="rgb(217,61,18)"/><text x="599.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="596" y="1684" width="2" height="15" fill="rgb(233,10,15)"/><text x="599.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="596" y="1700" width="2" height="15" fill="rgb(254,134,7)"/><text x="599.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="596" y="1716" width="2" height="15" fill="rgb(214,169,34)"/><text x="599.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="596" y="1732" width="2" height="15" fill="rgb(251,102,52)"/><text x="599.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="596" y="1748" width="2" height="15" fill="rgb(206,77,46)"/><text x="599.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="596" y="1764" width="2" height="15" fill="rgb(224,97,27)"/><text x="599.00" y="1774.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.57%)</title><rect x="594" y="436" width="7" height="15" fill="rgb(213,154,45)"/><text x="597.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="594" y="452" width="7" height="15" fill="rgb(230,139,30)"/><text x="597.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="594" y="468" width="7" height="15" fill="rgb(240,216,18)"/><text x="597.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="594" y="484" width="7" height="15" fill="rgb(222,176,41)"/><text x="597.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="594" y="500" width="7" height="15" fill="rgb(229,95,34)"/><text x="597.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="594" y="516" width="7" height="15" fill="rgb(235,180,10)"/><text x="597.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.57%)</title><rect x="594" y="532" width="7" height="15" fill="rgb(238,189,44)"/><text x="597.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="594" y="548" width="7" height="15" fill="rgb(230,182,37)"/><text x="597.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="594" y="564" width="7" height="15" fill="rgb(214,133,38)"/><text x="597.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="594" y="580" width="7" height="15" fill="rgb(225,138,23)"/><text x="597.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="594" y="596" width="7" height="15" fill="rgb(235,174,50)"/><text x="597.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="594" y="612" width="7" height="15" fill="rgb(229,15,25)"/><text x="597.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.38%)</title><rect x="596" y="628" width="5" height="15" fill="rgb(253,226,35)"/><text x="599.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="596" y="644" width="5" height="15" fill="rgb(217,207,22)"/><text x="599.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="596" y="660" width="5" height="15" fill="rgb(205,111,52)"/><text x="599.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="596" y="676" width="5" height="15" fill="rgb(230,108,0)"/><text x="599.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="596" y="692" width="5" height="15" fill="rgb(237,126,5)"/><text x="599.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="596" y="708" width="5" height="15" fill="rgb(223,209,36)"/><text x="599.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.38%)</title><rect x="596" y="724" width="5" height="15" fill="rgb(248,123,51)"/><text x="599.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="596" y="740" width="5" height="15" fill="rgb(239,58,33)"/><text x="599.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="596" y="756" width="5" height="15" fill="rgb(249,36,34)"/><text x="599.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="596" y="772" width="5" height="15" fill="rgb(219,192,42)"/><text x="599.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="596" y="788" width="5" height="15" fill="rgb(250,112,42)"/><text x="599.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="596" y="804" width="5" height="15" fill="rgb(237,163,45)"/><text x="599.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.38%)</title><rect x="596" y="820" width="5" height="15" fill="rgb(220,63,34)"/><text x="599.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="596" y="836" width="5" height="15" fill="rgb(208,222,34)"/><text x="599.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="596" y="852" width="5" height="15" fill="rgb(249,145,52)"/><text x="599.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="596" y="868" width="5" height="15" fill="rgb(225,200,2)"/><text x="599.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="596" y="884" width="5" height="15" fill="rgb(233,101,12)"/><text x="599.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="596" y="900" width="5" height="15" fill="rgb(227,146,39)"/><text x="599.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.38%)</title><rect x="596" y="916" width="5" height="15" fill="rgb(244,84,14)"/><text x="599.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="596" y="932" width="5" height="15" fill="rgb(228,169,11)"/><text x="599.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="596" y="948" width="5" height="15" fill="rgb(245,53,29)"/><text x="599.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="596" y="964" width="5" height="15" fill="rgb(234,221,39)"/><text x="599.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="596" y="980" width="5" height="15" fill="rgb(240,101,53)"/><text x="599.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="596" y="996" width="5" height="15" fill="rgb(206,119,26)"/><text x="599.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.19%)</title><rect x="598" y="1012" width="3" height="15" fill="rgb(253,45,7)"/><text x="601.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="598" y="1028" width="3" height="15" fill="rgb(229,127,35)"/><text x="601.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="598" y="1044" width="3" height="15" fill="rgb(249,7,25)"/><text x="601.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="598" y="1060" width="3" height="15" fill="rgb(247,165,10)"/><text x="601.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="598" y="1076" width="3" height="15" fill="rgb(206,162,5)"/><text x="601.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="598" y="1092" width="3" height="15" fill="rgb(212,221,5)"/><text x="601.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.19%)</title><rect x="598" y="1108" width="3" height="15" fill="rgb(248,146,21)"/><text x="601.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py:6990) (1 samples, 0.19%)</title><rect x="598" y="1124" width="3" height="15" fill="rgb(219,66,15)"/><text x="601.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.19%)</title><rect x="598" y="1140" width="3" height="15" fill="rgb(209,162,2)"/><text x="601.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.19%)</title><rect x="598" y="1156" width="3" height="15" fill="rgb(225,12,44)"/><text x="601.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.19%)</title><rect x="598" y="1172" width="3" height="15" fill="rgb(245,182,7)"/><text x="601.00" y="1182.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="598" y="1188" width="3" height="15" fill="rgb(253,98,12)"/><text x="601.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.19%)</title><rect x="601" y="1108" width="2" height="15" fill="rgb(228,161,20)"/><text x="604.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="601" y="1124" width="2" height="15" fill="rgb(245,127,48)"/><text x="604.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="601" y="1140" width="2" height="15" fill="rgb(246,223,10)"/><text x="604.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="601" y="1156" width="2" height="15" fill="rgb(211,106,36)"/><text x="604.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="601" y="1172" width="2" height="15" fill="rgb(218,39,46)"/><text x="604.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="601" y="1188" width="2" height="15" fill="rgb(231,34,1)"/><text x="604.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.19%)</title><rect x="601" y="1204" width="2" height="15" fill="rgb(254,130,34)"/><text x="604.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="601" y="1220" width="2" height="15" fill="rgb(207,152,19)"/><text x="604.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="601" y="1236" width="2" height="15" fill="rgb(229,4,46)"/><text x="604.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="601" y="1252" width="2" height="15" fill="rgb(236,199,38)"/><text x="604.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="601" y="1268" width="2" height="15" fill="rgb(230,187,53)"/><text x="604.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="601" y="1284" width="2" height="15" fill="rgb(230,217,11)"/><text x="604.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.19%)</title><rect x="601" y="1300" width="2" height="15" fill="rgb(248,17,8)"/><text x="604.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.19%)</title><rect x="601" y="1316" width="2" height="15" fill="rgb(253,68,0)"/><text x="604.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.19%)</title><rect x="601" y="1332" width="2" height="15" fill="rgb(229,115,7)"/><text x="604.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.19%)</title><rect x="601" y="1348" width="2" height="15" fill="rgb(239,208,30)"/><text x="604.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.19%)</title><rect x="601" y="1364" width="2" height="15" fill="rgb(214,186,4)"/><text x="604.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.19%)</title><rect x="601" y="1380" width="2" height="15" fill="rgb(244,47,9)"/><text x="604.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="601" y="1396" width="2" height="15" fill="rgb(247,2,27)"/><text x="604.00" y="1406.50"></text></g><g><title>0x7f14c895ef60 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="601" y="1412" width="2" height="15" fill="rgb(236,167,35)"/><text x="604.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.96%)</title><rect x="594" y="340" width="11" height="15" fill="rgb(244,177,26)"/><text x="597.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="594" y="356" width="11" height="15" fill="rgb(225,65,38)"/><text x="597.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="594" y="372" width="11" height="15" fill="rgb(243,14,50)"/><text x="597.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="594" y="388" width="11" height="15" fill="rgb(235,198,4)"/><text x="597.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="594" y="404" width="11" height="15" fill="rgb(207,81,45)"/><text x="597.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="594" y="420" width="11" height="15" fill="rgb(235,30,4)"/><text x="597.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.38%)</title><rect x="601" y="436" width="4" height="15" fill="rgb(250,162,39)"/><text x="604.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="452" width="4" height="15" fill="rgb(242,61,43)"/><text x="604.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.38%)</title><rect x="601" y="468" width="4" height="15" fill="rgb(250,90,8)"/><text x="604.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="484" width="4" height="15" fill="rgb(240,156,13)"/><text x="604.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="500" width="4" height="15" fill="rgb(226,212,20)"/><text x="604.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="516" width="4" height="15" fill="rgb(244,20,9)"/><text x="604.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="532" width="4" height="15" fill="rgb(221,157,51)"/><text x="604.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="548" width="4" height="15" fill="rgb(225,80,48)"/><text x="604.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="564" width="4" height="15" fill="rgb(230,215,12)"/><text x="604.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.38%)</title><rect x="601" y="580" width="4" height="15" fill="rgb(237,63,30)"/><text x="604.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="596" width="4" height="15" fill="rgb(207,140,45)"/><text x="604.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="612" width="4" height="15" fill="rgb(227,93,51)"/><text x="604.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="628" width="4" height="15" fill="rgb(233,19,14)"/><text x="604.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="644" width="4" height="15" fill="rgb(209,96,38)"/><text x="604.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="660" width="4" height="15" fill="rgb(214,45,6)"/><text x="604.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.38%)</title><rect x="601" y="676" width="4" height="15" fill="rgb(236,24,32)"/><text x="604.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="692" width="4" height="15" fill="rgb(207,174,30)"/><text x="604.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="708" width="4" height="15" fill="rgb(237,40,50)"/><text x="604.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="724" width="4" height="15" fill="rgb(249,19,24)"/><text x="604.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="740" width="4" height="15" fill="rgb(205,86,34)"/><text x="604.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="756" width="4" height="15" fill="rgb(208,2,34)"/><text x="604.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.38%)</title><rect x="601" y="772" width="4" height="15" fill="rgb(243,44,29)"/><text x="604.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="788" width="4" height="15" fill="rgb(218,45,2)"/><text x="604.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="804" width="4" height="15" fill="rgb(215,214,12)"/><text x="604.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="820" width="4" height="15" fill="rgb(222,107,39)"/><text x="604.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="836" width="4" height="15" fill="rgb(238,209,26)"/><text x="604.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="852" width="4" height="15" fill="rgb(234,172,40)"/><text x="604.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.38%)</title><rect x="601" y="868" width="4" height="15" fill="rgb(241,178,20)"/><text x="604.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="884" width="4" height="15" fill="rgb(214,184,42)"/><text x="604.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.38%)</title><rect x="601" y="900" width="4" height="15" fill="rgb(253,125,49)"/><text x="604.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="916" width="4" height="15" fill="rgb(207,221,24)"/><text x="604.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="932" width="4" height="15" fill="rgb(205,44,50)"/><text x="604.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="948" width="4" height="15" fill="rgb(230,69,49)"/><text x="604.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="964" width="4" height="15" fill="rgb(208,197,48)"/><text x="604.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="980" width="4" height="15" fill="rgb(238,214,18)"/><text x="604.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="996" width="4" height="15" fill="rgb(247,103,1)"/><text x="604.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.38%)</title><rect x="601" y="1012" width="4" height="15" fill="rgb(213,93,15)"/><text x="604.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="601" y="1028" width="4" height="15" fill="rgb(253,27,11)"/><text x="604.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="601" y="1044" width="4" height="15" fill="rgb(236,54,1)"/><text x="604.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="601" y="1060" width="4" height="15" fill="rgb(221,37,36)"/><text x="604.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="601" y="1076" width="4" height="15" fill="rgb(206,90,14)"/><text x="604.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="601" y="1092" width="4" height="15" fill="rgb(250,164,41)"/><text x="604.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.19%)</title><rect x="603" y="1108" width="2" height="15" fill="rgb(240,195,32)"/><text x="606.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="603" y="1124" width="2" height="15" fill="rgb(247,205,18)"/><text x="606.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1140" width="2" height="15" fill="rgb(209,103,25)"/><text x="606.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="603" y="1156" width="2" height="15" fill="rgb(236,33,45)"/><text x="606.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="603" y="1172" width="2" height="15" fill="rgb(242,162,54)"/><text x="606.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="603" y="1188" width="2" height="15" fill="rgb(242,140,14)"/><text x="606.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="603" y="1204" width="2" height="15" fill="rgb(253,220,31)"/><text x="606.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1220" width="2" height="15" fill="rgb(210,104,6)"/><text x="606.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.19%)</title><rect x="603" y="1236" width="2" height="15" fill="rgb(250,83,24)"/><text x="606.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="603" y="1252" width="2" height="15" fill="rgb(233,177,27)"/><text x="606.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1268" width="2" height="15" fill="rgb(214,163,47)"/><text x="606.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="603" y="1284" width="2" height="15" fill="rgb(248,132,21)"/><text x="606.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="603" y="1300" width="2" height="15" fill="rgb(207,92,31)"/><text x="606.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="603" y="1316" width="2" height="15" fill="rgb(213,107,18)"/><text x="606.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="603" y="1332" width="2" height="15" fill="rgb(229,224,50)"/><text x="606.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1348" width="2" height="15" fill="rgb(207,81,54)"/><text x="606.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.19%)</title><rect x="603" y="1364" width="2" height="15" fill="rgb(218,167,12)"/><text x="606.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="603" y="1380" width="2" height="15" fill="rgb(239,75,53)"/><text x="606.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="603" y="1396" width="2" height="15" fill="rgb(231,16,45)"/><text x="606.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="603" y="1412" width="2" height="15" fill="rgb(230,35,48)"/><text x="606.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="603" y="1428" width="2" height="15" fill="rgb(249,181,33)"/><text x="606.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1444" width="2" height="15" fill="rgb(250,59,34)"/><text x="606.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.19%)</title><rect x="603" y="1460" width="2" height="15" fill="rgb(240,135,6)"/><text x="606.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="603" y="1476" width="2" height="15" fill="rgb(242,127,48)"/><text x="606.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="603" y="1492" width="2" height="15" fill="rgb(227,120,51)"/><text x="606.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="603" y="1508" width="2" height="15" fill="rgb(241,217,8)"/><text x="606.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="603" y="1524" width="2" height="15" fill="rgb(210,220,52)"/><text x="606.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="603" y="1540" width="2" height="15" fill="rgb(207,198,12)"/><text x="606.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.19%)</title><rect x="603" y="1556" width="2" height="15" fill="rgb(232,147,7)"/><text x="606.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.19%)</title><rect x="603" y="1572" width="2" height="15" fill="rgb(227,153,36)"/><text x="606.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.19%)</title><rect x="603" y="1588" width="2" height="15" fill="rgb(244,90,10)"/><text x="606.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.19%)</title><rect x="603" y="1604" width="2" height="15" fill="rgb(221,101,31)"/><text x="606.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.19%)</title><rect x="603" y="1620" width="2" height="15" fill="rgb(207,55,2)"/><text x="606.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.19%)</title><rect x="603" y="1636" width="2" height="15" fill="rgb(223,100,50)"/><text x="606.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.19%)</title><rect x="603" y="1652" width="2" height="15" fill="rgb(252,186,16)"/><text x="606.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.19%)</title><rect x="603" y="1668" width="2" height="15" fill="rgb(213,209,20)"/><text x="606.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.19%)</title><rect x="603" y="1684" width="2" height="15" fill="rgb(238,14,9)"/><text x="606.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.19%)</title><rect x="603" y="1700" width="2" height="15" fill="rgb(230,166,32)"/><text x="606.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.19%)</title><rect x="603" y="1716" width="2" height="15" fill="rgb(208,66,33)"/><text x="606.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.19%)</title><rect x="603" y="1732" width="2" height="15" fill="rgb(205,59,5)"/><text x="606.00" y="1742.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.19%)</title><rect x="603" y="1748" width="2" height="15" fill="rgb(215,187,29)"/><text x="606.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.19%)</title><rect x="603" y="1764" width="2" height="15" fill="rgb(210,105,22)"/><text x="606.00" y="1774.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.19%)</title><rect x="603" y="1780" width="2" height="15" fill="rgb(243,154,13)"/><text x="606.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.19%)</title><rect x="603" y="1796" width="2" height="15" fill="rgb(254,112,6)"/><text x="606.00" y="1806.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.19%)</title><rect x="603" y="1812" width="2" height="15" fill="rgb(234,130,37)"/><text x="606.00" y="1822.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.19%)</title><rect x="603" y="1828" width="2" height="15" fill="rgb(250,4,35)"/><text x="606.00" y="1838.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.19%)</title><rect x="603" y="1844" width="2" height="15" fill="rgb(225,152,44)"/><text x="606.00" y="1854.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:4) (15 samples, 2.87%)</title><rect x="574" y="52" width="33" height="15" fill="rgb(229,131,26)"/><text x="577.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.87%)</title><rect x="574" y="68" width="33" height="15" fill="rgb(221,55,4)"/><text x="577.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.87%)</title><rect x="574" y="84" width="33" height="15" fill="rgb(246,173,3)"/><text x="577.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.87%)</title><rect x="574" y="100" width="33" height="15" fill="rgb(249,78,46)"/><text x="577.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.87%)</title><rect x="574" y="116" width="33" height="15" fill="rgb(218,220,42)"/><text x="577.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.87%)</title><rect x="574" y="132" width="33" height="15" fill="rgb(231,209,26)"/><text x="577.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (8 samples, 1.53%)</title><rect x="589" y="148" width="18" height="15" fill="rgb(243,38,49)"/><text x="592.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.53%)</title><rect x="589" y="164" width="18" height="15" fill="rgb(240,170,34)"/><text x="592.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.53%)</title><rect x="589" y="180" width="18" height="15" fill="rgb(215,3,10)"/><text x="592.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.53%)</title><rect x="589" y="196" width="18" height="15" fill="rgb(237,51,6)"/><text x="592.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.53%)</title><rect x="589" y="212" width="18" height="15" fill="rgb(229,44,37)"/><text x="592.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.53%)</title><rect x="589" y="228" width="18" height="15" fill="rgb(248,81,43)"/><text x="592.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.15%)</title><rect x="594" y="244" width="13" height="15" fill="rgb(206,92,33)"/><text x="597.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.15%)</title><rect x="594" y="260" width="13" height="15" fill="rgb(206,140,21)"/><text x="597.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.15%)</title><rect x="594" y="276" width="13" height="15" fill="rgb(207,143,0)"/><text x="597.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.15%)</title><rect x="594" y="292" width="13" height="15" fill="rgb(230,219,1)"/><text x="597.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.15%)</title><rect x="594" y="308" width="13" height="15" fill="rgb(217,103,33)"/><text x="597.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.15%)</title><rect x="594" y="324" width="13" height="15" fill="rgb(232,229,46)"/><text x="597.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:35) (1 samples, 0.19%)</title><rect x="605" y="340" width="2" height="15" fill="rgb(241,92,14)"/><text x="608.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="605" y="356" width="2" height="15" fill="rgb(234,168,16)"/><text x="608.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="605" y="372" width="2" height="15" fill="rgb(240,30,42)"/><text x="608.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="605" y="388" width="2" height="15" fill="rgb(246,186,4)"/><text x="608.00" y="398.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.19%)</title><rect x="605" y="404" width="2" height="15" fill="rgb(228,18,47)"/><text x="608.00" y="414.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:560) (1 samples, 0.19%)</title><rect x="605" y="420" width="2" height="15" fill="rgb(236,226,42)"/><text x="608.00" y="430.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.19%)</title><rect x="607" y="164" width="3" height="15" fill="rgb(234,135,15)"/><text x="610.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.96%)</title><rect x="610" y="180" width="11" height="15" fill="rgb(213,116,47)"/><text x="613.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.38%)</title><rect x="616" y="196" width="5" height="15" fill="rgb(213,137,14)"/><text x="619.00" y="206.50"></text></g><g><title>0x7f14c897f1d1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="623" y="196" width="2" height="15" fill="rgb(254,157,38)"/><text x="626.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="625" y="228" width="3" height="15" fill="rgb(227,164,41)"/><text x="628.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="625" y="244" width="3" height="15" fill="rgb(237,129,46)"/><text x="628.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.19%)</title><rect x="625" y="260" width="3" height="15" fill="rgb(205,188,25)"/><text x="628.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.19%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(221,184,19)"/><text x="628.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="625" y="292" width="3" height="15" fill="rgb(224,102,43)"/><text x="628.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="625" y="308" width="3" height="15" fill="rgb(254,184,50)"/><text x="628.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.38%)</title><rect x="625" y="212" width="5" height="15" fill="rgb(245,112,16)"/><text x="628.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="628" y="228" width="2" height="15" fill="rgb(205,51,1)"/><text x="631.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="628" y="244" width="2" height="15" fill="rgb(251,83,41)"/><text x="631.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.19%)</title><rect x="628" y="260" width="2" height="15" fill="rgb(230,181,26)"/><text x="631.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.19%)</title><rect x="628" y="276" width="2" height="15" fill="rgb(213,64,2)"/><text x="631.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.19%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(217,58,26)"/><text x="631.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.57%)</title><rect x="625" y="196" width="7" height="15" fill="rgb(205,59,13)"/><text x="628.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="630" y="212" width="2" height="15" fill="rgb(220,165,53)"/><text x="633.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="630" y="228" width="2" height="15" fill="rgb(241,156,6)"/><text x="633.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="630" y="244" width="2" height="15" fill="rgb(231,38,3)"/><text x="633.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(210,69,19)"/><text x="633.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(241,88,41)"/><text x="633.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="630" y="292" width="2" height="15" fill="rgb(224,176,50)"/><text x="633.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.38%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(235,167,39)"/><text x="640.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="639" y="308" width="2" height="15" fill="rgb(205,26,45)"/><text x="642.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="641" y="308" width="2" height="15" fill="rgb(220,159,27)"/><text x="644.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="641" y="324" width="2" height="15" fill="rgb(245,72,43)"/><text x="644.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="641" y="340" width="2" height="15" fill="rgb(251,21,48)"/><text x="644.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="641" y="356" width="2" height="15" fill="rgb(229,46,39)"/><text x="644.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="641" y="372" width="2" height="15" fill="rgb(221,136,6)"/><text x="644.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="641" y="388" width="2" height="15" fill="rgb(254,20,50)"/><text x="644.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="643" y="340" width="3" height="15" fill="rgb(217,164,54)"/><text x="646.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="643" y="356" width="3" height="15" fill="rgb(214,123,40)"/><text x="646.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="646" y="356" width="2" height="15" fill="rgb(223,168,21)"/><text x="649.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="646" y="372" width="2" height="15" fill="rgb(227,29,46)"/><text x="649.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="646" y="388" width="2" height="15" fill="rgb(220,109,35)"/><text x="649.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="646" y="404" width="2" height="15" fill="rgb(206,162,23)"/><text x="649.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="646" y="420" width="2" height="15" fill="rgb(222,185,22)"/><text x="649.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="646" y="436" width="2" height="15" fill="rgb(211,81,18)"/><text x="649.00" y="446.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3137) (1 samples, 0.19%)</title><rect x="648" y="388" width="2" height="15" fill="rgb(237,180,23)"/><text x="651.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.38%)</title><rect x="648" y="356" width="5" height="15" fill="rgb(209,168,52)"/><text x="651.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.38%)</title><rect x="648" y="372" width="5" height="15" fill="rgb(220,81,33)"/><text x="651.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3241) (1 samples, 0.19%)</title><rect x="650" y="388" width="3" height="15" fill="rgb(210,55,52)"/><text x="653.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (10 samples, 1.91%)</title><rect x="632" y="196" width="23" height="15" fill="rgb(207,106,6)"/><text x="635.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 1.72%)</title><rect x="634" y="212" width="21" height="15" fill="rgb(228,135,16)"/><text x="637.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (9 samples, 1.72%)</title><rect x="634" y="228" width="21" height="15" fill="rgb(252,18,38)"/><text x="637.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (9 samples, 1.72%)</title><rect x="634" y="244" width="21" height="15" fill="rgb(227,77,37)"/><text x="637.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.72%)</title><rect x="634" y="260" width="21" height="15" fill="rgb(223,171,29)"/><text x="637.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 1.72%)</title><rect x="634" y="276" width="21" height="15" fill="rgb(212,189,24)"/><text x="637.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (6 samples, 1.15%)</title><rect x="641" y="292" width="14" height="15" fill="rgb(238,80,16)"/><text x="644.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.96%)</title><rect x="643" y="308" width="12" height="15" fill="rgb(223,143,34)"/><text x="646.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.96%)</title><rect x="643" y="324" width="12" height="15" fill="rgb(212,131,52)"/><text x="646.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.76%)</title><rect x="646" y="340" width="9" height="15" fill="rgb(208,207,38)"/><text x="649.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="653" y="356" width="2" height="15" fill="rgb(232,33,52)"/><text x="656.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="653" y="372" width="2" height="15" fill="rgb(249,8,37)"/><text x="656.00" y="382.50"></text></g><g><title>0x7f14894bc422 (?) (1 samples, 0.19%)</title><rect x="657" y="244" width="2" height="15" fill="rgb(232,57,21)"/><text x="660.00" y="254.50"></text></g><g><title>0x7f14894c289e (?) (1 samples, 0.19%)</title><rect x="657" y="260" width="2" height="15" fill="rgb(231,190,21)"/><text x="660.00" y="270.50"></text></g><g><title>0x7f14894c274f (?) (1 samples, 0.19%)</title><rect x="657" y="276" width="2" height="15" fill="rgb(246,59,32)"/><text x="660.00" y="286.50"></text></g><g><title>0x7f14894c8a3a (?) (1 samples, 0.19%)</title><rect x="657" y="292" width="2" height="15" fill="rgb(215,124,40)"/><text x="660.00" y="302.50"></text></g><g><title>0x7f1492924ab9 (?) (1 samples, 0.19%)</title><rect x="657" y="308" width="2" height="15" fill="rgb(211,32,5)"/><text x="660.00" y="318.50"></text></g><g><title>0x7f1492925ead (?) (1 samples, 0.19%)</title><rect x="657" y="324" width="2" height="15" fill="rgb(210,185,15)"/><text x="660.00" y="334.50"></text></g><g><title>0x7f1492924ab9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="659" y="452" width="3" height="15" fill="rgb(249,175,50)"/><text x="662.00" y="462.50"></text></g><g><title>0x7f1492925ea0 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="659" y="468" width="3" height="15" fill="rgb(227,221,37)"/><text x="662.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (4 samples, 0.76%)</title><rect x="655" y="196" width="9" height="15" fill="rgb(234,130,30)"/><text x="658.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (3 samples, 0.57%)</title><rect x="657" y="212" width="7" height="15" fill="rgb(244,219,23)"/><text x="660.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (3 samples, 0.57%)</title><rect x="657" y="228" width="7" height="15" fill="rgb(211,136,17)"/><text x="660.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (2 samples, 0.38%)</title><rect x="659" y="244" width="5" height="15" fill="rgb(221,61,35)"/><text x="662.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (2 samples, 0.38%)</title><rect x="659" y="260" width="5" height="15" fill="rgb(240,146,23)"/><text x="662.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (2 samples, 0.38%)</title><rect x="659" y="276" width="5" height="15" fill="rgb(254,188,50)"/><text x="662.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (2 samples, 0.38%)</title><rect x="659" y="292" width="5" height="15" fill="rgb(254,123,51)"/><text x="662.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (2 samples, 0.38%)</title><rect x="659" y="308" width="5" height="15" fill="rgb(252,109,53)"/><text x="662.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (2 samples, 0.38%)</title><rect x="659" y="324" width="5" height="15" fill="rgb(209,174,38)"/><text x="662.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (2 samples, 0.38%)</title><rect x="659" y="340" width="5" height="15" fill="rgb(253,68,44)"/><text x="662.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (2 samples, 0.38%)</title><rect x="659" y="356" width="5" height="15" fill="rgb(252,79,49)"/><text x="662.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (2 samples, 0.38%)</title><rect x="659" y="372" width="5" height="15" fill="rgb(253,12,4)"/><text x="662.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (2 samples, 0.38%)</title><rect x="659" y="388" width="5" height="15" fill="rgb(223,159,21)"/><text x="662.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (2 samples, 0.38%)</title><rect x="659" y="404" width="5" height="15" fill="rgb(248,109,24)"/><text x="662.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (2 samples, 0.38%)</title><rect x="659" y="420" width="5" height="15" fill="rgb(215,186,1)"/><text x="662.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (2 samples, 0.38%)</title><rect x="659" y="436" width="5" height="15" fill="rgb(227,132,9)"/><text x="662.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="662" y="452" width="2" height="15" fill="rgb(206,189,20)"/><text x="665.00" y="462.50"></text></g><g><title>0x7f1492923daa (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="662" y="468" width="2" height="15" fill="rgb(218,197,43)"/><text x="665.00" y="478.50"></text></g><g><title>0x7f1492925cf9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="662" y="484" width="2" height="15" fill="rgb(221,229,0)"/><text x="665.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.19%)</title><rect x="668" y="228" width="3" height="15" fill="rgb(217,158,41)"/><text x="671.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.57%)</title><rect x="671" y="244" width="6" height="15" fill="rgb(249,153,10)"/><text x="674.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.57%)</title><rect x="671" y="260" width="6" height="15" fill="rgb(249,56,35)"/><text x="674.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (3 samples, 0.57%)</title><rect x="671" y="276" width="6" height="15" fill="rgb(206,75,17)"/><text x="674.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (3 samples, 0.57%)</title><rect x="671" y="292" width="6" height="15" fill="rgb(243,45,31)"/><text x="674.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="675" y="308" width="2" height="15" fill="rgb(222,221,17)"/><text x="678.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.19%)</title><rect x="677" y="292" width="3" height="15" fill="rgb(221,2,38)"/><text x="680.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.38%)</title><rect x="677" y="260" width="5" height="15" fill="rgb(233,173,17)"/><text x="680.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.38%)</title><rect x="677" y="276" width="5" height="15" fill="rgb(229,161,27)"/><text x="680.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.19%)</title><rect x="680" y="292" width="2" height="15" fill="rgb(247,156,53)"/><text x="683.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="682" y="260" width="2" height="15" fill="rgb(231,189,11)"/><text x="685.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.19%)</title><rect x="682" y="276" width="2" height="15" fill="rgb(225,186,18)"/><text x="685.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1015) (1 samples, 0.19%)</title><rect x="684" y="340" width="2" height="15" fill="rgb(226,119,27)"/><text x="687.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.38%)</title><rect x="684" y="260" width="5" height="15" fill="rgb(247,166,17)"/><text x="687.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.38%)</title><rect x="684" y="276" width="5" height="15" fill="rgb(235,101,26)"/><text x="687.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.38%)</title><rect x="684" y="292" width="5" height="15" fill="rgb(253,68,30)"/><text x="687.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.38%)</title><rect x="684" y="308" width="5" height="15" fill="rgb(249,183,44)"/><text x="687.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (2 samples, 0.38%)</title><rect x="684" y="324" width="5" height="15" fill="rgb(221,103,30)"/><text x="687.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.19%)</title><rect x="686" y="340" width="3" height="15" fill="rgb(219,175,50)"/><text x="689.00" y="350.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="686" y="356" width="3" height="15" fill="rgb(214,98,4)"/><text x="689.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.15%)</title><rect x="677" y="244" width="14" height="15" fill="rgb(207,206,37)"/><text x="680.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="689" y="260" width="2" height="15" fill="rgb(228,16,51)"/><text x="692.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (10 samples, 1.91%)</title><rect x="671" y="228" width="22" height="15" fill="rgb(242,198,21)"/><text x="674.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.19%)</title><rect x="691" y="244" width="2" height="15" fill="rgb(242,111,12)"/><text x="694.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.19%)</title><rect x="691" y="260" width="2" height="15" fill="rgb(213,94,5)"/><text x="694.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (14 samples, 2.68%)</title><rect x="664" y="196" width="31" height="15" fill="rgb(231,120,54)"/><text x="667.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (13 samples, 2.49%)</title><rect x="666" y="212" width="29" height="15" fill="rgb(248,109,35)"/><text x="669.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.19%)</title><rect x="693" y="228" width="2" height="15" fill="rgb(206,76,33)"/><text x="696.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4713) (1 samples, 0.19%)</title><rect x="693" y="244" width="2" height="15" fill="rgb(236,141,25)"/><text x="696.00" y="254.50"></text></g><g><title>0x7f14c8a3c130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="698" y="276" width="2" height="15" fill="rgb(247,96,27)"/><text x="701.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.19%)</title><rect x="700" y="324" width="2" height="15" fill="rgb(247,60,52)"/><text x="703.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="700" y="340" width="2" height="15" fill="rgb(241,168,51)"/><text x="703.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="702" y="356" width="2" height="15" fill="rgb(235,41,17)"/><text x="705.00" y="366.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="704" y="420" width="3" height="15" fill="rgb(241,73,40)"/><text x="707.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.57%)</title><rect x="702" y="340" width="7" height="15" fill="rgb(227,104,5)"/><text x="705.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.38%)</title><rect x="704" y="356" width="5" height="15" fill="rgb(229,13,2)"/><text x="707.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.38%)</title><rect x="704" y="372" width="5" height="15" fill="rgb(212,35,10)"/><text x="707.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.38%)</title><rect x="704" y="388" width="5" height="15" fill="rgb(220,116,43)"/><text x="707.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.38%)</title><rect x="704" y="404" width="5" height="15" fill="rgb(224,210,50)"/><text x="707.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.19%)</title><rect x="707" y="420" width="2" height="15" fill="rgb(216,180,42)"/><text x="710.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="707" y="436" width="2" height="15" fill="rgb(228,210,50)"/><text x="710.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.19%)</title><rect x="707" y="452" width="2" height="15" fill="rgb(222,88,54)"/><text x="710.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="707" y="468" width="2" height="15" fill="rgb(213,3,46)"/><text x="710.00" y="478.50"></text></g><g><title>0x7f14c897f120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="711" y="356" width="2" height="15" fill="rgb(214,26,34)"/><text x="714.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.19%)</title><rect x="713" y="372" width="3" height="15" fill="rgb(238,134,32)"/><text x="716.00" y="382.50"></text></g><g><title>0x7f14c897f120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="713" y="388" width="3" height="15" fill="rgb(251,176,48)"/><text x="716.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="716" y="372" width="2" height="15" fill="rgb(244,128,46)"/><text x="719.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.19%)</title><rect x="716" y="388" width="2" height="15" fill="rgb(215,94,25)"/><text x="719.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="713" y="356" width="7" height="15" fill="rgb(253,76,3)"/><text x="716.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="718" y="372" width="2" height="15" fill="rgb(224,211,9)"/><text x="721.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.19%)</title><rect x="718" y="388" width="2" height="15" fill="rgb(207,152,42)"/><text x="721.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="718" y="404" width="2" height="15" fill="rgb(239,24,34)"/><text x="721.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="718" y="420" width="2" height="15" fill="rgb(227,93,31)"/><text x="721.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.19%)</title><rect x="718" y="436" width="2" height="15" fill="rgb(206,65,44)"/><text x="721.00" y="446.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.19%)</title><rect x="718" y="452" width="2" height="15" fill="rgb(232,36,54)"/><text x="721.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 1.72%)</title><rect x="702" y="324" width="20" height="15" fill="rgb(248,99,33)"/><text x="705.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 1.15%)</title><rect x="709" y="340" width="13" height="15" fill="rgb(205,106,22)"/><text x="712.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.19%)</title><rect x="720" y="356" width="2" height="15" fill="rgb(221,168,30)"/><text x="723.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.19%)</title><rect x="720" y="372" width="2" height="15" fill="rgb(226,66,15)"/><text x="723.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="720" y="388" width="2" height="15" fill="rgb(219,184,34)"/><text x="723.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="720" y="404" width="2" height="15" fill="rgb(246,85,3)"/><text x="723.00" y="414.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.49%)</title><rect x="700" y="308" width="29" height="15" fill="rgb(250,52,37)"/><text x="703.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (3 samples, 0.57%)</title><rect x="722" y="324" width="7" height="15" fill="rgb(225,83,20)"/><text x="725.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (3 samples, 0.57%)</title><rect x="722" y="340" width="7" height="15" fill="rgb(252,53,26)"/><text x="725.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="727" y="356" width="2" height="15" fill="rgb(218,36,5)"/><text x="730.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.19%)</title><rect x="727" y="372" width="2" height="15" fill="rgb(231,59,1)"/><text x="730.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 3.06%)</title><rect x="695" y="244" width="36" height="15" fill="rgb(226,41,18)"/><text x="698.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (16 samples, 3.06%)</title><rect x="695" y="260" width="36" height="15" fill="rgb(209,193,36)"/><text x="698.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 2.68%)</title><rect x="700" y="276" width="31" height="15" fill="rgb(226,95,8)"/><text x="703.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (14 samples, 2.68%)</title><rect x="700" y="292" width="31" height="15" fill="rgb(243,187,29)"/><text x="703.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:94) (1 samples, 0.19%)</title><rect x="729" y="308" width="2" height="15" fill="rgb(210,154,13)"/><text x="732.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (17 samples, 3.25%)</title><rect x="695" y="212" width="39" height="15" fill="rgb(225,151,23)"/><text x="698.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 3.25%)</title><rect x="695" y="228" width="39" height="15" fill="rgb(231,74,18)"/><text x="698.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.19%)</title><rect x="731" y="244" width="3" height="15" fill="rgb(215,146,48)"/><text x="734.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (51 samples, 9.75%)</title><rect x="621" y="180" width="115" height="15" fill="rgb(246,141,15)"/><text x="624.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (18 samples, 3.44%)</title><rect x="695" y="196" width="41" height="15" fill="rgb(221,170,25)"/><text x="698.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.19%)</title><rect x="734" y="212" width="2" height="15" fill="rgb(233,174,41)"/><text x="737.00" y="222.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (59 samples, 11.28%)</title><rect x="607" y="100" width="134" height="15" fill="rgb(243,47,35)"/><text x="610.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (59 samples, 11.28%)</title><rect x="607" y="116" width="134" height="15" fill="rgb(229,207,47)"/><text x="610.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (59 samples, 11.28%)</title><rect x="607" y="132" width="134" height="15" fill="rgb(238,141,21)"/><text x="610.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (59 samples, 11.28%)</title><rect x="607" y="148" width="134" height="15" fill="rgb(215,5,6)"/><text x="610.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (58 samples, 11.09%)</title><rect x="610" y="164" width="131" height="15" fill="rgb(251,14,2)"/><text x="613.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.38%)</title><rect x="736" y="180" width="5" height="15" fill="rgb(231,138,35)"/><text x="739.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.38%)</title><rect x="741" y="164" width="4" height="15" fill="rgb(251,213,38)"/><text x="744.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="765" y="180" width="3" height="15" fill="rgb(248,12,8)"/><text x="768.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (18 samples, 3.44%)</title><rect x="768" y="180" width="40" height="15" fill="rgb(233,92,46)"/><text x="771.00" y="190.50">run..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.38%)</title><rect x="804" y="196" width="4" height="15" fill="rgb(246,14,19)"/><text x="807.00" y="206.50"></text></g><g><title>0x7f14c895fdd6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="815" y="276" width="2" height="15" fill="rgb(239,189,39)"/><text x="818.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.38%)</title><rect x="815" y="212" width="4" height="15" fill="rgb(222,71,8)"/><text x="818.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.38%)</title><rect x="815" y="228" width="4" height="15" fill="rgb(242,218,4)"/><text x="818.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (2 samples, 0.38%)</title><rect x="815" y="244" width="4" height="15" fill="rgb(209,193,9)"/><text x="818.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.38%)</title><rect x="815" y="260" width="4" height="15" fill="rgb(232,55,19)"/><text x="818.00" y="270.50"></text></g><g><title>0x7f14c895fe4c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="817" y="276" width="2" height="15" fill="rgb(248,43,20)"/><text x="820.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="819" y="212" width="3" height="15" fill="rgb(244,189,53)"/><text x="822.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="819" y="228" width="3" height="15" fill="rgb(227,129,54)"/><text x="822.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.19%)</title><rect x="826" y="260" width="3" height="15" fill="rgb(247,29,49)"/><text x="829.00" y="270.50"></text></g><g><title>array_item (mapping.c:1366) (1 samples, 0.19%)</title><rect x="826" y="276" width="3" height="15" fill="rgb(254,24,45)"/><text x="829.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="829" y="308" width="2" height="15" fill="rgb(233,84,16)"/><text x="832.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (4 samples, 0.76%)</title><rect x="824" y="228" width="9" height="15" fill="rgb(253,151,1)"/><text x="827.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 0.57%)</title><rect x="826" y="244" width="7" height="15" fill="rgb(220,143,23)"/><text x="829.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (2 samples, 0.38%)</title><rect x="829" y="260" width="4" height="15" fill="rgb(249,173,12)"/><text x="832.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (2 samples, 0.38%)</title><rect x="829" y="276" width="4" height="15" fill="rgb(246,163,13)"/><text x="832.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.38%)</title><rect x="829" y="292" width="4" height="15" fill="rgb(252,136,26)"/><text x="832.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="831" y="308" width="2" height="15" fill="rgb(227,173,2)"/><text x="834.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (6 samples, 1.15%)</title><rect x="822" y="212" width="13" height="15" fill="rgb(214,2,36)"/><text x="825.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="833" y="228" width="2" height="15" fill="rgb(240,132,31)"/><text x="836.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="833" y="244" width="2" height="15" fill="rgb(239,54,28)"/><text x="836.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.19%)</title><rect x="833" y="260" width="2" height="15" fill="rgb(231,68,33)"/><text x="836.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="833" y="276" width="2" height="15" fill="rgb(250,80,31)"/><text x="836.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="833" y="292" width="2" height="15" fill="rgb(241,96,27)"/><text x="836.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (10 samples, 1.91%)</title><rect x="815" y="196" width="23" height="15" fill="rgb(216,156,22)"/><text x="818.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="835" y="212" width="3" height="15" fill="rgb(251,196,54)"/><text x="838.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="835" y="228" width="3" height="15" fill="rgb(227,157,1)"/><text x="838.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="849" y="260" width="2" height="15" fill="rgb(222,147,49)"/><text x="852.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="849" y="276" width="2" height="15" fill="rgb(240,127,12)"/><text x="852.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:914) (1 samples, 0.19%)</title><rect x="849" y="292" width="2" height="15" fill="rgb(239,159,19)"/><text x="852.00" y="302.50"></text></g><g><title>locate_key (ufunc_object.c:864) (1 samples, 0.19%)</title><rect x="849" y="308" width="2" height="15" fill="rgb(245,40,33)"/><text x="852.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="851" y="308" width="2" height="15" fill="rgb(224,212,2)"/><text x="854.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.19%)</title><rect x="851" y="324" width="2" height="15" fill="rgb(207,42,33)"/><text x="854.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.38%)</title><rect x="851" y="276" width="5" height="15" fill="rgb(248,17,7)"/><text x="854.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.38%)</title><rect x="851" y="292" width="5" height="15" fill="rgb(238,152,54)"/><text x="854.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="853" y="308" width="3" height="15" fill="rgb(219,109,38)"/><text x="856.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.19%)</title><rect x="853" y="324" width="3" height="15" fill="rgb(217,220,6)"/><text x="856.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.19%)</title><rect x="853" y="340" width="3" height="15" fill="rgb(205,197,27)"/><text x="856.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.19%)</title><rect x="853" y="356" width="3" height="15" fill="rgb(228,13,52)"/><text x="856.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.19%)</title><rect x="853" y="372" width="3" height="15" fill="rgb(220,133,35)"/><text x="856.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="856" y="276" width="2" height="15" fill="rgb(232,89,22)"/><text x="859.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.19%)</title><rect x="856" y="292" width="2" height="15" fill="rgb(234,95,46)"/><text x="859.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1601) (1 samples, 0.19%)</title><rect x="856" y="308" width="2" height="15" fill="rgb(232,71,16)"/><text x="859.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (7 samples, 1.34%)</title><rect x="844" y="228" width="16" height="15" fill="rgb(219,115,9)"/><text x="847.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.96%)</title><rect x="849" y="244" width="11" height="15" fill="rgb(236,7,20)"/><text x="852.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.76%)</title><rect x="851" y="260" width="9" height="15" fill="rgb(241,79,27)"/><text x="854.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.19%)</title><rect x="858" y="276" width="2" height="15" fill="rgb(244,173,26)"/><text x="861.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:27) (1 samples, 0.19%)</title><rect x="860" y="228" width="2" height="15" fill="rgb(217,204,52)"/><text x="863.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="865" y="244" width="2" height="15" fill="rgb(231,161,23)"/><text x="868.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="867" y="244" width="2" height="15" fill="rgb(236,228,27)"/><text x="870.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.19%)</title><rect x="871" y="260" width="3" height="15" fill="rgb(239,106,39)"/><text x="874.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.19%)</title><rect x="874" y="260" width="2" height="15" fill="rgb(231,173,32)"/><text x="877.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.38%)</title><rect x="878" y="292" width="5" height="15" fill="rgb(239,228,4)"/><text x="881.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="880" y="308" width="3" height="15" fill="rgb(233,185,33)"/><text x="883.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="883" y="340" width="2" height="15" fill="rgb(244,216,8)"/><text x="886.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(231,207,7)"/><text x="886.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="885" y="388" width="2" height="15" fill="rgb(205,119,41)"/><text x="888.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.57%)</title><rect x="883" y="308" width="6" height="15" fill="rgb(232,186,1)"/><text x="886.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.57%)</title><rect x="883" y="324" width="6" height="15" fill="rgb(229,174,26)"/><text x="886.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.38%)</title><rect x="885" y="340" width="4" height="15" fill="rgb(221,180,54)"/><text x="888.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.38%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(249,71,12)"/><text x="888.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="885" y="372" width="4" height="15" fill="rgb(244,18,26)"/><text x="888.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="887" y="388" width="2" height="15" fill="rgb(235,47,48)"/><text x="890.00" y="398.50"></text></g><g><title>0x7f14c8974e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="887" y="404" width="2" height="15" fill="rgb(220,20,10)"/><text x="890.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.19%)</title><rect x="889" y="324" width="3" height="15" fill="rgb(219,162,12)"/><text x="892.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.19%)</title><rect x="889" y="340" width="3" height="15" fill="rgb(240,61,46)"/><text x="892.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="892" y="340" width="2" height="15" fill="rgb(254,83,29)"/><text x="895.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="892" y="356" width="2" height="15" fill="rgb(205,56,28)"/><text x="895.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="892" y="372" width="2" height="15" fill="rgb(207,180,15)"/><text x="895.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.19%)</title><rect x="892" y="388" width="2" height="15" fill="rgb(243,61,5)"/><text x="895.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="894" y="420" width="2" height="15" fill="rgb(220,97,30)"/><text x="897.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="894" y="436" width="2" height="15" fill="rgb(211,15,34)"/><text x="897.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="894" y="452" width="2" height="15" fill="rgb(252,132,37)"/><text x="897.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="894" y="468" width="2" height="15" fill="rgb(247,93,48)"/><text x="897.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.38%)</title><rect x="894" y="356" width="4" height="15" fill="rgb(216,30,19)"/><text x="897.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.38%)</title><rect x="894" y="372" width="4" height="15" fill="rgb(208,180,52)"/><text x="897.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.38%)</title><rect x="894" y="388" width="4" height="15" fill="rgb(205,48,47)"/><text x="897.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.38%)</title><rect x="894" y="404" width="4" height="15" fill="rgb(210,221,42)"/><text x="897.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="896" y="420" width="2" height="15" fill="rgb(253,151,38)"/><text x="899.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.19%)</title><rect x="896" y="436" width="2" height="15" fill="rgb(250,168,24)"/><text x="899.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:169) (1 samples, 0.19%)</title><rect x="896" y="452" width="2" height="15" fill="rgb(247,84,14)"/><text x="899.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="898" y="356" width="3" height="15" fill="rgb(241,173,48)"/><text x="901.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.19%)</title><rect x="898" y="372" width="3" height="15" fill="rgb(253,64,27)"/><text x="901.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.19%)</title><rect x="898" y="388" width="3" height="15" fill="rgb(212,154,9)"/><text x="901.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (29 samples, 5.54%)</title><rect x="838" y="196" width="65" height="15" fill="rgb(218,177,37)"/><text x="841.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 5.16%)</title><rect x="842" y="212" width="61" height="15" fill="rgb(234,88,27)"/><text x="845.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (18 samples, 3.44%)</title><rect x="862" y="228" width="41" height="15" fill="rgb(212,26,5)"/><text x="865.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (15 samples, 2.87%)</title><rect x="869" y="244" width="34" height="15" fill="rgb(209,58,19)"/><text x="872.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.29%)</title><rect x="876" y="260" width="27" height="15" fill="rgb(220,218,20)"/><text x="879.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 2.29%)</title><rect x="876" y="276" width="27" height="15" fill="rgb(231,143,10)"/><text x="879.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 1.72%)</title><rect x="883" y="292" width="20" height="15" fill="rgb(242,108,32)"/><text x="886.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.15%)</title><rect x="889" y="308" width="14" height="15" fill="rgb(251,144,35)"/><text x="892.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.96%)</title><rect x="892" y="324" width="11" height="15" fill="rgb(227,131,38)"/><text x="895.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.76%)</title><rect x="894" y="340" width="9" height="15" fill="rgb(239,7,43)"/><text x="897.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="901" y="356" width="2" height="15" fill="rgb(240,223,11)"/><text x="904.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="901" y="372" width="2" height="15" fill="rgb(224,166,45)"/><text x="904.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="901" y="388" width="2" height="15" fill="rgb(225,224,5)"/><text x="904.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.19%)</title><rect x="903" y="196" width="2" height="15" fill="rgb(212,209,30)"/><text x="906.00" y="206.50"></text></g><g><title>0x7f1492925ea0 (libgomp.so.1.0.0) (2 samples, 0.38%)</title><rect x="905" y="468" width="5" height="15" fill="rgb(229,171,28)"/><text x="908.00" y="478.50"></text></g><g><title>0x7f1492925ea9 (libgomp.so.1.0.0) (6 samples, 1.15%)</title><rect x="910" y="468" width="13" height="15" fill="rgb(242,21,36)"/><text x="913.00" y="478.50"></text></g><g><title>0x7f1492925eab (libgomp.so.1.0.0) (5 samples, 0.96%)</title><rect x="923" y="468" width="12" height="15" fill="rgb(219,177,39)"/><text x="926.00" y="478.50"></text></g><g><title>0x7f1492924ab9 (libgomp.so.1.0.0) (20 samples, 3.82%)</title><rect x="905" y="452" width="45" height="15" fill="rgb(253,50,16)"/><text x="908.00" y="462.50">0x7f..</text></g><g><title>0x7f1492925ead (libgomp.so.1.0.0) (7 samples, 1.34%)</title><rect x="935" y="468" width="15" height="15" fill="rgb(235,28,24)"/><text x="938.00" y="478.50"></text></g><g><title>0x7f1492925cf9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="950" y="484" width="3" height="15" fill="rgb(227,162,27)"/><text x="953.00" y="494.50"></text></g><g><title>0x7f1492925cfb (libgomp.so.1.0.0) (2 samples, 0.38%)</title><rect x="953" y="484" width="4" height="15" fill="rgb(251,27,8)"/><text x="956.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (24 samples, 4.59%)</title><rect x="905" y="228" width="54" height="15" fill="rgb(213,223,17)"/><text x="908.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 4.59%)</title><rect x="905" y="244" width="54" height="15" fill="rgb(239,56,3)"/><text x="908.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 4.59%)</title><rect x="905" y="260" width="54" height="15" fill="rgb(244,42,10)"/><text x="908.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (24 samples, 4.59%)</title><rect x="905" y="276" width="54" height="15" fill="rgb(223,2,39)"/><text x="908.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (24 samples, 4.59%)</title><rect x="905" y="292" width="54" height="15" fill="rgb(215,46,42)"/><text x="908.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (24 samples, 4.59%)</title><rect x="905" y="308" width="54" height="15" fill="rgb(213,0,29)"/><text x="908.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (24 samples, 4.59%)</title><rect x="905" y="324" width="54" height="15" fill="rgb(208,62,49)"/><text x="908.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (24 samples, 4.59%)</title><rect x="905" y="340" width="54" height="15" fill="rgb(250,23,12)"/><text x="908.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (24 samples, 4.59%)</title><rect x="905" y="356" width="54" height="15" fill="rgb(240,208,14)"/><text x="908.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (24 samples, 4.59%)</title><rect x="905" y="372" width="54" height="15" fill="rgb(218,166,17)"/><text x="908.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (24 samples, 4.59%)</title><rect x="905" y="388" width="54" height="15" fill="rgb(218,25,39)"/><text x="908.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (24 samples, 4.59%)</title><rect x="905" y="404" width="54" height="15" fill="rgb(240,63,31)"/><text x="908.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (24 samples, 4.59%)</title><rect x="905" y="420" width="54" height="15" fill="rgb(206,144,24)"/><text x="908.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (24 samples, 4.59%)</title><rect x="905" y="436" width="54" height="15" fill="rgb(226,180,52)"/><text x="908.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.76%)</title><rect x="950" y="452" width="9" height="15" fill="rgb(230,148,17)"/><text x="953.00" y="462.50"></text></g><g><title>0x7f1492923daa (libgomp.so.1.0.0) (4 samples, 0.76%)</title><rect x="950" y="468" width="9" height="15" fill="rgb(223,187,47)"/><text x="953.00" y="478.50"></text></g><g><title>0x7f1492925cfd (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="957" y="484" width="2" height="15" fill="rgb(217,72,38)"/><text x="960.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 4.78%)</title><rect x="905" y="196" width="57" height="15" fill="rgb(242,165,50)"/><text x="908.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 4.78%)</title><rect x="905" y="212" width="57" height="15" fill="rgb(205,120,21)"/><text x="908.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:62) (1 samples, 0.19%)</title><rect x="959" y="228" width="3" height="15" fill="rgb(209,131,29)"/><text x="962.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.19%)</title><rect x="959" y="244" width="3" height="15" fill="rgb(239,211,8)"/><text x="962.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="959" y="260" width="3" height="15" fill="rgb(220,203,42)"/><text x="962.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.19%)</title><rect x="959" y="276" width="3" height="15" fill="rgb(251,40,19)"/><text x="962.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(236,30,31)"/><text x="962.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.19%)</title><rect x="959" y="308" width="3" height="15" fill="rgb(212,60,32)"/><text x="962.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.19%)</title><rect x="964" y="212" width="2" height="15" fill="rgb(235,5,24)"/><text x="967.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.19%)</title><rect x="968" y="228" width="3" height="15" fill="rgb(210,127,27)"/><text x="971.00" y="238.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.19%)</title><rect x="968" y="244" width="3" height="15" fill="rgb(219,145,52)"/><text x="971.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="968" y="260" width="3" height="15" fill="rgb(224,87,10)"/><text x="971.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (2 samples, 0.38%)</title><rect x="971" y="228" width="4" height="15" fill="rgb(212,44,34)"/><text x="974.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="977" y="244" width="3" height="15" fill="rgb(210,45,48)"/><text x="980.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="977" y="260" width="3" height="15" fill="rgb(229,168,26)"/><text x="980.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="977" y="276" width="3" height="15" fill="rgb(223,2,18)"/><text x="980.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="977" y="292" width="3" height="15" fill="rgb(224,204,2)"/><text x="980.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="977" y="308" width="3" height="15" fill="rgb(235,63,14)"/><text x="980.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.19%)</title><rect x="980" y="260" width="2" height="15" fill="rgb(227,193,11)"/><text x="983.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.19%)</title><rect x="982" y="260" width="2" height="15" fill="rgb(232,178,4)"/><text x="985.00" y="270.50"></text></g><g><title>0x7f14c897f13e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="982" y="276" width="2" height="15" fill="rgb(232,157,23)"/><text x="985.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="984" y="260" width="2" height="15" fill="rgb(236,218,6)"/><text x="987.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.19%)</title><rect x="984" y="276" width="2" height="15" fill="rgb(243,82,4)"/><text x="987.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="986" y="260" width="3" height="15" fill="rgb(219,153,45)"/><text x="989.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="986" y="276" width="3" height="15" fill="rgb(222,1,3)"/><text x="989.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.19%)</title><rect x="986" y="292" width="3" height="15" fill="rgb(237,22,40)"/><text x="989.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(237,116,30)"/><text x="992.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:454) (1 samples, 0.19%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(214,178,7)"/><text x="992.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(249,68,42)"/><text x="994.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="991" y="308" width="2" height="15" fill="rgb(251,12,6)"/><text x="994.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.19%)</title><rect x="991" y="324" width="2" height="15" fill="rgb(222,127,45)"/><text x="994.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="993" y="308" width="2" height="15" fill="rgb(226,217,52)"/><text x="996.00" y="318.50"></text></g><g><title>0x7f14c895e97c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="993" y="324" width="2" height="15" fill="rgb(230,196,6)"/><text x="996.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.19%)</title><rect x="995" y="308" width="3" height="15" fill="rgb(233,79,20)"/><text x="998.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.72%)</title><rect x="980" y="244" width="20" height="15" fill="rgb(216,216,35)"/><text x="983.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.96%)</title><rect x="989" y="260" width="11" height="15" fill="rgb(208,151,53)"/><text x="992.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.96%)</title><rect x="989" y="276" width="11" height="15" fill="rgb(208,118,20)"/><text x="992.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 0.57%)</title><rect x="993" y="292" width="7" height="15" fill="rgb(248,70,16)"/><text x="996.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="998" y="308" width="2" height="15" fill="rgb(245,208,38)"/><text x="1001.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="1000" y="260" width="2" height="15" fill="rgb(237,165,18)"/><text x="1003.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.38%)</title><rect x="1000" y="244" width="4" height="15" fill="rgb(227,27,45)"/><text x="1003.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.19%)</title><rect x="1002" y="260" width="2" height="15" fill="rgb(216,54,9)"/><text x="1005.00" y="270.50"></text></g><g><title>0x7f14c7b81a80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1002" y="276" width="2" height="15" fill="rgb(205,146,39)"/><text x="1005.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="1004" y="244" width="3" height="15" fill="rgb(241,22,17)"/><text x="1007.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:439) (1 samples, 0.19%)</title><rect x="1004" y="260" width="3" height="15" fill="rgb(217,220,10)"/><text x="1007.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (16 samples, 3.06%)</title><rect x="975" y="228" width="36" height="15" fill="rgb(231,195,37)"/><text x="978.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (2 samples, 0.38%)</title><rect x="1007" y="244" width="4" height="15" fill="rgb(230,203,15)"/><text x="1010.00" y="254.50"></text></g><g><title>0x7f14c897f1d1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1011" y="244" width="3" height="15" fill="rgb(227,218,24)"/><text x="1014.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="1014" y="276" width="2" height="15" fill="rgb(211,107,18)"/><text x="1017.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.19%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(250,103,0)"/><text x="1017.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="1016" y="308" width="2" height="15" fill="rgb(242,73,47)"/><text x="1019.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="1016" y="324" width="2" height="15" fill="rgb(252,86,24)"/><text x="1019.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.19%)</title><rect x="1016" y="340" width="2" height="15" fill="rgb(220,98,44)"/><text x="1019.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.19%)</title><rect x="1016" y="356" width="2" height="15" fill="rgb(247,0,34)"/><text x="1019.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.19%)</title><rect x="1018" y="324" width="2" height="15" fill="rgb(228,181,22)"/><text x="1021.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.38%)</title><rect x="1018" y="308" width="5" height="15" fill="rgb(232,11,22)"/><text x="1021.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1678) (1 samples, 0.19%)</title><rect x="1020" y="324" width="3" height="15" fill="rgb(213,86,22)"/><text x="1023.00" y="334.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.19%)</title><rect x="1020" y="340" width="3" height="15" fill="rgb(254,219,25)"/><text x="1023.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.19%)</title><rect x="1023" y="308" width="2" height="15" fill="rgb(237,160,9)"/><text x="1026.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.19%)</title><rect x="1023" y="324" width="2" height="15" fill="rgb(251,64,17)"/><text x="1026.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.19%)</title><rect x="1025" y="340" width="2" height="15" fill="rgb(215,25,22)"/><text x="1028.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (6 samples, 1.15%)</title><rect x="1016" y="292" width="13" height="15" fill="rgb(223,89,2)"/><text x="1019.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.38%)</title><rect x="1025" y="308" width="4" height="15" fill="rgb(225,57,16)"/><text x="1028.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.38%)</title><rect x="1025" y="324" width="4" height="15" fill="rgb(210,136,0)"/><text x="1028.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="1027" y="340" width="2" height="15" fill="rgb(208,116,28)"/><text x="1030.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="1027" y="356" width="2" height="15" fill="rgb(247,214,30)"/><text x="1030.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="1027" y="372" width="2" height="15" fill="rgb(226,212,26)"/><text x="1030.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="1027" y="388" width="2" height="15" fill="rgb(252,106,40)"/><text x="1030.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.19%)</title><rect x="1027" y="404" width="2" height="15" fill="rgb(206,207,9)"/><text x="1030.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="1029" y="292" width="3" height="15" fill="rgb(228,180,18)"/><text x="1032.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="1029" y="308" width="3" height="15" fill="rgb(229,190,18)"/><text x="1032.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:246) (1 samples, 0.19%)</title><rect x="1029" y="324" width="3" height="15" fill="rgb(230,108,12)"/><text x="1032.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_subtract_FLOAT (simd.inc.src:778) (1 samples, 0.19%)</title><rect x="1029" y="340" width="3" height="15" fill="rgb(216,196,39)"/><text x="1032.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.72%)</title><rect x="1014" y="244" width="20" height="15" fill="rgb(254,119,16)"/><text x="1017.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.72%)</title><rect x="1014" y="260" width="20" height="15" fill="rgb(245,41,2)"/><text x="1017.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.53%)</title><rect x="1016" y="276" width="18" height="15" fill="rgb(248,172,25)"/><text x="1019.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="1032" y="292" width="2" height="15" fill="rgb(213,18,0)"/><text x="1035.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.19%)</title><rect x="1032" y="308" width="2" height="15" fill="rgb(240,207,48)"/><text x="1035.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (33 samples, 6.31%)</title><rect x="962" y="196" width="74" height="15" fill="rgb(225,67,40)"/><text x="965.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (31 samples, 5.93%)</title><rect x="966" y="212" width="70" height="15" fill="rgb(238,118,51)"/><text x="969.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (11 samples, 2.10%)</title><rect x="1011" y="228" width="25" height="15" fill="rgb(241,106,29)"/><text x="1014.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="1034" y="244" width="2" height="15" fill="rgb(224,201,1)"/><text x="1037.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.38%)</title><rect x="1036" y="196" width="5" height="15" fill="rgb(243,34,19)"/><text x="1039.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="1043" y="228" width="2" height="15" fill="rgb(254,222,26)"/><text x="1046.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="1043" y="244" width="2" height="15" fill="rgb(241,121,5)"/><text x="1046.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.19%)</title><rect x="1043" y="260" width="2" height="15" fill="rgb(236,24,33)"/><text x="1046.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.19%)</title><rect x="1043" y="276" width="2" height="15" fill="rgb(244,99,41)"/><text x="1046.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="1043" y="292" width="2" height="15" fill="rgb(223,209,0)"/><text x="1046.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.19%)</title><rect x="1043" y="308" width="2" height="15" fill="rgb(239,167,7)"/><text x="1046.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.19%)</title><rect x="1043" y="324" width="2" height="15" fill="rgb(213,197,52)"/><text x="1046.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="1043" y="340" width="2" height="15" fill="rgb(227,111,52)"/><text x="1046.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="1043" y="356" width="2" height="15" fill="rgb(205,69,17)"/><text x="1046.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="1043" y="372" width="2" height="15" fill="rgb(240,185,7)"/><text x="1046.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.19%)</title><rect x="1043" y="388" width="2" height="15" fill="rgb(225,155,37)"/><text x="1046.00" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (2 samples, 0.38%)</title><rect x="1045" y="228" width="5" height="15" fill="rgb(244,25,48)"/><text x="1048.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.19%)</title><rect x="1056" y="276" width="3" height="15" fill="rgb(252,109,45)"/><text x="1059.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (3 samples, 0.57%)</title><rect x="1061" y="324" width="7" height="15" fill="rgb(238,224,29)"/><text x="1064.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="1068" y="340" width="2" height="15" fill="rgb(249,28,43)"/><text x="1071.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="1068" y="356" width="2" height="15" fill="rgb(254,132,12)"/><text x="1071.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.38%)</title><rect x="1068" y="324" width="4" height="15" fill="rgb(252,211,38)"/><text x="1071.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.19%)</title><rect x="1070" y="340" width="2" height="15" fill="rgb(208,219,50)"/><text x="1073.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="1070" y="356" width="2" height="15" fill="rgb(250,154,19)"/><text x="1073.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="1070" y="372" width="2" height="15" fill="rgb(220,74,42)"/><text x="1073.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="1070" y="388" width="2" height="15" fill="rgb(254,82,1)"/><text x="1073.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.19%)</title><rect x="1074" y="340" width="3" height="15" fill="rgb(236,212,45)"/><text x="1077.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="1074" y="356" width="3" height="15" fill="rgb(236,69,10)"/><text x="1077.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="1077" y="356" width="2" height="15" fill="rgb(246,88,2)"/><text x="1080.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.19%)</title><rect x="1079" y="388" width="2" height="15" fill="rgb(253,128,44)"/><text x="1082.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.38%)</title><rect x="1083" y="420" width="5" height="15" fill="rgb(209,26,35)"/><text x="1086.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1692) (1 samples, 0.19%)</title><rect x="1088" y="420" width="2" height="15" fill="rgb(234,201,0)"/><text x="1091.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.34%)</title><rect x="1077" y="340" width="15" height="15" fill="rgb(234,204,53)"/><text x="1080.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.15%)</title><rect x="1079" y="356" width="13" height="15" fill="rgb(205,132,35)"/><text x="1082.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.15%)</title><rect x="1079" y="372" width="13" height="15" fill="rgb(237,120,43)"/><text x="1082.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.96%)</title><rect x="1081" y="388" width="11" height="15" fill="rgb(218,172,50)"/><text x="1084.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.76%)</title><rect x="1083" y="404" width="9" height="15" fill="rgb(241,169,23)"/><text x="1086.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.19%)</title><rect x="1090" y="420" width="2" height="15" fill="rgb(234,85,46)"/><text x="1093.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.19%)</title><rect x="1090" y="436" width="2" height="15" fill="rgb(218,207,44)"/><text x="1093.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.19%)</title><rect x="1090" y="452" width="2" height="15" fill="rgb(215,14,10)"/><text x="1093.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.19%)</title><rect x="1090" y="468" width="2" height="15" fill="rgb(254,159,6)"/><text x="1093.00" y="478.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="1095" y="388" width="2" height="15" fill="rgb(222,104,37)"/><text x="1098.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.19%)</title><rect x="1097" y="404" width="2" height="15" fill="rgb(234,114,10)"/><text x="1100.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.19%)</title><rect x="1097" y="420" width="2" height="15" fill="rgb(251,65,41)"/><text x="1100.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.19%)</title><rect x="1097" y="436" width="2" height="15" fill="rgb(242,129,12)"/><text x="1100.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.57%)</title><rect x="1095" y="372" width="7" height="15" fill="rgb(253,11,45)"/><text x="1098.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.38%)</title><rect x="1097" y="388" width="5" height="15" fill="rgb(224,67,0)"/><text x="1100.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1689) (1 samples, 0.19%)</title><rect x="1099" y="404" width="3" height="15" fill="rgb(249,165,49)"/><text x="1102.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.76%)</title><rect x="1095" y="356" width="9" height="15" fill="rgb(207,194,9)"/><text x="1098.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="1102" y="372" width="2" height="15" fill="rgb(206,37,34)"/><text x="1105.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="1102" y="388" width="2" height="15" fill="rgb(252,152,13)"/><text x="1105.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.19%)</title><rect x="1102" y="404" width="2" height="15" fill="rgb(254,91,2)"/><text x="1105.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src:1809) (1 samples, 0.19%)</title><rect x="1102" y="420" width="2" height="15" fill="rgb(216,145,0)"/><text x="1105.00" y="430.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src:323) (1 samples, 0.19%)</title><rect x="1102" y="436" width="2" height="15" fill="rgb(207,207,7)"/><text x="1105.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="1104" y="356" width="2" height="15" fill="rgb(236,139,32)"/><text x="1107.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="1104" y="372" width="2" height="15" fill="rgb(226,102,5)"/><text x="1107.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (16 samples, 3.06%)</title><rect x="1072" y="324" width="36" height="15" fill="rgb(241,222,43)"/><text x="1075.00" y="334.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.34%)</title><rect x="1092" y="340" width="16" height="15" fill="rgb(218,219,48)"/><text x="1095.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="1106" y="356" width="2" height="15" fill="rgb(246,7,39)"/><text x="1109.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="1106" y="372" width="2" height="15" fill="rgb(247,84,47)"/><text x="1109.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:131) (1 samples, 0.19%)</title><rect x="1108" y="324" width="3" height="15" fill="rgb(222,90,48)"/><text x="1111.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="1113" y="356" width="2" height="15" fill="rgb(230,184,39)"/><text x="1116.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="1113" y="372" width="2" height="15" fill="rgb(244,108,29)"/><text x="1116.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="1113" y="388" width="2" height="15" fill="rgb(247,165,19)"/><text x="1116.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.19%)</title><rect x="1113" y="404" width="2" height="15" fill="rgb(225,183,19)"/><text x="1116.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.19%)</title><rect x="1115" y="372" width="2" height="15" fill="rgb(246,103,2)"/><text x="1118.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.19%)</title><rect x="1115" y="388" width="2" height="15" fill="rgb(219,39,53)"/><text x="1118.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="1117" y="372" width="3" height="15" fill="rgb(211,34,43)"/><text x="1120.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="1117" y="388" width="3" height="15" fill="rgb(213,186,44)"/><text x="1120.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="1117" y="404" width="3" height="15" fill="rgb(221,28,40)"/><text x="1120.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="1120" y="420" width="2" height="15" fill="rgb(246,175,25)"/><text x="1123.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1699) (1 samples, 0.19%)</title><rect x="1120" y="436" width="2" height="15" fill="rgb(248,5,18)"/><text x="1123.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:328) (1 samples, 0.19%)</title><rect x="1122" y="420" width="2" height="15" fill="rgb(250,62,40)"/><text x="1125.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="1124" y="420" width="2" height="15" fill="rgb(219,24,32)"/><text x="1127.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.19%)</title><rect x="1124" y="436" width="2" height="15" fill="rgb(236,205,22)"/><text x="1127.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.76%)</title><rect x="1120" y="404" width="9" height="15" fill="rgb(218,5,6)"/><text x="1123.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:505) (1 samples, 0.19%)</title><rect x="1126" y="420" width="3" height="15" fill="rgb(237,85,33)"/><text x="1129.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (143 samples, 27.34%)</title><rect x="808" y="180" width="323" height="15" fill="rgb(224,189,6)"/><text x="811.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (40 samples, 7.65%)</title><rect x="1041" y="196" width="90" height="15" fill="rgb(224,7,15)"/><text x="1044.00" y="206.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (39 samples, 7.46%)</title><rect x="1043" y="212" width="88" height="15" fill="rgb(248,3,16)"/><text x="1046.00" y="222.50">_run (mlpr..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (36 samples, 6.88%)</title><rect x="1050" y="228" width="81" height="15" fill="rgb(239,82,54)"/><text x="1053.00" y="238.50">clip (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (35 samples, 6.69%)</title><rect x="1052" y="244" width="79" height="15" fill="rgb(217,58,11)"/><text x="1055.00" y="254.50">array_imp..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (34 samples, 6.50%)</title><rect x="1054" y="260" width="77" height="15" fill="rgb(231,129,28)"/><text x="1057.00" y="270.50">clip (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 6.12%)</title><rect x="1059" y="276" width="72" height="15" fill="rgb(235,160,46)"/><text x="1062.00" y="286.50">_wrapfun..</text></g><g><title>array_clip (methods.c:2381) (31 samples, 5.93%)</title><rect x="1061" y="292" width="70" height="15" fill="rgb(206,33,12)"/><text x="1064.00" y="302.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c:108) (31 samples, 5.93%)</title><rect x="1061" y="308" width="70" height="15" fill="rgb(215,131,38)"/><text x="1064.00" y="318.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py:132) (9 samples, 1.72%)</title><rect x="1111" y="324" width="20" height="15" fill="rgb(211,223,18)"/><text x="1114.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 1.53%)</title><rect x="1113" y="340" width="18" height="15" fill="rgb(240,97,54)"/><text x="1116.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.34%)</title><rect x="1115" y="356" width="16" height="15" fill="rgb(233,180,19)"/><text x="1118.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.96%)</title><rect x="1120" y="372" width="11" height="15" fill="rgb(251,83,25)"/><text x="1123.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.96%)</title><rect x="1120" y="388" width="11" height="15" fill="rgb(206,41,39)"/><text x="1123.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="1129" y="404" width="2" height="15" fill="rgb(236,100,37)"/><text x="1132.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="1129" y="420" width="2" height="15" fill="rgb(206,111,17)"/><text x="1132.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2359) (1 samples, 0.19%)</title><rect x="1129" y="436" width="2" height="15" fill="rgb(233,65,0)"/><text x="1132.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="1131" y="180" width="2" height="15" fill="rgb(248,139,37)"/><text x="1134.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.19%)</title><rect x="1133" y="180" width="2" height="15" fill="rgb(244,158,24)"/><text x="1136.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="1135" y="180" width="3" height="15" fill="rgb(209,152,14)"/><text x="1138.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (9 samples, 1.72%)</title><rect x="1138" y="180" width="20" height="15" fill="rgb(248,140,20)"/><text x="1141.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:45) (247 samples, 47.23%)</title><rect x="607" y="52" width="558" height="15" fill="rgb(230,198,45)"/><text x="610.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:44) (247 samples, 47.23%)</title><rect x="607" y="68" width="558" height="15" fill="rgb(239,196,17)"/><text x="610.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:44)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (247 samples, 47.23%)</title><rect x="607" y="84" width="558" height="15" fill="rgb(249,140,46)"/><text x="610.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (188 samples, 35.95%)</title><rect x="741" y="100" width="424" height="15" fill="rgb(246,104,17)"/><text x="744.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (188 samples, 35.95%)</title><rect x="741" y="116" width="424" height="15" fill="rgb(216,181,21)"/><text x="744.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (188 samples, 35.95%)</title><rect x="741" y="132" width="424" height="15" fill="rgb(225,121,20)"/><text x="744.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (188 samples, 35.95%)</title><rect x="741" y="148" width="424" height="15" fill="rgb(214,50,36)"/><text x="744.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (186 samples, 35.56%)</title><rect x="745" y="164" width="420" height="15" fill="rgb(241,26,32)"/><text x="748.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.57%)</title><rect x="1158" y="180" width="7" height="15" fill="rgb(218,132,43)"/><text x="1161.00" y="190.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:28) (1 samples, 0.19%)</title><rect x="1165" y="84" width="2" height="15" fill="rgb(233,175,38)"/><text x="1168.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="1165" y="100" width="2" height="15" fill="rgb(224,61,54)"/><text x="1168.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="1165" y="116" width="2" height="15" fill="rgb(214,104,32)"/><text x="1168.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="1165" y="132" width="2" height="15" fill="rgb(250,161,16)"/><text x="1168.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="1165" y="148" width="2" height="15" fill="rgb(205,33,53)"/><text x="1168.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.19%)</title><rect x="1165" y="164" width="2" height="15" fill="rgb(208,125,38)"/><text x="1168.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:252) (1 samples, 0.19%)</title><rect x="1165" y="180" width="2" height="15" fill="rgb(250,113,23)"/><text x="1168.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:212) (1 samples, 0.19%)</title><rect x="1165" y="196" width="2" height="15" fill="rgb(235,22,24)"/><text x="1168.00" y="206.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.19%)</title><rect x="1165" y="212" width="2" height="15" fill="rgb(211,113,0)"/><text x="1168.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="1165" y="228" width="2" height="15" fill="rgb(205,74,22)"/><text x="1168.00" y="238.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (1 samples, 0.19%)</title><rect x="1167" y="100" width="2" height="15" fill="rgb(224,208,5)"/><text x="1170.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.19%)</title><rect x="1167" y="116" width="2" height="15" fill="rgb(224,100,34)"/><text x="1170.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.19%)</title><rect x="1167" y="132" width="2" height="15" fill="rgb(224,5,25)"/><text x="1170.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.19%)</title><rect x="1167" y="148" width="2" height="15" fill="rgb(246,156,45)"/><text x="1170.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.19%)</title><rect x="1167" y="164" width="2" height="15" fill="rgb(226,123,8)"/><text x="1170.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.19%)</title><rect x="1167" y="180" width="2" height="15" fill="rgb(248,73,8)"/><text x="1170.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.19%)</title><rect x="1167" y="196" width="2" height="15" fill="rgb(233,127,48)"/><text x="1170.00" y="206.50"></text></g><g><title>0x7f148861cff9 (?) (1 samples, 0.19%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(207,103,54)"/><text x="1170.00" y="222.50"></text></g><g><title>0x7f1488617ef6 (?) (1 samples, 0.19%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(250,27,13)"/><text x="1170.00" y="238.50"></text></g><g><title>0x7f148860c962 (?) (1 samples, 0.19%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(234,211,31)"/><text x="1170.00" y="254.50"></text></g><g><title>0x7f14886407a7 (?) (1 samples, 0.19%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(208,166,0)"/><text x="1170.00" y="270.50"></text></g><g><title>0x7f1488640379 (?) (1 samples, 0.19%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(244,136,23)"/><text x="1170.00" y="286.50"></text></g><g><title>0x7f1488a9e8b8 (?) (1 samples, 0.19%)</title><rect x="1167" y="292" width="2" height="15" fill="rgb(222,125,31)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7f1488a9cc7f (?) (1 samples, 0.19%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(246,62,9)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f1488aaf99c (?) (1 samples, 0.19%)</title><rect x="1167" y="324" width="2" height="15" fill="rgb(222,124,32)"/><text x="1170.00" y="334.50"></text></g><g><title>0x7f148872aac6 (?) (1 samples, 0.19%)</title><rect x="1167" y="340" width="2" height="15" fill="rgb(245,122,11)"/><text x="1170.00" y="350.50"></text></g><g><title>0x7f148872a9ee (?) (1 samples, 0.19%)</title><rect x="1167" y="356" width="2" height="15" fill="rgb(228,86,31)"/><text x="1170.00" y="366.50"></text></g><g><title>0x7f14886fbc14 (?) (1 samples, 0.19%)</title><rect x="1167" y="372" width="2" height="15" fill="rgb(223,29,12)"/><text x="1170.00" y="382.50"></text></g><g><title>0x7f14886fb347 (?) (1 samples, 0.19%)</title><rect x="1167" y="388" width="2" height="15" fill="rgb(250,173,20)"/><text x="1170.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1169" y="340" width="2" height="15" fill="rgb(237,24,21)"/><text x="1172.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1169" y="356" width="2" height="15" fill="rgb(209,215,18)"/><text x="1172.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1171" y="340" width="3" height="15" fill="rgb(208,215,34)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="340" width="2" height="15" fill="rgb(244,121,12)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="356" width="2" height="15" fill="rgb(230,214,38)"/><text x="1177.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="372" width="2" height="15" fill="rgb(235,30,22)"/><text x="1177.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="388" width="2" height="15" fill="rgb(252,111,40)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="404" width="2" height="15" fill="rgb(238,223,16)"/><text x="1177.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="420" width="2" height="15" fill="rgb(214,158,3)"/><text x="1177.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="436" width="2" height="15" fill="rgb(215,106,45)"/><text x="1177.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1174" y="452" width="2" height="15" fill="rgb(211,48,33)"/><text x="1177.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1174" y="468" width="2" height="15" fill="rgb(250,133,44)"/><text x="1177.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1174" y="484" width="2" height="15" fill="rgb(218,115,7)"/><text x="1177.00" y="494.50"></text></g><g><title>0x7f14885e3930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="404" width="2" height="15" fill="rgb(217,165,9)"/><text x="1179.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1176" y="340" width="4" height="15" fill="rgb(237,190,8)"/><text x="1179.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1176" y="356" width="4" height="15" fill="rgb(246,123,15)"/><text x="1179.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1176" y="372" width="4" height="15" fill="rgb(217,125,40)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1176" y="388" width="4" height="15" fill="rgb(250,25,35)"/><text x="1179.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="404" width="2" height="15" fill="rgb(238,124,30)"/><text x="1181.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1178" y="420" width="2" height="15" fill="rgb(225,127,8)"/><text x="1181.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1178" y="436" width="2" height="15" fill="rgb(238,66,5)"/><text x="1181.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="340" width="3" height="15" fill="rgb(213,46,0)"/><text x="1183.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="356" width="3" height="15" fill="rgb(230,50,26)"/><text x="1183.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(245,96,2)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(205,190,36)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(240,12,29)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="388" width="2" height="15" fill="rgb(210,118,4)"/><text x="1186.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="404" width="2" height="15" fill="rgb(247,117,6)"/><text x="1186.00" y="414.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(216,214,36)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="356" width="2" height="15" fill="rgb(245,140,35)"/><text x="1188.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2247] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(220,28,21)"/><text x="1188.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(207,11,6)"/><text x="1188.00" y="398.50"></text></g><g><title>all (523 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,5,7)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:52) (11 samples, 2.10%)</title><rect x="1165" y="52" width="25" height="15" fill="rgb(209,43,18)"/><text x="1168.00" y="62.50">&lt;..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:51) (11 samples, 2.10%)</title><rect x="1165" y="68" width="25" height="15" fill="rgb(229,28,1)"/><text x="1168.00" y="78.50">p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (10 samples, 1.91%)</title><rect x="1167" y="84" width="23" height="15" fill="rgb(252,115,17)"/><text x="1170.00" y="94.50">s..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (9 samples, 1.72%)</title><rect x="1169" y="100" width="21" height="15" fill="rgb(240,93,49)"/><text x="1172.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 1.72%)</title><rect x="1169" y="116" width="21" height="15" fill="rgb(219,45,28)"/><text x="1172.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (9 samples, 1.72%)</title><rect x="1169" y="132" width="21" height="15" fill="rgb(214,140,24)"/><text x="1172.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (9 samples, 1.72%)</title><rect x="1169" y="148" width="21" height="15" fill="rgb(240,216,17)"/><text x="1172.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 1.72%)</title><rect x="1169" y="164" width="21" height="15" fill="rgb(222,98,10)"/><text x="1172.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 1.72%)</title><rect x="1169" y="180" width="21" height="15" fill="rgb(234,57,18)"/><text x="1172.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 1.72%)</title><rect x="1169" y="196" width="21" height="15" fill="rgb(252,181,30)"/><text x="1172.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="212" width="21" height="15" fill="rgb(249,96,23)"/><text x="1172.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="228" width="21" height="15" fill="rgb(242,10,35)"/><text x="1172.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="244" width="21" height="15" fill="rgb(244,172,18)"/><text x="1172.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="260" width="21" height="15" fill="rgb(240,203,42)"/><text x="1172.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="276" width="21" height="15" fill="rgb(231,164,7)"/><text x="1172.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="292" width="21" height="15" fill="rgb(209,87,11)"/><text x="1172.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="308" width="21" height="15" fill="rgb(247,179,37)"/><text x="1172.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.72%)</title><rect x="1169" y="324" width="21" height="15" fill="rgb(213,165,33)"/><text x="1172.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(231,18,27)"/><text x="1190.00" y="350.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(209,92,52)"/><text x="1190.00" y="366.50"></text></g></g></svg>