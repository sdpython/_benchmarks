<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>fit (sklearn/tree/_classes.py:149) (1 samples, 0.20%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(246,217,35)"/><text x="13.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(233,18,4)"/><text x="13.00" y="222.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.40%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(237,104,49)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.40%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(210,223,18)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.20%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(228,51,29)"/><text x="15.00" y="206.50"></text></g><g><title>0x7fc5f4803b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(245,199,51)"/><text x="15.00" y="222.50"></text></g><g><title>0x7fc5f483510a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(236,71,43)"/><text x="15.00" y="238.50"></text></g><g><title>0x7fc5f4a60d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(231,158,52)"/><text x="15.00" y="254.50"></text></g><g><title>0x7fc5f4a59d21 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(252,79,52)"/><text x="15.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:31) (3 samples, 0.59%)</title><rect x="10" y="52" width="6" height="15" fill="rgb(212,229,38)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:11) (3 samples, 0.59%)</title><rect x="10" y="68" width="6" height="15" fill="rgb(252,2,4)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (3 samples, 0.59%)</title><rect x="10" y="84" width="6" height="15" fill="rgb(218,77,39)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.59%)</title><rect x="10" y="100" width="6" height="15" fill="rgb(253,188,0)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.59%)</title><rect x="10" y="116" width="6" height="15" fill="rgb(219,159,32)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.59%)</title><rect x="10" y="132" width="6" height="15" fill="rgb(246,188,51)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.59%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(239,62,29)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:509) (1 samples, 0.20%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(233,46,27)"/><text x="17.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.20%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(215,78,26)"/><text x="17.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.20%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(226,111,30)"/><text x="17.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(206,148,18)"/><text x="17.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.20%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(210,179,13)"/><text x="17.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:28) (1 samples, 0.20%)</title><rect x="16" y="84" width="3" height="15" fill="rgb(252,198,45)"/><text x="19.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.20%)</title><rect x="16" y="100" width="3" height="15" fill="rgb(209,167,10)"/><text x="19.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.20%)</title><rect x="16" y="116" width="3" height="15" fill="rgb(228,210,24)"/><text x="19.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.20%)</title><rect x="16" y="132" width="3" height="15" fill="rgb(232,118,43)"/><text x="19.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.20%)</title><rect x="16" y="148" width="3" height="15" fill="rgb(247,102,45)"/><text x="19.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.20%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(206,90,13)"/><text x="19.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.20%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(213,95,2)"/><text x="19.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="16" y="196" width="3" height="15" fill="rgb(218,196,40)"/><text x="19.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.20%)</title><rect x="16" y="212" width="3" height="15" fill="rgb(249,148,5)"/><text x="19.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="16" y="228" width="3" height="15" fill="rgb(212,27,15)"/><text x="19.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="244" width="3" height="15" fill="rgb(247,228,6)"/><text x="19.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="260" width="3" height="15" fill="rgb(227,170,12)"/><text x="19.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="276" width="3" height="15" fill="rgb(230,227,51)"/><text x="19.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(233,130,2)"/><text x="19.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::GetRepeatedInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(248,57,25)"/><text x="19.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(211,190,28)"/><text x="19.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.20%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(243,153,37)"/><text x="24.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.20%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(236,38,24)"/><text x="24.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="23" y="260" width="3" height="15" fill="rgb(224,17,3)"/><text x="26.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.40%)</title><rect x="23" y="244" width="5" height="15" fill="rgb(225,229,40)"/><text x="26.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="26" y="260" width="2" height="15" fill="rgb(205,24,11)"/><text x="29.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.59%)</title><rect x="23" y="228" width="7" height="15" fill="rgb(252,119,29)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.20%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(222,75,16)"/><text x="31.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.99%)</title><rect x="21" y="212" width="12" height="15" fill="rgb(235,185,11)"/><text x="24.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.20%)</title><rect x="30" y="228" width="3" height="15" fill="rgb(250,81,50)"/><text x="33.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.20%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(237,82,12)"/><text x="36.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.20%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(252,100,5)"/><text x="38.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="37" y="260" width="3" height="15" fill="rgb(219,67,53)"/><text x="40.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.59%)</title><rect x="35" y="244" width="7" height="15" fill="rgb(231,25,50)"/><text x="38.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.20%)</title><rect x="40" y="260" width="2" height="15" fill="rgb(225,111,1)"/><text x="43.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.20%)</title><rect x="42" y="244" width="2" height="15" fill="rgb(245,143,26)"/><text x="45.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.20%)</title><rect x="42" y="260" width="2" height="15" fill="rgb(231,51,48)"/><text x="45.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.20%)</title><rect x="42" y="276" width="2" height="15" fill="rgb(227,161,7)"/><text x="45.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.40%)</title><rect x="44" y="244" width="5" height="15" fill="rgb(246,22,46)"/><text x="47.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.40%)</title><rect x="44" y="260" width="5" height="15" fill="rgb(218,196,19)"/><text x="47.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.20%)</title><rect x="47" y="276" width="2" height="15" fill="rgb(249,201,49)"/><text x="50.00" y="286.50"></text></g><g><title>0x7fc61ade1757 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="47" y="292" width="2" height="15" fill="rgb(214,219,1)"/><text x="50.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.59%)</title><rect x="49" y="244" width="7" height="15" fill="rgb(211,86,9)"/><text x="52.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.20%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(205,14,48)"/><text x="57.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (11 samples, 2.17%)</title><rect x="33" y="212" width="25" height="15" fill="rgb(219,94,35)"/><text x="36.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 2.17%)</title><rect x="33" y="228" width="25" height="15" fill="rgb(252,117,26)"/><text x="36.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.20%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(248,46,28)"/><text x="59.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.20%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(224,104,22)"/><text x="59.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(226,107,6)"/><text x="59.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="56" y="292" width="2" height="15" fill="rgb(248,1,8)"/><text x="59.00" y="302.50"></text></g><g><title>0x7fc5f481d225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="58" y="276" width="3" height="15" fill="rgb(244,64,54)"/><text x="61.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.20%)</title><rect x="58" y="292" width="3" height="15" fill="rgb(221,63,24)"/><text x="61.00" y="302.50"></text></g><g><title>0x7fc619fee0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="58" y="308" width="3" height="15" fill="rgb(227,204,21)"/><text x="61.00" y="318.50"></text></g><g><title>0x7fc5f481d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="61" y="276" width="2" height="15" fill="rgb(210,19,32)"/><text x="64.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.20%)</title><rect x="61" y="292" width="2" height="15" fill="rgb(242,68,25)"/><text x="64.00" y="302.50"></text></g><g><title>0x7fc5f480efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="58" y="244" width="7" height="15" fill="rgb(239,118,34)"/><text x="61.00" y="254.50"></text></g><g><title>0x7fc5f481e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.59%)</title><rect x="58" y="260" width="7" height="15" fill="rgb(216,77,42)"/><text x="61.00" y="270.50"></text></g><g><title>0x7fc5f481d644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="63" y="276" width="2" height="15" fill="rgb(238,55,5)"/><text x="66.00" y="286.50"></text></g><g><title>0x7fc5f480f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="65" y="244" width="3" height="15" fill="rgb(222,74,11)"/><text x="68.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="65" y="260" width="3" height="15" fill="rgb(222,8,54)"/><text x="68.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="65" y="276" width="3" height="15" fill="rgb(207,148,2)"/><text x="68.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (5 samples, 0.99%)</title><rect x="58" y="212" width="12" height="15" fill="rgb(213,7,23)"/><text x="61.00" y="222.50"></text></g><g><title>0x7fc5f480fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.99%)</title><rect x="58" y="228" width="12" height="15" fill="rgb(226,26,3)"/><text x="61.00" y="238.50"></text></g><g><title>0x7fc5f480f13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="68" y="244" width="2" height="15" fill="rgb(208,105,20)"/><text x="71.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="68" y="260" width="2" height="15" fill="rgb(244,80,15)"/><text x="71.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="68" y="276" width="2" height="15" fill="rgb(218,71,17)"/><text x="71.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="68" y="292" width="2" height="15" fill="rgb(245,122,53)"/><text x="71.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.40%)</title><rect x="70" y="212" width="5" height="15" fill="rgb(227,53,13)"/><text x="73.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.20%)</title><rect x="75" y="228" width="2" height="15" fill="rgb(254,129,19)"/><text x="78.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.20%)</title><rect x="75" y="244" width="2" height="15" fill="rgb(251,112,25)"/><text x="78.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4537) (1 samples, 0.20%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(250,152,41)"/><text x="82.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4588) (1 samples, 0.20%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(227,201,25)"/><text x="85.00" y="302.50"></text></g><g><title>check_and_adjust_axis (common.h:180) (1 samples, 0.20%)</title><rect x="82" y="308" width="2" height="15" fill="rgb(232,112,12)"/><text x="85.00" y="318.50"></text></g><g><title>check_and_adjust_axis_msg (common.h:143) (1 samples, 0.20%)</title><rect x="82" y="324" width="2" height="15" fill="rgb(252,130,36)"/><text x="85.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.20%)</title><rect x="84" y="308" width="2" height="15" fill="rgb(205,181,36)"/><text x="87.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.20%)</title><rect x="84" y="324" width="2" height="15" fill="rgb(252,158,46)"/><text x="87.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (6 samples, 1.19%)</title><rect x="75" y="212" width="14" height="15" fill="rgb(237,196,30)"/><text x="78.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.99%)</title><rect x="77" y="228" width="12" height="15" fill="rgb(205,41,26)"/><text x="80.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.99%)</title><rect x="77" y="244" width="12" height="15" fill="rgb(213,7,2)"/><text x="80.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.99%)</title><rect x="77" y="260" width="12" height="15" fill="rgb(225,159,7)"/><text x="80.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.79%)</title><rect x="79" y="276" width="10" height="15" fill="rgb(220,79,35)"/><text x="82.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.40%)</title><rect x="84" y="292" width="5" height="15" fill="rgb(216,133,13)"/><text x="87.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.20%)</title><rect x="86" y="308" width="3" height="15" fill="rgb(236,34,14)"/><text x="89.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="86" y="324" width="3" height="15" fill="rgb(227,103,0)"/><text x="89.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.20%)</title><rect x="86" y="340" width="3" height="15" fill="rgb(252,146,20)"/><text x="89.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.20%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(223,199,54)"/><text x="92.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1209) (1 samples, 0.20%)</title><rect x="89" y="244" width="2" height="15" fill="rgb(209,110,36)"/><text x="92.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="91" y="244" width="2" height="15" fill="rgb(223,200,48)"/><text x="94.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="91" y="260" width="2" height="15" fill="rgb(243,67,37)"/><text x="94.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="91" y="276" width="2" height="15" fill="rgb(244,59,35)"/><text x="94.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="91" y="292" width="2" height="15" fill="rgb(223,16,44)"/><text x="94.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.59%)</title><rect x="89" y="212" width="7" height="15" fill="rgb(205,67,23)"/><text x="92.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.40%)</title><rect x="91" y="228" width="5" height="15" fill="rgb(238,44,43)"/><text x="94.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.20%)</title><rect x="93" y="244" width="3" height="15" fill="rgb(213,215,1)"/><text x="96.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(227,29,50)"/><text x="99.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.20%)</title><rect x="96" y="292" width="2" height="15" fill="rgb(224,43,44)"/><text x="99.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2147) (1 samples, 0.20%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(210,22,9)"/><text x="99.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (35 samples, 6.92%)</title><rect x="19" y="196" width="81" height="15" fill="rgb(227,23,30)"/><text x="22.00" y="206.50">_samme_pr..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (2 samples, 0.40%)</title><rect x="96" y="212" width="4" height="15" fill="rgb(221,201,34)"/><text x="99.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="96" y="228" width="4" height="15" fill="rgb(227,208,1)"/><text x="99.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="96" y="244" width="4" height="15" fill="rgb(213,126,44)"/><text x="99.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.40%)</title><rect x="96" y="260" width="4" height="15" fill="rgb(241,7,54)"/><text x="99.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.20%)</title><rect x="98" y="276" width="2" height="15" fill="rgb(218,163,31)"/><text x="101.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.20%)</title><rect x="98" y="292" width="2" height="15" fill="rgb(229,177,26)"/><text x="101.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.20%)</title><rect x="105" y="212" width="2" height="15" fill="rgb(227,218,27)"/><text x="108.00" y="222.50"></text></g><g><title>PyArray_DescrHash (hashdescr.c:303) (1 samples, 0.20%)</title><rect x="105" y="228" width="2" height="15" fill="rgb(229,173,16)"/><text x="108.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.20%)</title><rect x="107" y="228" width="3" height="15" fill="rgb(231,67,47)"/><text x="110.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.20%)</title><rect x="110" y="260" width="2" height="15" fill="rgb(233,56,22)"/><text x="113.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.40%)</title><rect x="112" y="308" width="5" height="15" fill="rgb(232,44,10)"/><text x="115.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.40%)</title><rect x="112" y="324" width="5" height="15" fill="rgb(240,181,19)"/><text x="115.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="114" y="340" width="3" height="15" fill="rgb(230,25,12)"/><text x="117.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="114" y="356" width="3" height="15" fill="rgb(212,60,45)"/><text x="117.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="117" y="324" width="2" height="15" fill="rgb(218,92,54)"/><text x="120.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="117" y="340" width="2" height="15" fill="rgb(216,16,38)"/><text x="120.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.20%)</title><rect x="119" y="324" width="2" height="15" fill="rgb(239,69,22)"/><text x="122.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="119" y="340" width="2" height="15" fill="rgb(208,49,29)"/><text x="122.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="119" y="356" width="2" height="15" fill="rgb(223,139,36)"/><text x="122.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.20%)</title><rect x="119" y="372" width="2" height="15" fill="rgb(221,121,40)"/><text x="122.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.20%)</title><rect x="119" y="388" width="2" height="15" fill="rgb(251,123,33)"/><text x="122.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="121" y="372" width="3" height="15" fill="rgb(254,221,52)"/><text x="124.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.20%)</title><rect x="124" y="404" width="2" height="15" fill="rgb(218,38,23)"/><text x="127.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.20%)</title><rect x="124" y="420" width="2" height="15" fill="rgb(254,221,47)"/><text x="127.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.40%)</title><rect x="124" y="388" width="4" height="15" fill="rgb(208,37,50)"/><text x="127.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.20%)</title><rect x="126" y="404" width="2" height="15" fill="rgb(216,152,9)"/><text x="129.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.79%)</title><rect x="121" y="324" width="10" height="15" fill="rgb(249,41,46)"/><text x="124.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.79%)</title><rect x="121" y="340" width="10" height="15" fill="rgb(251,34,43)"/><text x="124.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (4 samples, 0.79%)</title><rect x="121" y="356" width="10" height="15" fill="rgb(241,1,46)"/><text x="124.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.59%)</title><rect x="124" y="372" width="7" height="15" fill="rgb(228,214,6)"/><text x="127.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="128" y="388" width="3" height="15" fill="rgb(227,115,35)"/><text x="131.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.20%)</title><rect x="128" y="404" width="3" height="15" fill="rgb(224,70,41)"/><text x="131.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.20%)</title><rect x="128" y="420" width="3" height="15" fill="rgb(230,110,4)"/><text x="131.00" y="430.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.20%)</title><rect x="128" y="436" width="3" height="15" fill="rgb(211,49,27)"/><text x="131.00" y="446.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.20%)</title><rect x="128" y="452" width="3" height="15" fill="rgb(218,187,7)"/><text x="131.00" y="462.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.20%)</title><rect x="128" y="468" width="3" height="15" fill="rgb(205,125,18)"/><text x="131.00" y="478.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 1.38%)</title><rect x="117" y="308" width="16" height="15" fill="rgb(217,142,38)"/><text x="120.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:70) (1 samples, 0.20%)</title><rect x="131" y="324" width="2" height="15" fill="rgb(250,203,31)"/><text x="134.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="138" y="340" width="2" height="15" fill="rgb(207,107,35)"/><text x="141.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="138" y="356" width="2" height="15" fill="rgb(230,66,54)"/><text x="141.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="138" y="372" width="2" height="15" fill="rgb(211,56,19)"/><text x="141.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="138" y="388" width="2" height="15" fill="rgb(249,221,20)"/><text x="141.00" y="398.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="138" y="404" width="2" height="15" fill="rgb(234,139,35)"/><text x="141.00" y="414.50"></text></g><g><title>0x7fc61aea9130 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="138" y="420" width="2" height="15" fill="rgb(216,17,54)"/><text x="141.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (18 samples, 3.56%)</title><rect x="100" y="196" width="42" height="15" fill="rgb(235,225,13)"/><text x="103.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (15 samples, 2.96%)</title><rect x="107" y="212" width="35" height="15" fill="rgb(254,119,50)"/><text x="110.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.77%)</title><rect x="110" y="228" width="32" height="15" fill="rgb(219,15,13)"/><text x="113.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (14 samples, 2.77%)</title><rect x="110" y="244" width="32" height="15" fill="rgb(211,118,30)"/><text x="113.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (13 samples, 2.57%)</title><rect x="112" y="260" width="30" height="15" fill="rgb(214,22,17)"/><text x="115.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (13 samples, 2.57%)</title><rect x="112" y="276" width="30" height="15" fill="rgb(231,77,46)"/><text x="115.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.57%)</title><rect x="112" y="292" width="30" height="15" fill="rgb(248,101,21)"/><text x="115.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (4 samples, 0.79%)</title><rect x="133" y="308" width="9" height="15" fill="rgb(209,133,8)"/><text x="136.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.40%)</title><rect x="138" y="324" width="4" height="15" fill="rgb(250,33,43)"/><text x="141.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="140" y="340" width="2" height="15" fill="rgb(230,150,27)"/><text x="143.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="140" y="356" width="2" height="15" fill="rgb(248,150,28)"/><text x="143.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.20%)</title><rect x="140" y="372" width="2" height="15" fill="rgb(232,129,0)"/><text x="143.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="140" y="388" width="2" height="15" fill="rgb(222,226,22)"/><text x="143.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.20%)</title><rect x="140" y="404" width="2" height="15" fill="rgb(213,102,32)"/><text x="143.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.20%)</title><rect x="140" y="420" width="2" height="15" fill="rgb(245,22,38)"/><text x="143.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (1 samples, 0.20%)</title><rect x="142" y="196" width="3" height="15" fill="rgb(232,132,37)"/><text x="145.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.20%)</title><rect x="142" y="212" width="3" height="15" fill="rgb(222,219,23)"/><text x="145.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.20%)</title><rect x="142" y="228" width="3" height="15" fill="rgb(219,158,43)"/><text x="145.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.20%)</title><rect x="149" y="212" width="3" height="15" fill="rgb(254,187,40)"/><text x="152.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="149" y="228" width="3" height="15" fill="rgb(209,92,43)"/><text x="152.00" y="238.50"></text></g><g><title>0x7fc61adcb902 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="149" y="244" width="3" height="15" fill="rgb(224,208,23)"/><text x="152.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="152" y="244" width="2" height="15" fill="rgb(239,85,10)"/><text x="155.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="152" y="260" width="2" height="15" fill="rgb(227,24,22)"/><text x="155.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="154" y="260" width="2" height="15" fill="rgb(248,172,7)"/><text x="157.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.20%)</title><rect x="154" y="276" width="2" height="15" fill="rgb(213,180,24)"/><text x="157.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.20%)</title><rect x="154" y="292" width="2" height="15" fill="rgb(212,105,29)"/><text x="157.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.20%)</title><rect x="156" y="292" width="3" height="15" fill="rgb(254,62,14)"/><text x="159.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.59%)</title><rect x="154" y="244" width="7" height="15" fill="rgb(233,200,18)"/><text x="157.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.40%)</title><rect x="156" y="260" width="5" height="15" fill="rgb(206,53,4)"/><text x="159.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (2 samples, 0.40%)</title><rect x="156" y="276" width="5" height="15" fill="rgb(239,212,0)"/><text x="159.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.20%)</title><rect x="159" y="292" width="2" height="15" fill="rgb(208,56,17)"/><text x="162.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:936) (1 samples, 0.20%)</title><rect x="159" y="308" width="2" height="15" fill="rgb(226,112,41)"/><text x="162.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="161" y="244" width="2" height="15" fill="rgb(250,86,23)"/><text x="164.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="161" y="260" width="2" height="15" fill="rgb(228,16,16)"/><text x="164.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="163" y="244" width="3" height="15" fill="rgb(233,193,52)"/><text x="166.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.20%)</title><rect x="163" y="260" width="3" height="15" fill="rgb(209,127,35)"/><text x="166.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="163" y="276" width="3" height="15" fill="rgb(233,227,37)"/><text x="166.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="163" y="292" width="3" height="15" fill="rgb(239,175,1)"/><text x="166.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="163" y="308" width="3" height="15" fill="rgb(218,210,11)"/><text x="166.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 1.38%)</title><rect x="152" y="212" width="16" height="15" fill="rgb(254,141,19)"/><text x="155.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.38%)</title><rect x="152" y="228" width="16" height="15" fill="rgb(207,1,17)"/><text x="155.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="166" y="244" width="2" height="15" fill="rgb(250,19,37)"/><text x="169.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.20%)</title><rect x="166" y="260" width="2" height="15" fill="rgb(235,43,16)"/><text x="169.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.20%)</title><rect x="166" y="276" width="2" height="15" fill="rgb(244,184,27)"/><text x="169.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:149) (1 samples, 0.20%)</title><rect x="166" y="292" width="2" height="15" fill="rgb(222,213,47)"/><text x="169.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.20%)</title><rect x="168" y="212" width="2" height="15" fill="rgb(225,187,20)"/><text x="171.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="168" y="228" width="2" height="15" fill="rgb(232,117,26)"/><text x="171.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="168" y="244" width="2" height="15" fill="rgb(221,213,50)"/><text x="171.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(253,130,26)"/><text x="171.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.20%)</title><rect x="168" y="276" width="2" height="15" fill="rgb(252,204,10)"/><text x="171.00" y="286.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1092) (1 samples, 0.20%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(231,178,40)"/><text x="171.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.40%)</title><rect x="170" y="276" width="5" height="15" fill="rgb(210,7,52)"/><text x="173.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.20%)</title><rect x="175" y="276" width="2" height="15" fill="rgb(215,195,0)"/><text x="178.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.20%)</title><rect x="175" y="292" width="2" height="15" fill="rgb(234,150,42)"/><text x="178.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.20%)</title><rect x="175" y="308" width="2" height="15" fill="rgb(235,12,48)"/><text x="178.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.20%)</title><rect x="177" y="308" width="3" height="15" fill="rgb(209,69,43)"/><text x="180.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.20%)</title><rect x="177" y="324" width="3" height="15" fill="rgb(243,21,50)"/><text x="180.00" y="334.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (70 samples, 13.83%)</title><rect x="19" y="100" width="163" height="15" fill="rgb(207,130,20)"/><text x="22.00" y="110.50">profile (bench_AdaBoo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (70 samples, 13.83%)</title><rect x="19" y="116" width="163" height="15" fill="rgb(235,189,23)"/><text x="22.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (70 samples, 13.83%)</title><rect x="19" y="132" width="163" height="15" fill="rgb(242,64,28)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (70 samples, 13.83%)</title><rect x="19" y="148" width="163" height="15" fill="rgb(231,43,4)"/><text x="22.00" y="158.50">predict_proba (sklear..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (70 samples, 13.83%)</title><rect x="19" y="164" width="163" height="15" fill="rgb(208,220,14)"/><text x="22.00" y="174.50">decision_function (sk..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (70 samples, 13.83%)</title><rect x="19" y="180" width="163" height="15" fill="rgb(226,39,42)"/><text x="22.00" y="190.50">&lt;genexpr&gt; (sklearn/en..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (16 samples, 3.16%)</title><rect x="145" y="196" width="37" height="15" fill="rgb(214,204,11)"/><text x="148.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.99%)</title><rect x="170" y="212" width="12" height="15" fill="rgb(249,166,15)"/><text x="173.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.99%)</title><rect x="170" y="228" width="12" height="15" fill="rgb(230,121,13)"/><text x="173.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.99%)</title><rect x="170" y="244" width="12" height="15" fill="rgb(214,121,3)"/><text x="173.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.99%)</title><rect x="170" y="260" width="12" height="15" fill="rgb(244,186,51)"/><text x="173.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.40%)</title><rect x="177" y="276" width="5" height="15" fill="rgb(251,136,43)"/><text x="180.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.40%)</title><rect x="177" y="292" width="5" height="15" fill="rgb(239,106,18)"/><text x="180.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.20%)</title><rect x="180" y="308" width="2" height="15" fill="rgb(250,115,51)"/><text x="183.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:687) (1 samples, 0.20%)</title><rect x="180" y="324" width="2" height="15" fill="rgb(212,70,20)"/><text x="183.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.20%)</title><rect x="189" y="228" width="2" height="15" fill="rgb(251,55,46)"/><text x="192.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.40%)</title><rect x="191" y="228" width="5" height="15" fill="rgb(245,17,49)"/><text x="194.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.40%)</title><rect x="198" y="244" width="5" height="15" fill="rgb(235,150,1)"/><text x="201.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.59%)</title><rect x="205" y="260" width="7" height="15" fill="rgb(220,99,22)"/><text x="208.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.99%)</title><rect x="203" y="244" width="12" height="15" fill="rgb(230,210,36)"/><text x="206.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="212" y="260" width="3" height="15" fill="rgb(253,192,46)"/><text x="215.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (13 samples, 2.57%)</title><rect x="187" y="212" width="30" height="15" fill="rgb(225,228,46)"/><text x="190.00" y="222.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.78%)</title><rect x="196" y="228" width="21" height="15" fill="rgb(223,85,41)"/><text x="199.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.20%)</title><rect x="215" y="244" width="2" height="15" fill="rgb(220,47,24)"/><text x="218.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.40%)</title><rect x="222" y="244" width="4" height="15" fill="rgb(208,131,27)"/><text x="225.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.20%)</title><rect x="226" y="244" width="3" height="15" fill="rgb(248,176,43)"/><text x="229.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="236" y="260" width="2" height="15" fill="rgb(229,75,2)"/><text x="239.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 0.99%)</title><rect x="229" y="244" width="11" height="15" fill="rgb(213,190,9)"/><text x="232.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.20%)</title><rect x="238" y="260" width="2" height="15" fill="rgb(222,148,45)"/><text x="241.00" y="270.50"></text></g><g><title>0x7fc61adec196 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="238" y="276" width="2" height="15" fill="rgb(230,100,43)"/><text x="241.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.79%)</title><rect x="240" y="244" width="10" height="15" fill="rgb(235,216,11)"/><text x="243.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.79%)</title><rect x="240" y="260" width="10" height="15" fill="rgb(211,60,41)"/><text x="243.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.40%)</title><rect x="245" y="276" width="5" height="15" fill="rgb(248,105,47)"/><text x="248.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.20%)</title><rect x="252" y="260" width="2" height="15" fill="rgb(221,92,19)"/><text x="255.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.59%)</title><rect x="250" y="244" width="7" height="15" fill="rgb(241,219,21)"/><text x="253.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2295) (1 samples, 0.20%)</title><rect x="254" y="260" width="3" height="15" fill="rgb(250,125,27)"/><text x="257.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.79%)</title><rect x="257" y="244" width="9" height="15" fill="rgb(240,26,19)"/><text x="260.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.79%)</title><rect x="257" y="260" width="9" height="15" fill="rgb(216,168,50)"/><text x="260.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.20%)</title><rect x="264" y="276" width="2" height="15" fill="rgb(222,42,24)"/><text x="267.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.40%)</title><rect x="266" y="244" width="5" height="15" fill="rgb(227,168,51)"/><text x="269.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.20%)</title><rect x="271" y="244" width="2" height="15" fill="rgb(230,89,8)"/><text x="274.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.40%)</title><rect x="275" y="276" width="5" height="15" fill="rgb(229,39,25)"/><text x="278.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.79%)</title><rect x="273" y="244" width="9" height="15" fill="rgb(250,46,54)"/><text x="276.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.59%)</title><rect x="275" y="260" width="7" height="15" fill="rgb(214,198,14)"/><text x="278.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.20%)</title><rect x="280" y="276" width="2" height="15" fill="rgb(232,136,10)"/><text x="283.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.59%)</title><rect x="282" y="260" width="7" height="15" fill="rgb(236,164,46)"/><text x="285.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.20%)</title><rect x="289" y="260" width="3" height="15" fill="rgb(243,12,24)"/><text x="292.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.20%)</title><rect x="289" y="276" width="3" height="15" fill="rgb(233,196,45)"/><text x="292.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 1.19%)</title><rect x="292" y="260" width="14" height="15" fill="rgb(238,82,14)"/><text x="295.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.40%)</title><rect x="301" y="276" width="5" height="15" fill="rgb(218,204,29)"/><text x="304.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="303" y="292" width="3" height="15" fill="rgb(244,39,1)"/><text x="306.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 2.17%)</title><rect x="282" y="244" width="26" height="15" fill="rgb(224,131,13)"/><text x="285.00" y="254.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.20%)</title><rect x="306" y="260" width="2" height="15" fill="rgb(209,109,54)"/><text x="309.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.20%)</title><rect x="308" y="244" width="2" height="15" fill="rgb(252,76,29)"/><text x="311.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.20%)</title><rect x="310" y="244" width="3" height="15" fill="rgb(245,76,38)"/><text x="313.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (42 samples, 8.30%)</title><rect x="217" y="212" width="98" height="15" fill="rgb(253,145,15)"/><text x="220.00" y="222.50">predict_pro..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (42 samples, 8.30%)</title><rect x="217" y="228" width="98" height="15" fill="rgb(220,85,30)"/><text x="220.00" y="238.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.20%)</title><rect x="313" y="244" width="2" height="15" fill="rgb(225,89,50)"/><text x="316.00" y="254.50"></text></g><g><title>0x7fc5f481d225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="315" y="276" width="2" height="15" fill="rgb(212,229,40)"/><text x="318.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.20%)</title><rect x="315" y="292" width="2" height="15" fill="rgb(219,48,17)"/><text x="318.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.20%)</title><rect x="315" y="308" width="2" height="15" fill="rgb(208,78,39)"/><text x="318.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.20%)</title><rect x="315" y="324" width="2" height="15" fill="rgb(240,133,42)"/><text x="318.00" y="334.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.20%)</title><rect x="315" y="340" width="2" height="15" fill="rgb(223,98,25)"/><text x="318.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.20%)</title><rect x="315" y="356" width="2" height="15" fill="rgb(226,56,17)"/><text x="318.00" y="366.50"></text></g><g><title>0x7fc5f481d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="317" y="276" width="3" height="15" fill="rgb(252,122,36)"/><text x="320.00" y="286.50"></text></g><g><title>0x7fc5f4801d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="317" y="292" width="3" height="15" fill="rgb(212,93,39)"/><text x="320.00" y="302.50"></text></g><g><title>0x7fc5f4801666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="317" y="308" width="3" height="15" fill="rgb(215,0,36)"/><text x="320.00" y="318.50"></text></g><g><title>0x7fc5f47f72fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="317" y="324" width="3" height="15" fill="rgb(222,151,11)"/><text x="320.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.20%)</title><rect x="317" y="340" width="3" height="15" fill="rgb(225,176,32)"/><text x="320.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.20%)</title><rect x="317" y="356" width="3" height="15" fill="rgb(253,51,12)"/><text x="320.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.20%)</title><rect x="317" y="372" width="3" height="15" fill="rgb(222,102,9)"/><text x="320.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.20%)</title><rect x="317" y="388" width="3" height="15" fill="rgb(214,52,13)"/><text x="320.00" y="398.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.20%)</title><rect x="317" y="404" width="3" height="15" fill="rgb(207,73,39)"/><text x="320.00" y="414.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="317" y="420" width="3" height="15" fill="rgb(237,43,25)"/><text x="320.00" y="430.50"></text></g><g><title>0x7fc5f481d364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="320" y="276" width="4" height="15" fill="rgb(248,190,50)"/><text x="323.00" y="286.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.20%)</title><rect x="322" y="292" width="2" height="15" fill="rgb(219,88,32)"/><text x="325.00" y="302.50"></text></g><g><title>0x7fc5f481d456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="324" y="276" width="3" height="15" fill="rgb(238,175,34)"/><text x="327.00" y="286.50"></text></g><g><title>0x7fc5f481d511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="327" y="276" width="2" height="15" fill="rgb(226,91,14)"/><text x="330.00" y="286.50"></text></g><g><title>0x7fc5f481d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="329" y="276" width="2" height="15" fill="rgb(237,16,8)"/><text x="332.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.20%)</title><rect x="329" y="292" width="2" height="15" fill="rgb(246,28,41)"/><text x="332.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="329" y="308" width="2" height="15" fill="rgb(234,72,52)"/><text x="332.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.20%)</title><rect x="329" y="324" width="2" height="15" fill="rgb(242,167,20)"/><text x="332.00" y="334.50"></text></g><g><title>0x7fc5f481d644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="331" y="276" width="3" height="15" fill="rgb(207,48,52)"/><text x="334.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="331" y="292" width="3" height="15" fill="rgb(208,113,14)"/><text x="334.00" y="302.50"></text></g><g><title>0x7fc5f481e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.78%)</title><rect x="315" y="260" width="21" height="15" fill="rgb(213,219,32)"/><text x="318.00" y="270.50"></text></g><g><title>0x7fc5f481dc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="334" y="276" width="2" height="15" fill="rgb(208,135,17)"/><text x="337.00" y="286.50"></text></g><g><title>0x7fc5f47f5529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(220,167,51)"/><text x="337.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.20%)</title><rect x="334" y="308" width="2" height="15" fill="rgb(247,38,53)"/><text x="337.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.20%)</title><rect x="334" y="324" width="2" height="15" fill="rgb(233,60,6)"/><text x="337.00" y="334.50"></text></g><g><title>0x7fc5f480efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.98%)</title><rect x="315" y="244" width="23" height="15" fill="rgb(236,77,49)"/><text x="318.00" y="254.50">0..</text></g><g><title>0x7fc5f481e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="336" y="260" width="2" height="15" fill="rgb(242,69,52)"/><text x="339.00" y="270.50"></text></g><g><title>0x7fc5f47f32f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="336" y="276" width="2" height="15" fill="rgb(243,13,32)"/><text x="339.00" y="286.50"></text></g><g><title>0x7fc5f47f2530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="336" y="292" width="2" height="15" fill="rgb(233,186,36)"/><text x="339.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.20%)</title><rect x="336" y="308" width="2" height="15" fill="rgb(230,111,2)"/><text x="339.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="338" y="260" width="3" height="15" fill="rgb(254,222,2)"/><text x="341.00" y="270.50"></text></g><g><title>0x7fc5f480f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="338" y="244" width="5" height="15" fill="rgb(206,154,19)"/><text x="341.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.20%)</title><rect x="341" y="260" width="2" height="15" fill="rgb(254,218,26)"/><text x="344.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.20%)</title><rect x="341" y="276" width="2" height="15" fill="rgb(228,168,50)"/><text x="344.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="341" y="292" width="2" height="15" fill="rgb(213,10,2)"/><text x="344.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.20%)</title><rect x="341" y="308" width="2" height="15" fill="rgb(207,175,12)"/><text x="344.00" y="318.50"></text></g><g><title>0x7fc5f480f13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="343" y="244" width="2" height="15" fill="rgb(253,83,53)"/><text x="346.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="343" y="260" width="2" height="15" fill="rgb(239,42,41)"/><text x="346.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="343" y="276" width="2" height="15" fill="rgb(227,109,0)"/><text x="346.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="343" y="292" width="2" height="15" fill="rgb(253,138,14)"/><text x="346.00" y="302.50"></text></g><g><title>0x7fc5f480f14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="345" y="244" width="3" height="15" fill="rgb(212,99,37)"/><text x="348.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="345" y="260" width="3" height="15" fill="rgb(223,95,48)"/><text x="348.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="345" y="276" width="3" height="15" fill="rgb(219,169,22)"/><text x="348.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="345" y="292" width="3" height="15" fill="rgb(210,112,39)"/><text x="348.00" y="302.50"></text></g><g><title>0x7fc5f480f2f9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="348" y="244" width="2" height="15" fill="rgb(246,174,29)"/><text x="351.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 3.16%)</title><rect x="315" y="212" width="37" height="15" fill="rgb(236,121,6)"/><text x="318.00" y="222.50">pre..</text></g><g><title>0x7fc5f480fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 3.16%)</title><rect x="315" y="228" width="37" height="15" fill="rgb(212,46,22)"/><text x="318.00" y="238.50">0x7..</text></g><g><title>0x7fc5f480f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="350" y="244" width="2" height="15" fill="rgb(252,91,27)"/><text x="353.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.20%)</title><rect x="350" y="260" width="2" height="15" fill="rgb(231,19,22)"/><text x="353.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="350" y="276" width="2" height="15" fill="rgb(213,108,45)"/><text x="353.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:277) (1 samples, 0.20%)</title><rect x="350" y="292" width="2" height="15" fill="rgb(235,85,13)"/><text x="353.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.20%)</title><rect x="352" y="212" width="3" height="15" fill="rgb(244,203,32)"/><text x="355.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.20%)</title><rect x="359" y="228" width="3" height="15" fill="rgb(206,93,30)"/><text x="362.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.20%)</title><rect x="359" y="244" width="3" height="15" fill="rgb(210,187,12)"/><text x="362.00" y="254.50"></text></g><g><title>unpack_indices (mapping.c:224) (1 samples, 0.20%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(210,225,16)"/><text x="362.00" y="270.50"></text></g><g><title>0x7fc61adec14e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="364" y="260" width="2" height="15" fill="rgb(209,142,49)"/><text x="367.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.20%)</title><rect x="366" y="324" width="3" height="15" fill="rgb(254,143,2)"/><text x="369.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.59%)</title><rect x="366" y="276" width="7" height="15" fill="rgb(236,4,39)"/><text x="369.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.59%)</title><rect x="366" y="292" width="7" height="15" fill="rgb(252,74,28)"/><text x="369.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.59%)</title><rect x="366" y="308" width="7" height="15" fill="rgb(238,33,31)"/><text x="369.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.40%)</title><rect x="369" y="324" width="4" height="15" fill="rgb(234,30,0)"/><text x="372.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="369" y="340" width="4" height="15" fill="rgb(241,199,47)"/><text x="372.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.40%)</title><rect x="369" y="356" width="4" height="15" fill="rgb(231,97,6)"/><text x="372.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="373" y="292" width="3" height="15" fill="rgb(216,196,10)"/><text x="376.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.20%)</title><rect x="376" y="292" width="2" height="15" fill="rgb(212,206,25)"/><text x="379.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.20%)</title><rect x="376" y="308" width="2" height="15" fill="rgb(226,209,14)"/><text x="379.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.20%)</title><rect x="376" y="324" width="2" height="15" fill="rgb(239,34,37)"/><text x="379.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.20%)</title><rect x="378" y="308" width="2" height="15" fill="rgb(250,93,26)"/><text x="381.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.20%)</title><rect x="378" y="324" width="2" height="15" fill="rgb(231,145,50)"/><text x="381.00" y="334.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.20%)</title><rect x="378" y="340" width="2" height="15" fill="rgb(249,173,14)"/><text x="381.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.20%)</title><rect x="380" y="324" width="3" height="15" fill="rgb(217,139,0)"/><text x="383.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.20%)</title><rect x="380" y="340" width="3" height="15" fill="rgb(217,216,26)"/><text x="383.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.20%)</title><rect x="380" y="356" width="3" height="15" fill="rgb(216,92,26)"/><text x="383.00" y="366.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.20%)</title><rect x="380" y="372" width="3" height="15" fill="rgb(217,190,40)"/><text x="383.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="383" y="324" width="2" height="15" fill="rgb(252,24,52)"/><text x="386.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="383" y="340" width="2" height="15" fill="rgb(214,170,7)"/><text x="386.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="383" y="356" width="2" height="15" fill="rgb(209,103,19)"/><text x="386.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.20%)</title><rect x="383" y="372" width="2" height="15" fill="rgb(252,223,1)"/><text x="386.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.20%)</title><rect x="383" y="388" width="2" height="15" fill="rgb(209,226,48)"/><text x="386.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.20%)</title><rect x="383" y="404" width="2" height="15" fill="rgb(252,153,3)"/><text x="386.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="385" y="324" width="2" height="15" fill="rgb(205,87,37)"/><text x="388.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="385" y="340" width="2" height="15" fill="rgb(214,0,53)"/><text x="388.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.20%)</title><rect x="385" y="356" width="2" height="15" fill="rgb(241,138,36)"/><text x="388.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (15 samples, 2.96%)</title><rect x="355" y="212" width="35" height="15" fill="rgb(234,167,29)"/><text x="358.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 2.37%)</title><rect x="362" y="228" width="28" height="15" fill="rgb(250,158,54)"/><text x="365.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 2.37%)</title><rect x="362" y="244" width="28" height="15" fill="rgb(225,46,52)"/><text x="365.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.98%)</title><rect x="366" y="260" width="24" height="15" fill="rgb(245,19,2)"/><text x="369.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.38%)</title><rect x="373" y="276" width="17" height="15" fill="rgb(230,125,28)"/><text x="376.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.99%)</title><rect x="378" y="292" width="12" height="15" fill="rgb(236,206,24)"/><text x="381.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.79%)</title><rect x="380" y="308" width="10" height="15" fill="rgb(252,202,1)"/><text x="383.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.20%)</title><rect x="387" y="324" width="3" height="15" fill="rgb(218,180,54)"/><text x="390.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.20%)</title><rect x="387" y="340" width="3" height="15" fill="rgb(211,6,53)"/><text x="390.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.20%)</title><rect x="390" y="228" width="2" height="15" fill="rgb(206,60,10)"/><text x="393.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.20%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(207,139,25)"/><text x="393.00" y="254.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="390" y="260" width="2" height="15" fill="rgb(249,91,10)"/><text x="393.00" y="270.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:212) (1 samples, 0.20%)</title><rect x="390" y="276" width="2" height="15" fill="rgb(230,63,5)"/><text x="393.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.40%)</title><rect x="392" y="228" width="5" height="15" fill="rgb(212,82,49)"/><text x="395.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.40%)</title><rect x="392" y="244" width="5" height="15" fill="rgb(220,148,50)"/><text x="395.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (2 samples, 0.40%)</title><rect x="392" y="260" width="5" height="15" fill="rgb(241,180,3)"/><text x="395.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (2 samples, 0.40%)</title><rect x="392" y="276" width="5" height="15" fill="rgb(246,209,38)"/><text x="395.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.40%)</title><rect x="392" y="292" width="5" height="15" fill="rgb(209,127,36)"/><text x="395.00" y="302.50"></text></g><g><title>0x7fc61ad838d0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="394" y="308" width="3" height="15" fill="rgb(225,211,47)"/><text x="397.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.20%)</title><rect x="397" y="276" width="2" height="15" fill="rgb(240,87,19)"/><text x="400.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.40%)</title><rect x="397" y="260" width="4" height="15" fill="rgb(249,33,50)"/><text x="400.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="399" y="276" width="2" height="15" fill="rgb(235,55,26)"/><text x="402.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.20%)</title><rect x="399" y="292" width="2" height="15" fill="rgb(253,112,43)"/><text x="402.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="399" y="308" width="2" height="15" fill="rgb(239,227,1)"/><text x="402.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:212) (1 samples, 0.20%)</title><rect x="399" y="324" width="2" height="15" fill="rgb(225,119,47)"/><text x="402.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 1.19%)</title><rect x="390" y="212" width="14" height="15" fill="rgb(206,18,3)"/><text x="393.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.59%)</title><rect x="397" y="228" width="7" height="15" fill="rgb(212,211,8)"/><text x="400.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.59%)</title><rect x="397" y="244" width="7" height="15" fill="rgb(205,170,50)"/><text x="400.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="401" y="260" width="3" height="15" fill="rgb(238,203,11)"/><text x="404.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.20%)</title><rect x="401" y="276" width="3" height="15" fill="rgb(230,138,5)"/><text x="404.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="401" y="292" width="3" height="15" fill="rgb(250,111,4)"/><text x="404.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.20%)</title><rect x="401" y="308" width="3" height="15" fill="rgb(239,163,52)"/><text x="404.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.20%)</title><rect x="401" y="324" width="3" height="15" fill="rgb(209,214,39)"/><text x="404.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="404" y="228" width="2" height="15" fill="rgb(231,57,44)"/><text x="407.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="404" y="244" width="2" height="15" fill="rgb(235,104,29)"/><text x="407.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="404" y="260" width="2" height="15" fill="rgb(208,125,21)"/><text x="407.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.20%)</title><rect x="404" y="276" width="2" height="15" fill="rgb(230,140,3)"/><text x="407.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.20%)</title><rect x="406" y="244" width="2" height="15" fill="rgb(213,100,33)"/><text x="409.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.20%)</title><rect x="408" y="292" width="3" height="15" fill="rgb(207,223,51)"/><text x="411.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.40%)</title><rect x="408" y="276" width="5" height="15" fill="rgb(206,100,40)"/><text x="411.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="411" y="292" width="2" height="15" fill="rgb(250,217,18)"/><text x="414.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.20%)</title><rect x="411" y="308" width="2" height="15" fill="rgb(211,67,47)"/><text x="414.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.20%)</title><rect x="413" y="292" width="2" height="15" fill="rgb(222,171,8)"/><text x="416.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.20%)</title><rect x="415" y="292" width="3" height="15" fill="rgb(214,54,41)"/><text x="418.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.19%)</title><rect x="406" y="228" width="14" height="15" fill="rgb(224,27,32)"/><text x="409.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.99%)</title><rect x="408" y="244" width="12" height="15" fill="rgb(248,84,16)"/><text x="411.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.99%)</title><rect x="408" y="260" width="12" height="15" fill="rgb(210,145,37)"/><text x="411.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.59%)</title><rect x="413" y="276" width="7" height="15" fill="rgb(233,45,17)"/><text x="416.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(229,185,33)"/><text x="421.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.20%)</title><rect x="418" y="308" width="2" height="15" fill="rgb(219,202,34)"/><text x="421.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (102 samples, 20.16%)</title><rect x="184" y="196" width="238" height="15" fill="rgb(209,14,47)"/><text x="187.00" y="206.50">_samme_proba (sklearn/ensemble/..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 1.58%)</title><rect x="404" y="212" width="18" height="15" fill="rgb(210,206,27)"/><text x="407.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="420" y="228" width="2" height="15" fill="rgb(214,190,2)"/><text x="423.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="420" y="244" width="2" height="15" fill="rgb(230,192,33)"/><text x="423.00" y="254.50"></text></g><g><title>0x7fc61adec120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="420" y="260" width="2" height="15" fill="rgb(228,133,27)"/><text x="423.00" y="270.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.20%)</title><rect x="429" y="212" width="3" height="15" fill="rgb(243,36,38)"/><text x="432.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.20%)</title><rect x="432" y="212" width="2" height="15" fill="rgb(206,111,44)"/><text x="435.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="434" y="212" width="2" height="15" fill="rgb(236,97,39)"/><text x="437.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="436" y="292" width="3" height="15" fill="rgb(207,170,35)"/><text x="439.00" y="302.50"></text></g><g><title>0x7fc61ade1e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(207,151,20)"/><text x="439.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.59%)</title><rect x="436" y="228" width="7" height="15" fill="rgb(245,145,21)"/><text x="439.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.59%)</title><rect x="436" y="244" width="7" height="15" fill="rgb(243,217,8)"/><text x="439.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.59%)</title><rect x="436" y="260" width="7" height="15" fill="rgb(218,97,34)"/><text x="439.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.59%)</title><rect x="436" y="276" width="7" height="15" fill="rgb(225,197,52)"/><text x="439.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.40%)</title><rect x="439" y="292" width="4" height="15" fill="rgb(223,22,51)"/><text x="442.00" y="302.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="448" y="324" width="2" height="15" fill="rgb(251,206,21)"/><text x="451.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.40%)</title><rect x="448" y="308" width="5" height="15" fill="rgb(233,166,37)"/><text x="451.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.20%)</title><rect x="450" y="324" width="3" height="15" fill="rgb(234,62,26)"/><text x="453.00" y="334.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.20%)</title><rect x="450" y="340" width="3" height="15" fill="rgb(211,83,3)"/><text x="453.00" y="350.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.20%)</title><rect x="450" y="356" width="3" height="15" fill="rgb(251,15,32)"/><text x="453.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (5 samples, 0.99%)</title><rect x="453" y="324" width="11" height="15" fill="rgb(247,91,4)"/><text x="456.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.59%)</title><rect x="457" y="340" width="7" height="15" fill="rgb(205,6,8)"/><text x="460.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.79%)</title><rect x="464" y="324" width="10" height="15" fill="rgb(243,12,14)"/><text x="467.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="471" y="340" width="3" height="15" fill="rgb(214,157,46)"/><text x="474.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.20%)</title><rect x="471" y="356" width="3" height="15" fill="rgb(206,0,46)"/><text x="474.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.20%)</title><rect x="471" y="372" width="3" height="15" fill="rgb(244,134,8)"/><text x="474.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.20%)</title><rect x="471" y="388" width="3" height="15" fill="rgb(230,145,27)"/><text x="474.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="471" y="404" width="3" height="15" fill="rgb(224,184,34)"/><text x="474.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="471" y="420" width="3" height="15" fill="rgb(215,11,35)"/><text x="474.00" y="430.50"></text></g><g><title>0x7fc61ade1ec9 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="471" y="436" width="3" height="15" fill="rgb(229,30,36)"/><text x="474.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(213,157,50)"/><text x="477.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="474" y="372" width="2" height="15" fill="rgb(242,73,49)"/><text x="477.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.20%)</title><rect x="474" y="388" width="2" height="15" fill="rgb(211,167,38)"/><text x="477.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.20%)</title><rect x="474" y="404" width="2" height="15" fill="rgb(241,101,39)"/><text x="477.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src:1809) (1 samples, 0.20%)</title><rect x="476" y="404" width="2" height="15" fill="rgb(237,198,26)"/><text x="479.00" y="414.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src:323) (1 samples, 0.20%)</title><rect x="476" y="420" width="2" height="15" fill="rgb(222,54,3)"/><text x="479.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.59%)</title><rect x="474" y="340" width="7" height="15" fill="rgb(243,192,14)"/><text x="477.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="476" y="356" width="5" height="15" fill="rgb(245,227,21)"/><text x="479.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.40%)</title><rect x="476" y="372" width="5" height="15" fill="rgb(223,9,24)"/><text x="479.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.40%)</title><rect x="476" y="388" width="5" height="15" fill="rgb(215,153,38)"/><text x="479.00" y="398.50"></text></g><g><title>DOUBLE_isnan (loops.c.src:1810) (1 samples, 0.20%)</title><rect x="478" y="404" width="3" height="15" fill="rgb(222,224,34)"/><text x="481.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (13 samples, 2.57%)</title><rect x="453" y="308" width="30" height="15" fill="rgb(243,129,15)"/><text x="456.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.79%)</title><rect x="474" y="324" width="9" height="15" fill="rgb(228,77,29)"/><text x="477.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.20%)</title><rect x="481" y="340" width="2" height="15" fill="rgb(230,187,15)"/><text x="484.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.20%)</title><rect x="481" y="356" width="2" height="15" fill="rgb(222,59,54)"/><text x="484.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.40%)</title><rect x="483" y="324" width="5" height="15" fill="rgb(216,173,42)"/><text x="486.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="485" y="340" width="3" height="15" fill="rgb(237,42,5)"/><text x="488.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="488" y="340" width="2" height="15" fill="rgb(218,24,12)"/><text x="491.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="490" y="372" width="2" height="15" fill="rgb(225,26,22)"/><text x="493.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.20%)</title><rect x="492" y="372" width="3" height="15" fill="rgb(249,222,20)"/><text x="495.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.20%)</title><rect x="497" y="388" width="2" height="15" fill="rgb(253,19,26)"/><text x="500.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="499" y="388" width="3" height="15" fill="rgb(243,172,50)"/><text x="502.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="499" y="404" width="3" height="15" fill="rgb(237,177,30)"/><text x="502.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="499" y="420" width="3" height="15" fill="rgb(221,182,53)"/><text x="502.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 1.58%)</title><rect x="488" y="324" width="18" height="15" fill="rgb(210,111,41)"/><text x="491.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.38%)</title><rect x="490" y="340" width="16" height="15" fill="rgb(213,4,27)"/><text x="493.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.38%)</title><rect x="490" y="356" width="16" height="15" fill="rgb(206,199,20)"/><text x="493.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.99%)</title><rect x="495" y="372" width="11" height="15" fill="rgb(254,132,25)"/><text x="498.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.40%)</title><rect x="502" y="388" width="4" height="15" fill="rgb(218,191,12)"/><text x="505.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="504" y="404" width="2" height="15" fill="rgb(206,5,10)"/><text x="507.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="504" y="420" width="2" height="15" fill="rgb(207,31,27)"/><text x="507.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="504" y="436" width="2" height="15" fill="rgb(225,145,50)"/><text x="507.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1037) (1 samples, 0.20%)</title><rect x="504" y="452" width="2" height="15" fill="rgb(252,198,28)"/><text x="507.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (12 samples, 2.37%)</title><rect x="483" y="308" width="28" height="15" fill="rgb(207,131,16)"/><text x="486.00" y="318.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.40%)</title><rect x="506" y="324" width="5" height="15" fill="rgb(236,136,33)"/><text x="509.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="506" y="340" width="5" height="15" fill="rgb(218,26,37)"/><text x="509.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="506" y="356" width="5" height="15" fill="rgb(252,23,2)"/><text x="509.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (2 samples, 0.40%)</title><rect x="506" y="372" width="5" height="15" fill="rgb(213,13,28)"/><text x="509.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="520" y="356" width="3" height="15" fill="rgb(222,73,46)"/><text x="523.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="520" y="372" width="3" height="15" fill="rgb(218,78,33)"/><text x="523.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.20%)</title><rect x="520" y="388" width="3" height="15" fill="rgb(223,178,27)"/><text x="523.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.20%)</title><rect x="520" y="404" width="3" height="15" fill="rgb(219,149,17)"/><text x="523.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="523" y="356" width="2" height="15" fill="rgb(215,34,22)"/><text x="526.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.20%)</title><rect x="523" y="372" width="2" height="15" fill="rgb(245,36,0)"/><text x="526.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.20%)</title><rect x="525" y="372" width="2" height="15" fill="rgb(211,217,42)"/><text x="528.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="525" y="388" width="2" height="15" fill="rgb(232,123,38)"/><text x="528.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.20%)</title><rect x="525" y="404" width="2" height="15" fill="rgb(227,174,53)"/><text x="528.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.20%)</title><rect x="525" y="420" width="2" height="15" fill="rgb(218,14,39)"/><text x="528.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="525" y="436" width="2" height="15" fill="rgb(205,188,10)"/><text x="528.00" y="446.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (46 samples, 9.09%)</title><rect x="422" y="196" width="108" height="15" fill="rgb(231,149,38)"/><text x="425.00" y="206.50">_samme_proba ..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (40 samples, 7.91%)</title><rect x="436" y="212" width="94" height="15" fill="rgb(208,175,23)"/><text x="439.00" y="222.50">clip (&lt;__ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (37 samples, 7.31%)</title><rect x="443" y="228" width="87" height="15" fill="rgb(247,174,40)"/><text x="446.00" y="238.50">array_impl..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (37 samples, 7.31%)</title><rect x="443" y="244" width="87" height="15" fill="rgb(226,79,46)"/><text x="446.00" y="254.50">clip (nump..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (35 samples, 6.92%)</title><rect x="448" y="260" width="82" height="15" fill="rgb(232,221,43)"/><text x="451.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c:2381) (35 samples, 6.92%)</title><rect x="448" y="276" width="82" height="15" fill="rgb(205,171,12)"/><text x="451.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (35 samples, 6.92%)</title><rect x="448" y="292" width="82" height="15" fill="rgb(213,86,9)"/><text x="451.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:129) (8 samples, 1.58%)</title><rect x="511" y="308" width="19" height="15" fill="rgb(228,137,38)"/><text x="514.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.79%)</title><rect x="520" y="324" width="10" height="15" fill="rgb(220,96,5)"/><text x="523.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.79%)</title><rect x="520" y="340" width="10" height="15" fill="rgb(247,5,35)"/><text x="523.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="525" y="356" width="5" height="15" fill="rgb(242,216,1)"/><text x="528.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.20%)</title><rect x="527" y="372" width="3" height="15" fill="rgb(230,19,46)"/><text x="530.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.20%)</title><rect x="527" y="388" width="3" height="15" fill="rgb(226,224,54)"/><text x="530.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.20%)</title><rect x="530" y="196" width="2" height="15" fill="rgb(210,198,31)"/><text x="533.00" y="206.50"></text></g><g><title>0x7fc61adec120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="534" y="228" width="3" height="15" fill="rgb(234,132,22)"/><text x="537.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3149) (1 samples, 0.20%)</title><rect x="537" y="244" width="2" height="15" fill="rgb(218,5,33)"/><text x="540.00" y="254.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.20%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(239,70,20)"/><text x="540.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="539" y="260" width="2" height="15" fill="rgb(244,183,6)"/><text x="542.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.40%)</title><rect x="539" y="244" width="5" height="15" fill="rgb(254,63,12)"/><text x="542.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="541" y="260" width="3" height="15" fill="rgb(208,70,42)"/><text x="544.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="541" y="276" width="3" height="15" fill="rgb(240,195,36)"/><text x="544.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1024) (1 samples, 0.20%)</title><rect x="541" y="292" width="3" height="15" fill="rgb(211,206,28)"/><text x="544.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.20%)</title><rect x="544" y="244" width="2" height="15" fill="rgb(208,141,23)"/><text x="547.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.20%)</title><rect x="544" y="260" width="2" height="15" fill="rgb(214,7,9)"/><text x="547.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.20%)</title><rect x="544" y="276" width="2" height="15" fill="rgb(245,206,18)"/><text x="547.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="546" y="244" width="2" height="15" fill="rgb(230,19,16)"/><text x="549.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="546" y="260" width="2" height="15" fill="rgb(217,154,9)"/><text x="549.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.20%)</title><rect x="546" y="276" width="2" height="15" fill="rgb(217,106,18)"/><text x="549.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.20%)</title><rect x="546" y="292" width="2" height="15" fill="rgb(246,107,21)"/><text x="549.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src:1924) (1 samples, 0.20%)</title><rect x="546" y="308" width="2" height="15" fill="rgb(250,121,27)"/><text x="549.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.20%)</title><rect x="546" y="324" width="2" height="15" fill="rgb(222,158,35)"/><text x="549.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="548" y="244" width="3" height="15" fill="rgb(217,115,42)"/><text x="551.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.20%)</title><rect x="548" y="260" width="3" height="15" fill="rgb(212,229,45)"/><text x="551.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="548" y="276" width="3" height="15" fill="rgb(240,108,37)"/><text x="551.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="548" y="292" width="3" height="15" fill="rgb(214,70,30)"/><text x="551.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.38%)</title><rect x="537" y="228" width="16" height="15" fill="rgb(215,185,5)"/><text x="540.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.20%)</title><rect x="551" y="244" width="2" height="15" fill="rgb(252,187,17)"/><text x="554.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.20%)</title><rect x="551" y="260" width="2" height="15" fill="rgb(246,222,18)"/><text x="554.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="553" y="276" width="2" height="15" fill="rgb(228,96,12)"/><text x="556.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.40%)</title><rect x="553" y="244" width="5" height="15" fill="rgb(210,64,12)"/><text x="556.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.40%)</title><rect x="553" y="260" width="5" height="15" fill="rgb(231,59,9)"/><text x="556.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="555" y="276" width="3" height="15" fill="rgb(215,126,18)"/><text x="558.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.59%)</title><rect x="553" y="228" width="7" height="15" fill="rgb(229,141,31)"/><text x="556.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="558" y="244" width="2" height="15" fill="rgb(209,119,27)"/><text x="561.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.20%)</title><rect x="558" y="260" width="2" height="15" fill="rgb(245,34,48)"/><text x="561.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (12 samples, 2.37%)</title><rect x="534" y="212" width="28" height="15" fill="rgb(212,156,31)"/><text x="537.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.20%)</title><rect x="560" y="228" width="2" height="15" fill="rgb(252,64,45)"/><text x="563.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.20%)</title><rect x="560" y="244" width="2" height="15" fill="rgb(235,184,39)"/><text x="563.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.20%)</title><rect x="560" y="260" width="2" height="15" fill="rgb(211,118,9)"/><text x="563.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="562" y="228" width="3" height="15" fill="rgb(214,54,5)"/><text x="565.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="562" y="244" width="3" height="15" fill="rgb(238,40,18)"/><text x="565.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.20%)</title><rect x="562" y="260" width="3" height="15" fill="rgb(252,153,3)"/><text x="565.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.20%)</title><rect x="562" y="276" width="3" height="15" fill="rgb(214,110,9)"/><text x="565.00" y="286.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.40%)</title><rect x="562" y="212" width="5" height="15" fill="rgb(225,195,4)"/><text x="565.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.20%)</title><rect x="565" y="228" width="2" height="15" fill="rgb(230,57,20)"/><text x="568.00" y="238.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.20%)</title><rect x="569" y="324" width="3" height="15" fill="rgb(244,179,20)"/><text x="572.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.20%)</title><rect x="569" y="340" width="3" height="15" fill="rgb(245,224,27)"/><text x="572.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.20%)</title><rect x="572" y="340" width="2" height="15" fill="rgb(215,213,25)"/><text x="575.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.59%)</title><rect x="569" y="260" width="7" height="15" fill="rgb(210,140,50)"/><text x="572.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.59%)</title><rect x="569" y="276" width="7" height="15" fill="rgb(227,107,0)"/><text x="572.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.59%)</title><rect x="569" y="292" width="7" height="15" fill="rgb(212,47,54)"/><text x="572.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.59%)</title><rect x="569" y="308" width="7" height="15" fill="rgb(218,112,25)"/><text x="572.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="572" y="324" width="4" height="15" fill="rgb(247,100,30)"/><text x="575.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="574" y="340" width="2" height="15" fill="rgb(236,77,28)"/><text x="577.00" y="350.50"></text></g><g><title>0x7fc61ade1e50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="574" y="356" width="2" height="15" fill="rgb(241,88,27)"/><text x="577.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="576" y="276" width="3" height="15" fill="rgb(242,112,35)"/><text x="579.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="579" y="308" width="2" height="15" fill="rgb(247,175,48)"/><text x="582.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="579" y="324" width="2" height="15" fill="rgb(241,162,26)"/><text x="582.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="579" y="340" width="2" height="15" fill="rgb(234,97,6)"/><text x="582.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.20%)</title><rect x="579" y="356" width="2" height="15" fill="rgb(211,219,46)"/><text x="582.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.20%)</title><rect x="579" y="372" width="2" height="15" fill="rgb(210,226,40)"/><text x="582.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.40%)</title><rect x="581" y="308" width="5" height="15" fill="rgb(236,144,15)"/><text x="584.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.40%)</title><rect x="581" y="324" width="5" height="15" fill="rgb(224,226,11)"/><text x="584.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (2 samples, 0.40%)</title><rect x="581" y="340" width="5" height="15" fill="rgb(236,223,28)"/><text x="584.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (174 samples, 34.39%)</title><rect x="182" y="180" width="406" height="15" fill="rgb(226,163,24)"/><text x="185.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (24 samples, 4.74%)</title><rect x="532" y="196" width="56" height="15" fill="rgb(217,158,36)"/><text x="535.00" y="206.50">_samm..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 1.78%)</title><rect x="567" y="212" width="21" height="15" fill="rgb(252,212,8)"/><text x="570.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.78%)</title><rect x="567" y="228" width="21" height="15" fill="rgb(232,135,45)"/><text x="570.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 1.58%)</title><rect x="569" y="244" width="19" height="15" fill="rgb(231,156,18)"/><text x="572.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.99%)</title><rect x="576" y="260" width="12" height="15" fill="rgb(234,128,29)"/><text x="579.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.79%)</title><rect x="579" y="276" width="9" height="15" fill="rgb(217,56,44)"/><text x="582.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.79%)</title><rect x="579" y="292" width="9" height="15" fill="rgb(216,43,52)"/><text x="582.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:565) (1 samples, 0.20%)</title><rect x="586" y="308" width="2" height="15" fill="rgb(238,106,31)"/><text x="589.00" y="318.50"></text></g><g><title>array_add (number.c:322) (1 samples, 0.20%)</title><rect x="588" y="180" width="2" height="15" fill="rgb(213,169,22)"/><text x="591.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (176 samples, 34.78%)</title><rect x="182" y="148" width="411" height="15" fill="rgb(227,40,39)"/><text x="185.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (176 samples, 34.78%)</title><rect x="182" y="164" width="411" height="15" fill="rgb(227,126,40)"/><text x="185.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:..</text></g><g><title>array_add (number.c:330) (1 samples, 0.20%)</title><rect x="590" y="180" width="3" height="15" fill="rgb(233,49,27)"/><text x="593.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="590" y="196" width="3" height="15" fill="rgb(224,84,12)"/><text x="593.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="590" y="212" width="3" height="15" fill="rgb(218,129,46)"/><text x="593.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.20%)</title><rect x="590" y="228" width="3" height="15" fill="rgb(245,6,9)"/><text x="593.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.20%)</title><rect x="590" y="244" width="3" height="15" fill="rgb(224,226,23)"/><text x="593.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.20%)</title><rect x="590" y="260" width="3" height="15" fill="rgb(241,104,27)"/><text x="593.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.20%)</title><rect x="590" y="276" width="3" height="15" fill="rgb(253,144,14)"/><text x="593.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.20%)</title><rect x="590" y="292" width="3" height="15" fill="rgb(236,108,19)"/><text x="593.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.20%)</title><rect x="590" y="308" width="3" height="15" fill="rgb(224,205,41)"/><text x="593.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:38) (248 samples, 49.01%)</title><rect x="16" y="52" width="579" height="15" fill="rgb(208,22,33)"/><text x="19.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:37) (248 samples, 49.01%)</title><rect x="16" y="68" width="579" height="15" fill="rgb(235,68,17)"/><text x="19.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (247 samples, 48.81%)</title><rect x="19" y="84" width="576" height="15" fill="rgb(231,66,52)"/><text x="22.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (177 samples, 34.98%)</title><rect x="182" y="100" width="413" height="15" fill="rgb(223,96,12)"/><text x="185.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (177 samples, 34.98%)</title><rect x="182" y="116" width="413" height="15" fill="rgb(232,105,19)"/><text x="185.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (177 samples, 34.98%)</title><rect x="182" y="132" width="413" height="15" fill="rgb(215,189,35)"/><text x="185.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.20%)</title><rect x="593" y="148" width="2" height="15" fill="rgb(249,154,34)"/><text x="596.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.20%)</title><rect x="593" y="164" width="2" height="15" fill="rgb(245,103,39)"/><text x="596.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.20%)</title><rect x="593" y="180" width="2" height="15" fill="rgb(245,227,52)"/><text x="596.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="593" y="196" width="2" height="15" fill="rgb(236,66,22)"/><text x="596.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="593" y="212" width="2" height="15" fill="rgb(234,32,45)"/><text x="596.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.20%)</title><rect x="593" y="228" width="2" height="15" fill="rgb(216,198,23)"/><text x="596.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.20%)</title><rect x="593" y="244" width="2" height="15" fill="rgb(238,168,42)"/><text x="596.00" y="254.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.20%)</title><rect x="595" y="244" width="2" height="15" fill="rgb(207,147,54)"/><text x="598.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="595" y="260" width="2" height="15" fill="rgb(214,156,31)"/><text x="598.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="276" width="2" height="15" fill="rgb(229,165,6)"/><text x="598.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="292" width="2" height="15" fill="rgb(227,29,9)"/><text x="598.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="308" width="2" height="15" fill="rgb(238,79,49)"/><text x="598.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="324" width="2" height="15" fill="rgb(209,18,47)"/><text x="598.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="340" width="2" height="15" fill="rgb(212,179,19)"/><text x="598.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="356" width="2" height="15" fill="rgb(220,43,38)"/><text x="598.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.20%)</title><rect x="595" y="372" width="2" height="15" fill="rgb(209,102,6)"/><text x="598.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="388" width="2" height="15" fill="rgb(205,133,50)"/><text x="598.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="404" width="2" height="15" fill="rgb(222,9,0)"/><text x="598.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="420" width="2" height="15" fill="rgb(223,23,19)"/><text x="598.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="436" width="2" height="15" fill="rgb(251,85,17)"/><text x="598.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="452" width="2" height="15" fill="rgb(239,74,45)"/><text x="598.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.20%)</title><rect x="595" y="468" width="2" height="15" fill="rgb(249,25,44)"/><text x="598.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="484" width="2" height="15" fill="rgb(241,191,52)"/><text x="598.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="500" width="2" height="15" fill="rgb(251,224,44)"/><text x="598.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="516" width="2" height="15" fill="rgb(227,107,33)"/><text x="598.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="532" width="2" height="15" fill="rgb(249,9,44)"/><text x="598.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="548" width="2" height="15" fill="rgb(221,204,17)"/><text x="598.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:1148) (1 samples, 0.20%)</title><rect x="595" y="564" width="2" height="15" fill="rgb(249,188,10)"/><text x="598.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.20%)</title><rect x="595" y="580" width="2" height="15" fill="rgb(213,9,25)"/><text x="598.00" y="590.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (2 samples, 0.40%)</title><rect x="595" y="148" width="5" height="15" fill="rgb(225,167,0)"/><text x="598.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="595" y="164" width="5" height="15" fill="rgb(208,105,33)"/><text x="598.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="595" y="180" width="5" height="15" fill="rgb(226,56,8)"/><text x="598.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="595" y="196" width="5" height="15" fill="rgb(241,35,40)"/><text x="598.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="595" y="212" width="5" height="15" fill="rgb(219,183,17)"/><text x="598.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(227,138,5)"/><text x="598.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.20%)</title><rect x="597" y="244" width="3" height="15" fill="rgb(227,50,8)"/><text x="600.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="597" y="260" width="3" height="15" fill="rgb(234,207,21)"/><text x="600.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="597" y="276" width="3" height="15" fill="rgb(228,1,46)"/><text x="600.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="597" y="292" width="3" height="15" fill="rgb(220,52,37)"/><text x="600.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="597" y="308" width="3" height="15" fill="rgb(229,73,39)"/><text x="600.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="597" y="324" width="3" height="15" fill="rgb(238,154,21)"/><text x="600.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="597" y="340" width="3" height="15" fill="rgb(216,153,50)"/><text x="600.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="597" y="356" width="3" height="15" fill="rgb(252,223,33)"/><text x="600.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:23) (1 samples, 0.20%)</title><rect x="597" y="372" width="3" height="15" fill="rgb(242,19,40)"/><text x="600.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="597" y="388" width="3" height="15" fill="rgb(237,224,37)"/><text x="600.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="597" y="404" width="3" height="15" fill="rgb(227,86,53)"/><text x="600.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="597" y="420" width="3" height="15" fill="rgb(228,129,26)"/><text x="600.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="597" y="436" width="3" height="15" fill="rgb(251,39,28)"/><text x="600.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.20%)</title><rect x="597" y="452" width="3" height="15" fill="rgb(220,94,24)"/><text x="600.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.20%)</title><rect x="597" y="468" width="3" height="15" fill="rgb(222,130,40)"/><text x="600.00" y="478.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="597" y="484" width="3" height="15" fill="rgb(206,206,15)"/><text x="600.00" y="494.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (1 samples, 0.20%)</title><rect x="600" y="148" width="2" height="15" fill="rgb(248,17,22)"/><text x="603.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="164" width="2" height="15" fill="rgb(228,205,9)"/><text x="603.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="600" y="180" width="2" height="15" fill="rgb(206,177,13)"/><text x="603.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="196" width="2" height="15" fill="rgb(206,127,40)"/><text x="603.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="212" width="2" height="15" fill="rgb(232,171,23)"/><text x="603.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="228" width="2" height="15" fill="rgb(239,1,48)"/><text x="603.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="244" width="2" height="15" fill="rgb(223,158,28)"/><text x="603.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="260" width="2" height="15" fill="rgb(249,63,34)"/><text x="603.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="276" width="2" height="15" fill="rgb(235,53,34)"/><text x="603.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.20%)</title><rect x="600" y="292" width="2" height="15" fill="rgb(252,19,28)"/><text x="603.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="308" width="2" height="15" fill="rgb(228,20,25)"/><text x="603.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="324" width="2" height="15" fill="rgb(231,61,28)"/><text x="603.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="340" width="2" height="15" fill="rgb(216,82,29)"/><text x="603.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(248,189,53)"/><text x="603.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="372" width="2" height="15" fill="rgb(215,159,13)"/><text x="603.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.20%)</title><rect x="600" y="388" width="2" height="15" fill="rgb(254,8,44)"/><text x="603.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="404" width="2" height="15" fill="rgb(207,80,44)"/><text x="603.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="420" width="2" height="15" fill="rgb(208,198,7)"/><text x="603.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="436" width="2" height="15" fill="rgb(215,158,37)"/><text x="603.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="452" width="2" height="15" fill="rgb(226,190,38)"/><text x="603.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="468" width="2" height="15" fill="rgb(232,13,4)"/><text x="603.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.20%)</title><rect x="600" y="484" width="2" height="15" fill="rgb(251,92,51)"/><text x="603.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="500" width="2" height="15" fill="rgb(243,31,29)"/><text x="603.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="516" width="2" height="15" fill="rgb(252,21,17)"/><text x="603.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="532" width="2" height="15" fill="rgb(215,212,14)"/><text x="603.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="548" width="2" height="15" fill="rgb(235,179,52)"/><text x="603.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="564" width="2" height="15" fill="rgb(222,74,39)"/><text x="603.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.20%)</title><rect x="600" y="580" width="2" height="15" fill="rgb(243,142,35)"/><text x="603.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="596" width="2" height="15" fill="rgb(205,116,8)"/><text x="603.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="600" y="612" width="2" height="15" fill="rgb(205,14,19)"/><text x="603.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="628" width="2" height="15" fill="rgb(216,138,15)"/><text x="603.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="644" width="2" height="15" fill="rgb(207,140,37)"/><text x="603.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="660" width="2" height="15" fill="rgb(253,162,39)"/><text x="603.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="676" width="2" height="15" fill="rgb(236,197,54)"/><text x="603.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="692" width="2" height="15" fill="rgb(224,42,41)"/><text x="603.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="708" width="2" height="15" fill="rgb(234,94,32)"/><text x="603.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.20%)</title><rect x="600" y="724" width="2" height="15" fill="rgb(212,227,25)"/><text x="603.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="600" y="740" width="2" height="15" fill="rgb(215,129,17)"/><text x="603.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="600" y="756" width="2" height="15" fill="rgb(211,167,54)"/><text x="603.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="600" y="772" width="2" height="15" fill="rgb(239,154,32)"/><text x="603.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="600" y="788" width="2" height="15" fill="rgb(248,106,44)"/><text x="603.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="600" y="804" width="2" height="15" fill="rgb(244,30,50)"/><text x="603.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.20%)</title><rect x="600" y="820" width="2" height="15" fill="rgb(210,23,30)"/><text x="603.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.20%)</title><rect x="600" y="836" width="2" height="15" fill="rgb(248,127,27)"/><text x="603.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.20%)</title><rect x="600" y="852" width="2" height="15" fill="rgb(240,222,9)"/><text x="603.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="600" y="868" width="2" height="15" fill="rgb(218,3,5)"/><text x="603.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.20%)</title><rect x="600" y="884" width="2" height="15" fill="rgb(208,158,33)"/><text x="603.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.20%)</title><rect x="600" y="900" width="2" height="15" fill="rgb(223,41,28)"/><text x="603.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="600" y="916" width="2" height="15" fill="rgb(238,88,16)"/><text x="603.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="600" y="932" width="2" height="15" fill="rgb(240,71,6)"/><text x="603.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.20%)</title><rect x="600" y="948" width="2" height="15" fill="rgb(223,127,46)"/><text x="603.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.20%)</title><rect x="600" y="964" width="2" height="15" fill="rgb(221,75,27)"/><text x="603.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (1 samples, 0.20%)</title><rect x="602" y="148" width="2" height="15" fill="rgb(246,151,34)"/><text x="605.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="164" width="2" height="15" fill="rgb(238,91,27)"/><text x="605.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="602" y="180" width="2" height="15" fill="rgb(226,191,43)"/><text x="605.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="196" width="2" height="15" fill="rgb(250,221,38)"/><text x="605.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="212" width="2" height="15" fill="rgb(232,227,46)"/><text x="605.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="228" width="2" height="15" fill="rgb(237,152,25)"/><text x="605.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="244" width="2" height="15" fill="rgb(252,187,28)"/><text x="605.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(219,77,0)"/><text x="605.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(221,139,23)"/><text x="605.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.20%)</title><rect x="602" y="292" width="2" height="15" fill="rgb(230,25,35)"/><text x="605.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(243,93,30)"/><text x="605.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="324" width="2" height="15" fill="rgb(206,199,0)"/><text x="605.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="340" width="2" height="15" fill="rgb(239,86,19)"/><text x="605.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="356" width="2" height="15" fill="rgb(217,190,3)"/><text x="605.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="372" width="2" height="15" fill="rgb(232,190,8)"/><text x="605.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.20%)</title><rect x="602" y="388" width="2" height="15" fill="rgb(232,175,20)"/><text x="605.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="404" width="2" height="15" fill="rgb(240,19,10)"/><text x="605.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="420" width="2" height="15" fill="rgb(252,62,21)"/><text x="605.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="436" width="2" height="15" fill="rgb(231,37,30)"/><text x="605.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="452" width="2" height="15" fill="rgb(247,31,10)"/><text x="605.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="468" width="2" height="15" fill="rgb(235,173,40)"/><text x="605.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.20%)</title><rect x="602" y="484" width="2" height="15" fill="rgb(209,170,3)"/><text x="605.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="500" width="2" height="15" fill="rgb(226,144,37)"/><text x="605.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="516" width="2" height="15" fill="rgb(220,23,33)"/><text x="605.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="532" width="2" height="15" fill="rgb(210,28,34)"/><text x="605.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="548" width="2" height="15" fill="rgb(205,75,36)"/><text x="605.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="564" width="2" height="15" fill="rgb(253,45,16)"/><text x="605.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.20%)</title><rect x="602" y="580" width="2" height="15" fill="rgb(234,76,14)"/><text x="605.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="596" width="2" height="15" fill="rgb(209,195,25)"/><text x="605.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="612" width="2" height="15" fill="rgb(220,160,33)"/><text x="605.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="628" width="2" height="15" fill="rgb(212,121,8)"/><text x="605.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="644" width="2" height="15" fill="rgb(206,227,40)"/><text x="605.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="660" width="2" height="15" fill="rgb(226,229,10)"/><text x="605.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.20%)</title><rect x="602" y="676" width="2" height="15" fill="rgb(235,131,9)"/><text x="605.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="692" width="2" height="15" fill="rgb(212,25,2)"/><text x="605.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="708" width="2" height="15" fill="rgb(207,78,20)"/><text x="605.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="724" width="2" height="15" fill="rgb(232,110,35)"/><text x="605.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="740" width="2" height="15" fill="rgb(250,211,54)"/><text x="605.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="756" width="2" height="15" fill="rgb(240,63,27)"/><text x="605.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.20%)</title><rect x="602" y="772" width="2" height="15" fill="rgb(221,170,8)"/><text x="605.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="602" y="788" width="2" height="15" fill="rgb(238,153,10)"/><text x="605.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="804" width="2" height="15" fill="rgb(228,80,14)"/><text x="605.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="820" width="2" height="15" fill="rgb(233,54,21)"/><text x="605.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="836" width="2" height="15" fill="rgb(230,196,47)"/><text x="605.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="852" width="2" height="15" fill="rgb(228,187,4)"/><text x="605.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="868" width="2" height="15" fill="rgb(243,115,29)"/><text x="605.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="884" width="2" height="15" fill="rgb(253,198,23)"/><text x="605.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.20%)</title><rect x="602" y="900" width="2" height="15" fill="rgb(220,58,19)"/><text x="605.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="916" width="2" height="15" fill="rgb(208,100,47)"/><text x="605.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="932" width="2" height="15" fill="rgb(236,17,48)"/><text x="605.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="948" width="2" height="15" fill="rgb(214,17,3)"/><text x="605.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="964" width="2" height="15" fill="rgb(211,31,6)"/><text x="605.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="980" width="2" height="15" fill="rgb(230,67,2)"/><text x="605.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.20%)</title><rect x="602" y="996" width="2" height="15" fill="rgb(231,188,3)"/><text x="605.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="602" y="1012" width="2" height="15" fill="rgb(219,10,6)"/><text x="605.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="1028" width="2" height="15" fill="rgb(223,131,33)"/><text x="605.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="1044" width="2" height="15" fill="rgb(217,151,9)"/><text x="605.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="602" y="1060" width="2" height="15" fill="rgb(251,75,27)"/><text x="605.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="602" y="1076" width="2" height="15" fill="rgb(233,29,21)"/><text x="605.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="602" y="1092" width="2" height="15" fill="rgb(242,90,50)"/><text x="605.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="602" y="1108" width="2" height="15" fill="rgb(218,142,9)"/><text x="605.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.20%)</title><rect x="602" y="1124" width="2" height="15" fill="rgb(215,7,30)"/><text x="605.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="602" y="1140" width="2" height="15" fill="rgb(215,82,39)"/><text x="605.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="602" y="1156" width="2" height="15" fill="rgb(232,11,8)"/><text x="605.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="602" y="1172" width="2" height="15" fill="rgb(218,123,26)"/><text x="605.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="602" y="1188" width="2" height="15" fill="rgb(240,120,42)"/><text x="605.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="602" y="1204" width="2" height="15" fill="rgb(236,11,37)"/><text x="605.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.20%)</title><rect x="602" y="1220" width="2" height="15" fill="rgb(215,61,25)"/><text x="605.00" y="1230.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.20%)</title><rect x="602" y="1236" width="2" height="15" fill="rgb(250,107,42)"/><text x="605.00" y="1246.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="602" y="1252" width="2" height="15" fill="rgb(213,141,27)"/><text x="605.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:18) (1 samples, 0.20%)</title><rect x="604" y="580" width="2" height="15" fill="rgb(205,162,25)"/><text x="607.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="604" y="596" width="2" height="15" fill="rgb(229,12,23)"/><text x="607.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="604" y="612" width="2" height="15" fill="rgb(205,107,28)"/><text x="607.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="604" y="628" width="2" height="15" fill="rgb(242,124,3)"/><text x="607.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="604" y="644" width="2" height="15" fill="rgb(250,227,24)"/><text x="607.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.20%)</title><rect x="604" y="660" width="2" height="15" fill="rgb(251,75,1)"/><text x="607.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.20%)</title><rect x="604" y="676" width="2" height="15" fill="rgb(227,94,3)"/><text x="607.00" y="686.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="604" y="692" width="2" height="15" fill="rgb(242,134,30)"/><text x="607.00" y="702.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.40%)</title><rect x="604" y="484" width="5" height="15" fill="rgb(245,41,51)"/><text x="607.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="604" y="500" width="5" height="15" fill="rgb(215,63,47)"/><text x="607.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="604" y="516" width="5" height="15" fill="rgb(246,202,7)"/><text x="607.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="604" y="532" width="5" height="15" fill="rgb(215,1,6)"/><text x="607.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="604" y="548" width="5" height="15" fill="rgb(234,69,17)"/><text x="607.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="604" y="564" width="5" height="15" fill="rgb(222,109,36)"/><text x="607.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.20%)</title><rect x="606" y="580" width="3" height="15" fill="rgb(213,122,33)"/><text x="609.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="596" width="3" height="15" fill="rgb(237,212,28)"/><text x="609.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="612" width="3" height="15" fill="rgb(237,147,8)"/><text x="609.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="628" width="3" height="15" fill="rgb(217,119,1)"/><text x="609.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="644" width="3" height="15" fill="rgb(219,16,54)"/><text x="609.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="660" width="3" height="15" fill="rgb(215,97,35)"/><text x="609.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.20%)</title><rect x="606" y="676" width="3" height="15" fill="rgb(226,8,46)"/><text x="609.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="692" width="3" height="15" fill="rgb(235,102,6)"/><text x="609.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="708" width="3" height="15" fill="rgb(251,7,15)"/><text x="609.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="724" width="3" height="15" fill="rgb(233,178,7)"/><text x="609.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="740" width="3" height="15" fill="rgb(249,44,4)"/><text x="609.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="756" width="3" height="15" fill="rgb(241,196,34)"/><text x="609.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.20%)</title><rect x="606" y="772" width="3" height="15" fill="rgb(224,63,3)"/><text x="609.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="606" y="788" width="3" height="15" fill="rgb(236,67,3)"/><text x="609.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="804" width="3" height="15" fill="rgb(237,51,12)"/><text x="609.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="820" width="3" height="15" fill="rgb(206,82,42)"/><text x="609.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="836" width="3" height="15" fill="rgb(205,6,38)"/><text x="609.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="852" width="3" height="15" fill="rgb(224,50,40)"/><text x="609.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="868" width="3" height="15" fill="rgb(242,104,49)"/><text x="609.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="884" width="3" height="15" fill="rgb(225,161,37)"/><text x="609.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.20%)</title><rect x="606" y="900" width="3" height="15" fill="rgb(249,37,16)"/><text x="609.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="916" width="3" height="15" fill="rgb(245,203,15)"/><text x="609.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="932" width="3" height="15" fill="rgb(208,118,33)"/><text x="609.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="948" width="3" height="15" fill="rgb(231,41,41)"/><text x="609.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="964" width="3" height="15" fill="rgb(247,120,1)"/><text x="609.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="980" width="3" height="15" fill="rgb(253,70,18)"/><text x="609.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.20%)</title><rect x="606" y="996" width="3" height="15" fill="rgb(225,71,24)"/><text x="609.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="1012" width="3" height="15" fill="rgb(237,146,49)"/><text x="609.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="1028" width="3" height="15" fill="rgb(215,197,32)"/><text x="609.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="1044" width="3" height="15" fill="rgb(229,222,36)"/><text x="609.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="1060" width="3" height="15" fill="rgb(245,159,51)"/><text x="609.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="1076" width="3" height="15" fill="rgb(217,207,32)"/><text x="609.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:56) (1 samples, 0.20%)</title><rect x="606" y="1092" width="3" height="15" fill="rgb(205,3,37)"/><text x="609.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="1108" width="3" height="15" fill="rgb(210,119,53)"/><text x="609.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="1124" width="3" height="15" fill="rgb(211,7,16)"/><text x="609.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="1140" width="3" height="15" fill="rgb(241,202,12)"/><text x="609.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="1156" width="3" height="15" fill="rgb(251,208,18)"/><text x="609.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="1172" width="3" height="15" fill="rgb(230,229,12)"/><text x="609.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py:17) (1 samples, 0.20%)</title><rect x="606" y="1188" width="3" height="15" fill="rgb(223,48,5)"/><text x="609.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="606" y="1204" width="3" height="15" fill="rgb(240,228,33)"/><text x="609.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="606" y="1220" width="3" height="15" fill="rgb(242,122,4)"/><text x="609.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="606" y="1236" width="3" height="15" fill="rgb(213,182,22)"/><text x="609.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="606" y="1252" width="3" height="15" fill="rgb(245,58,47)"/><text x="609.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="606" y="1268" width="3" height="15" fill="rgb(254,23,8)"/><text x="609.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x509.py:205) (1 samples, 0.20%)</title><rect x="606" y="1284" width="3" height="15" fill="rgb(237,52,36)"/><text x="609.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.20%)</title><rect x="606" y="1300" width="3" height="15" fill="rgb(221,73,31)"/><text x="609.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py:108) (1 samples, 0.20%)</title><rect x="606" y="1316" width="3" height="15" fill="rgb(208,60,42)"/><text x="609.00" y="1326.50"></text></g><g><title>__eq__ (inspect.py:2877) (1 samples, 0.20%)</title><rect x="606" y="1332" width="3" height="15" fill="rgb(228,226,0)"/><text x="609.00" y="1342.50"></text></g><g><title>_hash_basis (inspect.py:2862) (1 samples, 0.20%)</title><rect x="606" y="1348" width="3" height="15" fill="rgb(254,48,26)"/><text x="609.00" y="1358.50"></text></g><g><title>&lt;dictcomp&gt; (inspect.py:2862) (1 samples, 0.20%)</title><rect x="606" y="1364" width="3" height="15" fill="rgb(254,118,9)"/><text x="609.00" y="1374.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.20%)</title><rect x="609" y="772" width="2" height="15" fill="rgb(222,5,5)"/><text x="612.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="609" y="788" width="2" height="15" fill="rgb(232,178,32)"/><text x="612.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="609" y="804" width="2" height="15" fill="rgb(254,144,7)"/><text x="612.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="609" y="820" width="2" height="15" fill="rgb(217,60,21)"/><text x="612.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="609" y="836" width="2" height="15" fill="rgb(236,126,30)"/><text x="612.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="609" y="852" width="2" height="15" fill="rgb(217,96,14)"/><text x="612.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="609" y="868" width="2" height="15" fill="rgb(207,116,46)"/><text x="612.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="609" y="884" width="2" height="15" fill="rgb(225,110,54)"/><text x="612.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.20%)</title><rect x="609" y="900" width="2" height="15" fill="rgb(210,0,19)"/><text x="612.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.20%)</title><rect x="609" y="916" width="2" height="15" fill="rgb(246,212,27)"/><text x="612.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.20%)</title><rect x="609" y="932" width="2" height="15" fill="rgb(254,138,15)"/><text x="612.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 0.79%)</title><rect x="604" y="244" width="9" height="15" fill="rgb(238,227,38)"/><text x="607.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.79%)</title><rect x="604" y="260" width="9" height="15" fill="rgb(253,31,39)"/><text x="607.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.79%)</title><rect x="604" y="276" width="9" height="15" fill="rgb(228,68,10)"/><text x="607.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.79%)</title><rect x="604" y="292" width="9" height="15" fill="rgb(241,214,51)"/><text x="607.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.79%)</title><rect x="604" y="308" width="9" height="15" fill="rgb(251,124,54)"/><text x="607.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.79%)</title><rect x="604" y="324" width="9" height="15" fill="rgb(206,183,38)"/><text x="607.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 0.79%)</title><rect x="604" y="340" width="9" height="15" fill="rgb(206,206,39)"/><text x="607.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.79%)</title><rect x="604" y="356" width="9" height="15" fill="rgb(233,59,51)"/><text x="607.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.79%)</title><rect x="604" y="372" width="9" height="15" fill="rgb(211,192,48)"/><text x="607.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.79%)</title><rect x="604" y="388" width="9" height="15" fill="rgb(231,144,47)"/><text x="607.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.79%)</title><rect x="604" y="404" width="9" height="15" fill="rgb(241,81,27)"/><text x="607.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.79%)</title><rect x="604" y="420" width="9" height="15" fill="rgb(228,201,21)"/><text x="607.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.79%)</title><rect x="604" y="436" width="9" height="15" fill="rgb(240,136,11)"/><text x="607.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.79%)</title><rect x="604" y="452" width="9" height="15" fill="rgb(215,201,30)"/><text x="607.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.79%)</title><rect x="604" y="468" width="9" height="15" fill="rgb(215,17,53)"/><text x="607.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.40%)</title><rect x="609" y="484" width="4" height="15" fill="rgb(228,61,3)"/><text x="612.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="609" y="500" width="4" height="15" fill="rgb(208,27,29)"/><text x="612.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="609" y="516" width="4" height="15" fill="rgb(206,216,13)"/><text x="612.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="609" y="532" width="4" height="15" fill="rgb(223,197,17)"/><text x="612.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="609" y="548" width="4" height="15" fill="rgb(231,23,51)"/><text x="612.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="609" y="564" width="4" height="15" fill="rgb(211,47,39)"/><text x="612.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (2 samples, 0.40%)</title><rect x="609" y="580" width="4" height="15" fill="rgb(250,127,4)"/><text x="612.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="609" y="596" width="4" height="15" fill="rgb(217,143,2)"/><text x="612.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="609" y="612" width="4" height="15" fill="rgb(228,79,49)"/><text x="612.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="609" y="628" width="4" height="15" fill="rgb(234,55,11)"/><text x="612.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="609" y="644" width="4" height="15" fill="rgb(214,191,2)"/><text x="612.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="609" y="660" width="4" height="15" fill="rgb(220,105,53)"/><text x="612.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (2 samples, 0.40%)</title><rect x="609" y="676" width="4" height="15" fill="rgb(219,14,35)"/><text x="612.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="609" y="692" width="4" height="15" fill="rgb(208,46,22)"/><text x="612.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="609" y="708" width="4" height="15" fill="rgb(224,222,18)"/><text x="612.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="609" y="724" width="4" height="15" fill="rgb(231,115,11)"/><text x="612.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="609" y="740" width="4" height="15" fill="rgb(237,116,24)"/><text x="612.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="609" y="756" width="4" height="15" fill="rgb(243,30,44)"/><text x="612.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:148) (1 samples, 0.20%)</title><rect x="611" y="772" width="2" height="15" fill="rgb(221,156,51)"/><text x="614.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="611" y="788" width="2" height="15" fill="rgb(251,111,51)"/><text x="614.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="611" y="804" width="2" height="15" fill="rgb(222,180,9)"/><text x="614.00" y="814.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.20%)</title><rect x="611" y="820" width="2" height="15" fill="rgb(247,29,54)"/><text x="614.00" y="830.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.20%)</title><rect x="611" y="836" width="2" height="15" fill="rgb(244,54,49)"/><text x="614.00" y="846.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.20%)</title><rect x="611" y="852" width="2" height="15" fill="rgb(227,71,13)"/><text x="614.00" y="862.50"></text></g><g><title>_compile (sre_compile.py:212) (1 samples, 0.20%)</title><rect x="611" y="868" width="2" height="15" fill="rgb(229,16,10)"/><text x="614.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.20%)</title><rect x="613" y="340" width="3" height="15" fill="rgb(206,108,48)"/><text x="616.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(222,181,32)"/><text x="616.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="613" y="372" width="3" height="15" fill="rgb(211,76,10)"/><text x="616.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="613" y="388" width="3" height="15" fill="rgb(243,216,24)"/><text x="616.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="613" y="404" width="3" height="15" fill="rgb(244,188,31)"/><text x="616.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="420" width="3" height="15" fill="rgb(206,194,36)"/><text x="616.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.20%)</title><rect x="613" y="436" width="3" height="15" fill="rgb(228,3,1)"/><text x="616.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="452" width="3" height="15" fill="rgb(242,11,23)"/><text x="616.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="613" y="468" width="3" height="15" fill="rgb(215,168,22)"/><text x="616.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="613" y="484" width="3" height="15" fill="rgb(225,54,38)"/><text x="616.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="613" y="500" width="3" height="15" fill="rgb(233,117,21)"/><text x="616.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="516" width="3" height="15" fill="rgb(254,138,39)"/><text x="616.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:45) (1 samples, 0.20%)</title><rect x="613" y="532" width="3" height="15" fill="rgb(222,93,33)"/><text x="616.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="548" width="3" height="15" fill="rgb(210,137,1)"/><text x="616.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="613" y="564" width="3" height="15" fill="rgb(217,121,3)"/><text x="616.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="580" width="3" height="15" fill="rgb(229,136,26)"/><text x="616.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="596" width="3" height="15" fill="rgb(223,216,12)"/><text x="616.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="613" y="612" width="3" height="15" fill="rgb(241,7,25)"/><text x="616.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="613" y="628" width="3" height="15" fill="rgb(227,55,10)"/><text x="616.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="613" y="644" width="3" height="15" fill="rgb(215,163,27)"/><text x="616.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="660" width="3" height="15" fill="rgb(253,7,4)"/><text x="616.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py:8) (1 samples, 0.20%)</title><rect x="613" y="676" width="3" height="15" fill="rgb(221,191,4)"/><text x="616.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="692" width="3" height="15" fill="rgb(248,126,17)"/><text x="616.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="613" y="708" width="3" height="15" fill="rgb(220,176,6)"/><text x="616.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="613" y="724" width="3" height="15" fill="rgb(225,223,26)"/><text x="616.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="613" y="740" width="3" height="15" fill="rgb(212,2,23)"/><text x="616.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="756" width="3" height="15" fill="rgb(241,158,26)"/><text x="616.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/_hashing.py:13) (1 samples, 0.20%)</title><rect x="613" y="772" width="3" height="15" fill="rgb(248,93,52)"/><text x="616.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="613" y="788" width="3" height="15" fill="rgb(240,206,14)"/><text x="616.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="613" y="804" width="3" height="15" fill="rgb(225,99,39)"/><text x="616.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="613" y="820" width="3" height="15" fill="rgb(252,48,33)"/><text x="616.00" y="830.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.20%)</title><rect x="613" y="836" width="3" height="15" fill="rgb(233,172,11)"/><text x="616.00" y="846.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.20%)</title><rect x="613" y="852" width="3" height="15" fill="rgb(241,145,6)"/><text x="616.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="613" y="868" width="3" height="15" fill="rgb(216,103,6)"/><text x="616.00" y="878.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="884" width="3" height="15" fill="rgb(238,92,23)"/><text x="616.00" y="894.50"></text></g><g><title>0x7fc61b053995 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="900" width="3" height="15" fill="rgb(236,107,17)"/><text x="616.00" y="910.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="916" width="3" height="15" fill="rgb(209,57,48)"/><text x="616.00" y="926.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="932" width="3" height="15" fill="rgb(223,185,10)"/><text x="616.00" y="942.50"></text></g><g><title>0x7fc61b053258 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="948" width="3" height="15" fill="rgb(214,189,5)"/><text x="616.00" y="958.50"></text></g><g><title>0x7fc61b0a0d7a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="964" width="3" height="15" fill="rgb(209,123,16)"/><text x="616.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="980" width="3" height="15" fill="rgb(207,72,20)"/><text x="616.00" y="990.50"></text></g><g><title>0x7fc61b0a1236 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="996" width="3" height="15" fill="rgb(209,165,25)"/><text x="616.00" y="1006.50"></text></g><g><title>0x7fc61b09e735 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="613" y="1012" width="3" height="15" fill="rgb(235,34,41)"/><text x="616.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:11) (1 samples, 0.20%)</title><rect x="616" y="628" width="2" height="15" fill="rgb(225,203,24)"/><text x="619.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="616" y="644" width="2" height="15" fill="rgb(247,190,39)"/><text x="619.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="616" y="660" width="2" height="15" fill="rgb(205,152,42)"/><text x="619.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="616" y="676" width="2" height="15" fill="rgb(215,35,37)"/><text x="619.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="616" y="692" width="2" height="15" fill="rgb(228,32,33)"/><text x="619.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="616" y="708" width="2" height="15" fill="rgb(248,211,27)"/><text x="619.00" y="718.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="616" y="724" width="2" height="15" fill="rgb(226,133,36)"/><text x="619.00" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.20%)</title><rect x="618" y="1012" width="2" height="15" fill="rgb(205,72,14)"/><text x="621.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1028" width="2" height="15" fill="rgb(228,162,12)"/><text x="621.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1044" width="2" height="15" fill="rgb(249,80,52)"/><text x="621.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1060" width="2" height="15" fill="rgb(219,184,36)"/><text x="621.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1076" width="2" height="15" fill="rgb(218,153,45)"/><text x="621.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1092" width="2" height="15" fill="rgb(216,203,33)"/><text x="621.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.20%)</title><rect x="618" y="1108" width="2" height="15" fill="rgb(237,195,40)"/><text x="621.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1124" width="2" height="15" fill="rgb(210,86,0)"/><text x="621.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1140" width="2" height="15" fill="rgb(239,229,40)"/><text x="621.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1156" width="2" height="15" fill="rgb(230,57,16)"/><text x="621.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1172" width="2" height="15" fill="rgb(247,31,52)"/><text x="621.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1188" width="2" height="15" fill="rgb(224,104,51)"/><text x="621.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.20%)</title><rect x="618" y="1204" width="2" height="15" fill="rgb(252,196,35)"/><text x="621.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1220" width="2" height="15" fill="rgb(217,183,25)"/><text x="621.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1236" width="2" height="15" fill="rgb(236,188,40)"/><text x="621.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1252" width="2" height="15" fill="rgb(209,120,11)"/><text x="621.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1268" width="2" height="15" fill="rgb(238,68,16)"/><text x="621.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1284" width="2" height="15" fill="rgb(226,226,29)"/><text x="621.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.20%)</title><rect x="618" y="1300" width="2" height="15" fill="rgb(247,119,21)"/><text x="621.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1316" width="2" height="15" fill="rgb(251,229,41)"/><text x="621.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1332" width="2" height="15" fill="rgb(223,3,37)"/><text x="621.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1348" width="2" height="15" fill="rgb(226,109,47)"/><text x="621.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1364" width="2" height="15" fill="rgb(247,110,3)"/><text x="621.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1380" width="2" height="15" fill="rgb(207,163,17)"/><text x="621.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.20%)</title><rect x="618" y="1396" width="2" height="15" fill="rgb(248,162,36)"/><text x="621.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1412" width="2" height="15" fill="rgb(220,131,16)"/><text x="621.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1428" width="2" height="15" fill="rgb(224,131,33)"/><text x="621.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1444" width="2" height="15" fill="rgb(215,226,45)"/><text x="621.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1460" width="2" height="15" fill="rgb(238,188,24)"/><text x="621.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1476" width="2" height="15" fill="rgb(235,89,22)"/><text x="621.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.20%)</title><rect x="618" y="1492" width="2" height="15" fill="rgb(212,43,38)"/><text x="621.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1508" width="2" height="15" fill="rgb(212,103,51)"/><text x="621.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="618" y="1524" width="2" height="15" fill="rgb(220,142,52)"/><text x="621.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1540" width="2" height="15" fill="rgb(221,2,13)"/><text x="621.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1556" width="2" height="15" fill="rgb(229,95,23)"/><text x="621.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1572" width="2" height="15" fill="rgb(253,63,32)"/><text x="621.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1588" width="2" height="15" fill="rgb(220,132,39)"/><text x="621.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1604" width="2" height="15" fill="rgb(233,229,17)"/><text x="621.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1620" width="2" height="15" fill="rgb(220,138,44)"/><text x="621.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.20%)</title><rect x="618" y="1636" width="2" height="15" fill="rgb(207,58,14)"/><text x="621.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="618" y="1652" width="2" height="15" fill="rgb(228,154,27)"/><text x="621.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1668" width="2" height="15" fill="rgb(217,76,3)"/><text x="621.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1684" width="2" height="15" fill="rgb(228,192,54)"/><text x="621.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1700" width="2" height="15" fill="rgb(251,186,17)"/><text x="621.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1716" width="2" height="15" fill="rgb(237,118,31)"/><text x="621.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1732" width="2" height="15" fill="rgb(226,125,3)"/><text x="621.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1748" width="2" height="15" fill="rgb(215,47,28)"/><text x="621.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.20%)</title><rect x="618" y="1764" width="2" height="15" fill="rgb(216,42,13)"/><text x="621.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1780" width="2" height="15" fill="rgb(244,109,16)"/><text x="621.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1796" width="2" height="15" fill="rgb(213,1,23)"/><text x="621.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1812" width="2" height="15" fill="rgb(244,39,48)"/><text x="621.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1828" width="2" height="15" fill="rgb(227,74,51)"/><text x="621.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1844" width="2" height="15" fill="rgb(214,151,45)"/><text x="621.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py:68) (1 samples, 0.20%)</title><rect x="618" y="1860" width="2" height="15" fill="rgb(246,202,22)"/><text x="621.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="618" y="1876" width="2" height="15" fill="rgb(234,193,5)"/><text x="621.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="618" y="1892" width="2" height="15" fill="rgb(242,23,34)"/><text x="621.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="618" y="1908" width="2" height="15" fill="rgb(237,216,47)"/><text x="621.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="618" y="1924" width="2" height="15" fill="rgb(223,215,27)"/><text x="621.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="618" y="1940" width="2" height="15" fill="rgb(211,87,31)"/><text x="621.00" y="1950.50"></text></g><g><title>&lt;module&gt; (matplotlib/_color_data.py:798) (1 samples, 0.20%)</title><rect x="618" y="1956" width="2" height="15" fill="rgb(253,213,22)"/><text x="621.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.40%)</title><rect x="618" y="724" width="5" height="15" fill="rgb(215,145,27)"/><text x="621.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="618" y="740" width="5" height="15" fill="rgb(210,130,52)"/><text x="621.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="618" y="756" width="5" height="15" fill="rgb(242,186,5)"/><text x="621.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="618" y="772" width="5" height="15" fill="rgb(218,229,42)"/><text x="621.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="618" y="788" width="5" height="15" fill="rgb(239,142,15)"/><text x="621.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="618" y="804" width="5" height="15" fill="rgb(231,47,8)"/><text x="621.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.40%)</title><rect x="618" y="820" width="5" height="15" fill="rgb(248,32,13)"/><text x="621.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="618" y="836" width="5" height="15" fill="rgb(252,105,12)"/><text x="621.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="618" y="852" width="5" height="15" fill="rgb(237,183,35)"/><text x="621.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="618" y="868" width="5" height="15" fill="rgb(245,98,16)"/><text x="621.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="618" y="884" width="5" height="15" fill="rgb(230,215,28)"/><text x="621.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="618" y="900" width="5" height="15" fill="rgb(219,229,14)"/><text x="621.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.40%)</title><rect x="618" y="916" width="5" height="15" fill="rgb(236,175,37)"/><text x="621.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="618" y="932" width="5" height="15" fill="rgb(247,37,24)"/><text x="621.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="618" y="948" width="5" height="15" fill="rgb(229,54,42)"/><text x="621.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="618" y="964" width="5" height="15" fill="rgb(231,27,23)"/><text x="621.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="618" y="980" width="5" height="15" fill="rgb(243,29,18)"/><text x="621.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="618" y="996" width="5" height="15" fill="rgb(242,185,20)"/><text x="621.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.20%)</title><rect x="620" y="1012" width="3" height="15" fill="rgb(230,99,54)"/><text x="623.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="620" y="1028" width="3" height="15" fill="rgb(241,22,54)"/><text x="623.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="620" y="1044" width="3" height="15" fill="rgb(248,150,53)"/><text x="623.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="620" y="1060" width="3" height="15" fill="rgb(244,181,20)"/><text x="623.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="620" y="1076" width="3" height="15" fill="rgb(237,85,12)"/><text x="623.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="620" y="1092" width="3" height="15" fill="rgb(216,180,35)"/><text x="623.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.20%)</title><rect x="620" y="1108" width="3" height="15" fill="rgb(226,5,7)"/><text x="623.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="620" y="1124" width="3" height="15" fill="rgb(224,144,47)"/><text x="623.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="620" y="1140" width="3" height="15" fill="rgb(212,140,5)"/><text x="623.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="620" y="1156" width="3" height="15" fill="rgb(213,121,18)"/><text x="623.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="620" y="1172" width="3" height="15" fill="rgb(206,34,28)"/><text x="623.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="620" y="1188" width="3" height="15" fill="rgb(205,27,48)"/><text x="623.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.20%)</title><rect x="620" y="1204" width="3" height="15" fill="rgb(221,190,40)"/><text x="623.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="620" y="1220" width="3" height="15" fill="rgb(206,194,13)"/><text x="623.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="620" y="1236" width="3" height="15" fill="rgb(233,201,9)"/><text x="623.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="620" y="1252" width="3" height="15" fill="rgb(217,109,15)"/><text x="623.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="620" y="1268" width="3" height="15" fill="rgb(232,194,35)"/><text x="623.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="620" y="1284" width="3" height="15" fill="rgb(245,105,12)"/><text x="623.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.20%)</title><rect x="620" y="1300" width="3" height="15" fill="rgb(235,30,18)"/><text x="623.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="620" y="1316" width="3" height="15" fill="rgb(214,166,50)"/><text x="623.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="620" y="1332" width="3" height="15" fill="rgb(253,89,11)"/><text x="623.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="620" y="1348" width="3" height="15" fill="rgb(243,89,14)"/><text x="623.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="620" y="1364" width="3" height="15" fill="rgb(211,94,48)"/><text x="623.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="620" y="1380" width="3" height="15" fill="rgb(232,167,14)"/><text x="623.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.20%)</title><rect x="620" y="1396" width="3" height="15" fill="rgb(249,30,21)"/><text x="623.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="620" y="1412" width="3" height="15" fill="rgb(223,100,2)"/><text x="623.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="620" y="1428" width="3" height="15" fill="rgb(214,140,50)"/><text x="623.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="620" y="1444" width="3" height="15" fill="rgb(226,83,9)"/><text x="623.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="620" y="1460" width="3" height="15" fill="rgb(214,92,34)"/><text x="623.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="620" y="1476" width="3" height="15" fill="rgb(225,41,14)"/><text x="623.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="620" y="1492" width="3" height="15" fill="rgb(250,64,3)"/><text x="623.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.79%)</title><rect x="616" y="532" width="9" height="15" fill="rgb(253,124,3)"/><text x="619.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.79%)</title><rect x="616" y="548" width="9" height="15" fill="rgb(205,52,39)"/><text x="619.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.79%)</title><rect x="616" y="564" width="9" height="15" fill="rgb(239,108,4)"/><text x="619.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.79%)</title><rect x="616" y="580" width="9" height="15" fill="rgb(248,45,27)"/><text x="619.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.79%)</title><rect x="616" y="596" width="9" height="15" fill="rgb(217,187,27)"/><text x="619.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.79%)</title><rect x="616" y="612" width="9" height="15" fill="rgb(235,210,14)"/><text x="619.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.59%)</title><rect x="618" y="628" width="7" height="15" fill="rgb(222,74,7)"/><text x="621.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.59%)</title><rect x="618" y="644" width="7" height="15" fill="rgb(214,139,33)"/><text x="621.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.59%)</title><rect x="618" y="660" width="7" height="15" fill="rgb(212,135,8)"/><text x="621.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.59%)</title><rect x="618" y="676" width="7" height="15" fill="rgb(234,33,11)"/><text x="621.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.59%)</title><rect x="618" y="692" width="7" height="15" fill="rgb(222,129,39)"/><text x="621.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.59%)</title><rect x="618" y="708" width="7" height="15" fill="rgb(209,172,7)"/><text x="621.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.20%)</title><rect x="623" y="724" width="2" height="15" fill="rgb(207,217,31)"/><text x="626.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="623" y="740" width="2" height="15" fill="rgb(245,66,2)"/><text x="626.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="623" y="756" width="2" height="15" fill="rgb(211,39,2)"/><text x="626.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="623" y="772" width="2" height="15" fill="rgb(231,42,46)"/><text x="626.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="623" y="788" width="2" height="15" fill="rgb(213,179,41)"/><text x="626.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="623" y="804" width="2" height="15" fill="rgb(229,165,22)"/><text x="626.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="623" y="820" width="2" height="15" fill="rgb(225,138,19)"/><text x="626.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="623" y="836" width="2" height="15" fill="rgb(246,138,21)"/><text x="626.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="623" y="852" width="2" height="15" fill="rgb(229,65,39)"/><text x="626.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:12) (1 samples, 0.20%)</title><rect x="623" y="868" width="2" height="15" fill="rgb(232,172,4)"/><text x="626.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="623" y="884" width="2" height="15" fill="rgb(225,130,52)"/><text x="626.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="623" y="900" width="2" height="15" fill="rgb(223,43,5)"/><text x="626.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="623" y="916" width="2" height="15" fill="rgb(240,28,10)"/><text x="626.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="623" y="932" width="2" height="15" fill="rgb(241,221,43)"/><text x="626.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="623" y="948" width="2" height="15" fill="rgb(211,141,25)"/><text x="626.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/period.py:734) (1 samples, 0.20%)</title><rect x="623" y="964" width="2" height="15" fill="rgb(210,169,39)"/><text x="626.00" y="974.50"></text></g><g><title>_add_comparison_ops (pandas/core/arrays/base.py:1061) (1 samples, 0.20%)</title><rect x="623" y="980" width="2" height="15" fill="rgb(251,188,2)"/><text x="626.00" y="990.50"></text></g><g><title>_period_array_cmp (pandas/core/arrays/period.py:108) (1 samples, 0.20%)</title><rect x="623" y="996" width="2" height="15" fill="rgb(234,224,41)"/><text x="626.00" y="1006.50"></text></g><g><title>set_function_name (pandas/compat/__init__.py:35) (1 samples, 0.20%)</title><rect x="623" y="1012" width="2" height="15" fill="rgb(246,50,7)"/><text x="626.00" y="1022.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="623" y="1028" width="2" height="15" fill="rgb(228,129,32)"/><text x="626.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 0.99%)</title><rect x="616" y="436" width="11" height="15" fill="rgb(232,217,26)"/><text x="619.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.99%)</title><rect x="616" y="452" width="11" height="15" fill="rgb(219,70,21)"/><text x="619.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.99%)</title><rect x="616" y="468" width="11" height="15" fill="rgb(224,15,45)"/><text x="619.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.99%)</title><rect x="616" y="484" width="11" height="15" fill="rgb(246,152,1)"/><text x="619.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.99%)</title><rect x="616" y="500" width="11" height="15" fill="rgb(216,14,41)"/><text x="619.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.99%)</title><rect x="616" y="516" width="11" height="15" fill="rgb(210,67,25)"/><text x="619.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.20%)</title><rect x="625" y="532" width="2" height="15" fill="rgb(205,150,38)"/><text x="628.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="625" y="548" width="2" height="15" fill="rgb(231,5,0)"/><text x="628.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="625" y="564" width="2" height="15" fill="rgb(252,69,53)"/><text x="628.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="625" y="580" width="2" height="15" fill="rgb(250,2,13)"/><text x="628.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="625" y="596" width="2" height="15" fill="rgb(245,94,8)"/><text x="628.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="625" y="612" width="2" height="15" fill="rgb(217,51,1)"/><text x="628.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.20%)</title><rect x="625" y="628" width="2" height="15" fill="rgb(205,182,16)"/><text x="628.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="625" y="644" width="2" height="15" fill="rgb(231,136,19)"/><text x="628.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="625" y="660" width="2" height="15" fill="rgb(247,135,48)"/><text x="628.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="625" y="676" width="2" height="15" fill="rgb(209,216,50)"/><text x="628.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="625" y="692" width="2" height="15" fill="rgb(214,38,4)"/><text x="628.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="625" y="708" width="2" height="15" fill="rgb(250,119,49)"/><text x="628.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="625" y="724" width="2" height="15" fill="rgb(210,57,21)"/><text x="628.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="625" y="740" width="2" height="15" fill="rgb(246,200,50)"/><text x="628.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.20%)</title><rect x="625" y="756" width="2" height="15" fill="rgb(232,29,39)"/><text x="628.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.20%)</title><rect x="625" y="772" width="2" height="15" fill="rgb(234,30,16)"/><text x="628.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.20%)</title><rect x="625" y="788" width="2" height="15" fill="rgb(225,17,13)"/><text x="628.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.20%)</title><rect x="625" y="804" width="2" height="15" fill="rgb(251,26,43)"/><text x="628.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.20%)</title><rect x="625" y="820" width="2" height="15" fill="rgb(214,108,8)"/><text x="628.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.20%)</title><rect x="625" y="836" width="2" height="15" fill="rgb(243,63,25)"/><text x="628.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.20%)</title><rect x="625" y="852" width="2" height="15" fill="rgb(245,163,11)"/><text x="628.00" y="862.50"></text></g><g><title>0x7fc60f44c372 (?) (1 samples, 0.20%)</title><rect x="625" y="868" width="2" height="15" fill="rgb(245,183,18)"/><text x="628.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.20%)</title><rect x="625" y="884" width="2" height="15" fill="rgb(248,29,43)"/><text x="628.00" y="894.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:4) (15 samples, 2.96%)</title><rect x="595" y="52" width="35" height="15" fill="rgb(210,98,15)"/><text x="598.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.96%)</title><rect x="595" y="68" width="35" height="15" fill="rgb(206,167,15)"/><text x="598.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.96%)</title><rect x="595" y="84" width="35" height="15" fill="rgb(254,165,36)"/><text x="598.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.96%)</title><rect x="595" y="100" width="35" height="15" fill="rgb(251,15,20)"/><text x="598.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.96%)</title><rect x="595" y="116" width="35" height="15" fill="rgb(241,214,39)"/><text x="598.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.96%)</title><rect x="595" y="132" width="35" height="15" fill="rgb(236,174,27)"/><text x="598.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (11 samples, 2.17%)</title><rect x="604" y="148" width="26" height="15" fill="rgb(210,219,32)"/><text x="607.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.17%)</title><rect x="604" y="164" width="26" height="15" fill="rgb(209,145,52)"/><text x="607.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.17%)</title><rect x="604" y="180" width="26" height="15" fill="rgb(237,202,34)"/><text x="607.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.17%)</title><rect x="604" y="196" width="26" height="15" fill="rgb(208,67,46)"/><text x="607.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.17%)</title><rect x="604" y="212" width="26" height="15" fill="rgb(240,146,15)"/><text x="607.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.17%)</title><rect x="604" y="228" width="26" height="15" fill="rgb(227,51,35)"/><text x="607.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.38%)</title><rect x="613" y="244" width="17" height="15" fill="rgb(233,117,0)"/><text x="616.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.38%)</title><rect x="613" y="260" width="17" height="15" fill="rgb(239,13,10)"/><text x="616.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.38%)</title><rect x="613" y="276" width="17" height="15" fill="rgb(208,222,16)"/><text x="616.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.38%)</title><rect x="613" y="292" width="17" height="15" fill="rgb(234,23,41)"/><text x="616.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.38%)</title><rect x="613" y="308" width="17" height="15" fill="rgb(230,218,21)"/><text x="616.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.38%)</title><rect x="613" y="324" width="17" height="15" fill="rgb(206,3,28)"/><text x="616.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.19%)</title><rect x="616" y="340" width="14" height="15" fill="rgb(221,162,41)"/><text x="619.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.19%)</title><rect x="616" y="356" width="14" height="15" fill="rgb(248,145,17)"/><text x="619.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.19%)</title><rect x="616" y="372" width="14" height="15" fill="rgb(246,113,39)"/><text x="619.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.19%)</title><rect x="616" y="388" width="14" height="15" fill="rgb(227,57,19)"/><text x="619.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.19%)</title><rect x="616" y="404" width="14" height="15" fill="rgb(213,158,0)"/><text x="619.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.19%)</title><rect x="616" y="420" width="14" height="15" fill="rgb(236,102,51)"/><text x="619.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.20%)</title><rect x="627" y="436" width="3" height="15" fill="rgb(226,132,20)"/><text x="630.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="452" width="3" height="15" fill="rgb(221,125,23)"/><text x="630.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="627" y="468" width="3" height="15" fill="rgb(227,65,45)"/><text x="630.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="484" width="3" height="15" fill="rgb(221,149,28)"/><text x="630.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="500" width="3" height="15" fill="rgb(252,71,1)"/><text x="630.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="516" width="3" height="15" fill="rgb(211,131,33)"/><text x="630.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="532" width="3" height="15" fill="rgb(254,190,24)"/><text x="630.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="548" width="3" height="15" fill="rgb(239,61,0)"/><text x="630.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="564" width="3" height="15" fill="rgb(253,200,44)"/><text x="630.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.20%)</title><rect x="627" y="580" width="3" height="15" fill="rgb(209,42,35)"/><text x="630.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="596" width="3" height="15" fill="rgb(221,5,8)"/><text x="630.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="612" width="3" height="15" fill="rgb(211,81,17)"/><text x="630.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="628" width="3" height="15" fill="rgb(244,202,49)"/><text x="630.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="644" width="3" height="15" fill="rgb(209,142,35)"/><text x="630.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="660" width="3" height="15" fill="rgb(218,63,34)"/><text x="630.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.20%)</title><rect x="627" y="676" width="3" height="15" fill="rgb(212,220,46)"/><text x="630.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="692" width="3" height="15" fill="rgb(231,65,24)"/><text x="630.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="708" width="3" height="15" fill="rgb(253,197,34)"/><text x="630.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="724" width="3" height="15" fill="rgb(229,139,6)"/><text x="630.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="740" width="3" height="15" fill="rgb(251,50,25)"/><text x="630.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="756" width="3" height="15" fill="rgb(206,59,41)"/><text x="630.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.20%)</title><rect x="627" y="772" width="3" height="15" fill="rgb(251,188,22)"/><text x="630.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="788" width="3" height="15" fill="rgb(242,220,35)"/><text x="630.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="804" width="3" height="15" fill="rgb(221,63,40)"/><text x="630.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="820" width="3" height="15" fill="rgb(249,198,31)"/><text x="630.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="836" width="3" height="15" fill="rgb(213,27,24)"/><text x="630.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="852" width="3" height="15" fill="rgb(236,157,25)"/><text x="630.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.20%)</title><rect x="627" y="868" width="3" height="15" fill="rgb(214,99,7)"/><text x="630.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="884" width="3" height="15" fill="rgb(233,176,5)"/><text x="630.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="627" y="900" width="3" height="15" fill="rgb(212,11,21)"/><text x="630.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="916" width="3" height="15" fill="rgb(243,77,12)"/><text x="630.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="932" width="3" height="15" fill="rgb(245,20,6)"/><text x="630.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="948" width="3" height="15" fill="rgb(247,174,53)"/><text x="630.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="964" width="3" height="15" fill="rgb(226,194,28)"/><text x="630.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="980" width="3" height="15" fill="rgb(249,150,32)"/><text x="630.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="996" width="3" height="15" fill="rgb(230,138,50)"/><text x="630.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.20%)</title><rect x="627" y="1012" width="3" height="15" fill="rgb(245,114,0)"/><text x="630.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="1028" width="3" height="15" fill="rgb(207,217,28)"/><text x="630.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="1044" width="3" height="15" fill="rgb(221,27,32)"/><text x="630.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="1060" width="3" height="15" fill="rgb(236,206,29)"/><text x="630.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="1076" width="3" height="15" fill="rgb(207,52,38)"/><text x="630.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1092" width="3" height="15" fill="rgb(250,145,35)"/><text x="630.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.20%)</title><rect x="627" y="1108" width="3" height="15" fill="rgb(241,76,2)"/><text x="630.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="627" y="1124" width="3" height="15" fill="rgb(224,65,2)"/><text x="630.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1140" width="3" height="15" fill="rgb(245,135,38)"/><text x="630.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="1156" width="3" height="15" fill="rgb(218,153,5)"/><text x="630.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="1172" width="3" height="15" fill="rgb(227,38,5)"/><text x="630.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="1188" width="3" height="15" fill="rgb(253,108,0)"/><text x="630.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="1204" width="3" height="15" fill="rgb(233,199,50)"/><text x="630.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1220" width="3" height="15" fill="rgb(207,100,3)"/><text x="630.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.20%)</title><rect x="627" y="1236" width="3" height="15" fill="rgb(210,115,25)"/><text x="630.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="627" y="1252" width="3" height="15" fill="rgb(237,175,40)"/><text x="630.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1268" width="3" height="15" fill="rgb(222,114,7)"/><text x="630.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="1284" width="3" height="15" fill="rgb(234,208,3)"/><text x="630.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="1300" width="3" height="15" fill="rgb(220,196,13)"/><text x="630.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="1316" width="3" height="15" fill="rgb(245,1,21)"/><text x="630.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="1332" width="3" height="15" fill="rgb(253,204,24)"/><text x="630.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1348" width="3" height="15" fill="rgb(223,151,26)"/><text x="630.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.20%)</title><rect x="627" y="1364" width="3" height="15" fill="rgb(240,210,32)"/><text x="630.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="1380" width="3" height="15" fill="rgb(242,9,52)"/><text x="630.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="1396" width="3" height="15" fill="rgb(234,215,33)"/><text x="630.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="1412" width="3" height="15" fill="rgb(238,109,11)"/><text x="630.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="1428" width="3" height="15" fill="rgb(206,169,24)"/><text x="630.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1444" width="3" height="15" fill="rgb(228,34,46)"/><text x="630.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.20%)</title><rect x="627" y="1460" width="3" height="15" fill="rgb(248,53,38)"/><text x="630.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="627" y="1476" width="3" height="15" fill="rgb(250,28,32)"/><text x="630.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="627" y="1492" width="3" height="15" fill="rgb(237,59,11)"/><text x="630.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="627" y="1508" width="3" height="15" fill="rgb(212,197,41)"/><text x="630.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="627" y="1524" width="3" height="15" fill="rgb(245,17,8)"/><text x="630.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="627" y="1540" width="3" height="15" fill="rgb(209,147,21)"/><text x="630.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:281) (1 samples, 0.20%)</title><rect x="627" y="1556" width="3" height="15" fill="rgb(213,155,28)"/><text x="630.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py:278) (1 samples, 0.20%)</title><rect x="627" y="1572" width="3" height="15" fill="rgb(228,112,54)"/><text x="630.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.20%)</title><rect x="627" y="1588" width="3" height="15" fill="rgb(240,27,21)"/><text x="630.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.20%)</title><rect x="627" y="1604" width="3" height="15" fill="rgb(233,59,29)"/><text x="630.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.20%)</title><rect x="627" y="1620" width="3" height="15" fill="rgb(227,182,3)"/><text x="630.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.20%)</title><rect x="627" y="1636" width="3" height="15" fill="rgb(224,38,50)"/><text x="630.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.20%)</title><rect x="627" y="1652" width="3" height="15" fill="rgb(222,54,19)"/><text x="630.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.20%)</title><rect x="627" y="1668" width="3" height="15" fill="rgb(244,227,5)"/><text x="630.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:744) (1 samples, 0.20%)</title><rect x="627" y="1684" width="3" height="15" fill="rgb(248,209,5)"/><text x="630.00" y="1694.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.20%)</title><rect x="627" y="1700" width="3" height="15" fill="rgb(252,100,53)"/><text x="630.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.20%)</title><rect x="627" y="1716" width="3" height="15" fill="rgb(228,197,33)"/><text x="630.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.20%)</title><rect x="627" y="1732" width="3" height="15" fill="rgb(244,222,53)"/><text x="630.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.20%)</title><rect x="627" y="1748" width="3" height="15" fill="rgb(220,53,11)"/><text x="630.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.20%)</title><rect x="627" y="1764" width="3" height="15" fill="rgb(211,53,27)"/><text x="630.00" y="1774.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.20%)</title><rect x="627" y="1780" width="3" height="15" fill="rgb(215,161,37)"/><text x="630.00" y="1790.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.20%)</title><rect x="627" y="1796" width="3" height="15" fill="rgb(242,71,13)"/><text x="630.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.20%)</title><rect x="627" y="1812" width="3" height="15" fill="rgb(242,206,11)"/><text x="630.00" y="1822.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.20%)</title><rect x="627" y="1828" width="3" height="15" fill="rgb(220,176,10)"/><text x="630.00" y="1838.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.20%)</title><rect x="630" y="116" width="2" height="15" fill="rgb(236,7,50)"/><text x="633.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.20%)</title><rect x="630" y="132" width="2" height="15" fill="rgb(243,222,41)"/><text x="633.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.20%)</title><rect x="630" y="148" width="2" height="15" fill="rgb(205,163,3)"/><text x="633.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.20%)</title><rect x="630" y="164" width="2" height="15" fill="rgb(233,133,40)"/><text x="633.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.20%)</title><rect x="630" y="180" width="2" height="15" fill="rgb(248,161,30)"/><text x="633.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="630" y="196" width="2" height="15" fill="rgb(252,37,34)"/><text x="633.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.20%)</title><rect x="630" y="212" width="2" height="15" fill="rgb(214,70,42)"/><text x="633.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="630" y="228" width="2" height="15" fill="rgb(211,129,47)"/><text x="633.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="630" y="244" width="2" height="15" fill="rgb(224,7,17)"/><text x="633.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(221,173,3)"/><text x="633.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:94) (1 samples, 0.20%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(227,34,26)"/><text x="633.00" y="286.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.20%)</title><rect x="630" y="292" width="2" height="15" fill="rgb(243,16,26)"/><text x="633.00" y="302.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.20%)</title><rect x="632" y="740" width="2" height="15" fill="rgb(211,2,43)"/><text x="635.00" y="750.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:174) (1 samples, 0.20%)</title><rect x="632" y="756" width="2" height="15" fill="rgb(226,226,13)"/><text x="635.00" y="766.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:28) (3 samples, 0.59%)</title><rect x="630" y="84" width="7" height="15" fill="rgb(232,125,47)"/><text x="633.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.59%)</title><rect x="630" y="100" width="7" height="15" fill="rgb(213,214,51)"/><text x="633.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.40%)</title><rect x="632" y="116" width="5" height="15" fill="rgb(236,36,35)"/><text x="635.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.40%)</title><rect x="632" y="132" width="5" height="15" fill="rgb(228,27,28)"/><text x="635.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.40%)</title><rect x="632" y="148" width="5" height="15" fill="rgb(240,207,47)"/><text x="635.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.40%)</title><rect x="632" y="164" width="5" height="15" fill="rgb(219,85,11)"/><text x="635.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.40%)</title><rect x="632" y="180" width="5" height="15" fill="rgb(240,136,39)"/><text x="635.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.40%)</title><rect x="632" y="196" width="5" height="15" fill="rgb(228,4,47)"/><text x="635.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="632" y="212" width="5" height="15" fill="rgb(227,138,14)"/><text x="635.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="632" y="228" width="5" height="15" fill="rgb(250,163,7)"/><text x="635.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="632" y="244" width="5" height="15" fill="rgb(239,179,25)"/><text x="635.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="632" y="260" width="5" height="15" fill="rgb(230,14,40)"/><text x="635.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="632" y="276" width="5" height="15" fill="rgb(210,212,14)"/><text x="635.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.40%)</title><rect x="632" y="292" width="5" height="15" fill="rgb(254,93,25)"/><text x="635.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="632" y="308" width="5" height="15" fill="rgb(246,229,44)"/><text x="635.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="632" y="324" width="5" height="15" fill="rgb(216,217,32)"/><text x="635.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="632" y="340" width="5" height="15" fill="rgb(212,85,22)"/><text x="635.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="632" y="356" width="5" height="15" fill="rgb(231,121,38)"/><text x="635.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="632" y="372" width="5" height="15" fill="rgb(238,70,42)"/><text x="635.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (2 samples, 0.40%)</title><rect x="632" y="388" width="5" height="15" fill="rgb(222,119,22)"/><text x="635.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="632" y="404" width="5" height="15" fill="rgb(239,105,24)"/><text x="635.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="632" y="420" width="5" height="15" fill="rgb(205,183,8)"/><text x="635.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="632" y="436" width="5" height="15" fill="rgb(205,227,7)"/><text x="635.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="632" y="452" width="5" height="15" fill="rgb(252,217,1)"/><text x="635.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="632" y="468" width="5" height="15" fill="rgb(229,101,14)"/><text x="635.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (2 samples, 0.40%)</title><rect x="632" y="484" width="5" height="15" fill="rgb(211,59,48)"/><text x="635.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (2 samples, 0.40%)</title><rect x="632" y="500" width="5" height="15" fill="rgb(205,168,9)"/><text x="635.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.40%)</title><rect x="632" y="516" width="5" height="15" fill="rgb(250,12,51)"/><text x="635.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.40%)</title><rect x="632" y="532" width="5" height="15" fill="rgb(219,66,12)"/><text x="635.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (2 samples, 0.40%)</title><rect x="632" y="548" width="5" height="15" fill="rgb(225,19,12)"/><text x="635.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (2 samples, 0.40%)</title><rect x="632" y="564" width="5" height="15" fill="rgb(208,39,38)"/><text x="635.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (2 samples, 0.40%)</title><rect x="632" y="580" width="5" height="15" fill="rgb(211,98,27)"/><text x="635.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (2 samples, 0.40%)</title><rect x="632" y="596" width="5" height="15" fill="rgb(226,58,37)"/><text x="635.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (2 samples, 0.40%)</title><rect x="632" y="612" width="5" height="15" fill="rgb(221,213,25)"/><text x="635.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (2 samples, 0.40%)</title><rect x="632" y="628" width="5" height="15" fill="rgb(236,33,10)"/><text x="635.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (2 samples, 0.40%)</title><rect x="632" y="644" width="5" height="15" fill="rgb(229,121,52)"/><text x="635.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (2 samples, 0.40%)</title><rect x="632" y="660" width="5" height="15" fill="rgb(213,166,43)"/><text x="635.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (2 samples, 0.40%)</title><rect x="632" y="676" width="5" height="15" fill="rgb(221,202,38)"/><text x="635.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:39) (2 samples, 0.40%)</title><rect x="632" y="692" width="5" height="15" fill="rgb(245,127,54)"/><text x="635.00" y="702.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (2 samples, 0.40%)</title><rect x="632" y="708" width="5" height="15" fill="rgb(244,24,38)"/><text x="635.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:39) (2 samples, 0.40%)</title><rect x="632" y="724" width="5" height="15" fill="rgb(221,220,45)"/><text x="635.00" y="734.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.20%)</title><rect x="634" y="740" width="3" height="15" fill="rgb(209,196,8)"/><text x="637.00" y="750.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.20%)</title><rect x="634" y="756" width="3" height="15" fill="rgb(252,173,5)"/><text x="637.00" y="766.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.20%)</title><rect x="634" y="772" width="3" height="15" fill="rgb(239,24,43)"/><text x="637.00" y="782.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="637" y="180" width="2" height="15" fill="rgb(230,172,17)"/><text x="640.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.59%)</title><rect x="639" y="180" width="7" height="15" fill="rgb(237,69,45)"/><text x="642.00" y="190.50"></text></g><g><title>0x7fc61adec1d6 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="655" y="196" width="3" height="15" fill="rgb(244,133,32)"/><text x="658.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.20%)</title><rect x="658" y="196" width="2" height="15" fill="rgb(247,209,31)"/><text x="661.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.20%)</title><rect x="658" y="212" width="2" height="15" fill="rgb(235,191,38)"/><text x="661.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.20%)</title><rect x="658" y="228" width="2" height="15" fill="rgb(238,106,17)"/><text x="661.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="660" y="260" width="2" height="15" fill="rgb(236,100,17)"/><text x="663.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="660" y="244" width="5" height="15" fill="rgb(213,108,3)"/><text x="663.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(225,186,51)"/><text x="665.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.20%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(228,79,47)"/><text x="665.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="662" y="292" width="3" height="15" fill="rgb(237,199,42)"/><text x="665.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.20%)</title><rect x="662" y="308" width="3" height="15" fill="rgb(214,73,45)"/><text x="665.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.20%)</title><rect x="662" y="324" width="3" height="15" fill="rgb(230,140,47)"/><text x="665.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:684) (1 samples, 0.20%)</title><rect x="662" y="340" width="3" height="15" fill="rgb(227,92,13)"/><text x="665.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (3 samples, 0.59%)</title><rect x="660" y="228" width="7" height="15" fill="rgb(214,81,14)"/><text x="663.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.20%)</title><rect x="665" y="244" width="2" height="15" fill="rgb(218,24,11)"/><text x="668.00" y="254.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.20%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(216,21,33)"/><text x="675.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.20%)</title><rect x="674" y="292" width="2" height="15" fill="rgb(242,87,18)"/><text x="677.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.20%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(231,102,1)"/><text x="677.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="679" y="308" width="2" height="15" fill="rgb(214,64,26)"/><text x="682.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="679" y="324" width="2" height="15" fill="rgb(240,84,31)"/><text x="682.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(251,57,39)"/><text x="682.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="679" y="356" width="2" height="15" fill="rgb(221,114,32)"/><text x="682.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="679" y="372" width="2" height="15" fill="rgb(229,213,26)"/><text x="682.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:444) (1 samples, 0.20%)</title><rect x="681" y="356" width="2" height="15" fill="rgb(221,179,6)"/><text x="684.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="683" y="356" width="3" height="15" fill="rgb(213,167,37)"/><text x="686.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="683" y="372" width="3" height="15" fill="rgb(245,44,53)"/><text x="686.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3031) (1 samples, 0.20%)</title><rect x="683" y="388" width="3" height="15" fill="rgb(213,186,8)"/><text x="686.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (12 samples, 2.37%)</title><rect x="660" y="196" width="28" height="15" fill="rgb(216,98,7)"/><text x="663.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (12 samples, 2.37%)</title><rect x="660" y="212" width="28" height="15" fill="rgb(249,116,19)"/><text x="663.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (9 samples, 1.78%)</title><rect x="667" y="228" width="21" height="15" fill="rgb(218,63,19)"/><text x="670.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (9 samples, 1.78%)</title><rect x="667" y="244" width="21" height="15" fill="rgb(241,131,34)"/><text x="670.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.38%)</title><rect x="672" y="260" width="16" height="15" fill="rgb(206,140,16)"/><text x="675.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (6 samples, 1.19%)</title><rect x="674" y="276" width="14" height="15" fill="rgb(206,122,48)"/><text x="677.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 0.99%)</title><rect x="676" y="292" width="12" height="15" fill="rgb(224,37,29)"/><text x="679.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.59%)</title><rect x="681" y="308" width="7" height="15" fill="rgb(252,109,37)"/><text x="684.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.59%)</title><rect x="681" y="324" width="7" height="15" fill="rgb(206,127,8)"/><text x="684.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.59%)</title><rect x="681" y="340" width="7" height="15" fill="rgb(226,195,45)"/><text x="684.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.20%)</title><rect x="686" y="356" width="2" height="15" fill="rgb(235,40,42)"/><text x="689.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.20%)</title><rect x="688" y="196" width="2" height="15" fill="rgb(209,171,53)"/><text x="691.00" y="206.50"></text></g><g><title>0x7fc5db929422 (?) (1 samples, 0.20%)</title><rect x="690" y="244" width="3" height="15" fill="rgb(245,152,2)"/><text x="693.00" y="254.50"></text></g><g><title>0x7fc5db92f89e (?) (1 samples, 0.20%)</title><rect x="690" y="260" width="3" height="15" fill="rgb(247,39,5)"/><text x="693.00" y="270.50"></text></g><g><title>0x7fc5db92f74f (?) (1 samples, 0.20%)</title><rect x="690" y="276" width="3" height="15" fill="rgb(242,32,14)"/><text x="693.00" y="286.50"></text></g><g><title>0x7fc5db935a3a (?) (1 samples, 0.20%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(207,160,11)"/><text x="693.00" y="302.50"></text></g><g><title>0x7fc5e4d91ab9 (?) (1 samples, 0.20%)</title><rect x="690" y="308" width="3" height="15" fill="rgb(232,116,51)"/><text x="693.00" y="318.50"></text></g><g><title>0x7fc5e4d92ead (?) (1 samples, 0.20%)</title><rect x="690" y="324" width="3" height="15" fill="rgb(211,170,3)"/><text x="693.00" y="334.50"></text></g><g><title>0x7fc5e4d92ea0 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="693" y="468" width="2" height="15" fill="rgb(209,126,13)"/><text x="696.00" y="478.50"></text></g><g><title>0x7fc5e4d92ea9 (libgomp.so.1.0.0) (3 samples, 0.59%)</title><rect x="695" y="468" width="7" height="15" fill="rgb(226,117,13)"/><text x="698.00" y="478.50"></text></g><g><title>0x7fc5e4d92eab (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="702" y="468" width="5" height="15" fill="rgb(243,192,49)"/><text x="705.00" y="478.50"></text></g><g><title>0x7fc5e4d91ab9 (libgomp.so.1.0.0) (7 samples, 1.38%)</title><rect x="693" y="452" width="16" height="15" fill="rgb(244,89,36)"/><text x="696.00" y="462.50"></text></g><g><title>0x7fc5e4d92ead (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="707" y="468" width="2" height="15" fill="rgb(244,57,25)"/><text x="710.00" y="478.50"></text></g><g><title>0x7fc5e4d92cf9 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="709" y="484" width="2" height="15" fill="rgb(207,160,41)"/><text x="712.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (10 samples, 1.98%)</title><rect x="690" y="196" width="24" height="15" fill="rgb(245,30,38)"/><text x="693.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 1.98%)</title><rect x="690" y="212" width="24" height="15" fill="rgb(216,22,10)"/><text x="693.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (10 samples, 1.98%)</title><rect x="690" y="228" width="24" height="15" fill="rgb(215,11,11)"/><text x="693.00" y="238.50">_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (9 samples, 1.78%)</title><rect x="693" y="244" width="21" height="15" fill="rgb(217,228,33)"/><text x="696.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (9 samples, 1.78%)</title><rect x="693" y="260" width="21" height="15" fill="rgb(220,161,33)"/><text x="696.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (9 samples, 1.78%)</title><rect x="693" y="276" width="21" height="15" fill="rgb(240,112,18)"/><text x="696.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (9 samples, 1.78%)</title><rect x="693" y="292" width="21" height="15" fill="rgb(212,165,1)"/><text x="696.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (9 samples, 1.78%)</title><rect x="693" y="308" width="21" height="15" fill="rgb(241,213,6)"/><text x="696.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (9 samples, 1.78%)</title><rect x="693" y="324" width="21" height="15" fill="rgb(235,224,10)"/><text x="696.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (9 samples, 1.78%)</title><rect x="693" y="340" width="21" height="15" fill="rgb(238,219,20)"/><text x="696.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (9 samples, 1.78%)</title><rect x="693" y="356" width="21" height="15" fill="rgb(219,170,16)"/><text x="696.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (9 samples, 1.78%)</title><rect x="693" y="372" width="21" height="15" fill="rgb(226,190,7)"/><text x="696.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (9 samples, 1.78%)</title><rect x="693" y="388" width="21" height="15" fill="rgb(249,96,37)"/><text x="696.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (9 samples, 1.78%)</title><rect x="693" y="404" width="21" height="15" fill="rgb(248,178,25)"/><text x="696.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (9 samples, 1.78%)</title><rect x="693" y="420" width="21" height="15" fill="rgb(240,123,49)"/><text x="696.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (9 samples, 1.78%)</title><rect x="693" y="436" width="21" height="15" fill="rgb(225,187,53)"/><text x="696.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="709" y="452" width="5" height="15" fill="rgb(227,132,19)"/><text x="712.00" y="462.50"></text></g><g><title>0x7fc5e4d90daa (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="709" y="468" width="5" height="15" fill="rgb(205,192,33)"/><text x="712.00" y="478.50"></text></g><g><title>0x7fc5e4d92cfd (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="711" y="484" width="3" height="15" fill="rgb(247,94,6)"/><text x="714.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.20%)</title><rect x="716" y="212" width="2" height="15" fill="rgb(226,120,16)"/><text x="719.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.20%)</title><rect x="723" y="228" width="2" height="15" fill="rgb(227,13,15)"/><text x="726.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.20%)</title><rect x="723" y="244" width="2" height="15" fill="rgb(237,196,46)"/><text x="726.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="725" y="244" width="3" height="15" fill="rgb(229,50,48)"/><text x="728.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="725" y="260" width="3" height="15" fill="rgb(242,202,31)"/><text x="728.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="725" y="276" width="3" height="15" fill="rgb(240,191,41)"/><text x="728.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="725" y="292" width="3" height="15" fill="rgb(212,64,50)"/><text x="728.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="728" y="260" width="2" height="15" fill="rgb(243,195,18)"/><text x="731.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.20%)</title><rect x="728" y="276" width="2" height="15" fill="rgb(218,102,46)"/><text x="731.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:256) (1 samples, 0.20%)</title><rect x="728" y="292" width="2" height="15" fill="rgb(234,56,41)"/><text x="731.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="730" y="260" width="2" height="15" fill="rgb(213,178,47)"/><text x="733.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.20%)</title><rect x="730" y="276" width="2" height="15" fill="rgb(252,17,11)"/><text x="733.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.20%)</title><rect x="732" y="276" width="3" height="15" fill="rgb(211,4,11)"/><text x="735.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.20%)</title><rect x="732" y="292" width="3" height="15" fill="rgb(223,50,53)"/><text x="735.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (10 samples, 1.98%)</title><rect x="714" y="196" width="23" height="15" fill="rgb(223,165,54)"/><text x="717.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 1.58%)</title><rect x="718" y="212" width="19" height="15" fill="rgb(205,192,24)"/><text x="721.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.99%)</title><rect x="725" y="228" width="12" height="15" fill="rgb(248,128,35)"/><text x="728.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.79%)</title><rect x="728" y="244" width="9" height="15" fill="rgb(211,54,30)"/><text x="731.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="732" y="260" width="5" height="15" fill="rgb(207,147,25)"/><text x="735.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="735" y="276" width="2" height="15" fill="rgb(224,70,8)"/><text x="738.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="735" y="292" width="2" height="15" fill="rgb(223,187,46)"/><text x="738.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="735" y="308" width="2" height="15" fill="rgb(236,48,41)"/><text x="738.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.20%)</title><rect x="739" y="324" width="3" height="15" fill="rgb(244,39,1)"/><text x="742.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="739" y="340" width="3" height="15" fill="rgb(211,118,1)"/><text x="742.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="742" y="340" width="2" height="15" fill="rgb(247,103,37)"/><text x="745.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.20%)</title><rect x="744" y="340" width="2" height="15" fill="rgb(210,168,5)"/><text x="747.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="744" y="356" width="2" height="15" fill="rgb(212,114,24)"/><text x="747.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="744" y="372" width="2" height="15" fill="rgb(243,153,30)"/><text x="747.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="744" y="388" width="2" height="15" fill="rgb(237,109,14)"/><text x="747.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.59%)</title><rect x="742" y="324" width="7" height="15" fill="rgb(237,116,38)"/><text x="745.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.20%)</title><rect x="746" y="340" width="3" height="15" fill="rgb(239,38,20)"/><text x="749.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(218,130,41)"/><text x="756.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="753" y="372" width="3" height="15" fill="rgb(243,103,23)"/><text x="756.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="753" y="388" width="3" height="15" fill="rgb(226,183,49)"/><text x="756.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.20%)</title><rect x="753" y="404" width="3" height="15" fill="rgb(240,212,8)"/><text x="756.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="756" y="388" width="2" height="15" fill="rgb(223,64,43)"/><text x="759.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="756" y="404" width="2" height="15" fill="rgb(214,170,19)"/><text x="759.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="756" y="420" width="2" height="15" fill="rgb(232,78,20)"/><text x="759.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3241) (1 samples, 0.20%)</title><rect x="756" y="436" width="2" height="15" fill="rgb(211,186,19)"/><text x="759.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (49 samples, 9.68%)</title><rect x="646" y="180" width="114" height="15" fill="rgb(219,73,48)"/><text x="649.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (10 samples, 1.98%)</title><rect x="737" y="196" width="23" height="15" fill="rgb(229,197,33)"/><text x="740.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (10 samples, 1.98%)</title><rect x="737" y="212" width="23" height="15" fill="rgb(231,13,6)"/><text x="740.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (10 samples, 1.98%)</title><rect x="737" y="228" width="23" height="15" fill="rgb(227,156,21)"/><text x="740.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.98%)</title><rect x="737" y="244" width="23" height="15" fill="rgb(208,17,23)"/><text x="740.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (10 samples, 1.98%)</title><rect x="737" y="260" width="23" height="15" fill="rgb(225,157,45)"/><text x="740.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.78%)</title><rect x="739" y="276" width="21" height="15" fill="rgb(219,206,10)"/><text x="742.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (9 samples, 1.78%)</title><rect x="739" y="292" width="21" height="15" fill="rgb(253,93,11)"/><text x="742.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.78%)</title><rect x="739" y="308" width="21" height="15" fill="rgb(248,159,53)"/><text x="742.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (5 samples, 0.99%)</title><rect x="749" y="324" width="11" height="15" fill="rgb(247,21,53)"/><text x="752.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (3 samples, 0.59%)</title><rect x="753" y="340" width="7" height="15" fill="rgb(225,145,43)"/><text x="756.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="756" y="356" width="4" height="15" fill="rgb(219,169,51)"/><text x="759.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="756" y="372" width="4" height="15" fill="rgb(250,195,26)"/><text x="759.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1749) (1 samples, 0.20%)</title><rect x="758" y="388" width="2" height="15" fill="rgb(251,126,3)"/><text x="761.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.20%)</title><rect x="760" y="180" width="3" height="15" fill="rgb(227,79,40)"/><text x="763.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.20%)</title><rect x="763" y="180" width="2" height="15" fill="rgb(230,59,13)"/><text x="766.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (56 samples, 11.07%)</title><rect x="637" y="100" width="130" height="15" fill="rgb(221,76,34)"/><text x="640.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (56 samples, 11.07%)</title><rect x="637" y="116" width="130" height="15" fill="rgb(215,75,34)"/><text x="640.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (56 samples, 11.07%)</title><rect x="637" y="132" width="130" height="15" fill="rgb(211,18,21)"/><text x="640.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (56 samples, 11.07%)</title><rect x="637" y="148" width="130" height="15" fill="rgb(220,41,8)"/><text x="640.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (56 samples, 11.07%)</title><rect x="637" y="164" width="130" height="15" fill="rgb(239,121,29)"/><text x="640.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.20%)</title><rect x="765" y="180" width="2" height="15" fill="rgb(250,175,19)"/><text x="768.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.20%)</title><rect x="781" y="180" width="3" height="15" fill="rgb(224,188,49)"/><text x="784.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="784" y="180" width="2" height="15" fill="rgb(242,24,11)"/><text x="787.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (16 samples, 3.16%)</title><rect x="786" y="180" width="37" height="15" fill="rgb(216,131,28)"/><text x="789.00" y="190.50">run..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.40%)</title><rect x="819" y="196" width="4" height="15" fill="rgb(226,107,36)"/><text x="822.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.20%)</title><rect x="823" y="212" width="3" height="15" fill="rgb(234,35,27)"/><text x="826.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.20%)</title><rect x="823" y="228" width="3" height="15" fill="rgb(248,73,36)"/><text x="826.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.20%)</title><rect x="823" y="244" width="3" height="15" fill="rgb(240,61,3)"/><text x="826.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:332) (1 samples, 0.20%)</title><rect x="823" y="260" width="3" height="15" fill="rgb(240,119,18)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:922) (1 samples, 0.20%)</title><rect x="828" y="260" width="2" height="15" fill="rgb(235,94,1)"/><text x="831.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.59%)</title><rect x="826" y="212" width="7" height="15" fill="rgb(207,43,6)"/><text x="829.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.59%)</title><rect x="826" y="228" width="7" height="15" fill="rgb(220,57,31)"/><text x="829.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.40%)</title><rect x="828" y="244" width="5" height="15" fill="rgb(253,101,27)"/><text x="831.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.20%)</title><rect x="830" y="260" width="3" height="15" fill="rgb(217,23,11)"/><text x="833.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.20%)</title><rect x="830" y="276" width="3" height="15" fill="rgb(209,19,50)"/><text x="833.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:832) (1 samples, 0.20%)</title><rect x="830" y="292" width="3" height="15" fill="rgb(253,112,28)"/><text x="833.00" y="302.50"></text></g><g><title>scalar_value (scalarapi.c:47) (1 samples, 0.20%)</title><rect x="830" y="308" width="3" height="15" fill="rgb(219,67,31)"/><text x="833.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="833" y="244" width="2" height="15" fill="rgb(220,52,47)"/><text x="836.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.20%)</title><rect x="833" y="260" width="2" height="15" fill="rgb(233,157,21)"/><text x="836.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.19%)</title><rect x="823" y="196" width="14" height="15" fill="rgb(253,99,4)"/><text x="826.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.40%)</title><rect x="833" y="212" width="4" height="15" fill="rgb(227,204,38)"/><text x="836.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.40%)</title><rect x="833" y="228" width="4" height="15" fill="rgb(205,42,32)"/><text x="836.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.20%)</title><rect x="835" y="244" width="2" height="15" fill="rgb(224,57,17)"/><text x="838.00" y="254.50"></text></g><g><title>PyArray_Return (scalarapi.c:861) (1 samples, 0.20%)</title><rect x="835" y="260" width="2" height="15" fill="rgb(218,15,42)"/><text x="838.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.20%)</title><rect x="837" y="196" width="3" height="15" fill="rgb(240,190,28)"/><text x="840.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.20%)</title><rect x="837" y="212" width="3" height="15" fill="rgb(249,83,30)"/><text x="840.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.20%)</title><rect x="837" y="228" width="3" height="15" fill="rgb(253,113,51)"/><text x="840.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.20%)</title><rect x="837" y="244" width="3" height="15" fill="rgb(247,74,18)"/><text x="840.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.20%)</title><rect x="837" y="260" width="3" height="15" fill="rgb(227,188,13)"/><text x="840.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="837" y="276" width="3" height="15" fill="rgb(218,186,1)"/><text x="840.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="837" y="292" width="3" height="15" fill="rgb(229,121,17)"/><text x="840.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.20%)</title><rect x="837" y="308" width="3" height="15" fill="rgb(248,35,2)"/><text x="840.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.20%)</title><rect x="837" y="324" width="3" height="15" fill="rgb(233,187,37)"/><text x="840.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (1 samples, 0.20%)</title><rect x="844" y="228" width="3" height="15" fill="rgb(212,22,5)"/><text x="847.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="849" y="244" width="2" height="15" fill="rgb(226,190,27)"/><text x="852.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="849" y="260" width="2" height="15" fill="rgb(239,57,42)"/><text x="852.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="849" y="276" width="2" height="15" fill="rgb(247,7,18)"/><text x="852.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="849" y="292" width="2" height="15" fill="rgb(244,41,22)"/><text x="852.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="849" y="308" width="2" height="15" fill="rgb(214,52,9)"/><text x="852.00" y="318.50"></text></g><g><title>0x7fc61aea9143 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="849" y="324" width="2" height="15" fill="rgb(227,90,24)"/><text x="852.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="851" y="276" width="3" height="15" fill="rgb(232,49,39)"/><text x="854.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.20%)</title><rect x="851" y="292" width="3" height="15" fill="rgb(205,218,20)"/><text x="854.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="851" y="308" width="3" height="15" fill="rgb(227,76,42)"/><text x="854.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="851" y="260" width="5" height="15" fill="rgb(245,178,10)"/><text x="854.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.20%)</title><rect x="854" y="276" width="2" height="15" fill="rgb(253,195,54)"/><text x="857.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.20%)</title><rect x="854" y="292" width="2" height="15" fill="rgb(252,95,37)"/><text x="857.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="856" y="260" width="2" height="15" fill="rgb(245,9,39)"/><text x="859.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1961) (1 samples, 0.20%)</title><rect x="856" y="276" width="2" height="15" fill="rgb(254,80,39)"/><text x="859.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.20%)</title><rect x="858" y="276" width="3" height="15" fill="rgb(227,9,42)"/><text x="861.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.20%)</title><rect x="858" y="292" width="3" height="15" fill="rgb(240,227,19)"/><text x="861.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.99%)</title><rect x="851" y="244" width="12" height="15" fill="rgb(214,20,54)"/><text x="854.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="858" y="260" width="5" height="15" fill="rgb(221,16,38)"/><text x="861.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.20%)</title><rect x="861" y="276" width="2" height="15" fill="rgb(252,171,12)"/><text x="864.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(227,197,20)"/><text x="864.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.20%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(228,85,22)"/><text x="864.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.20%)</title><rect x="861" y="324" width="2" height="15" fill="rgb(242,121,17)"/><text x="864.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.20%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(240,92,48)"/><text x="864.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:312) (1 samples, 0.20%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(218,177,48)"/><text x="864.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:141) (1 samples, 0.20%)</title><rect x="861" y="372" width="2" height="15" fill="rgb(225,229,30)"/><text x="864.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="863" y="244" width="2" height="15" fill="rgb(232,171,26)"/><text x="866.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.20%)</title><rect x="863" y="260" width="2" height="15" fill="rgb(242,223,50)"/><text x="866.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.78%)</title><rect x="847" y="228" width="21" height="15" fill="rgb(237,71,4)"/><text x="850.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.20%)</title><rect x="865" y="244" width="3" height="15" fill="rgb(229,210,19)"/><text x="868.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.40%)</title><rect x="875" y="388" width="4" height="15" fill="rgb(228,115,1)"/><text x="878.00" y="398.50"></text></g><g><title>0x7fc61ade1e82 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="877" y="404" width="2" height="15" fill="rgb(230,116,19)"/><text x="880.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.59%)</title><rect x="875" y="308" width="7" height="15" fill="rgb(228,48,27)"/><text x="878.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.59%)</title><rect x="875" y="324" width="7" height="15" fill="rgb(222,91,8)"/><text x="878.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.59%)</title><rect x="875" y="340" width="7" height="15" fill="rgb(234,56,5)"/><text x="878.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.59%)</title><rect x="875" y="356" width="7" height="15" fill="rgb(250,148,10)"/><text x="878.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.59%)</title><rect x="875" y="372" width="7" height="15" fill="rgb(253,185,47)"/><text x="878.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="879" y="388" width="3" height="15" fill="rgb(241,98,29)"/><text x="882.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="882" y="324" width="2" height="15" fill="rgb(230,56,29)"/><text x="885.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.20%)</title><rect x="884" y="324" width="2" height="15" fill="rgb(214,89,25)"/><text x="887.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.20%)</title><rect x="884" y="340" width="2" height="15" fill="rgb(233,180,7)"/><text x="887.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4630) (1 samples, 0.20%)</title><rect x="886" y="324" width="3" height="15" fill="rgb(228,120,14)"/><text x="889.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.20%)</title><rect x="891" y="388" width="2" height="15" fill="rgb(230,151,4)"/><text x="894.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1786) (1 samples, 0.20%)</title><rect x="891" y="404" width="2" height="15" fill="rgb(254,223,11)"/><text x="894.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.59%)</title><rect x="889" y="340" width="7" height="15" fill="rgb(240,111,31)"/><text x="892.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (3 samples, 0.59%)</title><rect x="889" y="356" width="7" height="15" fill="rgb(223,20,10)"/><text x="892.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.40%)</title><rect x="891" y="372" width="5" height="15" fill="rgb(236,59,34)"/><text x="894.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.20%)</title><rect x="893" y="388" width="3" height="15" fill="rgb(227,196,32)"/><text x="896.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1742) (1 samples, 0.20%)</title><rect x="893" y="404" width="3" height="15" fill="rgb(211,179,41)"/><text x="896.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="896" y="356" width="2" height="15" fill="rgb(242,142,7)"/><text x="899.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="896" y="372" width="2" height="15" fill="rgb(230,151,2)"/><text x="899.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="896" y="388" width="2" height="15" fill="rgb(212,221,26)"/><text x="899.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.20%)</title><rect x="896" y="404" width="2" height="15" fill="rgb(248,125,3)"/><text x="899.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.20%)</title><rect x="896" y="420" width="2" height="15" fill="rgb(214,39,40)"/><text x="899.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.20%)</title><rect x="896" y="436" width="2" height="15" fill="rgb(237,194,38)"/><text x="899.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="898" y="372" width="2" height="15" fill="rgb(229,19,28)"/><text x="901.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.20%)</title><rect x="898" y="388" width="2" height="15" fill="rgb(244,139,34)"/><text x="901.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.40%)</title><rect x="898" y="356" width="5" height="15" fill="rgb(224,137,7)"/><text x="901.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.20%)</title><rect x="900" y="372" width="3" height="15" fill="rgb(230,150,24)"/><text x="903.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.20%)</title><rect x="900" y="388" width="3" height="15" fill="rgb(243,170,28)"/><text x="903.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.20%)</title><rect x="903" y="356" width="2" height="15" fill="rgb(237,157,7)"/><text x="906.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.20%)</title><rect x="903" y="372" width="2" height="15" fill="rgb(249,136,12)"/><text x="906.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="903" y="388" width="2" height="15" fill="rgb(215,225,45)"/><text x="906.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="903" y="404" width="2" height="15" fill="rgb(209,88,9)"/><text x="906.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (29 samples, 5.73%)</title><rect x="840" y="196" width="67" height="15" fill="rgb(226,68,40)"/><text x="843.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 5.53%)</title><rect x="842" y="212" width="65" height="15" fill="rgb(214,119,14)"/><text x="845.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (17 samples, 3.36%)</title><rect x="868" y="228" width="39" height="15" fill="rgb(222,112,8)"/><text x="871.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (16 samples, 3.16%)</title><rect x="870" y="244" width="37" height="15" fill="rgb(216,9,42)"/><text x="873.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 3.16%)</title><rect x="870" y="260" width="37" height="15" fill="rgb(222,84,14)"/><text x="873.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (16 samples, 3.16%)</title><rect x="870" y="276" width="37" height="15" fill="rgb(252,226,44)"/><text x="873.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (14 samples, 2.77%)</title><rect x="875" y="292" width="32" height="15" fill="rgb(224,17,21)"/><text x="878.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.17%)</title><rect x="882" y="308" width="25" height="15" fill="rgb(211,132,24)"/><text x="885.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.58%)</title><rect x="889" y="324" width="18" height="15" fill="rgb(241,187,12)"/><text x="892.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.99%)</title><rect x="896" y="340" width="11" height="15" fill="rgb(248,58,25)"/><text x="899.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:565) (1 samples, 0.20%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(234,71,7)"/><text x="908.00" y="366.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1374) (1 samples, 0.20%)</title><rect x="905" y="372" width="2" height="15" fill="rgb(228,163,47)"/><text x="908.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.40%)</title><rect x="907" y="196" width="5" height="15" fill="rgb(234,10,1)"/><text x="910.00" y="206.50"></text></g><g><title>0x7fc5e4d92ea9 (libgomp.so.1.0.0) (5 samples, 0.99%)</title><rect x="912" y="468" width="12" height="15" fill="rgb(236,8,53)"/><text x="915.00" y="478.50"></text></g><g><title>0x7fc5e4d92eab (libgomp.so.1.0.0) (6 samples, 1.19%)</title><rect x="924" y="468" width="14" height="15" fill="rgb(215,213,13)"/><text x="927.00" y="478.50"></text></g><g><title>0x7fc5e4d91ab9 (libgomp.so.1.0.0) (16 samples, 3.16%)</title><rect x="912" y="452" width="37" height="15" fill="rgb(237,29,51)"/><text x="915.00" y="462.50">0x7..</text></g><g><title>0x7fc5e4d92ead (libgomp.so.1.0.0) (5 samples, 0.99%)</title><rect x="938" y="468" width="11" height="15" fill="rgb(214,216,20)"/><text x="941.00" y="478.50"></text></g><g><title>0x7fc5e4d92cf9 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="949" y="484" width="3" height="15" fill="rgb(240,167,32)"/><text x="952.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 3.56%)</title><rect x="912" y="196" width="42" height="15" fill="rgb(233,223,11)"/><text x="915.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.56%)</title><rect x="912" y="212" width="42" height="15" fill="rgb(222,179,26)"/><text x="915.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (18 samples, 3.56%)</title><rect x="912" y="228" width="42" height="15" fill="rgb(250,135,12)"/><text x="915.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (18 samples, 3.56%)</title><rect x="912" y="244" width="42" height="15" fill="rgb(214,216,13)"/><text x="915.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (18 samples, 3.56%)</title><rect x="912" y="260" width="42" height="15" fill="rgb(211,90,10)"/><text x="915.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (18 samples, 3.56%)</title><rect x="912" y="276" width="42" height="15" fill="rgb(217,225,52)"/><text x="915.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (18 samples, 3.56%)</title><rect x="912" y="292" width="42" height="15" fill="rgb(250,39,45)"/><text x="915.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (18 samples, 3.56%)</title><rect x="912" y="308" width="42" height="15" fill="rgb(214,212,25)"/><text x="915.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (18 samples, 3.56%)</title><rect x="912" y="324" width="42" height="15" fill="rgb(244,159,53)"/><text x="915.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (18 samples, 3.56%)</title><rect x="912" y="340" width="42" height="15" fill="rgb(237,9,27)"/><text x="915.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (18 samples, 3.56%)</title><rect x="912" y="356" width="42" height="15" fill="rgb(241,176,40)"/><text x="915.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (18 samples, 3.56%)</title><rect x="912" y="372" width="42" height="15" fill="rgb(209,196,6)"/><text x="915.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (18 samples, 3.56%)</title><rect x="912" y="388" width="42" height="15" fill="rgb(243,2,52)"/><text x="915.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (18 samples, 3.56%)</title><rect x="912" y="404" width="42" height="15" fill="rgb(241,41,39)"/><text x="915.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (18 samples, 3.56%)</title><rect x="912" y="420" width="42" height="15" fill="rgb(238,222,43)"/><text x="915.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (18 samples, 3.56%)</title><rect x="912" y="436" width="42" height="15" fill="rgb(230,112,0)"/><text x="915.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="949" y="452" width="5" height="15" fill="rgb(209,94,20)"/><text x="952.00" y="462.50"></text></g><g><title>0x7fc5e4d90daa (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="949" y="468" width="5" height="15" fill="rgb(213,17,23)"/><text x="952.00" y="478.50"></text></g><g><title>0x7fc5e4d92cfb (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="952" y="484" width="2" height="15" fill="rgb(228,207,48)"/><text x="955.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.20%)</title><rect x="954" y="228" width="2" height="15" fill="rgb(252,130,31)"/><text x="957.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="956" y="244" width="3" height="15" fill="rgb(207,112,45)"/><text x="959.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="956" y="260" width="3" height="15" fill="rgb(210,15,46)"/><text x="959.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.20%)</title><rect x="956" y="276" width="3" height="15" fill="rgb(217,222,39)"/><text x="959.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.20%)</title><rect x="959" y="340" width="2" height="15" fill="rgb(252,123,25)"/><text x="962.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (2 samples, 0.40%)</title><rect x="959" y="324" width="4" height="15" fill="rgb(214,68,20)"/><text x="962.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:963) (1 samples, 0.20%)</title><rect x="961" y="340" width="2" height="15" fill="rgb(247,130,39)"/><text x="964.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (3 samples, 0.59%)</title><rect x="959" y="308" width="7" height="15" fill="rgb(230,94,29)"/><text x="962.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.20%)</title><rect x="963" y="324" width="3" height="15" fill="rgb(220,83,53)"/><text x="966.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1133) (1 samples, 0.20%)</title><rect x="963" y="340" width="3" height="15" fill="rgb(212,226,52)"/><text x="966.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.20%)</title><rect x="966" y="308" width="2" height="15" fill="rgb(207,130,47)"/><text x="969.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.20%)</title><rect x="966" y="324" width="2" height="15" fill="rgb(221,54,3)"/><text x="969.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 0.99%)</title><rect x="959" y="292" width="11" height="15" fill="rgb(248,68,9)"/><text x="962.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.20%)</title><rect x="968" y="308" width="2" height="15" fill="rgb(240,37,13)"/><text x="971.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.20%)</title><rect x="968" y="324" width="2" height="15" fill="rgb(235,14,4)"/><text x="971.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.20%)</title><rect x="968" y="340" width="2" height="15" fill="rgb(247,58,2)"/><text x="971.00" y="350.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1742) (1 samples, 0.20%)</title><rect x="970" y="308" width="3" height="15" fill="rgb(237,97,35)"/><text x="973.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 1.58%)</title><rect x="956" y="228" width="19" height="15" fill="rgb(246,158,4)"/><text x="959.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.38%)</title><rect x="959" y="244" width="16" height="15" fill="rgb(228,42,13)"/><text x="962.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.38%)</title><rect x="959" y="260" width="16" height="15" fill="rgb(212,71,42)"/><text x="962.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.38%)</title><rect x="959" y="276" width="16" height="15" fill="rgb(223,223,51)"/><text x="962.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.40%)</title><rect x="970" y="292" width="5" height="15" fill="rgb(223,62,6)"/><text x="973.00" y="302.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1749) (1 samples, 0.20%)</title><rect x="973" y="308" width="2" height="15" fill="rgb(219,4,6)"/><text x="976.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.20%)</title><rect x="975" y="228" width="2" height="15" fill="rgb(211,68,7)"/><text x="978.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="977" y="244" width="3" height="15" fill="rgb(249,134,16)"/><text x="980.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="977" y="260" width="3" height="15" fill="rgb(248,174,42)"/><text x="980.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="977" y="276" width="3" height="15" fill="rgb(215,138,41)"/><text x="980.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.20%)</title><rect x="977" y="292" width="3" height="15" fill="rgb(244,90,9)"/><text x="980.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3149) (1 samples, 0.20%)</title><rect x="980" y="260" width="2" height="15" fill="rgb(206,91,54)"/><text x="983.00" y="270.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.20%)</title><rect x="980" y="276" width="2" height="15" fill="rgb(243,92,24)"/><text x="983.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="982" y="308" width="2" height="15" fill="rgb(249,217,52)"/><text x="985.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1560) (1 samples, 0.20%)</title><rect x="982" y="324" width="2" height="15" fill="rgb(248,44,53)"/><text x="985.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.40%)</title><rect x="982" y="292" width="5" height="15" fill="rgb(229,57,25)"/><text x="985.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.20%)</title><rect x="984" y="308" width="3" height="15" fill="rgb(216,100,10)"/><text x="987.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1660) (1 samples, 0.20%)</title><rect x="984" y="324" width="3" height="15" fill="rgb(226,154,3)"/><text x="987.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.99%)</title><rect x="977" y="228" width="12" height="15" fill="rgb(236,0,53)"/><text x="980.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.79%)</title><rect x="980" y="244" width="9" height="15" fill="rgb(214,130,6)"/><text x="983.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.59%)</title><rect x="982" y="260" width="7" height="15" fill="rgb(233,184,23)"/><text x="985.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.59%)</title><rect x="982" y="276" width="7" height="15" fill="rgb(233,152,8)"/><text x="985.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(209,2,53)"/><text x="990.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:302) (1 samples, 0.20%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(229,18,14)"/><text x="990.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (18 samples, 3.56%)</title><rect x="954" y="196" width="42" height="15" fill="rgb(236,40,39)"/><text x="957.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (18 samples, 3.56%)</title><rect x="954" y="212" width="42" height="15" fill="rgb(207,187,18)"/><text x="957.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:19) (3 samples, 0.59%)</title><rect x="989" y="228" width="7" height="15" fill="rgb(214,162,30)"/><text x="992.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.20%)</title><rect x="994" y="244" width="2" height="15" fill="rgb(251,154,6)"/><text x="997.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="994" y="260" width="2" height="15" fill="rgb(216,216,52)"/><text x="997.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.20%)</title><rect x="994" y="276" width="2" height="15" fill="rgb(229,153,3)"/><text x="997.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.20%)</title><rect x="994" y="292" width="2" height="15" fill="rgb(206,85,26)"/><text x="997.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:494) (1 samples, 0.20%)</title><rect x="996" y="196" width="2" height="15" fill="rgb(253,157,24)"/><text x="999.00" y="206.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="1010" y="340" width="2" height="15" fill="rgb(232,114,19)"/><text x="1013.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.40%)</title><rect x="1010" y="324" width="5" height="15" fill="rgb(217,146,30)"/><text x="1013.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.20%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(249,15,3)"/><text x="1015.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.59%)</title><rect x="1015" y="324" width="7" height="15" fill="rgb(248,16,8)"/><text x="1018.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.40%)</title><rect x="1022" y="340" width="4" height="15" fill="rgb(212,207,40)"/><text x="1025.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="1024" y="356" width="2" height="15" fill="rgb(209,57,52)"/><text x="1027.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="1026" y="356" width="3" height="15" fill="rgb(231,153,36)"/><text x="1029.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="1031" y="388" width="2" height="15" fill="rgb(230,192,54)"/><text x="1034.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="1036" y="404" width="2" height="15" fill="rgb(217,94,5)"/><text x="1039.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1036" y="420" width="2" height="15" fill="rgb(206,137,47)"/><text x="1039.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.40%)</title><rect x="1038" y="420" width="5" height="15" fill="rgb(220,161,37)"/><text x="1041.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="1043" y="468" width="2" height="15" fill="rgb(206,23,47)"/><text x="1046.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="1043" y="484" width="2" height="15" fill="rgb(235,96,5)"/><text x="1046.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.20%)</title><rect x="1043" y="500" width="2" height="15" fill="rgb(239,136,23)"/><text x="1046.00" y="510.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (9 samples, 1.78%)</title><rect x="1026" y="340" width="21" height="15" fill="rgb(212,148,45)"/><text x="1029.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 1.58%)</title><rect x="1029" y="356" width="18" height="15" fill="rgb(218,158,46)"/><text x="1032.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.58%)</title><rect x="1029" y="372" width="18" height="15" fill="rgb(220,68,21)"/><text x="1032.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.19%)</title><rect x="1033" y="388" width="14" height="15" fill="rgb(222,204,29)"/><text x="1036.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.79%)</title><rect x="1038" y="404" width="9" height="15" fill="rgb(218,21,37)"/><text x="1041.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.40%)</title><rect x="1043" y="420" width="4" height="15" fill="rgb(214,184,2)"/><text x="1046.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.40%)</title><rect x="1043" y="436" width="4" height="15" fill="rgb(236,182,39)"/><text x="1046.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (2 samples, 0.40%)</title><rect x="1043" y="452" width="4" height="15" fill="rgb(227,189,54)"/><text x="1046.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.20%)</title><rect x="1045" y="468" width="2" height="15" fill="rgb(210,152,0)"/><text x="1048.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="1047" y="356" width="3" height="15" fill="rgb(218,220,21)"/><text x="1050.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="1047" y="372" width="3" height="15" fill="rgb(246,90,14)"/><text x="1050.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="1047" y="388" width="3" height="15" fill="rgb(210,107,38)"/><text x="1050.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:121) (1 samples, 0.20%)</title><rect x="1047" y="404" width="3" height="15" fill="rgb(246,197,22)"/><text x="1050.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="1050" y="372" width="2" height="15" fill="rgb(239,199,6)"/><text x="1053.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="1050" y="388" width="2" height="15" fill="rgb(244,20,27)"/><text x="1053.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.20%)</title><rect x="1052" y="388" width="2" height="15" fill="rgb(253,189,20)"/><text x="1055.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.20%)</title><rect x="1054" y="404" width="3" height="15" fill="rgb(217,27,40)"/><text x="1057.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="1054" y="420" width="3" height="15" fill="rgb(209,227,2)"/><text x="1057.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.59%)</title><rect x="1052" y="372" width="7" height="15" fill="rgb(230,163,39)"/><text x="1055.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.40%)</title><rect x="1054" y="388" width="5" height="15" fill="rgb(251,177,13)"/><text x="1057.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.20%)</title><rect x="1057" y="404" width="2" height="15" fill="rgb(238,19,40)"/><text x="1060.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.20%)</title><rect x="1057" y="420" width="2" height="15" fill="rgb(206,223,34)"/><text x="1060.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:564) (1 samples, 0.20%)</title><rect x="1057" y="436" width="2" height="15" fill="rgb(236,12,48)"/><text x="1060.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (17 samples, 3.36%)</title><rect x="1022" y="324" width="39" height="15" fill="rgb(245,53,41)"/><text x="1025.00" y="334.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 1.19%)</title><rect x="1047" y="340" width="14" height="15" fill="rgb(209,202,48)"/><text x="1050.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.99%)</title><rect x="1050" y="356" width="11" height="15" fill="rgb(252,150,41)"/><text x="1053.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="1059" y="372" width="2" height="15" fill="rgb(217,15,4)"/><text x="1062.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.20%)</title><rect x="1059" y="388" width="2" height="15" fill="rgb(242,17,53)"/><text x="1062.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="1059" y="404" width="2" height="15" fill="rgb(227,154,14)"/><text x="1062.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="1059" y="420" width="2" height="15" fill="rgb(229,133,26)"/><text x="1062.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="1059" y="436" width="2" height="15" fill="rgb(218,95,43)"/><text x="1062.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.20%)</title><rect x="1059" y="452" width="2" height="15" fill="rgb(233,13,40)"/><text x="1062.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="1064" y="372" width="2" height="15" fill="rgb(211,11,49)"/><text x="1067.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.20%)</title><rect x="1064" y="388" width="2" height="15" fill="rgb(217,141,43)"/><text x="1067.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.20%)</title><rect x="1064" y="404" width="2" height="15" fill="rgb(222,108,29)"/><text x="1067.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="1066" y="372" width="2" height="15" fill="rgb(216,130,1)"/><text x="1069.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="1066" y="388" width="2" height="15" fill="rgb(232,177,34)"/><text x="1069.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1875) (1 samples, 0.20%)</title><rect x="1066" y="404" width="2" height="15" fill="rgb(228,140,39)"/><text x="1069.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="1068" y="420" width="3" height="15" fill="rgb(234,91,17)"/><text x="1071.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="1071" y="420" width="2" height="15" fill="rgb(233,172,16)"/><text x="1074.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.20%)</title><rect x="1071" y="436" width="2" height="15" fill="rgb(251,131,34)"/><text x="1074.00" y="446.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:963) (1 samples, 0.20%)</title><rect x="1071" y="452" width="2" height="15" fill="rgb(254,193,43)"/><text x="1074.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.59%)</title><rect x="1068" y="404" width="7" height="15" fill="rgb(228,169,37)"/><text x="1071.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="1073" y="420" width="2" height="15" fill="rgb(247,214,35)"/><text x="1076.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.20%)</title><rect x="1073" y="436" width="2" height="15" fill="rgb(226,50,13)"/><text x="1076.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="1075" y="404" width="3" height="15" fill="rgb(223,214,2)"/><text x="1078.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.20%)</title><rect x="1075" y="420" width="3" height="15" fill="rgb(238,160,22)"/><text x="1078.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.20%)</title><rect x="1075" y="436" width="3" height="15" fill="rgb(252,6,45)"/><text x="1078.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.20%)</title><rect x="1075" y="452" width="3" height="15" fill="rgb(235,103,31)"/><text x="1078.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="1075" y="468" width="3" height="15" fill="rgb(227,17,21)"/><text x="1078.00" y="478.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (8 samples, 1.58%)</title><rect x="1061" y="324" width="19" height="15" fill="rgb(242,222,12)"/><text x="1064.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 1.38%)</title><rect x="1064" y="340" width="16" height="15" fill="rgb(244,101,8)"/><text x="1067.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.38%)</title><rect x="1064" y="356" width="16" height="15" fill="rgb(250,56,3)"/><text x="1067.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.99%)</title><rect x="1068" y="372" width="12" height="15" fill="rgb(250,15,37)"/><text x="1071.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.99%)</title><rect x="1068" y="388" width="12" height="15" fill="rgb(246,205,29)"/><text x="1071.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.20%)</title><rect x="1078" y="404" width="2" height="15" fill="rgb(221,170,26)"/><text x="1081.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.20%)</title><rect x="1078" y="420" width="2" height="15" fill="rgb(223,124,35)"/><text x="1081.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (111 samples, 21.94%)</title><rect x="823" y="180" width="259" height="15" fill="rgb(237,119,54)"/><text x="826.00" y="190.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (36 samples, 7.11%)</title><rect x="998" y="196" width="84" height="15" fill="rgb(224,219,0)"/><text x="1001.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (36 samples, 7.11%)</title><rect x="998" y="212" width="84" height="15" fill="rgb(220,176,42)"/><text x="1001.00" y="222.50">_run (mlp..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (34 samples, 6.72%)</title><rect x="1003" y="228" width="79" height="15" fill="rgb(240,96,6)"/><text x="1006.00" y="238.50">clip (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (33 samples, 6.52%)</title><rect x="1005" y="244" width="77" height="15" fill="rgb(219,194,44)"/><text x="1008.00" y="254.50">array_im..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (32 samples, 6.32%)</title><rect x="1008" y="260" width="74" height="15" fill="rgb(234,194,6)"/><text x="1011.00" y="270.50">clip (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 6.32%)</title><rect x="1008" y="276" width="74" height="15" fill="rgb(215,223,9)"/><text x="1011.00" y="286.50">_wrapfun..</text></g><g><title>array_clip (methods.c:2381) (32 samples, 6.32%)</title><rect x="1008" y="292" width="74" height="15" fill="rgb(212,8,6)"/><text x="1011.00" y="302.50">array_cl..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 6.32%)</title><rect x="1008" y="308" width="74" height="15" fill="rgb(239,148,1)"/><text x="1011.00" y="318.50">forward_..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.20%)</title><rect x="1080" y="324" width="2" height="15" fill="rgb(222,100,35)"/><text x="1083.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.59%)</title><rect x="1082" y="180" width="7" height="15" fill="rgb(236,95,24)"/><text x="1085.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.59%)</title><rect x="1089" y="180" width="7" height="15" fill="rgb(227,125,11)"/><text x="1092.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.40%)</title><rect x="1096" y="180" width="5" height="15" fill="rgb(207,171,1)"/><text x="1099.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (15 samples, 2.96%)</title><rect x="1101" y="180" width="35" height="15" fill="rgb(238,207,12)"/><text x="1104.00" y="190.50">ru..</text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:45) (220 samples, 43.48%)</title><rect x="630" y="52" width="513" height="15" fill="rgb(221,52,6)"/><text x="633.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:44) (220 samples, 43.48%)</title><rect x="630" y="68" width="513" height="15" fill="rgb(237,20,18)"/><text x="633.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (217 samples, 42.89%)</title><rect x="637" y="84" width="506" height="15" fill="rgb(214,91,1)"/><text x="640.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.p..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (161 samples, 31.82%)</title><rect x="767" y="100" width="376" height="15" fill="rgb(241,4,47)"/><text x="770.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (161 samples, 31.82%)</title><rect x="767" y="116" width="376" height="15" fill="rgb(234,45,51)"/><text x="770.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (161 samples, 31.82%)</title><rect x="767" y="132" width="376" height="15" fill="rgb(237,14,46)"/><text x="770.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (161 samples, 31.82%)</title><rect x="767" y="148" width="376" height="15" fill="rgb(213,163,6)"/><text x="770.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (160 samples, 31.62%)</title><rect x="770" y="164" width="373" height="15" fill="rgb(223,225,9)"/><text x="773.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.59%)</title><rect x="1136" y="180" width="7" height="15" fill="rgb(238,50,53)"/><text x="1139.00" y="190.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.20%)</title><rect x="1143" y="116" width="2" height="15" fill="rgb(247,168,34)"/><text x="1146.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.20%)</title><rect x="1143" y="132" width="2" height="15" fill="rgb(238,85,51)"/><text x="1146.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.20%)</title><rect x="1143" y="148" width="2" height="15" fill="rgb(248,63,38)"/><text x="1146.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.20%)</title><rect x="1143" y="164" width="2" height="15" fill="rgb(211,125,5)"/><text x="1146.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.20%)</title><rect x="1143" y="180" width="2" height="15" fill="rgb(240,16,4)"/><text x="1146.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="1143" y="196" width="2" height="15" fill="rgb(220,114,52)"/><text x="1146.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:437) (1 samples, 0.20%)</title><rect x="1143" y="212" width="2" height="15" fill="rgb(238,224,53)"/><text x="1146.00" y="222.50"></text></g><g><title>0x7fc5daa91af0 (?) (1 samples, 0.20%)</title><rect x="1145" y="564" width="3" height="15" fill="rgb(236,200,39)"/><text x="1148.00" y="574.50"></text></g><g><title>0x7fc5daaa41d2 (?) (1 samples, 0.20%)</title><rect x="1145" y="580" width="3" height="15" fill="rgb(250,51,32)"/><text x="1148.00" y="590.50"></text></g><g><title>0x7fc5daaa37b8 (?) (1 samples, 0.20%)</title><rect x="1145" y="596" width="3" height="15" fill="rgb(232,26,35)"/><text x="1148.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="1145" y="612" width="3" height="15" fill="rgb(250,215,25)"/><text x="1148.00" y="622.50"></text></g><g><title>0x7fc5daaa172a (?) (1 samples, 0.20%)</title><rect x="1145" y="628" width="3" height="15" fill="rgb(234,143,42)"/><text x="1148.00" y="638.50"></text></g><g><title>0x7fc5daa9e73f (?) (1 samples, 0.20%)</title><rect x="1145" y="644" width="3" height="15" fill="rgb(239,53,29)"/><text x="1148.00" y="654.50"></text></g><g><title>0x7fc5db0604b1 (?) (1 samples, 0.20%)</title><rect x="1145" y="660" width="3" height="15" fill="rgb(211,65,4)"/><text x="1148.00" y="670.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.40%)</title><rect x="1145" y="164" width="5" height="15" fill="rgb(244,206,22)"/><text x="1148.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="1145" y="180" width="5" height="15" fill="rgb(232,157,34)"/><text x="1148.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="1145" y="196" width="5" height="15" fill="rgb(207,161,32)"/><text x="1148.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="1145" y="212" width="5" height="15" fill="rgb(207,129,11)"/><text x="1148.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="1145" y="228" width="5" height="15" fill="rgb(207,189,42)"/><text x="1148.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="1145" y="244" width="5" height="15" fill="rgb(230,177,36)"/><text x="1148.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.40%)</title><rect x="1145" y="260" width="5" height="15" fill="rgb(250,39,24)"/><text x="1148.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="1145" y="276" width="5" height="15" fill="rgb(254,108,17)"/><text x="1148.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="1145" y="292" width="5" height="15" fill="rgb(251,69,30)"/><text x="1148.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="1145" y="308" width="5" height="15" fill="rgb(215,188,51)"/><text x="1148.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="1145" y="324" width="5" height="15" fill="rgb(248,173,40)"/><text x="1148.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="1145" y="340" width="5" height="15" fill="rgb(236,23,11)"/><text x="1148.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.40%)</title><rect x="1145" y="356" width="5" height="15" fill="rgb(236,6,36)"/><text x="1148.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="1145" y="372" width="5" height="15" fill="rgb(244,139,21)"/><text x="1148.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="1145" y="388" width="5" height="15" fill="rgb(239,164,21)"/><text x="1148.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="1145" y="404" width="5" height="15" fill="rgb(230,225,35)"/><text x="1148.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="1145" y="420" width="5" height="15" fill="rgb(232,36,22)"/><text x="1148.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="1145" y="436" width="5" height="15" fill="rgb(238,104,0)"/><text x="1148.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.40%)</title><rect x="1145" y="452" width="5" height="15" fill="rgb(235,111,36)"/><text x="1148.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="1145" y="468" width="5" height="15" fill="rgb(234,171,51)"/><text x="1148.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="1145" y="484" width="5" height="15" fill="rgb(243,80,11)"/><text x="1148.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.40%)</title><rect x="1145" y="500" width="5" height="15" fill="rgb(224,118,22)"/><text x="1148.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.40%)</title><rect x="1145" y="516" width="5" height="15" fill="rgb(226,60,38)"/><text x="1148.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.40%)</title><rect x="1145" y="532" width="5" height="15" fill="rgb(233,218,29)"/><text x="1148.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="1145" y="548" width="5" height="15" fill="rgb(216,8,1)"/><text x="1148.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="564" width="2" height="15" fill="rgb(207,41,41)"/><text x="1151.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="580" width="2" height="15" fill="rgb(236,10,31)"/><text x="1151.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="596" width="2" height="15" fill="rgb(222,222,27)"/><text x="1151.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="1148" y="612" width="2" height="15" fill="rgb(218,197,23)"/><text x="1151.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="628" width="2" height="15" fill="rgb(244,30,40)"/><text x="1151.00" y="638.50"></text></g><g><title>onnx::RegisterSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="644" width="2" height="15" fill="rgb(253,75,33)"/><text x="1151.00" y="654.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1148" y="660" width="2" height="15" fill="rgb(244,154,42)"/><text x="1151.00" y="670.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1148" y="676" width="2" height="15" fill="rgb(230,2,36)"/><text x="1151.00" y="686.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1148" y="692" width="2" height="15" fill="rgb(253,72,25)"/><text x="1151.00" y="702.50"></text></g><g><title>0x7fc61adcd8a4 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1148" y="708" width="2" height="15" fill="rgb(221,75,44)"/><text x="1151.00" y="718.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:28) (4 samples, 0.79%)</title><rect x="1143" y="84" width="9" height="15" fill="rgb(212,21,4)"/><text x="1146.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 0.79%)</title><rect x="1143" y="100" width="9" height="15" fill="rgb(230,186,22)"/><text x="1146.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (3 samples, 0.59%)</title><rect x="1145" y="116" width="7" height="15" fill="rgb(254,103,4)"/><text x="1148.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (3 samples, 0.59%)</title><rect x="1145" y="132" width="7" height="15" fill="rgb(232,42,31)"/><text x="1148.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (3 samples, 0.59%)</title><rect x="1145" y="148" width="7" height="15" fill="rgb(241,104,25)"/><text x="1148.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.20%)</title><rect x="1150" y="164" width="2" height="15" fill="rgb(234,99,8)"/><text x="1153.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:37) (1 samples, 0.20%)</title><rect x="1150" y="180" width="2" height="15" fill="rgb(236,169,20)"/><text x="1153.00" y="190.50"></text></g><g><title>0x7fc60911c2dd (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="196" width="2" height="15" fill="rgb(233,200,36)"/><text x="1153.00" y="206.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="212" width="2" height="15" fill="rgb(215,28,3)"/><text x="1153.00" y="222.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="228" width="2" height="15" fill="rgb(208,155,1)"/><text x="1153.00" y="238.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="244" width="2" height="15" fill="rgb(207,43,22)"/><text x="1153.00" y="254.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="260" width="2" height="15" fill="rgb(231,214,16)"/><text x="1153.00" y="270.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="276" width="2" height="15" fill="rgb(249,167,29)"/><text x="1153.00" y="286.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="292" width="2" height="15" fill="rgb(243,226,27)"/><text x="1153.00" y="302.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="308" width="2" height="15" fill="rgb(247,84,50)"/><text x="1153.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="324" width="2" height="15" fill="rgb(252,153,29)"/><text x="1153.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="340" width="2" height="15" fill="rgb(235,196,52)"/><text x="1153.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::RepeatedPtrFieldBase&gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="356" width="2" height="15" fill="rgb(239,193,1)"/><text x="1153.00" y="366.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1150" y="372" width="2" height="15" fill="rgb(219,133,41)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1152" y="340" width="3" height="15" fill="rgb(247,83,13)"/><text x="1155.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1152" y="356" width="3" height="15" fill="rgb(214,107,12)"/><text x="1155.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1152" y="372" width="3" height="15" fill="rgb(205,83,52)"/><text x="1155.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1152" y="388" width="3" height="15" fill="rgb(214,160,21)"/><text x="1155.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1152" y="404" width="3" height="15" fill="rgb(239,142,12)"/><text x="1155.00" y="414.50"></text></g><g><title>0x7fc61adcbd07 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1152" y="420" width="3" height="15" fill="rgb(240,36,27)"/><text x="1155.00" y="430.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1155" y="372" width="2" height="15" fill="rgb(228,108,15)"/><text x="1158.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1155" y="340" width="4" height="15" fill="rgb(230,6,41)"/><text x="1158.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1155" y="356" width="4" height="15" fill="rgb(234,7,39)"/><text x="1158.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1157" y="372" width="2" height="15" fill="rgb(234,89,44)"/><text x="1160.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1157" y="388" width="2" height="15" fill="rgb(251,32,54)"/><text x="1160.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1157" y="404" width="2" height="15" fill="rgb(213,1,40)"/><text x="1160.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1157" y="420" width="2" height="15" fill="rgb(222,170,39)"/><text x="1160.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1157" y="436" width="2" height="15" fill="rgb(233,76,14)"/><text x="1160.00" y="446.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1159" y="340" width="3" height="15" fill="rgb(212,103,39)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1159" y="356" width="3" height="15" fill="rgb(250,74,33)"/><text x="1162.00" y="366.50"></text></g><g><title>0x7fc61adcba4d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1159" y="372" width="3" height="15" fill="rgb(248,222,34)"/><text x="1162.00" y="382.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1162" y="340" width="2" height="15" fill="rgb(231,58,28)"/><text x="1165.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1162" y="356" width="2" height="15" fill="rgb(208,40,40)"/><text x="1165.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1162" y="372" width="2" height="15" fill="rgb(250,9,23)"/><text x="1165.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1162" y="388" width="2" height="15" fill="rgb(242,198,27)"/><text x="1165.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:18) (6 samples, 1.19%)</title><rect x="1152" y="100" width="14" height="15" fill="rgb(237,14,48)"/><text x="1155.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.19%)</title><rect x="1152" y="116" width="14" height="15" fill="rgb(242,209,6)"/><text x="1155.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 1.19%)</title><rect x="1152" y="132" width="14" height="15" fill="rgb(210,80,42)"/><text x="1155.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 1.19%)</title><rect x="1152" y="148" width="14" height="15" fill="rgb(213,29,23)"/><text x="1155.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 1.19%)</title><rect x="1152" y="164" width="14" height="15" fill="rgb(211,62,37)"/><text x="1155.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 1.19%)</title><rect x="1152" y="180" width="14" height="15" fill="rgb(241,211,50)"/><text x="1155.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 1.19%)</title><rect x="1152" y="196" width="14" height="15" fill="rgb(211,160,12)"/><text x="1155.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="212" width="14" height="15" fill="rgb(234,53,47)"/><text x="1155.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="228" width="14" height="15" fill="rgb(248,66,9)"/><text x="1155.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="244" width="14" height="15" fill="rgb(252,90,28)"/><text x="1155.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="260" width="14" height="15" fill="rgb(221,91,3)"/><text x="1155.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="276" width="14" height="15" fill="rgb(211,160,52)"/><text x="1155.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="292" width="14" height="15" fill="rgb(225,204,8)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="308" width="14" height="15" fill="rgb(225,217,45)"/><text x="1155.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.19%)</title><rect x="1152" y="324" width="14" height="15" fill="rgb(205,38,40)"/><text x="1155.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1164" y="340" width="2" height="15" fill="rgb(235,225,11)"/><text x="1167.00" y="350.50"></text></g><g><title>0x7fc61adcb961 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1164" y="356" width="2" height="15" fill="rgb(235,145,32)"/><text x="1167.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1171" y="340" width="2" height="15" fill="rgb(242,22,20)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1171" y="356" width="2" height="15" fill="rgb(223,167,9)"/><text x="1174.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1171" y="372" width="2" height="15" fill="rgb(233,95,34)"/><text x="1174.00" y="382.50"></text></g><g><title>0x7fc61adcba4d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1171" y="388" width="2" height="15" fill="rgb(225,109,28)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7fc61adcd77b (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1173" y="516" width="3" height="15" fill="rgb(230,76,4)"/><text x="1176.00" y="526.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="340" width="5" height="15" fill="rgb(231,73,28)"/><text x="1176.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="356" width="5" height="15" fill="rgb(245,200,54)"/><text x="1176.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="372" width="5" height="15" fill="rgb(233,77,11)"/><text x="1176.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="388" width="5" height="15" fill="rgb(234,223,23)"/><text x="1176.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="404" width="5" height="15" fill="rgb(230,29,39)"/><text x="1176.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="420" width="5" height="15" fill="rgb(250,207,50)"/><text x="1176.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="436" width="5" height="15" fill="rgb(213,219,19)"/><text x="1176.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="452" width="5" height="15" fill="rgb(247,171,39)"/><text x="1176.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="468" width="5" height="15" fill="rgb(235,49,48)"/><text x="1176.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.40%)</title><rect x="1173" y="484" width="5" height="15" fill="rgb(206,213,53)"/><text x="1176.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.40%)</title><rect x="1173" y="500" width="5" height="15" fill="rgb(253,146,26)"/><text x="1176.00" y="510.50"></text></g><g><title>0x7fc61adcd80d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1176" y="516" width="2" height="15" fill="rgb(229,48,20)"/><text x="1179.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="372" width="2" height="15" fill="rgb(210,70,36)"/><text x="1181.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="388" width="2" height="15" fill="rgb(239,158,21)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="404" width="2" height="15" fill="rgb(224,49,24)"/><text x="1181.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="420" width="2" height="15" fill="rgb(231,118,6)"/><text x="1181.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="436" width="2" height="15" fill="rgb(253,184,30)"/><text x="1181.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="452" width="2" height="15" fill="rgb(216,109,18)"/><text x="1181.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="468" width="2" height="15" fill="rgb(236,126,34)"/><text x="1181.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="484" width="2" height="15" fill="rgb(243,105,21)"/><text x="1181.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="500" width="2" height="15" fill="rgb(250,51,35)"/><text x="1181.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="516" width="2" height="15" fill="rgb(212,16,40)"/><text x="1181.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1178" y="532" width="2" height="15" fill="rgb(234,229,21)"/><text x="1181.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1178" y="548" width="2" height="15" fill="rgb(253,9,36)"/><text x="1181.00" y="558.50"></text></g><g><title>0x7fc61adcd00a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1178" y="564" width="2" height="15" fill="rgb(240,71,19)"/><text x="1181.00" y="574.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1178" y="340" width="5" height="15" fill="rgb(234,227,10)"/><text x="1181.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1178" y="356" width="5" height="15" fill="rgb(219,90,43)"/><text x="1181.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1180" y="372" width="3" height="15" fill="rgb(206,85,19)"/><text x="1183.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1180" y="388" width="3" height="15" fill="rgb(206,156,10)"/><text x="1183.00" y="398.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(223,23,49)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(241,104,14)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(210,94,14)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="388" width="2" height="15" fill="rgb(222,216,20)"/><text x="1186.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="404" width="2" height="15" fill="rgb(211,179,25)"/><text x="1186.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="420" width="2" height="15" fill="rgb(237,156,26)"/><text x="1186.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="436" width="2" height="15" fill="rgb(244,180,16)"/><text x="1186.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1183" y="452" width="2" height="15" fill="rgb(216,8,2)"/><text x="1186.00" y="462.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="356" width="2" height="15" fill="rgb(239,215,38)"/><text x="1188.00" y="366.50"></text></g><g><title>all (506 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,29,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:52) (20 samples, 3.95%)</title><rect x="1143" y="52" width="47" height="15" fill="rgb(251,124,38)"/><text x="1146.00" y="62.50">&lt;mod..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:51) (20 samples, 3.95%)</title><rect x="1143" y="68" width="47" height="15" fill="rgb(248,86,38)"/><text x="1146.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:29) (16 samples, 3.16%)</title><rect x="1152" y="84" width="38" height="15" fill="rgb(211,175,30)"/><text x="1155.00" y="94.50">set..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py:23) (10 samples, 1.98%)</title><rect x="1166" y="100" width="24" height="15" fill="rgb(237,44,35)"/><text x="1169.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (10 samples, 1.98%)</title><rect x="1166" y="116" width="24" height="15" fill="rgb(249,118,12)"/><text x="1169.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (10 samples, 1.98%)</title><rect x="1166" y="132" width="24" height="15" fill="rgb(243,191,15)"/><text x="1169.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (10 samples, 1.98%)</title><rect x="1166" y="148" width="24" height="15" fill="rgb(239,42,19)"/><text x="1169.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (10 samples, 1.98%)</title><rect x="1166" y="164" width="24" height="15" fill="rgb(218,151,37)"/><text x="1169.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (10 samples, 1.98%)</title><rect x="1166" y="180" width="24" height="15" fill="rgb(235,11,6)"/><text x="1169.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:136) (10 samples, 1.98%)</title><rect x="1166" y="196" width="24" height="15" fill="rgb(206,18,51)"/><text x="1169.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.98%)</title><rect x="1166" y="212" width="24" height="15" fill="rgb(206,37,21)"/><text x="1169.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.98%)</title><rect x="1166" y="228" width="24" height="15" fill="rgb(220,88,53)"/><text x="1169.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.98%)</title><rect x="1166" y="244" width="24" height="15" fill="rgb(235,122,19)"/><text x="1169.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.78%)</title><rect x="1169" y="260" width="21" height="15" fill="rgb(235,144,11)"/><text x="1172.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.78%)</title><rect x="1169" y="276" width="21" height="15" fill="rgb(240,68,40)"/><text x="1172.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.78%)</title><rect x="1169" y="292" width="21" height="15" fill="rgb(211,28,21)"/><text x="1172.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.78%)</title><rect x="1169" y="308" width="21" height="15" fill="rgb(247,105,23)"/><text x="1172.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.78%)</title><rect x="1169" y="324" width="21" height="15" fill="rgb(234,0,19)"/><text x="1172.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(223,80,4)"/><text x="1188.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(222,100,23)"/><text x="1190.00" y="366.50"></text></g><g><title>0x7fc61adcba55 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(238,209,38)"/><text x="1190.00" y="382.50"></text></g></g></svg>