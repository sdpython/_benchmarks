<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.16%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(226,82,41)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="10" y="1076" width="1" height="15" fill="rgb(206,144,8)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="10" y="1092" width="1" height="15" fill="rgb(212,144,22)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="10" y="1108" width="1" height="15" fill="rgb(221,91,13)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="10" y="1124" width="1" height="15" fill="rgb(241,117,37)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="10" y="1140" width="1" height="15" fill="rgb(228,107,38)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.16%)</title><rect x="10" y="1156" width="1" height="15" fill="rgb(211,123,51)"/><text x="13.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.16%)</title><rect x="10" y="1172" width="1" height="15" fill="rgb(238,206,17)"/><text x="13.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.16%)</title><rect x="10" y="1188" width="1" height="15" fill="rgb(240,189,2)"/><text x="13.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.16%)</title><rect x="10" y="1204" width="1" height="15" fill="rgb(231,170,27)"/><text x="13.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.16%)</title><rect x="10" y="1220" width="1" height="15" fill="rgb(205,103,13)"/><text x="13.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.16%)</title><rect x="10" y="1236" width="1" height="15" fill="rgb(214,103,37)"/><text x="13.00" y="1246.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.16%)</title><rect x="10" y="1252" width="1" height="15" fill="rgb(242,168,41)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(241,10,2)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(245,185,8)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(233,181,33)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(243,26,41)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(219,162,1)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1060" width="2" height="15" fill="rgb(252,75,51)"/><text x="14.00" y="1070.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1076" width="2" height="15" fill="rgb(247,51,48)"/><text x="14.00" y="1086.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1092" width="2" height="15" fill="rgb(249,24,33)"/><text x="14.00" y="1102.50"></text></g><g><title>parse (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1108" width="2" height="15" fill="rgb(212,1,14)"/><text x="14.00" y="1118.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1124" width="2" height="15" fill="rgb(219,98,16)"/><text x="14.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="1140" width="2" height="15" fill="rgb(208,183,2)"/><text x="14.00" y="1150.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.16%)</title><rect x="11" y="1156" width="2" height="15" fill="rgb(232,201,39)"/><text x="14.00" y="1166.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1172" width="2" height="15" fill="rgb(210,71,37)"/><text x="14.00" y="1182.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1188" width="2" height="15" fill="rgb(219,227,18)"/><text x="14.00" y="1198.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1204" width="2" height="15" fill="rgb(244,102,51)"/><text x="14.00" y="1214.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1220" width="2" height="15" fill="rgb(236,4,15)"/><text x="14.00" y="1230.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1236" width="2" height="15" fill="rgb(239,226,15)"/><text x="14.00" y="1246.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1252" width="2" height="15" fill="rgb(238,19,22)"/><text x="14.00" y="1262.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1268" width="2" height="15" fill="rgb(230,112,26)"/><text x="14.00" y="1278.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1284" width="2" height="15" fill="rgb(254,152,12)"/><text x="14.00" y="1294.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1300" width="2" height="15" fill="rgb(227,92,25)"/><text x="14.00" y="1310.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1316" width="2" height="15" fill="rgb(247,55,29)"/><text x="14.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1332" width="2" height="15" fill="rgb(212,134,4)"/><text x="14.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1348" width="2" height="15" fill="rgb(206,50,13)"/><text x="14.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1364" width="2" height="15" fill="rgb(223,206,38)"/><text x="14.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1380" width="2" height="15" fill="rgb(212,192,10)"/><text x="14.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1396" width="2" height="15" fill="rgb(216,81,23)"/><text x="14.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1412" width="2" height="15" fill="rgb(253,65,33)"/><text x="14.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1428" width="2" height="15" fill="rgb(240,13,31)"/><text x="14.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1444" width="2" height="15" fill="rgb(214,203,39)"/><text x="14.00" y="1454.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1460" width="2" height="15" fill="rgb(253,200,45)"/><text x="14.00" y="1470.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1476" width="2" height="15" fill="rgb(254,15,1)"/><text x="14.00" y="1486.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1492" width="2" height="15" fill="rgb(207,228,11)"/><text x="14.00" y="1502.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1508" width="2" height="15" fill="rgb(219,80,1)"/><text x="14.00" y="1518.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1524" width="2" height="15" fill="rgb(252,135,38)"/><text x="14.00" y="1534.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1540" width="2" height="15" fill="rgb(213,226,48)"/><text x="14.00" y="1550.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1556" width="2" height="15" fill="rgb(236,216,13)"/><text x="14.00" y="1566.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1572" width="2" height="15" fill="rgb(250,29,25)"/><text x="14.00" y="1582.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1588" width="2" height="15" fill="rgb(209,149,0)"/><text x="14.00" y="1598.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1604" width="2" height="15" fill="rgb(223,51,25)"/><text x="14.00" y="1614.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1620" width="2" height="15" fill="rgb(217,27,40)"/><text x="14.00" y="1630.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1636" width="2" height="15" fill="rgb(209,2,27)"/><text x="14.00" y="1646.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1652" width="2" height="15" fill="rgb(206,165,17)"/><text x="14.00" y="1662.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="11" y="1668" width="2" height="15" fill="rgb(240,194,44)"/><text x="14.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(240,85,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(236,166,0)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(226,176,34)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(238,186,52)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(228,164,32)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(238,210,18)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.47%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(249,82,41)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(243,220,47)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(222,88,20)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(223,187,15)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(241,88,33)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(215,209,39)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(244,37,26)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(241,172,31)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(234,70,9)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(250,206,40)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(227,94,23)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(235,87,17)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(246,102,7)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(250,1,54)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(236,15,49)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.47%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(245,12,50)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(211,66,49)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(248,188,39)"/><text x="16.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(233,70,46)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(229,149,53)"/><text x="16.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1044" width="2" height="15" fill="rgb(206,147,30)"/><text x="16.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="13" y="1060" width="2" height="15" fill="rgb(231,159,4)"/><text x="16.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1076" width="2" height="15" fill="rgb(238,25,19)"/><text x="16.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="1092" width="2" height="15" fill="rgb(226,175,50)"/><text x="16.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1108" width="2" height="15" fill="rgb(238,4,38)"/><text x="16.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(212,105,30)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1140" width="2" height="15" fill="rgb(209,67,18)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1156" width="2" height="15" fill="rgb(220,130,24)"/><text x="16.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1172" width="2" height="15" fill="rgb(229,32,54)"/><text x="16.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(226,140,1)"/><text x="16.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(235,180,5)"/><text x="16.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.16%)</title><rect x="13" y="1220" width="2" height="15" fill="rgb(236,81,15)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1236" width="2" height="15" fill="rgb(215,102,33)"/><text x="16.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1252" width="2" height="15" fill="rgb(225,134,25)"/><text x="16.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1268" width="2" height="15" fill="rgb(208,35,6)"/><text x="16.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="13" y="1284" width="2" height="15" fill="rgb(211,189,37)"/><text x="16.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1300" width="2" height="15" fill="rgb(221,211,4)"/><text x="16.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="13" y="1316" width="2" height="15" fill="rgb(250,159,38)"/><text x="16.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="13" y="1332" width="2" height="15" fill="rgb(233,132,21)"/><text x="16.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="13" y="1348" width="2" height="15" fill="rgb(217,93,31)"/><text x="16.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="13" y="1364" width="2" height="15" fill="rgb(247,133,0)"/><text x="16.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.16%)</title><rect x="13" y="1380" width="2" height="15" fill="rgb(216,1,47)"/><text x="16.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="13" y="1396" width="2" height="15" fill="rgb(250,80,27)"/><text x="16.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="13" y="1412" width="2" height="15" fill="rgb(217,19,17)"/><text x="16.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.16%)</title><rect x="13" y="1428" width="2" height="15" fill="rgb(222,69,39)"/><text x="16.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(246,7,13)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(231,112,33)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(252,62,10)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(224,131,13)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(241,135,19)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(235,29,1)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(216,192,43)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(249,7,47)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(240,105,21)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(212,142,47)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(247,8,26)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(243,130,26)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.63%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(213,79,31)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(246,65,54)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(231,181,38)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(206,126,28)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(211,209,28)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(215,218,4)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(241,91,48)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(207,181,49)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(232,198,54)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(254,204,37)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(249,153,27)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(205,196,41)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.16%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(254,151,26)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(209,95,9)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(240,95,44)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(237,155,42)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(213,18,8)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(242,132,30)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(254,30,37)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(230,190,26)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(246,15,8)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(229,7,27)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(251,117,27)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(218,52,26)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(229,79,25)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(229,124,54)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(222,168,42)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(231,206,37)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(207,215,41)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(244,96,0)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(212,229,36)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(252,17,24)"/><text x="18.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(233,174,34)"/><text x="18.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(214,20,14)"/><text x="18.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(251,66,53)"/><text x="18.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(253,173,49)"/><text x="18.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.16%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(229,23,48)"/><text x="18.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(224,2,36)"/><text x="18.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(249,12,22)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(222,207,26)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(242,203,28)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(208,89,37)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(235,188,47)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(232,126,52)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.16%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(207,32,53)"/><text x="18.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(215,32,16)"/><text x="18.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(239,218,4)"/><text x="18.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(215,211,32)"/><text x="18.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(240,39,1)"/><text x="18.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(210,149,6)"/><text x="18.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(227,216,21)"/><text x="18.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(212,58,28)"/><text x="18.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.16%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(254,211,29)"/><text x="18.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(212,142,13)"/><text x="18.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(247,30,13)"/><text x="18.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.16%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(225,176,32)"/><text x="18.00" y="1422.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.16%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(213,27,13)"/><text x="18.00" y="1438.50"></text></g><g><title>unicode_lstrip (python3.7) (1 samples, 0.16%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(233,4,34)"/><text x="18.00" y="1454.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.16%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(230,94,35)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(229,155,24)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(251,166,40)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(213,76,13)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(242,200,49)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(227,196,53)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.16%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(231,179,25)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(220,128,5)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(215,67,42)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(223,81,36)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(237,182,4)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(230,191,27)"/><text x="20.00" y="766.50"></text></g><g><title>0x7fed1351140e (?) (1 samples, 0.16%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(219,71,25)"/><text x="20.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(221,80,42)"/><text x="20.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(218,63,15)"/><text x="20.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(235,199,49)"/><text x="20.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(239,42,14)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(214,208,4)"/><text x="20.00" y="862.50"></text></g><g><title>0x7fed132cacd2 (?) (1 samples, 0.16%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(241,69,23)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(251,101,24)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(238,71,51)"/><text x="20.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(233,189,41)"/><text x="20.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(222,91,27)"/><text x="20.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(214,0,25)"/><text x="20.00" y="958.50"></text></g><g><title>0x7fed129c00e5 (?) (1 samples, 0.16%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(252,221,53)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(239,195,51)"/><text x="20.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(247,133,0)"/><text x="20.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(232,126,36)"/><text x="20.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(247,61,49)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(221,27,23)"/><text x="20.00" y="1054.50"></text></g><g><title>0x7fed12744e68 (?) (1 samples, 0.16%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(220,197,42)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(231,210,52)"/><text x="20.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(248,227,29)"/><text x="20.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(205,34,32)"/><text x="20.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(217,26,9)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(217,109,52)"/><text x="20.00" y="1150.50"></text></g><g><title>0x7fed124d52fb (?) (1 samples, 0.16%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(242,185,17)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(225,111,22)"/><text x="20.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(250,62,47)"/><text x="20.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(217,216,52)"/><text x="20.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(231,115,23)"/><text x="20.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(236,85,32)"/><text x="20.00" y="1246.50"></text></g><g><title>0x7fed122b9153 (?) (1 samples, 0.16%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(243,97,4)"/><text x="20.00" y="1262.50"></text></g><g><title>0x7fed122b7c13 (?) (1 samples, 0.16%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(209,153,48)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(208,61,7)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(222,133,49)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(231,154,12)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(229,91,12)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(206,176,43)"/><text x="20.00" y="1358.50"></text></g><g><title>0x7fed12054181 (?) (1 samples, 0.16%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(218,111,48)"/><text x="20.00" y="1374.50"></text></g><g><title>0x7fed120571c9 (?) (1 samples, 0.16%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(247,175,52)"/><text x="20.00" y="1390.50"></text></g><g><title>0x7fed12083167 (?) (1 samples, 0.16%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(254,14,25)"/><text x="20.00" y="1406.50"></text></g><g><title>0x7fed12082e64 (?) (1 samples, 0.16%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(225,129,16)"/><text x="20.00" y="1422.50"></text></g><g><title>0x7fed120571c9 (?) (1 samples, 0.16%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(218,172,8)"/><text x="20.00" y="1438.50"></text></g><g><title>0x7fed12078977 (?) (1 samples, 0.16%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(213,134,10)"/><text x="20.00" y="1454.50"></text></g><g><title>0x7fed12050878 (?) (1 samples, 0.16%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(247,100,10)"/><text x="20.00" y="1470.50"></text></g><g><title>0x7fed120571c9 (?) (1 samples, 0.16%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(249,138,28)"/><text x="20.00" y="1486.50"></text></g><g><title>0x7fed12083c4c (?) (1 samples, 0.16%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(210,161,40)"/><text x="20.00" y="1502.50"></text></g><g><title>__getitem__ (calendar.py) (1 samples, 0.16%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(209,208,53)"/><text x="20.00" y="1518.50"></text></g><g><title>0x7fed1c1d9104 (?) (1 samples, 0.16%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(236,151,52)"/><text x="20.00" y="1534.50"></text></g><g><title>0x7fed1c1d925d (?) (1 samples, 0.16%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(239,185,16)"/><text x="20.00" y="1550.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py) (1 samples, 0.16%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(225,133,15)"/><text x="22.00" y="894.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.16%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(245,72,54)"/><text x="22.00" y="910.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.16%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(235,221,31)"/><text x="22.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.16%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(254,104,39)"/><text x="22.00" y="942.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(222,30,20)"/><text x="22.00" y="958.50"></text></g><g><title>aliased_name (matplotlib/artist.py) (1 samples, 0.16%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(250,61,40)"/><text x="24.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.26%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(244,67,2)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(209,214,44)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(205,45,47)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="340" width="7" height="15" fill="rgb(227,157,32)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="17" y="356" width="7" height="15" fill="rgb(239,192,49)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="372" width="7" height="15" fill="rgb(211,145,41)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.63%)</title><rect x="17" y="388" width="7" height="15" fill="rgb(210,145,8)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="404" width="7" height="15" fill="rgb(253,191,47)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="420" width="7" height="15" fill="rgb(228,31,47)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="436" width="7" height="15" fill="rgb(249,152,10)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="17" y="452" width="7" height="15" fill="rgb(240,44,36)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="468" width="7" height="15" fill="rgb(212,89,51)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.63%)</title><rect x="17" y="484" width="7" height="15" fill="rgb(241,73,31)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="500" width="7" height="15" fill="rgb(206,171,1)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="516" width="7" height="15" fill="rgb(242,83,9)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="532" width="7" height="15" fill="rgb(253,52,21)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="17" y="548" width="7" height="15" fill="rgb(234,94,41)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="17" y="564" width="7" height="15" fill="rgb(232,16,14)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.47%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(206,47,53)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(225,183,42)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(227,171,45)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(236,204,26)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(247,141,36)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(252,220,18)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.47%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(253,172,23)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(205,76,7)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(237,55,45)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(234,1,28)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(237,105,54)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(253,159,51)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.47%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(210,219,38)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(228,140,11)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(232,139,12)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(236,79,7)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(206,77,14)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(211,220,28)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.47%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(213,38,38)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(234,215,27)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(237,30,35)"/><text x="24.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(250,105,26)"/><text x="24.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(246,28,17)"/><text x="24.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(220,209,15)"/><text x="24.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.31%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(232,184,0)"/><text x="24.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(222,144,48)"/><text x="24.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(226,82,13)"/><text x="24.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(253,34,30)"/><text x="24.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(242,67,22)"/><text x="24.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(237,95,26)"/><text x="24.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.31%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(208,26,19)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(233,105,46)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(245,56,25)"/><text x="24.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(234,78,1)"/><text x="24.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(244,52,15)"/><text x="24.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(223,229,1)"/><text x="24.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.31%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(251,63,49)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1172" width="3" height="15" fill="rgb(244,134,19)"/><text x="24.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1188" width="3" height="15" fill="rgb(227,205,2)"/><text x="24.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1204" width="3" height="15" fill="rgb(214,68,42)"/><text x="24.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="1220" width="3" height="15" fill="rgb(205,69,29)"/><text x="24.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1236" width="3" height="15" fill="rgb(238,186,0)"/><text x="24.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.31%)</title><rect x="21" y="1252" width="3" height="15" fill="rgb(221,160,45)"/><text x="24.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1268" width="3" height="15" fill="rgb(251,126,52)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1284" width="3" height="15" fill="rgb(239,204,28)"/><text x="24.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1300" width="3" height="15" fill="rgb(214,69,2)"/><text x="24.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="1316" width="3" height="15" fill="rgb(238,30,49)"/><text x="24.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1332" width="3" height="15" fill="rgb(222,183,0)"/><text x="24.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.31%)</title><rect x="21" y="1348" width="3" height="15" fill="rgb(226,91,8)"/><text x="24.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1364" width="3" height="15" fill="rgb(235,137,43)"/><text x="24.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1380" width="3" height="15" fill="rgb(244,191,46)"/><text x="24.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1396" width="3" height="15" fill="rgb(216,177,47)"/><text x="24.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="21" y="1412" width="3" height="15" fill="rgb(235,73,11)"/><text x="24.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="21" y="1428" width="3" height="15" fill="rgb(226,120,18)"/><text x="24.00" y="1438.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (2 samples, 0.31%)</title><rect x="21" y="1444" width="3" height="15" fill="rgb(237,183,52)"/><text x="24.00" y="1454.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (2 samples, 0.31%)</title><rect x="21" y="1460" width="3" height="15" fill="rgb(240,108,0)"/><text x="24.00" y="1470.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (2 samples, 0.31%)</title><rect x="21" y="1476" width="3" height="15" fill="rgb(220,192,18)"/><text x="24.00" y="1486.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.16%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(235,168,22)"/><text x="25.00" y="1502.50"></text></g><g><title>search (re.py) (1 samples, 0.16%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(219,63,0)"/><text x="25.00" y="1518.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(247,144,28)"/><text x="25.00" y="1534.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(243,23,1)"/><text x="25.00" y="1550.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(242,112,9)"/><text x="25.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(226,155,16)"/><text x="25.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(238,227,47)"/><text x="25.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(239,11,20)"/><text x="29.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(220,195,51)"/><text x="29.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(247,37,21)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(211,1,50)"/><text x="29.00" y="926.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.16%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(227,162,24)"/><text x="29.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="26" y="836" width="6" height="15" fill="rgb(235,129,24)"/><text x="29.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="26" y="852" width="6" height="15" fill="rgb(213,31,19)"/><text x="29.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="868" width="4" height="15" fill="rgb(209,153,38)"/><text x="31.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="884" width="4" height="15" fill="rgb(247,4,47)"/><text x="31.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="900" width="4" height="15" fill="rgb(205,126,26)"/><text x="31.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="916" width="4" height="15" fill="rgb(250,60,10)"/><text x="31.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(241,89,17)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(215,169,3)"/><text x="33.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.16%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(215,70,46)"/><text x="33.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(240,169,15)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.16%)</title><rect x="32" y="916" width="2" height="15" fill="rgb(234,136,25)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(213,36,33)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(254,71,2)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="964" width="2" height="15" fill="rgb(218,178,21)"/><text x="35.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="980" width="2" height="15" fill="rgb(239,42,14)"/><text x="35.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.16%)</title><rect x="32" y="996" width="2" height="15" fill="rgb(248,135,40)"/><text x="35.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="1012" width="2" height="15" fill="rgb(212,105,14)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="1028" width="2" height="15" fill="rgb(250,18,32)"/><text x="35.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="1044" width="2" height="15" fill="rgb(224,1,25)"/><text x="35.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="1060" width="2" height="15" fill="rgb(227,87,51)"/><text x="35.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="1076" width="2" height="15" fill="rgb(245,175,8)"/><text x="35.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="1092" width="2" height="15" fill="rgb(234,67,31)"/><text x="35.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="24" y="548" width="11" height="15" fill="rgb(211,165,1)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="564" width="11" height="15" fill="rgb(230,159,50)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.94%)</title><rect x="24" y="580" width="11" height="15" fill="rgb(213,115,0)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="596" width="11" height="15" fill="rgb(252,116,39)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="612" width="11" height="15" fill="rgb(205,152,49)"/><text x="27.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="628" width="11" height="15" fill="rgb(249,79,40)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="644" width="11" height="15" fill="rgb(227,114,31)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="660" width="11" height="15" fill="rgb(211,8,10)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="676" width="11" height="15" fill="rgb(236,202,27)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="24" y="692" width="11" height="15" fill="rgb(231,163,16)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="708" width="11" height="15" fill="rgb(212,31,29)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.94%)</title><rect x="24" y="724" width="11" height="15" fill="rgb(240,123,21)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="740" width="11" height="15" fill="rgb(208,123,6)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="756" width="11" height="15" fill="rgb(223,217,0)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="772" width="11" height="15" fill="rgb(209,32,3)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="24" y="788" width="11" height="15" fill="rgb(211,48,14)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="24" y="804" width="11" height="15" fill="rgb(209,142,28)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.94%)</title><rect x="24" y="820" width="11" height="15" fill="rgb(233,60,16)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="836" width="3" height="15" fill="rgb(226,228,43)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="852" width="3" height="15" fill="rgb(205,51,26)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="868" width="3" height="15" fill="rgb(231,112,21)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="32" y="884" width="3" height="15" fill="rgb(236,72,16)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="900" width="3" height="15" fill="rgb(208,174,45)"/><text x="35.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py) (1 samples, 0.16%)</title><rect x="34" y="916" width="1" height="15" fill="rgb(218,20,10)"/><text x="37.00" y="926.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="34" y="932" width="1" height="15" fill="rgb(206,2,25)"/><text x="37.00" y="942.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="34" y="948" width="1" height="15" fill="rgb(215,182,27)"/><text x="37.00" y="958.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="34" y="964" width="1" height="15" fill="rgb(225,163,7)"/><text x="37.00" y="974.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="980" width="1" height="15" fill="rgb(237,18,43)"/><text x="37.00" y="990.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="996" width="1" height="15" fill="rgb(206,91,39)"/><text x="37.00" y="1006.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="1012" width="1" height="15" fill="rgb(228,206,13)"/><text x="37.00" y="1022.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="1028" width="1" height="15" fill="rgb(242,216,51)"/><text x="37.00" y="1038.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="1044" width="1" height="15" fill="rgb(222,5,50)"/><text x="37.00" y="1054.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="1060" width="1" height="15" fill="rgb(240,74,39)"/><text x="37.00" y="1070.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.16%)</title><rect x="34" y="1076" width="1" height="15" fill="rgb(225,122,32)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.36%)</title><rect x="10" y="196" width="27" height="15" fill="rgb(221,91,41)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.36%)</title><rect x="10" y="212" width="27" height="15" fill="rgb(207,151,22)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.36%)</title><rect x="10" y="228" width="27" height="15" fill="rgb(208,39,49)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.36%)</title><rect x="10" y="244" width="27" height="15" fill="rgb(219,117,33)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.36%)</title><rect x="10" y="260" width="27" height="15" fill="rgb(233,10,44)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.36%)</title><rect x="10" y="276" width="27" height="15" fill="rgb(237,40,47)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.10%)</title><rect x="24" y="292" width="13" height="15" fill="rgb(230,149,50)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="308" width="13" height="15" fill="rgb(230,155,27)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="324" width="13" height="15" fill="rgb(253,3,10)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="340" width="13" height="15" fill="rgb(243,178,46)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.10%)</title><rect x="24" y="356" width="13" height="15" fill="rgb(219,203,6)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="372" width="13" height="15" fill="rgb(224,51,12)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.10%)</title><rect x="24" y="388" width="13" height="15" fill="rgb(215,198,14)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="404" width="13" height="15" fill="rgb(205,79,30)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="420" width="13" height="15" fill="rgb(205,56,44)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="436" width="13" height="15" fill="rgb(229,66,4)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.10%)</title><rect x="24" y="452" width="13" height="15" fill="rgb(212,131,49)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="468" width="13" height="15" fill="rgb(247,55,51)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.10%)</title><rect x="24" y="484" width="13" height="15" fill="rgb(224,139,22)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="500" width="13" height="15" fill="rgb(228,113,24)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="516" width="13" height="15" fill="rgb(233,58,52)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.10%)</title><rect x="24" y="532" width="13" height="15" fill="rgb(253,218,15)"/><text x="27.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="548" width="2" height="15" fill="rgb(214,32,48)"/><text x="38.00" y="558.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="564" width="2" height="15" fill="rgb(246,80,4)"/><text x="38.00" y="574.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="580" width="2" height="15" fill="rgb(239,154,54)"/><text x="38.00" y="590.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="596" width="2" height="15" fill="rgb(223,38,19)"/><text x="38.00" y="606.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="612" width="2" height="15" fill="rgb(206,200,24)"/><text x="38.00" y="622.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="628" width="2" height="15" fill="rgb(245,188,15)"/><text x="38.00" y="638.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="644" width="2" height="15" fill="rgb(227,82,14)"/><text x="38.00" y="654.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.16%)</title><rect x="35" y="660" width="2" height="15" fill="rgb(214,123,42)"/><text x="38.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(220,165,47)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(215,81,45)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(237,184,5)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 2.52%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(249,123,32)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(213,75,54)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (16 samples, 2.52%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(243,92,25)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(210,124,24)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.52%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(245,151,29)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="196" width="2" height="15" fill="rgb(224,112,48)"/><text x="40.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="212" width="2" height="15" fill="rgb(223,27,50)"/><text x="40.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="228" width="2" height="15" fill="rgb(251,225,29)"/><text x="40.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.16%)</title><rect x="37" y="244" width="2" height="15" fill="rgb(242,131,18)"/><text x="40.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="260" width="2" height="15" fill="rgb(207,23,34)"/><text x="40.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="276" width="2" height="15" fill="rgb(233,158,51)"/><text x="40.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="292" width="2" height="15" fill="rgb(230,207,0)"/><text x="40.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="308" width="2" height="15" fill="rgb(206,57,51)"/><text x="40.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="324" width="2" height="15" fill="rgb(247,118,46)"/><text x="40.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="340" width="2" height="15" fill="rgb(239,171,46)"/><text x="40.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="356" width="2" height="15" fill="rgb(213,193,17)"/><text x="40.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.16%)</title><rect x="37" y="372" width="2" height="15" fill="rgb(205,98,52)"/><text x="40.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="388" width="2" height="15" fill="rgb(213,192,15)"/><text x="40.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="404" width="2" height="15" fill="rgb(214,178,53)"/><text x="40.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="420" width="2" height="15" fill="rgb(214,68,47)"/><text x="40.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="436" width="2" height="15" fill="rgb(241,73,44)"/><text x="40.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="452" width="2" height="15" fill="rgb(205,144,10)"/><text x="40.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="468" width="2" height="15" fill="rgb(220,109,34)"/><text x="40.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="484" width="2" height="15" fill="rgb(248,82,50)"/><text x="40.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.16%)</title><rect x="37" y="500" width="2" height="15" fill="rgb(233,99,20)"/><text x="40.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.16%)</title><rect x="37" y="516" width="2" height="15" fill="rgb(250,118,13)"/><text x="40.00" y="526.50"></text></g><g><title>0x7fed26ccabc0 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="89" y="132" width="4" height="15" fill="rgb(229,214,54)"/><text x="92.00" y="142.50"></text></g><g><title>0x7fed26ccabc6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="93" y="132" width="2" height="15" fill="rgb(247,83,3)"/><text x="96.00" y="142.50"></text></g><g><title>0x7fed26ccac14 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="95" y="132" width="2" height="15" fill="rgb(244,54,12)"/><text x="98.00" y="142.50"></text></g><g><title>0x7fed26ccac20 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="97" y="132" width="2" height="15" fill="rgb(213,229,22)"/><text x="100.00" y="142.50"></text></g><g><title>0x7fed26ccac2d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="99" y="132" width="1" height="15" fill="rgb(239,24,29)"/><text x="102.00" y="142.50"></text></g><g><title>0x7fed26ccac4d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="100" y="132" width="2" height="15" fill="rgb(245,132,19)"/><text x="103.00" y="142.50"></text></g><g><title>0x7fed26ccac5a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="102" y="132" width="2" height="15" fill="rgb(231,101,42)"/><text x="105.00" y="142.50"></text></g><g><title>0x7fed26ccac6a (libc-2.29.so) (2 samples, 0.31%)</title><rect x="104" y="132" width="4" height="15" fill="rgb(254,100,30)"/><text x="107.00" y="142.50"></text></g><g><title>0x7fed26ccbeb0 (libc-2.29.so) (11 samples, 1.73%)</title><rect x="89" y="116" width="21" height="15" fill="rgb(235,99,2)"/><text x="92.00" y="126.50"></text></g><g><title>0x7fed26ccac73 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="108" y="132" width="2" height="15" fill="rgb(228,114,43)"/><text x="111.00" y="142.50"></text></g><g><title>0x7fed26ccaab9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="108" y="148" width="2" height="15" fill="rgb(211,76,13)"/><text x="111.00" y="158.50"></text></g><g><title>0x7fece7534ff9 (?) (1 samples, 0.16%)</title><rect x="117" y="212" width="2" height="15" fill="rgb(235,0,43)"/><text x="120.00" y="222.50"></text></g><g><title>0x7fece752fef6 (?) (1 samples, 0.16%)</title><rect x="117" y="228" width="2" height="15" fill="rgb(217,138,54)"/><text x="120.00" y="238.50"></text></g><g><title>0x7fece7524c99 (?) (1 samples, 0.16%)</title><rect x="117" y="244" width="2" height="15" fill="rgb(217,41,8)"/><text x="120.00" y="254.50"></text></g><g><title>0x7fece7542c7b (?) (1 samples, 0.16%)</title><rect x="117" y="260" width="2" height="15" fill="rgb(244,218,24)"/><text x="120.00" y="270.50"></text></g><g><title>0x7fece751a54e (?) (1 samples, 0.16%)</title><rect x="117" y="276" width="2" height="15" fill="rgb(206,183,43)"/><text x="120.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="119" y="292" width="2" height="15" fill="rgb(211,38,19)"/><text x="122.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="121" y="340" width="2" height="15" fill="rgb(252,11,18)"/><text x="124.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="121" y="356" width="2" height="15" fill="rgb(207,132,27)"/><text x="124.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="121" y="372" width="2" height="15" fill="rgb(248,214,22)"/><text x="124.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="121" y="388" width="2" height="15" fill="rgb(213,159,35)"/><text x="124.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="121" y="404" width="2" height="15" fill="rgb(212,21,18)"/><text x="124.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="123" y="340" width="2" height="15" fill="rgb(226,84,5)"/><text x="126.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="123" y="356" width="2" height="15" fill="rgb(250,128,46)"/><text x="126.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="123" y="372" width="2" height="15" fill="rgb(222,211,46)"/><text x="126.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="123" y="388" width="2" height="15" fill="rgb(243,186,3)"/><text x="126.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="123" y="404" width="2" height="15" fill="rgb(236,138,35)"/><text x="126.00" y="414.50"></text></g><g><title>0x7fed26ccb90e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="123" y="420" width="2" height="15" fill="rgb(222,212,34)"/><text x="126.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="125" y="340" width="1" height="15" fill="rgb(253,39,20)"/><text x="128.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="125" y="356" width="1" height="15" fill="rgb(224,85,41)"/><text x="128.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="356" width="2" height="15" fill="rgb(216,49,48)"/><text x="335.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="372" width="2" height="15" fill="rgb(223,168,21)"/><text x="335.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(241,61,36)"/><text x="335.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="404" width="2" height="15" fill="rgb(234,140,18)"/><text x="335.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="420" width="2" height="15" fill="rgb(242,3,29)"/><text x="335.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="436" width="2" height="15" fill="rgb(212,82,17)"/><text x="335.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="452" width="2" height="15" fill="rgb(248,78,14)"/><text x="335.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="468" width="2" height="15" fill="rgb(230,88,12)"/><text x="335.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="332" y="484" width="2" height="15" fill="rgb(245,205,24)"/><text x="335.00" y="494.50"></text></g><g><title>0x7fed26cebd97 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="351" y="372" width="2" height="15" fill="rgb(236,120,54)"/><text x="354.00" y="382.50"></text></g><g><title>0x7fed26cebdb3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="353" y="372" width="2" height="15" fill="rgb(234,50,35)"/><text x="356.00" y="382.50"></text></g><g><title>0x7fed26e4ae00 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="355" y="372" width="1" height="15" fill="rgb(252,82,43)"/><text x="358.00" y="382.50"></text></g><g><title>0x7fed26e4ae0a (libm-2.29.so) (1 samples, 0.16%)</title><rect x="356" y="372" width="2" height="15" fill="rgb(221,28,12)"/><text x="359.00" y="382.50"></text></g><g><title>0x7fed26e4ae6d (libm-2.29.so) (2 samples, 0.31%)</title><rect x="358" y="372" width="4" height="15" fill="rgb(251,122,38)"/><text x="361.00" y="382.50"></text></g><g><title>0x7fed26e4ae7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="362" y="372" width="2" height="15" fill="rgb(226,179,31)"/><text x="365.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 20.28%)</title><rect x="126" y="340" width="240" height="15" fill="rgb(221,30,19)"/><text x="129.00" y="350.50">onnxruntime::ml::LinearClassifi..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.67%)</title><rect x="334" y="356" width="32" height="15" fill="rgb(206,64,18)"/><text x="337.00" y="366.50">on..</text></g><g><title>0x7fed26e4ae96 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="364" y="372" width="2" height="15" fill="rgb(227,197,0)"/><text x="367.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.67%)</title><rect x="366" y="340" width="31" height="15" fill="rgb(248,151,50)"/><text x="369.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.67%)</title><rect x="366" y="356" width="31" height="15" fill="rgb(234,18,11)"/><text x="369.00" y="366.50">on..</text></g><g><title>0x7fed26cccb12 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="483" y="388" width="1" height="15" fill="rgb(254,117,22)"/><text x="486.00" y="398.50"></text></g><g><title>0x7fed26cccb49 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="484" y="388" width="2" height="15" fill="rgb(209,119,36)"/><text x="487.00" y="398.50"></text></g><g><title>0x7fed26cccb61 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="486" y="388" width="2" height="15" fill="rgb(205,59,44)"/><text x="489.00" y="398.50"></text></g><g><title>0x7fed26cccdb4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="488" y="388" width="2" height="15" fill="rgb(230,132,24)"/><text x="491.00" y="398.50"></text></g><g><title>0x7fed26cccdd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="490" y="388" width="2" height="15" fill="rgb(236,220,37)"/><text x="493.00" y="398.50"></text></g><g><title>0x7fed26ccce07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="492" y="388" width="2" height="15" fill="rgb(238,219,25)"/><text x="495.00" y="398.50"></text></g><g><title>0x7fed26cccf2a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="494" y="388" width="2" height="15" fill="rgb(212,76,39)"/><text x="497.00" y="398.50"></text></g><g><title>0x7fed26cccfd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="496" y="388" width="1" height="15" fill="rgb(208,105,30)"/><text x="499.00" y="398.50"></text></g><g><title>0x7fed26cccfde (libc-2.29.so) (1 samples, 0.16%)</title><rect x="497" y="388" width="2" height="15" fill="rgb(208,47,53)"/><text x="500.00" y="398.50"></text></g><g><title>0x7fed26cccfe6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="499" y="388" width="2" height="15" fill="rgb(252,98,0)"/><text x="502.00" y="398.50"></text></g><g><title>0x7fed26ccd033 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="501" y="388" width="2" height="15" fill="rgb(248,29,8)"/><text x="504.00" y="398.50"></text></g><g><title>0x7fed26ccd064 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="503" y="388" width="2" height="15" fill="rgb(250,86,27)"/><text x="506.00" y="398.50"></text></g><g><title>0x7fed26ccd07f (libc-2.29.so) (3 samples, 0.47%)</title><rect x="505" y="388" width="5" height="15" fill="rgb(224,182,14)"/><text x="508.00" y="398.50"></text></g><g><title>0x7fed26ccd08c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="510" y="388" width="2" height="15" fill="rgb(226,186,32)"/><text x="513.00" y="398.50"></text></g><g><title>0x7fed26ccd097 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="512" y="388" width="2" height="15" fill="rgb(215,203,32)"/><text x="515.00" y="398.50"></text></g><g><title>0x7fed26ccd0a3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="514" y="388" width="2" height="15" fill="rgb(249,77,26)"/><text x="517.00" y="398.50"></text></g><g><title>0x7fed26ccd368 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="516" y="388" width="2" height="15" fill="rgb(224,40,30)"/><text x="519.00" y="398.50"></text></g><g><title>0x7fed26ccd384 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="518" y="388" width="2" height="15" fill="rgb(248,0,18)"/><text x="521.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (55 samples, 8.65%)</title><rect x="420" y="356" width="102" height="15" fill="rgb(208,46,20)"/><text x="423.00" y="366.50">operator new..</text></g><g><title>malloc (libc-2.29.so) (54 samples, 8.49%)</title><rect x="421" y="372" width="101" height="15" fill="rgb(226,177,4)"/><text x="424.00" y="382.50">malloc (libc..</text></g><g><title>0x7fed26ccd3d1 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="520" y="388" width="2" height="15" fill="rgb(227,215,46)"/><text x="523.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="522" y="356" width="5" height="15" fill="rgb(224,179,44)"/><text x="525.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.47%)</title><rect x="527" y="356" width="6" height="15" fill="rgb(233,192,30)"/><text x="530.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 35.22%)</title><rect x="119" y="276" width="416" height="15" fill="rgb(241,88,43)"/><text x="122.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (223 samples, 35.06%)</title><rect x="121" y="292" width="414" height="15" fill="rgb(207,105,20)"/><text x="124.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (223 samples, 35.06%)</title><rect x="121" y="308" width="414" height="15" fill="rgb(207,25,44)"/><text x="124.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (223 samples, 35.06%)</title><rect x="121" y="324" width="414" height="15" fill="rgb(220,5,17)"/><text x="124.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/ca..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 11.64%)</title><rect x="397" y="340" width="138" height="15" fill="rgb(254,103,9)"/><text x="400.00" y="350.50">onnxruntime::ml::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="533" y="356" width="2" height="15" fill="rgb(230,88,14)"/><text x="536.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 35.38%)</title><rect x="119" y="260" width="417" height="15" fill="rgb(245,160,50)"/><text x="122.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onn..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="535" y="276" width="1" height="15" fill="rgb(230,121,49)"/><text x="538.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="536" y="260" width="2" height="15" fill="rgb(244,80,35)"/><text x="539.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="536" y="276" width="2" height="15" fill="rgb(213,57,50)"/><text x="539.00" y="286.50"></text></g><g><title>0x7fece74fb8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(232,69,38)"/><text x="649.00" y="286.50"></text></g><g><title>0x7fece74fc5c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="648" y="276" width="2" height="15" fill="rgb(247,178,14)"/><text x="651.00" y="286.50"></text></g><g><title>0x7fece74fc870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="650" y="276" width="3" height="15" fill="rgb(242,171,10)"/><text x="653.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.04%)</title><rect x="653" y="276" width="24" height="15" fill="rgb(249,197,41)"/><text x="656.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (79 samples, 12.42%)</title><rect x="538" y="260" width="147" height="15" fill="rgb(221,59,9)"/><text x="541.00" y="270.50">pybind11::detail::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (4 samples, 0.63%)</title><rect x="677" y="276" width="8" height="15" fill="rgb(244,78,22)"/><text x="680.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="685" y="260" width="2" height="15" fill="rgb(241,21,19)"/><text x="688.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="685" y="276" width="2" height="15" fill="rgb(211,62,37)"/><text x="688.00" y="286.50"></text></g><g><title>0x7fed26cec120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="685" y="292" width="2" height="15" fill="rgb(239,226,54)"/><text x="688.00" y="302.50"></text></g><g><title>0x7fed26ccb91e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="687" y="292" width="2" height="15" fill="rgb(225,86,1)"/><text x="690.00" y="302.50"></text></g><g><title>0x7fed26ccb99b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="689" y="292" width="1" height="15" fill="rgb(212,42,11)"/><text x="692.00" y="302.50"></text></g><g><title>0x7fed26ccb9b3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="690" y="292" width="2" height="15" fill="rgb(250,14,43)"/><text x="693.00" y="302.50"></text></g><g><title>0x7fed26ccb9ed (libc-2.29.so) (1 samples, 0.16%)</title><rect x="692" y="292" width="2" height="15" fill="rgb(233,43,49)"/><text x="695.00" y="302.50"></text></g><g><title>0x7fed26ccba4b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="694" y="292" width="2" height="15" fill="rgb(211,62,36)"/><text x="697.00" y="302.50"></text></g><g><title>0x7fed26ccbd07 (libc-2.29.so) (6 samples, 0.94%)</title><rect x="696" y="292" width="11" height="15" fill="rgb(231,99,14)"/><text x="699.00" y="302.50"></text></g><g><title>0x7fed26ccb945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="707" y="308" width="2" height="15" fill="rgb(209,188,41)"/><text x="710.00" y="318.50"></text></g><g><title>0x7fed26ccb961 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="709" y="308" width="2" height="15" fill="rgb(209,170,35)"/><text x="712.00" y="318.50"></text></g><g><title>0x7fed26ccb9b3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="711" y="308" width="2" height="15" fill="rgb(219,115,30)"/><text x="714.00" y="318.50"></text></g><g><title>0x7fed26ccba4b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="713" y="308" width="2" height="15" fill="rgb(212,74,40)"/><text x="716.00" y="318.50"></text></g><g><title>0x7fed26ccbd07 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="715" y="308" width="3" height="15" fill="rgb(244,217,35)"/><text x="718.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (324 samples, 50.94%)</title><rect x="119" y="244" width="601" height="15" fill="rgb(244,20,2)"/><text x="122.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Inf..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.83%)</title><rect x="687" y="260" width="33" height="15" fill="rgb(213,146,22)"/><text x="690.00" y="270.50">st..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.83%)</title><rect x="687" y="276" width="33" height="15" fill="rgb(223,198,26)"/><text x="690.00" y="286.50">on..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.10%)</title><rect x="707" y="292" width="13" height="15" fill="rgb(213,216,10)"/><text x="710.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="718" y="308" width="2" height="15" fill="rgb(239,25,26)"/><text x="721.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="720" y="244" width="2" height="15" fill="rgb(242,62,21)"/><text x="723.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="720" y="260" width="2" height="15" fill="rgb(233,191,33)"/><text x="723.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="722" y="244" width="2" height="15" fill="rgb(238,88,37)"/><text x="725.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="722" y="260" width="2" height="15" fill="rgb(218,120,7)"/><text x="725.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (370 samples, 58.18%)</title><rect x="39" y="68" width="687" height="15" fill="rgb(254,89,24)"/><text x="42.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (370 samples, 58.18%)</title><rect x="39" y="84" width="687" height="15" fill="rgb(218,164,25)"/><text x="42.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.p..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (370 samples, 58.18%)</title><rect x="39" y="100" width="687" height="15" fill="rgb(237,184,47)"/><text x="42.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (332 samples, 52.20%)</title><rect x="110" y="116" width="616" height="15" fill="rgb(247,111,12)"/><text x="113.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (332 samples, 52.20%)</title><rect x="110" y="132" width="616" height="15" fill="rgb(235,54,2)"/><text x="113.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (331 samples, 52.04%)</title><rect x="112" y="148" width="614" height="15" fill="rgb(221,171,15)"/><text x="115.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (331 samples, 52.04%)</title><rect x="112" y="164" width="614" height="15" fill="rgb(234,132,50)"/><text x="115.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (329 samples, 51.73%)</title><rect x="115" y="180" width="611" height="15" fill="rgb(223,162,7)"/><text x="118.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (329 samples, 51.73%)</title><rect x="115" y="196" width="611" height="15" fill="rgb(250,151,49)"/><text x="118.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (327 samples, 51.42%)</title><rect x="119" y="212" width="607" height="15" fill="rgb(254,182,51)"/><text x="122.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (327 samples, 51.42%)</title><rect x="119" y="228" width="607" height="15" fill="rgb(211,91,33)"/><text x="122.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="724" y="244" width="2" height="15" fill="rgb(206,177,32)"/><text x="727.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.16%)</title><rect x="755" y="212" width="2" height="15" fill="rgb(223,202,47)"/><text x="758.00" y="222.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (5 samples, 0.79%)</title><rect x="763" y="324" width="9" height="15" fill="rgb(237,134,4)"/><text x="766.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (4 samples, 0.63%)</title><rect x="765" y="340" width="7" height="15" fill="rgb(210,137,12)"/><text x="768.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 0.94%)</title><rect x="763" y="244" width="11" height="15" fill="rgb(244,174,41)"/><text x="766.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.94%)</title><rect x="763" y="260" width="11" height="15" fill="rgb(206,111,23)"/><text x="766.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 0.94%)</title><rect x="763" y="276" width="11" height="15" fill="rgb(253,61,22)"/><text x="766.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 0.94%)</title><rect x="763" y="292" width="11" height="15" fill="rgb(213,66,4)"/><text x="766.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (6 samples, 0.94%)</title><rect x="763" y="308" width="11" height="15" fill="rgb(231,200,43)"/><text x="766.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="772" y="324" width="2" height="15" fill="rgb(215,2,6)"/><text x="775.00" y="334.50"></text></g><g><title>0x7fed26cec103 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="778" y="340" width="1" height="15" fill="rgb(227,194,2)"/><text x="781.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="779" y="340" width="2" height="15" fill="rgb(245,34,17)"/><text x="782.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.16%)</title><rect x="781" y="340" width="2" height="15" fill="rgb(249,167,28)"/><text x="784.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 1.73%)</title><rect x="776" y="276" width="20" height="15" fill="rgb(249,100,54)"/><text x="779.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (10 samples, 1.57%)</title><rect x="778" y="292" width="18" height="15" fill="rgb(234,16,2)"/><text x="781.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (10 samples, 1.57%)</title><rect x="778" y="308" width="18" height="15" fill="rgb(226,179,19)"/><text x="781.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (10 samples, 1.57%)</title><rect x="778" y="324" width="18" height="15" fill="rgb(225,102,39)"/><text x="781.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (7 samples, 1.10%)</title><rect x="783" y="340" width="13" height="15" fill="rgb(251,214,41)"/><text x="786.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.10%)</title><rect x="783" y="356" width="13" height="15" fill="rgb(208,152,18)"/><text x="786.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.10%)</title><rect x="783" y="372" width="13" height="15" fill="rgb(244,154,27)"/><text x="786.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.10%)</title><rect x="783" y="388" width="13" height="15" fill="rgb(247,193,22)"/><text x="786.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.63%)</title><rect x="796" y="276" width="8" height="15" fill="rgb(217,1,20)"/><text x="799.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (42 samples, 6.60%)</title><rect x="774" y="244" width="78" height="15" fill="rgb(209,51,8)"/><text x="777.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (42 samples, 6.60%)</title><rect x="774" y="260" width="78" height="15" fill="rgb(237,138,6)"/><text x="777.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 4.09%)</title><rect x="804" y="276" width="48" height="15" fill="rgb(233,28,24)"/><text x="807.00" y="286.50">sgem..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="852" y="260" width="2" height="15" fill="rgb(251,208,24)"/><text x="855.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="852" y="276" width="2" height="15" fill="rgb(254,35,7)"/><text x="855.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="852" y="292" width="2" height="15" fill="rgb(208,142,44)"/><text x="855.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.16%)</title><rect x="854" y="292" width="2" height="15" fill="rgb(223,187,32)"/><text x="857.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.16%)</title><rect x="854" y="308" width="2" height="15" fill="rgb(224,212,48)"/><text x="857.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.16%)</title><rect x="854" y="324" width="2" height="15" fill="rgb(227,172,38)"/><text x="857.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.16%)</title><rect x="854" y="340" width="2" height="15" fill="rgb(236,68,48)"/><text x="857.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.16%)</title><rect x="854" y="356" width="2" height="15" fill="rgb(250,184,24)"/><text x="857.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.16%)</title><rect x="854" y="372" width="2" height="15" fill="rgb(253,100,7)"/><text x="857.00" y="382.50"></text></g><g><title>0x7fed26cebd97 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="857" y="356" width="2" height="15" fill="rgb(240,65,28)"/><text x="860.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.47%)</title><rect x="856" y="292" width="5" height="15" fill="rgb(210,189,37)"/><text x="859.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.47%)</title><rect x="856" y="308" width="5" height="15" fill="rgb(208,179,26)"/><text x="859.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.47%)</title><rect x="856" y="324" width="5" height="15" fill="rgb(226,124,41)"/><text x="859.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.47%)</title><rect x="856" y="340" width="5" height="15" fill="rgb(245,10,3)"/><text x="859.00" y="350.50"></text></g><g><title>0x7fed26cebdbe (libc-2.29.so) (1 samples, 0.16%)</title><rect x="859" y="356" width="2" height="15" fill="rgb(220,150,54)"/><text x="862.00" y="366.50"></text></g><g><title>0x7fed090d033a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(222,128,11)"/><text x="864.00" y="318.50"></text></g><g><title>0x7fed26e171a0 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="872" y="356" width="2" height="15" fill="rgb(242,195,3)"/><text x="875.00" y="366.50"></text></g><g><title>0x7fed26e4ae0e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="874" y="356" width="2" height="15" fill="rgb(243,189,45)"/><text x="877.00" y="366.50"></text></g><g><title>0x7fed26e4ae96 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="876" y="356" width="4" height="15" fill="rgb(240,178,46)"/><text x="879.00" y="366.50"></text></g><g><title>0x7fed090f2214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.73%)</title><rect x="863" y="324" width="20" height="15" fill="rgb(240,142,16)"/><text x="866.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (9 samples, 1.42%)</title><rect x="867" y="340" width="16" height="15" fill="rgb(220,32,5)"/><text x="870.00" y="350.50"></text></g><g><title>0x7fed26e4aea6 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="880" y="356" width="3" height="15" fill="rgb(233,35,32)"/><text x="883.00" y="366.50"></text></g><g><title>0x7fed090d033d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.52%)</title><rect x="863" y="308" width="30" height="15" fill="rgb(210,108,21)"/><text x="866.00" y="318.50">0x..</text></g><g><title>0x7fed090f2228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.79%)</title><rect x="883" y="324" width="10" height="15" fill="rgb(242,152,0)"/><text x="886.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (73 samples, 11.48%)</title><rect x="759" y="228" width="136" height="15" fill="rgb(234,200,13)"/><text x="762.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 3.62%)</title><rect x="852" y="244" width="43" height="15" fill="rgb(210,55,20)"/><text x="855.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 3.46%)</title><rect x="854" y="260" width="41" height="15" fill="rgb(240,3,54)"/><text x="857.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (22 samples, 3.46%)</title><rect x="854" y="276" width="41" height="15" fill="rgb(242,196,54)"/><text x="857.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (18 samples, 2.83%)</title><rect x="861" y="292" width="34" height="15" fill="rgb(224,49,46)"/><text x="864.00" y="302.50">tr..</text></g><g><title>0x7fed090d0345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="893" y="308" width="2" height="15" fill="rgb(250,99,3)"/><text x="896.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.16%)</title><rect x="896" y="260" width="2" height="15" fill="rgb(231,179,29)"/><text x="899.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.16%)</title><rect x="896" y="276" width="2" height="15" fill="rgb(224,80,43)"/><text x="899.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.16%)</title><rect x="896" y="292" width="2" height="15" fill="rgb(206,157,18)"/><text x="899.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="896" y="308" width="2" height="15" fill="rgb(244,204,31)"/><text x="899.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="896" y="324" width="2" height="15" fill="rgb(238,63,46)"/><text x="899.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="896" y="340" width="2" height="15" fill="rgb(218,78,34)"/><text x="899.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="904" y="324" width="2" height="15" fill="rgb(254,134,37)"/><text x="907.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="904" y="340" width="2" height="15" fill="rgb(241,20,31)"/><text x="907.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="904" y="356" width="2" height="15" fill="rgb(222,193,6)"/><text x="907.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.16%)</title><rect x="904" y="372" width="2" height="15" fill="rgb(245,133,36)"/><text x="907.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.16%)</title><rect x="904" y="388" width="2" height="15" fill="rgb(215,189,52)"/><text x="907.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="909" y="372" width="2" height="15" fill="rgb(236,152,22)"/><text x="912.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.16%)</title><rect x="909" y="388" width="2" height="15" fill="rgb(218,48,13)"/><text x="912.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.16%)</title><rect x="911" y="404" width="2" height="15" fill="rgb(218,116,32)"/><text x="914.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.16%)</title><rect x="911" y="420" width="2" height="15" fill="rgb(224,179,12)"/><text x="914.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.16%)</title><rect x="911" y="436" width="2" height="15" fill="rgb(239,47,8)"/><text x="914.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="911" y="452" width="2" height="15" fill="rgb(248,212,47)"/><text x="914.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.31%)</title><rect x="911" y="372" width="4" height="15" fill="rgb(207,57,26)"/><text x="914.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.31%)</title><rect x="911" y="388" width="4" height="15" fill="rgb(237,78,52)"/><text x="914.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="913" y="404" width="2" height="15" fill="rgb(222,86,27)"/><text x="916.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="913" y="420" width="2" height="15" fill="rgb(224,169,20)"/><text x="916.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.31%)</title><rect x="920" y="388" width="4" height="15" fill="rgb(254,222,22)"/><text x="923.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (12 samples, 1.89%)</title><rect x="907" y="356" width="23" height="15" fill="rgb(247,13,13)"/><text x="910.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (8 samples, 1.26%)</title><rect x="915" y="372" width="15" height="15" fill="rgb(215,20,3)"/><text x="918.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.47%)</title><rect x="924" y="388" width="6" height="15" fill="rgb(217,141,47)"/><text x="927.00" y="398.50"></text></g><g><title>array_sum (methods.c) (18 samples, 2.83%)</title><rect x="898" y="260" width="34" height="15" fill="rgb(219,50,49)"/><text x="901.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 2.83%)</title><rect x="898" y="276" width="34" height="15" fill="rgb(237,9,11)"/><text x="901.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (17 samples, 2.67%)</title><rect x="900" y="292" width="32" height="15" fill="rgb(244,85,14)"/><text x="903.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (16 samples, 2.52%)</title><rect x="902" y="308" width="30" height="15" fill="rgb(209,225,10)"/><text x="905.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (14 samples, 2.20%)</title><rect x="906" y="324" width="26" height="15" fill="rgb(216,107,16)"/><text x="909.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 2.04%)</title><rect x="907" y="340" width="25" height="15" fill="rgb(227,73,24)"/><text x="910.00" y="350.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.16%)</title><rect x="930" y="356" width="2" height="15" fill="rgb(227,88,48)"/><text x="933.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(210,29,52)"/><text x="933.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="932" y="276" width="1" height="15" fill="rgb(212,135,49)"/><text x="935.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="932" y="292" width="1" height="15" fill="rgb(231,157,9)"/><text x="935.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="932" y="308" width="1" height="15" fill="rgb(244,167,18)"/><text x="935.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="933" y="308" width="2" height="15" fill="rgb(224,70,44)"/><text x="936.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="933" y="324" width="2" height="15" fill="rgb(238,149,38)"/><text x="936.00" y="334.50"></text></g><g><title>FLOAT_divide (loops.c.src) (3 samples, 0.47%)</title><rect x="935" y="324" width="6" height="15" fill="rgb(216,21,43)"/><text x="938.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (3 samples, 0.47%)</title><rect x="935" y="340" width="6" height="15" fill="rgb(220,65,36)"/><text x="938.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.31%)</title><rect x="937" y="356" width="4" height="15" fill="rgb(210,65,9)"/><text x="940.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.31%)</title><rect x="937" y="372" width="4" height="15" fill="rgb(236,130,35)"/><text x="940.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="941" y="324" width="2" height="15" fill="rgb(218,3,23)"/><text x="944.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.16%)</title><rect x="941" y="340" width="2" height="15" fill="rgb(251,186,0)"/><text x="944.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.94%)</title><rect x="935" y="308" width="11" height="15" fill="rgb(224,206,42)"/><text x="938.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.31%)</title><rect x="943" y="324" width="3" height="15" fill="rgb(226,37,27)"/><text x="946.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.31%)</title><rect x="943" y="340" width="3" height="15" fill="rgb(226,152,12)"/><text x="946.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="943" y="356" width="3" height="15" fill="rgb(232,116,36)"/><text x="946.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="943" y="372" width="3" height="15" fill="rgb(218,170,36)"/><text x="946.00" y="382.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.16%)</title><rect x="946" y="324" width="2" height="15" fill="rgb(234,57,53)"/><text x="949.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="946" y="340" width="2" height="15" fill="rgb(242,114,32)"/><text x="949.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.16%)</title><rect x="946" y="356" width="2" height="15" fill="rgb(234,47,33)"/><text x="949.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (121 samples, 19.03%)</title><rect x="726" y="68" width="224" height="15" fill="rgb(219,30,29)"/><text x="729.00" y="78.50">profile_pyrt (bench_LogisticR..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (121 samples, 19.03%)</title><rect x="726" y="84" width="224" height="15" fill="rgb(211,134,38)"/><text x="729.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (121 samples, 19.03%)</title><rect x="726" y="100" width="224" height="15" fill="rgb(229,14,25)"/><text x="729.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 18.87%)</title><rect x="728" y="116" width="222" height="15" fill="rgb(224,175,9)"/><text x="731.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 18.87%)</title><rect x="728" y="132" width="222" height="15" fill="rgb(211,179,45)"/><text x="731.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (120 samples, 18.87%)</title><rect x="728" y="148" width="222" height="15" fill="rgb(246,45,9)"/><text x="731.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (117 samples, 18.40%)</title><rect x="733" y="164" width="217" height="15" fill="rgb(243,87,46)"/><text x="736.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (115 samples, 18.08%)</title><rect x="737" y="180" width="213" height="15" fill="rgb(244,26,18)"/><text x="740.00" y="190.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (107 samples, 16.82%)</title><rect x="752" y="196" width="198" height="15" fill="rgb(206,74,48)"/><text x="755.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (104 samples, 16.35%)</title><rect x="757" y="212" width="193" height="15" fill="rgb(212,134,4)"/><text x="760.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 4.72%)</title><rect x="895" y="228" width="55" height="15" fill="rgb(253,128,7)"/><text x="898.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 4.72%)</title><rect x="895" y="244" width="55" height="15" fill="rgb(230,19,28)"/><text x="898.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.57%)</title><rect x="932" y="260" width="18" height="15" fill="rgb(248,147,34)"/><text x="935.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.42%)</title><rect x="933" y="276" width="17" height="15" fill="rgb(206,110,33)"/><text x="936.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.42%)</title><rect x="933" y="292" width="17" height="15" fill="rgb(223,110,32)"/><text x="936.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="946" y="308" width="4" height="15" fill="rgb(223,191,3)"/><text x="949.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="948" y="324" width="2" height="15" fill="rgb(231,10,34)"/><text x="951.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="952" y="116" width="2" height="15" fill="rgb(215,51,53)"/><text x="955.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="952" y="132" width="2" height="15" fill="rgb(250,47,34)"/><text x="955.00" y="142.50"></text></g><g><title>0x7fed26daa760 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="958" y="164" width="1" height="15" fill="rgb(238,16,37)"/><text x="961.00" y="174.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.31%)</title><rect x="965" y="180" width="4" height="15" fill="rgb(210,22,17)"/><text x="968.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.31%)</title><rect x="965" y="196" width="4" height="15" fill="rgb(206,156,14)"/><text x="968.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.16%)</title><rect x="967" y="212" width="2" height="15" fill="rgb(221,202,26)"/><text x="970.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="971" y="244" width="1" height="15" fill="rgb(220,70,21)"/><text x="974.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="971" y="260" width="1" height="15" fill="rgb(220,62,35)"/><text x="974.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="971" y="276" width="1" height="15" fill="rgb(236,44,0)"/><text x="974.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.16%)</title><rect x="971" y="292" width="1" height="15" fill="rgb(224,126,10)"/><text x="974.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.16%)</title><rect x="971" y="308" width="1" height="15" fill="rgb(231,24,20)"/><text x="974.00" y="318.50"></text></g><g><title>0x7fed26cec120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="972" y="276" width="2" height="15" fill="rgb(240,146,42)"/><text x="975.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.16%)</title><rect x="976" y="292" width="2" height="15" fill="rgb(241,53,20)"/><text x="979.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="976" y="308" width="2" height="15" fill="rgb(212,188,14)"/><text x="979.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="976" y="324" width="2" height="15" fill="rgb(245,100,3)"/><text x="979.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.16%)</title><rect x="976" y="340" width="2" height="15" fill="rgb(212,158,3)"/><text x="979.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.47%)</title><rect x="982" y="308" width="5" height="15" fill="rgb(210,107,7)"/><text x="985.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.16%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(219,115,28)"/><text x="988.00" y="334.50"></text></g><g><title>array_sum (methods.c) (11 samples, 1.73%)</title><rect x="969" y="180" width="20" height="15" fill="rgb(216,149,39)"/><text x="972.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 1.73%)</title><rect x="969" y="196" width="20" height="15" fill="rgb(209,93,14)"/><text x="972.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 1.57%)</title><rect x="971" y="212" width="18" height="15" fill="rgb(243,159,27)"/><text x="974.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 1.57%)</title><rect x="971" y="228" width="18" height="15" fill="rgb(213,147,19)"/><text x="974.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.42%)</title><rect x="972" y="244" width="17" height="15" fill="rgb(237,185,34)"/><text x="975.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.42%)</title><rect x="972" y="260" width="17" height="15" fill="rgb(225,10,31)"/><text x="975.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.26%)</title><rect x="974" y="276" width="15" height="15" fill="rgb(240,61,39)"/><text x="977.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 0.94%)</title><rect x="978" y="292" width="11" height="15" fill="rgb(243,35,31)"/><text x="981.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.16%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(238,22,8)"/><text x="990.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="989" y="244" width="2" height="15" fill="rgb(221,136,48)"/><text x="992.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.16%)</title><rect x="989" y="260" width="2" height="15" fill="rgb(215,41,14)"/><text x="992.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.16%)</title><rect x="989" y="276" width="2" height="15" fill="rgb(214,210,7)"/><text x="992.00" y="286.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.16%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(207,225,32)"/><text x="992.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.16%)</title><rect x="991" y="276" width="2" height="15" fill="rgb(223,59,4)"/><text x="994.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.16%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(237,30,53)"/><text x="994.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.16%)</title><rect x="991" y="308" width="2" height="15" fill="rgb(241,172,7)"/><text x="994.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.16%)</title><rect x="991" y="324" width="2" height="15" fill="rgb(248,16,37)"/><text x="994.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="993" y="276" width="2" height="15" fill="rgb(213,5,54)"/><text x="996.00" y="286.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.16%)</title><rect x="993" y="292" width="2" height="15" fill="rgb(252,176,9)"/><text x="996.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="993" y="308" width="2" height="15" fill="rgb(227,120,2)"/><text x="996.00" y="318.50"></text></g><g><title>array_add (number.c) (6 samples, 0.94%)</title><rect x="989" y="196" width="11" height="15" fill="rgb(210,176,22)"/><text x="992.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.94%)</title><rect x="989" y="212" width="11" height="15" fill="rgb(249,176,8)"/><text x="992.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.94%)</title><rect x="989" y="228" width="11" height="15" fill="rgb(228,109,42)"/><text x="992.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.79%)</title><rect x="991" y="244" width="9" height="15" fill="rgb(228,66,5)"/><text x="994.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.79%)</title><rect x="991" y="260" width="9" height="15" fill="rgb(245,115,36)"/><text x="994.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.47%)</title><rect x="995" y="276" width="5" height="15" fill="rgb(213,149,37)"/><text x="998.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.47%)</title><rect x="995" y="292" width="5" height="15" fill="rgb(232,39,35)"/><text x="998.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.47%)</title><rect x="995" y="308" width="5" height="15" fill="rgb(249,34,2)"/><text x="998.00" y="318.50"></text></g><g><title>0x7fed26cebd5f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="998" y="324" width="2" height="15" fill="rgb(245,51,7)"/><text x="1001.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.16%)</title><rect x="1000" y="212" width="2" height="15" fill="rgb(208,79,49)"/><text x="1003.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.16%)</title><rect x="1002" y="212" width="2" height="15" fill="rgb(212,89,18)"/><text x="1005.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.47%)</title><rect x="1004" y="212" width="6" height="15" fill="rgb(233,195,54)"/><text x="1007.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="1008" y="228" width="2" height="15" fill="rgb(213,71,17)"/><text x="1011.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.63%)</title><rect x="1010" y="212" width="7" height="15" fill="rgb(240,118,40)"/><text x="1013.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1015" y="228" width="2" height="15" fill="rgb(222,211,45)"/><text x="1018.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.16%)</title><rect x="1017" y="212" width="2" height="15" fill="rgb(254,143,13)"/><text x="1020.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (12 samples, 1.89%)</title><rect x="1000" y="196" width="23" height="15" fill="rgb(239,97,41)"/><text x="1003.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.31%)</title><rect x="1019" y="212" width="4" height="15" fill="rgb(214,114,21)"/><text x="1022.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.31%)</title><rect x="1019" y="228" width="4" height="15" fill="rgb(218,68,49)"/><text x="1022.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.63%)</title><rect x="1023" y="196" width="7" height="15" fill="rgb(221,59,42)"/><text x="1026.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.47%)</title><rect x="1024" y="212" width="6" height="15" fill="rgb(247,193,41)"/><text x="1027.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.20%)</title><rect x="1034" y="212" width="26" height="15" fill="rgb(211,195,4)"/><text x="1037.00" y="222.50">d..</text></g><g><title>DOUBLE_matmul (matmul.c.src) (11 samples, 1.73%)</title><rect x="1061" y="260" width="21" height="15" fill="rgb(236,109,53)"/><text x="1064.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.73%)</title><rect x="1061" y="276" width="21" height="15" fill="rgb(235,19,2)"/><text x="1064.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.73%)</title><rect x="1061" y="292" width="21" height="15" fill="rgb(233,40,48)"/><text x="1064.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.73%)</title><rect x="1061" y="308" width="21" height="15" fill="rgb(246,53,8)"/><text x="1064.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="1084" y="324" width="2" height="15" fill="rgb(205,162,38)"/><text x="1087.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (19 samples, 2.99%)</title><rect x="1082" y="292" width="35" height="15" fill="rgb(238,29,3)"/><text x="1085.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (19 samples, 2.99%)</title><rect x="1082" y="308" width="35" height="15" fill="rgb(206,48,53)"/><text x="1085.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (17 samples, 2.67%)</title><rect x="1086" y="324" width="31" height="15" fill="rgb(217,74,12)"/><text x="1089.00" y="334.50">_a..</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (70 samples, 11.01%)</title><rect x="989" y="180" width="130" height="15" fill="rgb(252,95,52)"/><text x="992.00" y="190.50">decision_functio..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (48 samples, 7.55%)</title><rect x="1030" y="196" width="89" height="15" fill="rgb(206,38,14)"/><text x="1033.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 5.03%)</title><rect x="1060" y="212" width="59" height="15" fill="rgb(236,130,48)"/><text x="1063.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (32 samples, 5.03%)</title><rect x="1060" y="228" width="59" height="15" fill="rgb(222,61,9)"/><text x="1063.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (32 samples, 5.03%)</title><rect x="1060" y="244" width="59" height="15" fill="rgb(226,167,38)"/><text x="1063.00" y="254.50">PyUFun..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (20 samples, 3.14%)</title><rect x="1082" y="260" width="37" height="15" fill="rgb(229,177,2)"/><text x="1085.00" y="270.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (20 samples, 3.14%)</title><rect x="1082" y="276" width="37" height="15" fill="rgb(240,120,33)"/><text x="1085.00" y="286.50">npy..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(232,158,53)"/><text x="1120.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1117" y="308" width="2" height="15" fill="rgb(248,24,14)"/><text x="1120.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1117" y="324" width="2" height="15" fill="rgb(233,132,2)"/><text x="1120.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1117" y="340" width="2" height="15" fill="rgb(219,150,29)"/><text x="1120.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (8 samples, 1.26%)</title><rect x="1119" y="244" width="15" height="15" fill="rgb(250,209,49)"/><text x="1122.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (8 samples, 1.26%)</title><rect x="1119" y="260" width="15" height="15" fill="rgb(242,19,39)"/><text x="1122.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (8 samples, 1.26%)</title><rect x="1119" y="276" width="15" height="15" fill="rgb(245,155,40)"/><text x="1122.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (8 samples, 1.26%)</title><rect x="1119" y="292" width="15" height="15" fill="rgb(220,130,44)"/><text x="1122.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1134" y="244" width="2" height="15" fill="rgb(254,141,49)"/><text x="1137.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1134" y="260" width="2" height="15" fill="rgb(223,7,14)"/><text x="1137.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 2.04%)</title><rect x="1119" y="228" width="24" height="15" fill="rgb(219,11,15)"/><text x="1122.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.63%)</title><rect x="1136" y="244" width="7" height="15" fill="rgb(245,98,43)"/><text x="1139.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.63%)</title><rect x="1136" y="260" width="7" height="15" fill="rgb(229,19,10)"/><text x="1139.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.63%)</title><rect x="1136" y="276" width="7" height="15" fill="rgb(214,222,47)"/><text x="1139.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(226,80,27)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fed090d19dd (?) (1 samples, 0.16%)</title><rect x="1143" y="244" width="2" height="15" fill="rgb(252,0,8)"/><text x="1146.00" y="254.50"></text></g><g><title>0x7fed090f2279 (?) (1 samples, 0.16%)</title><rect x="1143" y="260" width="2" height="15" fill="rgb(210,7,21)"/><text x="1146.00" y="270.50"></text></g><g><title>0x7fed090f2254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1145" y="260" width="4" height="15" fill="rgb(217,35,29)"/><text x="1148.00" y="270.50"></text></g><g><title>0x7fed090affe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1152" y="276" width="2" height="15" fill="rgb(210,90,24)"/><text x="1155.00" y="286.50"></text></g><g><title>0x7fed26e171b0 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(248,143,34)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7fed26e9dbd3 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(223,87,41)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fed26e9dbe7 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1158" y="292" width="4" height="15" fill="rgb(251,132,38)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7fed26e9dbf9 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(246,0,19)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7fed26e9dc18 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="1164" y="292" width="1" height="15" fill="rgb(214,215,18)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7fed090f2265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.73%)</title><rect x="1149" y="260" width="20" height="15" fill="rgb(231,147,43)"/><text x="1152.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.26%)</title><rect x="1154" y="276" width="15" height="15" fill="rgb(251,19,34)"/><text x="1157.00" y="286.50"></text></g><g><title>0x7fed26e9dc2e (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1165" y="292" width="4" height="15" fill="rgb(229,204,53)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7fed090d19dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.30%)</title><rect x="1145" y="244" width="39" height="15" fill="rgb(205,174,32)"/><text x="1148.00" y="254.50">0x7..</text></g><g><title>0x7fed090f2279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.26%)</title><rect x="1169" y="260" width="15" height="15" fill="rgb(212,179,46)"/><text x="1172.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (122 samples, 19.18%)</title><rect x="959" y="164" width="227" height="15" fill="rgb(210,13,42)"/><text x="962.00" y="174.50">_predict_proba_lr (sklearn/lin..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (36 samples, 5.66%)</title><rect x="1119" y="180" width="67" height="15" fill="rgb(244,52,14)"/><text x="1122.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (36 samples, 5.66%)</title><rect x="1119" y="196" width="67" height="15" fill="rgb(227,74,11)"/><text x="1122.00" y="206.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 5.66%)</title><rect x="1119" y="212" width="67" height="15" fill="rgb(205,133,7)"/><text x="1122.00" y="222.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (23 samples, 3.62%)</title><rect x="1143" y="228" width="43" height="15" fill="rgb(215,126,16)"/><text x="1146.00" y="238.50">triv..</text></g><g><title>0x7fed090d19e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(207,34,17)"/><text x="1187.00" y="254.50"></text></g><g><title>all (636 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(206,158,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (636 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,208,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (129 samples, 20.28%)</title><rect x="950" y="68" width="240" height="15" fill="rgb(237,208,9)"/><text x="953.00" y="78.50">profile_skl (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (129 samples, 20.28%)</title><rect x="950" y="84" width="240" height="15" fill="rgb(241,30,51)"/><text x="953.00" y="94.50">setup_profile (bench_LogisticRe..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_.py) (129 samples, 20.28%)</title><rect x="950" y="100" width="240" height="15" fill="rgb(231,176,12)"/><text x="953.00" y="110.50">profile (bench_LogisticRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 19.97%)</title><rect x="954" y="116" width="236" height="15" fill="rgb(253,196,41)"/><text x="957.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 19.97%)</title><rect x="954" y="132" width="236" height="15" fill="rgb(252,62,50)"/><text x="957.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (127 samples, 19.97%)</title><rect x="954" y="148" width="236" height="15" fill="rgb(229,15,15)"/><text x="957.00" y="158.50">predict_proba (sklearn/linear_m..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(249,126,18)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(239,25,34)"/><text x="1191.00" y="190.50"></text></g></g></svg>