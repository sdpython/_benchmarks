<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(212,182,34)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(214,109,34)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(213,214,10)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(213,114,41)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(231,92,48)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(233,217,40)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(220,32,11)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(219,202,21)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(242,30,21)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(247,117,32)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.13%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(209,125,47)"/><text x="14.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(218,83,29)"/><text x="14.00" y="1054.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="13" y="1012" width="1" height="15" fill="rgb(235,52,4)"/><text x="16.00" y="1022.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="13" y="1028" width="1" height="15" fill="rgb(218,229,46)"/><text x="16.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(252,67,38)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(222,74,44)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(209,39,33)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.27%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(241,200,53)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.27%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(244,123,53)"/><text x="16.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(220,226,15)"/><text x="17.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(242,41,10)"/><text x="17.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(213,204,44)"/><text x="17.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(212,19,5)"/><text x="17.00" y="1070.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 0.53%)</title><rect x="13" y="868" width="6" height="15" fill="rgb(234,142,0)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 0.53%)</title><rect x="13" y="884" width="6" height="15" fill="rgb(209,26,50)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.53%)</title><rect x="13" y="900" width="6" height="15" fill="rgb(240,145,18)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 0.53%)</title><rect x="13" y="916" width="6" height="15" fill="rgb(226,116,54)"/><text x="16.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(235,87,49)"/><text x="19.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(244,31,4)"/><text x="20.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(213,9,19)"/><text x="20.00" y="974.50"></text></g><g><title>0x7f4d22678237 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(229,229,25)"/><text x="20.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 0.93%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(222,156,20)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 0.93%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(226,27,53)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(238,160,4)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(254,114,12)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(243,36,10)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(233,156,33)"/><text x="22.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(232,16,17)"/><text x="22.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(230,157,17)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(222,67,33)"/><text x="22.00" y="974.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.13%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(224,56,29)"/><text x="22.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.07%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(209,73,39)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(210,103,36)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 1.07%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(225,108,36)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(238,211,17)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(232,51,47)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(207,157,54)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.07%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(205,88,40)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(231,19,3)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 1.07%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(211,3,32)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(223,119,50)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(206,142,33)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(237,142,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.07%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(213,13,19)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(241,215,4)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 1.07%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(250,91,36)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(207,20,32)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(242,229,35)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="628" width="12" height="15" fill="rgb(250,95,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="644" width="12" height="15" fill="rgb(220,48,20)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="660" width="12" height="15" fill="rgb(251,98,17)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="676" width="12" height="15" fill="rgb(240,12,33)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.07%)</title><rect x="10" y="692" width="12" height="15" fill="rgb(233,139,26)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="708" width="12" height="15" fill="rgb(214,167,27)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 1.07%)</title><rect x="10" y="724" width="12" height="15" fill="rgb(247,141,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="740" width="12" height="15" fill="rgb(221,47,44)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="756" width="12" height="15" fill="rgb(215,160,3)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="772" width="12" height="15" fill="rgb(253,109,37)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.07%)</title><rect x="10" y="788" width="12" height="15" fill="rgb(244,170,49)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.07%)</title><rect x="10" y="804" width="12" height="15" fill="rgb(214,77,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 1.07%)</title><rect x="10" y="820" width="12" height="15" fill="rgb(238,99,5)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(207,88,31)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(226,102,46)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(253,79,10)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(240,72,53)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(226,130,49)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.13%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(209,36,6)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(252,24,25)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(207,192,11)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(245,40,11)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(220,96,20)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(226,96,11)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.13%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(222,59,52)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(243,164,48)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(251,108,16)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(250,184,10)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(218,186,0)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(235,229,26)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.13%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(233,143,43)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(233,134,41)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(250,141,14)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(233,153,18)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(217,124,31)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(233,4,12)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.13%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(205,162,39)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(207,193,31)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(217,208,31)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(209,173,4)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(224,123,6)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(233,7,49)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (1 samples, 0.13%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(223,39,29)"/><text x="24.00" y="1310.50"></text></g><g><title>_get_exports_list (os.py) (1 samples, 0.13%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(232,184,34)"/><text x="24.00" y="1326.50"></text></g><g><title>&lt;listcomp&gt; (os.py) (1 samples, 0.13%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(242,212,29)"/><text x="24.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 1.20%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(215,141,48)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(235,219,20)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(230,146,45)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(207,75,25)"/><text x="13.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="356" width="2" height="15" fill="rgb(213,29,53)"/><text x="25.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="372" width="2" height="15" fill="rgb(226,124,20)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="388" width="2" height="15" fill="rgb(252,225,35)"/><text x="25.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="404" width="2" height="15" fill="rgb(254,200,43)"/><text x="25.00" y="414.50"></text></g><g><title>0x7f4d228c0995 (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="420" width="2" height="15" fill="rgb(248,68,53)"/><text x="25.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="436" width="2" height="15" fill="rgb(243,212,28)"/><text x="25.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="452" width="2" height="15" fill="rgb(226,161,53)"/><text x="25.00" y="462.50"></text></g><g><title>0x7f4d228c0258 (libdl-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="468" width="2" height="15" fill="rgb(220,176,12)"/><text x="25.00" y="478.50"></text></g><g><title>0x7f4d2290dd7a (ld-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="484" width="2" height="15" fill="rgb(214,78,17)"/><text x="25.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="500" width="2" height="15" fill="rgb(249,173,24)"/><text x="25.00" y="510.50"></text></g><g><title>0x7f4d2290e345 (ld-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="516" width="2" height="15" fill="rgb(227,132,17)"/><text x="25.00" y="526.50"></text></g><g><title>0x7f4d22906f28 (ld-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="532" width="2" height="15" fill="rgb(209,29,30)"/><text x="25.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(228,142,45)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(224,133,51)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(239,113,18)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(241,97,43)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.33%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(252,69,32)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(246,134,48)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="292" width="1" height="15" fill="rgb(224,183,8)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="308" width="1" height="15" fill="rgb(234,141,18)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="324" width="1" height="15" fill="rgb(213,206,33)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="340" width="1" height="15" fill="rgb(217,180,34)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="356" width="1" height="15" fill="rgb(216,183,14)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="372" width="1" height="15" fill="rgb(216,78,7)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.13%)</title><rect x="24" y="388" width="1" height="15" fill="rgb(242,70,28)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="404" width="1" height="15" fill="rgb(230,189,24)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="420" width="1" height="15" fill="rgb(209,8,34)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="436" width="1" height="15" fill="rgb(241,67,26)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="452" width="1" height="15" fill="rgb(250,152,22)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="468" width="1" height="15" fill="rgb(221,106,47)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="484" width="1" height="15" fill="rgb(248,9,8)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="500" width="1" height="15" fill="rgb(253,169,31)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="516" width="1" height="15" fill="rgb(222,192,30)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="532" width="1" height="15" fill="rgb(254,177,35)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="548" width="1" height="15" fill="rgb(223,196,36)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="564" width="1" height="15" fill="rgb(213,66,4)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="580" width="1" height="15" fill="rgb(221,24,3)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="596" width="1" height="15" fill="rgb(213,139,13)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="612" width="1" height="15" fill="rgb(249,81,54)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="628" width="1" height="15" fill="rgb(207,5,38)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="644" width="1" height="15" fill="rgb(226,81,50)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="660" width="1" height="15" fill="rgb(223,7,26)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py) (1 samples, 0.13%)</title><rect x="24" y="676" width="1" height="15" fill="rgb(222,180,46)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="692" width="1" height="15" fill="rgb(237,202,13)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="708" width="1" height="15" fill="rgb(216,228,12)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="724" width="1" height="15" fill="rgb(247,171,22)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="740" width="1" height="15" fill="rgb(225,162,2)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="756" width="1" height="15" fill="rgb(231,49,10)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py) (1 samples, 0.13%)</title><rect x="24" y="772" width="1" height="15" fill="rgb(226,165,53)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="788" width="1" height="15" fill="rgb(227,63,47)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="804" width="1" height="15" fill="rgb(234,144,0)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="820" width="1" height="15" fill="rgb(234,57,48)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="836" width="1" height="15" fill="rgb(223,44,5)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="852" width="1" height="15" fill="rgb(227,10,22)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/data.py) (1 samples, 0.13%)</title><rect x="24" y="868" width="1" height="15" fill="rgb(217,34,8)"/><text x="27.00" y="878.50"></text></g><g><title>_minmax_mixin (scipy/sparse/data.py) (1 samples, 0.13%)</title><rect x="24" y="884" width="1" height="15" fill="rgb(222,222,27)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1124" width="3" height="15" fill="rgb(212,99,37)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1140" width="3" height="15" fill="rgb(252,190,1)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1156" width="3" height="15" fill="rgb(249,60,34)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="25" y="1172" width="3" height="15" fill="rgb(241,42,0)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1188" width="3" height="15" fill="rgb(237,209,22)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.27%)</title><rect x="25" y="1204" width="3" height="15" fill="rgb(251,209,3)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1220" width="3" height="15" fill="rgb(224,187,45)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1236" width="3" height="15" fill="rgb(222,154,30)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1252" width="3" height="15" fill="rgb(214,150,4)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="25" y="1268" width="3" height="15" fill="rgb(228,218,44)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="1284" width="3" height="15" fill="rgb(209,105,25)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.27%)</title><rect x="25" y="1300" width="3" height="15" fill="rgb(222,24,42)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.27%)</title><rect x="25" y="1316" width="3" height="15" fill="rgb(232,63,45)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.27%)</title><rect x="25" y="1332" width="3" height="15" fill="rgb(238,142,33)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.27%)</title><rect x="25" y="1348" width="3" height="15" fill="rgb(231,89,25)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.27%)</title><rect x="25" y="1364" width="3" height="15" fill="rgb(206,74,52)"/><text x="28.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.27%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(216,174,54)"/><text x="28.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (2 samples, 0.27%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(230,189,34)"/><text x="28.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.27%)</title><rect x="25" y="1412" width="3" height="15" fill="rgb(237,114,40)"/><text x="28.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.27%)</title><rect x="25" y="1428" width="3" height="15" fill="rgb(229,122,20)"/><text x="28.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="484" width="5" height="15" fill="rgb(249,90,0)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="500" width="5" height="15" fill="rgb(213,198,27)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="516" width="5" height="15" fill="rgb(210,157,10)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="532" width="5" height="15" fill="rgb(216,185,6)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="548" width="5" height="15" fill="rgb(253,11,46)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="564" width="5" height="15" fill="rgb(231,19,37)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.40%)</title><rect x="25" y="580" width="5" height="15" fill="rgb(254,175,24)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="596" width="5" height="15" fill="rgb(245,150,34)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="612" width="5" height="15" fill="rgb(229,164,39)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="628" width="5" height="15" fill="rgb(207,158,18)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="644" width="5" height="15" fill="rgb(226,109,27)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="660" width="5" height="15" fill="rgb(230,6,51)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.40%)</title><rect x="25" y="676" width="5" height="15" fill="rgb(221,70,31)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="692" width="5" height="15" fill="rgb(207,133,50)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="708" width="5" height="15" fill="rgb(240,157,40)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="724" width="5" height="15" fill="rgb(245,19,6)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="740" width="5" height="15" fill="rgb(213,2,3)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="756" width="5" height="15" fill="rgb(225,25,47)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.40%)</title><rect x="25" y="772" width="5" height="15" fill="rgb(248,22,14)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="788" width="5" height="15" fill="rgb(224,88,19)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="804" width="5" height="15" fill="rgb(215,220,46)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="820" width="5" height="15" fill="rgb(234,52,18)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="836" width="5" height="15" fill="rgb(245,175,45)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(234,5,38)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.40%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(205,98,46)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(211,139,6)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(221,172,49)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(240,178,53)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(250,196,33)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(234,205,50)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(209,149,35)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(237,203,18)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(252,216,9)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.40%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(227,145,1)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="1028" width="5" height="15" fill="rgb(232,208,20)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="1044" width="5" height="15" fill="rgb(234,146,22)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="1060" width="5" height="15" fill="rgb(251,117,18)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="25" y="1076" width="5" height="15" fill="rgb(210,223,8)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="25" y="1092" width="5" height="15" fill="rgb(217,107,53)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.40%)</title><rect x="25" y="1108" width="5" height="15" fill="rgb(238,124,15)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(244,91,9)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(224,33,52)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(243,106,53)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(230,129,31)"/><text x="31.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(247,173,1)"/><text x="31.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(240,226,28)"/><text x="31.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(237,9,36)"/><text x="31.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.13%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(235,5,9)"/><text x="31.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(225,186,16)"/><text x="31.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(226,176,2)"/><text x="31.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(219,198,19)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1300" width="2" height="15" fill="rgb(240,152,12)"/><text x="31.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1316" width="2" height="15" fill="rgb(214,212,21)"/><text x="31.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(222,206,31)"/><text x="31.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(243,9,5)"/><text x="31.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.13%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(254,153,39)"/><text x="31.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(207,89,38)"/><text x="31.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(206,184,8)"/><text x="31.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(207,207,4)"/><text x="31.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(245,170,1)"/><text x="31.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="28" y="1444" width="2" height="15" fill="rgb(248,99,32)"/><text x="31.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="28" y="1460" width="2" height="15" fill="rgb(210,89,26)"/><text x="31.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(228,79,23)"/><text x="31.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(227,109,15)"/><text x="31.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(243,100,10)"/><text x="31.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(207,130,5)"/><text x="31.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(242,26,47)"/><text x="31.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="28" y="1556" width="2" height="15" fill="rgb(253,41,22)"/><text x="31.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py) (1 samples, 0.13%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(230,162,7)"/><text x="31.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py) (1 samples, 0.13%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(208,58,38)"/><text x="31.00" y="1598.50"></text></g><g><title>&lt;lambda&gt; (jinja2/_compat.py) (1 samples, 0.13%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(252,28,47)"/><text x="31.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.53%)</title><rect x="25" y="436" width="7" height="15" fill="rgb(207,13,32)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="25" y="452" width="7" height="15" fill="rgb(228,0,26)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="25" y="468" width="7" height="15" fill="rgb(239,0,14)"/><text x="28.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="484" width="2" height="15" fill="rgb(230,129,23)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="500" width="2" height="15" fill="rgb(223,9,46)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="516" width="2" height="15" fill="rgb(228,58,49)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="30" y="532" width="2" height="15" fill="rgb(244,54,4)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="548" width="2" height="15" fill="rgb(207,8,25)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="564" width="2" height="15" fill="rgb(216,112,12)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="580" width="2" height="15" fill="rgb(253,201,47)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="596" width="2" height="15" fill="rgb(220,126,16)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="612" width="2" height="15" fill="rgb(237,208,42)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.13%)</title><rect x="30" y="628" width="2" height="15" fill="rgb(249,0,48)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="644" width="2" height="15" fill="rgb(241,216,21)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="660" width="2" height="15" fill="rgb(215,44,18)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="676" width="2" height="15" fill="rgb(209,35,24)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="692" width="2" height="15" fill="rgb(227,38,20)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="708" width="2" height="15" fill="rgb(226,112,11)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.13%)</title><rect x="30" y="724" width="2" height="15" fill="rgb(212,13,47)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="740" width="2" height="15" fill="rgb(248,157,4)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="756" width="2" height="15" fill="rgb(211,79,22)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="772" width="2" height="15" fill="rgb(207,85,50)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="788" width="2" height="15" fill="rgb(244,64,38)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="804" width="2" height="15" fill="rgb(247,7,14)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.13%)</title><rect x="30" y="820" width="2" height="15" fill="rgb(216,126,19)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(243,10,11)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(252,46,22)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(220,156,0)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(247,13,26)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(212,58,24)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.13%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(228,112,20)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(223,12,25)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(246,218,40)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(246,204,13)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(232,223,43)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(207,86,31)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(232,200,41)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(248,99,9)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(224,63,51)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1060" width="2" height="15" fill="rgb(240,195,30)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1076" width="2" height="15" fill="rgb(208,99,11)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1092" width="2" height="15" fill="rgb(215,180,50)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="30" y="1108" width="2" height="15" fill="rgb(240,215,23)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(206,132,4)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(248,169,28)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(210,11,11)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(231,161,42)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(238,114,4)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(246,11,13)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(228,211,12)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(212,145,7)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(211,134,26)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(254,220,1)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(254,40,47)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(210,168,41)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(246,199,4)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(222,33,9)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(252,12,33)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(211,114,9)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(209,209,47)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(205,192,37)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(237,5,2)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(248,187,20)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(236,73,31)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(221,218,1)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(235,180,16)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.13%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(252,49,3)"/><text x="33.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(217,107,11)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(230,175,35)"/><text x="33.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(253,36,12)"/><text x="33.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(254,9,13)"/><text x="33.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(239,227,11)"/><text x="33.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.13%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(247,208,29)"/><text x="33.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(217,165,54)"/><text x="33.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(211,210,9)"/><text x="33.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(252,62,36)"/><text x="33.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(227,121,45)"/><text x="33.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(219,228,31)"/><text x="33.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.13%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(208,35,33)"/><text x="33.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(251,57,22)"/><text x="33.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1716" width="2" height="15" fill="rgb(214,191,52)"/><text x="33.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1732" width="2" height="15" fill="rgb(230,19,1)"/><text x="33.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1748" width="2" height="15" fill="rgb(216,83,20)"/><text x="33.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1764" width="2" height="15" fill="rgb(248,70,46)"/><text x="33.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.13%)</title><rect x="30" y="1780" width="2" height="15" fill="rgb(249,87,11)"/><text x="33.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1796" width="2" height="15" fill="rgb(246,180,40)"/><text x="33.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1812" width="2" height="15" fill="rgb(242,164,2)"/><text x="33.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1828" width="2" height="15" fill="rgb(246,14,8)"/><text x="33.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="30" y="1844" width="2" height="15" fill="rgb(211,179,12)"/><text x="33.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="30" y="1860" width="2" height="15" fill="rgb(252,224,10)"/><text x="33.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.13%)</title><rect x="30" y="1876" width="2" height="15" fill="rgb(224,75,39)"/><text x="33.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="30" y="1892" width="2" height="15" fill="rgb(213,216,46)"/><text x="33.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="30" y="1908" width="2" height="15" fill="rgb(232,221,16)"/><text x="33.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="30" y="1924" width="2" height="15" fill="rgb(246,59,26)"/><text x="33.00" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="68" width="23" height="15" fill="rgb(229,173,26)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="84" width="23" height="15" fill="rgb(222,217,28)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(230,178,0)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.00%)</title><rect x="10" y="116" width="23" height="15" fill="rgb(253,9,16)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="132" width="23" height="15" fill="rgb(242,178,53)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (15 samples, 2.00%)</title><rect x="10" y="148" width="23" height="15" fill="rgb(236,222,32)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="164" width="23" height="15" fill="rgb(212,65,30)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.00%)</title><rect x="10" y="180" width="23" height="15" fill="rgb(214,135,0)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="196" width="8" height="15" fill="rgb(252,59,13)"/><text x="28.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="25" y="212" width="8" height="15" fill="rgb(234,77,11)"/><text x="28.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="228" width="8" height="15" fill="rgb(235,2,51)"/><text x="28.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.67%)</title><rect x="25" y="244" width="8" height="15" fill="rgb(247,74,27)"/><text x="28.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="260" width="8" height="15" fill="rgb(213,166,46)"/><text x="28.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="276" width="8" height="15" fill="rgb(254,75,2)"/><text x="28.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="292" width="8" height="15" fill="rgb(250,54,23)"/><text x="28.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="25" y="308" width="8" height="15" fill="rgb(217,159,11)"/><text x="28.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="324" width="8" height="15" fill="rgb(205,169,29)"/><text x="28.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="25" y="340" width="8" height="15" fill="rgb(249,33,28)"/><text x="28.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="356" width="8" height="15" fill="rgb(242,120,38)"/><text x="28.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="372" width="8" height="15" fill="rgb(233,63,39)"/><text x="28.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="388" width="8" height="15" fill="rgb(230,218,48)"/><text x="28.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="25" y="404" width="8" height="15" fill="rgb(237,153,20)"/><text x="28.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="25" y="420" width="8" height="15" fill="rgb(213,51,17)"/><text x="28.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="436" width="1" height="15" fill="rgb(207,177,23)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="452" width="1" height="15" fill="rgb(222,158,12)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="468" width="1" height="15" fill="rgb(221,163,27)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="484" width="1" height="15" fill="rgb(251,194,17)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="500" width="1" height="15" fill="rgb(224,138,21)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="516" width="1" height="15" fill="rgb(218,26,27)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.13%)</title><rect x="32" y="532" width="1" height="15" fill="rgb(250,186,39)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="548" width="1" height="15" fill="rgb(208,36,45)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="564" width="1" height="15" fill="rgb(244,169,35)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="580" width="1" height="15" fill="rgb(247,89,39)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="596" width="1" height="15" fill="rgb(229,102,6)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="612" width="1" height="15" fill="rgb(253,164,51)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.13%)</title><rect x="32" y="628" width="1" height="15" fill="rgb(235,221,0)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="644" width="1" height="15" fill="rgb(206,22,5)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="660" width="1" height="15" fill="rgb(209,33,22)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="676" width="1" height="15" fill="rgb(245,88,52)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="692" width="1" height="15" fill="rgb(227,169,9)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="708" width="1" height="15" fill="rgb(233,159,25)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.13%)</title><rect x="32" y="724" width="1" height="15" fill="rgb(206,198,15)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="740" width="1" height="15" fill="rgb(213,97,35)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="756" width="1" height="15" fill="rgb(218,141,39)"/><text x="35.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="772" width="1" height="15" fill="rgb(235,7,8)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="788" width="1" height="15" fill="rgb(230,134,10)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="804" width="1" height="15" fill="rgb(206,68,48)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.13%)</title><rect x="32" y="820" width="1" height="15" fill="rgb(237,57,41)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="836" width="1" height="15" fill="rgb(234,37,35)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="852" width="1" height="15" fill="rgb(216,84,48)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="868" width="1" height="15" fill="rgb(251,58,47)"/><text x="35.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="884" width="1" height="15" fill="rgb(234,114,17)"/><text x="35.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="900" width="1" height="15" fill="rgb(218,73,16)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="916" width="1" height="15" fill="rgb(245,78,33)"/><text x="35.00" y="926.50"></text></g><g><title>0x7f4cfc03993c (?) (1 samples, 0.13%)</title><rect x="32" y="932" width="1" height="15" fill="rgb(213,119,49)"/><text x="35.00" y="942.50"></text></g><g><title>0x7f4d22637bc6 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="50" y="132" width="4" height="15" fill="rgb(213,229,45)"/><text x="53.00" y="142.50"></text></g><g><title>0x7f4d22637bdf (libc-2.29.so) (2 samples, 0.27%)</title><rect x="54" y="132" width="3" height="15" fill="rgb(251,183,8)"/><text x="57.00" y="142.50"></text></g><g><title>0x7f4d22637c04 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="57" y="132" width="1" height="15" fill="rgb(220,194,25)"/><text x="60.00" y="142.50"></text></g><g><title>0x7f4d22637c20 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="58" y="132" width="5" height="15" fill="rgb(210,120,52)"/><text x="61.00" y="142.50"></text></g><g><title>0x7f4d22637c4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="63" y="132" width="2" height="15" fill="rgb(248,56,0)"/><text x="66.00" y="142.50"></text></g><g><title>0x7f4d22637c6a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="65" y="132" width="1" height="15" fill="rgb(237,131,10)"/><text x="68.00" y="142.50"></text></g><g><title>0x7f4d22638eb0 (libc-2.29.so) (11 samples, 1.47%)</title><rect x="50" y="116" width="18" height="15" fill="rgb(229,146,45)"/><text x="53.00" y="126.50"></text></g><g><title>0x7f4d22637c6e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="66" y="132" width="2" height="15" fill="rgb(236,136,24)"/><text x="69.00" y="142.50"></text></g><g><title>0x7f4ce067bff9 (?) (1 samples, 0.13%)</title><rect x="72" y="212" width="2" height="15" fill="rgb(227,58,21)"/><text x="75.00" y="222.50"></text></g><g><title>0x7f4ce0676ef6 (?) (1 samples, 0.13%)</title><rect x="72" y="228" width="2" height="15" fill="rgb(244,149,43)"/><text x="75.00" y="238.50"></text></g><g><title>0x7f4ce066bc99 (?) (1 samples, 0.13%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(212,132,29)"/><text x="75.00" y="254.50"></text></g><g><title>0x7f4ce0689d21 (?) (1 samples, 0.13%)</title><rect x="72" y="260" width="2" height="15" fill="rgb(240,153,53)"/><text x="75.00" y="270.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (12 samples, 1.60%)</title><rect x="74" y="212" width="19" height="15" fill="rgb(211,30,3)"/><text x="77.00" y="222.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="98" y="292" width="1" height="15" fill="rgb(244,100,26)"/><text x="101.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="98" y="308" width="1" height="15" fill="rgb(225,59,35)"/><text x="101.00" y="318.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="372" width="1" height="15" fill="rgb(213,100,4)"/><text x="107.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="388" width="1" height="15" fill="rgb(229,199,14)"/><text x="107.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="404" width="1" height="15" fill="rgb(218,169,11)"/><text x="107.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="420" width="1" height="15" fill="rgb(206,67,43)"/><text x="107.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="436" width="1" height="15" fill="rgb(251,44,46)"/><text x="107.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="452" width="1" height="15" fill="rgb(248,229,27)"/><text x="107.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="468" width="1" height="15" fill="rgb(252,46,52)"/><text x="107.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="484" width="1" height="15" fill="rgb(211,227,16)"/><text x="107.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="104" y="500" width="1" height="15" fill="rgb(220,110,51)"/><text x="107.00" y="510.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.80%)</title><rect x="99" y="340" width="10" height="15" fill="rgb(205,57,22)"/><text x="102.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.80%)</title><rect x="99" y="356" width="10" height="15" fill="rgb(229,195,44)"/><text x="102.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="105" y="372" width="4" height="15" fill="rgb(236,108,54)"/><text x="108.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="107" y="388" width="2" height="15" fill="rgb(249,229,14)"/><text x="110.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="107" y="404" width="2" height="15" fill="rgb(218,219,0)"/><text x="110.00" y="414.50"></text></g><g><title>0x7f4d2263a6db (libc-2.29.so) (1 samples, 0.13%)</title><rect x="107" y="420" width="2" height="15" fill="rgb(244,228,38)"/><text x="110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="109" y="340" width="3" height="15" fill="rgb(217,90,37)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="109" y="356" width="3" height="15" fill="rgb(214,194,13)"/><text x="112.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="109" y="372" width="3" height="15" fill="rgb(244,223,22)"/><text x="112.00" y="382.50"></text></g><g><title>onnxruntime::GemmHelper::GemmHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="137" y="356" width="2" height="15" fill="rgb(231,117,47)"/><text x="140.00" y="366.50"></text></g><g><title>mkl_blas_errchk_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.13%)</title><rect x="139" y="404" width="1" height="15" fill="rgb(253,228,28)"/><text x="142.00" y="414.50"></text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (59 samples, 7.87%)</title><rect x="140" y="468" width="93" height="15" fill="rgb(250,218,44)"/><text x="143.00" y="478.50">mkl_blas_av..</text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.13%)</title><rect x="233" y="484" width="1" height="15" fill="rgb(254,29,34)"/><text x="236.00" y="494.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (81 samples, 10.80%)</title><rect x="112" y="340" width="127" height="15" fill="rgb(235,28,5)"/><text x="115.00" y="350.50">onnxruntime::Ge..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 8.53%)</title><rect x="139" y="356" width="100" height="15" fill="rgb(222,170,48)"/><text x="142.00" y="366.50">onnxruntime:..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (64 samples, 8.53%)</title><rect x="139" y="372" width="100" height="15" fill="rgb(254,172,6)"/><text x="142.00" y="382.50">cblas_sgemm ..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (64 samples, 8.53%)</title><rect x="139" y="388" width="100" height="15" fill="rgb(239,47,17)"/><text x="142.00" y="398.50">sgemm_ (onnx..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 8.40%)</title><rect x="140" y="404" width="99" height="15" fill="rgb(210,199,43)"/><text x="143.00" y="414.50">mkl_blas_sg..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (63 samples, 8.40%)</title><rect x="140" y="420" width="99" height="15" fill="rgb(212,99,23)"/><text x="143.00" y="430.50">mkl_blas_sg..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 8.40%)</title><rect x="140" y="436" width="99" height="15" fill="rgb(248,82,3)"/><text x="143.00" y="446.50">mkl_blas_xs..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 8.40%)</title><rect x="140" y="452" width="99" height="15" fill="rgb(228,192,28)"/><text x="143.00" y="462.50">mkl_blas_av..</text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.53%)</title><rect x="233" y="468" width="6" height="15" fill="rgb(211,92,22)"/><text x="236.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.40%)</title><rect x="234" y="484" width="5" height="15" fill="rgb(238,216,25)"/><text x="237.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.40%)</title><rect x="234" y="500" width="5" height="15" fill="rgb(251,143,47)"/><text x="237.00" y="510.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="239" y="340" width="2" height="15" fill="rgb(236,158,18)"/><text x="242.00" y="350.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.20%)</title><rect x="241" y="340" width="14" height="15" fill="rgb(247,147,26)"/><text x="244.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="253" y="356" width="2" height="15" fill="rgb(214,224,23)"/><text x="256.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="253" y="372" width="2" height="15" fill="rgb(237,127,1)"/><text x="256.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="253" y="388" width="2" height="15" fill="rgb(213,100,54)"/><text x="256.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="253" y="404" width="2" height="15" fill="rgb(226,21,0)"/><text x="256.00" y="414.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="255" y="420" width="5" height="15" fill="rgb(235,101,20)"/><text x="258.00" y="430.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseBinaryIO&lt;Eigen::internal::scalar_difference_op&lt;float const, float const&gt;, long, float, 2, 1&gt;::Run&lt;float, float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="260" y="436" width="3" height="15" fill="rgb(244,75,15)"/><text x="263.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.80%)</title><rect x="260" y="420" width="9" height="15" fill="rgb(236,224,5)"/><text x="263.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="263" y="436" width="6" height="15" fill="rgb(234,154,7)"/><text x="266.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNSY_IlLi4EEES14_S14_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="263" y="452" width="6" height="15" fill="rgb(249,200,39)"/><text x="266.00" y="462.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="263" y="468" width="6" height="15" fill="rgb(230,98,46)"/><text x="266.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="266" y="484" width="3" height="15" fill="rgb(206,60,3)"/><text x="269.00" y="494.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.33%)</title><rect x="255" y="372" width="16" height="15" fill="rgb(229,91,18)"/><text x="258.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.33%)</title><rect x="255" y="388" width="16" height="15" fill="rgb(217,67,1)"/><text x="258.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.33%)</title><rect x="255" y="404" width="16" height="15" fill="rgb(212,162,6)"/><text x="258.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="269" y="420" width="2" height="15" fill="rgb(248,167,16)"/><text x="272.00" y="430.50"></text></g><g><title>0x7f4d22639d14 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="269" y="436" width="2" height="15" fill="rgb(227,54,14)"/><text x="272.00" y="446.50"></text></g><g><title>_ZN5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEEC2ERSV_RKSW_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="271" y="372" width="1" height="15" fill="rgb(232,195,52)"/><text x="274.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="272" y="388" width="8" height="15" fill="rgb(243,13,52)"/><text x="275.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="272" y="404" width="8" height="15" fill="rgb(225,30,17)"/><text x="275.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="272" y="420" width="8" height="15" fill="rgb(252,189,32)"/><text x="275.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="274" y="436" width="6" height="15" fill="rgb(218,5,18)"/><text x="277.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="274" y="452" width="6" height="15" fill="rgb(229,179,9)"/><text x="277.00" y="462.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNS12_IlLi4EEES18_S18_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="274" y="468" width="6" height="15" fill="rgb(241,18,46)"/><text x="277.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="274" y="484" width="6" height="15" fill="rgb(241,194,54)"/><text x="277.00" y="494.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="274" y="500" width="6" height="15" fill="rgb(246,87,1)"/><text x="277.00" y="510.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.40%)</title><rect x="255" y="340" width="28" height="15" fill="rgb(210,150,45)"/><text x="258.00" y="350.50">o..</text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.40%)</title><rect x="255" y="356" width="28" height="15" fill="rgb(225,174,47)"/><text x="258.00" y="366.50">o..</text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.93%)</title><rect x="272" y="372" width="11" height="15" fill="rgb(233,117,52)"/><text x="275.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="280" y="388" width="3" height="15" fill="rgb(233,10,40)"/><text x="283.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="280" y="404" width="3" height="15" fill="rgb(233,160,52)"/><text x="283.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="280" y="420" width="3" height="15" fill="rgb(222,16,47)"/><text x="283.00" y="430.50"></text></g><g><title>onnxruntime::SequenceType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="288" y="356" width="2" height="15" fill="rgb(215,7,9)"/><text x="291.00" y="366.50"></text></g><g><title>0x7f4d22639b1c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="330" y="388" width="2" height="15" fill="rgb(228,175,45)"/><text x="333.00" y="398.50"></text></g><g><title>0x7f4d22639b24 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="332" y="388" width="3" height="15" fill="rgb(247,71,35)"/><text x="335.00" y="398.50"></text></g><g><title>0x7f4d22639b61 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="335" y="388" width="2" height="15" fill="rgb(217,159,40)"/><text x="338.00" y="398.50"></text></g><g><title>0x7f4d22639d8d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="337" y="388" width="1" height="15" fill="rgb(218,197,5)"/><text x="340.00" y="398.50"></text></g><g><title>0x7f4d22639d9f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="338" y="388" width="2" height="15" fill="rgb(212,69,38)"/><text x="341.00" y="398.50"></text></g><g><title>0x7f4d22639db4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="340" y="388" width="1" height="15" fill="rgb(251,169,8)"/><text x="343.00" y="398.50"></text></g><g><title>0x7f4d22639dd2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="341" y="388" width="2" height="15" fill="rgb(249,94,48)"/><text x="344.00" y="398.50"></text></g><g><title>0x7f4d22639dec (libc-2.29.so) (1 samples, 0.13%)</title><rect x="343" y="388" width="2" height="15" fill="rgb(234,87,43)"/><text x="346.00" y="398.50"></text></g><g><title>0x7f4d22639f2a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="345" y="388" width="1" height="15" fill="rgb(216,22,47)"/><text x="348.00" y="398.50"></text></g><g><title>0x7f4d22639fde (libc-2.29.so) (1 samples, 0.13%)</title><rect x="346" y="388" width="2" height="15" fill="rgb(222,224,31)"/><text x="349.00" y="398.50"></text></g><g><title>0x7f4d2263a08c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="348" y="388" width="1" height="15" fill="rgb(238,151,43)"/><text x="351.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (39 samples, 5.20%)</title><rect x="290" y="356" width="61" height="15" fill="rgb(253,7,54)"/><text x="293.00" y="366.50">operat..</text></g><g><title>malloc (libc-2.29.so) (38 samples, 5.07%)</title><rect x="291" y="372" width="60" height="15" fill="rgb(236,20,33)"/><text x="294.00" y="382.50">malloc..</text></g><g><title>0x7f4d2263a3d9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="349" y="388" width="2" height="15" fill="rgb(216,143,4)"/><text x="352.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="351" y="356" width="3" height="15" fill="rgb(206,73,32)"/><text x="354.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.53%)</title><rect x="354" y="356" width="6" height="15" fill="rgb(250,56,24)"/><text x="357.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (169 samples, 22.53%)</title><rect x="98" y="260" width="266" height="15" fill="rgb(209,160,23)"/><text x="101.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (169 samples, 22.53%)</title><rect x="98" y="276" width="266" height="15" fill="rgb(253,79,46)"/><text x="101.00" y="286.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 22.40%)</title><rect x="99" y="292" width="265" height="15" fill="rgb(241,143,28)"/><text x="102.00" y="302.50">onnxruntime::utils::ExecuteGraph (o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 22.40%)</title><rect x="99" y="308" width="265" height="15" fill="rgb(230,108,31)"/><text x="102.00" y="318.50">onnxruntime::utils::ExecuteGraphImp..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 22.40%)</title><rect x="99" y="324" width="265" height="15" fill="rgb(213,90,44)"/><text x="102.00" y="334.50">onnxruntime::SequentialExecutor::Ex..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.80%)</title><rect x="283" y="340" width="81" height="15" fill="rgb(226,198,49)"/><text x="286.00" y="350.50">onnxrunti..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="360" y="356" width="4" height="15" fill="rgb(233,47,23)"/><text x="363.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="364" y="260" width="1" height="15" fill="rgb(227,205,50)"/><text x="367.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.13%)</title><rect x="364" y="276" width="1" height="15" fill="rgb(251,172,2)"/><text x="367.00" y="286.50"></text></g><g><title>0x7f4d22716ea0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="364" y="292" width="1" height="15" fill="rgb(205,4,50)"/><text x="367.00" y="302.50"></text></g><g><title>0x7f4ce0643570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="414" y="276" width="1" height="15" fill="rgb(210,214,41)"/><text x="417.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.60%)</title><rect x="415" y="276" width="19" height="15" fill="rgb(229,41,22)"/><text x="418.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 6.27%)</title><rect x="365" y="260" width="74" height="15" fill="rgb(229,166,35)"/><text x="368.00" y="270.50">pybind11..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="434" y="276" width="5" height="15" fill="rgb(205,105,18)"/><text x="437.00" y="286.50"></text></g><g><title>0x7f4d22638945 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="439" y="292" width="3" height="15" fill="rgb(245,202,31)"/><text x="442.00" y="302.50"></text></g><g><title>0x7f4d226389d3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="442" y="292" width="2" height="15" fill="rgb(252,120,23)"/><text x="445.00" y="302.50"></text></g><g><title>0x7f4d22638cf0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="444" y="292" width="1" height="15" fill="rgb(235,90,8)"/><text x="447.00" y="302.50"></text></g><g><title>0x7f4d22638d07 (libc-2.29.so) (8 samples, 1.07%)</title><rect x="445" y="292" width="13" height="15" fill="rgb(232,78,14)"/><text x="448.00" y="302.50"></text></g><g><title>0x7f4d22638d13 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="458" y="292" width="1" height="15" fill="rgb(207,131,47)"/><text x="461.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="459" y="292" width="4" height="15" fill="rgb(219,139,37)"/><text x="462.00" y="302.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (275 samples, 36.67%)</title><rect x="33" y="68" width="433" height="15" fill="rgb(206,98,8)"/><text x="36.00" y="78.50">profile_ort (bench_MLPClassifier_default_m_cl_1000_4_12_flo..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (275 samples, 36.67%)</title><rect x="33" y="84" width="433" height="15" fill="rgb(218,7,35)"/><text x="36.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_f..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (275 samples, 36.67%)</title><rect x="33" y="100" width="433" height="15" fill="rgb(213,15,50)"/><text x="36.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 33.73%)</title><rect x="68" y="116" width="398" height="15" fill="rgb(234,201,22)"/><text x="71.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 33.73%)</title><rect x="68" y="132" width="398" height="15" fill="rgb(219,211,30)"/><text x="71.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (253 samples, 33.73%)</title><rect x="68" y="148" width="398" height="15" fill="rgb(208,78,17)"/><text x="71.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (252 samples, 33.60%)</title><rect x="69" y="164" width="397" height="15" fill="rgb(205,22,49)"/><text x="72.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (250 samples, 33.33%)</title><rect x="72" y="180" width="394" height="15" fill="rgb(208,76,27)"/><text x="75.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (250 samples, 33.33%)</title><rect x="72" y="196" width="394" height="15" fill="rgb(241,134,37)"/><text x="75.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (237 samples, 31.60%)</title><rect x="93" y="212" width="373" height="15" fill="rgb(230,194,40)"/><text x="96.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/ca..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (237 samples, 31.60%)</title><rect x="93" y="228" width="373" height="15" fill="rgb(212,57,53)"/><text x="96.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntim..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (237 samples, 31.60%)</title><rect x="93" y="244" width="373" height="15" fill="rgb(220,151,1)"/><text x="96.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mo..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.27%)</title><rect x="439" y="260" width="27" height="15" fill="rgb(229,168,52)"/><text x="442.00" y="270.50">s..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.27%)</title><rect x="439" y="276" width="27" height="15" fill="rgb(241,145,3)"/><text x="442.00" y="286.50">o..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="463" y="292" width="3" height="15" fill="rgb(205,179,44)"/><text x="466.00" y="302.50"></text></g><g><title>0x7f4d22638d07 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="463" y="308" width="3" height="15" fill="rgb(239,26,7)"/><text x="466.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(252,10,37)"/><text x="502.00" y="270.50"></text></g><g><title>0x7f4d22659103 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(242,74,24)"/><text x="502.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (3 samples, 0.40%)</title><rect x="499" y="228" width="5" height="15" fill="rgb(235,92,38)"/><text x="502.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.40%)</title><rect x="499" y="244" width="5" height="15" fill="rgb(213,199,39)"/><text x="502.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.13%)</title><rect x="502" y="260" width="2" height="15" fill="rgb(239,167,47)"/><text x="505.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (15 samples, 2.00%)</title><rect x="504" y="276" width="23" height="15" fill="rgb(212,137,17)"/><text x="507.00" y="286.50">P..</text></g><g><title>setArrayFromSequence (ctors.c) (15 samples, 2.00%)</title><rect x="504" y="292" width="23" height="15" fill="rgb(238,2,0)"/><text x="507.00" y="302.50">s..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (11 samples, 1.47%)</title><rect x="510" y="308" width="17" height="15" fill="rgb(253,93,36)"/><text x="513.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (11 samples, 1.47%)</title><rect x="510" y="324" width="17" height="15" fill="rgb(253,157,25)"/><text x="513.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (7 samples, 0.93%)</title><rect x="516" y="340" width="11" height="15" fill="rgb(218,134,40)"/><text x="519.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.13%)</title><rect x="530" y="340" width="2" height="15" fill="rgb(230,186,35)"/><text x="533.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (6 samples, 0.80%)</title><rect x="527" y="292" width="10" height="15" fill="rgb(250,129,5)"/><text x="530.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (6 samples, 0.80%)</title><rect x="527" y="308" width="10" height="15" fill="rgb(207,13,4)"/><text x="530.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (6 samples, 0.80%)</title><rect x="527" y="324" width="10" height="15" fill="rgb(251,32,11)"/><text x="530.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (3 samples, 0.40%)</title><rect x="532" y="340" width="5" height="15" fill="rgb(210,70,53)"/><text x="535.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.27%)</title><rect x="533" y="356" width="4" height="15" fill="rgb(249,184,8)"/><text x="536.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (29 samples, 3.87%)</title><rect x="504" y="260" width="45" height="15" fill="rgb(243,92,44)"/><text x="507.00" y="270.50">PyAr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (14 samples, 1.87%)</title><rect x="527" y="276" width="22" height="15" fill="rgb(236,19,28)"/><text x="530.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (8 samples, 1.07%)</title><rect x="537" y="292" width="12" height="15" fill="rgb(239,115,2)"/><text x="540.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (6 samples, 0.80%)</title><rect x="540" y="308" width="9" height="15" fill="rgb(219,42,19)"/><text x="543.00" y="318.50"></text></g><g><title>0x7f4d2185b3f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="548" y="324" width="1" height="15" fill="rgb(206,191,44)"/><text x="551.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (30 samples, 4.00%)</title><rect x="504" y="228" width="47" height="15" fill="rgb(228,153,1)"/><text x="507.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c) (30 samples, 4.00%)</title><rect x="504" y="244" width="47" height="15" fill="rgb(236,154,28)"/><text x="507.00" y="254.50">prep..</text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.13%)</title><rect x="549" y="260" width="2" height="15" fill="rgb(213,167,10)"/><text x="552.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.13%)</title><rect x="549" y="276" width="2" height="15" fill="rgb(236,141,15)"/><text x="552.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (36 samples, 4.80%)</title><rect x="496" y="212" width="56" height="15" fill="rgb(242,82,53)"/><text x="499.00" y="222.50">_run ..</text></g><g><title>array_tolist (methods.c) (1 samples, 0.13%)</title><rect x="551" y="228" width="1" height="15" fill="rgb(245,125,24)"/><text x="554.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.13%)</title><rect x="552" y="212" width="2" height="15" fill="rgb(231,121,37)"/><text x="555.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.13%)</title><rect x="552" y="228" width="2" height="15" fill="rgb(244,98,26)"/><text x="555.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.13%)</title><rect x="552" y="244" width="2" height="15" fill="rgb(241,99,8)"/><text x="555.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="552" y="260" width="2" height="15" fill="rgb(246,141,24)"/><text x="555.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="552" y="276" width="2" height="15" fill="rgb(227,217,36)"/><text x="555.00" y="286.50"></text></g><g><title>0x7f4d22658d94 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="552" y="292" width="2" height="15" fill="rgb(224,227,51)"/><text x="555.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.13%)</title><rect x="554" y="212" width="1" height="15" fill="rgb(243,137,49)"/><text x="557.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.13%)</title><rect x="555" y="212" width="2" height="15" fill="rgb(249,84,39)"/><text x="558.00" y="222.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.40%)</title><rect x="559" y="308" width="4" height="15" fill="rgb(222,175,42)"/><text x="562.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (3 samples, 0.40%)</title><rect x="559" y="324" width="4" height="15" fill="rgb(205,64,27)"/><text x="562.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (3 samples, 0.40%)</title><rect x="559" y="340" width="4" height="15" fill="rgb(211,160,24)"/><text x="562.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (3 samples, 0.40%)</title><rect x="559" y="356" width="4" height="15" fill="rgb(224,216,6)"/><text x="562.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (4 samples, 0.53%)</title><rect x="559" y="228" width="6" height="15" fill="rgb(214,77,18)"/><text x="562.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.53%)</title><rect x="559" y="244" width="6" height="15" fill="rgb(209,135,6)"/><text x="562.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.53%)</title><rect x="559" y="260" width="6" height="15" fill="rgb(210,22,19)"/><text x="562.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.53%)</title><rect x="559" y="276" width="6" height="15" fill="rgb(223,206,33)"/><text x="562.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.53%)</title><rect x="559" y="292" width="6" height="15" fill="rgb(213,205,45)"/><text x="562.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="563" y="308" width="2" height="15" fill="rgb(225,49,16)"/><text x="566.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="563" y="324" width="2" height="15" fill="rgb(227,219,15)"/><text x="566.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="563" y="340" width="2" height="15" fill="rgb(216,107,6)"/><text x="566.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.40%)</title><rect x="566" y="276" width="5" height="15" fill="rgb(215,162,52)"/><text x="569.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.40%)</title><rect x="566" y="292" width="5" height="15" fill="rgb(238,46,20)"/><text x="569.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.40%)</title><rect x="566" y="308" width="5" height="15" fill="rgb(207,211,28)"/><text x="569.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.27%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(225,202,9)"/><text x="571.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.27%)</title><rect x="568" y="340" width="3" height="15" fill="rgb(246,13,41)"/><text x="571.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.13%)</title><rect x="570" y="356" width="1" height="15" fill="rgb(238,224,26)"/><text x="573.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="570" y="372" width="1" height="15" fill="rgb(234,49,6)"/><text x="573.00" y="382.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.13%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(234,117,27)"/><text x="574.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.13%)</title><rect x="571" y="292" width="2" height="15" fill="rgb(214,190,36)"/><text x="574.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.13%)</title><rect x="571" y="308" width="2" height="15" fill="rgb(213,89,28)"/><text x="574.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (7 samples, 0.93%)</title><rect x="565" y="260" width="11" height="15" fill="rgb(207,9,11)"/><text x="568.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (2 samples, 0.27%)</title><rect x="573" y="276" width="3" height="15" fill="rgb(210,172,3)"/><text x="576.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.13%)</title><rect x="574" y="292" width="2" height="15" fill="rgb(243,172,50)"/><text x="577.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.13%)</title><rect x="574" y="308" width="2" height="15" fill="rgb(237,127,33)"/><text x="577.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (8 samples, 1.07%)</title><rect x="565" y="228" width="12" height="15" fill="rgb(244,64,20)"/><text x="568.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (8 samples, 1.07%)</title><rect x="565" y="244" width="12" height="15" fill="rgb(244,211,17)"/><text x="568.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="576" y="260" width="1" height="15" fill="rgb(205,149,35)"/><text x="579.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="576" y="276" width="1" height="15" fill="rgb(226,9,8)"/><text x="579.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="576" y="292" width="1" height="15" fill="rgb(228,72,24)"/><text x="579.00" y="302.50"></text></g><g><title>0x7f4d22659103 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="577" y="340" width="2" height="15" fill="rgb(252,22,44)"/><text x="580.00" y="350.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 4.40%)</title><rect x="579" y="420" width="52" height="15" fill="rgb(236,20,13)"/><text x="582.00" y="430.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (33 samples, 4.40%)</title><rect x="579" y="436" width="52" height="15" fill="rgb(205,19,3)"/><text x="582.00" y="446.50">sched..</text></g><g><title>gemm (cblasfuncs.c) (39 samples, 5.20%)</title><rect x="579" y="340" width="61" height="15" fill="rgb(222,46,8)"/><text x="582.00" y="350.50">gemm (..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.20%)</title><rect x="579" y="356" width="61" height="15" fill="rgb(229,44,47)"/><text x="582.00" y="366.50">cblas_..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.20%)</title><rect x="579" y="372" width="61" height="15" fill="rgb(239,213,2)"/><text x="582.00" y="382.50">sgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.20%)</title><rect x="579" y="388" width="61" height="15" fill="rgb(215,65,27)"/><text x="582.00" y="398.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.20%)</title><rect x="579" y="404" width="61" height="15" fill="rgb(246,91,7)"/><text x="582.00" y="414.50">exec_b..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="631" y="420" width="9" height="15" fill="rgb(208,51,36)"/><text x="634.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="631" y="436" width="9" height="15" fill="rgb(208,160,15)"/><text x="634.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (43 samples, 5.73%)</title><rect x="577" y="276" width="68" height="15" fill="rgb(210,123,38)"/><text x="580.00" y="286.50">array_i..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (43 samples, 5.73%)</title><rect x="577" y="292" width="68" height="15" fill="rgb(222,136,25)"/><text x="580.00" y="302.50">array_m..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (43 samples, 5.73%)</title><rect x="577" y="308" width="68" height="15" fill="rgb(241,182,11)"/><text x="580.00" y="318.50">PyArray..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (43 samples, 5.73%)</title><rect x="577" y="324" width="68" height="15" fill="rgb(246,156,26)"/><text x="580.00" y="334.50">cblas_m..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.40%)</title><rect x="640" y="340" width="5" height="15" fill="rgb(217,81,21)"/><text x="643.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.40%)</title><rect x="640" y="356" width="5" height="15" fill="rgb(222,173,49)"/><text x="643.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.27%)</title><rect x="642" y="372" width="3" height="15" fill="rgb(214,86,35)"/><text x="645.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.27%)</title><rect x="642" y="388" width="3" height="15" fill="rgb(252,7,25)"/><text x="645.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.27%)</title><rect x="642" y="404" width="3" height="15" fill="rgb(213,73,44)"/><text x="645.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.27%)</title><rect x="642" y="420" width="3" height="15" fill="rgb(236,4,19)"/><text x="645.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="642" y="436" width="3" height="15" fill="rgb(227,145,15)"/><text x="645.00" y="446.50"></text></g><g><title>0x7f4d2263a700 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="644" y="452" width="1" height="15" fill="rgb(246,74,11)"/><text x="647.00" y="462.50"></text></g><g><title>0x7f4d22637acd (libc-2.29.so) (1 samples, 0.13%)</title><rect x="644" y="468" width="1" height="15" fill="rgb(240,88,18)"/><text x="647.00" y="478.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="645" y="276" width="2" height="15" fill="rgb(240,50,24)"/><text x="648.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (65 samples, 8.67%)</title><rect x="577" y="228" width="103" height="15" fill="rgb(233,178,40)"/><text x="580.00" y="238.50">_run (mlprod..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (65 samples, 8.67%)</title><rect x="577" y="244" width="103" height="15" fill="rgb(228,190,25)"/><text x="580.00" y="254.50">numpy_dot_in..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (65 samples, 8.67%)</title><rect x="577" y="260" width="103" height="15" fill="rgb(234,129,18)"/><text x="580.00" y="270.50">dot (&lt;__arra..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 2.80%)</title><rect x="647" y="276" width="33" height="15" fill="rgb(213,182,19)"/><text x="650.00" y="286.50">sg..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.13%)</title><rect x="680" y="308" width="1" height="15" fill="rgb(213,58,23)"/><text x="683.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.27%)</title><rect x="680" y="260" width="3" height="15" fill="rgb(245,82,29)"/><text x="683.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.27%)</title><rect x="680" y="276" width="3" height="15" fill="rgb(218,147,19)"/><text x="683.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.27%)</title><rect x="680" y="292" width="3" height="15" fill="rgb(245,102,21)"/><text x="683.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.13%)</title><rect x="681" y="308" width="2" height="15" fill="rgb(251,41,4)"/><text x="684.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.13%)</title><rect x="683" y="292" width="1" height="15" fill="rgb(245,38,35)"/><text x="686.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.13%)</title><rect x="683" y="308" width="1" height="15" fill="rgb(251,162,4)"/><text x="686.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.13%)</title><rect x="683" y="324" width="1" height="15" fill="rgb(216,62,28)"/><text x="686.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (48 samples, 6.40%)</title><rect x="680" y="228" width="75" height="15" fill="rgb(222,180,1)"/><text x="683.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (48 samples, 6.40%)</title><rect x="680" y="244" width="75" height="15" fill="rgb(220,199,5)"/><text x="683.00" y="254.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (46 samples, 6.13%)</title><rect x="683" y="260" width="72" height="15" fill="rgb(209,192,13)"/><text x="686.00" y="270.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (46 samples, 6.13%)</title><rect x="683" y="276" width="72" height="15" fill="rgb(244,205,44)"/><text x="686.00" y="286.50">execute_..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (45 samples, 6.00%)</title><rect x="684" y="292" width="71" height="15" fill="rgb(232,197,51)"/><text x="687.00" y="302.50">trivial_..</text></g><g><title>FLOAT_maximum (loops.c.src) (45 samples, 6.00%)</title><rect x="684" y="308" width="71" height="15" fill="rgb(240,178,46)"/><text x="687.00" y="318.50">FLOAT_ma..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="758" y="244" width="2" height="15" fill="rgb(237,1,26)"/><text x="761.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="758" y="260" width="2" height="15" fill="rgb(246,124,38)"/><text x="761.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="758" y="276" width="2" height="15" fill="rgb(224,2,12)"/><text x="761.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="758" y="292" width="2" height="15" fill="rgb(214,110,25)"/><text x="761.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.13%)</title><rect x="758" y="308" width="2" height="15" fill="rgb(247,183,26)"/><text x="761.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(212,124,15)"/><text x="763.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="760" y="324" width="2" height="15" fill="rgb(225,215,25)"/><text x="763.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.13%)</title><rect x="760" y="340" width="2" height="15" fill="rgb(212,117,2)"/><text x="763.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.13%)</title><rect x="760" y="356" width="2" height="15" fill="rgb(214,144,18)"/><text x="763.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.13%)</title><rect x="760" y="372" width="2" height="15" fill="rgb(235,36,14)"/><text x="763.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.27%)</title><rect x="765" y="388" width="3" height="15" fill="rgb(253,15,26)"/><text x="768.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="766" y="404" width="2" height="15" fill="rgb(238,191,23)"/><text x="769.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.13%)</title><rect x="766" y="420" width="2" height="15" fill="rgb(215,166,10)"/><text x="769.00" y="430.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (4 samples, 0.53%)</title><rect x="765" y="372" width="6" height="15" fill="rgb(208,120,7)"/><text x="768.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src) (2 samples, 0.27%)</title><rect x="768" y="388" width="3" height="15" fill="rgb(213,111,39)"/><text x="771.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src) (2 samples, 0.27%)</title><rect x="768" y="404" width="3" height="15" fill="rgb(220,11,47)"/><text x="771.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="769" y="420" width="2" height="15" fill="rgb(240,54,16)"/><text x="772.00" y="430.50"></text></g><g><title>array_max (methods.c) (8 samples, 1.07%)</title><rect x="760" y="244" width="13" height="15" fill="rgb(223,13,1)"/><text x="763.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.07%)</title><rect x="760" y="260" width="13" height="15" fill="rgb(224,166,31)"/><text x="763.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py) (8 samples, 1.07%)</title><rect x="760" y="276" width="13" height="15" fill="rgb(221,6,40)"/><text x="763.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.07%)</title><rect x="760" y="292" width="13" height="15" fill="rgb(240,227,28)"/><text x="763.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.93%)</title><rect x="762" y="308" width="11" height="15" fill="rgb(228,151,28)"/><text x="765.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 0.93%)</title><rect x="762" y="324" width="11" height="15" fill="rgb(241,204,19)"/><text x="765.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 0.93%)</title><rect x="762" y="340" width="11" height="15" fill="rgb(236,125,42)"/><text x="765.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 0.93%)</title><rect x="762" y="356" width="11" height="15" fill="rgb(234,12,16)"/><text x="765.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(213,139,41)"/><text x="774.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.13%)</title><rect x="773" y="244" width="1" height="15" fill="rgb(241,62,30)"/><text x="776.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.13%)</title><rect x="773" y="260" width="1" height="15" fill="rgb(208,13,6)"/><text x="776.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.13%)</title><rect x="773" y="276" width="1" height="15" fill="rgb(220,108,21)"/><text x="776.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="773" y="292" width="1" height="15" fill="rgb(253,18,17)"/><text x="776.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.13%)</title><rect x="773" y="308" width="1" height="15" fill="rgb(248,16,45)"/><text x="776.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.13%)</title><rect x="774" y="372" width="2" height="15" fill="rgb(213,154,37)"/><text x="777.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.27%)</title><rect x="774" y="308" width="3" height="15" fill="rgb(221,150,33)"/><text x="777.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.27%)</title><rect x="774" y="324" width="3" height="15" fill="rgb(226,212,12)"/><text x="777.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.27%)</title><rect x="774" y="340" width="3" height="15" fill="rgb(215,155,6)"/><text x="777.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.27%)</title><rect x="774" y="356" width="3" height="15" fill="rgb(238,124,22)"/><text x="777.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.13%)</title><rect x="776" y="372" width="1" height="15" fill="rgb(225,65,16)"/><text x="779.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.13%)</title><rect x="777" y="372" width="2" height="15" fill="rgb(250,58,36)"/><text x="780.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="777" y="356" width="3" height="15" fill="rgb(208,174,8)"/><text x="780.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.13%)</title><rect x="779" y="372" width="1" height="15" fill="rgb(232,11,54)"/><text x="782.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="780" y="356" width="2" height="15" fill="rgb(251,124,42)"/><text x="783.00" y="366.50"></text></g><g><title>0x7f4d22638dfb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="780" y="372" width="2" height="15" fill="rgb(225,6,48)"/><text x="783.00" y="382.50"></text></g><g><title>0x7f4d22637aa4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="780" y="388" width="2" height="15" fill="rgb(226,12,50)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.13%)</title><rect x="782" y="356" width="2" height="15" fill="rgb(239,53,14)"/><text x="785.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 1.47%)</title><rect x="777" y="340" width="18" height="15" fill="rgb(210,28,49)"/><text x="780.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 0.93%)</title><rect x="784" y="356" width="11" height="15" fill="rgb(227,72,17)"/><text x="787.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 0.67%)</title><rect x="787" y="372" width="8" height="15" fill="rgb(242,223,22)"/><text x="790.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.27%)</title><rect x="791" y="388" width="4" height="15" fill="rgb(235,106,54)"/><text x="794.00" y="398.50"></text></g><g><title>array_sum (methods.c) (14 samples, 1.87%)</title><rect x="774" y="244" width="22" height="15" fill="rgb(223,8,38)"/><text x="777.00" y="254.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 1.87%)</title><rect x="774" y="260" width="22" height="15" fill="rgb(251,14,42)"/><text x="777.00" y="270.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 1.87%)</title><rect x="774" y="276" width="22" height="15" fill="rgb(235,154,53)"/><text x="777.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 1.87%)</title><rect x="774" y="292" width="22" height="15" fill="rgb(232,160,49)"/><text x="777.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 1.60%)</title><rect x="777" y="308" width="19" height="15" fill="rgb(213,3,37)"/><text x="780.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 1.60%)</title><rect x="777" y="324" width="19" height="15" fill="rgb(254,22,17)"/><text x="780.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.13%)</title><rect x="795" y="340" width="1" height="15" fill="rgb(253,168,28)"/><text x="798.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="795" y="356" width="1" height="15" fill="rgb(236,148,54)"/><text x="798.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="795" y="372" width="1" height="15" fill="rgb(245,168,23)"/><text x="798.00" y="382.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="796" y="276" width="2" height="15" fill="rgb(250,26,12)"/><text x="799.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.13%)</title><rect x="798" y="292" width="1" height="15" fill="rgb(218,53,54)"/><text x="801.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.13%)</title><rect x="798" y="308" width="1" height="15" fill="rgb(214,220,43)"/><text x="801.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.13%)</title><rect x="798" y="324" width="1" height="15" fill="rgb(212,56,35)"/><text x="801.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="798" y="340" width="1" height="15" fill="rgb(207,8,5)"/><text x="801.00" y="350.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.13%)</title><rect x="799" y="308" width="2" height="15" fill="rgb(211,46,40)"/><text x="802.00" y="318.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="799" y="324" width="2" height="15" fill="rgb(245,81,24)"/><text x="802.00" y="334.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.13%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(217,37,47)"/><text x="802.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.13%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(216,200,4)"/><text x="802.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.53%)</title><rect x="799" y="292" width="7" height="15" fill="rgb(242,220,10)"/><text x="802.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.40%)</title><rect x="801" y="308" width="5" height="15" fill="rgb(240,155,2)"/><text x="804.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.40%)</title><rect x="801" y="324" width="5" height="15" fill="rgb(228,133,38)"/><text x="804.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.40%)</title><rect x="801" y="340" width="5" height="15" fill="rgb(217,225,32)"/><text x="804.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="802" y="356" width="4" height="15" fill="rgb(206,18,29)"/><text x="805.00" y="366.50"></text></g><g><title>0x7f4d227b7e0e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="807" y="340" width="2" height="15" fill="rgb(253,114,42)"/><text x="810.00" y="350.50"></text></g><g><title>0x7f4d227b7e17 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="809" y="340" width="3" height="15" fill="rgb(243,98,9)"/><text x="812.00" y="350.50"></text></g><g><title>0x7f4d227b7e37 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="812" y="340" width="1" height="15" fill="rgb(240,28,52)"/><text x="815.00" y="350.50"></text></g><g><title>0x7f4d227b7e96 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="813" y="340" width="4" height="15" fill="rgb(218,224,29)"/><text x="816.00" y="350.50"></text></g><g><title>expf (libm-2.29.so) (10 samples, 1.33%)</title><rect x="806" y="324" width="15" height="15" fill="rgb(239,156,24)"/><text x="809.00" y="334.50"></text></g><g><title>0x7f4d227b7ea2 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="817" y="340" width="4" height="15" fill="rgb(220,86,21)"/><text x="820.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (227 samples, 30.27%)</title><rect x="466" y="164" width="357" height="15" fill="rgb(210,146,46)"/><text x="469.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (225 samples, 30.00%)</title><rect x="469" y="180" width="354" height="15" fill="rgb(253,38,33)"/><text x="472.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (211 samples, 28.13%)</title><rect x="491" y="196" width="332" height="15" fill="rgb(211,206,17)"/><text x="494.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (169 samples, 22.53%)</title><rect x="557" y="212" width="266" height="15" fill="rgb(228,155,9)"/><text x="560.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (43 samples, 5.73%)</title><rect x="755" y="228" width="68" height="15" fill="rgb(225,50,48)"/><text x="758.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 2.27%)</title><rect x="796" y="244" width="27" height="15" fill="rgb(247,15,10)"/><text x="799.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 2.27%)</title><rect x="796" y="260" width="27" height="15" fill="rgb(210,178,19)"/><text x="799.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 2.13%)</title><rect x="798" y="276" width="25" height="15" fill="rgb(245,106,34)"/><text x="801.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (11 samples, 1.47%)</title><rect x="806" y="292" width="17" height="15" fill="rgb(239,2,17)"/><text x="809.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (11 samples, 1.47%)</title><rect x="806" y="308" width="17" height="15" fill="rgb(226,105,44)"/><text x="809.00" y="318.50"></text></g><g><title>npy_expf (npy_math_internal.h.src) (1 samples, 0.13%)</title><rect x="821" y="324" width="2" height="15" fill="rgb(246,19,14)"/><text x="824.00" y="334.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (228 samples, 30.40%)</title><rect x="466" y="68" width="358" height="15" fill="rgb(226,120,45)"/><text x="469.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (228 samples, 30.40%)</title><rect x="466" y="84" width="358" height="15" fill="rgb(229,205,46)"/><text x="469.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (228 samples, 30.40%)</title><rect x="466" y="100" width="358" height="15" fill="rgb(245,63,34)"/><text x="469.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (228 samples, 30.40%)</title><rect x="466" y="116" width="358" height="15" fill="rgb(208,211,47)"/><text x="469.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (228 samples, 30.40%)</title><rect x="466" y="132" width="358" height="15" fill="rgb(240,73,5)"/><text x="469.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (228 samples, 30.40%)</title><rect x="466" y="148" width="358" height="15" fill="rgb(233,19,40)"/><text x="469.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="823" y="164" width="1" height="15" fill="rgb(230,189,14)"/><text x="826.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="823" y="180" width="1" height="15" fill="rgb(229,173,13)"/><text x="826.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="823" y="196" width="1" height="15" fill="rgb(247,64,28)"/><text x="826.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="832" y="356" width="2" height="15" fill="rgb(225,178,18)"/><text x="835.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="832" y="372" width="2" height="15" fill="rgb(251,19,14)"/><text x="835.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.13%)</title><rect x="832" y="388" width="2" height="15" fill="rgb(241,168,23)"/><text x="835.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.13%)</title><rect x="832" y="404" width="2" height="15" fill="rgb(225,210,1)"/><text x="835.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.13%)</title><rect x="832" y="420" width="2" height="15" fill="rgb(240,38,11)"/><text x="835.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (50 samples, 6.67%)</title><rect x="836" y="404" width="78" height="15" fill="rgb(215,162,42)"/><text x="839.00" y="414.50">DOUBLE_cl..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (53 samples, 7.07%)</title><rect x="832" y="324" width="84" height="15" fill="rgb(224,54,35)"/><text x="835.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (53 samples, 7.07%)</title><rect x="832" y="340" width="84" height="15" fill="rgb(245,152,6)"/><text x="835.00" y="350.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (52 samples, 6.93%)</title><rect x="834" y="356" width="82" height="15" fill="rgb(229,130,8)"/><text x="837.00" y="366.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (52 samples, 6.93%)</title><rect x="834" y="372" width="82" height="15" fill="rgb(237,219,11)"/><text x="837.00" y="382.50">execute_l..</text></g><g><title>iterator_loop (ufunc_object.c) (52 samples, 6.93%)</title><rect x="834" y="388" width="82" height="15" fill="rgb(225,203,12)"/><text x="837.00" y="398.50">iterator_..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="914" y="404" width="2" height="15" fill="rgb(207,81,44)"/><text x="917.00" y="414.50"></text></g><g><title>0x7f4d22638b05 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="914" y="420" width="2" height="15" fill="rgb(225,218,49)"/><text x="917.00" y="430.50"></text></g><g><title>0x7f4d22637b0a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="914" y="436" width="2" height="15" fill="rgb(213,23,9)"/><text x="917.00" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="917" y="340" width="7" height="15" fill="rgb(224,203,33)"/><text x="920.00" y="350.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.13%)</title><rect x="922" y="356" width="2" height="15" fill="rgb(224,89,20)"/><text x="925.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (2 samples, 0.27%)</title><rect x="924" y="340" width="3" height="15" fill="rgb(209,117,22)"/><text x="927.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.27%)</title><rect x="924" y="356" width="3" height="15" fill="rgb(232,188,21)"/><text x="927.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (2 samples, 0.27%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(234,81,43)"/><text x="927.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="925" y="388" width="2" height="15" fill="rgb(220,214,23)"/><text x="928.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="925" y="404" width="2" height="15" fill="rgb(248,136,49)"/><text x="928.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="925" y="420" width="2" height="15" fill="rgb(253,24,32)"/><text x="928.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="927" y="372" width="1" height="15" fill="rgb(248,72,42)"/><text x="930.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="927" y="388" width="1" height="15" fill="rgb(241,53,11)"/><text x="930.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="927" y="404" width="1" height="15" fill="rgb(247,21,5)"/><text x="930.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="927" y="420" width="1" height="15" fill="rgb(241,137,1)"/><text x="930.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.13%)</title><rect x="928" y="372" width="2" height="15" fill="rgb(220,52,1)"/><text x="931.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="928" y="388" width="2" height="15" fill="rgb(243,141,31)"/><text x="931.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.13%)</title><rect x="928" y="404" width="2" height="15" fill="rgb(221,3,26)"/><text x="931.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="928" y="420" width="2" height="15" fill="rgb(253,137,39)"/><text x="931.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="928" y="436" width="2" height="15" fill="rgb(252,168,7)"/><text x="931.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.40%)</title><rect x="927" y="356" width="4" height="15" fill="rgb(214,95,44)"/><text x="930.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="930" y="372" width="1" height="15" fill="rgb(206,91,24)"/><text x="933.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.13%)</title><rect x="930" y="388" width="1" height="15" fill="rgb(236,43,30)"/><text x="933.00" y="398.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (65 samples, 8.67%)</title><rect x="831" y="244" width="102" height="15" fill="rgb(216,29,17)"/><text x="834.00" y="254.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (65 samples, 8.67%)</title><rect x="831" y="260" width="102" height="15" fill="rgb(218,156,27)"/><text x="834.00" y="270.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c) (65 samples, 8.67%)</title><rect x="831" y="276" width="102" height="15" fill="rgb(242,161,29)"/><text x="834.00" y="286.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c) (65 samples, 8.67%)</title><rect x="831" y="292" width="102" height="15" fill="rgb(252,17,22)"/><text x="834.00" y="302.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py) (64 samples, 8.53%)</title><rect x="832" y="308" width="101" height="15" fill="rgb(254,102,19)"/><text x="835.00" y="318.50">_clip (numpy..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (11 samples, 1.47%)</title><rect x="916" y="324" width="17" height="15" fill="rgb(245,60,3)"/><text x="919.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.53%)</title><rect x="927" y="340" width="6" height="15" fill="rgb(232,55,4)"/><text x="930.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="931" y="356" width="2" height="15" fill="rgb(236,64,16)"/><text x="934.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="931" y="372" width="2" height="15" fill="rgb(233,125,21)"/><text x="934.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="931" y="388" width="2" height="15" fill="rgb(238,113,47)"/><text x="934.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (67 samples, 8.93%)</title><rect x="831" y="196" width="105" height="15" fill="rgb(218,45,13)"/><text x="834.00" y="206.50">relu (sklear..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (67 samples, 8.93%)</title><rect x="831" y="212" width="105" height="15" fill="rgb(224,100,25)"/><text x="834.00" y="222.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (67 samples, 8.93%)</title><rect x="831" y="228" width="105" height="15" fill="rgb(227,147,11)"/><text x="834.00" y="238.50">array_implem..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.27%)</title><rect x="933" y="244" width="3" height="15" fill="rgb(221,142,35)"/><text x="936.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.27%)</title><rect x="933" y="260" width="3" height="15" fill="rgb(242,133,22)"/><text x="936.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.27%)</title><rect x="933" y="276" width="3" height="15" fill="rgb(234,226,33)"/><text x="936.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.27%)</title><rect x="933" y="292" width="3" height="15" fill="rgb(211,44,11)"/><text x="936.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.20%)</title><rect x="938" y="212" width="14" height="15" fill="rgb(219,184,42)"/><text x="941.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 3.47%)</title><rect x="952" y="212" width="41" height="15" fill="rgb(211,145,28)"/><text x="955.00" y="222.50">dge..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.27%)</title><rect x="993" y="356" width="3" height="15" fill="rgb(217,217,4)"/><text x="996.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (2 samples, 0.27%)</title><rect x="993" y="372" width="3" height="15" fill="rgb(227,114,31)"/><text x="996.00" y="382.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.40%)</title><rect x="993" y="340" width="5" height="15" fill="rgb(206,160,46)"/><text x="996.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="996" y="356" width="2" height="15" fill="rgb(221,170,16)"/><text x="999.00" y="366.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="996" y="372" width="2" height="15" fill="rgb(225,104,18)"/><text x="999.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="998" y="356" width="1" height="15" fill="rgb(231,159,47)"/><text x="1001.00" y="366.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="998" y="372" width="1" height="15" fill="rgb(245,97,40)"/><text x="1001.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (44 samples, 5.87%)</title><rect x="998" y="340" width="69" height="15" fill="rgb(211,215,14)"/><text x="1001.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (43 samples, 5.73%)</title><rect x="999" y="356" width="68" height="15" fill="rgb(246,164,12)"/><text x="1002.00" y="366.50">sched_y..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="1068" y="356" width="2" height="15" fill="rgb(216,110,22)"/><text x="1071.00" y="366.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.27%)</title><rect x="1070" y="356" width="3" height="15" fill="rgb(235,123,25)"/><text x="1073.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (52 samples, 6.93%)</title><rect x="993" y="260" width="82" height="15" fill="rgb(245,123,23)"/><text x="996.00" y="270.50">DOUBLE_ma..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 6.93%)</title><rect x="993" y="276" width="82" height="15" fill="rgb(236,0,34)"/><text x="996.00" y="286.50">cblas_dge..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 6.93%)</title><rect x="993" y="292" width="82" height="15" fill="rgb(246,195,27)"/><text x="996.00" y="302.50">dgemm_thr..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 6.93%)</title><rect x="993" y="308" width="82" height="15" fill="rgb(206,119,30)"/><text x="996.00" y="318.50">gemm_driv..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 6.93%)</title><rect x="993" y="324" width="82" height="15" fill="rgb(214,56,38)"/><text x="996.00" y="334.50">exec_blas..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.67%)</title><rect x="1067" y="340" width="8" height="15" fill="rgb(230,132,27)"/><text x="1070.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1073" y="356" width="2" height="15" fill="rgb(240,29,18)"/><text x="1076.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1076" y="276" width="2" height="15" fill="rgb(231,141,32)"/><text x="1079.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1076" y="292" width="2" height="15" fill="rgb(221,192,50)"/><text x="1079.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1076" y="308" width="2" height="15" fill="rgb(219,150,47)"/><text x="1079.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1076" y="324" width="2" height="15" fill="rgb(234,121,47)"/><text x="1079.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.40%)</title><rect x="1075" y="260" width="4" height="15" fill="rgb(221,82,25)"/><text x="1078.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1078" y="276" width="1" height="15" fill="rgb(235,145,12)"/><text x="1081.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (92 samples, 12.27%)</title><rect x="936" y="196" width="145" height="15" fill="rgb(238,128,1)"/><text x="939.00" y="206.50">safe_sparse_dot (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (56 samples, 7.47%)</title><rect x="993" y="212" width="88" height="15" fill="rgb(252,123,10)"/><text x="996.00" y="222.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (56 samples, 7.47%)</title><rect x="993" y="228" width="88" height="15" fill="rgb(232,132,9)"/><text x="996.00" y="238.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (56 samples, 7.47%)</title><rect x="993" y="244" width="88" height="15" fill="rgb(244,26,24)"/><text x="996.00" y="254.50">PyUFunc_Ge..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="1079" y="260" width="2" height="15" fill="rgb(220,10,0)"/><text x="1082.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="1079" y="276" width="2" height="15" fill="rgb(207,211,33)"/><text x="1082.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1079" y="292" width="2" height="15" fill="rgb(226,166,26)"/><text x="1082.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1084" y="292" width="2" height="15" fill="rgb(221,138,51)"/><text x="1087.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1084" y="308" width="2" height="15" fill="rgb(230,32,13)"/><text x="1087.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1084" y="324" width="2" height="15" fill="rgb(208,46,9)"/><text x="1087.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1084" y="340" width="2" height="15" fill="rgb(226,55,27)"/><text x="1087.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1084" y="356" width="2" height="15" fill="rgb(212,39,8)"/><text x="1087.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1084" y="372" width="2" height="15" fill="rgb(247,195,20)"/><text x="1087.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1084" y="388" width="2" height="15" fill="rgb(207,58,27)"/><text x="1087.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="1084" y="404" width="2" height="15" fill="rgb(212,139,19)"/><text x="1087.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1084" y="420" width="2" height="15" fill="rgb(214,117,39)"/><text x="1087.00" y="430.50"></text></g><g><title>0x7f4d22639e19 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1084" y="436" width="2" height="15" fill="rgb(254,143,20)"/><text x="1087.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.27%)</title><rect x="1086" y="292" width="3" height="15" fill="rgb(226,181,42)"/><text x="1089.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.27%)</title><rect x="1086" y="308" width="3" height="15" fill="rgb(217,57,13)"/><text x="1089.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="1086" y="324" width="3" height="15" fill="rgb(215,0,44)"/><text x="1089.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1087" y="340" width="2" height="15" fill="rgb(208,31,38)"/><text x="1090.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.53%)</title><rect x="1084" y="260" width="6" height="15" fill="rgb(249,176,33)"/><text x="1087.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.53%)</title><rect x="1084" y="276" width="6" height="15" fill="rgb(206,135,19)"/><text x="1087.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="1089" y="292" width="1" height="15" fill="rgb(238,228,37)"/><text x="1092.00" y="302.50"></text></g><g><title>array_subtract (number.c) (6 samples, 0.80%)</title><rect x="1083" y="212" width="9" height="15" fill="rgb(236,57,46)"/><text x="1086.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.67%)</title><rect x="1084" y="228" width="8" height="15" fill="rgb(229,40,17)"/><text x="1087.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.67%)</title><rect x="1084" y="244" width="8" height="15" fill="rgb(224,45,1)"/><text x="1087.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.13%)</title><rect x="1090" y="260" width="2" height="15" fill="rgb(212,12,17)"/><text x="1093.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1092" y="324" width="2" height="15" fill="rgb(245,29,42)"/><text x="1095.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1092" y="340" width="2" height="15" fill="rgb(244,184,7)"/><text x="1095.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1092" y="356" width="2" height="15" fill="rgb(219,167,16)"/><text x="1095.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.13%)</title><rect x="1094" y="324" width="1" height="15" fill="rgb(215,184,1)"/><text x="1097.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.13%)</title><rect x="1094" y="340" width="1" height="15" fill="rgb(221,133,50)"/><text x="1097.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.13%)</title><rect x="1094" y="356" width="1" height="15" fill="rgb(227,90,45)"/><text x="1097.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="1094" y="372" width="1" height="15" fill="rgb(226,22,17)"/><text x="1097.00" y="382.50"></text></g><g><title>array_sum (methods.c) (7 samples, 0.93%)</title><rect x="1092" y="212" width="11" height="15" fill="rgb(243,106,30)"/><text x="1095.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 0.93%)</title><rect x="1092" y="228" width="11" height="15" fill="rgb(234,221,20)"/><text x="1095.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 0.93%)</title><rect x="1092" y="244" width="11" height="15" fill="rgb(208,150,51)"/><text x="1095.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 0.93%)</title><rect x="1092" y="260" width="11" height="15" fill="rgb(253,1,26)"/><text x="1095.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 0.93%)</title><rect x="1092" y="276" width="11" height="15" fill="rgb(218,37,44)"/><text x="1095.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 0.93%)</title><rect x="1092" y="292" width="11" height="15" fill="rgb(206,123,44)"/><text x="1095.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 0.93%)</title><rect x="1092" y="308" width="11" height="15" fill="rgb(246,74,42)"/><text x="1095.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (5 samples, 0.67%)</title><rect x="1095" y="324" width="8" height="15" fill="rgb(215,147,6)"/><text x="1098.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.27%)</title><rect x="1100" y="340" width="3" height="15" fill="rgb(219,83,54)"/><text x="1103.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.13%)</title><rect x="1101" y="356" width="2" height="15" fill="rgb(222,182,28)"/><text x="1104.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.13%)</title><rect x="1105" y="276" width="1" height="15" fill="rgb(217,119,41)"/><text x="1108.00" y="286.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1105" y="292" width="1" height="15" fill="rgb(247,144,48)"/><text x="1108.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1105" y="308" width="1" height="15" fill="rgb(215,163,46)"/><text x="1108.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.13%)</title><rect x="1105" y="324" width="1" height="15" fill="rgb(222,12,42)"/><text x="1108.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1106" y="276" width="2" height="15" fill="rgb(244,66,39)"/><text x="1109.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1106" y="292" width="2" height="15" fill="rgb(254,145,20)"/><text x="1109.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.13%)</title><rect x="1106" y="308" width="2" height="15" fill="rgb(226,130,52)"/><text x="1109.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.13%)</title><rect x="1106" y="324" width="2" height="15" fill="rgb(249,196,38)"/><text x="1109.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1106" y="340" width="2" height="15" fill="rgb(212,156,33)"/><text x="1109.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.67%)</title><rect x="1105" y="260" width="7" height="15" fill="rgb(235,13,48)"/><text x="1108.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.40%)</title><rect x="1108" y="276" width="4" height="15" fill="rgb(247,175,27)"/><text x="1111.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.40%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(218,118,16)"/><text x="1111.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.40%)</title><rect x="1108" y="308" width="4" height="15" fill="rgb(227,177,38)"/><text x="1111.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1111" y="324" width="1" height="15" fill="rgb(246,56,2)"/><text x="1114.00" y="334.50"></text></g><g><title>0x7f4d2280aba0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1122" y="308" width="1" height="15" fill="rgb(205,100,23)"/><text x="1125.00" y="318.50"></text></g><g><title>0x7f4d2280abcb (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1123" y="308" width="2" height="15" fill="rgb(245,1,37)"/><text x="1126.00" y="318.50"></text></g><g><title>0x7f4d2280abe7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1125" y="308" width="2" height="15" fill="rgb(245,162,26)"/><text x="1128.00" y="318.50"></text></g><g><title>0x7f4d2280ac0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1127" y="308" width="1" height="15" fill="rgb(250,77,31)"/><text x="1130.00" y="318.50"></text></g><g><title>0x7f4d2280ac3e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1128" y="308" width="2" height="15" fill="rgb(229,5,43)"/><text x="1131.00" y="318.50"></text></g><g><title>0x7f4d2280ac52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1130" y="308" width="1" height="15" fill="rgb(207,216,27)"/><text x="1133.00" y="318.50"></text></g><g><title>exp (libm-2.29.so) (12 samples, 1.60%)</title><rect x="1116" y="292" width="18" height="15" fill="rgb(211,38,29)"/><text x="1119.00" y="302.50"></text></g><g><title>0x7f4d2280ac5a (libm-2.29.so) (2 samples, 0.27%)</title><rect x="1131" y="308" width="3" height="15" fill="rgb(232,116,52)"/><text x="1134.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (35 samples, 4.67%)</title><rect x="1081" y="196" width="55" height="15" fill="rgb(206,4,24)"/><text x="1084.00" y="206.50">softm..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.80%)</title><rect x="1103" y="212" width="33" height="15" fill="rgb(222,108,14)"/><text x="1106.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (21 samples, 2.80%)</title><rect x="1103" y="228" width="33" height="15" fill="rgb(216,56,12)"/><text x="1106.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (21 samples, 2.80%)</title><rect x="1103" y="244" width="33" height="15" fill="rgb(219,195,15)"/><text x="1106.00" y="254.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (15 samples, 2.00%)</title><rect x="1112" y="260" width="24" height="15" fill="rgb(246,78,45)"/><text x="1115.00" y="270.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src) (15 samples, 2.00%)</title><rect x="1112" y="276" width="24" height="15" fill="rgb(229,3,5)"/><text x="1115.00" y="286.50">P..</text></g><g><title>npy_exp (npy_math_internal.h.src) (1 samples, 0.13%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(239,44,26)"/><text x="1137.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (9 samples, 1.20%)</title><rect x="1136" y="308" width="14" height="15" fill="rgb(231,179,6)"/><text x="1139.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (12 samples, 1.60%)</title><rect x="1136" y="260" width="19" height="15" fill="rgb(230,68,12)"/><text x="1139.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (12 samples, 1.60%)</title><rect x="1136" y="276" width="19" height="15" fill="rgb(245,32,44)"/><text x="1139.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (12 samples, 1.60%)</title><rect x="1136" y="292" width="19" height="15" fill="rgb(237,122,0)"/><text x="1139.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.40%)</title><rect x="1150" y="308" width="5" height="15" fill="rgb(243,190,46)"/><text x="1153.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (208 samples, 27.73%)</title><rect x="829" y="180" width="327" height="15" fill="rgb(216,41,28)"/><text x="832.00" y="190.50">_forward_pass (sklearn/neural_network/_multi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.73%)</title><rect x="1136" y="196" width="20" height="15" fill="rgb(238,192,44)"/><text x="1139.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.73%)</title><rect x="1136" y="212" width="20" height="15" fill="rgb(206,18,13)"/><text x="1139.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 1.73%)</title><rect x="1136" y="228" width="20" height="15" fill="rgb(232,39,5)"/><text x="1139.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 1.73%)</title><rect x="1136" y="244" width="20" height="15" fill="rgb(245,35,19)"/><text x="1139.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.13%)</title><rect x="1155" y="260" width="1" height="15" fill="rgb(243,140,35)"/><text x="1158.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1155" y="276" width="1" height="15" fill="rgb(225,93,41)"/><text x="1158.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1155" y="292" width="1" height="15" fill="rgb(235,225,54)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f4d22658f46 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1155" y="308" width="1" height="15" fill="rgb(224,116,12)"/><text x="1158.00" y="318.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1156" y="180" width="2" height="15" fill="rgb(248,167,47)"/><text x="1159.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.13%)</title><rect x="1156" y="196" width="2" height="15" fill="rgb(212,145,9)"/><text x="1159.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.13%)</title><rect x="1156" y="212" width="2" height="15" fill="rgb(236,193,5)"/><text x="1159.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1156" y="228" width="2" height="15" fill="rgb(248,129,10)"/><text x="1159.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="1164" y="196" width="2" height="15" fill="rgb(219,17,27)"/><text x="1167.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1164" y="212" width="2" height="15" fill="rgb(210,87,25)"/><text x="1167.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.27%)</title><rect x="1166" y="196" width="3" height="15" fill="rgb(243,158,51)"/><text x="1169.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.13%)</title><rect x="1169" y="196" width="2" height="15" fill="rgb(236,132,42)"/><text x="1172.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.13%)</title><rect x="1169" y="212" width="2" height="15" fill="rgb(243,7,41)"/><text x="1172.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (220 samples, 29.33%)</title><rect x="828" y="164" width="346" height="15" fill="rgb(221,53,5)"/><text x="831.00" y="174.50">_predict (sklearn/neural_network/_multilayer_p..</text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 1.33%)</title><rect x="1158" y="180" width="16" height="15" fill="rgb(237,32,15)"/><text x="1161.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (2 samples, 0.27%)</title><rect x="1171" y="196" width="3" height="15" fill="rgb(224,226,27)"/><text x="1174.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.13%)</title><rect x="1172" y="212" width="2" height="15" fill="rgb(222,9,48)"/><text x="1175.00" y="222.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (227 samples, 30.27%)</title><rect x="824" y="68" width="358" height="15" fill="rgb(244,100,27)"/><text x="827.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_cl_10..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (227 samples, 30.27%)</title><rect x="824" y="84" width="358" height="15" fill="rgb(236,105,16)"/><text x="827.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (227 samples, 30.27%)</title><rect x="824" y="100" width="358" height="15" fill="rgb(242,149,21)"/><text x="827.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 30.27%)</title><rect x="824" y="116" width="358" height="15" fill="rgb(253,160,43)"/><text x="827.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (225 samples, 30.00%)</title><rect x="828" y="132" width="354" height="15" fill="rgb(227,226,37)"/><text x="831.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (225 samples, 30.00%)</title><rect x="828" y="148" width="354" height="15" fill="rgb(205,135,44)"/><text x="831.00" y="158.50">predict_proba (sklearn/neural_network/_multilaye..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.67%)</title><rect x="1174" y="164" width="8" height="15" fill="rgb(249,175,33)"/><text x="1177.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.40%)</title><rect x="1177" y="180" width="5" height="15" fill="rgb(230,194,8)"/><text x="1180.00" y="190.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.13%)</title><rect x="1182" y="164" width="1" height="15" fill="rgb(224,75,44)"/><text x="1185.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.13%)</title><rect x="1182" y="180" width="1" height="15" fill="rgb(229,80,20)"/><text x="1185.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1182" y="196" width="1" height="15" fill="rgb(224,155,10)"/><text x="1185.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1182" y="212" width="1" height="15" fill="rgb(254,221,53)"/><text x="1185.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1182" y="228" width="1" height="15" fill="rgb(238,169,8)"/><text x="1185.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1182" y="244" width="1" height="15" fill="rgb(207,65,35)"/><text x="1185.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1182" y="260" width="1" height="15" fill="rgb(236,9,49)"/><text x="1185.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1182" y="276" width="1" height="15" fill="rgb(216,216,18)"/><text x="1185.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(210,9,34)"/><text x="1185.00" y="302.50"></text></g><g><title>0x7f4d22658f72 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1182" y="308" width="1" height="15" fill="rgb(237,19,49)"/><text x="1185.00" y="318.50"></text></g><g><title>array_true_divide (number.c) (1 samples, 0.13%)</title><rect x="1183" y="212" width="2" height="15" fill="rgb(250,123,4)"/><text x="1186.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(244,151,11)"/><text x="1186.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(247,110,28)"/><text x="1186.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(208,30,47)"/><text x="1186.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.13%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(237,156,12)"/><text x="1186.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(230,173,43)"/><text x="1186.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(234,38,49)"/><text x="1186.00" y="318.50"></text></g><g><title>double_multiply (scalarmath.c.src) (1 samples, 0.13%)</title><rect x="1185" y="212" width="1" height="15" fill="rgb(238,215,22)"/><text x="1188.00" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.13%)</title><rect x="1185" y="228" width="1" height="15" fill="rgb(220,214,4)"/><text x="1188.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1185" y="244" width="1" height="15" fill="rgb(238,97,54)"/><text x="1188.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1185" y="260" width="1" height="15" fill="rgb(252,90,36)"/><text x="1188.00" y="270.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py) (3 samples, 0.40%)</title><rect x="1183" y="180" width="5" height="15" fill="rgb(224,143,47)"/><text x="1186.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py) (3 samples, 0.40%)</title><rect x="1183" y="196" width="5" height="15" fill="rgb(230,45,26)"/><text x="1186.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(240,3,14)"/><text x="1189.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(229,202,2)"/><text x="1189.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(230,56,19)"/><text x="1189.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(252,116,50)"/><text x="1189.00" y="270.50"></text></g><g><title>DOUBLE_sqrt (loops.c.src) (1 samples, 0.13%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(239,98,39)"/><text x="1189.00" y="286.50"></text></g><g><title>run_unary_simd_sqrt_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(229,138,44)"/><text x="1189.00" y="302.50"></text></g><g><title>sse2_sqrt_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(249,228,44)"/><text x="1189.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.13%)</title><rect x="1186" y="324" width="2" height="15" fill="rgb(208,226,13)"/><text x="1189.00" y="334.50"></text></g><g><title>all (750 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,174,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (750 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(240,24,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py) (5 samples, 0.67%)</title><rect x="1182" y="68" width="8" height="15" fill="rgb(222,50,33)"/><text x="1185.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (5 samples, 0.67%)</title><rect x="1182" y="84" width="8" height="15" fill="rgb(239,41,51)"/><text x="1185.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(225,195,4)"/><text x="1185.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.67%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(222,214,0)"/><text x="1185.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.67%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(209,90,16)"/><text x="1185.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (5 samples, 0.67%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(251,82,1)"/><text x="1185.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (4 samples, 0.53%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(220,57,28)"/><text x="1186.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(248,28,40)"/><text x="1191.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(221,222,34)"/><text x="1191.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(250,87,23)"/><text x="1191.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.13%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(213,112,46)"/><text x="1191.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.13%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(222,124,4)"/><text x="1191.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.13%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(215,103,46)"/><text x="1191.00" y="270.50"></text></g></g></svg>