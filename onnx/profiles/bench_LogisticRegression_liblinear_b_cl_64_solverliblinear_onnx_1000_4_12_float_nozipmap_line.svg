<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:31) (1 samples, 0.37%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(227,92,24)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:11) (1 samples, 0.37%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(206,40,32)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:41) (1 samples, 0.37%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(235,145,54)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(221,87,53)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py:1542) (1 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(213,39,9)"/><text x="13.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py:939) (1 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(244,208,16)"/><text x="13.00" y="142.50"></text></g><g><title>0x7fde150c7c54 (?) (1 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(253,144,51)"/><text x="13.00" y="158.50"></text></g><g><title>0x7fde150c4060 (?) (1 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(224,15,22)"/><text x="13.00" y="174.50"></text></g><g><title>0x7fde150d1d04 (?) (1 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(238,131,35)"/><text x="13.00" y="190.50"></text></g><g><title>0x7fde150cf05a (?) (1 samples, 0.37%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(244,33,19)"/><text x="13.00" y="206.50"></text></g><g><title>0x7fde150c964a (?) (1 samples, 0.37%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(244,105,40)"/><text x="13.00" y="222.50"></text></g><g><title>0x7fde150ca075 (?) (1 samples, 0.37%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(238,138,3)"/><text x="13.00" y="238.50"></text></g><g><title>0x7fde150ca023 (?) (1 samples, 0.37%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(213,52,11)"/><text x="13.00" y="254.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:28) (1 samples, 0.37%)</title><rect x="14" y="84" width="4" height="15" fill="rgb(238,36,44)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(253,42,8)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:223) (1 samples, 0.37%)</title><rect x="14" y="116" width="4" height="15" fill="rgb(242,150,39)"/><text x="17.00" y="126.50"></text></g><g><title>_optimize_onnx (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:49) (1 samples, 0.37%)</title><rect x="14" y="132" width="4" height="15" fill="rgb(208,14,18)"/><text x="17.00" y="142.50"></text></g><g><title>onnx_optimisations (mlprodict/onnxrt/optim/_main_onnx_optim.py:20) (1 samples, 0.37%)</title><rect x="14" y="148" width="4" height="15" fill="rgb(225,209,13)"/><text x="17.00" y="158.50"></text></g><g><title>onnx_remove_node (mlprodict/onnxrt/optim/onnx_optimisation.py:30) (1 samples, 0.37%)</title><rect x="14" y="164" width="4" height="15" fill="rgb(238,228,17)"/><text x="17.00" y="174.50"></text></g><g><title>_apply_optimisation_on_graph (mlprodict/onnxrt/optim/_onnx_optimisation_common.py:28) (1 samples, 0.37%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(234,186,52)"/><text x="17.00" y="190.50"></text></g><g><title>onnx_remove_node (mlprodict/onnxrt/optim/onnx_optimisation.py:34) (1 samples, 0.37%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(211,75,13)"/><text x="17.00" y="206.50"></text></g><g><title>onnx_remove_node_identity (mlprodict/onnxrt/optim/onnx_optimisation_identity.py:110) (1 samples, 0.37%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(223,184,34)"/><text x="17.00" y="222.50"></text></g><g><title>make_graph (onnx/helper.py:90) (1 samples, 0.37%)</title><rect x="14" y="228" width="4" height="15" fill="rgb(227,41,44)"/><text x="17.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(253,132,7)"/><text x="17.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(212,41,32)"/><text x="17.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(210,119,4)"/><text x="17.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(242,199,48)"/><text x="17.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::AddString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(239,13,26)"/><text x="17.00" y="318.50"></text></g><g><title>google::protobuf::RepeatedPtrField&lt;std::string&gt;::Add (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(207,96,8)"/><text x="17.00" y="334.50"></text></g><g><title>google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="14" y="340" width="4" height="15" fill="rgb(206,176,39)"/><text x="17.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="14" y="356" width="4" height="15" fill="rgb(245,114,49)"/><text x="17.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="14" y="372" width="4" height="15" fill="rgb(237,228,12)"/><text x="17.00" y="382.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (2 samples, 0.74%)</title><rect x="18" y="148" width="9" height="15" fill="rgb(221,87,44)"/><text x="21.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.37%)</title><rect x="23" y="164" width="4" height="15" fill="rgb(216,169,20)"/><text x="26.00" y="174.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.37%)</title><rect x="27" y="164" width="4" height="15" fill="rgb(205,206,50)"/><text x="30.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.37%)</title><rect x="27" y="180" width="4" height="15" fill="rgb(234,204,19)"/><text x="30.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.37%)</title><rect x="27" y="196" width="4" height="15" fill="rgb(227,6,47)"/><text x="30.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.37%)</title><rect x="27" y="212" width="4" height="15" fill="rgb(246,66,26)"/><text x="30.00" y="222.50"></text></g><g><title>0x7fde44b22b89 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="27" y="228" width="4" height="15" fill="rgb(213,139,33)"/><text x="30.00" y="238.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:18) (4 samples, 1.48%)</title><rect x="18" y="100" width="18" height="15" fill="rgb(220,73,50)"/><text x="21.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 1.48%)</title><rect x="18" y="116" width="18" height="15" fill="rgb(251,123,7)"/><text x="21.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 1.48%)</title><rect x="18" y="132" width="18" height="15" fill="rgb(226,163,4)"/><text x="21.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.74%)</title><rect x="27" y="148" width="9" height="15" fill="rgb(241,205,22)"/><text x="30.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.37%)</title><rect x="31" y="164" width="5" height="15" fill="rgb(230,120,0)"/><text x="34.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.37%)</title><rect x="31" y="180" width="5" height="15" fill="rgb(235,8,3)"/><text x="34.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.37%)</title><rect x="31" y="196" width="5" height="15" fill="rgb(212,215,19)"/><text x="34.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.37%)</title><rect x="31" y="212" width="5" height="15" fill="rgb(231,15,12)"/><text x="34.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.37%)</title><rect x="31" y="228" width="5" height="15" fill="rgb(248,224,34)"/><text x="34.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.37%)</title><rect x="31" y="244" width="5" height="15" fill="rgb(220,157,41)"/><text x="34.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.37%)</title><rect x="31" y="260" width="5" height="15" fill="rgb(208,147,1)"/><text x="34.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.37%)</title><rect x="31" y="276" width="5" height="15" fill="rgb(230,216,14)"/><text x="34.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.37%)</title><rect x="31" y="292" width="5" height="15" fill="rgb(215,57,20)"/><text x="34.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.37%)</title><rect x="31" y="308" width="5" height="15" fill="rgb(232,173,21)"/><text x="34.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.37%)</title><rect x="31" y="324" width="5" height="15" fill="rgb(218,49,14)"/><text x="34.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.37%)</title><rect x="36" y="164" width="4" height="15" fill="rgb(207,135,15)"/><text x="39.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="36" y="180" width="4" height="15" fill="rgb(206,207,12)"/><text x="39.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.37%)</title><rect x="40" y="164" width="4" height="15" fill="rgb(247,166,51)"/><text x="43.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.37%)</title><rect x="44" y="180" width="5" height="15" fill="rgb(229,219,16)"/><text x="47.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.37%)</title><rect x="49" y="180" width="4" height="15" fill="rgb(229,27,5)"/><text x="52.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="49" y="196" width="4" height="15" fill="rgb(206,150,11)"/><text x="52.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (5 samples, 1.85%)</title><rect x="36" y="148" width="21" height="15" fill="rgb(209,24,38)"/><text x="39.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 1.11%)</title><rect x="44" y="164" width="13" height="15" fill="rgb(253,190,5)"/><text x="47.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.37%)</title><rect x="53" y="180" width="4" height="15" fill="rgb(229,113,23)"/><text x="56.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.37%)</title><rect x="57" y="148" width="5" height="15" fill="rgb(214,210,34)"/><text x="60.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (1 samples, 0.37%)</title><rect x="62" y="148" width="4" height="15" fill="rgb(243,25,22)"/><text x="65.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.11%)</title><rect x="70" y="212" width="14" height="15" fill="rgb(216,158,29)"/><text x="73.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.11%)</title><rect x="70" y="228" width="14" height="15" fill="rgb(229,7,15)"/><text x="73.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 1.48%)</title><rect x="70" y="180" width="18" height="15" fill="rgb(228,29,27)"/><text x="73.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.48%)</title><rect x="70" y="196" width="18" height="15" fill="rgb(222,175,20)"/><text x="73.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.37%)</title><rect x="84" y="212" width="4" height="15" fill="rgb(234,144,28)"/><text x="87.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.37%)</title><rect x="88" y="196" width="4" height="15" fill="rgb(234,172,42)"/><text x="91.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.74%)</title><rect x="92" y="196" width="9" height="15" fill="rgb(226,219,41)"/><text x="95.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.37%)</title><rect x="97" y="212" width="4" height="15" fill="rgb(222,131,53)"/><text x="100.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.37%)</title><rect x="101" y="212" width="4" height="15" fill="rgb(238,123,34)"/><text x="104.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.37%)</title><rect x="105" y="228" width="5" height="15" fill="rgb(229,187,16)"/><text x="108.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 1.11%)</title><rect x="101" y="196" width="13" height="15" fill="rgb(224,179,52)"/><text x="104.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.74%)</title><rect x="105" y="212" width="9" height="15" fill="rgb(214,94,23)"/><text x="108.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.37%)</title><rect x="110" y="228" width="4" height="15" fill="rgb(225,124,10)"/><text x="113.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.37%)</title><rect x="114" y="196" width="4" height="15" fill="rgb(235,139,46)"/><text x="117.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.37%)</title><rect x="114" y="212" width="4" height="15" fill="rgb(251,172,24)"/><text x="117.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.37%)</title><rect x="114" y="228" width="4" height="15" fill="rgb(212,52,52)"/><text x="117.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.74%)</title><rect x="118" y="196" width="9" height="15" fill="rgb(249,199,46)"/><text x="121.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.37%)</title><rect x="127" y="196" width="4" height="15" fill="rgb(250,65,31)"/><text x="130.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.37%)</title><rect x="136" y="212" width="4" height="15" fill="rgb(239,222,9)"/><text x="139.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 1.11%)</title><rect x="131" y="196" width="13" height="15" fill="rgb(241,39,54)"/><text x="134.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.37%)</title><rect x="140" y="212" width="4" height="15" fill="rgb(237,163,13)"/><text x="143.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.37%)</title><rect x="140" y="228" width="4" height="15" fill="rgb(209,223,4)"/><text x="143.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.37%)</title><rect x="144" y="196" width="5" height="15" fill="rgb(229,118,46)"/><text x="147.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.37%)</title><rect x="144" y="212" width="5" height="15" fill="rgb(233,145,30)"/><text x="147.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.37%)</title><rect x="153" y="212" width="5" height="15" fill="rgb(245,15,1)"/><text x="156.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.37%)</title><rect x="158" y="212" width="4" height="15" fill="rgb(242,158,33)"/><text x="161.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (19 samples, 7.01%)</title><rect x="88" y="180" width="83" height="15" fill="rgb(246,220,29)"/><text x="91.00" y="190.50">decision_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 1.85%)</title><rect x="149" y="196" width="22" height="15" fill="rgb(217,179,49)"/><text x="152.00" y="206.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.74%)</title><rect x="162" y="212" width="9" height="15" fill="rgb(241,137,42)"/><text x="165.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.74%)</title><rect x="162" y="228" width="9" height="15" fill="rgb(223,5,11)"/><text x="165.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.37%)</title><rect x="166" y="244" width="5" height="15" fill="rgb(222,155,38)"/><text x="169.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="175" y="212" width="4" height="15" fill="rgb(251,25,49)"/><text x="178.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="175" y="228" width="4" height="15" fill="rgb(219,74,44)"/><text x="178.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.37%)</title><rect x="175" y="244" width="4" height="15" fill="rgb(246,99,28)"/><text x="178.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.37%)</title><rect x="179" y="244" width="5" height="15" fill="rgb(233,5,9)"/><text x="182.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.37%)</title><rect x="179" y="260" width="5" height="15" fill="rgb(220,95,53)"/><text x="182.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.37%)</title><rect x="184" y="260" width="4" height="15" fill="rgb(235,168,16)"/><text x="187.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.37%)</title><rect x="184" y="276" width="4" height="15" fill="rgb(249,96,52)"/><text x="187.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.37%)</title><rect x="184" y="292" width="4" height="15" fill="rgb(236,81,26)"/><text x="187.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.37%)</title><rect x="184" y="308" width="4" height="15" fill="rgb(244,9,52)"/><text x="187.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="184" y="324" width="4" height="15" fill="rgb(209,69,54)"/><text x="187.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.37%)</title><rect x="184" y="340" width="4" height="15" fill="rgb(206,126,49)"/><text x="187.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.37%)</title><rect x="184" y="356" width="4" height="15" fill="rgb(233,213,19)"/><text x="187.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.37%)</title><rect x="184" y="372" width="4" height="15" fill="rgb(242,78,35)"/><text x="187.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.37%)</title><rect x="184" y="388" width="4" height="15" fill="rgb(233,160,51)"/><text x="187.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="184" y="404" width="4" height="15" fill="rgb(210,32,26)"/><text x="187.00" y="414.50"></text></g><g><title>0x7fde44b0e6db (libc-2.29.so) (1 samples, 0.37%)</title><rect x="184" y="420" width="4" height="15" fill="rgb(213,133,39)"/><text x="187.00" y="430.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.37%)</title><rect x="188" y="308" width="4" height="15" fill="rgb(217,24,46)"/><text x="191.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.74%)</title><rect x="188" y="260" width="9" height="15" fill="rgb(246,84,6)"/><text x="191.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.74%)</title><rect x="188" y="276" width="9" height="15" fill="rgb(230,102,4)"/><text x="191.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.74%)</title><rect x="188" y="292" width="9" height="15" fill="rgb(239,134,4)"/><text x="191.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.37%)</title><rect x="192" y="308" width="5" height="15" fill="rgb(213,142,16)"/><text x="195.00" y="318.50"></text></g><g><title>0x7fde44b2cd67 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="192" y="324" width="5" height="15" fill="rgb(241,22,0)"/><text x="195.00" y="334.50"></text></g><g><title>array_add (number.c:330) (6 samples, 2.21%)</title><rect x="175" y="196" width="26" height="15" fill="rgb(230,194,3)"/><text x="178.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.85%)</title><rect x="179" y="212" width="22" height="15" fill="rgb(250,206,22)"/><text x="182.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.85%)</title><rect x="179" y="228" width="22" height="15" fill="rgb(237,182,19)"/><text x="182.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.48%)</title><rect x="184" y="244" width="17" height="15" fill="rgb(214,208,48)"/><text x="187.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.37%)</title><rect x="197" y="260" width="4" height="15" fill="rgb(213,139,3)"/><text x="200.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="197" y="276" width="4" height="15" fill="rgb(217,216,53)"/><text x="200.00" y="286.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.11%)</title><rect x="205" y="212" width="14" height="15" fill="rgb(249,123,17)"/><text x="208.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.37%)</title><rect x="219" y="260" width="4" height="15" fill="rgb(231,222,37)"/><text x="222.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.37%)</title><rect x="219" y="276" width="4" height="15" fill="rgb(231,125,36)"/><text x="222.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.37%)</title><rect x="219" y="292" width="4" height="15" fill="rgb(232,157,47)"/><text x="222.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.37%)</title><rect x="223" y="276" width="4" height="15" fill="rgb(234,117,7)"/><text x="226.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.37%)</title><rect x="223" y="292" width="4" height="15" fill="rgb(254,77,53)"/><text x="226.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="223" y="308" width="4" height="15" fill="rgb(212,224,42)"/><text x="226.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.37%)</title><rect x="223" y="324" width="4" height="15" fill="rgb(219,114,0)"/><text x="226.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.37%)</title><rect x="223" y="340" width="4" height="15" fill="rgb(245,179,4)"/><text x="226.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.37%)</title><rect x="223" y="356" width="4" height="15" fill="rgb(252,128,29)"/><text x="226.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:306) (1 samples, 0.37%)</title><rect x="227" y="292" width="5" height="15" fill="rgb(248,64,28)"/><text x="230.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.37%)</title><rect x="227" y="308" width="5" height="15" fill="rgb(214,104,41)"/><text x="230.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.74%)</title><rect x="227" y="276" width="9" height="15" fill="rgb(254,75,39)"/><text x="230.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="232" y="292" width="4" height="15" fill="rgb(219,220,41)"/><text x="235.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.37%)</title><rect x="232" y="308" width="4" height="15" fill="rgb(238,176,51)"/><text x="235.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.37%)</title><rect x="232" y="324" width="4" height="15" fill="rgb(248,147,42)"/><text x="235.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 1.85%)</title><rect x="219" y="244" width="21" height="15" fill="rgb(208,93,50)"/><text x="222.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.48%)</title><rect x="223" y="260" width="17" height="15" fill="rgb(254,107,19)"/><text x="226.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.37%)</title><rect x="236" y="276" width="4" height="15" fill="rgb(228,57,50)"/><text x="239.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1961) (1 samples, 0.37%)</title><rect x="236" y="292" width="4" height="15" fill="rgb(239,198,37)"/><text x="239.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.37%)</title><rect x="240" y="244" width="5" height="15" fill="rgb(231,32,13)"/><text x="243.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.37%)</title><rect x="240" y="260" width="5" height="15" fill="rgb(241,10,53)"/><text x="243.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 1.85%)</title><rect x="245" y="244" width="21" height="15" fill="rgb(241,56,19)"/><text x="248.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (5 samples, 1.85%)</title><rect x="245" y="260" width="21" height="15" fill="rgb(244,157,42)"/><text x="248.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.85%)</title><rect x="245" y="276" width="21" height="15" fill="rgb(238,113,44)"/><text x="248.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.85%)</title><rect x="245" y="292" width="21" height="15" fill="rgb(240,38,51)"/><text x="248.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.48%)</title><rect x="249" y="308" width="17" height="15" fill="rgb(220,59,43)"/><text x="252.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (23 samples, 8.49%)</title><rect x="171" y="180" width="100" height="15" fill="rgb(220,10,41)"/><text x="174.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 5.90%)</title><rect x="201" y="196" width="70" height="15" fill="rgb(220,93,8)"/><text x="204.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 4.43%)</title><rect x="219" y="212" width="52" height="15" fill="rgb(245,176,2)"/><text x="222.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 4.43%)</title><rect x="219" y="228" width="52" height="15" fill="rgb(224,105,7)"/><text x="222.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.37%)</title><rect x="266" y="244" width="5" height="15" fill="rgb(209,186,15)"/><text x="269.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (47 samples, 17.34%)</title><rect x="70" y="164" width="205" height="15" fill="rgb(248,101,17)"/><text x="73.00" y="174.50">_predict_proba_lr (sklearn..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.37%)</title><rect x="271" y="180" width="4" height="15" fill="rgb(232,201,37)"/><text x="274.00" y="190.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.37%)</title><rect x="275" y="212" width="4" height="15" fill="rgb(247,196,43)"/><text x="278.00" y="222.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.37%)</title><rect x="275" y="228" width="4" height="15" fill="rgb(214,43,31)"/><text x="278.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.74%)</title><rect x="275" y="196" width="9" height="15" fill="rgb(217,5,19)"/><text x="278.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.37%)</title><rect x="279" y="212" width="5" height="15" fill="rgb(229,107,44)"/><text x="282.00" y="222.50"></text></g><g><title>0x7fde26f129da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="284" y="244" width="4" height="15" fill="rgb(224,124,41)"/><text x="287.00" y="254.50"></text></g><g><title>0x7fde26f33254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="288" y="260" width="5" height="15" fill="rgb(227,166,49)"/><text x="291.00" y="270.50"></text></g><g><title>0x7fde2703c9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="297" y="276" width="4" height="15" fill="rgb(226,103,33)"/><text x="300.00" y="286.50"></text></g><g><title>0x7fde44cdebb4 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="323" y="292" width="4" height="15" fill="rgb(238,199,49)"/><text x="326.00" y="302.50"></text></g><g><title>0x7fde44cdec07 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="327" y="292" width="5" height="15" fill="rgb(211,149,35)"/><text x="330.00" y="302.50"></text></g><g><title>0x7fde44cdec18 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="332" y="292" width="4" height="15" fill="rgb(241,139,25)"/><text x="335.00" y="302.50"></text></g><g><title>0x7fde44cdec56 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="336" y="292" width="4" height="15" fill="rgb(207,37,19)"/><text x="339.00" y="302.50"></text></g><g><title>0x7fde44cdec6a (libm-2.29.so) (1 samples, 0.37%)</title><rect x="340" y="292" width="5" height="15" fill="rgb(230,82,38)"/><text x="343.00" y="302.50"></text></g><g><title>0x7fde26f33265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.80%)</title><rect x="293" y="260" width="56" height="15" fill="rgb(241,85,52)"/><text x="296.00" y="270.50">0x7fd..</text></g><g><title>exp (libm-2.29.so) (11 samples, 4.06%)</title><rect x="301" y="276" width="48" height="15" fill="rgb(241,222,46)"/><text x="304.00" y="286.50">exp ..</text></g><g><title>0x7fde44cdec7b (libm-2.29.so) (1 samples, 0.37%)</title><rect x="345" y="292" width="4" height="15" fill="rgb(253,9,35)"/><text x="348.00" y="302.50"></text></g><g><title>0x7fde26f129dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 8.49%)</title><rect x="288" y="244" width="100" height="15" fill="rgb(214,218,35)"/><text x="291.00" y="254.50">0x7fde26f129..</text></g><g><title>0x7fde26f33279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.32%)</title><rect x="349" y="260" width="39" height="15" fill="rgb(209,28,27)"/><text x="352.00" y="270.50">0x7..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (28 samples, 10.33%)</title><rect x="275" y="164" width="122" height="15" fill="rgb(228,35,47)"/><text x="278.00" y="174.50">_predict_proba_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (28 samples, 10.33%)</title><rect x="275" y="180" width="122" height="15" fill="rgb(226,1,28)"/><text x="278.00" y="190.50">ufunc_generic_c..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (26 samples, 9.59%)</title><rect x="284" y="196" width="113" height="15" fill="rgb(247,182,7)"/><text x="287.00" y="206.50">PyUFunc_Gener..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (26 samples, 9.59%)</title><rect x="284" y="212" width="113" height="15" fill="rgb(218,51,15)"/><text x="287.00" y="222.50">execute_legac..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (26 samples, 9.59%)</title><rect x="284" y="228" width="113" height="15" fill="rgb(218,37,26)"/><text x="287.00" y="238.50">trivial_two_o..</text></g><g><title>0x7fde26f129e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.74%)</title><rect x="388" y="244" width="9" height="15" fill="rgb(247,208,18)"/><text x="391.00" y="254.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.37%)</title><rect x="397" y="180" width="4" height="15" fill="rgb(237,65,27)"/><text x="400.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.37%)</title><rect x="397" y="196" width="4" height="15" fill="rgb(221,54,52)"/><text x="400.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.37%)</title><rect x="397" y="212" width="4" height="15" fill="rgb(239,213,28)"/><text x="400.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.37%)</title><rect x="401" y="180" width="5" height="15" fill="rgb(230,40,35)"/><text x="404.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.37%)</title><rect x="401" y="196" width="5" height="15" fill="rgb(205,64,14)"/><text x="404.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:277) (1 samples, 0.37%)</title><rect x="401" y="212" width="5" height="15" fill="rgb(216,218,50)"/><text x="404.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.37%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(249,194,52)"/><text x="409.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.37%)</title><rect x="410" y="276" width="4" height="15" fill="rgb(253,92,47)"/><text x="413.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.37%)</title><rect x="410" y="292" width="4" height="15" fill="rgb(248,65,50)"/><text x="413.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.37%)</title><rect x="410" y="308" width="4" height="15" fill="rgb(206,188,49)"/><text x="413.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.37%)</title><rect x="410" y="324" width="4" height="15" fill="rgb(208,115,37)"/><text x="413.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.37%)</title><rect x="410" y="340" width="4" height="15" fill="rgb(218,187,34)"/><text x="413.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.37%)</title><rect x="410" y="356" width="4" height="15" fill="rgb(245,87,11)"/><text x="413.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.37%)</title><rect x="410" y="372" width="4" height="15" fill="rgb(219,80,13)"/><text x="413.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="414" y="276" width="5" height="15" fill="rgb(240,178,52)"/><text x="417.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.37%)</title><rect x="414" y="292" width="5" height="15" fill="rgb(234,224,41)"/><text x="417.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.37%)</title><rect x="414" y="308" width="5" height="15" fill="rgb(249,73,39)"/><text x="417.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2732) (1 samples, 0.37%)</title><rect x="414" y="324" width="5" height="15" fill="rgb(246,6,37)"/><text x="417.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.37%)</title><rect x="419" y="292" width="4" height="15" fill="rgb(233,140,34)"/><text x="422.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.37%)</title><rect x="423" y="292" width="5" height="15" fill="rgb(247,49,40)"/><text x="426.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.37%)</title><rect x="428" y="308" width="4" height="15" fill="rgb(208,195,30)"/><text x="431.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.37%)</title><rect x="436" y="324" width="5" height="15" fill="rgb(234,112,39)"/><text x="439.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.74%)</title><rect x="441" y="324" width="8" height="15" fill="rgb(233,18,46)"/><text x="444.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 1.85%)</title><rect x="432" y="308" width="22" height="15" fill="rgb(252,149,24)"/><text x="435.00" y="318.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.37%)</title><rect x="449" y="324" width="5" height="15" fill="rgb(221,106,28)"/><text x="452.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.37%)</title><rect x="454" y="308" width="4" height="15" fill="rgb(211,60,21)"/><text x="457.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.37%)</title><rect x="458" y="308" width="4" height="15" fill="rgb(233,174,9)"/><text x="461.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 5.17%)</title><rect x="406" y="180" width="61" height="15" fill="rgb(233,91,50)"/><text x="409.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 5.17%)</title><rect x="406" y="196" width="61" height="15" fill="rgb(253,69,25)"/><text x="409.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 5.17%)</title><rect x="406" y="212" width="61" height="15" fill="rgb(219,84,29)"/><text x="409.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 5.17%)</title><rect x="406" y="228" width="61" height="15" fill="rgb(213,117,33)"/><text x="409.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 4.80%)</title><rect x="410" y="244" width="57" height="15" fill="rgb(247,9,33)"/><text x="413.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 4.80%)</title><rect x="410" y="260" width="57" height="15" fill="rgb(216,126,26)"/><text x="413.00" y="270.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 4.06%)</title><rect x="419" y="276" width="48" height="15" fill="rgb(240,92,53)"/><text x="422.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 3.32%)</title><rect x="428" y="292" width="39" height="15" fill="rgb(236,4,18)"/><text x="431.00" y="302.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.37%)</title><rect x="462" y="308" width="5" height="15" fill="rgb(224,74,26)"/><text x="465.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="467" y="196" width="4" height="15" fill="rgb(249,194,15)"/><text x="470.00" y="206.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.37%)</title><rect x="467" y="212" width="4" height="15" fill="rgb(209,0,30)"/><text x="470.00" y="222.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 1.11%)</title><rect x="471" y="276" width="13" height="15" fill="rgb(222,41,43)"/><text x="474.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.48%)</title><rect x="471" y="228" width="17" height="15" fill="rgb(205,162,28)"/><text x="474.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.48%)</title><rect x="471" y="244" width="17" height="15" fill="rgb(241,12,49)"/><text x="474.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.48%)</title><rect x="471" y="260" width="17" height="15" fill="rgb(237,113,44)"/><text x="474.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.37%)</title><rect x="484" y="276" width="4" height="15" fill="rgb(230,185,49)"/><text x="487.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.37%)</title><rect x="484" y="292" width="4" height="15" fill="rgb(220,184,5)"/><text x="487.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:38) (111 samples, 40.96%)</title><rect x="14" y="52" width="483" height="15" fill="rgb(222,220,8)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverlibline..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:37) (111 samples, 40.96%)</title><rect x="14" y="68" width="483" height="15" fill="rgb(225,149,37)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverlibl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (110 samples, 40.59%)</title><rect x="18" y="84" width="479" height="15" fill="rgb(234,39,22)"/><text x="21.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (106 samples, 39.11%)</title><rect x="36" y="100" width="461" height="15" fill="rgb(212,185,45)"/><text x="39.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 39.11%)</title><rect x="36" y="116" width="461" height="15" fill="rgb(230,24,12)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (106 samples, 39.11%)</title><rect x="36" y="132" width="461" height="15" fill="rgb(215,63,14)"/><text x="39.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (99 samples, 36.53%)</title><rect x="66" y="148" width="431" height="15" fill="rgb(216,33,49)"/><text x="69.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (23 samples, 8.49%)</title><rect x="397" y="164" width="100" height="15" fill="rgb(212,135,11)"/><text x="400.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.58%)</title><rect x="467" y="180" width="30" height="15" fill="rgb(244,71,35)"/><text x="470.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 2.21%)</title><rect x="471" y="196" width="26" height="15" fill="rgb(207,226,54)"/><text x="474.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 2.21%)</title><rect x="471" y="212" width="26" height="15" fill="rgb(239,50,11)"/><text x="474.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.74%)</title><rect x="488" y="228" width="9" height="15" fill="rgb(230,123,27)"/><text x="491.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.74%)</title><rect x="488" y="244" width="9" height="15" fill="rgb(237,164,42)"/><text x="491.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.74%)</title><rect x="488" y="260" width="9" height="15" fill="rgb(224,229,52)"/><text x="491.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.74%)</title><rect x="488" y="276" width="9" height="15" fill="rgb(245,103,10)"/><text x="491.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.74%)</title><rect x="488" y="292" width="9" height="15" fill="rgb(208,153,5)"/><text x="491.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.37%)</title><rect x="497" y="148" width="5" height="15" fill="rgb(233,88,40)"/><text x="500.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="497" y="164" width="5" height="15" fill="rgb(254,148,45)"/><text x="500.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="497" y="180" width="5" height="15" fill="rgb(233,185,40)"/><text x="500.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="497" y="196" width="5" height="15" fill="rgb(229,80,13)"/><text x="500.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="497" y="212" width="5" height="15" fill="rgb(234,10,50)"/><text x="500.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="497" y="228" width="5" height="15" fill="rgb(228,138,22)"/><text x="500.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.37%)</title><rect x="497" y="244" width="5" height="15" fill="rgb(228,176,36)"/><text x="500.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="497" y="260" width="5" height="15" fill="rgb(205,158,7)"/><text x="500.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="497" y="276" width="5" height="15" fill="rgb(208,214,45)"/><text x="500.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="497" y="292" width="5" height="15" fill="rgb(215,138,4)"/><text x="500.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="497" y="308" width="5" height="15" fill="rgb(231,136,36)"/><text x="500.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="497" y="324" width="5" height="15" fill="rgb(229,124,5)"/><text x="500.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="497" y="340" width="5" height="15" fill="rgb(233,112,46)"/><text x="500.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="497" y="356" width="5" height="15" fill="rgb(238,168,25)"/><text x="500.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:99) (1 samples, 0.37%)</title><rect x="497" y="372" width="5" height="15" fill="rgb(211,201,40)"/><text x="500.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="497" y="388" width="5" height="15" fill="rgb(238,210,12)"/><text x="500.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="497" y="404" width="5" height="15" fill="rgb(206,204,17)"/><text x="500.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="497" y="420" width="5" height="15" fill="rgb(214,228,9)"/><text x="500.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="497" y="436" width="5" height="15" fill="rgb(240,171,28)"/><text x="500.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.37%)</title><rect x="497" y="452" width="5" height="15" fill="rgb(231,51,40)"/><text x="500.00" y="462.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.37%)</title><rect x="497" y="468" width="5" height="15" fill="rgb(220,47,22)"/><text x="500.00" y="478.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:553) (1 samples, 0.37%)</title><rect x="497" y="484" width="5" height="15" fill="rgb(220,20,34)"/><text x="500.00" y="494.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.37%)</title><rect x="502" y="980" width="4" height="15" fill="rgb(236,95,48)"/><text x="505.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.37%)</title><rect x="502" y="996" width="4" height="15" fill="rgb(227,71,3)"/><text x="505.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.37%)</title><rect x="502" y="1012" width="4" height="15" fill="rgb(248,157,49)"/><text x="505.00" y="1022.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.37%)</title><rect x="506" y="1012" width="4" height="15" fill="rgb(209,124,20)"/><text x="509.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.37%)</title><rect x="506" y="1028" width="4" height="15" fill="rgb(216,134,11)"/><text x="509.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.11%)</title><rect x="502" y="852" width="13" height="15" fill="rgb(224,199,1)"/><text x="505.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.11%)</title><rect x="502" y="868" width="13" height="15" fill="rgb(220,201,30)"/><text x="505.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.11%)</title><rect x="502" y="884" width="13" height="15" fill="rgb(234,111,36)"/><text x="505.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.11%)</title><rect x="502" y="900" width="13" height="15" fill="rgb(219,170,29)"/><text x="505.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 1.11%)</title><rect x="502" y="916" width="13" height="15" fill="rgb(238,99,40)"/><text x="505.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 1.11%)</title><rect x="502" y="932" width="13" height="15" fill="rgb(245,85,39)"/><text x="505.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 1.11%)</title><rect x="502" y="948" width="13" height="15" fill="rgb(211,208,42)"/><text x="505.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 1.11%)</title><rect x="502" y="964" width="13" height="15" fill="rgb(221,227,15)"/><text x="505.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 0.74%)</title><rect x="506" y="980" width="9" height="15" fill="rgb(212,202,50)"/><text x="509.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (2 samples, 0.74%)</title><rect x="506" y="996" width="9" height="15" fill="rgb(205,82,35)"/><text x="509.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.37%)</title><rect x="510" y="1012" width="5" height="15" fill="rgb(250,123,27)"/><text x="513.00" y="1022.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.37%)</title><rect x="515" y="948" width="4" height="15" fill="rgb(222,15,51)"/><text x="518.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.37%)</title><rect x="515" y="964" width="4" height="15" fill="rgb(215,229,46)"/><text x="518.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.37%)</title><rect x="515" y="980" width="4" height="15" fill="rgb(229,149,26)"/><text x="518.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.37%)</title><rect x="515" y="996" width="4" height="15" fill="rgb(242,102,20)"/><text x="518.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="515" y="1012" width="4" height="15" fill="rgb(212,13,34)"/><text x="518.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.74%)</title><rect x="515" y="884" width="8" height="15" fill="rgb(222,61,14)"/><text x="518.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.74%)</title><rect x="515" y="900" width="8" height="15" fill="rgb(207,24,16)"/><text x="518.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.74%)</title><rect x="515" y="916" width="8" height="15" fill="rgb(228,93,29)"/><text x="518.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.74%)</title><rect x="515" y="932" width="8" height="15" fill="rgb(217,70,27)"/><text x="518.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.37%)</title><rect x="519" y="948" width="4" height="15" fill="rgb(224,39,25)"/><text x="522.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.37%)</title><rect x="519" y="964" width="4" height="15" fill="rgb(212,187,48)"/><text x="522.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.37%)</title><rect x="519" y="980" width="4" height="15" fill="rgb(227,47,42)"/><text x="522.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.37%)</title><rect x="519" y="996" width="4" height="15" fill="rgb(207,135,36)"/><text x="522.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.37%)</title><rect x="519" y="1012" width="4" height="15" fill="rgb(243,30,38)"/><text x="522.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (6 samples, 2.21%)</title><rect x="502" y="148" width="26" height="15" fill="rgb(245,36,15)"/><text x="505.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="164" width="26" height="15" fill="rgb(237,95,33)"/><text x="505.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.21%)</title><rect x="502" y="180" width="26" height="15" fill="rgb(218,200,45)"/><text x="505.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="196" width="26" height="15" fill="rgb(238,119,9)"/><text x="505.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="212" width="26" height="15" fill="rgb(248,162,12)"/><text x="505.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="228" width="26" height="15" fill="rgb(241,169,10)"/><text x="505.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="244" width="26" height="15" fill="rgb(233,141,16)"/><text x="505.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="260" width="26" height="15" fill="rgb(211,57,4)"/><text x="505.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="276" width="26" height="15" fill="rgb(248,110,4)"/><text x="505.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.21%)</title><rect x="502" y="292" width="26" height="15" fill="rgb(222,72,21)"/><text x="505.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="308" width="26" height="15" fill="rgb(206,28,21)"/><text x="505.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="324" width="26" height="15" fill="rgb(221,26,48)"/><text x="505.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="340" width="26" height="15" fill="rgb(243,220,41)"/><text x="505.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="356" width="26" height="15" fill="rgb(211,38,34)"/><text x="505.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="372" width="26" height="15" fill="rgb(208,223,24)"/><text x="505.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.21%)</title><rect x="502" y="388" width="26" height="15" fill="rgb(206,155,29)"/><text x="505.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="404" width="26" height="15" fill="rgb(246,205,36)"/><text x="505.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="420" width="26" height="15" fill="rgb(223,14,53)"/><text x="505.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="436" width="26" height="15" fill="rgb(237,202,21)"/><text x="505.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="452" width="26" height="15" fill="rgb(218,92,4)"/><text x="505.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="468" width="26" height="15" fill="rgb(223,176,36)"/><text x="505.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.21%)</title><rect x="502" y="484" width="26" height="15" fill="rgb(210,190,25)"/><text x="505.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="500" width="26" height="15" fill="rgb(247,78,34)"/><text x="505.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="516" width="26" height="15" fill="rgb(245,3,23)"/><text x="505.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="532" width="26" height="15" fill="rgb(210,61,5)"/><text x="505.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="548" width="26" height="15" fill="rgb(213,72,13)"/><text x="505.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="564" width="26" height="15" fill="rgb(205,216,0)"/><text x="505.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.21%)</title><rect x="502" y="580" width="26" height="15" fill="rgb(208,41,5)"/><text x="505.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="596" width="26" height="15" fill="rgb(228,68,2)"/><text x="505.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.21%)</title><rect x="502" y="612" width="26" height="15" fill="rgb(234,23,33)"/><text x="505.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="628" width="26" height="15" fill="rgb(236,8,53)"/><text x="505.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="644" width="26" height="15" fill="rgb(250,38,2)"/><text x="505.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="660" width="26" height="15" fill="rgb(250,15,45)"/><text x="505.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="676" width="26" height="15" fill="rgb(237,163,14)"/><text x="505.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="692" width="26" height="15" fill="rgb(227,183,44)"/><text x="505.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="708" width="26" height="15" fill="rgb(238,196,14)"/><text x="505.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.21%)</title><rect x="502" y="724" width="26" height="15" fill="rgb(213,89,2)"/><text x="505.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.21%)</title><rect x="502" y="740" width="26" height="15" fill="rgb(207,20,15)"/><text x="505.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.21%)</title><rect x="502" y="756" width="26" height="15" fill="rgb(217,92,33)"/><text x="505.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.21%)</title><rect x="502" y="772" width="26" height="15" fill="rgb(238,153,49)"/><text x="505.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.21%)</title><rect x="502" y="788" width="26" height="15" fill="rgb(206,93,48)"/><text x="505.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.21%)</title><rect x="502" y="804" width="26" height="15" fill="rgb(220,151,21)"/><text x="505.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.21%)</title><rect x="502" y="820" width="26" height="15" fill="rgb(219,41,32)"/><text x="505.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.21%)</title><rect x="502" y="836" width="26" height="15" fill="rgb(231,60,26)"/><text x="505.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.11%)</title><rect x="515" y="852" width="13" height="15" fill="rgb(233,3,12)"/><text x="518.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.11%)</title><rect x="515" y="868" width="13" height="15" fill="rgb(245,18,47)"/><text x="518.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.37%)</title><rect x="523" y="884" width="5" height="15" fill="rgb(220,117,20)"/><text x="526.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.37%)</title><rect x="523" y="900" width="5" height="15" fill="rgb(238,142,26)"/><text x="526.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.37%)</title><rect x="523" y="916" width="5" height="15" fill="rgb(205,17,44)"/><text x="526.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.37%)</title><rect x="523" y="932" width="5" height="15" fill="rgb(230,192,27)"/><text x="526.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.37%)</title><rect x="523" y="948" width="5" height="15" fill="rgb(205,45,15)"/><text x="526.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.37%)</title><rect x="523" y="964" width="5" height="15" fill="rgb(249,155,42)"/><text x="526.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.37%)</title><rect x="523" y="980" width="5" height="15" fill="rgb(239,115,35)"/><text x="526.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.37%)</title><rect x="523" y="996" width="5" height="15" fill="rgb(234,198,47)"/><text x="526.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="523" y="1012" width="5" height="15" fill="rgb(208,76,28)"/><text x="526.00" y="1022.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.37%)</title><rect x="523" y="1028" width="5" height="15" fill="rgb(223,216,40)"/><text x="526.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="528" y="836" width="4" height="15" fill="rgb(221,56,32)"/><text x="531.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.37%)</title><rect x="528" y="852" width="4" height="15" fill="rgb(248,66,13)"/><text x="531.00" y="862.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.37%)</title><rect x="528" y="868" width="4" height="15" fill="rgb(207,79,38)"/><text x="531.00" y="878.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:127) (2 samples, 0.74%)</title><rect x="528" y="484" width="8" height="15" fill="rgb(251,85,9)"/><text x="531.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="528" y="500" width="8" height="15" fill="rgb(244,164,17)"/><text x="531.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="528" y="516" width="8" height="15" fill="rgb(247,33,19)"/><text x="531.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="528" y="532" width="8" height="15" fill="rgb(225,114,53)"/><text x="531.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="528" y="548" width="8" height="15" fill="rgb(252,228,1)"/><text x="531.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="528" y="564" width="8" height="15" fill="rgb(237,67,24)"/><text x="531.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/api.py:3) (2 samples, 0.74%)</title><rect x="528" y="580" width="8" height="15" fill="rgb(250,131,39)"/><text x="531.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="528" y="596" width="8" height="15" fill="rgb(222,195,26)"/><text x="531.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="528" y="612" width="8" height="15" fill="rgb(250,69,37)"/><text x="531.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="528" y="628" width="8" height="15" fill="rgb(212,69,18)"/><text x="531.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="528" y="644" width="8" height="15" fill="rgb(247,141,14)"/><text x="531.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="528" y="660" width="8" height="15" fill="rgb(231,18,49)"/><text x="531.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/eval.py:12) (2 samples, 0.74%)</title><rect x="528" y="676" width="8" height="15" fill="rgb(253,130,6)"/><text x="531.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="528" y="692" width="8" height="15" fill="rgb(237,146,48)"/><text x="531.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="528" y="708" width="8" height="15" fill="rgb(225,6,0)"/><text x="531.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="528" y="724" width="8" height="15" fill="rgb(234,141,12)"/><text x="531.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="528" y="740" width="8" height="15" fill="rgb(254,212,10)"/><text x="531.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="528" y="756" width="8" height="15" fill="rgb(252,228,0)"/><text x="531.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/engines.py:7) (2 samples, 0.74%)</title><rect x="528" y="772" width="8" height="15" fill="rgb(243,200,47)"/><text x="531.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="528" y="788" width="8" height="15" fill="rgb(238,18,29)"/><text x="531.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="528" y="804" width="8" height="15" fill="rgb(230,78,15)"/><text x="531.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="528" y="820" width="8" height="15" fill="rgb(238,206,25)"/><text x="531.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="532" y="836" width="4" height="15" fill="rgb(215,101,14)"/><text x="535.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="532" y="852" width="4" height="15" fill="rgb(217,222,21)"/><text x="535.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/align.py:13) (1 samples, 0.37%)</title><rect x="532" y="868" width="4" height="15" fill="rgb(207,214,45)"/><text x="535.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="532" y="884" width="4" height="15" fill="rgb(208,185,17)"/><text x="535.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="532" y="900" width="4" height="15" fill="rgb(217,73,51)"/><text x="535.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="532" y="916" width="4" height="15" fill="rgb(238,187,40)"/><text x="535.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="532" y="932" width="4" height="15" fill="rgb(218,128,6)"/><text x="535.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.37%)</title><rect x="532" y="948" width="4" height="15" fill="rgb(252,90,16)"/><text x="535.00" y="958.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.37%)</title><rect x="532" y="964" width="4" height="15" fill="rgb(232,208,35)"/><text x="535.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.37%)</title><rect x="532" y="980" width="4" height="15" fill="rgb(226,204,26)"/><text x="535.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="532" y="996" width="4" height="15" fill="rgb(251,165,45)"/><text x="535.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.37%)</title><rect x="532" y="1012" width="4" height="15" fill="rgb(230,110,26)"/><text x="535.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.11%)</title><rect x="528" y="292" width="13" height="15" fill="rgb(224,29,16)"/><text x="531.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="528" y="308" width="13" height="15" fill="rgb(243,220,48)"/><text x="531.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="528" y="324" width="13" height="15" fill="rgb(220,217,54)"/><text x="531.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="528" y="340" width="13" height="15" fill="rgb(249,128,3)"/><text x="531.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="528" y="356" width="13" height="15" fill="rgb(245,195,42)"/><text x="531.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="528" y="372" width="13" height="15" fill="rgb(226,4,47)"/><text x="531.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.11%)</title><rect x="528" y="388" width="13" height="15" fill="rgb(215,223,41)"/><text x="531.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="528" y="404" width="13" height="15" fill="rgb(220,115,24)"/><text x="531.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="528" y="420" width="13" height="15" fill="rgb(244,6,30)"/><text x="531.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="528" y="436" width="13" height="15" fill="rgb(254,134,32)"/><text x="531.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="528" y="452" width="13" height="15" fill="rgb(214,206,48)"/><text x="531.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="528" y="468" width="13" height="15" fill="rgb(253,67,38)"/><text x="531.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.37%)</title><rect x="536" y="484" width="5" height="15" fill="rgb(209,67,2)"/><text x="539.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="500" width="5" height="15" fill="rgb(219,195,11)"/><text x="539.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="516" width="5" height="15" fill="rgb(225,119,49)"/><text x="539.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="532" width="5" height="15" fill="rgb(243,79,3)"/><text x="539.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="536" y="548" width="5" height="15" fill="rgb(237,145,27)"/><text x="539.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="564" width="5" height="15" fill="rgb(209,198,21)"/><text x="539.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.37%)</title><rect x="536" y="580" width="5" height="15" fill="rgb(252,69,41)"/><text x="539.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="596" width="5" height="15" fill="rgb(248,166,0)"/><text x="539.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="612" width="5" height="15" fill="rgb(226,104,32)"/><text x="539.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="628" width="5" height="15" fill="rgb(210,113,43)"/><text x="539.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="536" y="644" width="5" height="15" fill="rgb(212,152,18)"/><text x="539.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="660" width="5" height="15" fill="rgb(229,183,0)"/><text x="539.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.37%)</title><rect x="536" y="676" width="5" height="15" fill="rgb(215,120,51)"/><text x="539.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="692" width="5" height="15" fill="rgb(211,63,50)"/><text x="539.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="708" width="5" height="15" fill="rgb(252,203,33)"/><text x="539.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="724" width="5" height="15" fill="rgb(236,212,12)"/><text x="539.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="740" width="5" height="15" fill="rgb(236,58,5)"/><text x="539.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="756" width="5" height="15" fill="rgb(208,227,37)"/><text x="539.00" y="766.50"></text></g><g><title>0x7fde3135240e (?) (1 samples, 0.37%)</title><rect x="536" y="772" width="5" height="15" fill="rgb(236,151,11)"/><text x="539.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="788" width="5" height="15" fill="rgb(207,92,35)"/><text x="539.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="804" width="5" height="15" fill="rgb(254,1,43)"/><text x="539.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="820" width="5" height="15" fill="rgb(237,61,3)"/><text x="539.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="836" width="5" height="15" fill="rgb(224,151,32)"/><text x="539.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="852" width="5" height="15" fill="rgb(231,128,26)"/><text x="539.00" y="862.50"></text></g><g><title>0x7fde3110bcd2 (?) (1 samples, 0.37%)</title><rect x="536" y="868" width="5" height="15" fill="rgb(228,119,5)"/><text x="539.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="884" width="5" height="15" fill="rgb(245,90,26)"/><text x="539.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="900" width="5" height="15" fill="rgb(250,135,34)"/><text x="539.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="916" width="5" height="15" fill="rgb(209,12,48)"/><text x="539.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="932" width="5" height="15" fill="rgb(218,23,22)"/><text x="539.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="948" width="5" height="15" fill="rgb(222,221,53)"/><text x="539.00" y="958.50"></text></g><g><title>0x7fde308010e5 (?) (1 samples, 0.37%)</title><rect x="536" y="964" width="5" height="15" fill="rgb(229,207,13)"/><text x="539.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="980" width="5" height="15" fill="rgb(244,11,25)"/><text x="539.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="996" width="5" height="15" fill="rgb(243,33,10)"/><text x="539.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="1012" width="5" height="15" fill="rgb(213,95,16)"/><text x="539.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="1028" width="5" height="15" fill="rgb(222,75,40)"/><text x="539.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="1044" width="5" height="15" fill="rgb(228,96,22)"/><text x="539.00" y="1054.50"></text></g><g><title>0x7fde30585e68 (?) (1 samples, 0.37%)</title><rect x="536" y="1060" width="5" height="15" fill="rgb(237,50,8)"/><text x="539.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="1076" width="5" height="15" fill="rgb(237,39,51)"/><text x="539.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="1092" width="5" height="15" fill="rgb(254,52,37)"/><text x="539.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="1108" width="5" height="15" fill="rgb(242,86,25)"/><text x="539.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="1124" width="5" height="15" fill="rgb(240,132,28)"/><text x="539.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="1140" width="5" height="15" fill="rgb(221,154,35)"/><text x="539.00" y="1150.50"></text></g><g><title>0x7fde303162fb (?) (1 samples, 0.37%)</title><rect x="536" y="1156" width="5" height="15" fill="rgb(205,35,54)"/><text x="539.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="1172" width="5" height="15" fill="rgb(213,39,52)"/><text x="539.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="1188" width="5" height="15" fill="rgb(206,112,18)"/><text x="539.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="1204" width="5" height="15" fill="rgb(240,99,48)"/><text x="539.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="1220" width="5" height="15" fill="rgb(217,11,33)"/><text x="539.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="1236" width="5" height="15" fill="rgb(239,90,14)"/><text x="539.00" y="1246.50"></text></g><g><title>0x7fde300fa153 (?) (1 samples, 0.37%)</title><rect x="536" y="1252" width="5" height="15" fill="rgb(238,186,12)"/><text x="539.00" y="1262.50"></text></g><g><title>0x7fde300f8c13 (?) (1 samples, 0.37%)</title><rect x="536" y="1268" width="5" height="15" fill="rgb(240,130,6)"/><text x="539.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="536" y="1284" width="5" height="15" fill="rgb(230,136,46)"/><text x="539.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="536" y="1300" width="5" height="15" fill="rgb(228,165,52)"/><text x="539.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="536" y="1316" width="5" height="15" fill="rgb(248,10,21)"/><text x="539.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="536" y="1332" width="5" height="15" fill="rgb(213,85,43)"/><text x="539.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="536" y="1348" width="5" height="15" fill="rgb(248,130,39)"/><text x="539.00" y="1358.50"></text></g><g><title>0x7fde2fe95181 (?) (1 samples, 0.37%)</title><rect x="536" y="1364" width="5" height="15" fill="rgb(231,66,45)"/><text x="539.00" y="1374.50"></text></g><g><title>0x7fde2fe981c9 (?) (1 samples, 0.37%)</title><rect x="536" y="1380" width="5" height="15" fill="rgb(226,51,48)"/><text x="539.00" y="1390.50"></text></g><g><title>0x7fde2fec4167 (?) (1 samples, 0.37%)</title><rect x="536" y="1396" width="5" height="15" fill="rgb(242,146,29)"/><text x="539.00" y="1406.50"></text></g><g><title>0x7fde2febfb64 (?) (1 samples, 0.37%)</title><rect x="536" y="1412" width="5" height="15" fill="rgb(254,59,36)"/><text x="539.00" y="1422.50"></text></g><g><title>0x7fde2fea307b (?) (1 samples, 0.37%)</title><rect x="536" y="1428" width="5" height="15" fill="rgb(243,214,6)"/><text x="539.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.37%)</title><rect x="536" y="1444" width="5" height="15" fill="rgb(219,171,32)"/><text x="539.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.37%)</title><rect x="536" y="1460" width="5" height="15" fill="rgb(233,189,29)"/><text x="539.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.37%)</title><rect x="536" y="1476" width="5" height="15" fill="rgb(225,107,33)"/><text x="539.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py:97) (1 samples, 0.37%)</title><rect x="536" y="1492" width="5" height="15" fill="rgb(227,35,10)"/><text x="539.00" y="1502.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.37%)</title><rect x="536" y="1508" width="5" height="15" fill="rgb(226,19,30)"/><text x="539.00" y="1518.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="536" y="1524" width="5" height="15" fill="rgb(236,126,23)"/><text x="539.00" y="1534.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.37%)</title><rect x="536" y="1540" width="5" height="15" fill="rgb(251,103,7)"/><text x="539.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (1 samples, 0.37%)</title><rect x="541" y="532" width="4" height="15" fill="rgb(225,45,11)"/><text x="544.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="548" width="4" height="15" fill="rgb(234,116,52)"/><text x="544.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="564" width="4" height="15" fill="rgb(232,40,39)"/><text x="544.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="580" width="4" height="15" fill="rgb(221,229,21)"/><text x="544.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="596" width="4" height="15" fill="rgb(226,147,38)"/><text x="544.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="612" width="4" height="15" fill="rgb(234,33,23)"/><text x="544.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.37%)</title><rect x="541" y="628" width="4" height="15" fill="rgb(220,110,29)"/><text x="544.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="644" width="4" height="15" fill="rgb(235,80,29)"/><text x="544.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="660" width="4" height="15" fill="rgb(227,97,36)"/><text x="544.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="676" width="4" height="15" fill="rgb(229,166,54)"/><text x="544.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="692" width="4" height="15" fill="rgb(231,75,14)"/><text x="544.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="708" width="4" height="15" fill="rgb(245,135,9)"/><text x="544.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.37%)</title><rect x="541" y="724" width="4" height="15" fill="rgb(223,11,41)"/><text x="544.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="740" width="4" height="15" fill="rgb(238,39,43)"/><text x="544.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="756" width="4" height="15" fill="rgb(227,4,39)"/><text x="544.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="772" width="4" height="15" fill="rgb(236,183,4)"/><text x="544.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="788" width="4" height="15" fill="rgb(214,20,12)"/><text x="544.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="804" width="4" height="15" fill="rgb(227,61,43)"/><text x="544.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.37%)</title><rect x="541" y="820" width="4" height="15" fill="rgb(212,21,46)"/><text x="544.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="836" width="4" height="15" fill="rgb(223,51,2)"/><text x="544.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="852" width="4" height="15" fill="rgb(242,146,30)"/><text x="544.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="868" width="4" height="15" fill="rgb(227,229,49)"/><text x="544.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="884" width="4" height="15" fill="rgb(210,168,11)"/><text x="544.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="900" width="4" height="15" fill="rgb(215,167,6)"/><text x="544.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.37%)</title><rect x="541" y="916" width="4" height="15" fill="rgb(240,207,46)"/><text x="544.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="932" width="4" height="15" fill="rgb(213,138,34)"/><text x="544.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="948" width="4" height="15" fill="rgb(249,128,14)"/><text x="544.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="964" width="4" height="15" fill="rgb(215,2,27)"/><text x="544.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="980" width="4" height="15" fill="rgb(245,228,15)"/><text x="544.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="996" width="4" height="15" fill="rgb(210,222,15)"/><text x="544.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.37%)</title><rect x="541" y="1012" width="4" height="15" fill="rgb(235,173,8)"/><text x="544.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="1028" width="4" height="15" fill="rgb(242,83,36)"/><text x="544.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="1044" width="4" height="15" fill="rgb(243,28,37)"/><text x="544.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="1060" width="4" height="15" fill="rgb(212,50,18)"/><text x="544.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="1076" width="4" height="15" fill="rgb(227,200,0)"/><text x="544.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1092" width="4" height="15" fill="rgb(247,74,16)"/><text x="544.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.37%)</title><rect x="541" y="1108" width="4" height="15" fill="rgb(207,32,53)"/><text x="544.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="1124" width="4" height="15" fill="rgb(224,10,5)"/><text x="544.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="1140" width="4" height="15" fill="rgb(207,146,7)"/><text x="544.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="1156" width="4" height="15" fill="rgb(227,67,10)"/><text x="544.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="1172" width="4" height="15" fill="rgb(231,93,1)"/><text x="544.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1188" width="4" height="15" fill="rgb(236,184,34)"/><text x="544.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.37%)</title><rect x="541" y="1204" width="4" height="15" fill="rgb(252,201,2)"/><text x="544.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="1220" width="4" height="15" fill="rgb(232,62,15)"/><text x="544.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="1236" width="4" height="15" fill="rgb(206,170,8)"/><text x="544.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="1252" width="4" height="15" fill="rgb(252,22,30)"/><text x="544.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="1268" width="4" height="15" fill="rgb(207,58,33)"/><text x="544.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1284" width="4" height="15" fill="rgb(206,53,11)"/><text x="544.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (1 samples, 0.37%)</title><rect x="541" y="1300" width="4" height="15" fill="rgb(236,112,46)"/><text x="544.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="541" y="1316" width="4" height="15" fill="rgb(221,58,49)"/><text x="544.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1332" width="4" height="15" fill="rgb(218,7,25)"/><text x="544.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="1348" width="4" height="15" fill="rgb(205,166,12)"/><text x="544.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="1364" width="4" height="15" fill="rgb(219,152,5)"/><text x="544.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="1380" width="4" height="15" fill="rgb(224,8,50)"/><text x="544.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="1396" width="4" height="15" fill="rgb(220,209,48)"/><text x="544.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1412" width="4" height="15" fill="rgb(209,114,29)"/><text x="544.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (1 samples, 0.37%)</title><rect x="541" y="1428" width="4" height="15" fill="rgb(233,214,44)"/><text x="544.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="541" y="1444" width="4" height="15" fill="rgb(238,181,8)"/><text x="544.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1460" width="4" height="15" fill="rgb(207,105,24)"/><text x="544.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="541" y="1476" width="4" height="15" fill="rgb(206,15,24)"/><text x="544.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="541" y="1492" width="4" height="15" fill="rgb(217,175,40)"/><text x="544.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="541" y="1508" width="4" height="15" fill="rgb(230,146,30)"/><text x="544.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="541" y="1524" width="4" height="15" fill="rgb(216,109,16)"/><text x="544.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="541" y="1540" width="4" height="15" fill="rgb(233,29,40)"/><text x="544.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:205) (1 samples, 0.37%)</title><rect x="541" y="1556" width="4" height="15" fill="rgb(223,177,31)"/><text x="544.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.37%)</title><rect x="541" y="1572" width="4" height="15" fill="rgb(218,184,4)"/><text x="544.00" y="1582.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.37%)</title><rect x="541" y="1588" width="4" height="15" fill="rgb(232,22,22)"/><text x="544.00" y="1598.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:189) (1 samples, 0.37%)</title><rect x="541" y="1604" width="4" height="15" fill="rgb(244,111,15)"/><text x="544.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:13) (1 samples, 0.37%)</title><rect x="545" y="532" width="4" height="15" fill="rgb(213,118,35)"/><text x="548.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="545" y="548" width="4" height="15" fill="rgb(248,11,4)"/><text x="548.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="545" y="564" width="4" height="15" fill="rgb(226,68,13)"/><text x="548.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="545" y="580" width="4" height="15" fill="rgb(205,9,26)"/><text x="548.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="545" y="596" width="4" height="15" fill="rgb(217,102,23)"/><text x="548.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="545" y="612" width="4" height="15" fill="rgb(215,60,54)"/><text x="548.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:26) (1 samples, 0.37%)</title><rect x="545" y="628" width="4" height="15" fill="rgb(237,178,50)"/><text x="548.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="545" y="644" width="4" height="15" fill="rgb(230,219,4)"/><text x="548.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="545" y="660" width="4" height="15" fill="rgb(218,193,12)"/><text x="548.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="545" y="676" width="4" height="15" fill="rgb(242,154,39)"/><text x="548.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="545" y="692" width="4" height="15" fill="rgb(240,171,2)"/><text x="548.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="545" y="708" width="4" height="15" fill="rgb(220,13,36)"/><text x="548.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_search.py:1156) (1 samples, 0.37%)</title><rect x="545" y="724" width="4" height="15" fill="rgb(253,108,20)"/><text x="548.00" y="734.50"></text></g><g><title>RandomizedSearchCV (sklearn/model_selection/_search.py:1482) (1 samples, 0.37%)</title><rect x="545" y="740" width="4" height="15" fill="rgb(208,213,11)"/><text x="548.00" y="750.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.37%)</title><rect x="549" y="964" width="5" height="15" fill="rgb(230,149,50)"/><text x="552.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="549" y="980" width="5" height="15" fill="rgb(207,158,18)"/><text x="552.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="549" y="996" width="5" height="15" fill="rgb(232,229,32)"/><text x="552.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="549" y="1012" width="5" height="15" fill="rgb(225,176,42)"/><text x="552.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="549" y="1028" width="5" height="15" fill="rgb(218,13,23)"/><text x="552.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="549" y="1044" width="5" height="15" fill="rgb(248,90,30)"/><text x="552.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.37%)</title><rect x="549" y="1060" width="5" height="15" fill="rgb(239,127,34)"/><text x="552.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="549" y="1076" width="5" height="15" fill="rgb(247,177,9)"/><text x="552.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="549" y="1092" width="5" height="15" fill="rgb(246,32,24)"/><text x="552.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="549" y="1108" width="5" height="15" fill="rgb(240,137,40)"/><text x="552.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="549" y="1124" width="5" height="15" fill="rgb(245,226,2)"/><text x="552.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="549" y="1140" width="5" height="15" fill="rgb(224,57,6)"/><text x="552.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.37%)</title><rect x="549" y="1156" width="5" height="15" fill="rgb(233,205,16)"/><text x="552.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="549" y="1172" width="5" height="15" fill="rgb(236,72,5)"/><text x="552.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="549" y="1188" width="5" height="15" fill="rgb(248,51,42)"/><text x="552.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="549" y="1204" width="5" height="15" fill="rgb(205,152,48)"/><text x="552.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="549" y="1220" width="5" height="15" fill="rgb(209,63,5)"/><text x="552.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="549" y="1236" width="5" height="15" fill="rgb(251,75,22)"/><text x="552.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="549" y="1252" width="5" height="15" fill="rgb(254,211,7)"/><text x="552.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.74%)</title><rect x="549" y="532" width="9" height="15" fill="rgb(226,38,44)"/><text x="552.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="549" y="548" width="9" height="15" fill="rgb(244,114,6)"/><text x="552.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="549" y="564" width="9" height="15" fill="rgb(207,210,19)"/><text x="552.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="549" y="580" width="9" height="15" fill="rgb(227,53,47)"/><text x="552.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="549" y="596" width="9" height="15" fill="rgb(221,108,27)"/><text x="552.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="549" y="612" width="9" height="15" fill="rgb(212,181,22)"/><text x="552.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.74%)</title><rect x="549" y="628" width="9" height="15" fill="rgb(232,61,54)"/><text x="552.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="549" y="644" width="9" height="15" fill="rgb(235,65,50)"/><text x="552.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="549" y="660" width="9" height="15" fill="rgb(237,176,32)"/><text x="552.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="549" y="676" width="9" height="15" fill="rgb(230,205,14)"/><text x="552.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="549" y="692" width="9" height="15" fill="rgb(226,60,1)"/><text x="552.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="549" y="708" width="9" height="15" fill="rgb(224,19,44)"/><text x="552.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.74%)</title><rect x="549" y="724" width="9" height="15" fill="rgb(210,52,32)"/><text x="552.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="549" y="740" width="9" height="15" fill="rgb(245,210,45)"/><text x="552.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.74%)</title><rect x="549" y="756" width="9" height="15" fill="rgb(236,229,33)"/><text x="552.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="549" y="772" width="9" height="15" fill="rgb(249,39,9)"/><text x="552.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="549" y="788" width="9" height="15" fill="rgb(212,10,45)"/><text x="552.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="549" y="804" width="9" height="15" fill="rgb(247,5,8)"/><text x="552.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="549" y="820" width="9" height="15" fill="rgb(225,14,14)"/><text x="552.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="549" y="836" width="9" height="15" fill="rgb(252,47,28)"/><text x="552.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="549" y="852" width="9" height="15" fill="rgb(241,134,26)"/><text x="552.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.74%)</title><rect x="549" y="868" width="9" height="15" fill="rgb(241,194,25)"/><text x="552.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="549" y="884" width="9" height="15" fill="rgb(253,179,52)"/><text x="552.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="549" y="900" width="9" height="15" fill="rgb(213,55,25)"/><text x="552.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="549" y="916" width="9" height="15" fill="rgb(221,95,43)"/><text x="552.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="549" y="932" width="9" height="15" fill="rgb(215,181,34)"/><text x="552.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="549" y="948" width="9" height="15" fill="rgb(242,186,53)"/><text x="552.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.37%)</title><rect x="554" y="964" width="4" height="15" fill="rgb(206,209,13)"/><text x="557.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="554" y="980" width="4" height="15" fill="rgb(236,55,37)"/><text x="557.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="554" y="996" width="4" height="15" fill="rgb(218,51,48)"/><text x="557.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="554" y="1012" width="4" height="15" fill="rgb(222,115,37)"/><text x="557.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="554" y="1028" width="4" height="15" fill="rgb(213,67,45)"/><text x="557.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="554" y="1044" width="4" height="15" fill="rgb(253,55,52)"/><text x="557.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="554" y="1060" width="4" height="15" fill="rgb(252,100,54)"/><text x="557.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="554" y="1076" width="4" height="15" fill="rgb(218,95,3)"/><text x="557.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.37%)</title><rect x="554" y="1092" width="4" height="15" fill="rgb(254,49,8)"/><text x="557.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="554" y="1108" width="4" height="15" fill="rgb(218,106,51)"/><text x="557.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="554" y="1124" width="4" height="15" fill="rgb(210,217,52)"/><text x="557.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="554" y="1140" width="4" height="15" fill="rgb(238,11,14)"/><text x="557.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="554" y="1156" width="4" height="15" fill="rgb(233,45,11)"/><text x="557.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="554" y="1172" width="4" height="15" fill="rgb(223,227,20)"/><text x="557.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="554" y="1188" width="4" height="15" fill="rgb(240,225,2)"/><text x="557.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="554" y="1204" width="4" height="15" fill="rgb(215,101,9)"/><text x="557.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.37%)</title><rect x="554" y="1220" width="4" height="15" fill="rgb(251,94,3)"/><text x="557.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="554" y="1236" width="4" height="15" fill="rgb(247,176,49)"/><text x="557.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="554" y="1252" width="4" height="15" fill="rgb(212,154,6)"/><text x="557.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="554" y="1268" width="4" height="15" fill="rgb(249,190,54)"/><text x="557.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="554" y="1284" width="4" height="15" fill="rgb(252,179,37)"/><text x="557.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="554" y="1300" width="4" height="15" fill="rgb(242,164,43)"/><text x="557.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.37%)</title><rect x="554" y="1316" width="4" height="15" fill="rgb(223,118,19)"/><text x="557.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.37%)</title><rect x="554" y="1332" width="4" height="15" fill="rgb(213,0,16)"/><text x="557.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.37%)</title><rect x="554" y="1348" width="4" height="15" fill="rgb(216,178,17)"/><text x="557.00" y="1358.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (8 samples, 2.95%)</title><rect x="528" y="148" width="34" height="15" fill="rgb(209,208,31)"/><text x="531.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.95%)</title><rect x="528" y="164" width="34" height="15" fill="rgb(230,62,15)"/><text x="531.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.95%)</title><rect x="528" y="180" width="34" height="15" fill="rgb(220,219,50)"/><text x="531.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.95%)</title><rect x="528" y="196" width="34" height="15" fill="rgb(233,98,18)"/><text x="531.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.95%)</title><rect x="528" y="212" width="34" height="15" fill="rgb(250,70,14)"/><text x="531.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.95%)</title><rect x="528" y="228" width="34" height="15" fill="rgb(206,41,36)"/><text x="531.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.95%)</title><rect x="528" y="244" width="34" height="15" fill="rgb(235,211,43)"/><text x="531.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.95%)</title><rect x="528" y="260" width="34" height="15" fill="rgb(212,115,31)"/><text x="531.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.95%)</title><rect x="528" y="276" width="34" height="15" fill="rgb(220,76,40)"/><text x="531.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.85%)</title><rect x="541" y="292" width="21" height="15" fill="rgb(244,190,3)"/><text x="544.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="541" y="308" width="21" height="15" fill="rgb(245,83,53)"/><text x="544.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.85%)</title><rect x="541" y="324" width="21" height="15" fill="rgb(238,136,29)"/><text x="544.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="541" y="340" width="21" height="15" fill="rgb(205,111,49)"/><text x="544.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="541" y="356" width="21" height="15" fill="rgb(210,35,13)"/><text x="544.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.85%)</title><rect x="541" y="372" width="21" height="15" fill="rgb(234,113,43)"/><text x="544.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.85%)</title><rect x="541" y="388" width="21" height="15" fill="rgb(231,174,10)"/><text x="544.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.85%)</title><rect x="541" y="404" width="21" height="15" fill="rgb(251,19,4)"/><text x="544.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="541" y="420" width="21" height="15" fill="rgb(223,228,12)"/><text x="544.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.85%)</title><rect x="541" y="436" width="21" height="15" fill="rgb(228,73,5)"/><text x="544.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="541" y="452" width="21" height="15" fill="rgb(211,225,22)"/><text x="544.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.85%)</title><rect x="541" y="468" width="21" height="15" fill="rgb(208,10,10)"/><text x="544.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.85%)</title><rect x="541" y="484" width="21" height="15" fill="rgb(222,119,36)"/><text x="544.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.85%)</title><rect x="541" y="500" width="21" height="15" fill="rgb(211,72,2)"/><text x="544.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="541" y="516" width="21" height="15" fill="rgb(208,66,41)"/><text x="544.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.37%)</title><rect x="558" y="532" width="4" height="15" fill="rgb(229,2,34)"/><text x="561.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="558" y="548" width="4" height="15" fill="rgb(205,84,28)"/><text x="561.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="558" y="564" width="4" height="15" fill="rgb(214,90,20)"/><text x="561.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="558" y="580" width="4" height="15" fill="rgb(232,21,45)"/><text x="561.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="558" y="596" width="4" height="15" fill="rgb(243,46,26)"/><text x="561.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="558" y="612" width="4" height="15" fill="rgb(220,73,26)"/><text x="561.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="558" y="628" width="4" height="15" fill="rgb(214,108,49)"/><text x="561.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="558" y="644" width="4" height="15" fill="rgb(253,210,25)"/><text x="561.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="558" y="660" width="4" height="15" fill="rgb(208,126,19)"/><text x="561.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:5) (1 samples, 0.37%)</title><rect x="558" y="676" width="4" height="15" fill="rgb(253,131,43)"/><text x="561.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="558" y="692" width="4" height="15" fill="rgb(240,13,30)"/><text x="561.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="558" y="708" width="4" height="15" fill="rgb(220,39,7)"/><text x="561.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="558" y="724" width="4" height="15" fill="rgb(227,143,41)"/><text x="561.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="558" y="740" width="4" height="15" fill="rgb(217,225,25)"/><text x="561.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="558" y="756" width="4" height="15" fill="rgb(240,24,36)"/><text x="561.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_helper.py:6) (1 samples, 0.37%)</title><rect x="558" y="772" width="4" height="15" fill="rgb(207,221,14)"/><text x="561.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="558" y="788" width="4" height="15" fill="rgb(216,213,33)"/><text x="561.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="558" y="804" width="4" height="15" fill="rgb(233,122,8)"/><text x="561.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="558" y="820" width="4" height="15" fill="rgb(251,211,32)"/><text x="561.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="558" y="836" width="4" height="15" fill="rgb(236,19,54)"/><text x="561.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="558" y="852" width="4" height="15" fill="rgb(212,111,27)"/><text x="561.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_optimisation.py:6) (1 samples, 0.37%)</title><rect x="558" y="868" width="4" height="15" fill="rgb(251,58,37)"/><text x="561.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="558" y="884" width="4" height="15" fill="rgb(212,10,36)"/><text x="561.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="558" y="900" width="4" height="15" fill="rgb(221,7,49)"/><text x="561.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="558" y="916" width="4" height="15" fill="rgb(254,226,40)"/><text x="561.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="558" y="932" width="4" height="15" fill="rgb(219,108,27)"/><text x="561.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="558" y="948" width="4" height="15" fill="rgb(234,169,48)"/><text x="561.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="558" y="964" width="4" height="15" fill="rgb(215,203,8)"/><text x="561.00" y="974.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:10) (1 samples, 0.37%)</title><rect x="562" y="484" width="5" height="15" fill="rgb(224,58,54)"/><text x="565.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="562" y="500" width="5" height="15" fill="rgb(232,172,35)"/><text x="565.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="562" y="516" width="5" height="15" fill="rgb(254,225,22)"/><text x="565.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="562" y="532" width="5" height="15" fill="rgb(235,74,18)"/><text x="565.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="562" y="548" width="5" height="15" fill="rgb(211,5,37)"/><text x="565.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="562" y="564" width="5" height="15" fill="rgb(223,173,20)"/><text x="565.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/py3to2.py:11) (1 samples, 0.37%)</title><rect x="562" y="580" width="5" height="15" fill="rgb(223,159,3)"/><text x="565.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="562" y="596" width="5" height="15" fill="rgb(214,92,51)"/><text x="565.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="562" y="612" width="5" height="15" fill="rgb(235,141,43)"/><text x="565.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="562" y="628" width="5" height="15" fill="rgb(205,51,2)"/><text x="565.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="562" y="644" width="5" height="15" fill="rgb(249,211,29)"/><text x="565.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.37%)</title><rect x="562" y="660" width="5" height="15" fill="rgb(211,87,9)"/><text x="565.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.37%)</title><rect x="562" y="676" width="5" height="15" fill="rgb(241,209,44)"/><text x="565.00" y="686.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:4) (17 samples, 6.27%)</title><rect x="497" y="52" width="74" height="15" fill="rgb(215,120,13)"/><text x="500.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 6.27%)</title><rect x="497" y="68" width="74" height="15" fill="rgb(237,145,7)"/><text x="500.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 6.27%)</title><rect x="497" y="84" width="74" height="15" fill="rgb(210,78,24)"/><text x="500.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 6.27%)</title><rect x="497" y="100" width="74" height="15" fill="rgb(243,199,33)"/><text x="500.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 6.27%)</title><rect x="497" y="116" width="74" height="15" fill="rgb(235,198,23)"/><text x="500.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 6.27%)</title><rect x="497" y="132" width="74" height="15" fill="rgb(229,66,20)"/><text x="500.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (2 samples, 0.74%)</title><rect x="562" y="148" width="9" height="15" fill="rgb(245,156,33)"/><text x="565.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="562" y="164" width="9" height="15" fill="rgb(214,11,7)"/><text x="565.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="562" y="180" width="9" height="15" fill="rgb(234,220,26)"/><text x="565.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="562" y="196" width="9" height="15" fill="rgb(240,79,52)"/><text x="565.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="562" y="212" width="9" height="15" fill="rgb(205,161,20)"/><text x="565.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="562" y="228" width="9" height="15" fill="rgb(235,74,29)"/><text x="565.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.74%)</title><rect x="562" y="244" width="9" height="15" fill="rgb(227,180,28)"/><text x="565.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="562" y="260" width="9" height="15" fill="rgb(207,152,50)"/><text x="565.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="562" y="276" width="9" height="15" fill="rgb(245,126,26)"/><text x="565.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="562" y="292" width="9" height="15" fill="rgb(208,104,8)"/><text x="565.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="562" y="308" width="9" height="15" fill="rgb(205,146,50)"/><text x="565.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="562" y="324" width="9" height="15" fill="rgb(211,21,28)"/><text x="565.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.74%)</title><rect x="562" y="340" width="9" height="15" fill="rgb(238,85,28)"/><text x="565.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="562" y="356" width="9" height="15" fill="rgb(210,222,42)"/><text x="565.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.74%)</title><rect x="562" y="372" width="9" height="15" fill="rgb(228,167,7)"/><text x="565.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="562" y="388" width="9" height="15" fill="rgb(233,99,12)"/><text x="565.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="562" y="404" width="9" height="15" fill="rgb(241,228,32)"/><text x="565.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="562" y="420" width="9" height="15" fill="rgb(228,62,1)"/><text x="565.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="562" y="436" width="9" height="15" fill="rgb(226,109,5)"/><text x="565.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="562" y="452" width="9" height="15" fill="rgb(211,211,47)"/><text x="565.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="562" y="468" width="9" height="15" fill="rgb(252,195,8)"/><text x="565.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.37%)</title><rect x="567" y="484" width="4" height="15" fill="rgb(225,187,40)"/><text x="570.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="500" width="4" height="15" fill="rgb(221,179,53)"/><text x="570.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="516" width="4" height="15" fill="rgb(207,221,15)"/><text x="570.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="532" width="4" height="15" fill="rgb(217,99,20)"/><text x="570.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="548" width="4" height="15" fill="rgb(246,56,31)"/><text x="570.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="564" width="4" height="15" fill="rgb(242,79,53)"/><text x="570.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.37%)</title><rect x="567" y="580" width="4" height="15" fill="rgb(214,138,31)"/><text x="570.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="596" width="4" height="15" fill="rgb(235,99,27)"/><text x="570.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="567" y="612" width="4" height="15" fill="rgb(237,219,10)"/><text x="570.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="628" width="4" height="15" fill="rgb(209,62,47)"/><text x="570.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="644" width="4" height="15" fill="rgb(214,111,22)"/><text x="570.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="660" width="4" height="15" fill="rgb(231,42,15)"/><text x="570.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="676" width="4" height="15" fill="rgb(238,111,32)"/><text x="570.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="692" width="4" height="15" fill="rgb(212,173,33)"/><text x="570.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="708" width="4" height="15" fill="rgb(250,2,43)"/><text x="570.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.37%)</title><rect x="567" y="724" width="4" height="15" fill="rgb(251,142,51)"/><text x="570.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="740" width="4" height="15" fill="rgb(206,101,49)"/><text x="570.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="756" width="4" height="15" fill="rgb(219,77,44)"/><text x="570.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="772" width="4" height="15" fill="rgb(228,205,10)"/><text x="570.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="788" width="4" height="15" fill="rgb(252,49,8)"/><text x="570.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="804" width="4" height="15" fill="rgb(250,218,49)"/><text x="570.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.37%)</title><rect x="567" y="820" width="4" height="15" fill="rgb(211,48,47)"/><text x="570.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="836" width="4" height="15" fill="rgb(210,160,34)"/><text x="570.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="852" width="4" height="15" fill="rgb(232,185,1)"/><text x="570.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="868" width="4" height="15" fill="rgb(239,78,19)"/><text x="570.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="884" width="4" height="15" fill="rgb(231,108,17)"/><text x="570.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="900" width="4" height="15" fill="rgb(221,89,46)"/><text x="570.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.37%)</title><rect x="567" y="916" width="4" height="15" fill="rgb(244,69,50)"/><text x="570.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="932" width="4" height="15" fill="rgb(231,39,18)"/><text x="570.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="567" y="948" width="4" height="15" fill="rgb(245,176,4)"/><text x="570.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="964" width="4" height="15" fill="rgb(254,139,32)"/><text x="570.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="980" width="4" height="15" fill="rgb(212,167,2)"/><text x="570.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="996" width="4" height="15" fill="rgb(209,117,21)"/><text x="570.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="1012" width="4" height="15" fill="rgb(241,174,49)"/><text x="570.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="1028" width="4" height="15" fill="rgb(224,122,18)"/><text x="570.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="1044" width="4" height="15" fill="rgb(217,19,6)"/><text x="570.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.37%)</title><rect x="567" y="1060" width="4" height="15" fill="rgb(244,98,27)"/><text x="570.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="1076" width="4" height="15" fill="rgb(206,21,31)"/><text x="570.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="1092" width="4" height="15" fill="rgb(239,51,23)"/><text x="570.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="1108" width="4" height="15" fill="rgb(227,35,2)"/><text x="570.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="1124" width="4" height="15" fill="rgb(213,45,47)"/><text x="570.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="1140" width="4" height="15" fill="rgb(250,19,8)"/><text x="570.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.37%)</title><rect x="567" y="1156" width="4" height="15" fill="rgb(236,223,0)"/><text x="570.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="567" y="1172" width="4" height="15" fill="rgb(210,188,50)"/><text x="570.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="1188" width="4" height="15" fill="rgb(246,186,8)"/><text x="570.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="567" y="1204" width="4" height="15" fill="rgb(233,217,9)"/><text x="570.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="567" y="1220" width="4" height="15" fill="rgb(241,11,47)"/><text x="570.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="567" y="1236" width="4" height="15" fill="rgb(243,53,12)"/><text x="570.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="567" y="1252" width="4" height="15" fill="rgb(235,21,50)"/><text x="570.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="567" y="1268" width="4" height="15" fill="rgb(250,132,38)"/><text x="570.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:201) (1 samples, 0.37%)</title><rect x="567" y="1284" width="4" height="15" fill="rgb(251,162,21)"/><text x="570.00" y="1294.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.37%)</title><rect x="567" y="1300" width="4" height="15" fill="rgb(254,174,23)"/><text x="570.00" y="1310.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="567" y="1316" width="4" height="15" fill="rgb(227,116,7)"/><text x="570.00" y="1326.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.37%)</title><rect x="567" y="1332" width="4" height="15" fill="rgb(213,59,18)"/><text x="570.00" y="1342.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.37%)</title><rect x="567" y="1348" width="4" height="15" fill="rgb(209,75,38)"/><text x="570.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="567" y="1364" width="4" height="15" fill="rgb(244,148,4)"/><text x="570.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.37%)</title><rect x="567" y="1380" width="4" height="15" fill="rgb(207,52,21)"/><text x="570.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="567" y="1396" width="4" height="15" fill="rgb(224,221,19)"/><text x="570.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py:655) (1 samples, 0.37%)</title><rect x="567" y="1412" width="4" height="15" fill="rgb(227,26,33)"/><text x="570.00" y="1422.50"></text></g><g><title>0x7fde44bea151 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="567" y="1428" width="4" height="15" fill="rgb(242,155,33)"/><text x="570.00" y="1438.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:28) (1 samples, 0.37%)</title><rect x="571" y="84" width="5" height="15" fill="rgb(218,145,30)"/><text x="574.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="571" y="100" width="5" height="15" fill="rgb(207,74,14)"/><text x="574.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.37%)</title><rect x="571" y="116" width="5" height="15" fill="rgb(209,212,11)"/><text x="574.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.37%)</title><rect x="571" y="132" width="5" height="15" fill="rgb(212,18,30)"/><text x="574.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.37%)</title><rect x="571" y="148" width="5" height="15" fill="rgb(205,23,28)"/><text x="574.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.37%)</title><rect x="571" y="164" width="5" height="15" fill="rgb(224,229,8)"/><text x="574.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.37%)</title><rect x="571" y="180" width="5" height="15" fill="rgb(226,123,27)"/><text x="574.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.37%)</title><rect x="571" y="196" width="5" height="15" fill="rgb(227,17,43)"/><text x="574.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="571" y="212" width="5" height="15" fill="rgb(239,59,30)"/><text x="574.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="571" y="228" width="5" height="15" fill="rgb(247,223,34)"/><text x="574.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="571" y="244" width="5" height="15" fill="rgb(206,169,41)"/><text x="574.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="571" y="260" width="5" height="15" fill="rgb(226,122,4)"/><text x="574.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="571" y="276" width="5" height="15" fill="rgb(250,196,17)"/><text x="574.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.37%)</title><rect x="571" y="292" width="5" height="15" fill="rgb(254,6,34)"/><text x="574.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="571" y="308" width="5" height="15" fill="rgb(254,216,52)"/><text x="574.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="571" y="324" width="5" height="15" fill="rgb(246,166,9)"/><text x="574.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="571" y="340" width="5" height="15" fill="rgb(243,10,19)"/><text x="574.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="571" y="356" width="5" height="15" fill="rgb(241,120,6)"/><text x="574.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="571" y="372" width="5" height="15" fill="rgb(228,92,19)"/><text x="574.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:11) (1 samples, 0.37%)</title><rect x="571" y="388" width="5" height="15" fill="rgb(219,170,21)"/><text x="574.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="571" y="404" width="5" height="15" fill="rgb(205,149,24)"/><text x="574.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="571" y="420" width="5" height="15" fill="rgb(239,4,49)"/><text x="574.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="571" y="436" width="5" height="15" fill="rgb(239,22,33)"/><text x="574.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="571" y="452" width="5" height="15" fill="rgb(209,96,36)"/><text x="574.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="571" y="468" width="5" height="15" fill="rgb(213,93,43)"/><text x="574.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_argmax.py:80) (1 samples, 0.37%)</title><rect x="571" y="484" width="5" height="15" fill="rgb(249,42,6)"/><text x="574.00" y="494.50"></text></g><g><title>onnx_opset_version (onnx/defs/__init__.py:23) (1 samples, 0.37%)</title><rect x="571" y="500" width="5" height="15" fill="rgb(248,30,52)"/><text x="574.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="516" width="5" height="15" fill="rgb(247,179,53)"/><text x="574.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#5}, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;int, int&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt; &gt;, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#5}&amp;&amp;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;int, int&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt; &gt; (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="532" width="5" height="15" fill="rgb(241,174,29)"/><text x="574.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="548" width="5" height="15" fill="rgb(209,134,1)"/><text x="574.00" y="558.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;_typeobject* const, std::vector&lt;pybind11::detail::type_info*, std::allocator&lt;pybind11::detail::type_info*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.776] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="564" width="5" height="15" fill="rgb(216,31,38)"/><text x="574.00" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="571" y="580" width="5" height="15" fill="rgb(218,17,43)"/><text x="574.00" y="590.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.37%)</title><rect x="576" y="180" width="4" height="15" fill="rgb(237,20,49)"/><text x="579.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:18) (2 samples, 0.74%)</title><rect x="576" y="100" width="8" height="15" fill="rgb(247,45,28)"/><text x="579.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.74%)</title><rect x="576" y="116" width="8" height="15" fill="rgb(246,100,5)"/><text x="579.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.74%)</title><rect x="576" y="132" width="8" height="15" fill="rgb(230,66,26)"/><text x="579.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.74%)</title><rect x="576" y="148" width="8" height="15" fill="rgb(232,60,42)"/><text x="579.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.74%)</title><rect x="576" y="164" width="8" height="15" fill="rgb(208,77,34)"/><text x="579.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.37%)</title><rect x="580" y="180" width="4" height="15" fill="rgb(224,43,22)"/><text x="583.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.37%)</title><rect x="580" y="196" width="4" height="15" fill="rgb(244,201,11)"/><text x="583.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.37%)</title><rect x="580" y="212" width="4" height="15" fill="rgb(243,63,33)"/><text x="583.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.37%)</title><rect x="580" y="228" width="4" height="15" fill="rgb(248,79,9)"/><text x="583.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.37%)</title><rect x="580" y="244" width="4" height="15" fill="rgb(210,209,27)"/><text x="583.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.37%)</title><rect x="580" y="260" width="4" height="15" fill="rgb(243,40,52)"/><text x="583.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.37%)</title><rect x="584" y="148" width="5" height="15" fill="rgb(235,218,15)"/><text x="587.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.74%)</title><rect x="593" y="180" width="9" height="15" fill="rgb(206,78,14)"/><text x="596.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.37%)</title><rect x="610" y="260" width="5" height="15" fill="rgb(251,7,25)"/><text x="613.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.37%)</title><rect x="610" y="276" width="5" height="15" fill="rgb(245,69,6)"/><text x="613.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.37%)</title><rect x="610" y="292" width="5" height="15" fill="rgb(239,82,50)"/><text x="613.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.37%)</title><rect x="610" y="308" width="5" height="15" fill="rgb(211,80,26)"/><text x="613.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.37%)</title><rect x="615" y="260" width="4" height="15" fill="rgb(246,88,13)"/><text x="618.00" y="270.50"></text></g><g><title>0x7fde43d2f780 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="619" y="292" width="4" height="15" fill="rgb(213,152,54)"/><text x="622.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.37%)</title><rect x="628" y="356" width="4" height="15" fill="rgb(226,148,27)"/><text x="631.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.37%)</title><rect x="628" y="372" width="4" height="15" fill="rgb(215,38,38)"/><text x="631.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="628" y="388" width="4" height="15" fill="rgb(242,102,54)"/><text x="631.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:54) (1 samples, 0.37%)</title><rect x="628" y="404" width="4" height="15" fill="rgb(227,132,39)"/><text x="631.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.37%)</title><rect x="632" y="372" width="5" height="15" fill="rgb(205,166,40)"/><text x="635.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.74%)</title><rect x="632" y="356" width="9" height="15" fill="rgb(228,151,36)"/><text x="635.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.37%)</title><rect x="637" y="372" width="4" height="15" fill="rgb(254,103,39)"/><text x="640.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1688) (1 samples, 0.37%)</title><rect x="637" y="388" width="4" height="15" fill="rgb(243,98,16)"/><text x="640.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.37%)</title><rect x="641" y="356" width="4" height="15" fill="rgb(247,5,16)"/><text x="644.00" y="366.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.37%)</title><rect x="641" y="372" width="4" height="15" fill="rgb(243,187,1)"/><text x="644.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.37%)</title><rect x="645" y="372" width="5" height="15" fill="rgb(219,82,7)"/><text x="648.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.37%)</title><rect x="650" y="372" width="4" height="15" fill="rgb(235,127,14)"/><text x="653.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.37%)</title><rect x="654" y="372" width="4" height="15" fill="rgb(234,123,38)"/><text x="657.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.37%)</title><rect x="658" y="372" width="5" height="15" fill="rgb(217,158,23)"/><text x="661.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.37%)</title><rect x="667" y="404" width="4" height="15" fill="rgb(214,150,43)"/><text x="670.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.37%)</title><rect x="671" y="404" width="5" height="15" fill="rgb(220,63,15)"/><text x="674.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 1.48%)</title><rect x="663" y="388" width="17" height="15" fill="rgb(218,119,35)"/><text x="666.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.37%)</title><rect x="676" y="404" width="4" height="15" fill="rgb(220,70,41)"/><text x="679.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.37%)</title><rect x="680" y="388" width="4" height="15" fill="rgb(242,211,26)"/><text x="683.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 5.90%)</title><rect x="619" y="260" width="70" height="15" fill="rgb(247,29,19)"/><text x="622.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 5.90%)</title><rect x="619" y="276" width="70" height="15" fill="rgb(227,43,7)"/><text x="622.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 5.54%)</title><rect x="623" y="292" width="66" height="15" fill="rgb(237,48,46)"/><text x="626.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 5.17%)</title><rect x="628" y="308" width="61" height="15" fill="rgb(224,161,36)"/><text x="631.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 5.17%)</title><rect x="628" y="324" width="61" height="15" fill="rgb(232,157,25)"/><text x="631.00" y="334.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 5.17%)</title><rect x="628" y="340" width="61" height="15" fill="rgb(206,83,17)"/><text x="631.00" y="350.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 3.69%)</title><rect x="645" y="356" width="44" height="15" fill="rgb(247,161,22)"/><text x="648.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 2.21%)</title><rect x="663" y="372" width="26" height="15" fill="rgb(223,134,38)"/><text x="666.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.37%)</title><rect x="684" y="388" width="5" height="15" fill="rgb(219,59,0)"/><text x="687.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.37%)</title><rect x="689" y="292" width="4" height="15" fill="rgb(238,117,24)"/><text x="692.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.37%)</title><rect x="689" y="308" width="4" height="15" fill="rgb(235,196,53)"/><text x="692.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.37%)</title><rect x="689" y="324" width="4" height="15" fill="rgb(229,47,37)"/><text x="692.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:194) (1 samples, 0.37%)</title><rect x="689" y="340" width="4" height="15" fill="rgb(229,94,35)"/><text x="692.00" y="350.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (21 samples, 7.75%)</title><rect x="606" y="244" width="91" height="15" fill="rgb(241,176,43)"/><text x="609.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.74%)</title><rect x="689" y="260" width="8" height="15" fill="rgb(246,226,9)"/><text x="692.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.74%)</title><rect x="689" y="276" width="8" height="15" fill="rgb(245,130,5)"/><text x="692.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.37%)</title><rect x="693" y="292" width="4" height="15" fill="rgb(210,95,22)"/><text x="696.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.37%)</title><rect x="697" y="260" width="5" height="15" fill="rgb(250,210,33)"/><text x="700.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.37%)</title><rect x="697" y="276" width="5" height="15" fill="rgb(222,76,41)"/><text x="700.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.37%)</title><rect x="702" y="308" width="4" height="15" fill="rgb(205,12,4)"/><text x="705.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="702" y="324" width="4" height="15" fill="rgb(254,33,14)"/><text x="705.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="702" y="340" width="4" height="15" fill="rgb(216,95,29)"/><text x="705.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.37%)</title><rect x="702" y="356" width="4" height="15" fill="rgb(251,218,35)"/><text x="705.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.37%)</title><rect x="706" y="356" width="5" height="15" fill="rgb(209,205,40)"/><text x="709.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.37%)</title><rect x="711" y="356" width="4" height="15" fill="rgb(239,40,37)"/><text x="714.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (27 samples, 9.96%)</title><rect x="602" y="196" width="117" height="15" fill="rgb(211,208,14)"/><text x="605.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 9.96%)</title><rect x="602" y="212" width="117" height="15" fill="rgb(246,99,23)"/><text x="605.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (27 samples, 9.96%)</title><rect x="602" y="228" width="117" height="15" fill="rgb(248,110,21)"/><text x="605.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (5 samples, 1.85%)</title><rect x="697" y="244" width="22" height="15" fill="rgb(235,148,36)"/><text x="700.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.48%)</title><rect x="702" y="260" width="17" height="15" fill="rgb(208,229,54)"/><text x="705.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.48%)</title><rect x="702" y="276" width="17" height="15" fill="rgb(247,210,24)"/><text x="705.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.48%)</title><rect x="702" y="292" width="17" height="15" fill="rgb(229,113,42)"/><text x="705.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 1.11%)</title><rect x="706" y="308" width="13" height="15" fill="rgb(248,131,13)"/><text x="709.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 1.11%)</title><rect x="706" y="324" width="13" height="15" fill="rgb(250,102,27)"/><text x="709.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 1.11%)</title><rect x="706" y="340" width="13" height="15" fill="rgb(218,99,29)"/><text x="709.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.37%)</title><rect x="715" y="356" width="4" height="15" fill="rgb(241,2,6)"/><text x="718.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.37%)</title><rect x="715" y="372" width="4" height="15" fill="rgb(253,119,51)"/><text x="718.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.37%)</title><rect x="719" y="244" width="5" height="15" fill="rgb(234,166,10)"/><text x="722.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.37%)</title><rect x="728" y="308" width="4" height="15" fill="rgb(226,100,34)"/><text x="731.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.37%)</title><rect x="728" y="324" width="4" height="15" fill="rgb(222,79,1)"/><text x="731.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.37%)</title><rect x="728" y="340" width="4" height="15" fill="rgb(251,29,5)"/><text x="731.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.37%)</title><rect x="728" y="356" width="4" height="15" fill="rgb(230,146,37)"/><text x="731.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.37%)</title><rect x="732" y="324" width="5" height="15" fill="rgb(245,133,47)"/><text x="735.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.37%)</title><rect x="732" y="340" width="5" height="15" fill="rgb(251,99,7)"/><text x="735.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.37%)</title><rect x="732" y="356" width="5" height="15" fill="rgb(254,214,50)"/><text x="735.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.37%)</title><rect x="732" y="372" width="5" height="15" fill="rgb(236,224,45)"/><text x="735.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.37%)</title><rect x="732" y="388" width="5" height="15" fill="rgb(211,166,17)"/><text x="735.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.37%)</title><rect x="732" y="404" width="5" height="15" fill="rgb(219,208,48)"/><text x="735.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="737" y="372" width="4" height="15" fill="rgb(222,149,49)"/><text x="740.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.85%)</title><rect x="728" y="276" width="22" height="15" fill="rgb(236,158,45)"/><text x="731.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.85%)</title><rect x="728" y="292" width="22" height="15" fill="rgb(240,160,15)"/><text x="731.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 1.48%)</title><rect x="732" y="308" width="18" height="15" fill="rgb(244,29,4)"/><text x="735.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 1.11%)</title><rect x="737" y="324" width="13" height="15" fill="rgb(236,98,35)"/><text x="740.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 1.11%)</title><rect x="737" y="340" width="13" height="15" fill="rgb(212,163,18)"/><text x="740.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.11%)</title><rect x="737" y="356" width="13" height="15" fill="rgb(249,73,14)"/><text x="740.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.74%)</title><rect x="741" y="372" width="9" height="15" fill="rgb(236,4,1)"/><text x="744.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.74%)</title><rect x="741" y="388" width="9" height="15" fill="rgb(219,126,27)"/><text x="744.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.37%)</title><rect x="750" y="276" width="4" height="15" fill="rgb(213,181,9)"/><text x="753.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (14 samples, 5.17%)</title><rect x="719" y="228" width="61" height="15" fill="rgb(214,145,48)"/><text x="722.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (13 samples, 4.80%)</title><rect x="724" y="244" width="56" height="15" fill="rgb(222,225,19)"/><text x="727.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (13 samples, 4.80%)</title><rect x="724" y="260" width="56" height="15" fill="rgb(205,55,8)"/><text x="727.00" y="270.50">dot (..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 2.21%)</title><rect x="754" y="276" width="26" height="15" fill="rgb(242,30,32)"/><text x="757.00" y="286.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="785" y="244" width="4" height="15" fill="rgb(227,190,54)"/><text x="788.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.37%)</title><rect x="785" y="260" width="4" height="15" fill="rgb(212,122,0)"/><text x="788.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="789" y="308" width="4" height="15" fill="rgb(250,179,37)"/><text x="792.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.37%)</title><rect x="789" y="324" width="4" height="15" fill="rgb(245,89,20)"/><text x="792.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.74%)</title><rect x="789" y="292" width="9" height="15" fill="rgb(210,206,38)"/><text x="792.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.37%)</title><rect x="793" y="308" width="5" height="15" fill="rgb(236,38,11)"/><text x="796.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3165) (1 samples, 0.37%)</title><rect x="793" y="324" width="5" height="15" fill="rgb(211,179,12)"/><text x="796.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.37%)</title><rect x="798" y="340" width="4" height="15" fill="rgb(252,139,4)"/><text x="801.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 2.21%)</title><rect x="780" y="228" width="26" height="15" fill="rgb(224,76,19)"/><text x="783.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.48%)</title><rect x="789" y="244" width="17" height="15" fill="rgb(231,153,9)"/><text x="792.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.48%)</title><rect x="789" y="260" width="17" height="15" fill="rgb(231,101,5)"/><text x="792.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.48%)</title><rect x="789" y="276" width="17" height="15" fill="rgb(239,74,11)"/><text x="792.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.74%)</title><rect x="798" y="292" width="8" height="15" fill="rgb(222,132,1)"/><text x="801.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.74%)</title><rect x="798" y="308" width="8" height="15" fill="rgb(245,123,49)"/><text x="801.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.74%)</title><rect x="798" y="324" width="8" height="15" fill="rgb(205,69,12)"/><text x="801.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.37%)</title><rect x="802" y="340" width="4" height="15" fill="rgb(247,181,4)"/><text x="805.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:329) (1 samples, 0.37%)</title><rect x="802" y="356" width="4" height="15" fill="rgb(228,180,19)"/><text x="805.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.37%)</title><rect x="806" y="228" width="5" height="15" fill="rgb(250,153,46)"/><text x="809.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="811" y="244" width="4" height="15" fill="rgb(216,35,34)"/><text x="814.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="811" y="260" width="4" height="15" fill="rgb(248,121,8)"/><text x="814.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.37%)</title><rect x="811" y="276" width="4" height="15" fill="rgb(208,160,10)"/><text x="814.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.37%)</title><rect x="811" y="292" width="4" height="15" fill="rgb(236,65,28)"/><text x="814.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="811" y="308" width="4" height="15" fill="rgb(228,169,46)"/><text x="814.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.37%)</title><rect x="815" y="276" width="4" height="15" fill="rgb(215,112,26)"/><text x="818.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.37%)</title><rect x="815" y="292" width="4" height="15" fill="rgb(209,0,48)"/><text x="818.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.37%)</title><rect x="815" y="308" width="4" height="15" fill="rgb(229,177,5)"/><text x="818.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c:735) (1 samples, 0.37%)</title><rect x="815" y="324" width="4" height="15" fill="rgb(250,100,31)"/><text x="818.00" y="334.50"></text></g><g><title>0x7fde26f1133a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="819" y="308" width="5" height="15" fill="rgb(248,209,32)"/><text x="822.00" y="318.50"></text></g><g><title>0x7fde2703cc70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="828" y="340" width="4" height="15" fill="rgb(216,202,47)"/><text x="831.00" y="350.50"></text></g><g><title>0x7fde44c581a0 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="837" y="356" width="4" height="15" fill="rgb(227,211,1)"/><text x="840.00" y="366.50"></text></g><g><title>0x7fde44c8be0e (libm-2.29.so) (1 samples, 0.37%)</title><rect x="841" y="356" width="5" height="15" fill="rgb(226,2,2)"/><text x="844.00" y="366.50"></text></g><g><title>0x7fde44c8be4e (libm-2.29.so) (1 samples, 0.37%)</title><rect x="846" y="356" width="4" height="15" fill="rgb(239,15,26)"/><text x="849.00" y="366.50"></text></g><g><title>0x7fde44c8be71 (libm-2.29.so) (2 samples, 0.74%)</title><rect x="850" y="356" width="9" height="15" fill="rgb(239,75,17)"/><text x="853.00" y="366.50"></text></g><g><title>0x7fde44c8be96 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="859" y="356" width="4" height="15" fill="rgb(211,121,6)"/><text x="862.00" y="366.50"></text></g><g><title>0x7fde26f33214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.69%)</title><rect x="824" y="324" width="43" height="15" fill="rgb(238,133,32)"/><text x="827.00" y="334.50">0x7f..</text></g><g><title>expf (libm-2.29.so) (8 samples, 2.95%)</title><rect x="832" y="340" width="35" height="15" fill="rgb(242,151,46)"/><text x="835.00" y="350.50">ex..</text></g><g><title>0x7fde44c8bea6 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="863" y="356" width="4" height="15" fill="rgb(250,207,52)"/><text x="866.00" y="366.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 5.17%)</title><rect x="819" y="292" width="61" height="15" fill="rgb(225,164,32)"/><text x="822.00" y="302.50">trivia..</text></g><g><title>0x7fde26f1133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.80%)</title><rect x="824" y="308" width="56" height="15" fill="rgb(247,127,19)"/><text x="827.00" y="318.50">0x7fd..</text></g><g><title>0x7fde26f33228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.11%)</title><rect x="867" y="324" width="13" height="15" fill="rgb(209,110,25)"/><text x="870.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (17 samples, 6.27%)</title><rect x="811" y="228" width="74" height="15" fill="rgb(241,77,0)"/><text x="814.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 5.90%)</title><rect x="815" y="244" width="70" height="15" fill="rgb(206,137,2)"/><text x="818.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 5.90%)</title><rect x="815" y="260" width="70" height="15" fill="rgb(253,12,38)"/><text x="818.00" y="270.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 5.54%)</title><rect x="819" y="276" width="66" height="15" fill="rgb(235,107,3)"/><text x="822.00" y="286.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.37%)</title><rect x="880" y="292" width="5" height="15" fill="rgb(215,175,27)"/><text x="883.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.37%)</title><rect x="889" y="260" width="4" height="15" fill="rgb(211,178,43)"/><text x="892.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.37%)</title><rect x="889" y="276" width="4" height="15" fill="rgb(244,90,42)"/><text x="892.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.37%)</title><rect x="889" y="292" width="4" height="15" fill="rgb(243,7,1)"/><text x="892.00" y="302.50"></text></g><g><title>0x7fde44beaff0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="893" y="292" width="5" height="15" fill="rgb(253,12,27)"/><text x="896.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.37%)</title><rect x="898" y="308" width="4" height="15" fill="rgb(244,203,54)"/><text x="901.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.37%)</title><rect x="898" y="324" width="4" height="15" fill="rgb(245,2,47)"/><text x="901.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.37%)</title><rect x="898" y="340" width="4" height="15" fill="rgb(243,20,44)"/><text x="901.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (43 samples, 15.87%)</title><rect x="719" y="196" width="187" height="15" fill="rgb(252,222,22)"/><text x="722.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 15.87%)</title><rect x="719" y="212" width="187" height="15" fill="rgb(242,226,52)"/><text x="722.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 1.85%)</title><rect x="885" y="228" width="21" height="15" fill="rgb(219,200,32)"/><text x="888.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 1.48%)</title><rect x="889" y="244" width="17" height="15" fill="rgb(244,21,49)"/><text x="892.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.11%)</title><rect x="893" y="260" width="13" height="15" fill="rgb(227,10,12)"/><text x="896.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 1.11%)</title><rect x="893" y="276" width="13" height="15" fill="rgb(249,206,32)"/><text x="896.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.74%)</title><rect x="898" y="292" width="8" height="15" fill="rgb(216,4,7)"/><text x="901.00" y="302.50"></text></g><g><title>array_argmax (methods.c:303) (1 samples, 0.37%)</title><rect x="902" y="308" width="4" height="15" fill="rgb(244,138,11)"/><text x="905.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c:861) (1 samples, 0.37%)</title><rect x="902" y="324" width="4" height="15" fill="rgb(235,114,42)"/><text x="905.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (72 samples, 26.57%)</title><rect x="602" y="180" width="313" height="15" fill="rgb(251,193,5)"/><text x="605.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.74%)</title><rect x="906" y="196" width="9" height="15" fill="rgb(221,227,10)"/><text x="909.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:45) (80 samples, 29.52%)</title><rect x="571" y="52" width="349" height="15" fill="rgb(231,45,54)"/><text x="574.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:44) (80 samples, 29.52%)</title><rect x="571" y="68" width="349" height="15" fill="rgb(230,74,2)"/><text x="574.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (79 samples, 29.15%)</title><rect x="576" y="84" width="344" height="15" fill="rgb(231,218,39)"/><text x="579.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (77 samples, 28.41%)</title><rect x="584" y="100" width="336" height="15" fill="rgb(253,99,4)"/><text x="587.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (77 samples, 28.41%)</title><rect x="584" y="116" width="336" height="15" fill="rgb(239,37,54)"/><text x="587.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (77 samples, 28.41%)</title><rect x="584" y="132" width="336" height="15" fill="rgb(242,149,13)"/><text x="587.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (76 samples, 28.04%)</title><rect x="589" y="148" width="331" height="15" fill="rgb(234,95,51)"/><text x="592.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (76 samples, 28.04%)</title><rect x="589" y="164" width="331" height="15" fill="rgb(247,150,25)"/><text x="592.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.37%)</title><rect x="915" y="180" width="5" height="15" fill="rgb(229,73,0)"/><text x="918.00" y="190.50"></text></g><g><title>0x7fde053b5ff9 (?) (1 samples, 0.37%)</title><rect x="920" y="212" width="4" height="15" fill="rgb(233,97,21)"/><text x="923.00" y="222.50"></text></g><g><title>0x7fde053b0ef6 (?) (1 samples, 0.37%)</title><rect x="920" y="228" width="4" height="15" fill="rgb(238,164,44)"/><text x="923.00" y="238.50"></text></g><g><title>0x7fde053a5962 (?) (1 samples, 0.37%)</title><rect x="920" y="244" width="4" height="15" fill="rgb(218,178,9)"/><text x="923.00" y="254.50"></text></g><g><title>0x7fde053d97a7 (?) (1 samples, 0.37%)</title><rect x="920" y="260" width="4" height="15" fill="rgb(218,122,40)"/><text x="923.00" y="270.50"></text></g><g><title>0x7fde053d9379 (?) (1 samples, 0.37%)</title><rect x="920" y="276" width="4" height="15" fill="rgb(247,218,41)"/><text x="923.00" y="286.50"></text></g><g><title>0x7fde058378b8 (?) (1 samples, 0.37%)</title><rect x="920" y="292" width="4" height="15" fill="rgb(250,196,49)"/><text x="923.00" y="302.50"></text></g><g><title>0x7fde05835c7f (?) (1 samples, 0.37%)</title><rect x="920" y="308" width="4" height="15" fill="rgb(212,170,13)"/><text x="923.00" y="318.50"></text></g><g><title>0x7fde0584899c (?) (1 samples, 0.37%)</title><rect x="920" y="324" width="4" height="15" fill="rgb(223,125,3)"/><text x="923.00" y="334.50"></text></g><g><title>0x7fde05537c5b (?) (1 samples, 0.37%)</title><rect x="920" y="340" width="4" height="15" fill="rgb(205,35,5)"/><text x="923.00" y="350.50"></text></g><g><title>0x7fde05533ee4 (?) (1 samples, 0.37%)</title><rect x="920" y="356" width="4" height="15" fill="rgb(233,64,38)"/><text x="923.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:18) (2 samples, 0.74%)</title><rect x="920" y="100" width="8" height="15" fill="rgb(229,124,4)"/><text x="923.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.74%)</title><rect x="920" y="116" width="8" height="15" fill="rgb(221,104,36)"/><text x="923.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.74%)</title><rect x="920" y="132" width="8" height="15" fill="rgb(236,142,27)"/><text x="923.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.74%)</title><rect x="920" y="148" width="8" height="15" fill="rgb(227,174,21)"/><text x="923.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.74%)</title><rect x="920" y="164" width="8" height="15" fill="rgb(224,197,15)"/><text x="923.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.74%)</title><rect x="920" y="180" width="8" height="15" fill="rgb(232,17,53)"/><text x="923.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.74%)</title><rect x="920" y="196" width="8" height="15" fill="rgb(240,178,9)"/><text x="923.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="924" y="212" width="4" height="15" fill="rgb(236,192,17)"/><text x="927.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="924" y="228" width="4" height="15" fill="rgb(221,11,24)"/><text x="927.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="924" y="244" width="4" height="15" fill="rgb(243,163,19)"/><text x="927.00" y="254.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="924" y="260" width="4" height="15" fill="rgb(206,55,35)"/><text x="927.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.37%)</title><rect x="924" y="276" width="4" height="15" fill="rgb(215,191,27)"/><text x="927.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.37%)</title><rect x="924" y="292" width="4" height="15" fill="rgb(248,142,4)"/><text x="927.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.37%)</title><rect x="928" y="116" width="5" height="15" fill="rgb(206,100,48)"/><text x="931.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.37%)</title><rect x="928" y="132" width="5" height="15" fill="rgb(230,183,31)"/><text x="931.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.37%)</title><rect x="928" y="148" width="5" height="15" fill="rgb(234,140,0)"/><text x="931.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.37%)</title><rect x="928" y="164" width="5" height="15" fill="rgb(239,38,32)"/><text x="931.00" y="174.50"></text></g><g><title>0x7fde44b0ceb0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="928" y="180" width="5" height="15" fill="rgb(234,36,2)"/><text x="931.00" y="190.50"></text></g><g><title>0x7fde44b0bba4 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="928" y="196" width="5" height="15" fill="rgb(242,48,3)"/><text x="931.00" y="206.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.37%)</title><rect x="933" y="164" width="4" height="15" fill="rgb(222,50,25)"/><text x="936.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.37%)</title><rect x="937" y="196" width="4" height="15" fill="rgb(211,22,10)"/><text x="940.00" y="206.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="941" y="260" width="5" height="15" fill="rgb(251,168,38)"/><text x="944.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="941" y="276" width="5" height="15" fill="rgb(240,214,12)"/><text x="944.00" y="286.50"></text></g><g><title>0x7fde44b2cdb3 (libc-2.29.so) (3 samples, 1.11%)</title><rect x="1063" y="372" width="13" height="15" fill="rgb(219,114,16)"/><text x="1066.00" y="382.50"></text></g><g><title>0x7fde44c8be00 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="1076" y="372" width="5" height="15" fill="rgb(251,24,45)"/><text x="1079.00" y="382.50"></text></g><g><title>0x7fde44c8be14 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="1081" y="372" width="4" height="15" fill="rgb(242,90,50)"/><text x="1084.00" y="382.50"></text></g><g><title>0x7fde44c8be17 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="1085" y="372" width="4" height="15" fill="rgb(218,208,30)"/><text x="1088.00" y="382.50"></text></g><g><title>0x7fde44c8be86 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="1089" y="372" width="5" height="15" fill="rgb(235,198,31)"/><text x="1092.00" y="382.50"></text></g><g><title>0x7fde44c8be96 (libm-2.29.so) (1 samples, 0.37%)</title><rect x="1094" y="372" width="4" height="15" fill="rgb(237,134,33)"/><text x="1097.00" y="382.50"></text></g><g><title>0x7fde44c8be9e (libm-2.29.so) (2 samples, 0.74%)</title><rect x="1098" y="372" width="9" height="15" fill="rgb(221,166,26)"/><text x="1101.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 14.39%)</title><rect x="946" y="340" width="169" height="15" fill="rgb(238,83,15)"/><text x="949.00" y="350.50">onnxruntime::ml::Line..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.75%)</title><rect x="1024" y="356" width="91" height="15" fill="rgb(230,93,30)"/><text x="1027.00" y="366.50">onnxruntim..</text></g><g><title>0x7fde44c8bea2 (libm-2.29.so) (2 samples, 0.74%)</title><rect x="1107" y="372" width="8" height="15" fill="rgb(225,194,53)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 19.56%)</title><rect x="946" y="260" width="230" height="15" fill="rgb(236,59,35)"/><text x="949.00" y="270.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 19.56%)</title><rect x="946" y="276" width="230" height="15" fill="rgb(226,154,8)"/><text x="949.00" y="286.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 19.56%)</title><rect x="946" y="292" width="230" height="15" fill="rgb(211,171,44)"/><text x="949.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 19.56%)</title><rect x="946" y="308" width="230" height="15" fill="rgb(218,86,10)"/><text x="949.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 19.56%)</title><rect x="946" y="324" width="230" height="15" fill="rgb(223,182,27)"/><text x="949.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.17%)</title><rect x="1115" y="340" width="61" height="15" fill="rgb(225,92,32)"/><text x="1118.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.17%)</title><rect x="1115" y="356" width="61" height="15" fill="rgb(225,155,17)"/><text x="1118.00" y="366.50">onnxru..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1176" y="260" width="9" height="15" fill="rgb(238,46,34)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1176" y="276" width="9" height="15" fill="rgb(226,64,15)"/><text x="1179.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1181" y="292" width="4" height="15" fill="rgb(221,125,18)"/><text x="1184.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1181" y="308" width="4" height="15" fill="rgb(216,5,19)"/><text x="1184.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1181" y="324" width="4" height="15" fill="rgb(218,199,50)"/><text x="1184.00" y="334.50"></text></g><g><title>all (271 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,36,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:52) (62 samples, 22.88%)</title><rect x="920" y="52" width="270" height="15" fill="rgb(229,55,18)"/><text x="923.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_l..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:51) (62 samples, 22.88%)</title><rect x="920" y="68" width="270" height="15" fill="rgb(212,173,22)"/><text x="923.00" y="78.50">profile_ort (bench_LogisticRegressio..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (62 samples, 22.88%)</title><rect x="920" y="84" width="270" height="15" fill="rgb(217,206,52)"/><text x="923.00" y="94.50">setup_profile (bench_LogisticRegress..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (60 samples, 22.14%)</title><rect x="928" y="100" width="262" height="15" fill="rgb(242,219,27)"/><text x="931.00" y="110.50">profile (bench_LogisticRegression_l..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (59 samples, 21.77%)</title><rect x="933" y="116" width="257" height="15" fill="rgb(223,81,28)"/><text x="936.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (59 samples, 21.77%)</title><rect x="933" y="132" width="257" height="15" fill="rgb(238,212,47)"/><text x="936.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (59 samples, 21.77%)</title><rect x="933" y="148" width="257" height="15" fill="rgb(235,112,1)"/><text x="936.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (58 samples, 21.40%)</title><rect x="937" y="164" width="253" height="15" fill="rgb(247,221,31)"/><text x="940.00" y="174.50">_run_whole_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (58 samples, 21.40%)</title><rect x="937" y="180" width="253" height="15" fill="rgb(246,108,43)"/><text x="940.00" y="190.50">run (mlprodict/onnxrt/ops_whole/s..</text></g><g><title>run (onnxruntime/capi/session.py:136) (57 samples, 21.03%)</title><rect x="941" y="196" width="249" height="15" fill="rgb(214,40,15)"/><text x="944.00" y="206.50">run (onnxruntime/capi/session.py:..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 21.03%)</title><rect x="941" y="212" width="249" height="15" fill="rgb(232,6,38)"/><text x="944.00" y="222.50">pybind11::cpp_function::dispatche..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 21.03%)</title><rect x="941" y="228" width="249" height="15" fill="rgb(229,59,23)"/><text x="944.00" y="238.50">void pybind11::cpp_function::init..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 21.03%)</title><rect x="941" y="244" width="249" height="15" fill="rgb(236,35,46)"/><text x="944.00" y="254.50">onnxruntime::python::addObjectMet..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(244,36,26)"/><text x="1188.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(239,169,2)"/><text x="1188.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(236,140,1)"/><text x="1188.00" y="302.50"></text></g></g></svg>